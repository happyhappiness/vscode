Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/abspath.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/abspath.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/abspath.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/abspath.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/advice.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/advice.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/advice.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/advice.c	2015-05-01 03:12:02.000000000 +0800
@@ -102,10 +102,10 @@
 	"Note: checking out '%s'.\n\n"
 	"You are in 'detached HEAD' state. You can look around, make experimental\n"
 	"changes and commit them, and you can discard any commits you make in this\n"
 	"state without impacting any branches by performing another checkout.\n\n"
 	"If you want to create a new branch to retain commits you create, you may\n"
 	"do so (now or later) by using -b with the checkout command again. Example:\n\n"
-	"  git checkout -b new_branch_name\n\n";
+	"  git checkout -b <new-branch-name>\n\n";
 
 	fprintf(stderr, fmt, new_name);
 }
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/advice.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/advice.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/advice.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/advice.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/alias.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/alias.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/alias.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/alias.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/alloc.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/alloc.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/alloc.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/alloc.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/archive.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/archive.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/archive.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/archive.c	2015-05-01 03:12:02.000000000 +0800
@@ -5,15 +5,15 @@
 #include "archive.h"
 #include "parse-options.h"
 #include "unpack-trees.h"
 #include "dir.h"
 
 static char const * const archive_usage[] = {
-	N_("git archive [options] <tree-ish> [<path>...]"),
+	N_("git archive [<options>] <tree-ish> [<path>...]"),
 	N_("git archive --list"),
-	N_("git archive --remote <repo> [--exec <cmd>] [options] <tree-ish> [<path>...]"),
+	N_("git archive --remote <repo> [--exec <cmd>] [<options>] <tree-ish> [<path>...]"),
 	N_("git archive --remote <repo> [--exec <cmd>] --list"),
 	NULL
 };
 
 static const struct archiver **archivers;
 static int nr_archivers;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/archive.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/archive.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/archive.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/archive.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/archive-tar.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/archive-tar.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/archive-tar.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/archive-tar.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/archive-zip.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/archive-zip.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/archive-zip.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/archive-zip.c	2015-05-01 03:12:02.000000000 +0800
@@ -2,12 +2,14 @@
  * Copyright (c) 2006 Rene Scharfe
  */
 #include "cache.h"
 #include "archive.h"
 #include "streaming.h"
 #include "utf8.h"
+#include "userdiff.h"
+#include "xdiff-interface.h"
 
 static int zip_date;
 static int zip_time;
 
 static unsigned char *zip_dir;
 static unsigned int zip_dir_size;
@@ -185,12 +187,22 @@
 			return 1;
 		if (!isascii(c))
 			return 0;
 	}
 }
 
+static int entry_is_binary(const char *path, const void *buffer, size_t size)
+{
+	struct userdiff_driver *driver = userdiff_find_by_path(path);
+	if (!driver)
+		driver = userdiff_find_by_name("default");
+	if (driver->binary != -1)
+		return driver->binary;
+	return buffer_is_binary(buffer, size);
+}
+
 #define STREAM_BUFFER_SIZE (1024 * 16)
 
 static int write_zip_entry(struct archiver_args *args,
 			   const unsigned char *sha1,
 			   const char *path, size_t pathlen,
 			   unsigned int mode)
@@ -206,12 +218,14 @@
 	unsigned char *out;
 	void *deflated = NULL;
 	void *buffer;
 	struct git_istream *stream = NULL;
 	unsigned long flags = 0;
 	unsigned long size;
+	int is_binary = -1;
+	const char *path_without_prefix = path + args->baselen;
 
 	crc = crc32(0, NULL, 0);
 
 	if (!has_only_ascii(path)) {
 		if (is_utf8(path))
 			flags |= ZIP_UTF8;
@@ -252,12 +266,14 @@
 			buffer = sha1_file_to_archive(args, path, sha1, mode,
 						      &type, &size);
 			if (!buffer)
 				return error("cannot read %s",
 					     sha1_to_hex(sha1));
 			crc = crc32(crc, buffer, size);
+			is_binary = entry_is_binary(path_without_prefix,
+						    buffer, size);
 			out = buffer;
 		}
 		compressed_size = (method == 0) ? size : 0;
 	} else {
 		return error("unsupported file mode: 0%o (SHA1: %s)", mode,
 				sha1_to_hex(sha1));
@@ -296,13 +312,12 @@
 	copy_le16(dirent.mdate, zip_date);
 	set_zip_dir_data_desc(&dirent, size, compressed_size, crc);
 	copy_le16(dirent.filename_length, pathlen);
 	copy_le16(dirent.extra_length, ZIP_EXTRA_MTIME_SIZE);
 	copy_le16(dirent.comment_length, 0);
 	copy_le16(dirent.disk, 0);
-	copy_le16(dirent.attr1, 0);
 	copy_le32(dirent.attr2, attr2);
 	copy_le32(dirent.offset, zip_offset);
 
 	copy_le32(header.magic, 0x04034b50);
 	copy_le16(header.version, 10);
 	copy_le16(header.flags, flags);
@@ -324,12 +339,15 @@
 
 		for (;;) {
 			readlen = read_istream(stream, buf, sizeof(buf));
 			if (readlen <= 0)
 				break;
 			crc = crc32(crc, buf, readlen);
+			if (is_binary == -1)
+				is_binary = entry_is_binary(path_without_prefix,
+							    buf, readlen);
 			write_or_die(1, buf, readlen);
 		}
 		close_istream(stream);
 		if (readlen)
 			return readlen;
 
@@ -356,12 +374,15 @@
 
 		for (;;) {
 			readlen = read_istream(stream, buf, sizeof(buf));
 			if (readlen <= 0)
 				break;
 			crc = crc32(crc, buf, readlen);
+			if (is_binary == -1)
+				is_binary = entry_is_binary(path_without_prefix,
+							    buf, readlen);
 
 			zstream.next_in = buf;
 			zstream.avail_in = readlen;
 			result = git_deflate(&zstream, 0);
 			if (result != Z_OK)
 				die("deflate error (%d)", result);
@@ -400,12 +421,14 @@
 		zip_offset += compressed_size;
 	}
 
 	free(deflated);
 	free(buffer);
 
+	copy_le16(dirent.attr1, !is_binary);
+
 	memcpy(zip_dir + zip_dir_offset, &dirent, ZIP_DIR_HEADER_SIZE);
 	zip_dir_offset += ZIP_DIR_HEADER_SIZE;
 	memcpy(zip_dir + zip_dir_offset, path, pathlen);
 	zip_dir_offset += pathlen;
 	memcpy(zip_dir + zip_dir_offset, &extra, ZIP_EXTRA_MTIME_SIZE);
 	zip_dir_offset += ZIP_EXTRA_MTIME_SIZE;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/archive-zip.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/archive-zip.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/archive-zip.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/archive-zip.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/argv-array.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/argv-array.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/argv-array.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/argv-array.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/attr.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/attr.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/attr.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/attr.c	2015-05-01 03:12:02.000000000 +0800
@@ -29,15 +29,18 @@
 #endif
 
 struct git_attr {
 	struct git_attr *next;
 	unsigned h;
 	int attr_nr;
+	int maybe_macro;
+	int maybe_real;
 	char name[FLEX_ARRAY];
 };
 static int attr_nr;
+static int cannot_trust_maybe_real;
 
 static struct git_attr_check *check_all_attr;
 static struct git_attr *(git_attr_hash[HASHSIZE]);
 
 char *git_attr_name(struct git_attr *attr)
 {
@@ -92,12 +95,14 @@
 	a = xmalloc(sizeof(*a) + len + 1);
 	memcpy(a->name, name, len);
 	a->name[len] = 0;
 	a->h = hval;
 	a->next = git_attr_hash[pos];
 	a->attr_nr = attr_nr++;
+	a->maybe_macro = 0;
+	a->maybe_real = 0;
 	git_attr_hash[pos] = a;
 
 	REALLOC_ARRAY(check_all_attr, attr_nr);
 	check_all_attr[a->attr_nr].attr = a;
 	check_all_attr[a->attr_nr].value = ATTR__UNKNOWN;
 	return a;
@@ -241,15 +246,16 @@
 	}
 
 	res = xcalloc(1,
 		      sizeof(*res) +
 		      sizeof(struct attr_state) * num_attr +
 		      (is_macro ? 0 : namelen + 1));
-	if (is_macro)
+	if (is_macro) {
 		res->u.attr = git_attr_internal(name, namelen);
-	else {
+		res->u.attr->maybe_macro = 1;
+	} else {
 		char *p = (char *)&(res->state[num_attr]);
 		memcpy(p, name, namelen);
 		res->u.pat.pattern = p;
 		parse_exclude_pattern(&res->u.pat.pattern,
 				      &res->u.pat.patternlen,
 				      &res->u.pat.flags,
@@ -263,12 +269,16 @@
 	res->is_macro = is_macro;
 	res->num_attr = num_attr;
 
 	/* Second pass to fill the attr_states */
 	for (cp = states, i = 0; *cp; i++) {
 		cp = parse_attr(src, lineno, cp, &(res->state[i]));
+		if (!is_macro)
+			res->state[i].attr->maybe_real = 1;
+		if (res->state[i].attr->maybe_macro)
+			cannot_trust_maybe_real = 1;
 	}
 
 	return res;
 }
 
 /*
@@ -678,41 +688,45 @@
 				 &a->u.pat, base, stk->originlen))
 			rem = fill_one("fill", a, rem);
 	}
 	return rem;
 }
 
-static int macroexpand_one(int attr_nr, int rem)
+static int macroexpand_one(int nr, int rem)
 {
 	struct attr_stack *stk;
 	struct match_attr *a = NULL;
 	int i;
 
-	if (check_all_attr[attr_nr].value != ATTR__TRUE)
+	if (check_all_attr[nr].value != ATTR__TRUE ||
+	    !check_all_attr[nr].attr->maybe_macro)
 		return rem;
 
 	for (stk = attr_stack; !a && stk; stk = stk->prev)
 		for (i = stk->num_matches - 1; !a && 0 <= i; i--) {
 			struct match_attr *ma = stk->attrs[i];
 			if (!ma->is_macro)
 				continue;
-			if (ma->u.attr->attr_nr == attr_nr)
+			if (ma->u.attr->attr_nr == nr)
 				a = ma;
 		}
 
 	if (a)
 		rem = fill_one("expand", a, rem);
 
 	return rem;
 }
 
 /*
- * Collect all attributes for path into the array pointed to by
- * check_all_attr.
+ * Collect attributes for path into the array pointed to by
+ * check_all_attr. If num is non-zero, only attributes in check[] are
+ * collected. Otherwise all attributes are collected.
  */
-static void collect_all_attrs(const char *path)
+static void collect_some_attrs(const char *path, int num,
+			       struct git_attr_check *check)
+
 {
 	struct attr_stack *stk;
 	int i, pathlen, rem, dirlen;
 	const char *cp, *last_slash = NULL;
 	int basename_offset;
 
@@ -729,23 +743,36 @@
 		dirlen = 0;
 	}
 
 	prepare_attr_stack(path, dirlen);
 	for (i = 0; i < attr_nr; i++)
 		check_all_attr[i].value = ATTR__UNKNOWN;
+	if (num && !cannot_trust_maybe_real) {
+		rem = 0;
+		for (i = 0; i < num; i++) {
+			if (!check[i].attr->maybe_real) {
+				struct git_attr_check *c;
+				c = check_all_attr + check[i].attr->attr_nr;
+				c->value = ATTR__UNSET;
+				rem++;
+			}
+		}
+		if (rem == num)
+			return;
+	}
 
 	rem = attr_nr;
 	for (stk = attr_stack; 0 < rem && stk; stk = stk->prev)
 		rem = fill(path, pathlen, basename_offset, stk, rem);
 }
 
 int git_check_attr(const char *path, int num, struct git_attr_check *check)
 {
 	int i;
 
-	collect_all_attrs(path);
+	collect_some_attrs(path, num, check);
 
 	for (i = 0; i < num; i++) {
 		const char *value = check_all_attr[check[i].attr->attr_nr].value;
 		if (value == ATTR__UNKNOWN)
 			value = ATTR__UNSET;
 		check[i].value = value;
@@ -755,13 +782,13 @@
 }
 
 int git_all_attrs(const char *path, int *num, struct git_attr_check **check)
 {
 	int i, count, j;
 
-	collect_all_attrs(path);
+	collect_some_attrs(path, 0, NULL);
 
 	/* Count the number of attributes that are set. */
 	count = 0;
 	for (i = 0; i < attr_nr; i++) {
 		const char *value = check_all_attr[i].value;
 		if (value != ATTR__UNSET && value != ATTR__UNKNOWN)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/attr.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/attr.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/attr.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/attr.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/base85.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/base85.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/base85.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/base85.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/git /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/git
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/git	2017-10-10 12:32:03.230631377 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/git	2017-10-10 13:04:32.738559928 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and git.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and git.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/git" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/git-cvsserver /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/git-cvsserver
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/git-cvsserver	2017-10-10 12:32:03.242631376 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/git-cvsserver	2017-10-10 13:04:32.750559928 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and git-cvsserver.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and git-cvsserver.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/git-cvsserver" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/git-receive-pack /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/git-receive-pack
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/git-receive-pack	2017-10-10 12:32:03.234631377 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/git-receive-pack	2017-10-10 13:04:32.742559928 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and git-receive-pack.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and git-receive-pack.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/git-receive-pack" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/git-shell /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/git-shell
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/git-shell	2017-10-10 12:32:03.238631376 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/git-shell	2017-10-10 13:04:32.746559928 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and git-shell.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and git-shell.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/git-shell" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/git-upload-archive /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/git-upload-archive
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/git-upload-archive	2017-10-10 12:32:03.238631376 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/git-upload-archive	2017-10-10 13:04:32.746559928 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and git-upload-archive.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and git-upload-archive.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/git-upload-archive" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/git-upload-pack /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/git-upload-pack
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/git-upload-pack	2017-10-10 12:32:03.234631377 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/git-upload-pack	2017-10-10 13:04:32.738559928 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and git-upload-pack.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and git-upload-pack.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/git-upload-pack" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-chmtime /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-chmtime
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-chmtime	2017-10-10 12:32:03.246631376 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-chmtime	2017-10-10 13:04:32.754559928 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-chmtime.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-chmtime.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-chmtime" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-config /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-config
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-config	2017-10-10 12:32:03.250631376 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-config	2017-10-10 13:04:32.758559928 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-config.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-config.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-config" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-ctype /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-ctype
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-ctype	2017-10-10 12:32:03.246631376 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-ctype	2017-10-10 13:04:32.754559928 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-ctype.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-ctype.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-ctype" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-date /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-date
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-date	2017-10-10 12:32:03.254631376 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-date	2017-10-10 13:04:32.762559928 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-date.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-date.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-date" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-delta /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-delta
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-delta	2017-10-10 12:32:03.254631376 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-delta	2017-10-10 13:04:32.762559928 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-delta.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-delta.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-delta" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-dump-cache-tree /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-dump-cache-tree
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-dump-cache-tree	2017-10-10 12:32:03.258631376 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-dump-cache-tree	2017-10-10 13:04:32.766559927 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-dump-cache-tree.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-dump-cache-tree.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-dump-cache-tree" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-dump-split-index /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-dump-split-index
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-dump-split-index	2017-10-10 12:32:03.258631376 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-dump-split-index	2017-10-10 13:04:32.766559927 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-dump-split-index.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-dump-split-index.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-dump-split-index" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-genrandom /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-genrandom
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-genrandom	2017-10-10 12:32:03.262631376 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-genrandom	2017-10-10 13:04:32.770559927 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-genrandom.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-genrandom.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-genrandom" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-hashmap /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-hashmap
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-hashmap	2017-10-10 12:32:03.266631375 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-hashmap	2017-10-10 13:04:32.770559927 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-hashmap.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-hashmap.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-hashmap" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-index-version /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-index-version
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-index-version	2017-10-10 12:32:03.266631375 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-index-version	2017-10-10 13:04:32.774559927 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-index-version.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-index-version.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-index-version" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-line-buffer /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-line-buffer
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-line-buffer	2017-10-10 12:32:03.270631375 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-line-buffer	2017-10-10 13:04:32.778559927 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-line-buffer.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-line-buffer.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-line-buffer" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-match-trees /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-match-trees
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-match-trees	2017-10-10 12:32:03.270631375 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-match-trees	2017-10-10 13:04:32.778559927 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-match-trees.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-match-trees.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-match-trees" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-mergesort /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-mergesort
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-mergesort	2017-10-10 12:32:03.274631375 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-mergesort	2017-10-10 13:04:32.782559927 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-mergesort.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-mergesort.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-mergesort" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-mktemp /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-mktemp
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-mktemp	2017-10-10 12:32:03.274631375 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-mktemp	2017-10-10 13:04:32.782559927 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-mktemp.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-mktemp.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-mktemp" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-parse-options /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-parse-options
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-parse-options	2017-10-10 12:32:03.278631375 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-parse-options	2017-10-10 13:04:32.786559927 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-parse-options.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-parse-options.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-parse-options" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-path-utils /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-path-utils
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-path-utils	2017-10-10 12:32:03.278631375 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-path-utils	2017-10-10 13:04:32.786559927 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-path-utils.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-path-utils.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-path-utils" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-prio-queue /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-prio-queue
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-prio-queue	2017-10-10 12:32:03.282631375 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-prio-queue	2017-10-10 13:04:32.790559926 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-prio-queue.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-prio-queue.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-prio-queue" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-read-cache /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-read-cache
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-read-cache	2017-10-10 12:32:03.286631375 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-read-cache	2017-10-10 13:04:32.794559926 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-read-cache.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-read-cache.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-read-cache" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-regex /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-regex
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-regex	2017-10-10 12:32:03.286631375 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-regex	2017-10-10 13:04:32.794559926 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-regex.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-regex.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-regex" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-revision-walking /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-revision-walking
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-revision-walking	2017-10-10 12:32:03.290631375 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-revision-walking	2017-10-10 13:04:32.798559926 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-revision-walking.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-revision-walking.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-revision-walking" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-run-command /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-run-command
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-run-command	2017-10-10 12:32:03.290631375 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-run-command	2017-10-10 13:04:32.798559926 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-run-command.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-run-command.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-run-command" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-scrap-cache-tree /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-scrap-cache-tree
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-scrap-cache-tree	2017-10-10 12:32:03.294631374 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-scrap-cache-tree	2017-10-10 13:04:32.802559926 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-scrap-cache-tree.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-scrap-cache-tree.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-scrap-cache-tree" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-sha1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-sha1
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-sha1	2017-10-10 12:32:03.294631374 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-sha1	2017-10-10 13:04:32.806559926 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-sha1.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-sha1.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-sha1" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-sha1-array /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-sha1-array
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-sha1-array	2017-10-10 12:32:03.298631374 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-sha1-array	2017-10-10 13:04:32.806559926 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-sha1-array.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-sha1-array.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-sha1-array" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-sigchain /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-sigchain
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-sigchain	2017-10-10 12:32:03.302631374 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-sigchain	2017-10-10 13:04:32.810559926 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-sigchain.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-sigchain.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-sigchain" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-string-list /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-string-list
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-string-list	2017-10-10 12:32:03.302631374 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-string-list	2017-10-10 13:04:32.810559926 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-string-list.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-string-list.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-string-list" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-subprocess /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-subprocess
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-subprocess	2017-10-10 12:32:03.306631374 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-subprocess	2017-10-10 13:04:32.814559926 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-subprocess.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-subprocess.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-subprocess" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-svn-fe /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-svn-fe
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-svn-fe	2017-10-10 12:32:03.306631374 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-svn-fe	2017-10-10 13:04:32.814559926 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-svn-fe.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-svn-fe.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-svn-fe" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-urlmatch-normalization /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-urlmatch-normalization
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-urlmatch-normalization	2017-10-10 12:32:03.310631374 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-urlmatch-normalization	2017-10-10 13:04:32.818559925 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-urlmatch-normalization.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-urlmatch-normalization.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-urlmatch-normalization" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-wildmatch /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-wildmatch
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers/test-wildmatch	2017-10-10 12:32:03.314631374 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers/test-wildmatch	2017-10-10 13:04:32.818559925 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10 and test-wildmatch.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0 and test-wildmatch.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-wildmatch" "$@"
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bisect.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bisect.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bisect.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bisect.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/blob.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/blob.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/blob.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/blob.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/block-sha1/sha1.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/block-sha1/sha1.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/block-sha1/sha1.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/block-sha1/sha1.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/branch.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/branch.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/branch.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/branch.c	2015-05-01 03:12:02.000000000 +0800
@@ -281,14 +281,15 @@
 	if (!dont_change_ref) {
 		struct ref_transaction *transaction;
 		struct strbuf err = STRBUF_INIT;
 
 		transaction = ref_transaction_begin(&err);
 		if (!transaction ||
-		    ref_transaction_update(transaction, ref.buf, sha1,
-					   null_sha1, 0, !forcing, msg, &err) ||
+		    ref_transaction_update(transaction, ref.buf,
+					   sha1, forcing ? NULL : null_sha1,
+					   0, msg, &err) ||
 		    ref_transaction_commit(transaction, &err))
 			die("%s", err.buf);
 		ref_transaction_free(transaction);
 		strbuf_release(&err);
 	}
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/branch.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/branch.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/branch.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/branch.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/build_ir.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/build_ir.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/build_ir.sh	2017-10-10 12:32:03.334631373 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/build_ir.sh	2017-10-10 13:04:32.838559925 +0800
@@ -11,1562 +11,1562 @@
 	then
 		succ=`expr $succ + 1`;
 	fi
 	total=`expr $total + 1`;
 }
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential-store.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential-store.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential-store.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential-store.c.bc
 check
-echo "1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential-store.c to bc" >&2
+echo "1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential-store.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/abspath.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/abspath.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/abspath.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/abspath.c.bc
 check
-echo "2 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/abspath.c to bc" >&2
+echo "2 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/abspath.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/advice.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/advice.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/advice.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/advice.c.bc
 check
-echo "3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/advice.c to bc" >&2
+echo "3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/advice.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/alias.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/alias.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/alias.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/alias.c.bc
 check
-echo "4 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/alias.c to bc" >&2
+echo "4 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/alias.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/alloc.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/alloc.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/alloc.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/alloc.c.bc
 check
-echo "5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/alloc.c to bc" >&2
+echo "5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/alloc.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/archive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/archive.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/archive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/archive.c.bc
 check
-echo "6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/archive.c to bc" >&2
+echo "6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/archive.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/archive-tar.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/archive-tar.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/archive-tar.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/archive-tar.c.bc
 check
-echo "7 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/archive-tar.c to bc" >&2
+echo "7 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/archive-tar.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/archive-zip.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/archive-zip.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/archive-zip.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/archive-zip.c.bc
 check
-echo "8 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/archive-zip.c to bc" >&2
+echo "8 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/archive-zip.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/argv-array.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/argv-array.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/argv-array.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/argv-array.c.bc
 check
-echo "9 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/argv-array.c to bc" >&2
+echo "9 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/argv-array.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DETC_GITATTRIBUTES=\"/usr/local/etc/gitattributes\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/attr.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/attr.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DETC_GITATTRIBUTES=\"/usr/local/etc/gitattributes\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/attr.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/attr.c.bc
 check
-echo "10 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/attr.c to bc" >&2
+echo "10 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/attr.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/base85.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/base85.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/base85.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/base85.c.bc
 check
-echo "11 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/base85.c to bc" >&2
+echo "11 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/base85.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bisect.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bisect.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bisect.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bisect.c.bc
 check
-echo "12 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bisect.c to bc" >&2
+echo "12 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bisect.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/blob.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/blob.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/blob.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/blob.c.bc
 check
-echo "13 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/blob.c to bc" >&2
+echo "13 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/blob.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/branch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/branch.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/branch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/branch.c.bc
 check
-echo "14 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/branch.c to bc" >&2
+echo "14 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/branch.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bulk-checkin.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bulk-checkin.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bulk-checkin.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bulk-checkin.c.bc
 check
-echo "15 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bulk-checkin.c to bc" >&2
+echo "15 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bulk-checkin.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bundle.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bundle.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bundle.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bundle.c.bc
 check
-echo "16 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bundle.c to bc" >&2
+echo "16 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bundle.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/cache-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/cache-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/cache-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/cache-tree.c.bc
 check
-echo "17 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/cache-tree.c to bc" >&2
+echo "17 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/cache-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/color.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/color.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/color.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/color.c.bc
 check
-echo "18 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/color.c to bc" >&2
+echo "18 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/color.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/column.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/column.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/column.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/column.c.bc
 check
-echo "19 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/column.c to bc" >&2
+echo "19 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/column.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/combine-diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/combine-diff.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/combine-diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/combine-diff.c.bc
 check
-echo "20 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/combine-diff.c to bc" >&2
+echo "20 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/combine-diff.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/commit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/commit.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/commit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/commit.c.bc
 check
-echo "21 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/commit.c to bc" >&2
+echo "21 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/commit.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/compat/obstack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/compat/obstack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/compat/obstack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/compat/obstack.c.bc
 check
-echo "22 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/compat/obstack.c to bc" >&2
+echo "22 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/compat/obstack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/compat/terminal.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/compat/terminal.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/compat/terminal.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/compat/terminal.c.bc
 check
-echo "23 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/compat/terminal.c to bc" >&2
+echo "23 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/compat/terminal.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DETC_GITCONFIG=\"/usr/local/etc/gitconfig\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/config.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DETC_GITCONFIG=\"/usr/local/etc/gitconfig\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/config.c.bc
 check
-echo "24 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/config.c to bc" >&2
+echo "24 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/config.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/connect.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/connect.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/connect.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/connect.c.bc
 check
-echo "25 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/connect.c to bc" >&2
+echo "25 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/connect.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/connected.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/connected.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/connected.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/connected.c.bc
 check
-echo "26 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/connected.c to bc" >&2
+echo "26 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/connected.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/convert.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/convert.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/convert.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/convert.c.bc
 check
-echo "27 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/convert.c to bc" >&2
+echo "27 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/convert.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/copy.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/copy.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/copy.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/copy.c.bc
 check
-echo "28 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/copy.c to bc" >&2
+echo "28 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/copy.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential.c.bc
 check
-echo "29 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential.c to bc" >&2
+echo "29 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/csum-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/csum-file.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/csum-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/csum-file.c.bc
 check
-echo "30 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/csum-file.c to bc" >&2
+echo "30 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/csum-file.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ctype.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ctype.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ctype.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ctype.c.bc
 check
-echo "31 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ctype.c to bc" >&2
+echo "31 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ctype.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/date.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/date.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/date.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/date.c.bc
 check
-echo "32 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/date.c to bc" >&2
+echo "32 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/date.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/decorate.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/decorate.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/decorate.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/decorate.c.bc
 check
-echo "33 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/decorate.c to bc" >&2
+echo "33 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/decorate.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-break.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-break.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-break.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-break.c.bc
 check
-echo "34 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-break.c to bc" >&2
+echo "34 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-break.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-delta.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-delta.c.bc
 check
-echo "35 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-delta.c to bc" >&2
+echo "35 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-delta.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-order.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-order.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-order.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-order.c.bc
 check
-echo "36 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-order.c to bc" >&2
+echo "36 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-order.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-pickaxe.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-pickaxe.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-pickaxe.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-pickaxe.c.bc
 check
-echo "37 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-pickaxe.c to bc" >&2
+echo "37 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-pickaxe.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-rename.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-rename.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-rename.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-rename.c.bc
 check
-echo "38 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-rename.c to bc" >&2
+echo "38 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-rename.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff-delta.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff-delta.c.bc
 check
-echo "39 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff-delta.c to bc" >&2
+echo "39 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff-delta.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff-lib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff-lib.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff-lib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff-lib.c.bc
 check
-echo "40 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff-lib.c to bc" >&2
+echo "40 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff-lib.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff-no-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff-no-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff-no-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff-no-index.c.bc
 check
-echo "41 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff-no-index.c to bc" >&2
+echo "41 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff-no-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff.c.bc
 check
-echo "42 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff.c to bc" >&2
+echo "42 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/dir.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/dir.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/dir.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/dir.c.bc
 check
-echo "43 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/dir.c to bc" >&2
+echo "43 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/dir.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/editor.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/editor.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/editor.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/editor.c.bc
 check
-echo "44 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/editor.c to bc" >&2
+echo "44 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/editor.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/entry.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/entry.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/entry.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/entry.c.bc
 check
-echo "45 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/entry.c to bc" >&2
+echo "45 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/entry.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/environment.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/environment.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/environment.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/environment.c.bc
 check
-echo "46 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/environment.c to bc" >&2
+echo "46 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/environment.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ewah/bitmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ewah/bitmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ewah/bitmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ewah/bitmap.c.bc
 check
-echo "47 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ewah/bitmap.c to bc" >&2
+echo "47 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ewah/bitmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ewah/ewah_bitmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ewah/ewah_bitmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ewah/ewah_bitmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ewah/ewah_bitmap.c.bc
 check
-echo "48 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ewah/ewah_bitmap.c to bc" >&2
+echo "48 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ewah/ewah_bitmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ewah/ewah_io.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ewah/ewah_io.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ewah/ewah_io.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ewah/ewah_io.c.bc
 check
-echo "49 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ewah/ewah_io.c to bc" >&2
+echo "49 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ewah/ewah_io.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ewah/ewah_rlw.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ewah/ewah_rlw.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ewah/ewah_rlw.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ewah/ewah_rlw.c.bc
 check
-echo "50 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ewah/ewah_rlw.c to bc" >&2
+echo "50 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ewah/ewah_rlw.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_EXEC_PATH=\"/usr/local/libexec/git-core\" -DBINDIR=\"bin\" -DPREFIX=\"/usr/local\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/exec_cmd.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/exec_cmd.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_EXEC_PATH=\"/usr/local/libexec/git-core\" -DBINDIR=\"bin\" -DPREFIX=\"/usr/local\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/exec_cmd.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/exec_cmd.c.bc
 check
-echo "51 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/exec_cmd.c to bc" >&2
+echo "51 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/exec_cmd.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/fetch-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/fetch-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/fetch-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/fetch-pack.c.bc
 check
-echo "52 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/fetch-pack.c to bc" >&2
+echo "52 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/fetch-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/fsck.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/fsck.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/fsck.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/fsck.c.bc
 check
-echo "53 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/fsck.c to bc" >&2
+echo "53 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/fsck.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_LOCALE_PATH=\"/usr/local/share/locale\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gettext.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gettext.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_LOCALE_PATH=\"/usr/local/share/locale\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gettext.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gettext.c.bc
 check
-echo "54 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gettext.c to bc" >&2
+echo "54 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gettext.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gpg-interface.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gpg-interface.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gpg-interface.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gpg-interface.c.bc
 check
-echo "55 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gpg-interface.c to bc" >&2
+echo "55 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gpg-interface.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/graph.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/graph.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/graph.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/graph.c.bc
 check
-echo "56 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/graph.c to bc" >&2
+echo "56 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/graph.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/grep.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/grep.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/grep.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/grep.c.bc
 check
-echo "57 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/grep.c to bc" >&2
+echo "57 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/grep.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/hashmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/hashmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/hashmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/hashmap.c.bc
 check
-echo "58 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/hashmap.c to bc" >&2
+echo "58 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/hashmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/help.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/help.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/help.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/help.c.bc
 check
-echo "59 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/help.c to bc" >&2
+echo "59 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/help.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/hex.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/hex.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/hex.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/hex.c.bc
 check
-echo "60 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/hex.c to bc" >&2
+echo "60 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/hex.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ident.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ident.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ident.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ident.c.bc
 check
-echo "61 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ident.c to bc" >&2
+echo "61 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ident.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/kwset.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/kwset.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/kwset.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/kwset.c.bc
 check
-echo "62 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/kwset.c to bc" >&2
+echo "62 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/kwset.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/levenshtein.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/levenshtein.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/levenshtein.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/levenshtein.c.bc
 check
-echo "63 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/levenshtein.c to bc" >&2
+echo "63 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/levenshtein.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/line-log.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/line-log.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/line-log.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/line-log.c.bc
 check
-echo "64 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/line-log.c to bc" >&2
+echo "64 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/line-log.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/line-range.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/line-range.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/line-range.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/line-range.c.bc
 check
-echo "65 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/line-range.c to bc" >&2
+echo "65 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/line-range.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/list-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/list-objects.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/list-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/list-objects.c.bc
 check
-echo "66 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/list-objects.c to bc" >&2
+echo "66 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/list-objects.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ll-merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ll-merge.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ll-merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ll-merge.c.bc
 check
-echo "67 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ll-merge.c to bc" >&2
+echo "67 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ll-merge.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/lockfile.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/lockfile.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/lockfile.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/lockfile.c.bc
 check
-echo "68 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/lockfile.c to bc" >&2
+echo "68 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/lockfile.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/log-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/log-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/log-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/log-tree.c.bc
 check
-echo "69 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/log-tree.c to bc" >&2
+echo "69 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/log-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/mailmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/mailmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/mailmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/mailmap.c.bc
 check
-echo "70 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/mailmap.c to bc" >&2
+echo "70 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/mailmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/match-trees.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/match-trees.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/match-trees.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/match-trees.c.bc
 check
-echo "71 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/match-trees.c to bc" >&2
+echo "71 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/match-trees.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/merge.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/merge.c.bc
 check
-echo "72 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/merge.c to bc" >&2
+echo "72 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/merge.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/merge-blobs.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/merge-blobs.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/merge-blobs.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/merge-blobs.c.bc
 check
-echo "73 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/merge-blobs.c to bc" >&2
+echo "73 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/merge-blobs.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/merge-recursive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/merge-recursive.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/merge-recursive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/merge-recursive.c.bc
 check
-echo "74 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/merge-recursive.c to bc" >&2
+echo "74 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/merge-recursive.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/mergesort.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/mergesort.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/mergesort.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/mergesort.c.bc
 check
-echo "75 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/mergesort.c to bc" >&2
+echo "75 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/mergesort.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/name-hash.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/name-hash.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/name-hash.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/name-hash.c.bc
 check
-echo "76 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/name-hash.c to bc" >&2
+echo "76 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/name-hash.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes.c.bc
 check
-echo "77 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes.c to bc" >&2
+echo "77 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes-cache.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes-cache.c.bc
 check
-echo "78 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes-cache.c to bc" >&2
+echo "78 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes-cache.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes-merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes-merge.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes-merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes-merge.c.bc
 check
-echo "79 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes-merge.c to bc" >&2
+echo "79 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes-merge.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes-utils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes-utils.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes-utils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes-utils.c.bc
 check
-echo "80 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes-utils.c to bc" >&2
+echo "80 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes-utils.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/object.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/object.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/object.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/object.c.bc
 check
-echo "81 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/object.c to bc" >&2
+echo "81 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/object.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-bitmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-bitmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-bitmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-bitmap.c.bc
 check
-echo "82 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-bitmap.c to bc" >&2
+echo "82 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-bitmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-bitmap-write.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-bitmap-write.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-bitmap-write.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-bitmap-write.c.bc
 check
-echo "83 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-bitmap-write.c to bc" >&2
+echo "83 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-bitmap-write.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-check.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-check.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-check.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-check.c.bc
 check
-echo "84 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-check.c to bc" >&2
+echo "84 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-check.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-objects.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-objects.c.bc
 check
-echo "85 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-objects.c to bc" >&2
+echo "85 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-objects.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-revindex.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-revindex.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-revindex.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-revindex.c.bc
 check
-echo "86 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-revindex.c to bc" >&2
+echo "86 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-revindex.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-write.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-write.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-write.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-write.c.bc
 check
-echo "87 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-write.c to bc" >&2
+echo "87 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-write.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pager.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pager.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pager.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pager.c.bc
 check
-echo "88 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pager.c to bc" >&2
+echo "88 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pager.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/parse-options.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/parse-options.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/parse-options.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/parse-options.c.bc
 check
-echo "89 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/parse-options.c to bc" >&2
+echo "89 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/parse-options.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/parse-options-cb.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/parse-options-cb.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/parse-options-cb.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/parse-options-cb.c.bc
 check
-echo "90 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/parse-options-cb.c to bc" >&2
+echo "90 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/parse-options-cb.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/patch-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/patch-delta.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/patch-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/patch-delta.c.bc
 check
-echo "91 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/patch-delta.c to bc" >&2
+echo "91 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/patch-delta.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/patch-ids.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/patch-ids.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/patch-ids.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/patch-ids.c.bc
 check
-echo "92 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/patch-ids.c to bc" >&2
+echo "92 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/patch-ids.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/path.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/path.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/path.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/path.c.bc
 check
-echo "93 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/path.c to bc" >&2
+echo "93 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/path.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pathspec.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pathspec.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pathspec.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pathspec.c.bc
 check
-echo "94 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pathspec.c to bc" >&2
+echo "94 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pathspec.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pkt-line.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pkt-line.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pkt-line.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pkt-line.c.bc
 check
-echo "95 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pkt-line.c to bc" >&2
+echo "95 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pkt-line.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/preload-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/preload-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/preload-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/preload-index.c.bc
 check
-echo "96 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/preload-index.c to bc" >&2
+echo "96 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/preload-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pretty.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pretty.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pretty.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pretty.c.bc
 check
-echo "97 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pretty.c to bc" >&2
+echo "97 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pretty.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/prio-queue.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/prio-queue.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/prio-queue.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/prio-queue.c.bc
 check
-echo "98 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/prio-queue.c to bc" >&2
+echo "98 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/prio-queue.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/progress.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/progress.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/progress.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/progress.c.bc
 check
-echo "99 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/progress.c to bc" >&2
+echo "99 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/progress.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/prompt.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/prompt.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/prompt.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/prompt.c.bc
 check
-echo "100 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/prompt.c to bc" >&2
+echo "100 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/prompt.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/quote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/quote.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/quote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/quote.c.bc
 check
-echo "101 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/quote.c to bc" >&2
+echo "101 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/quote.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/reachable.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/reachable.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/reachable.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/reachable.c.bc
 check
-echo "102 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/reachable.c to bc" >&2
+echo "102 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/reachable.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/read-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/read-cache.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/read-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/read-cache.c.bc
 check
-echo "103 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/read-cache.c to bc" >&2
+echo "103 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/read-cache.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/reflog-walk.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/reflog-walk.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/reflog-walk.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/reflog-walk.c.bc
 check
-echo "104 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/reflog-walk.c to bc" >&2
+echo "104 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/reflog-walk.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/refs.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/refs.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/refs.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/refs.c.bc
 check
-echo "105 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/refs.c to bc" >&2
+echo "105 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/refs.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/remote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/remote.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/remote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/remote.c.bc
 check
-echo "106 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/remote.c to bc" >&2
+echo "106 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/remote.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/replace_object.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/replace_object.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/replace_object.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/replace_object.c.bc
 check
-echo "107 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/replace_object.c to bc" >&2
+echo "107 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/replace_object.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/rerere.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/rerere.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/rerere.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/rerere.c.bc
 check
-echo "108 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/rerere.c to bc" >&2
+echo "108 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/rerere.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/resolve-undo.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/resolve-undo.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/resolve-undo.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/resolve-undo.c.bc
 check
-echo "109 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/resolve-undo.c to bc" >&2
+echo "109 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/resolve-undo.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/revision.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/revision.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/revision.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/revision.c.bc
 check
-echo "110 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/revision.c to bc" >&2
+echo "110 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/revision.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/run-command.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/run-command.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/run-command.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/run-command.c.bc
 check
-echo "111 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/run-command.c to bc" >&2
+echo "111 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/run-command.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/send-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/send-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/send-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/send-pack.c.bc
 check
-echo "112 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/send-pack.c to bc" >&2
+echo "112 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/send-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sequencer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sequencer.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sequencer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sequencer.c.bc
 check
-echo "113 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sequencer.c to bc" >&2
+echo "113 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sequencer.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/server-info.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/server-info.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/server-info.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/server-info.c.bc
 check
-echo "114 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/server-info.c to bc" >&2
+echo "114 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/server-info.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/setup.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/setup.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/setup.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/setup.c.bc
 check
-echo "115 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/setup.c to bc" >&2
+echo "115 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/setup.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1-array.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1-array.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1-array.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1-array.c.bc
 check
-echo "116 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1-array.c to bc" >&2
+echo "116 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1-array.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1-lookup.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1-lookup.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1-lookup.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1-lookup.c.bc
 check
-echo "117 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1-lookup.c to bc" >&2
+echo "117 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1-lookup.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1_file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1_file.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1_file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1_file.c.bc
 check
-echo "118 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1_file.c to bc" >&2
+echo "118 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1_file.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1_name.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1_name.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1_name.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1_name.c.bc
 check
-echo "119 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1_name.c to bc" >&2
+echo "119 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1_name.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/shallow.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/shallow.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/shallow.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/shallow.c.bc
 check
-echo "120 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/shallow.c to bc" >&2
+echo "120 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/shallow.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sideband.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sideband.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sideband.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sideband.c.bc
 check
-echo "121 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sideband.c to bc" >&2
+echo "121 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sideband.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sigchain.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sigchain.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sigchain.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sigchain.c.bc
 check
-echo "122 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sigchain.c to bc" >&2
+echo "122 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sigchain.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/split-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/split-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/split-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/split-index.c.bc
 check
-echo "123 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/split-index.c to bc" >&2
+echo "123 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/split-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/strbuf.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/strbuf.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/strbuf.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/strbuf.c.bc
 check
-echo "124 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/strbuf.c to bc" >&2
+echo "124 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/strbuf.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/streaming.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/streaming.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/streaming.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/streaming.c.bc
 check
-echo "125 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/streaming.c to bc" >&2
+echo "125 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/streaming.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/string-list.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/string-list.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/string-list.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/string-list.c.bc
 check
-echo "126 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/string-list.c to bc" >&2
+echo "126 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/string-list.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/submodule.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/submodule.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/submodule.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/submodule.c.bc
 check
-echo "127 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/submodule.c to bc" >&2
+echo "127 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/submodule.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/symlinks.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/symlinks.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/symlinks.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/symlinks.c.bc
 check
-echo "128 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/symlinks.c to bc" >&2
+echo "128 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/symlinks.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/tag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/tag.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/tag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/tag.c.bc
 check
-echo "129 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/tag.c to bc" >&2
+echo "129 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/tag.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/trace.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/trace.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/trace.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/trace.c.bc
 check
-echo "130 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/trace.c to bc" >&2
+echo "130 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/trace.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/trailer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/trailer.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/trailer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/trailer.c.bc
 check
-echo "131 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/trailer.c to bc" >&2
+echo "131 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/trailer.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/transport.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/transport.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/transport.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/transport.c.bc
 check
-echo "132 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/transport.c to bc" >&2
+echo "132 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/transport.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/transport-helper.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/transport-helper.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/transport-helper.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/transport-helper.c.bc
 check
-echo "133 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/transport-helper.c to bc" >&2
+echo "133 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/transport-helper.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/tree-diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/tree-diff.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/tree-diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/tree-diff.c.bc
 check
-echo "134 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/tree-diff.c to bc" >&2
+echo "134 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/tree-diff.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/tree.c.bc
 check
-echo "135 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/tree.c to bc" >&2
+echo "135 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/tree-walk.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/tree-walk.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/tree-walk.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/tree-walk.c.bc
 check
-echo "136 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/tree-walk.c to bc" >&2
+echo "136 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/tree-walk.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/unpack-trees.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/unpack-trees.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/unpack-trees.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/unpack-trees.c.bc
 check
-echo "137 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/unpack-trees.c to bc" >&2
+echo "137 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/unpack-trees.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/url.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/url.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/url.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/url.c.bc
 check
-echo "138 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/url.c to bc" >&2
+echo "138 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/url.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/urlmatch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/urlmatch.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/urlmatch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/urlmatch.c.bc
 check
-echo "139 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/urlmatch.c to bc" >&2
+echo "139 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/urlmatch.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/usage.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/usage.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/usage.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/usage.c.bc
 check
-echo "140 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/usage.c to bc" >&2
+echo "140 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/usage.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/userdiff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/userdiff.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/userdiff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/userdiff.c.bc
 check
-echo "141 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/userdiff.c to bc" >&2
+echo "141 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/userdiff.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/utf8.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/utf8.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/utf8.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/utf8.c.bc
 check
-echo "142 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/utf8.c to bc" >&2
+echo "142 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/utf8.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/varint.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/varint.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/varint.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/varint.c.bc
 check
-echo "143 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/varint.c to bc" >&2
+echo "143 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/varint.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_VERSION=\"2.3.10\" -DGIT_USER_AGENT=\"git/2.3.10\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/version.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/version.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_VERSION=\"2.4.0\" -DGIT_USER_AGENT=\"git/2.4.0\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/version.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/version.c.bc
 check
-echo "144 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/version.c to bc" >&2
+echo "144 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/version.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/versioncmp.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/versioncmp.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/versioncmp.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/versioncmp.c.bc
 check
-echo "145 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/versioncmp.c to bc" >&2
+echo "145 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/versioncmp.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/walker.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/walker.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/walker.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/walker.c.bc
 check
-echo "146 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/walker.c to bc" >&2
+echo "146 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/walker.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/wildmatch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/wildmatch.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/wildmatch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/wildmatch.c.bc
 check
-echo "147 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/wildmatch.c to bc" >&2
+echo "147 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/wildmatch.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/wrapper.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/wrapper.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/wrapper.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/wrapper.c.bc
 check
-echo "148 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/wrapper.c to bc" >&2
+echo "148 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/wrapper.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/write_or_die.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/write_or_die.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/write_or_die.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/write_or_die.c.bc
 check
-echo "149 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/write_or_die.c to bc" >&2
+echo "149 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/write_or_die.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ws.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ws.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ws.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ws.c.bc
 check
-echo "150 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ws.c to bc" >&2
+echo "150 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ws.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/wt-status.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/wt-status.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/wt-status.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/wt-status.c.bc
 check
-echo "151 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/wt-status.c to bc" >&2
+echo "151 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/wt-status.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff-interface.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff-interface.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff-interface.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff-interface.c.bc
 check
-echo "152 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff-interface.c to bc" >&2
+echo "152 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff-interface.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/zlib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/zlib.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/zlib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/zlib.c.bc
 check
-echo "153 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/zlib.c to bc" >&2
+echo "153 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/zlib.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/unix-socket.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/unix-socket.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/unix-socket.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/unix-socket.c.bc
 check
-echo "154 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/unix-socket.c to bc" >&2
+echo "154 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/unix-socket.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/block-sha1/sha1.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/block-sha1/sha1.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/block-sha1/sha1.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/block-sha1/sha1.c.bc
 check
-echo "155 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/block-sha1/sha1.c to bc" >&2
+echo "155 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/block-sha1/sha1.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/thread-utils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/thread-utils.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/thread-utils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/thread-utils.c.bc
 check
-echo "156 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/thread-utils.c to bc" >&2
+echo "156 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/thread-utils.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/compat/strlcpy.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/compat/strlcpy.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/compat/strlcpy.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/compat/strlcpy.c.bc
 check
-echo "157 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/compat/strlcpy.c to bc" >&2
+echo "157 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/compat/strlcpy.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xdiffi.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xdiffi.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xdiffi.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xdiffi.c.bc
 check
-echo "158 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xdiffi.c to bc" >&2
+echo "158 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xdiffi.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xprepare.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xprepare.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xprepare.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xprepare.c.bc
 check
-echo "159 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xprepare.c to bc" >&2
+echo "159 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xprepare.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xutils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xutils.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xutils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xutils.c.bc
 check
-echo "160 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xutils.c to bc" >&2
+echo "160 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xutils.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xemit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xemit.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xemit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xemit.c.bc
 check
-echo "161 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xemit.c to bc" >&2
+echo "161 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xemit.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xmerge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xmerge.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xmerge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xmerge.c.bc
 check
-echo "162 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xmerge.c to bc" >&2
+echo "162 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xmerge.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xpatience.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xpatience.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xpatience.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xpatience.c.bc
 check
-echo "163 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xpatience.c to bc" >&2
+echo "163 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xpatience.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xhistogram.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xhistogram.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xhistogram.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xhistogram.c.bc
 check
-echo "164 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xhistogram.c to bc" >&2
+echo "164 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xhistogram.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/daemon.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/daemon.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/daemon.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/daemon.c.bc
 check
-echo "165 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/daemon.c to bc" >&2
+echo "165 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/daemon.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/fast-import.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/fast-import.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/fast-import.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/fast-import.c.bc
 check
-echo "166 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/fast-import.c to bc" >&2
+echo "166 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/fast-import.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/http-backend.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/http-backend.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/http-backend.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/http-backend.c.bc
 check
-echo "167 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/http-backend.c to bc" >&2
+echo "167 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/http-backend.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/imap-send.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/imap-send.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/imap-send.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/imap-send.c.bc
 check
-echo "168 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/imap-send.c to bc" >&2
+echo "168 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/imap-send.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sh-i18n--envsubst.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sh-i18n--envsubst.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sh-i18n--envsubst.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sh-i18n--envsubst.c.bc
 check
-echo "169 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sh-i18n--envsubst.c to bc" >&2
+echo "169 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sh-i18n--envsubst.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/shell.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/shell.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/shell.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/shell.c.bc
 check
-echo "170 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/shell.c to bc" >&2
+echo "170 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/shell.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/show-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/show-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/show-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/show-index.c.bc
 check
-echo "171 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/show-index.c to bc" >&2
+echo "171 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/show-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/upload-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/upload-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/upload-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/upload-pack.c.bc
 check
-echo "172 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/upload-pack.c to bc" >&2
+echo "172 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/upload-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/remote-testsvn.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/remote-testsvn.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/remote-testsvn.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/remote-testsvn.c.bc
 check
-echo "173 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/remote-testsvn.c to bc" >&2
+echo "173 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/remote-testsvn.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/line_buffer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/line_buffer.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/line_buffer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/line_buffer.c.bc
 check
-echo "174 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/line_buffer.c to bc" >&2
+echo "174 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/line_buffer.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/sliding_window.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/sliding_window.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/sliding_window.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/sliding_window.c.bc
 check
-echo "175 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/sliding_window.c to bc" >&2
+echo "175 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/sliding_window.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/repo_tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/repo_tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/repo_tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/repo_tree.c.bc
 check
-echo "176 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/repo_tree.c to bc" >&2
+echo "176 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/repo_tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/fast_export.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/fast_export.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/fast_export.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/fast_export.c.bc
 check
-echo "177 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/fast_export.c to bc" >&2
+echo "177 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/fast_export.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/svndiff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/svndiff.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/svndiff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/svndiff.c.bc
 check
-echo "178 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/svndiff.c to bc" >&2
+echo "178 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/svndiff.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/svndump.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/svndump.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/svndump.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/svndump.c.bc
 check
-echo "179 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/svndump.c to bc" >&2
+echo "179 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/svndump.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential-cache.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential-cache.c.bc
 check
-echo "180 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential-cache.c to bc" >&2
+echo "180 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential-cache.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential-cache--daemon.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential-cache--daemon.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential-cache--daemon.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential-cache--daemon.c.bc
 check
-echo "181 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential-cache--daemon.c to bc" >&2
+echo "181 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential-cache--daemon.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_HTML_PATH=\"share/doc/git\" -DGIT_MAN_PATH=\"share/man\" -DGIT_INFO_PATH=\"share/info\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_HTML_PATH=\"share/doc/git\" -DGIT_MAN_PATH=\"share/man\" -DGIT_INFO_PATH=\"share/info\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git.c.bc
 check
-echo "182 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git.c to bc" >&2
+echo "182 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/add.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/add.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/add.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/add.c.bc
 check
-echo "183 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/add.c to bc" >&2
+echo "183 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/add.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/annotate.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/annotate.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/annotate.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/annotate.c.bc
 check
-echo "184 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/annotate.c to bc" >&2
+echo "184 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/annotate.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/apply.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/apply.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/apply.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/apply.c.bc
 check
-echo "185 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/apply.c to bc" >&2
+echo "185 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/apply.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/archive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/archive.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/archive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/archive.c.bc
 check
-echo "186 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/archive.c to bc" >&2
+echo "186 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/archive.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/bisect--helper.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/bisect--helper.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/bisect--helper.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/bisect--helper.c.bc
 check
-echo "187 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/bisect--helper.c to bc" >&2
+echo "187 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/bisect--helper.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/blame.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/blame.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/blame.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/blame.c.bc
 check
-echo "188 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/blame.c to bc" >&2
+echo "188 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/blame.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/branch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/branch.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/branch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/branch.c.bc
 check
-echo "189 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/branch.c to bc" >&2
+echo "189 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/branch.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/bundle.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/bundle.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/bundle.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/bundle.c.bc
 check
-echo "190 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/bundle.c to bc" >&2
+echo "190 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/bundle.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/cat-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/cat-file.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/cat-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/cat-file.c.bc
 check
-echo "191 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/cat-file.c to bc" >&2
+echo "191 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/cat-file.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-attr.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-attr.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-attr.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-attr.c.bc
 check
-echo "192 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-attr.c to bc" >&2
+echo "192 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-attr.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-ignore.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-ignore.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-ignore.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-ignore.c.bc
 check
-echo "193 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-ignore.c to bc" >&2
+echo "193 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-ignore.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-mailmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-mailmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-mailmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-mailmap.c.bc
 check
-echo "194 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-mailmap.c to bc" >&2
+echo "194 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-mailmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-ref-format.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-ref-format.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-ref-format.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-ref-format.c.bc
 check
-echo "195 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-ref-format.c to bc" >&2
+echo "195 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-ref-format.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/checkout-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/checkout-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/checkout-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/checkout-index.c.bc
 check
-echo "196 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/checkout-index.c to bc" >&2
+echo "196 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/checkout-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/checkout.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/checkout.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/checkout.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/checkout.c.bc
 check
-echo "197 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/checkout.c to bc" >&2
+echo "197 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/checkout.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/clean.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/clean.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/clean.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/clean.c.bc
 check
-echo "198 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/clean.c to bc" >&2
+echo "198 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/clean.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/clone.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/clone.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/clone.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/clone.c.bc
 check
-echo "199 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/clone.c to bc" >&2
+echo "199 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/clone.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/column.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/column.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/column.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/column.c.bc
 check
-echo "200 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/column.c to bc" >&2
+echo "200 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/column.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/commit-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/commit-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/commit-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/commit-tree.c.bc
 check
-echo "201 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/commit-tree.c to bc" >&2
+echo "201 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/commit-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/commit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/commit.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/commit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/commit.c.bc
 check
-echo "202 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/commit.c to bc" >&2
+echo "202 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/commit.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/config.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/config.c.bc
 check
-echo "203 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/config.c to bc" >&2
+echo "203 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/config.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/count-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/count-objects.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/count-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/count-objects.c.bc
 check
-echo "204 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/count-objects.c to bc" >&2
+echo "204 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/count-objects.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/credential.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/credential.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/credential.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/credential.c.bc
 check
-echo "205 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/credential.c to bc" >&2
+echo "205 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/credential.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/describe.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/describe.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/describe.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/describe.c.bc
 check
-echo "206 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/describe.c to bc" >&2
+echo "206 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/describe.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff-files.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff-files.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff-files.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff-files.c.bc
 check
-echo "207 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff-files.c to bc" >&2
+echo "207 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff-files.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff-index.c.bc
 check
-echo "208 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff-index.c to bc" >&2
+echo "208 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff-tree.c.bc
 check
-echo "209 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff-tree.c to bc" >&2
+echo "209 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff.c.bc
 check
-echo "210 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff.c to bc" >&2
+echo "210 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fast-export.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fast-export.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fast-export.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fast-export.c.bc
 check
-echo "211 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fast-export.c to bc" >&2
+echo "211 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fast-export.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fetch-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fetch-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fetch-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fetch-pack.c.bc
 check
-echo "212 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fetch-pack.c to bc" >&2
+echo "212 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fetch-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fetch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fetch.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fetch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fetch.c.bc
 check
-echo "213 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fetch.c to bc" >&2
+echo "213 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fetch.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fmt-merge-msg.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fmt-merge-msg.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fmt-merge-msg.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fmt-merge-msg.c.bc
 check
-echo "214 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fmt-merge-msg.c to bc" >&2
+echo "214 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fmt-merge-msg.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/for-each-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/for-each-ref.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/for-each-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/for-each-ref.c.bc
 check
-echo "215 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/for-each-ref.c to bc" >&2
+echo "215 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/for-each-ref.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fsck.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fsck.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fsck.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fsck.c.bc
 check
-echo "216 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fsck.c to bc" >&2
+echo "216 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fsck.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/gc.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/gc.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/gc.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/gc.c.bc
 check
-echo "217 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/gc.c to bc" >&2
+echo "217 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/gc.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/get-tar-commit-id.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/get-tar-commit-id.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/get-tar-commit-id.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/get-tar-commit-id.c.bc
 check
-echo "218 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/get-tar-commit-id.c to bc" >&2
+echo "218 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/get-tar-commit-id.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/grep.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/grep.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/grep.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/grep.c.bc
 check
-echo "219 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/grep.c to bc" >&2
+echo "219 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/grep.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/hash-object.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/hash-object.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/hash-object.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/hash-object.c.bc
 check
-echo "220 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/hash-object.c to bc" >&2
+echo "220 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/hash-object.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_HTML_PATH=\"share/doc/git\" -DGIT_MAN_PATH=\"share/man\" -DGIT_INFO_PATH=\"share/info\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/help.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/help.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_HTML_PATH=\"share/doc/git\" -DGIT_MAN_PATH=\"share/man\" -DGIT_INFO_PATH=\"share/info\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/help.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/help.c.bc
 check
-echo "221 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/help.c to bc" >&2
+echo "221 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/help.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/index-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/index-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/index-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/index-pack.c.bc
 check
-echo "222 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/index-pack.c to bc" >&2
+echo "222 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/index-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DDEFAULT_GIT_TEMPLATE_DIR=\"/usr/local/share/git-core/templates\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/init-db.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/init-db.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DDEFAULT_GIT_TEMPLATE_DIR=\"/usr/local/share/git-core/templates\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/init-db.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/init-db.c.bc
 check
-echo "223 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/init-db.c to bc" >&2
+echo "223 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/init-db.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/interpret-trailers.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/interpret-trailers.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/interpret-trailers.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/interpret-trailers.c.bc
 check
-echo "224 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/interpret-trailers.c to bc" >&2
+echo "224 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/interpret-trailers.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/log.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/log.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/log.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/log.c.bc
 check
-echo "225 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/log.c to bc" >&2
+echo "225 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/log.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/ls-files.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/ls-files.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/ls-files.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/ls-files.c.bc
 check
-echo "226 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/ls-files.c to bc" >&2
+echo "226 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/ls-files.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/ls-remote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/ls-remote.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/ls-remote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/ls-remote.c.bc
 check
-echo "227 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/ls-remote.c to bc" >&2
+echo "227 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/ls-remote.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/ls-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/ls-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/ls-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/ls-tree.c.bc
 check
-echo "228 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/ls-tree.c to bc" >&2
+echo "228 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/ls-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mailinfo.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mailinfo.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mailinfo.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mailinfo.c.bc
 check
-echo "229 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mailinfo.c to bc" >&2
+echo "229 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mailinfo.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mailsplit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mailsplit.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mailsplit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mailsplit.c.bc
 check
-echo "230 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mailsplit.c to bc" >&2
+echo "230 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mailsplit.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge.c.bc
 check
-echo "231 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge.c to bc" >&2
+echo "231 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-base.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-base.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-base.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-base.c.bc
 check
-echo "232 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-base.c to bc" >&2
+echo "232 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-base.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-file.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-file.c.bc
 check
-echo "233 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-file.c to bc" >&2
+echo "233 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-file.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-index.c.bc
 check
-echo "234 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-index.c to bc" >&2
+echo "234 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-ours.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-ours.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-ours.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-ours.c.bc
 check
-echo "235 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-ours.c to bc" >&2
+echo "235 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-ours.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-recursive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-recursive.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-recursive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-recursive.c.bc
 check
-echo "236 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-recursive.c to bc" >&2
+echo "236 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-recursive.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-tree.c.bc
 check
-echo "237 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-tree.c to bc" >&2
+echo "237 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mktag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mktag.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mktag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mktag.c.bc
 check
-echo "238 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mktag.c to bc" >&2
+echo "238 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mktag.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mktree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mktree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mktree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mktree.c.bc
 check
-echo "239 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mktree.c to bc" >&2
+echo "239 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mktree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mv.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mv.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mv.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mv.c.bc
 check
-echo "240 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mv.c to bc" >&2
+echo "240 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mv.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/name-rev.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/name-rev.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/name-rev.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/name-rev.c.bc
 check
-echo "241 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/name-rev.c to bc" >&2
+echo "241 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/name-rev.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/notes.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/notes.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/notes.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/notes.c.bc
 check
-echo "242 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/notes.c to bc" >&2
+echo "242 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/notes.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/pack-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/pack-objects.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/pack-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/pack-objects.c.bc
 check
-echo "243 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/pack-objects.c to bc" >&2
+echo "243 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/pack-objects.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/pack-redundant.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/pack-redundant.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/pack-redundant.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/pack-redundant.c.bc
 check
-echo "244 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/pack-redundant.c to bc" >&2
+echo "244 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/pack-redundant.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/pack-refs.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/pack-refs.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/pack-refs.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/pack-refs.c.bc
 check
-echo "245 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/pack-refs.c to bc" >&2
+echo "245 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/pack-refs.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/patch-id.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/patch-id.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/patch-id.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/patch-id.c.bc
 check
-echo "246 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/patch-id.c to bc" >&2
+echo "246 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/patch-id.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/prune-packed.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/prune-packed.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/prune-packed.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/prune-packed.c.bc
 check
-echo "247 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/prune-packed.c to bc" >&2
+echo "247 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/prune-packed.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/prune.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/prune.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/prune.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/prune.c.bc
 check
-echo "248 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/prune.c to bc" >&2
+echo "248 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/prune.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/push.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/push.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/push.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/push.c.bc
 check
-echo "249 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/push.c to bc" >&2
+echo "249 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/push.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/read-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/read-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/read-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/read-tree.c.bc
 check
-echo "250 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/read-tree.c to bc" >&2
+echo "250 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/read-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/receive-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/receive-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/receive-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/receive-pack.c.bc
 check
-echo "251 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/receive-pack.c to bc" >&2
+echo "251 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/receive-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/reflog.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/reflog.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/reflog.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/reflog.c.bc
 check
-echo "252 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/reflog.c to bc" >&2
+echo "252 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/reflog.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/remote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/remote.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/remote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/remote.c.bc
 check
-echo "253 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/remote.c to bc" >&2
+echo "253 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/remote.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/remote-ext.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/remote-ext.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/remote-ext.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/remote-ext.c.bc
 check
-echo "254 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/remote-ext.c to bc" >&2
+echo "254 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/remote-ext.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/remote-fd.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/remote-fd.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/remote-fd.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/remote-fd.c.bc
 check
-echo "255 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/remote-fd.c to bc" >&2
+echo "255 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/remote-fd.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/repack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/repack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/repack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/repack.c.bc
 check
-echo "256 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/repack.c to bc" >&2
+echo "256 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/repack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/replace.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/replace.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/replace.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/replace.c.bc
 check
-echo "257 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/replace.c to bc" >&2
+echo "257 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/replace.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rerere.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rerere.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rerere.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rerere.c.bc
 check
-echo "258 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rerere.c to bc" >&2
+echo "258 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rerere.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/reset.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/reset.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/reset.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/reset.c.bc
 check
-echo "259 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/reset.c to bc" >&2
+echo "259 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/reset.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rev-list.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rev-list.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rev-list.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rev-list.c.bc
 check
-echo "260 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rev-list.c to bc" >&2
+echo "260 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rev-list.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rev-parse.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rev-parse.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rev-parse.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rev-parse.c.bc
 check
-echo "261 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rev-parse.c to bc" >&2
+echo "261 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rev-parse.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/revert.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/revert.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/revert.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/revert.c.bc
 check
-echo "262 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/revert.c to bc" >&2
+echo "262 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/revert.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rm.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rm.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rm.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rm.c.bc
 check
-echo "263 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rm.c to bc" >&2
+echo "263 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rm.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/send-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/send-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/send-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/send-pack.c.bc
 check
-echo "264 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/send-pack.c to bc" >&2
+echo "264 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/send-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/shortlog.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/shortlog.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/shortlog.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/shortlog.c.bc
 check
-echo "265 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/shortlog.c to bc" >&2
+echo "265 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/shortlog.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/show-branch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/show-branch.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/show-branch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/show-branch.c.bc
 check
-echo "266 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/show-branch.c to bc" >&2
+echo "266 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/show-branch.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/show-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/show-ref.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/show-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/show-ref.c.bc
 check
-echo "267 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/show-ref.c to bc" >&2
+echo "267 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/show-ref.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/stripspace.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/stripspace.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/stripspace.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/stripspace.c.bc
 check
-echo "268 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/stripspace.c to bc" >&2
+echo "268 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/stripspace.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/symbolic-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/symbolic-ref.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/symbolic-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/symbolic-ref.c.bc
 check
-echo "269 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/symbolic-ref.c to bc" >&2
+echo "269 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/symbolic-ref.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/tag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/tag.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/tag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/tag.c.bc
 check
-echo "270 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/tag.c to bc" >&2
+echo "270 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/tag.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/unpack-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/unpack-file.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/unpack-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/unpack-file.c.bc
 check
-echo "271 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/unpack-file.c to bc" >&2
+echo "271 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/unpack-file.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/unpack-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/unpack-objects.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/unpack-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/unpack-objects.c.bc
 check
-echo "272 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/unpack-objects.c to bc" >&2
+echo "272 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/unpack-objects.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/update-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/update-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/update-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/update-index.c.bc
 check
-echo "273 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/update-index.c to bc" >&2
+echo "273 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/update-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/update-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/update-ref.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/update-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/update-ref.c.bc
 check
-echo "274 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/update-ref.c to bc" >&2
+echo "274 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/update-ref.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/update-server-info.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/update-server-info.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/update-server-info.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/update-server-info.c.bc
 check
-echo "275 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/update-server-info.c to bc" >&2
+echo "275 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/update-server-info.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/upload-archive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/upload-archive.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/upload-archive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/upload-archive.c.bc
 check
-echo "276 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/upload-archive.c to bc" >&2
+echo "276 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/upload-archive.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/var.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/var.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/var.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/var.c.bc
 check
-echo "277 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/var.c to bc" >&2
+echo "277 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/var.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/verify-commit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/verify-commit.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/verify-commit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/verify-commit.c.bc
 check
-echo "278 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/verify-commit.c to bc" >&2
+echo "278 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/verify-commit.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/verify-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/verify-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/verify-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/verify-pack.c.bc
 check
-echo "279 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/verify-pack.c to bc" >&2
+echo "279 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/verify-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/verify-tag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/verify-tag.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/verify-tag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/verify-tag.c.bc
 check
-echo "280 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/verify-tag.c to bc" >&2
+echo "280 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/verify-tag.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/write-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/write-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/write-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/write-tree.c.bc
 check
-echo "281 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/write-tree.c to bc" >&2
+echo "281 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/write-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-chmtime.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-chmtime.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-chmtime.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-chmtime.c.bc
 check
-echo "282 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-chmtime.c to bc" >&2
+echo "282 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-chmtime.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-ctype.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-ctype.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-ctype.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-ctype.c.bc
 check
-echo "283 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-ctype.c to bc" >&2
+echo "283 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-ctype.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-config.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-config.c.bc
 check
-echo "284 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-config.c to bc" >&2
+echo "284 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-config.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-date.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-date.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-date.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-date.c.bc
 check
-echo "285 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-date.c to bc" >&2
+echo "285 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-date.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-delta.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-delta.c.bc
 check
-echo "286 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-delta.c to bc" >&2
+echo "286 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-delta.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-dump-cache-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-dump-cache-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-dump-cache-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-dump-cache-tree.c.bc
 check
-echo "287 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-dump-cache-tree.c to bc" >&2
+echo "287 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-dump-cache-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-dump-split-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-dump-split-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-dump-split-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-dump-split-index.c.bc
 check
-echo "288 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-dump-split-index.c to bc" >&2
+echo "288 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-dump-split-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-genrandom.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-genrandom.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-genrandom.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-genrandom.c.bc
 check
-echo "289 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-genrandom.c to bc" >&2
+echo "289 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-genrandom.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-hashmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-hashmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-hashmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-hashmap.c.bc
 check
-echo "290 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-hashmap.c to bc" >&2
+echo "290 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-hashmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-index-version.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-index-version.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-index-version.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-index-version.c.bc
 check
-echo "291 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-index-version.c to bc" >&2
+echo "291 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-index-version.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-line-buffer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-line-buffer.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-line-buffer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-line-buffer.c.bc
 check
-echo "292 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-line-buffer.c to bc" >&2
+echo "292 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-line-buffer.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-match-trees.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-match-trees.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-match-trees.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-match-trees.c.bc
 check
-echo "293 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-match-trees.c to bc" >&2
+echo "293 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-match-trees.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-mergesort.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-mergesort.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-mergesort.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-mergesort.c.bc
 check
-echo "294 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-mergesort.c to bc" >&2
+echo "294 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-mergesort.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-mktemp.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-mktemp.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-mktemp.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-mktemp.c.bc
 check
-echo "295 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-mktemp.c to bc" >&2
+echo "295 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-mktemp.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-parse-options.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-parse-options.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-parse-options.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-parse-options.c.bc
 check
-echo "296 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-parse-options.c to bc" >&2
+echo "296 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-parse-options.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-path-utils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-path-utils.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-path-utils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-path-utils.c.bc
 check
-echo "297 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-path-utils.c to bc" >&2
+echo "297 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-path-utils.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-prio-queue.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-prio-queue.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-prio-queue.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-prio-queue.c.bc
 check
-echo "298 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-prio-queue.c to bc" >&2
+echo "298 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-prio-queue.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-read-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-read-cache.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-read-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-read-cache.c.bc
 check
-echo "299 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-read-cache.c to bc" >&2
+echo "299 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-read-cache.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-regex.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-regex.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-regex.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-regex.c.bc
 check
-echo "300 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-regex.c to bc" >&2
+echo "300 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-regex.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-revision-walking.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-revision-walking.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-revision-walking.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-revision-walking.c.bc
 check
-echo "301 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-revision-walking.c to bc" >&2
+echo "301 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-revision-walking.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-run-command.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-run-command.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-run-command.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-run-command.c.bc
 check
-echo "302 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-run-command.c to bc" >&2
+echo "302 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-run-command.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-scrap-cache-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-scrap-cache-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-scrap-cache-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-scrap-cache-tree.c.bc
 check
-echo "303 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-scrap-cache-tree.c to bc" >&2
+echo "303 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-scrap-cache-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-sha1.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-sha1.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-sha1.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-sha1.c.bc
 check
-echo "304 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-sha1.c to bc" >&2
+echo "304 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-sha1.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-sha1-array.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-sha1-array.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-sha1-array.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-sha1-array.c.bc
 check
-echo "305 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-sha1-array.c to bc" >&2
+echo "305 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-sha1-array.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-sigchain.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-sigchain.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-sigchain.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-sigchain.c.bc
 check
-echo "306 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-sigchain.c to bc" >&2
+echo "306 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-sigchain.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-string-list.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-string-list.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-string-list.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-string-list.c.bc
 check
-echo "307 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-string-list.c to bc" >&2
+echo "307 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-string-list.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-subprocess.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-subprocess.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-subprocess.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-subprocess.c.bc
 check
-echo "308 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-subprocess.c to bc" >&2
+echo "308 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-subprocess.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-svn-fe.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-svn-fe.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-svn-fe.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-svn-fe.c.bc
 check
-echo "309 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-svn-fe.c to bc" >&2
+echo "309 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-svn-fe.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-urlmatch-normalization.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-urlmatch-normalization.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-urlmatch-normalization.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-urlmatch-normalization.c.bc
 check
-echo "310 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-urlmatch-normalization.c to bc" >&2
+echo "310 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-urlmatch-normalization.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-wildmatch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-wildmatch.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-wildmatch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-wildmatch.c.bc
 check
-echo "311 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-wildmatch.c to bc" >&2
+echo "311 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-wildmatch.c to bc" >&2
 echo "Total ir $total" >&2
 echo "Succ ir $succ" >&2
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/add.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/add.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/add.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/add.c	2015-05-01 03:12:02.000000000 +0800
@@ -16,13 +16,13 @@
 #include "diffcore.h"
 #include "revision.h"
 #include "bulk-checkin.h"
 #include "argv-array.h"
 
 static const char * const builtin_add_usage[] = {
-	N_("git add [options] [--] <pathspec>..."),
+	N_("git add [<options>] [--] <pathspec>..."),
 	NULL
 };
 static int patch_interactive, add_interactive, edit_interactive;
 static int take_worktree_changes;
 
 struct update_callback_data {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/add.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/add.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/add.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/add.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/annotate.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/annotate.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/annotate.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/annotate.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/apply.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/apply.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/apply.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/apply.c	2015-05-01 03:12:02.000000000 +0800
@@ -53,13 +53,13 @@
 static int threeway;
 static int unsafe_paths;
 static const char *fake_ancestor;
 static int line_termination = '\n';
 static unsigned int p_context = UINT_MAX;
 static const char * const apply_usage[] = {
-	N_("git apply [options] [<patch>...]"),
+	N_("git apply [<options>] [<patch>...]"),
 	NULL
 };
 
 static enum ws_error_action {
 	nowarn_ws_error,
 	warn_on_ws_error,
@@ -1598,12 +1598,15 @@
 		case ' ':
 			oldlines--;
 			newlines--;
 			if (!deleted && !added)
 				leading++;
 			trailing++;
+			if (!apply_in_reverse &&
+			    ws_error_action == correct_ws_error)
+				check_whitespace(line, len, patch->ws_rule);
 			break;
 		case '-':
 			if (apply_in_reverse &&
 			    ws_error_action != nowarn_ws_error)
 				check_whitespace(line, len, patch->ws_rule);
 			deleted++;
@@ -2770,13 +2773,14 @@
 		case '@': case '\\':
 			/* Ignore it, we already handled it */
 			break;
 		default:
 			if (apply_verbosely)
 				error(_("invalid start of line: '%c'"), first);
-			return -1;
+			applied_pos = -1;
+			goto out;
 		}
 		if (added_blank_line) {
 			if (!new_blank_lines_at_end)
 				found_new_blank_lines_at_end = hunk_linenr;
 			new_blank_lines_at_end++;
 		}
@@ -2909,12 +2913,13 @@
 	} else {
 		if (apply_verbosely)
 			error(_("while searching for:\n%.*s"),
 			      (int)(old - oldlines), oldlines);
 	}
 
+out:
 	free(oldlines);
 	strbuf_release(&newlines);
 	free(preimage.line_allocated);
 	free(postimage.line_allocated);
 
 	return (applied_pos < 0);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/apply.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/apply.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/apply.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/apply.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/archive.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/archive.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/archive.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/archive.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/bisect--helper.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/bisect--helper.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/bisect--helper.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/bisect--helper.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/blame.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/blame.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/blame.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/blame.c	2015-05-01 03:12:02.000000000 +0800
@@ -24,18 +24,18 @@
 #include "prio-queue.h"
 #include "utf8.h"
 #include "userdiff.h"
 #include "line-range.h"
 #include "line-log.h"
 
-static char blame_usage[] = N_("git blame [options] [rev-opts] [rev] [--] file");
+static char blame_usage[] = N_("git blame [<options>] [<rev-opts>] [<rev>] [--] file");
 
 static const char *blame_opt_usage[] = {
 	blame_usage,
 	"",
-	N_("[rev-opts] are documented in git-rev-list(1)"),
+	N_("<rev-opts> are documented in git-rev-list(1)"),
 	NULL
 };
 
 static int longest_file;
 static int longest_author;
 static int max_orig_digits;
@@ -969,16 +969,13 @@
 	d.dstq = &newdest; d.srcq = &target->suspects;
 
 	fill_origin_blob(&sb->revs->diffopt, parent, &file_p);
 	fill_origin_blob(&sb->revs->diffopt, target, &file_o);
 	num_get_patch++;
 
-	if (diff_hunks(&file_p, &file_o, 0, blame_chunk_cb, &d))
-		die("unable to generate diff (%s -> %s)",
-		    sha1_to_hex(parent->commit->object.sha1),
-		    sha1_to_hex(target->commit->object.sha1));
+	diff_hunks(&file_p, &file_o, 0, blame_chunk_cb, &d);
 	/* The rest are the same as the parent */
 	blame_chunk(&d.dstq, &d.srcq, INT_MAX, d.offset, INT_MAX, parent);
 	*d.dstq = NULL;
 	queue_blames(sb, parent, newdest);
 
 	return;
@@ -1118,15 +1115,13 @@
 
 	/*
 	 * file_o is a part of final image we are annotating.
 	 * file_p partially may match that image.
 	 */
 	memset(split, 0, sizeof(struct blame_entry [3]));
-	if (diff_hunks(file_p, &file_o, 1, handle_split_cb, &d))
-		die("unable to generate diff (%s)",
-		    sha1_to_hex(parent->commit->object.sha1));
+	diff_hunks(file_p, &file_o, 1, handle_split_cb, &d);
 	/* remainder, if any, all match the preimage */
 	handle_split(sb, ent, d.tlno, d.plno, ent->num_lines, parent, split);
 }
 
 /* Move all blame entries from list *source that have a score smaller
  * than score_min to the front of list *small.
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/blame.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/blame.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/blame.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/blame.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/branch.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/branch.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/branch.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/branch.c	2015-05-01 03:12:02.000000000 +0800
@@ -18,16 +18,16 @@
 #include "string-list.h"
 #include "column.h"
 #include "utf8.h"
 #include "wt-status.h"
 
 static const char * const builtin_branch_usage[] = {
-	N_("git branch [options] [-r | -a] [--merged | --no-merged]"),
-	N_("git branch [options] [-l] [-f] <branchname> [<start-point>]"),
-	N_("git branch [options] [-r] (-d | -D) <branchname>..."),
-	N_("git branch [options] (-m | -M) [<oldbranch>] <newbranch>"),
+	N_("git branch [<options>] [-r | -a] [--merged | --no-merged]"),
+	N_("git branch [<options>] [-l] [-f] <branch-name> [<start-point>]"),
+	N_("git branch [<options>] [-r] (-d | -D) <branch-name>..."),
+	N_("git branch [<options>] (-m | -M) [<old-branch>] <new-branch>"),
 	NULL
 };
 
 #define REF_LOCAL_BRANCH    0x01
 #define REF_REMOTE_BRANCH   0x02
 
@@ -586,15 +586,22 @@
 	    state.rebase_interactive_in_progress)
 		strbuf_addf(&desc, _("(no branch, rebasing %s)"),
 			    state.branch);
 	else if (state.bisect_in_progress)
 		strbuf_addf(&desc, _("(no branch, bisect started on %s)"),
 			    state.branch);
-	else if (state.detached_from)
-		strbuf_addf(&desc, _("(detached from %s)"),
-			    state.detached_from);
+	else if (state.detached_from) {
+		/* TRANSLATORS: make sure these match _("HEAD detached at ")
+		   and _("HEAD detached from ") in wt-status.c */
+		if (state.detached_at)
+			strbuf_addf(&desc, _("(HEAD detached at %s)"),
+				state.detached_from);
+		else
+			strbuf_addf(&desc, _("(HEAD detached from %s)"),
+				state.detached_from);
+	}
 	else
 		strbuf_addstr(&desc, _("(no branch)"));
 	free(state.branch);
 	free(state.onto);
 	free(state.detached_from);
 	return strbuf_detach(&desc, NULL);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/branch.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/branch.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/branch.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/branch.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/bundle.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/bundle.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/bundle.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/bundle.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/cat-file.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/cat-file.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/cat-file.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/cat-file.c	2015-05-01 03:12:02.000000000 +0800
@@ -320,14 +320,14 @@
 	strbuf_release(&buf);
 	warn_on_object_refname_ambiguity = save_warning;
 	return retval;
 }
 
 static const char * const cat_file_usage[] = {
-	N_("git cat-file (-t|-s|-e|-p|<type>|--textconv) <object>"),
-	N_("git cat-file (--batch|--batch-check) < <list_of_objects>"),
+	N_("git cat-file (-t | -s | -e | -p | <type> | --textconv) <object>"),
+	N_("git cat-file (--batch | --batch-check) < <list-of-objects>"),
 	NULL
 };
 
 static int git_cat_file_config(const char *var, const char *value, void *cb)
 {
 	if (userdiff_config(var, value) < 0)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/cat-file.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/cat-file.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/cat-file.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/cat-file.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-attr.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-attr.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-attr.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-attr.c	2015-05-01 03:12:02.000000000 +0800
@@ -5,14 +5,14 @@
 #include "parse-options.h"
 
 static int all_attrs;
 static int cached_attrs;
 static int stdin_paths;
 static const char * const check_attr_usage[] = {
-N_("git check-attr [-a | --all | attr...] [--] pathname..."),
-N_("git check-attr --stdin [-z] [-a | --all | attr...] < <list-of-paths>"),
+N_("git check-attr [-a | --all | <attr>...] [--] <pathname>..."),
+N_("git check-attr --stdin [-z] [-a | --all | <attr>...] < <list-of-paths>"),
 NULL
 };
 
 static int nul_term_line;
 
 static const struct option check_attr_options[] = {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-attr.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-attr.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-attr.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-attr.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-ignore.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-ignore.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-ignore.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-ignore.c	2015-05-01 03:12:02.000000000 +0800
@@ -4,14 +4,14 @@
 #include "quote.h"
 #include "pathspec.h"
 #include "parse-options.h"
 
 static int quiet, verbose, stdin_paths, show_non_matching, no_index;
 static const char * const check_ignore_usage[] = {
-"git check-ignore [options] pathname...",
-"git check-ignore [options] --stdin < <list-of-paths>",
+"git check-ignore [<options>] <pathname>...",
+"git check-ignore [<options>] --stdin < <list-of-paths>",
 NULL
 };
 
 static int nul_term_line;
 
 static const struct option check_ignore_options[] = {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-ignore.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-ignore.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-ignore.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-ignore.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-mailmap.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-mailmap.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-mailmap.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-mailmap.c	2015-05-01 03:12:02.000000000 +0800
@@ -2,13 +2,13 @@
 #include "mailmap.h"
 #include "parse-options.h"
 #include "string-list.h"
 
 static int use_stdin;
 static const char * const check_mailmap_usage[] = {
-N_("git check-mailmap [options] <contact>..."),
+N_("git check-mailmap [<options>] <contact>..."),
 NULL
 };
 
 static const struct option check_mailmap_options[] = {
 	OPT_BOOL(0, "stdin", &use_stdin, N_("also read contacts from stdin")),
 	OPT_END()
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-mailmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-mailmap.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-mailmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-mailmap.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/checkout.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/checkout.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/checkout.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/checkout.c	2015-05-01 03:12:02.000000000 +0800
@@ -19,14 +19,14 @@
 #include "ll-merge.h"
 #include "resolve-undo.h"
 #include "submodule.h"
 #include "argv-array.h"
 
 static const char * const checkout_usage[] = {
-	N_("git checkout [options] <branch>"),
-	N_("git checkout [options] [<branch>] -- <file>..."),
+	N_("git checkout [<options>] <branch>"),
+	N_("git checkout [<options>] [<branch>] -- <file>..."),
 	NULL,
 };
 
 struct checkout_opts {
 	int patch_mode;
 	int quiet;
@@ -743,13 +743,13 @@
 
 	if (advice_detached_head)
 		fprintf(stderr,
 			_(
 			"If you want to keep them by creating a new branch, "
 			"this may be a good time\nto do so with:\n\n"
-			" git branch new_branch_name %s\n\n"),
+			" git branch <new-branch-name> %s\n\n"),
 			find_unique_abbrev(commit->object.sha1, DEFAULT_ABBREV));
 }
 
 /*
  * We are about to leave commit that was at the tip of a detached
  * HEAD.  If it is not reachable from any ref, this is the last chance
@@ -1124,13 +1124,13 @@
 		OPT_STRING(0, "conflict", &conflict_style, N_("style"),
 			   N_("conflict style (merge or diff3)")),
 		OPT_BOOL('p', "patch", &opts.patch_mode, N_("select hunks interactively")),
 		OPT_BOOL(0, "ignore-skip-worktree-bits", &opts.ignore_skipworktree,
 			 N_("do not limit pathspecs to sparse entries only")),
 		OPT_HIDDEN_BOOL(0, "guess", &dwim_new_local_branch,
-				N_("second guess 'git checkout no-such-branch'")),
+				N_("second guess 'git checkout <no-such-branch>'")),
 		OPT_END(),
 	};
 
 	memset(&opts, 0, sizeof(opts));
 	memset(&new, 0, sizeof(new));
 	opts.overwrite_ignore = 1;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/checkout.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/checkout.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/checkout-index.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/checkout-index.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/checkout-index.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/checkout-index.c	2015-05-01 03:12:02.000000000 +0800
@@ -120,13 +120,13 @@
 		 * exit with the same code as die().
 		 */
 		exit(128);
 }
 
 static const char * const builtin_checkout_index_usage[] = {
-	N_("git checkout-index [options] [--] [<file>...]"),
+	N_("git checkout-index [<options>] [--] [<file>...]"),
 	NULL
 };
 
 static struct lock_file lock_file;
 
 static int option_parse_u(const struct option *opt,
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/checkout-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/checkout-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/checkout-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/checkout-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/checkout.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/checkout.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-ref-format.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-ref-format.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-ref-format.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-ref-format.c	2015-05-01 03:12:02.000000000 +0800
@@ -5,13 +5,13 @@
 #include "cache.h"
 #include "refs.h"
 #include "builtin.h"
 #include "strbuf.h"
 
 static const char builtin_check_ref_format_usage[] =
-"git check-ref-format [--normalize] [options] <refname>\n"
+"git check-ref-format [--normalize] [<options>] <refname>\n"
 "   or: git check-ref-format --branch <branchname-shorthand>";
 
 /*
  * Return a copy of refname but with leading slashes removed and runs
  * of adjacent slashes replaced with single slashes.
  *
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-ref-format.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-ref-format.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-ref-format.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-ref-format.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/clean.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/clean.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/clean.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/clean.c	2015-05-01 03:12:02.000000000 +0800
@@ -751,13 +751,14 @@
 	int changed = 0, eof = 0;
 
 	for_each_string_list_item(item, &del_list) {
 		/* Ctrl-D should stop removing files */
 		if (!eof) {
 			qname = quote_path_relative(item->string, NULL, &buf);
-			printf(_("remove %s? "), qname);
+			/* TRANSLATORS: Make sure to keep [y/N] as is */
+			printf(_("Remove %s [y/N]? "), qname);
 			if (strbuf_getline(&confirm, stdin, '\n') != EOF) {
 				strbuf_trim(&confirm);
 			} else {
 				putchar('\n');
 				eof = 1;
 			}
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/clean.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/clean.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/clean.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/clean.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/clone.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/clone.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/clone.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/clone.c	2015-05-01 03:12:02.000000000 +0800
@@ -31,13 +31,13 @@
  *
  * Implementation notes:
  *  - dropping use-separate-remote and no-separate-remote compatibility
  *
  */
 static const char * const builtin_clone_usage[] = {
-	N_("git clone [options] [--] <repo> [<dir>]"),
+	N_("git clone [<options>] [--] <repo> [<dir>]"),
 	NULL
 };
 
 static int option_no_checkout, option_bare, option_mirror, option_single_branch = -1;
 static int option_local = -1, option_no_hardlinks, option_shared, option_recursive;
 static char *option_template, *option_depth;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/clone.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/clone.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/clone.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/clone.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/column.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/column.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/column.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/column.c	2015-05-01 03:12:02.000000000 +0800
@@ -3,13 +3,13 @@
 #include "strbuf.h"
 #include "parse-options.h"
 #include "string-list.h"
 #include "column.h"
 
 static const char * const builtin_column_usage[] = {
-	N_("git column [options]"),
+	N_("git column [<options>]"),
 	NULL
 };
 static unsigned int colopts;
 
 static int column_config(const char *var, const char *value, void *cb)
 {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/column.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/column.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/column.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/column.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/commit.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/commit.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/commit.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/commit.c	2015-05-01 03:12:02.000000000 +0800
@@ -31,18 +31,18 @@
 #include "column.h"
 #include "sequencer.h"
 #include "notes-utils.h"
 #include "mailmap.h"
 
 static const char * const builtin_commit_usage[] = {
-	N_("git commit [options] [--] <pathspec>..."),
+	N_("git commit [<options>] [--] <pathspec>..."),
 	NULL
 };
 
 static const char * const builtin_status_usage[] = {
-	N_("git status [options] [--] <pathspec>..."),
+	N_("git status [<options>] [--] <pathspec>..."),
 	NULL
 };
 
 static const char implicit_ident_advice_noconfig[] =
 N_("Your name and email address were configured automatically based\n"
 "on your username and hostname. Please check that they are accurate.\n"
@@ -226,13 +226,13 @@
  * Take a union of paths in the index and the named tree (typically, "HEAD"),
  * and return the paths that match the given pattern in list.
  */
 static int list_paths(struct string_list *list, const char *with_tree,
 		      const char *prefix, const struct pathspec *pattern)
 {
-	int i;
+	int i, ret;
 	char *m;
 
 	if (!pattern->nr)
 		return 0;
 
 	m = xcalloc(1, pattern->nr);
@@ -253,13 +253,15 @@
 			continue;
 		item = string_list_insert(list, ce->name);
 		if (ce_skip_worktree(ce))
 			item->util = item; /* better a valid pointer than a fake one */
 	}
 
-	return report_path_error(m, pattern, prefix);
+	ret = report_path_error(m, pattern, prefix);
+	free(m);
+	return ret;
 }
 
 static void add_remove_files(struct string_list *list)
 {
 	int i;
 	for (i = 0; i < list->nr; i++) {
@@ -1763,14 +1765,14 @@
 	strbuf_insert(&sb, strlen(reflog_msg), ": ", 2);
 
 	transaction = ref_transaction_begin(&err);
 	if (!transaction ||
 	    ref_transaction_update(transaction, "HEAD", sha1,
 				   current_head
-				   ? current_head->object.sha1 : NULL,
-				   0, !!current_head, sb.buf, &err) ||
+				   ? current_head->object.sha1 : null_sha1,
+				   0, sb.buf, &err) ||
 	    ref_transaction_commit(transaction, &err)) {
 		rollback_index_files();
 		die("%s", err.buf);
 	}
 	ref_transaction_free(transaction);
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/commit.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/commit.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/commit.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/commit.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/commit-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/commit-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/commit-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/commit-tree.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/config.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/config.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/config.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/config.c	2015-05-01 03:12:02.000000000 +0800
@@ -2,13 +2,13 @@
 #include "cache.h"
 #include "color.h"
 #include "parse-options.h"
 #include "urlmatch.h"
 
 static const char *const builtin_config_usage[] = {
-	N_("git config [options]"),
+	N_("git config [<options>]"),
 	NULL
 };
 
 static char *key;
 static regex_t *key_regexp;
 static regex_t *regexp;
@@ -452,15 +452,15 @@
 
 static char *default_user_config(void)
 {
 	struct strbuf buf = STRBUF_INIT;
 	strbuf_addf(&buf,
 		    _("# This is Git's per-user configuration file.\n"
-		      "[user]\n"
+		      "[core]\n"
 		      "# Please adapt and uncomment the following lines:\n"
-		      "#	name = %s\n"
+		      "#	user = %s\n"
 		      "#	email = %s\n"),
 		    ident_default_name(),
 		    ident_default_email());
 	return strbuf_detach(&buf, NULL);
 }
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/config.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/config.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/config.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/config.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/count-objects.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/count-objects.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/count-objects.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/count-objects.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/credential.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/credential.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/credential.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/credential.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/describe.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/describe.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/describe.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/describe.c	2015-05-01 03:12:02.000000000 +0800
@@ -11,14 +11,14 @@
 #include "argv-array.h"
 
 #define SEEN		(1u << 0)
 #define MAX_TAGS	(FLAG_BITS - 1)
 
 static const char * const describe_usage[] = {
-	N_("git describe [options] <commit-ish>*"),
-	N_("git describe [options] --dirty"),
+	N_("git describe [<options>] [<commit-ish>...]"),
+	N_("git describe [<options>] --dirty"),
 	NULL
 };
 
 static int debug;	/* Display lots of verbose info */
 static int all;	/* Any valid ref can be used */
 static int tags;	/* Allow lightweight tags */
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/describe.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/describe.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/describe.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/describe.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff-files.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff-files.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff-files.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff-files.c	2015-05-01 03:12:02.000000000 +0800
@@ -8,13 +8,13 @@
 #include "commit.h"
 #include "revision.h"
 #include "builtin.h"
 #include "submodule.h"
 
 static const char diff_files_usage[] =
-"git diff-files [-q] [-0/-1/2/3 |-c|--cc] [<common diff options>] [<path>...]"
+"git diff-files [-q] [-0 | -1 | -2 | -3 | -c | --cc] [<common-diff-options>] [<path>...]"
 COMMON_DIFF_OPTIONS_HELP;
 
 int cmd_diff_files(int argc, const char **argv, const char *prefix)
 {
 	struct rev_info rev;
 	int result;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff-files.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff-files.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff-files.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff-files.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff-index.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff-index.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff-index.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff-index.c	2015-05-01 03:12:02.000000000 +0800
@@ -4,13 +4,13 @@
 #include "revision.h"
 #include "builtin.h"
 #include "submodule.h"
 
 static const char diff_cache_usage[] =
 "git diff-index [-m] [--cached] "
-"[<common diff options>] <tree-ish> [<path>...]"
+"[<common-diff-options>] <tree-ish> [<path>...]"
 COMMON_DIFF_OPTIONS_HELP;
 
 int cmd_diff_index(int argc, const char **argv, const char *prefix)
 {
 	struct rev_info rev;
 	int cached = 0;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff-tree.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff-tree.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff-tree.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff-tree.c	2015-05-01 03:12:02.000000000 +0800
@@ -79,13 +79,13 @@
 	      sha1_to_hex(sha1), typename(obj->type));
 	return -1;
 }
 
 static const char diff_tree_usage[] =
 "git diff-tree [--stdin] [-m] [-c] [--cc] [-s] [-v] [--pretty] [-t] [-r] [--root] "
-"[<common diff options>] <tree-ish> [<tree-ish>] [<path>...]\n"
+"[<common-diff-options>] <tree-ish> [<tree-ish>] [<path>...]\n"
 "  -r            diff recursively\n"
 "  --root        include the initial commit as diff against /dev/null\n"
 COMMON_DIFF_OPTIONS_HELP;
 
 static void diff_tree_tweak_rev(struct rev_info *rev, struct setup_revision_opt *opt)
 {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff-tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fast-export.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fast-export.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fast-export.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fast-export.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fetch.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fetch.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fetch.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fetch.c	2015-05-01 03:12:02.000000000 +0800
@@ -412,14 +412,16 @@
 	if (!rla)
 		rla = default_rla.buf;
 	snprintf(msg, sizeof(msg), "%s: %s", rla, action);
 
 	transaction = ref_transaction_begin(&err);
 	if (!transaction ||
-	    ref_transaction_update(transaction, ref->name, ref->new_sha1,
-				   ref->old_sha1, 0, check_old, msg, &err))
+	    ref_transaction_update(transaction, ref->name,
+				   ref->new_sha1,
+				   check_old ? ref->old_sha1 : NULL,
+				   0, msg, &err))
 		goto fail;
 
 	ret = ref_transaction_commit(transaction, &err);
 	if (ret) {
 		df_conflict = (ret == TRANSACTION_NAME_CONFLICT);
 		goto fail;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fetch.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fetch.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fetch.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fetch.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fetch-pack.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fetch-pack.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fetch-pack.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fetch-pack.c	2015-05-01 03:12:02.000000000 +0800
@@ -3,13 +3,13 @@
 #include "fetch-pack.h"
 #include "remote.h"
 #include "connect.h"
 #include "sha1-array.h"
 
 static const char fetch_pack_usage[] =
-"git fetch-pack [--all] [--stdin] [--quiet|-q] [--keep|-k] [--thin] "
+"git fetch-pack [--all] [--stdin] [--quiet | -q] [--keep | -k] [--thin] "
 "[--include-tag] [--upload-pack=<git-upload-pack>] [--depth=<n>] "
 "[--no-progress] [--diag-url] [-v] [<host>:]<directory> [<refs>...]";
 
 static void add_sought_entry_mem(struct ref ***sought, int *nr, int *alloc,
 				 const char *name, int namelen)
 {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fetch-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fetch-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fetch-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fetch-pack.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fmt-merge-msg.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fmt-merge-msg.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fmt-merge-msg.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fmt-merge-msg.c	2015-05-01 03:12:02.000000000 +0800
@@ -7,13 +7,13 @@
 #include "string-list.h"
 #include "branch.h"
 #include "fmt-merge-msg.h"
 #include "gpg-interface.h"
 
 static const char * const fmt_merge_msg_usage[] = {
-	N_("git fmt-merge-msg [-m <message>] [--log[=<n>]|--no-log] [--file <file>]"),
+	N_("git fmt-merge-msg [-m <message>] [--log[=<n>] | --no-log] [--file <file>]"),
 	NULL
 };
 
 static int use_branch_desc;
 
 int fmt_merge_msg_config(const char *key, const char *value, void *cb)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fmt-merge-msg.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fmt-merge-msg.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fmt-merge-msg.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fmt-merge-msg.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/for-each-ref.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/for-each-ref.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/for-each-ref.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/for-each-ref.c	2015-05-01 03:12:02.000000000 +0800
@@ -1057,13 +1057,13 @@
 	len = strlen(arg);
 	s->atom = parse_atom(arg, arg+len);
 	return 0;
 }
 
 static char const * const for_each_ref_usage[] = {
-	N_("git for-each-ref [options] [<pattern>]"),
+	N_("git for-each-ref [<options>] [<pattern>]"),
 	NULL
 };
 
 int cmd_for_each_ref(int argc, const char **argv, const char *prefix)
 {
 	int i, num_refs;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/for-each-ref.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/for-each-ref.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/for-each-ref.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/for-each-ref.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fsck.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fsck.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fsck.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fsck.c	2015-05-01 03:12:02.000000000 +0800
@@ -597,13 +597,13 @@
 	for (i = 0; i < it->subtree_nr; i++)
 		err |= fsck_cache_tree(it->down[i]->cache_tree);
 	return err;
 }
 
 static char const * const fsck_usage[] = {
-	N_("git fsck [options] [<object>...]"),
+	N_("git fsck [<options>] [<object>...]"),
 	NULL
 };
 
 static struct option fsck_opts[] = {
 	OPT__VERBOSE(&verbose, N_("be verbose")),
 	OPT_BOOL(0, "unreachable", &show_unreachable, N_("show unreachable objects")),
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fsck.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fsck.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fsck.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fsck.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/gc.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/gc.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/gc.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/gc.c	2015-05-01 03:12:02.000000000 +0800
@@ -18,13 +18,13 @@
 #include "argv-array.h"
 #include "commit.h"
 
 #define FAILED_RUN "failed to run %s"
 
 static const char * const builtin_gc_usage[] = {
-	N_("git gc [options]"),
+	N_("git gc [<options>]"),
 	NULL
 };
 
 static int pack_refs = 1;
 static int prune_reflogs = 1;
 static int aggressive_depth = 250;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/gc.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/gc.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/gc.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/gc.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/get-tar-commit-id.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/get-tar-commit-id.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/get-tar-commit-id.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/get-tar-commit-id.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/grep.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/grep.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/grep.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/grep.c	2015-05-01 03:12:02.000000000 +0800
@@ -17,13 +17,13 @@
 #include "grep.h"
 #include "quote.h"
 #include "dir.h"
 #include "pathspec.h"
 
 static char const * const grep_usage[] = {
-	N_("git grep [options] [-e] <pattern> [<rev>...] [[--] <path>...]"),
+	N_("git grep [<options>] [-e] <pattern> [<rev>...] [[--] <path>...]"),
 	NULL
 };
 
 static int use_threads = 1;
 
 #ifndef NO_PTHREADS
@@ -735,13 +735,13 @@
 		OPT_GROUP(""),
 		{ OPTION_STRING, 'O', "open-files-in-pager", &show_in_pager,
 			N_("pager"), N_("show matching files in the pager"),
 			PARSE_OPT_OPTARG, NULL, (intptr_t)default_pager },
 		OPT_BOOL(0, "ext-grep", &external_grep_allowed__ignored,
 			 N_("allow calling of grep(1) (ignored by this build)")),
-		{ OPTION_CALLBACK, 0, "help-all", &options, NULL, N_("show usage"),
+		{ OPTION_CALLBACK, 0, "help-all", NULL, NULL, N_("show usage"),
 		  PARSE_OPT_HIDDEN | PARSE_OPT_NOARG, help_callback },
 		OPT_END()
 	};
 
 	/*
 	 * 'git grep -h', unlike 'git grep -h <pattern>', is a request
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/grep.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/grep.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/grep.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/grep.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/hash-object.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/hash-object.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/hash-object.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/hash-object.c	2015-05-01 03:12:02.000000000 +0800
@@ -76,13 +76,13 @@
 	strbuf_release(&nbuf);
 }
 
 int cmd_hash_object(int argc, const char **argv, const char *prefix)
 {
 	static const char * const hash_object_usage[] = {
-		N_("git hash-object [-t <type>] [-w] [--path=<file>|--no-filters] [--stdin] [--] <file>..."),
+		N_("git hash-object [-t <type>] [-w] [--path=<file> | --no-filters] [--stdin] [--] <file>..."),
 		N_("git hash-object  --stdin-paths < <list-of-paths>"),
 		NULL
 	};
 	const char *type = blob_type;
 	int hashstdin = 0;
 	int stdin_paths = 0;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/hash-object.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/hash-object.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/hash-object.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/hash-object.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/help.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/help.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/help.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/help.c	2015-05-01 03:12:02.000000000 +0800
@@ -46,13 +46,13 @@
 	OPT_SET_INT('i', "info", &help_format, N_("show info page"),
 			HELP_FORMAT_INFO),
 	OPT_END(),
 };
 
 static const char * const builtin_help_usage[] = {
-	N_("git help [--all] [--guides] [--man|--web|--info] [command]"),
+	N_("git help [--all] [--guides] [--man | --web | --info] [<command>]"),
 	NULL
 };
 
 static enum help_format parse_help_format(const char *format)
 {
 	if (!strcmp(format, "man"))
@@ -168,13 +168,13 @@
 }
 
 static void exec_man_cmd(const char *cmd, const char *page)
 {
 	struct strbuf shell_cmd = STRBUF_INIT;
 	strbuf_addf(&shell_cmd, "%s %s", cmd, page);
-	execl("/bin/sh", "sh", "-c", shell_cmd.buf, (char *)NULL);
+	execl(SHELL_PATH, SHELL_PATH, "-c", shell_cmd.buf, (char *)NULL);
 	warning(_("failed to exec '%s': %s"), cmd, strerror(errno));
 }
 
 static void add_man_viewer(const char *name)
 {
 	struct man_viewer_list **p = &man_viewer_list;
@@ -453,13 +453,13 @@
 	putchar('\n');
 }
 
 int cmd_help(int argc, const char **argv, const char *prefix)
 {
 	int nongit;
-	const char *alias;
+	char *alias;
 	enum help_format parsed_help_format;
 
 	argc = parse_options(argc, argv, prefix, builtin_help_options,
 			builtin_help_usage, 0);
 	parsed_help_format = help_format;
 
@@ -496,12 +496,13 @@
 	if (help_format == HELP_FORMAT_NONE)
 		help_format = parse_help_format(DEFAULT_HELP_FORMAT);
 
 	alias = alias_lookup(argv[0]);
 	if (alias && !is_git_command(argv[0])) {
 		printf_ln(_("`git %s' is aliased to `%s'"), argv[0], alias);
+		free(alias);
 		return 0;
 	}
 
 	switch (help_format) {
 	case HELP_FORMAT_NONE:
 	case HELP_FORMAT_MAN:
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/help.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/help.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/help.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/help.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/index-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/index-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/index-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/index-pack.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/init-db.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/init-db.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/init-db.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/init-db.c	2015-05-01 03:12:02.000000000 +0800
@@ -469,13 +469,13 @@
 {
 	*((int *) opt->value) = (arg) ? git_config_perm("arg", arg) : PERM_GROUP;
 	return 0;
 }
 
 static const char *const init_db_usage[] = {
-	N_("git init [-q | --quiet] [--bare] [--template=<template-directory>] [--shared[=<permissions>]] [directory]"),
+	N_("git init [-q | --quiet] [--bare] [--template=<template-directory>] [--shared[=<permissions>]] [<directory>]"),
 	NULL
 };
 
 /*
  * If you want to, you can share the DB area with any number of branches.
  * That has advantages: you can save space by sharing all the SHA1 objects.
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/init-db.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/init-db.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/init-db.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/init-db.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/interpret-trailers.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/interpret-trailers.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/interpret-trailers.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/interpret-trailers.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/log.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/log.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/log.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/log.c	2015-05-01 03:12:02.000000000 +0800
@@ -36,13 +36,13 @@
 static int use_mailmap_config;
 static const char *fmt_patch_subject_prefix = "PATCH";
 static const char *fmt_pretty;
 
 static const char * const builtin_log_usage[] = {
 	N_("git log [<options>] [<revision range>] [[--] <path>...]"),
-	N_("git show [options] <object>..."),
+	N_("git show [<options>] <object>..."),
 	NULL
 };
 
 struct line_opt_callback_data {
 	struct rev_info *rev;
 	const char *prefix;
@@ -1020,13 +1020,13 @@
 
 	return xstrdup(prefix_filename(prefix, outdir_offset,
 				       output_directory));
 }
 
 static const char * const builtin_format_patch_usage[] = {
-	N_("git format-patch [options] [<since> | <revision range>]"),
+	N_("git format-patch [<options>] [<since> | <revision-range>]"),
 	NULL
 };
 
 static int keep_subject = 0;
 
 static int keep_callback(const struct option *opt, const char *arg, int unset)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/log.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/log.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/log.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/log.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/ls-files.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/ls-files.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/ls-files.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/ls-files.c	2015-05-01 03:12:02.000000000 +0800
@@ -352,13 +352,13 @@
 				ce->ce_flags |= CE_UPDATE;
 		}
 	}
 }
 
 static const char * const ls_files_usage[] = {
-	N_("git ls-files [options] [<file>...]"),
+	N_("git ls-files [<options>] [<file>...]"),
 	NULL
 };
 
 static int option_parse_z(const struct option *opt,
 			  const char *arg, int unset)
 {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/ls-files.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/ls-files.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/ls-files.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/ls-files.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/ls-remote.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/ls-remote.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/ls-remote.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/ls-remote.c	2015-05-01 03:12:02.000000000 +0800
@@ -2,13 +2,13 @@
 #include "cache.h"
 #include "transport.h"
 #include "remote.h"
 
 static const char ls_remote_usage[] =
 "git ls-remote [--heads] [--tags]  [-u <exec> | --upload-pack <exec>]\n"
-"                     [-q|--quiet] [--exit-code] [--get-url] [<repository> [<refs>...]]";
+"                     [-q | --quiet] [--exit-code] [--get-url] [<repository> [<refs>...]]";
 
 /*
  * Is there one among the list of patterns that match the tail part
  * of the path?
  */
 static int tail_match(const char **pattern, const char *path)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/ls-remote.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/ls-remote.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/ls-remote.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/ls-remote.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/ls-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/ls-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/ls-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/ls-tree.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mailinfo.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mailinfo.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mailinfo.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mailinfo.c	2015-05-01 03:12:02.000000000 +0800
@@ -1028,13 +1028,13 @@
 	}
 	/* perhaps others here */
 	return 0;
 }
 
 static const char mailinfo_usage[] =
-	"git mailinfo [-k|-b] [-m | --message-id] [-u | --encoding=<encoding> | -n] [--scissors | --no-scissors] msg patch < mail >info";
+	"git mailinfo [-k | -b] [-m | --message-id] [-u | --encoding=<encoding> | -n] [--scissors | --no-scissors] <msg> <patch> < mail >info";
 
 int cmd_mailinfo(int argc, const char **argv, const char *prefix)
 {
 	const char *def_charset;
 
 	/* NEEDSWORK: might want to do the optional .git/ directory
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mailinfo.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mailinfo.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mailinfo.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mailinfo.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mailsplit.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mailsplit.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mailsplit.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mailsplit.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-base.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-base.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-base.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-base.c	2015-05-01 03:12:02.000000000 +0800
@@ -23,14 +23,14 @@
 	}
 
 	return 0;
 }
 
 static const char * const merge_base_usage[] = {
-	N_("git merge-base [-a|--all] <commit> <commit>..."),
-	N_("git merge-base [-a|--all] --octopus <commit>..."),
+	N_("git merge-base [-a | --all] <commit> <commit>..."),
+	N_("git merge-base [-a | --all] --octopus <commit>..."),
 	N_("git merge-base --independent <commit>..."),
 	N_("git merge-base --is-ancestor <commit> <commit>"),
 	N_("git merge-base --fork-point <ref> [<commit>]"),
 	NULL
 };
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-base.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-base.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-base.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-base.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge.c	2015-05-01 03:12:02.000000000 +0800
@@ -39,14 +39,14 @@
 struct strategy {
 	const char *name;
 	unsigned attr;
 };
 
 static const char * const builtin_merge_usage[] = {
-	N_("git merge [options] [<commit>...]"),
-	N_("git merge [options] <msg> HEAD <commit>"),
+	N_("git merge [<options>] [<commit>...]"),
+	N_("git merge [<options>] <msg> HEAD <commit>"),
 	N_("git merge --abort"),
 	NULL
 };
 
 static int show_diffstat = 1, shortlog_len = -1, squash;
 static int option_commit = 1;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-file.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-file.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-file.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-file.c	2015-05-01 03:12:02.000000000 +0800
@@ -2,13 +2,13 @@
 #include "cache.h"
 #include "xdiff/xdiff.h"
 #include "xdiff-interface.h"
 #include "parse-options.h"
 
 static const char *const merge_file_usage[] = {
-	N_("git merge-file [options] [-L name1 [-L orig [-L name2]]] file1 orig_file file2"),
+	N_("git merge-file [<options>] [-L <name1> [-L <orig> [-L <name2>]]] <file1> <orig-file> <file2>"),
 	NULL
 };
 
 static int label_cb(const struct option *opt, const char *arg, int unset)
 {
 	static int label_count = 0;
@@ -39,13 +39,13 @@
 		OPT_SET_INT(0, "union", &xmp.favor, N_("for conflicts, use a union version"),
 			    XDL_MERGE_FAVOR_UNION),
 		OPT_INTEGER(0, "marker-size", &xmp.marker_size,
 			    N_("for conflicts, use this marker size")),
 		OPT__QUIET(&quiet, N_("do not warn about conflicts")),
 		OPT_CALLBACK('L', NULL, names, N_("name"),
-			     N_("set labels for file1/orig_file/file2"), &label_cb),
+			     N_("set labels for file1/orig-file/file2"), &label_cb),
 		OPT_END(),
 	};
 
 	xmp.level = XDL_MERGE_ZEALOUS_ALNUM;
 	xmp.style = 0;
 	xmp.favor = 0;
@@ -72,14 +72,13 @@
 	for (i = 0; i < 3; i++) {
 		const char *fname = prefix_filename(prefix, prefixlen, argv[i]);
 		if (!names[i])
 			names[i] = argv[i];
 		if (read_mmfile(mmfs + i, fname))
 			return -1;
-		if (mmfs[i].size > MAX_XDIFF_SIZE ||
-		    buffer_is_binary(mmfs[i].ptr, mmfs[i].size))
+		if (buffer_is_binary(mmfs[i].ptr, mmfs[i].size))
 			return error("Cannot merge binary files: %s",
 					argv[i]);
 	}
 
 	xmp.ancestor = names[1];
 	xmp.file1 = names[0];
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-file.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-file.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-file.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-file.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-index.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-index.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-index.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-index.c	2015-05-01 03:12:02.000000000 +0800
@@ -72,13 +72,13 @@
 	/* Without this we cannot rely on waitpid() to tell
 	 * what happened to our children.
 	 */
 	signal(SIGCHLD, SIG_DFL);
 
 	if (argc < 3)
-		usage("git merge-index [-o] [-q] <merge-program> (-a | [--] <filename>*)");
+		usage("git merge-index [-o] [-q] <merge-program> (-a | [--] [<filename>...])");
 
 	read_cache();
 
 	i = 1;
 	if (!strcmp(argv[i], "-o")) {
 		one_shot = 1;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-ours.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-ours.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-ours.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-ours.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-recursive.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-recursive.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-recursive.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-recursive.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-tree.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-tree.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-tree.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-tree.c	2015-05-01 03:12:02.000000000 +0800
@@ -115,14 +115,13 @@
 		size = 0;
 	src.size = size;
 	dst.ptr = result(entry, &size);
 	if (!dst.ptr)
 		size = 0;
 	dst.size = size;
-	if (xdi_diff(&src, &dst, &xpp, &xecfg, &ecb))
-		die("unable to generate diff");
+	xdi_diff(&src, &dst, &xpp, &xecfg, &ecb);
 	free(src.ptr);
 	free(dst.ptr);
 }
 
 static void show_result_list(struct merge_list *entry)
 {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mktag.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mktag.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mktag.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mktag.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mktree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mktree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mktree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mktree.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mv.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mv.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mv.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mv.c	2015-05-01 03:12:02.000000000 +0800
@@ -9,13 +9,13 @@
 #include "cache-tree.h"
 #include "string-list.h"
 #include "parse-options.h"
 #include "submodule.h"
 
 static const char * const builtin_mv_usage[] = {
-	N_("git mv [options] <source>... <destination>"),
+	N_("git mv [<options>] <source>... <destination>"),
 	NULL
 };
 
 #define DUP_BASENAME 1
 #define KEEP_TRAILING_SLASH 2
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mv.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mv.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mv.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mv.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/name-rev.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/name-rev.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/name-rev.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/name-rev.c	2015-05-01 03:12:02.000000000 +0800
@@ -249,15 +249,15 @@
 		printf("%s\n", find_unique_abbrev(sha1, DEFAULT_ABBREV));
 	else
 		die("cannot describe '%s'", sha1_to_hex(sha1));
 }
 
 static char const * const name_rev_usage[] = {
-	N_("git name-rev [options] <commit>..."),
-	N_("git name-rev [options] --all"),
-	N_("git name-rev [options] --stdin"),
+	N_("git name-rev [<options>] <commit>..."),
+	N_("git name-rev [<options>] --all"),
+	N_("git name-rev [<options>] --stdin"),
 	NULL
 };
 
 static void name_rev_line(char *p, struct name_ref_data *data)
 {
 	int forty = 0;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/name-rev.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/name-rev.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/name-rev.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/name-rev.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/notes.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/notes.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/notes.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/notes.c	2015-05-01 03:12:02.000000000 +0800
@@ -18,24 +18,24 @@
 #include "parse-options.h"
 #include "string-list.h"
 #include "notes-merge.h"
 #include "notes-utils.h"
 
 static const char * const git_notes_usage[] = {
-	N_("git notes [--ref <notes_ref>] [list [<object>]]"),
-	N_("git notes [--ref <notes_ref>] add [-f] [--allow-empty] [-m <msg> | -F <file> | (-c | -C) <object>] [<object>]"),
-	N_("git notes [--ref <notes_ref>] copy [-f] <from-object> <to-object>"),
-	N_("git notes [--ref <notes_ref>] append [--allow-empty] [-m <msg> | -F <file> | (-c | -C) <object>] [<object>]"),
-	N_("git notes [--ref <notes_ref>] edit [--allow-empty] [<object>]"),
-	N_("git notes [--ref <notes_ref>] show [<object>]"),
-	N_("git notes [--ref <notes_ref>] merge [-v | -q] [-s <strategy> ] <notes_ref>"),
+	N_("git notes [--ref <notes-ref>] [list [<object>]]"),
+	N_("git notes [--ref <notes-ref>] add [-f] [--allow-empty] [-m <msg> | -F <file> | (-c | -C) <object>] [<object>]"),
+	N_("git notes [--ref <notes-ref>] copy [-f] <from-object> <to-object>"),
+	N_("git notes [--ref <notes-ref>] append [--allow-empty] [-m <msg> | -F <file> | (-c | -C) <object>] [<object>]"),
+	N_("git notes [--ref <notes-ref>] edit [--allow-empty] [<object>]"),
+	N_("git notes [--ref <notes-ref>] show [<object>]"),
+	N_("git notes [--ref <notes-ref>] merge [-v | -q] [-s <strategy>] <notes-ref>"),
 	N_("git notes merge --commit [-v | -q]"),
 	N_("git notes merge --abort [-v | -q]"),
-	N_("git notes [--ref <notes_ref>] remove [<object>...]"),
-	N_("git notes [--ref <notes_ref>] prune [-n | -v]"),
-	N_("git notes [--ref <notes_ref>] get-ref"),
+	N_("git notes [--ref <notes-ref>] remove [<object>...]"),
+	N_("git notes [--ref <notes-ref>] prune [-n | -v]"),
+	N_("git notes [--ref <notes-ref>] get-ref"),
 	NULL
 };
 
 static const char * const git_notes_list_usage[] = {
 	N_("git notes [list [<object>]]"),
 	NULL
@@ -65,13 +65,13 @@
 static const char * const git_notes_show_usage[] = {
 	N_("git notes show [<object>]"),
 	NULL
 };
 
 static const char * const git_notes_merge_usage[] = {
-	N_("git notes merge [<options>] <notes_ref>"),
+	N_("git notes merge [<options>] <notes-ref>"),
 	N_("git notes merge --commit [<options>]"),
 	N_("git notes merge --abort [<options>]"),
 	NULL
 };
 
 static const char * const git_notes_remove_usage[] = {
@@ -948,13 +948,13 @@
 int cmd_notes(int argc, const char **argv, const char *prefix)
 {
 	int result;
 	const char *override_notes_ref = NULL;
 	struct option options[] = {
 		OPT_STRING(0, "ref", &override_notes_ref, N_("notes-ref"),
-			   N_("use notes from <notes_ref>")),
+			   N_("use notes from <notes-ref>")),
 		OPT_END()
 	};
 
 	git_config(git_default_config, NULL);
 	argc = parse_options(argc, argv, prefix, options, git_notes_usage,
 			     PARSE_OPT_STOP_AT_NON_OPTION);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/notes.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/notes.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/notes.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/notes.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/pack-objects.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/pack-objects.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/pack-objects.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/pack-objects.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/pack-redundant.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/pack-redundant.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/pack-redundant.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/pack-redundant.c	2015-05-01 03:12:02.000000000 +0800
@@ -8,13 +8,13 @@
 
 #include "builtin.h"
 
 #define BLKSIZE 512
 
 static const char pack_redundant_usage[] =
-"git pack-redundant [ --verbose ] [ --alt-odb ] < --all | <.pack filename> ...>";
+"git pack-redundant [--verbose] [--alt-odb] (--all | <filename.pack>...)";
 
 static int load_all_packs, verbose, alt_odb;
 
 struct llist_item {
 	struct llist_item *next;
 	const unsigned char *sha1;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/pack-redundant.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/pack-redundant.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/pack-redundant.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/pack-redundant.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/pack-refs.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/pack-refs.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/pack-refs.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/pack-refs.c	2015-05-01 03:12:02.000000000 +0800
@@ -1,12 +1,12 @@
 #include "builtin.h"
 #include "parse-options.h"
 #include "refs.h"
 
 static char const * const pack_refs_usage[] = {
-	N_("git pack-refs [options]"),
+	N_("git pack-refs [<options>]"),
 	NULL
 };
 
 int cmd_pack_refs(int argc, const char **argv, const char *prefix)
 {
 	unsigned int flags = PACK_REFS_PRUNE;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/pack-refs.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/pack-refs.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/pack-refs.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/pack-refs.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/patch-id.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/patch-id.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/patch-id.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/patch-id.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/prune.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/prune.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/prune.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/prune.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/prune-packed.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/prune-packed.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/prune-packed.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/prune-packed.c	2015-05-01 03:12:02.000000000 +0800
@@ -1,13 +1,13 @@
 #include "builtin.h"
 #include "cache.h"
 #include "progress.h"
 #include "parse-options.h"
 
 static const char * const prune_packed_usage[] = {
-	N_("git prune-packed [-n|--dry-run] [-q|--quiet]"),
+	N_("git prune-packed [-n | --dry-run] [-q | --quiet]"),
 	NULL
 };
 
 static struct progress *progress;
 
 static int prune_subdir(int nr, const char *path, void *data)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/prune-packed.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/prune-packed.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/prune-packed.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/prune-packed.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/push.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/push.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/push.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/push.c	2015-05-01 03:12:02.000000000 +0800
@@ -470,19 +470,28 @@
 
 	return 0;
 }
 
 static int git_push_config(const char *k, const char *v, void *cb)
 {
-	struct wt_status *s = cb;
+	int *flags = cb;
 	int status;
 
 	status = git_gpg_config(k, v, NULL);
 	if (status)
 		return status;
-	return git_default_config(k, v, s);
+
+	if (!strcmp(k, "push.followtags")) {
+		if (git_config_bool(k, v))
+			*flags |= TRANSPORT_PUSH_FOLLOW_TAGS;
+		else
+			*flags &= ~TRANSPORT_PUSH_FOLLOW_TAGS;
+		return 0;
+	}
+
+	return git_default_config(k, v, NULL);
 }
 
 int cmd_push(int argc, const char **argv, const char *prefix)
 {
 	int flags = 0;
 	int tags = 0;
@@ -515,17 +524,18 @@
 		OPT_BIT(0, "prune", &flags, N_("prune locally removed refs"),
 			TRANSPORT_PUSH_PRUNE),
 		OPT_BIT(0, "no-verify", &flags, N_("bypass pre-push hook"), TRANSPORT_PUSH_NO_HOOK),
 		OPT_BIT(0, "follow-tags", &flags, N_("push missing but relevant tags"),
 			TRANSPORT_PUSH_FOLLOW_TAGS),
 		OPT_BIT(0, "signed", &flags, N_("GPG sign the push"), TRANSPORT_PUSH_CERT),
+		OPT_BIT(0, "atomic", &flags, N_("request atomic transaction on remote side"), TRANSPORT_PUSH_ATOMIC),
 		OPT_END()
 	};
 
 	packet_trace_identity("push");
-	git_config(git_push_config, NULL);
+	git_config(git_push_config, &flags);
 	argc = parse_options(argc, argv, prefix, options, push_usage, 0);
 
 	if (deleterefs && (tags || (flags & (TRANSPORT_PUSH_ALL | TRANSPORT_PUSH_MIRROR))))
 		die(_("--delete is incompatible with --all, --mirror and --tags"));
 	if (deleterefs && argc < 2)
 		die(_("--delete doesn't make sense without any refs"));
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/push.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/push.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/push.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/push.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/read-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/read-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/read-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/read-tree.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/receive-pack.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/receive-pack.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/receive-pack.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/receive-pack.c	2015-05-01 03:12:02.000000000 +0800
@@ -35,15 +35,17 @@
 static enum deny_action deny_current_branch = DENY_UNCONFIGURED;
 static enum deny_action deny_delete_current = DENY_UNCONFIGURED;
 static int receive_fsck_objects = -1;
 static int transfer_fsck_objects = -1;
 static int receive_unpack_limit = -1;
 static int transfer_unpack_limit = -1;
+static int advertise_atomic_push = 1;
 static int unpack_limit = 100;
 static int report_status;
 static int use_sideband;
+static int use_atomic;
 static int quiet;
 static int prefer_ofs_delta = 1;
 static int auto_update_server_info;
 static int auto_gc = 1;
 static int fix_thin = 1;
 static int stateless_rpc;
@@ -64,12 +66,13 @@
 static const char *NONCE_MISSING = "MISSING";
 static const char *NONCE_OK = "OK";
 static const char *NONCE_SLOP = "SLOP";
 static const char *nonce_status;
 static long nonce_stamp_slop;
 static unsigned long nonce_stamp_slop_limit;
+static struct ref_transaction *transaction;
 
 static enum deny_action parse_deny_action(const char *var, const char *value)
 {
 	if (value) {
 		if (!strcasecmp(value, "ignore"))
 			return DENY_IGNORE;
@@ -157,12 +160,17 @@
 
 	if (strcmp(var, "receive.certnonceslop") == 0) {
 		nonce_stamp_slop_limit = git_config_ulong(var, value);
 		return 0;
 	}
 
+	if (strcmp(var, "receive.advertiseatomic") == 0) {
+		advertise_atomic_push = git_config_bool(var, value);
+		return 0;
+	}
+
 	return git_default_config(var, value, cb);
 }
 
 static void show_ref(const char *path, const unsigned char *sha1)
 {
 	if (ref_is_hidden(path))
@@ -172,12 +180,14 @@
 		packet_write(1, "%s %s\n", sha1_to_hex(sha1), path);
 	} else {
 		struct strbuf cap = STRBUF_INIT;
 
 		strbuf_addstr(&cap,
 			      "report-status delete-refs side-band-64k quiet");
+		if (advertise_atomic_push)
+			strbuf_addstr(&cap, " atomic");
 		if (prefer_ofs_delta)
 			strbuf_addstr(&cap, " ofs-delta");
 		if (push_cert_nonce)
 			strbuf_addf(&cap, " push-cert=%s", push_cert_nonce);
 		strbuf_addf(&cap, " agent=%s", git_user_agent_sanitized());
 		packet_write(1, "%s %s%c%s\n",
@@ -730,90 +740,129 @@
 
 	si->shallow_ref[cmd->index] = 0;
 	sha1_array_clear(&extra);
 	return 0;
 }
 
-static const char *update_worktree(unsigned char *sha1)
+/*
+ * NEEDSWORK: we should consolidate various implementions of "are we
+ * on an unborn branch?" test into one, and make the unified one more
+ * robust. !get_sha1() based check used here and elsewhere would not
+ * allow us to tell an unborn branch from corrupt ref, for example.
+ * For the purpose of fixing "deploy-to-update does not work when
+ * pushing into an empty repository" issue, this should suffice for
+ * now.
+ */
+static int head_has_history(void)
+{
+	unsigned char sha1[20];
+
+	return !get_sha1("HEAD", sha1);
+}
+
+static const char *push_to_deploy(unsigned char *sha1,
+				  struct argv_array *env,
+				  const char *work_tree)
 {
 	const char *update_refresh[] = {
 		"update-index", "-q", "--ignore-submodules", "--refresh", NULL
 	};
 	const char *diff_files[] = {
 		"diff-files", "--quiet", "--ignore-submodules", "--", NULL
 	};
 	const char *diff_index[] = {
 		"diff-index", "--quiet", "--cached", "--ignore-submodules",
-		"HEAD", "--", NULL
+		NULL, "--", NULL
 	};
 	const char *read_tree[] = {
 		"read-tree", "-u", "-m", NULL, NULL
 	};
-	const char *work_tree = git_work_tree_cfg ? git_work_tree_cfg : "..";
-	struct argv_array env = ARGV_ARRAY_INIT;
 	struct child_process child = CHILD_PROCESS_INIT;
 
-	if (is_bare_repository())
-		return "denyCurrentBranch = updateInstead needs a worktree";
-
-	argv_array_pushf(&env, "GIT_DIR=%s", absolute_path(get_git_dir()));
-
 	child.argv = update_refresh;
-	child.env = env.argv;
+	child.env = env->argv;
 	child.dir = work_tree;
 	child.no_stdin = 1;
 	child.stdout_to_stderr = 1;
 	child.git_cmd = 1;
-	if (run_command(&child)) {
-		argv_array_clear(&env);
+	if (run_command(&child))
 		return "Up-to-date check failed";
-	}
 
 	/* run_command() does not clean up completely; reinitialize */
 	child_process_init(&child);
 	child.argv = diff_files;
-	child.env = env.argv;
+	child.env = env->argv;
 	child.dir = work_tree;
 	child.no_stdin = 1;
 	child.stdout_to_stderr = 1;
 	child.git_cmd = 1;
-	if (run_command(&child)) {
-		argv_array_clear(&env);
+	if (run_command(&child))
 		return "Working directory has unstaged changes";
-	}
+
+	/* diff-index with either HEAD or an empty tree */
+	diff_index[4] = head_has_history() ? "HEAD" : EMPTY_TREE_SHA1_HEX;
 
 	child_process_init(&child);
 	child.argv = diff_index;
-	child.env = env.argv;
+	child.env = env->argv;
 	child.no_stdin = 1;
 	child.no_stdout = 1;
 	child.stdout_to_stderr = 0;
 	child.git_cmd = 1;
-	if (run_command(&child)) {
-		argv_array_clear(&env);
+	if (run_command(&child))
 		return "Working directory has staged changes";
-	}
 
 	read_tree[3] = sha1_to_hex(sha1);
 	child_process_init(&child);
 	child.argv = read_tree;
-	child.env = env.argv;
+	child.env = env->argv;
 	child.dir = work_tree;
 	child.no_stdin = 1;
 	child.no_stdout = 1;
 	child.stdout_to_stderr = 0;
 	child.git_cmd = 1;
-	if (run_command(&child)) {
-		argv_array_clear(&env);
+	if (run_command(&child))
 		return "Could not update working tree to new HEAD";
-	}
 
-	argv_array_clear(&env);
 	return NULL;
 }
 
+static const char *push_to_checkout_hook = "push-to-checkout";
+
+static const char *push_to_checkout(unsigned char *sha1,
+				    struct argv_array *env,
+				    const char *work_tree)
+{
+	argv_array_pushf(env, "GIT_WORK_TREE=%s", absolute_path(work_tree));
+	if (run_hook_le(env->argv, push_to_checkout_hook,
+			sha1_to_hex(sha1), NULL))
+		return "push-to-checkout hook declined";
+	else
+		return NULL;
+}
+
+static const char *update_worktree(unsigned char *sha1)
+{
+	const char *retval;
+	const char *work_tree = git_work_tree_cfg ? git_work_tree_cfg : "..";
+	struct argv_array env = ARGV_ARRAY_INIT;
+
+	if (is_bare_repository())
+		return "denyCurrentBranch = updateInstead needs a worktree";
+
+	argv_array_pushf(&env, "GIT_DIR=%s", absolute_path(get_git_dir()));
+
+	if (!find_hook(push_to_checkout_hook))
+		retval = push_to_deploy(sha1, &env, work_tree);
+	else
+		retval = push_to_checkout(sha1, &env, work_tree);
+
+	argv_array_clear(&env);
+	return retval;
+}
+
 static const char *update(struct command *cmd, struct shallow_info *si)
 {
 	const char *name = cmd->ref_name;
 	struct strbuf namespaced_name_buf = STRBUF_INIT;
 	const char *namespaced_name, *ret;
 	unsigned char *old_sha1 = cmd->old_sha1;
@@ -907,50 +956,51 @@
 	if (run_update_hook(cmd)) {
 		rp_error("hook declined to update %s", name);
 		return "hook declined";
 	}
 
 	if (is_null_sha1(new_sha1)) {
+		struct strbuf err = STRBUF_INIT;
 		if (!parse_object(old_sha1)) {
 			old_sha1 = NULL;
 			if (ref_exists(name)) {
 				rp_warning("Allowing deletion of corrupt ref.");
 			} else {
 				rp_warning("Deleting a non-existent ref.");
 				cmd->did_not_exist = 1;
 			}
 		}
-		if (delete_ref(namespaced_name, old_sha1, 0)) {
-			rp_error("failed to delete %s", name);
+		if (ref_transaction_delete(transaction,
+					   namespaced_name,
+					   old_sha1,
+					   0, "push", &err)) {
+			rp_error("%s", err.buf);
+			strbuf_release(&err);
 			return "failed to delete";
 		}
+		strbuf_release(&err);
 		return NULL; /* good */
 	}
 	else {
 		struct strbuf err = STRBUF_INIT;
-		struct ref_transaction *transaction;
-
 		if (shallow_update && si->shallow_ref[cmd->index] &&
 		    update_shallow_ref(cmd, si))
 			return "shallow error";
 
-		transaction = ref_transaction_begin(&err);
-		if (!transaction ||
-		    ref_transaction_update(transaction, namespaced_name,
-					   new_sha1, old_sha1, 0, 1, "push",
-					   &err) ||
-		    ref_transaction_commit(transaction, &err)) {
-			ref_transaction_free(transaction);
-
+		if (ref_transaction_update(transaction,
+					   namespaced_name,
+					   new_sha1, old_sha1,
+					   0, "push",
+					   &err)) {
 			rp_error("%s", err.buf);
 			strbuf_release(&err);
+
 			return "failed to update ref";
 		}
-
-		ref_transaction_free(transaction);
 		strbuf_release(&err);
+
 		return NULL; /* good */
 	}
 }
 
 static void run_update_post_hook(struct command *commands)
 {
@@ -1128,17 +1178,111 @@
 			cmd->error_string = "deny deleting a hidden ref";
 		else
 			cmd->error_string = "deny updating a hidden ref";
 	}
 }
 
+static int should_process_cmd(struct command *cmd)
+{
+	return !cmd->error_string && !cmd->skip_update;
+}
+
+static void warn_if_skipped_connectivity_check(struct command *commands,
+					       struct shallow_info *si)
+{
+	struct command *cmd;
+	int checked_connectivity = 1;
+
+	for (cmd = commands; cmd; cmd = cmd->next) {
+		if (should_process_cmd(cmd) && si->shallow_ref[cmd->index]) {
+			error("BUG: connectivity check has not been run on ref %s",
+			      cmd->ref_name);
+			checked_connectivity = 0;
+		}
+	}
+	if (!checked_connectivity)
+		die("BUG: connectivity check skipped???");
+}
+
+static void execute_commands_non_atomic(struct command *commands,
+					struct shallow_info *si)
+{
+	struct command *cmd;
+	struct strbuf err = STRBUF_INIT;
+
+	for (cmd = commands; cmd; cmd = cmd->next) {
+		if (!should_process_cmd(cmd))
+			continue;
+
+		transaction = ref_transaction_begin(&err);
+		if (!transaction) {
+			rp_error("%s", err.buf);
+			strbuf_reset(&err);
+			cmd->error_string = "transaction failed to start";
+			continue;
+		}
+
+		cmd->error_string = update(cmd, si);
+
+		if (!cmd->error_string
+		    && ref_transaction_commit(transaction, &err)) {
+			rp_error("%s", err.buf);
+			strbuf_reset(&err);
+			cmd->error_string = "failed to update ref";
+		}
+		ref_transaction_free(transaction);
+	}
+	strbuf_release(&err);
+}
+
+static void execute_commands_atomic(struct command *commands,
+					struct shallow_info *si)
+{
+	struct command *cmd;
+	struct strbuf err = STRBUF_INIT;
+	const char *reported_error = "atomic push failure";
+
+	transaction = ref_transaction_begin(&err);
+	if (!transaction) {
+		rp_error("%s", err.buf);
+		strbuf_reset(&err);
+		reported_error = "transaction failed to start";
+		goto failure;
+	}
+
+	for (cmd = commands; cmd; cmd = cmd->next) {
+		if (!should_process_cmd(cmd))
+			continue;
+
+		cmd->error_string = update(cmd, si);
+
+		if (cmd->error_string)
+			goto failure;
+	}
+
+	if (ref_transaction_commit(transaction, &err)) {
+		rp_error("%s", err.buf);
+		reported_error = "atomic transaction failed";
+		goto failure;
+	}
+	goto cleanup;
+
+failure:
+	for (cmd = commands; cmd; cmd = cmd->next)
+		if (!cmd->error_string)
+			cmd->error_string = reported_error;
+
+cleanup:
+	ref_transaction_free(transaction);
+	strbuf_release(&err);
+}
+
 static void execute_commands(struct command *commands,
 			     const char *unpacker_error,
 			     struct shallow_info *si)
 {
-	int checked_connectivity;
 	struct command *cmd;
 	unsigned char sha1[20];
 	struct iterate_data data;
 
 	if (unpacker_error) {
 		for (cmd = commands; cmd; cmd = cmd->next)
@@ -1163,33 +1307,19 @@
 
 	check_aliased_updates(commands);
 
 	free(head_name_to_free);
 	head_name = head_name_to_free = resolve_refdup("HEAD", 0, sha1, NULL);
 
-	checked_connectivity = 1;
-	for (cmd = commands; cmd; cmd = cmd->next) {
-		if (cmd->error_string)
-			continue;
-
-		if (cmd->skip_update)
-			continue;
-
-		cmd->error_string = update(cmd, si);
-		if (shallow_update && !cmd->error_string &&
-		    si->shallow_ref[cmd->index]) {
-			error("BUG: connectivity check has not been run on ref %s",
-			      cmd->ref_name);
-			checked_connectivity = 0;
-		}
-	}
+	if (use_atomic)
+		execute_commands_atomic(commands, si);
+	else
+		execute_commands_non_atomic(commands, si);
 
-	if (shallow_update && !checked_connectivity)
-		error("BUG: run 'git fsck' for safety.\n"
-		      "If there are errors, try to remove "
-		      "the reported refs above");
+	if (shallow_update)
+		warn_if_skipped_connectivity_check(commands, si);
 }
 
 static struct command **queue_command(struct command **tail,
 				      const char *line,
 				      int linelen)
 {
@@ -1265,12 +1395,15 @@
 			if (parse_feature_request(feature_list, "report-status"))
 				report_status = 1;
 			if (parse_feature_request(feature_list, "side-band-64k"))
 				use_sideband = LARGE_PACKET_MAX;
 			if (parse_feature_request(feature_list, "quiet"))
 				quiet = 1;
+			if (advertise_atomic_push
+			    && parse_feature_request(feature_list, "atomic"))
+				use_atomic = 1;
 		}
 
 		if (!strcmp(line, "push-cert")) {
 			int true_flush = 0;
 			char certbuf[1024];
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/receive-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/receive-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/receive-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/receive-pack.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/reflog.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/reflog.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/reflog.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/reflog.c	2015-05-01 03:12:02.000000000 +0800
@@ -5,47 +5,40 @@
 #include "dir.h"
 #include "tree-walk.h"
 #include "diff.h"
 #include "revision.h"
 #include "reachable.h"
 
-/*
- * reflog expire
- */
-
+/* NEEDSWORK: switch to using parse_options */
 static const char reflog_expire_usage[] =
-"git reflog expire [--verbose] [--dry-run] [--stale-fix] [--expire=<time>] [--expire-unreachable=<time>] [--all] <refs>...";
+"git reflog expire [--expire=<time>] [--expire-unreachable=<time>] [--rewrite] [--updateref] [--stale-fix] [--dry-run | -n] [--verbose] [--all] <refs>...";
 static const char reflog_delete_usage[] =
-"git reflog delete [--verbose] [--dry-run] [--rewrite] [--updateref] <refs>...";
+"git reflog delete [--rewrite] [--updateref] [--dry-run | -n] [--verbose] <refs>...";
 
 static unsigned long default_reflog_expire;
 static unsigned long default_reflog_expire_unreachable;
 
 struct cmd_reflog_expire_cb {
 	struct rev_info revs;
-	int dry_run;
 	int stalefix;
-	int rewrite;
-	int updateref;
-	int verbose;
 	unsigned long expire_total;
 	unsigned long expire_unreachable;
 	int recno;
 };
 
-struct expire_reflog_cb {
-	FILE *newlog;
+struct expire_reflog_policy_cb {
 	enum {
 		UE_NORMAL,
 		UE_ALWAYS,
 		UE_HEAD
 	} unreachable_expire_kind;
 	struct commit_list *mark_list;
 	unsigned long mark_limit;
-	struct cmd_reflog_expire_cb *cmd;
-	unsigned char last_kept_sha1[20];
+	struct cmd_reflog_expire_cb cmd;
+	struct commit *tip_commit;
+	struct commit_list *tips;
 };
 
 struct collected_reflog {
 	unsigned char sha1[20];
 	char reflog[FLEX_ARRAY];
 };
@@ -217,13 +211,13 @@
 /*
  * Starting from commits in the cb->mark_list, mark commits that are
  * reachable from them.  Stop the traversal at commits older than
  * the expire_limit and queue them back, so that the caller can call
  * us again to restart the traversal with longer expire_limit.
  */
-static void mark_reachable(struct expire_reflog_cb *cb)
+static void mark_reachable(struct expire_reflog_policy_cb *cb)
 {
 	struct commit *commit;
 	struct commit_list *pending;
 	unsigned long expire_limit = cb->mark_limit;
 	struct commit_list *leftover = NULL;
 
@@ -256,13 +250,13 @@
 			commit_list_insert(commit, &pending);
 		}
 	}
 	cb->mark_list = leftover;
 }
 
-static int unreachable(struct expire_reflog_cb *cb, struct commit *commit, unsigned char *sha1)
+static int unreachable(struct expire_reflog_policy_cb *cb, struct commit *commit, unsigned char *sha1)
 {
 	/*
 	 * We may or may not have the commit yet - if not, look it
 	 * up using the supplied sha1.
 	 */
 	if (!commit) {
@@ -285,171 +279,107 @@
 		mark_reachable(cb);
 	}
 
 	return !(commit->object.flags & REACHABLE);
 }
 
-static int expire_reflog_ent(unsigned char *osha1, unsigned char *nsha1,
-		const char *email, unsigned long timestamp, int tz,
-		const char *message, void *cb_data)
+/*
+ * Return true iff the specified reflog entry should be expired.
+ */
+static int should_expire_reflog_ent(unsigned char *osha1, unsigned char *nsha1,
+				    const char *email, unsigned long timestamp, int tz,
+				    const char *message, void *cb_data)
 {
-	struct expire_reflog_cb *cb = cb_data;
+	struct expire_reflog_policy_cb *cb = cb_data;
 	struct commit *old, *new;
 
-	if (timestamp < cb->cmd->expire_total)
-		goto prune;
-
-	if (cb->cmd->rewrite)
-		osha1 = cb->last_kept_sha1;
+	if (timestamp < cb->cmd.expire_total)
+		return 1;
 
 	old = new = NULL;
-	if (cb->cmd->stalefix &&
+	if (cb->cmd.stalefix &&
 	    (!keep_entry(&old, osha1) || !keep_entry(&new, nsha1)))
-		goto prune;
+		return 1;
 
-	if (timestamp < cb->cmd->expire_unreachable) {
+	if (timestamp < cb->cmd.expire_unreachable) {
 		if (cb->unreachable_expire_kind == UE_ALWAYS)
-			goto prune;
+			return 1;
 		if (unreachable(cb, old, osha1) || unreachable(cb, new, nsha1))
-			goto prune;
+			return 1;
 	}
 
-	if (cb->cmd->recno && --(cb->cmd->recno) == 0)
-		goto prune;
+	if (cb->cmd.recno && --(cb->cmd.recno) == 0)
+		return 1;
 
-	if (cb->newlog) {
-		char sign = (tz < 0) ? '-' : '+';
-		int zone = (tz < 0) ? (-tz) : tz;
-		fprintf(cb->newlog, "%s %s %s %lu %c%04d\t%s",
-			sha1_to_hex(osha1), sha1_to_hex(nsha1),
-			email, timestamp, sign, zone,
-			message);
-		hashcpy(cb->last_kept_sha1, nsha1);
-	}
-	if (cb->cmd->verbose)
-		printf("keep %s", message);
-	return 0;
- prune:
-	if (!cb->newlog)
-		printf("would prune %s", message);
-	else if (cb->cmd->verbose)
-		printf("prune %s", message);
 	return 0;
 }
 
-static int push_tip_to_list(const char *refname, const unsigned char *sha1, int flags, void *cb_data)
+static int push_tip_to_list(const char *refname, const unsigned char *sha1,
+			    int flags, void *cb_data)
 {
 	struct commit_list **list = cb_data;
 	struct commit *tip_commit;
 	if (flags & REF_ISSYMREF)
 		return 0;
 	tip_commit = lookup_commit_reference_gently(sha1, 1);
 	if (!tip_commit)
 		return 0;
 	commit_list_insert(tip_commit, list);
 	return 0;
 }
 
-static int expire_reflog(const char *ref, const unsigned char *sha1, int unused, void *cb_data)
-{
-	struct cmd_reflog_expire_cb *cmd = cb_data;
-	struct expire_reflog_cb cb;
-	struct ref_lock *lock;
-	char *log_file, *newlog_path = NULL;
-	struct commit *tip_commit;
-	struct commit_list *tips;
-	int status = 0;
-
-	memset(&cb, 0, sizeof(cb));
-
-	/*
-	 * we take the lock for the ref itself to prevent it from
-	 * getting updated.
-	 */
-	lock = lock_any_ref_for_update(ref, sha1, 0, NULL);
-	if (!lock)
-		return error("cannot lock ref '%s'", ref);
-	log_file = git_pathdup("logs/%s", ref);
-	if (!reflog_exists(ref))
-		goto finish;
-	if (!cmd->dry_run) {
-		newlog_path = git_pathdup("logs/%s.lock", ref);
-		cb.newlog = fopen(newlog_path, "w");
-	}
-
-	cb.cmd = cmd;
-
-	if (!cmd->expire_unreachable || !strcmp(ref, "HEAD")) {
-		tip_commit = NULL;
-		cb.unreachable_expire_kind = UE_HEAD;
+static void reflog_expiry_prepare(const char *refname,
+				  const unsigned char *sha1,
+				  void *cb_data)
+{
+	struct expire_reflog_policy_cb *cb = cb_data;
+
+	if (!cb->cmd.expire_unreachable || !strcmp(refname, "HEAD")) {
+		cb->tip_commit = NULL;
+		cb->unreachable_expire_kind = UE_HEAD;
 	} else {
-		tip_commit = lookup_commit_reference_gently(sha1, 1);
-		if (!tip_commit)
-			cb.unreachable_expire_kind = UE_ALWAYS;
+		cb->tip_commit = lookup_commit_reference_gently(sha1, 1);
+		if (!cb->tip_commit)
+			cb->unreachable_expire_kind = UE_ALWAYS;
 		else
-			cb.unreachable_expire_kind = UE_NORMAL;
+			cb->unreachable_expire_kind = UE_NORMAL;
 	}
 
-	if (cmd->expire_unreachable <= cmd->expire_total)
-		cb.unreachable_expire_kind = UE_ALWAYS;
+	if (cb->cmd.expire_unreachable <= cb->cmd.expire_total)
+		cb->unreachable_expire_kind = UE_ALWAYS;
 
-	cb.mark_list = NULL;
-	tips = NULL;
-	if (cb.unreachable_expire_kind != UE_ALWAYS) {
-		if (cb.unreachable_expire_kind == UE_HEAD) {
+	cb->mark_list = NULL;
+	cb->tips = NULL;
+	if (cb->unreachable_expire_kind != UE_ALWAYS) {
+		if (cb->unreachable_expire_kind == UE_HEAD) {
 			struct commit_list *elem;
-			for_each_ref(push_tip_to_list, &tips);
-			for (elem = tips; elem; elem = elem->next)
-				commit_list_insert(elem->item, &cb.mark_list);
+			for_each_ref(push_tip_to_list, &cb->tips);
+			for (elem = cb->tips; elem; elem = elem->next)
+				commit_list_insert(elem->item, &cb->mark_list);
 		} else {
-			commit_list_insert(tip_commit, &cb.mark_list);
+			commit_list_insert(cb->tip_commit, &cb->mark_list);
 		}
-		cb.mark_limit = cmd->expire_total;
-		mark_reachable(&cb);
+		cb->mark_limit = cb->cmd.expire_total;
+		mark_reachable(cb);
 	}
+}
 
-	for_each_reflog_ent(ref, expire_reflog_ent, &cb);
+static void reflog_expiry_cleanup(void *cb_data)
+{
+	struct expire_reflog_policy_cb *cb = cb_data;
 
-	if (cb.unreachable_expire_kind != UE_ALWAYS) {
-		if (cb.unreachable_expire_kind == UE_HEAD) {
+	if (cb->unreachable_expire_kind != UE_ALWAYS) {
+		if (cb->unreachable_expire_kind == UE_HEAD) {
 			struct commit_list *elem;
-			for (elem = tips; elem; elem = elem->next)
+			for (elem = cb->tips; elem; elem = elem->next)
 				clear_commit_marks(elem->item, REACHABLE);
-			free_commit_list(tips);
+			free_commit_list(cb->tips);
 		} else {
-			clear_commit_marks(tip_commit, REACHABLE);
+			clear_commit_marks(cb->tip_commit, REACHABLE);
 		}
 	}
- finish:
-	if (cb.newlog) {
-		if (fclose(cb.newlog)) {
-			status |= error("%s: %s", strerror(errno),
-					newlog_path);
-			unlink(newlog_path);
-		} else if (cmd->updateref &&
-			(write_in_full(lock->lock_fd,
-				sha1_to_hex(cb.last_kept_sha1), 40) != 40 ||
-			 write_str_in_full(lock->lock_fd, "\n") != 1 ||
-			 close_ref(lock) < 0)) {
-			status |= error("Couldn't write %s",
-					lock->lk->filename.buf);
-			unlink(newlog_path);
-		} else if (rename(newlog_path, log_file)) {
-			status |= error("cannot rename %s to %s",
-					newlog_path, log_file);
-			unlink(newlog_path);
-		} else if (cmd->updateref && commit_ref(lock)) {
-			status |= error("Couldn't set %s", lock->ref_name);
-		} else {
-			adjust_shared_perm(log_file);
-		}
-	}
-	free(newlog_path);
-	free(log_file);
-	unlock_ref(lock);
-	return status;
 }
 
 static int collect_reflog(const char *ref, const unsigned char *sha1, int unused, void *cb_data)
 {
 	struct collected_reflog *e;
 	struct collect_reflog_cb *cb = cb_data;
@@ -587,52 +517,53 @@
 	if (!(slot & EXPIRE_UNREACH))
 		cb->expire_unreachable = default_reflog_expire_unreachable;
 }
 
 static int cmd_reflog_expire(int argc, const char **argv, const char *prefix)
 {
-	struct cmd_reflog_expire_cb cb;
+	struct expire_reflog_policy_cb cb;
 	unsigned long now = time(NULL);
 	int i, status, do_all;
 	int explicit_expiry = 0;
+	unsigned int flags = 0;
 
 	default_reflog_expire_unreachable = now - 30 * 24 * 3600;
 	default_reflog_expire = now - 90 * 24 * 3600;
 	git_config(reflog_expire_config, NULL);
 
 	save_commit_buffer = 0;
 	do_all = status = 0;
 	memset(&cb, 0, sizeof(cb));
 
-	cb.expire_total = default_reflog_expire;
-	cb.expire_unreachable = default_reflog_expire_unreachable;
+	cb.cmd.expire_total = default_reflog_expire;
+	cb.cmd.expire_unreachable = default_reflog_expire_unreachable;
 
 	for (i = 1; i < argc; i++) {
 		const char *arg = argv[i];
 		if (!strcmp(arg, "--dry-run") || !strcmp(arg, "-n"))
-			cb.dry_run = 1;
+			flags |= EXPIRE_REFLOGS_DRY_RUN;
 		else if (starts_with(arg, "--expire=")) {
-			if (parse_expiry_date(arg + 9, &cb.expire_total))
+			if (parse_expiry_date(arg + 9, &cb.cmd.expire_total))
 				die(_("'%s' is not a valid timestamp"), arg);
 			explicit_expiry |= EXPIRE_TOTAL;
 		}
 		else if (starts_with(arg, "--expire-unreachable=")) {
-			if (parse_expiry_date(arg + 21, &cb.expire_unreachable))
+			if (parse_expiry_date(arg + 21, &cb.cmd.expire_unreachable))
 				die(_("'%s' is not a valid timestamp"), arg);
 			explicit_expiry |= EXPIRE_UNREACH;
 		}
 		else if (!strcmp(arg, "--stale-fix"))
-			cb.stalefix = 1;
+			cb.cmd.stalefix = 1;
 		else if (!strcmp(arg, "--rewrite"))
-			cb.rewrite = 1;
+			flags |= EXPIRE_REFLOGS_REWRITE;
 		else if (!strcmp(arg, "--updateref"))
-			cb.updateref = 1;
+			flags |= EXPIRE_REFLOGS_UPDATE_REF;
 		else if (!strcmp(arg, "--all"))
 			do_all = 1;
 		else if (!strcmp(arg, "--verbose"))
-			cb.verbose = 1;
+			flags |= EXPIRE_REFLOGS_VERBOSE;
 		else if (!strcmp(arg, "--")) {
 			i++;
 			break;
 		}
 		else if (arg[0] == '-')
 			usage(reflog_expire_usage);
@@ -642,76 +573,85 @@
 
 	/*
 	 * We can trust the commits and objects reachable from refs
 	 * even in older repository.  We cannot trust what's reachable
 	 * from reflog if the repository was pruned with older git.
 	 */
-	if (cb.stalefix) {
-		init_revisions(&cb.revs, prefix);
-		if (cb.verbose)
+	if (cb.cmd.stalefix) {
+		init_revisions(&cb.cmd.revs, prefix);
+		if (flags & EXPIRE_REFLOGS_VERBOSE)
 			printf("Marking reachable objects...");
-		mark_reachable_objects(&cb.revs, 0, 0, NULL);
-		if (cb.verbose)
+		mark_reachable_objects(&cb.cmd.revs, 0, 0, NULL);
+		if (flags & EXPIRE_REFLOGS_VERBOSE)
 			putchar('\n');
 	}
 
 	if (do_all) {
 		struct collect_reflog_cb collected;
 		int i;
 
 		memset(&collected, 0, sizeof(collected));
 		for_each_reflog(collect_reflog, &collected);
 		for (i = 0; i < collected.nr; i++) {
 			struct collected_reflog *e = collected.e[i];
-			set_reflog_expiry_param(&cb, explicit_expiry, e->reflog);
-			status |= expire_reflog(e->reflog, e->sha1, 0, &cb);
+			set_reflog_expiry_param(&cb.cmd, explicit_expiry, e->reflog);
+			status |= reflog_expire(e->reflog, e->sha1, flags,
+						reflog_expiry_prepare,
+						should_expire_reflog_ent,
+						reflog_expiry_cleanup,
+						&cb);
 			free(e);
 		}
 		free(collected.e);
 	}
 
 	for (; i < argc; i++) {
 		char *ref;
 		unsigned char sha1[20];
 		if (!dwim_log(argv[i], strlen(argv[i]), sha1, &ref)) {
 			status |= error("%s points nowhere!", argv[i]);
 			continue;
 		}
-		set_reflog_expiry_param(&cb, explicit_expiry, ref);
-		status |= expire_reflog(ref, sha1, 0, &cb);
+		set_reflog_expiry_param(&cb.cmd, explicit_expiry, ref);
+		status |= reflog_expire(ref, sha1, flags,
+					reflog_expiry_prepare,
+					should_expire_reflog_ent,
+					reflog_expiry_cleanup,
+					&cb);
 	}
 	return status;
 }
 
 static int count_reflog_ent(unsigned char *osha1, unsigned char *nsha1,
 		const char *email, unsigned long timestamp, int tz,
 		const char *message, void *cb_data)
 {
-	struct cmd_reflog_expire_cb *cb = cb_data;
-	if (!cb->expire_total || timestamp < cb->expire_total)
-		cb->recno++;
+	struct expire_reflog_policy_cb *cb = cb_data;
+	if (!cb->cmd.expire_total || timestamp < cb->cmd.expire_total)
+		cb->cmd.recno++;
 	return 0;
 }
 
 static int cmd_reflog_delete(int argc, const char **argv, const char *prefix)
 {
-	struct cmd_reflog_expire_cb cb;
+	struct expire_reflog_policy_cb cb;
 	int i, status = 0;
+	unsigned int flags = 0;
 
 	memset(&cb, 0, sizeof(cb));
 
 	for (i = 1; i < argc; i++) {
 		const char *arg = argv[i];
 		if (!strcmp(arg, "--dry-run") || !strcmp(arg, "-n"))
-			cb.dry_run = 1;
+			flags |= EXPIRE_REFLOGS_DRY_RUN;
 		else if (!strcmp(arg, "--rewrite"))
-			cb.rewrite = 1;
+			flags |= EXPIRE_REFLOGS_REWRITE;
 		else if (!strcmp(arg, "--updateref"))
-			cb.updateref = 1;
+			flags |= EXPIRE_REFLOGS_UPDATE_REF;
 		else if (!strcmp(arg, "--verbose"))
-			cb.verbose = 1;
+			flags |= EXPIRE_REFLOGS_VERBOSE;
 		else if (!strcmp(arg, "--")) {
 			i++;
 			break;
 		}
 		else if (arg[0] == '-')
 			usage(reflog_delete_usage);
@@ -737,21 +677,25 @@
 			status |= error("no reflog for '%s'", argv[i]);
 			continue;
 		}
 
 		recno = strtoul(spec + 2, &ep, 10);
 		if (*ep == '}') {
-			cb.recno = -recno;
+			cb.cmd.recno = -recno;
 			for_each_reflog_ent(ref, count_reflog_ent, &cb);
 		} else {
-			cb.expire_total = approxidate(spec + 2);
+			cb.cmd.expire_total = approxidate(spec + 2);
 			for_each_reflog_ent(ref, count_reflog_ent, &cb);
-			cb.expire_total = 0;
+			cb.cmd.expire_total = 0;
 		}
 
-		status |= expire_reflog(ref, sha1, 0, &cb);
+		status |= reflog_expire(ref, sha1, flags,
+					reflog_expiry_prepare,
+					should_expire_reflog_ent,
+					reflog_expiry_cleanup,
+					&cb);
 		free(ref);
 	}
 	return status;
 }
 
 /*
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/reflog.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/reflog.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/reflog.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/reflog.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/remote.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/remote.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/remote.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/remote.c	2015-05-01 03:12:02.000000000 +0800
@@ -7,16 +7,16 @@
 #include "run-command.h"
 #include "refs.h"
 #include "argv-array.h"
 
 static const char * const builtin_remote_usage[] = {
 	N_("git remote [-v | --verbose]"),
-	N_("git remote add [-t <branch>] [-m <master>] [-f] [--tags|--no-tags] [--mirror=<fetch|push>] <name> <url>"),
+	N_("git remote add [-t <branch>] [-m <master>] [-f] [--tags | --no-tags] [--mirror=<fetch|push>] <name> <url>"),
 	N_("git remote rename <old> <new>"),
 	N_("git remote remove <name>"),
-	N_("git remote set-head <name> (-a | --auto | -d | --delete |<branch>)"),
+	N_("git remote set-head <name> (-a | --auto | -d | --delete | <branch>)"),
 	N_("git remote [-v | --verbose] show [-n] <name>"),
 	N_("git remote prune [-n | --dry-run] <name>"),
 	N_("git remote [-v | --verbose] update [-p | --prune] [(<group> | <remote>)...]"),
 	N_("git remote set-branches [--add] <name> <branch>..."),
 	N_("git remote set-url [--push] <name> <newurl> [<oldurl>]"),
 	N_("git remote set-url --add <name> <newurl>"),
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/remote.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/remote.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/remote-ext.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/remote-ext.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/remote-ext.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/remote-ext.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/remote-fd.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/remote-fd.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/remote-fd.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/remote-fd.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/remote.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/remote.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/repack.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/repack.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/repack.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/repack.c	2015-05-01 03:12:02.000000000 +0800
@@ -11,13 +11,13 @@
 static int delta_base_offset = 1;
 static int pack_kept_objects = -1;
 static int write_bitmaps;
 static char *packdir, *packtmp;
 
 static const char *const git_repack_usage[] = {
-	N_("git repack [options]"),
+	N_("git repack [<options>]"),
 	NULL
 };
 
 static int repack_config(const char *var, const char *value, void *cb)
 {
 	if (!strcmp(var, "repack.usedeltabaseoffset")) {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/repack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/repack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/repack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/repack.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/replace.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/replace.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/replace.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/replace.c	2015-05-01 03:12:02.000000000 +0800
@@ -169,13 +169,13 @@
 
 	check_ref_valid(object, prev, ref, sizeof(ref), force);
 
 	transaction = ref_transaction_begin(&err);
 	if (!transaction ||
 	    ref_transaction_update(transaction, ref, repl, prev,
-				   0, 1, NULL, &err) ||
+				   0, NULL, &err) ||
 	    ref_transaction_commit(transaction, &err))
 		die("%s", err.buf);
 
 	ref_transaction_free(transaction);
 	return 0;
 }
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/replace.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/replace.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/replace.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/replace.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rerere.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rerere.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rerere.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rerere.c	2015-05-01 03:12:02.000000000 +0800
@@ -6,13 +6,13 @@
 #include "rerere.h"
 #include "xdiff/xdiff.h"
 #include "xdiff-interface.h"
 #include "pathspec.h"
 
 static const char * const rerere_usage[] = {
-	N_("git rerere [clear | forget path... | status | remaining | diff | gc]"),
+	N_("git rerere [clear | forget <path>... | status | remaining | diff | gc]"),
 	NULL,
 };
 
 static int outf(void *dummy, mmbuffer_t *ptr, int nbuf)
 {
 	int i;
@@ -26,29 +26,28 @@
 		const char *file2, const char *label2)
 {
 	xpparam_t xpp;
 	xdemitconf_t xecfg;
 	xdemitcb_t ecb;
 	mmfile_t minus, plus;
-	int ret;
 
 	if (read_mmfile(&minus, file1) || read_mmfile(&plus, file2))
-		return -1;
+		return 1;
 
 	printf("--- a/%s\n+++ b/%s\n", label1, label2);
 	fflush(stdout);
 	memset(&xpp, 0, sizeof(xpp));
 	xpp.flags = 0;
 	memset(&xecfg, 0, sizeof(xecfg));
 	xecfg.ctxlen = 3;
 	ecb.outf = outf;
-	ret = xdi_diff(&minus, &plus, &xpp, &xecfg, &ecb);
+	xdi_diff(&minus, &plus, &xpp, &xecfg, &ecb);
 
 	free(minus.ptr);
 	free(plus.ptr);
-	return ret;
+	return 0;
 }
 
 int cmd_rerere(int argc, const char **argv, const char *prefix)
 {
 	struct string_list merge_rr = STRING_LIST_INIT_DUP;
 	int i, fd, autoupdate = -1, flags = 0;
@@ -102,14 +101,13 @@
 				merge_rr.items[i].util = NULL;
 		}
 	} else if (!strcmp(argv[0], "diff"))
 		for (i = 0; i < merge_rr.nr; i++) {
 			const char *path = merge_rr.items[i].string;
 			const char *name = (const char *)merge_rr.items[i].util;
-			if (diff_two(rerere_path(name, "preimage"), path, path, path))
-				die("unable to generate diff for %s", name);
+			diff_two(rerere_path(name, "preimage"), path, path, path);
 		}
 	else
 		usage_with_options(rerere_usage, options);
 
 	string_list_clear(&merge_rr, 1);
 	return 0;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rerere.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rerere.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rerere.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rerere.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/reset.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/reset.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/reset.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/reset.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/revert.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/revert.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/revert.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/revert.c	2015-05-01 03:12:02.000000000 +0800
@@ -16,19 +16,19 @@
  *
  * Copyright (c) 2005 Linus Torvalds
  * Copyright (c) 2005 Junio C Hamano
  */
 
 static const char * const revert_usage[] = {
-	N_("git revert [options] <commit-ish>..."),
+	N_("git revert [<options>] <commit-ish>..."),
 	N_("git revert <subcommand>"),
 	NULL
 };
 
 static const char * const cherry_pick_usage[] = {
-	N_("git cherry-pick [options] <commit-ish>..."),
+	N_("git cherry-pick [<options>] <commit-ish>..."),
 	N_("git cherry-pick <subcommand>"),
 	NULL
 };
 
 static const char *action_name(const struct replay_opts *opts)
 {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/revert.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/revert.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/revert.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/revert.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rev-list.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rev-list.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rev-list.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rev-list.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rev-parse.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rev-parse.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rev-parse.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rev-parse.c	2015-05-01 03:12:02.000000000 +0800
@@ -355,13 +355,13 @@
 }
 
 static int cmd_parseopt(int argc, const char **argv, const char *prefix)
 {
 	static int keep_dashdash = 0, stop_at_non_option = 0;
 	static char const * const parseopt_usage[] = {
-		N_("git rev-parse --parseopt [options] -- [<args>...]"),
+		N_("git rev-parse --parseopt [<options>] -- [<args>...]"),
 		NULL
 	};
 	static struct option parseopt_opts[] = {
 		OPT_BOOL(0, "keep-dashdash", &keep_dashdash,
 					N_("keep the `--` passed as an arg")),
 		OPT_BOOL(0, "stop-at-non-option", &stop_at_non_option,
@@ -493,15 +493,15 @@
 		exit(1);
 	else
 		die("Needed a single revision");
 }
 
 static const char builtin_rev_parse_usage[] =
-N_("git rev-parse --parseopt [options] -- [<args>...]\n"
+N_("git rev-parse --parseopt [<options>] -- [<args>...]\n"
    "   or: git rev-parse --sq-quote [<arg>...]\n"
-   "   or: git rev-parse [options] [<arg>...]\n"
+   "   or: git rev-parse [<options>] [<arg>...]\n"
    "\n"
    "Run \"git rev-parse --parseopt -h\" for more information on the first usage.");
 
 int cmd_rev_parse(int argc, const char **argv, const char *prefix)
 {
 	int i, as_is = 0, verify = 0, quiet = 0, revs_count = 0, type = 0;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rev-parse.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rev-parse.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rev-parse.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rev-parse.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rm.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rm.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rm.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rm.c	2015-05-01 03:12:02.000000000 +0800
@@ -11,13 +11,13 @@
 #include "parse-options.h"
 #include "string-list.h"
 #include "submodule.h"
 #include "pathspec.h"
 
 static const char * const builtin_rm_usage[] = {
-	N_("git rm [options] [--] <file>..."),
+	N_("git rm [<options>] [--] <file>..."),
 	NULL
 };
 
 static struct {
 	int nr, alloc;
 	struct {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rm.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rm.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rm.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rm.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/send-pack.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/send-pack.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/send-pack.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/send-pack.c	2015-05-01 03:12:02.000000000 +0800
@@ -10,13 +10,13 @@
 #include "quote.h"
 #include "transport.h"
 #include "version.h"
 #include "sha1-array.h"
 
 static const char send_pack_usage[] =
-"git send-pack [--all | --mirror] [--dry-run] [--force] [--receive-pack=<git-receive-pack>] [--verbose] [--thin] [<host>:]<directory> [<ref>...]\n"
+"git send-pack [--all | --mirror] [--dry-run] [--force] [--receive-pack=<git-receive-pack>] [--verbose] [--thin] [--atomic] [<host>:]<directory> [<ref>...]\n"
 "  --all and explicit <ref> specification are mutually exclusive.";
 
 static struct send_pack_args args;
 
 static void print_helper_status(struct ref *ref)
 {
@@ -167,12 +167,16 @@
 				continue;
 			}
 			if (!strcmp(arg, "--thin")) {
 				args.use_thin_pack = 1;
 				continue;
 			}
+			if (!strcmp(arg, "--atomic")) {
+				args.atomic = 1;
+				continue;
+			}
 			if (!strcmp(arg, "--stateless-rpc")) {
 				args.stateless_rpc = 1;
 				continue;
 			}
 			if (!strcmp(arg, "--stdin")) {
 				from_stdin = 1;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/send-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/send-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/send-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/send-pack.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/shortlog.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/shortlog.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/shortlog.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/shortlog.c	2015-05-01 03:12:02.000000000 +0800
@@ -7,13 +7,13 @@
 #include "utf8.h"
 #include "mailmap.h"
 #include "shortlog.h"
 #include "parse-options.h"
 
 static char const * const shortlog_usage[] = {
-	N_("git shortlog [<options>] [<revision range>] [[--] [<path>...]]"),
+	N_("git shortlog [<options>] [<revision-range>] [[--] [<path>...]]"),
 	NULL
 };
 
 static int compare_by_number(const void *a1, const void *a2)
 {
 	const struct string_list_item *i1 = a1, *i2 = a2;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/shortlog.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/shortlog.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/shortlog.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/shortlog.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/show-branch.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/show-branch.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/show-branch.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/show-branch.c	2015-05-01 03:12:02.000000000 +0800
@@ -3,17 +3,17 @@
 #include "refs.h"
 #include "builtin.h"
 #include "color.h"
 #include "parse-options.h"
 
 static const char* show_branch_usage[] = {
-    N_("git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
+    N_("git show-branch [-a | --all] [-r | --remotes] [--topo-order | --date-order]\n"
        "		[--current] [--color[=<when>] | --no-color] [--sparse]\n"
        "		[--more=<n> | --list | --independent | --merge-base]\n"
        "		[--no-name | --sha1-name] [--topics] [(<rev> | <glob>)...]"),
-    N_("git show-branch (-g|--reflog)[=<n>[,<base>]] [--list] [<ref>]"),
+    N_("git show-branch (-g | --reflog)[=<n>[,<base>]] [--list] [<ref>]"),
     NULL
 };
 
 static int showbranch_use_color = -1;
 
 static int default_num;
@@ -720,12 +720,13 @@
 	/* If nothing is specified, show all branches by default */
 	if (ac + all_heads + all_remotes == 0)
 		all_heads = 1;
 
 	if (reflog) {
 		unsigned char sha1[20];
+		char nth_desc[256];
 		char *ref;
 		int base = 0;
 		unsigned int flags = 0;
 
 		if (ac == 0) {
 			static const char *fake_av[2];
@@ -758,13 +759,12 @@
 					    NULL, NULL, &base);
 			}
 		}
 
 		for (i = 0; i < reflog; i++) {
 			char *logmsg;
-			char *nth_desc;
 			const char *msg;
 			unsigned long timestamp;
 			int tz;
 
 			if (read_ref_at(ref, flags, 0, base+i, sha1, &logmsg,
 					&timestamp, &tz, NULL)) {
@@ -777,16 +777,14 @@
 			else
 				msg++;
 			reflog_msg[i] = xstrfmt("(%s) %s",
 						show_date(timestamp, tz, 1),
 						msg);
 			free(logmsg);
-
-			nth_desc = xstrfmt("%s@{%d}", *av, base+i);
+			sprintf(nth_desc, "%s@{%d}", *av, base+i);
 			append_ref(nth_desc, sha1, 1);
-			free(nth_desc);
 		}
 		free(ref);
 	}
 	else if (all_heads + all_remotes)
 		snarf_refs(all_heads, all_remotes);
 	else {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/show-branch.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/show-branch.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/show-branch.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/show-branch.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/show-ref.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/show-ref.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/show-ref.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/show-ref.c	2015-05-01 03:12:02.000000000 +0800
@@ -4,13 +4,13 @@
 #include "object.h"
 #include "tag.h"
 #include "string-list.h"
 #include "parse-options.h"
 
 static const char * const show_ref_usage[] = {
-	N_("git show-ref [-q|--quiet] [--verify] [--head] [-d|--dereference] [-s|--hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [pattern*] "),
+	N_("git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | --hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<pattern>...]"),
 	N_("git show-ref --exclude-existing[=pattern] < ref-list"),
 	NULL
 };
 
 static int deref_tags, show_head, tags_only, heads_only, found_match, verify,
 	   quiet, hash_only, abbrev, exclude_arg;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/show-ref.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/show-ref.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/show-ref.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/show-ref.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/stripspace.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/stripspace.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/stripspace.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/stripspace.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/symbolic-ref.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/symbolic-ref.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/symbolic-ref.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/symbolic-ref.c	2015-05-01 03:12:02.000000000 +0800
@@ -1,14 +1,14 @@
 #include "builtin.h"
 #include "cache.h"
 #include "refs.h"
 #include "parse-options.h"
 
 static const char * const git_symbolic_ref_usage[] = {
-	N_("git symbolic-ref [options] name [ref]"),
-	N_("git symbolic-ref -d [-q] name"),
+	N_("git symbolic-ref [<options>] <name> [<ref>]"),
+	N_("git symbolic-ref -d [-q] <name>"),
 	NULL
 };
 
 static int check_symref(const char *HEAD, int quiet, int shorten, int print)
 {
 	unsigned char sha1[20];
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/symbolic-ref.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/symbolic-ref.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/symbolic-ref.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/symbolic-ref.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/tag.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/tag.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/tag.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/tag.c	2015-05-01 03:12:02.000000000 +0800
@@ -16,15 +16,15 @@
 #include "revision.h"
 #include "gpg-interface.h"
 #include "sha1-array.h"
 #include "column.h"
 
 static const char * const git_tag_usage[] = {
-	N_("git tag [-a|-s|-u <key-id>] [-f] [-m <msg>|-F <file>] <tagname> [<head>]"),
+	N_("git tag [-a | -s | -u <key-id>] [-f] [-m <msg> | -F <file>] <tagname> [<head>]"),
 	N_("git tag -d <tagname>..."),
-	N_("git tag -l [-n[<num>]] [--contains <commit>] [--points-at <object>] "
+	N_("git tag -l [-n[<num>]] [--contains <commit>] [--points-at <object>]"
 		"\n\t\t[<pattern>...]"),
 	N_("git tag -v <tagname>..."),
 	NULL
 };
 
 #define STRCMP_SORT     0	/* must be zero */
@@ -730,13 +730,13 @@
 	if (annotate)
 		create_tag(object, tag, &buf, &opt, prev, object);
 
 	transaction = ref_transaction_begin(&err);
 	if (!transaction ||
 	    ref_transaction_update(transaction, ref.buf, object, prev,
-				   0, 1, NULL, &err) ||
+				   0, NULL, &err) ||
 	    ref_transaction_commit(transaction, &err))
 		die("%s", err.buf);
 	ref_transaction_free(transaction);
 	if (force && !is_null_sha1(prev) && hashcmp(prev, object))
 		printf(_("Updated tag '%s' (was %s)\n"), tag, find_unique_abbrev(prev, DEFAULT_ABBREV));
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/tag.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/tag.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/tag.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/tag.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/unpack-file.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/unpack-file.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/unpack-file.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/unpack-file.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/unpack-objects.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/unpack-objects.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/unpack-objects.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/unpack-objects.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/update-index.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/update-index.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/update-index.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/update-index.c	2015-05-01 03:12:02.000000000 +0800
@@ -397,13 +397,13 @@
 	}
 	strbuf_release(&buf);
 	strbuf_release(&uq);
 }
 
 static const char * const update_index_usage[] = {
-	N_("git update-index [options] [--] [<file>...]"),
+	N_("git update-index [<options>] [--] [<file>...]"),
 	NULL
 };
 
 static unsigned char head_sha1[20];
 static unsigned char merge_head_sha1[20];
 
@@ -581,12 +581,13 @@
 		 * or worse yet 'allow_replace', active_nr may decrease.
 		 */
 		save_nr = active_nr;
 		path = xstrdup(ce->name);
 		update_one(path);
 		free(path);
+		free(old);
 		if (save_nr != active_nr)
 			goto redo;
 	}
 	free_pathspec(&pathspec);
 	return 0;
 }
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/update-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/update-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/update-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/update-index.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/update-ref.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/update-ref.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/update-ref.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/update-ref.c	2015-05-01 03:12:02.000000000 +0800
@@ -3,15 +3,15 @@
 #include "builtin.h"
 #include "parse-options.h"
 #include "quote.h"
 #include "argv-array.h"
 
 static const char * const git_update_ref_usage[] = {
-	N_("git update-ref [options] -d <refname> [<oldval>]"),
-	N_("git update-ref [options]    <refname> <newval> [<oldval>]"),
-	N_("git update-ref [options] --stdin [-z]"),
+	N_("git update-ref [<options>] -d <refname> [<old-val>]"),
+	N_("git update-ref [<options>]    <refname> <new-val> [<old-val>]"),
+	N_("git update-ref [<options>] --stdin [-z]"),
 	NULL
 };
 
 static char line_termination = '\n';
 static int update_flags;
 static const char *msg;
@@ -195,14 +195,15 @@
 	have_old = !parse_next_sha1(input, &next, old_sha1, "update", refname,
 				    PARSE_SHA1_OLD);
 
 	if (*next != line_termination)
 		die("update %s: extra input: %s", refname, next);
 
-	if (ref_transaction_update(transaction, refname, new_sha1, old_sha1,
-				   update_flags, have_old, msg, &err))
+	if (ref_transaction_update(transaction, refname,
+				   new_sha1, have_old ? old_sha1 : NULL,
+				   update_flags, msg, &err))
 		die("%s", err.buf);
 
 	update_flags = 0;
 	free(refname);
 	strbuf_release(&err);
 
@@ -261,14 +262,15 @@
 		have_old = 1;
 	}
 
 	if (*next != line_termination)
 		die("delete %s: extra input: %s", refname, next);
 
-	if (ref_transaction_delete(transaction, refname, old_sha1,
-				   update_flags, have_old, msg, &err))
+	if (ref_transaction_delete(transaction, refname,
+				   have_old ? old_sha1 : NULL,
+				   update_flags, msg, &err))
 		die("%s", err.buf);
 
 	update_flags = 0;
 	free(refname);
 	strbuf_release(&err);
 
@@ -277,30 +279,27 @@
 
 static const char *parse_cmd_verify(struct ref_transaction *transaction,
 				    struct strbuf *input, const char *next)
 {
 	struct strbuf err = STRBUF_INIT;
 	char *refname;
-	unsigned char new_sha1[20];
 	unsigned char old_sha1[20];
 
 	refname = parse_refname(input, &next);
 	if (!refname)
 		die("verify: missing <ref>");
 
 	if (parse_next_sha1(input, &next, old_sha1, "verify", refname,
 			    PARSE_SHA1_OLD))
 		hashclr(old_sha1);
 
-	hashcpy(new_sha1, old_sha1);
-
 	if (*next != line_termination)
 		die("verify %s: extra input: %s", refname, next);
 
-	if (ref_transaction_update(transaction, refname, new_sha1, old_sha1,
-				   update_flags, 1, msg, &err))
+	if (ref_transaction_verify(transaction, refname, old_sha1,
+				   update_flags, &err))
 		die("%s", err.buf);
 
 	update_flags = 0;
 	free(refname);
 	strbuf_release(&err);
 
@@ -350,13 +349,14 @@
 }
 
 int cmd_update_ref(int argc, const char **argv, const char *prefix)
 {
 	const char *refname, *oldval;
 	unsigned char sha1[20], oldsha1[20];
-	int delete = 0, no_deref = 0, read_stdin = 0, end_null = 0, flags = 0;
+	int delete = 0, no_deref = 0, read_stdin = 0, end_null = 0;
+	unsigned int flags = 0;
 	struct option options[] = {
 		OPT_STRING( 'm', NULL, &msg, N_("reason"), N_("reason of the update")),
 		OPT_BOOL('d', NULL, &delete, N_("delete the reference")),
 		OPT_BOOL( 0 , "no-deref", &no_deref,
 					N_("update <refname> not the one it points to")),
 		OPT_BOOL('z', NULL, &end_null, N_("stdin has NUL-terminated arguments")),
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/update-ref.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/update-ref.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/update-ref.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/update-ref.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/update-server-info.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/update-server-info.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/update-server-info.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/update-server-info.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/upload-archive.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/upload-archive.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/upload-archive.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/upload-archive.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/var.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/var.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/var.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/var.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/verify-commit.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/verify-commit.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/verify-commit.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/verify-commit.c	2015-05-01 03:12:02.000000000 +0800
@@ -11,13 +11,13 @@
 #include "run-command.h"
 #include <signal.h>
 #include "parse-options.h"
 #include "gpg-interface.h"
 
 static const char * const verify_commit_usage[] = {
-		N_("git verify-commit [-v|--verbose] <commit>..."),
+		N_("git verify-commit [-v | --verbose] <commit>..."),
 		NULL
 };
 
 static int run_gpg_verify(const unsigned char *sha1, const char *buf, unsigned long size, int verbose)
 {
 	struct signature_check signature_check;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/verify-commit.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/verify-commit.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/verify-commit.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/verify-commit.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/verify-pack.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/verify-pack.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/verify-pack.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/verify-pack.c	2015-05-01 03:12:02.000000000 +0800
@@ -48,13 +48,13 @@
 	strbuf_release(&arg);
 
 	return err;
 }
 
 static const char * const verify_pack_usage[] = {
-	N_("git verify-pack [-v|--verbose] [-s|--stat-only] <pack>..."),
+	N_("git verify-pack [-v | --verbose] [-s | --stat-only] <pack>..."),
 	NULL
 };
 
 int cmd_verify_pack(int argc, const char **argv, const char *prefix)
 {
 	int err = 0;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/verify-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/verify-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/verify-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/verify-pack.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/verify-tag.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/verify-tag.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/verify-tag.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/verify-tag.c	2015-05-01 03:12:02.000000000 +0800
@@ -11,13 +11,13 @@
 #include "run-command.h"
 #include <signal.h>
 #include "parse-options.h"
 #include "gpg-interface.h"
 
 static const char * const verify_tag_usage[] = {
-		N_("git verify-tag [-v|--verbose] <tag>..."),
+		N_("git verify-tag [-v | --verbose] <tag>..."),
 		NULL
 };
 
 static int run_gpg_verify(const char *buf, unsigned long size, int verbose)
 {
 	int len;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/verify-tag.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/verify-tag.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/verify-tag.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/verify-tag.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/write-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/write-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/write-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/write-tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bulk-checkin.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bulk-checkin.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bulk-checkin.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bulk-checkin.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bundle.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bundle.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bundle.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bundle.c	2015-05-01 03:12:02.000000000 +0800
@@ -331,21 +331,21 @@
 		const char *display_ref;
 		int flag;
 
 		if (e->item->flags & UNINTERESTING)
 			continue;
 		if (dwim_ref(e->name, strlen(e->name), sha1, &ref) != 1)
-			continue;
+			goto skip_write_ref;
 		if (read_ref_full(e->name, RESOLVE_REF_READING, sha1, &flag))
 			flag = 0;
 		display_ref = (flag & REF_ISSYMREF) ? e->name : ref;
 
 		if (e->item->type == OBJ_TAG &&
 				!is_tag_in_date_range(e->item, revs)) {
 			e->item->flags |= UNINTERESTING;
-			continue;
+			goto skip_write_ref;
 		}
 
 		/*
 		 * Make sure the refs we wrote out is correct; --max-count and
 		 * other limiting options could have prevented all the tips
 		 * from getting output.
@@ -354,14 +354,13 @@
 		 * this issue as they are not affected by those extra
 		 * constraints.
 		 */
 		if (!(e->item->flags & SHOWN) && e->item->type == OBJ_COMMIT) {
 			warning(_("ref '%s' is excluded by the rev-list options"),
 				e->name);
-			free(ref);
-			continue;
+			goto skip_write_ref;
 		}
 		/*
 		 * If you run "git bundle create bndl v1.0..v2.0", the
 		 * name of the positive ref is "v2.0" but that is the
 		 * commit that is referenced by the tag, and not the tag
 		 * itself.
@@ -385,21 +384,21 @@
 				 * error.
 				 */
 				obj = parse_object_or_die(sha1, e->name);
 				obj->flags |= SHOWN;
 				add_pending_object(revs, obj, e->name);
 			}
-			free(ref);
-			continue;
+			goto skip_write_ref;
 		}
 
 		ref_count++;
 		write_or_die(bundle_fd, sha1_to_hex(e->item->sha1), 40);
 		write_or_die(bundle_fd, " ", 1);
 		write_or_die(bundle_fd, display_ref, strlen(display_ref));
 		write_or_die(bundle_fd, "\n", 1);
+ skip_write_ref:
 		free(ref);
 	}
 
 	/* end header */
 	write_or_die(bundle_fd, "\n", 1);
 	return ref_count;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bundle.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bundle.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bundle.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bundle.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/cache.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/cache.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/cache.h	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/cache.h	2015-05-01 03:12:02.000000000 +0800
@@ -565,13 +565,13 @@
 
 extern void update_index_if_able(struct index_state *, struct lock_file *);
 
 extern int hold_locked_index(struct lock_file *, int);
 extern void set_alternate_index_output(const char *);
 
-extern int delete_ref(const char *, const unsigned char *sha1, int delopt);
+extern int delete_ref(const char *, const unsigned char *sha1, unsigned int flags);
 
 /* Environment bits from configuration mechanism */
 extern int trust_executable_bit;
 extern int trust_ctime;
 extern int check_stat;
 extern int quote_path_fully;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/cache-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/cache-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/cache-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/cache-tree.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/check-builtins.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/check-builtins.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/check-builtins.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/check-builtins.sh	2015-05-01 03:12:02.000000000 +0800
@@ -1,12 +1,12 @@
 #!/bin/sh
 
 {
 	cat <<\EOF
 sayIt:
-	$(foreach b,$(BUILT_INS),echo XXX $b YYY;)
+	$(foreach b,$(BUILT_INS),echo XXX $(b:$X=) YYY;)
 EOF
 	cat Makefile
 } |
 make -f - sayIt 2>/dev/null |
 sed -n -e 's/.*XXX \(.*\) YYY.*/\1/p' |
 sort |
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/color.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/color.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/color.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/color.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/column.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/column.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/column.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/column.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/combine-diff.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/combine-diff.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/combine-diff.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/combine-diff.c	2015-05-01 03:12:02.000000000 +0800
@@ -416,16 +416,14 @@
 	state.nmask = nmask;
 	state.sline = sline;
 	state.lno = 1;
 	state.num_parent = num_parent;
 	state.n = n;
 
-	if (xdi_diff_outf(&parent_file, result_file, consume_line, &state,
-			  &xpp, &xecfg))
-		die("unable to generate combined diff for %s",
-		    sha1_to_hex(parent));
+	xdi_diff_outf(&parent_file, result_file, consume_line, &state,
+		      &xpp, &xecfg);
 	free(parent_file.ptr);
 
 	/* Assign line numbers for this parent.
 	 *
 	 * sline[lno].p_lno[n] records the first line number
 	 * (counting from 1) for parent N if the final hunk display
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/combine-diff.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/combine-diff.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/combine-diff.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/combine-diff.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/commit.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/commit.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/commit.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/commit.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/commit.h	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/commit.h	2015-05-01 03:12:02.000000000 +0800
@@ -251,13 +251,12 @@
 extern int register_shallow(const unsigned char *sha1);
 extern int unregister_shallow(const unsigned char *sha1);
 extern int for_each_commit_graft(each_commit_graft_fn, void *);
 extern int is_repository_shallow(void);
 extern struct commit_list *get_shallow_commits(struct object_array *heads,
 		int depth, int shallow_flag, int not_shallow_flag);
-extern void check_shallow_file_for_update(void);
 extern void set_alternate_shallow_file(const char *path, int override);
 extern int write_shallow_commits(struct strbuf *out, int use_pack_protocol,
 				 const struct sha1_array *extra);
 extern void setup_alternate_shallow(struct lock_file *shallow_lock,
 				    const char **alternate_shallow_file,
 				    const struct sha1_array *extra);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/commit.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/commit.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/compat/obstack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/compat/obstack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/compat/obstack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/compat/obstack.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/compat/strlcpy.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/compat/strlcpy.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/compat/strlcpy.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/compat/strlcpy.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/compat/terminal.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/compat/terminal.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/compat/terminal.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/compat/terminal.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/compile_commands.json /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/compile_commands.json
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/compile_commands.json	2017-10-10 12:32:03.326631373 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/compile_commands.json	2017-10-10 13:04:32.830559925 +0800
@@ -1,1867 +1,1867 @@
 [
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o credential-store.o -c -MF ./.depend/credential-store.o.d -MQ credential-store.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" credential-store.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential-store.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential-store.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o abspath.o -c -MF ./.depend/abspath.o.d -MQ abspath.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" abspath.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/abspath.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/abspath.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o advice.o -c -MF ./.depend/advice.o.d -MQ advice.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" advice.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/advice.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/advice.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o alias.o -c -MF ./.depend/alias.o.d -MQ alias.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" alias.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/alias.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/alias.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o alloc.o -c -MF ./.depend/alloc.o.d -MQ alloc.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" alloc.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/alloc.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/alloc.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o archive.o -c -MF ./.depend/archive.o.d -MQ archive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" archive.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/archive.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/archive.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o archive-tar.o -c -MF ./.depend/archive-tar.o.d -MQ archive-tar.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" archive-tar.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/archive-tar.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/archive-tar.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o archive-zip.o -c -MF ./.depend/archive-zip.o.d -MQ archive-zip.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" archive-zip.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/archive-zip.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/archive-zip.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o argv-array.o -c -MF ./.depend/argv-array.o.d -MQ argv-array.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" argv-array.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/argv-array.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/argv-array.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o attr.o -c -MF ./.depend/attr.o.d -MQ attr.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DETC_GITATTRIBUTES=\"/usr/local/etc/gitattributes\" attr.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/attr.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/attr.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o base85.o -c -MF ./.depend/base85.o.d -MQ base85.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" base85.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/base85.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/base85.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o bisect.o -c -MF ./.depend/bisect.o.d -MQ bisect.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" bisect.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bisect.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bisect.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o blob.o -c -MF ./.depend/blob.o.d -MQ blob.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" blob.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/blob.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/blob.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o branch.o -c -MF ./.depend/branch.o.d -MQ branch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" branch.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/branch.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/branch.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o bulk-checkin.o -c -MF ./.depend/bulk-checkin.o.d -MQ bulk-checkin.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" bulk-checkin.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bulk-checkin.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bulk-checkin.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o bundle.o -c -MF ./.depend/bundle.o.d -MQ bundle.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" bundle.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bundle.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bundle.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o cache-tree.o -c -MF ./.depend/cache-tree.o.d -MQ cache-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" cache-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/cache-tree.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/cache-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o color.o -c -MF ./.depend/color.o.d -MQ color.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" color.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/color.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/color.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o column.o -c -MF ./.depend/column.o.d -MQ column.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" column.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/column.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/column.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o combine-diff.o -c -MF ./.depend/combine-diff.o.d -MQ combine-diff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" combine-diff.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/combine-diff.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/combine-diff.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o commit.o -c -MF ./.depend/commit.o.d -MQ commit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" commit.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/commit.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/commit.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o compat/obstack.o -c -MF compat/.depend/obstack.o.d -MQ compat/obstack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" compat/obstack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/compat/obstack.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/compat/obstack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o compat/terminal.o -c -MF compat/.depend/terminal.o.d -MQ compat/terminal.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" compat/terminal.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/compat/terminal.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/compat/terminal.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o config.o -c -MF ./.depend/config.o.d -MQ config.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DETC_GITCONFIG=\"/usr/local/etc/gitconfig\" config.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/config.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/config.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o connect.o -c -MF ./.depend/connect.o.d -MQ connect.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" connect.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/connect.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/connect.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o connected.o -c -MF ./.depend/connected.o.d -MQ connected.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" connected.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/connected.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/connected.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o convert.o -c -MF ./.depend/convert.o.d -MQ convert.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" convert.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/convert.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/convert.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o copy.o -c -MF ./.depend/copy.o.d -MQ copy.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" copy.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/copy.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/copy.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o credential.o -c -MF ./.depend/credential.o.d -MQ credential.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" credential.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o csum-file.o -c -MF ./.depend/csum-file.o.d -MQ csum-file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" csum-file.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/csum-file.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/csum-file.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o ctype.o -c -MF ./.depend/ctype.o.d -MQ ctype.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ctype.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ctype.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ctype.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o date.o -c -MF ./.depend/date.o.d -MQ date.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" date.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/date.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/date.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o decorate.o -c -MF ./.depend/decorate.o.d -MQ decorate.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" decorate.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/decorate.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/decorate.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o diffcore-break.o -c -MF ./.depend/diffcore-break.o.d -MQ diffcore-break.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-break.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-break.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-break.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o diffcore-delta.o -c -MF ./.depend/diffcore-delta.o.d -MQ diffcore-delta.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-delta.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-delta.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-delta.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o diffcore-order.o -c -MF ./.depend/diffcore-order.o.d -MQ diffcore-order.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-order.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-order.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-order.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o diffcore-pickaxe.o -c -MF ./.depend/diffcore-pickaxe.o.d -MQ diffcore-pickaxe.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-pickaxe.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-pickaxe.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-pickaxe.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o diffcore-rename.o -c -MF ./.depend/diffcore-rename.o.d -MQ diffcore-rename.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-rename.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-rename.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-rename.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o diff-delta.o -c -MF ./.depend/diff-delta.o.d -MQ diff-delta.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diff-delta.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff-delta.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff-delta.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o diff-lib.o -c -MF ./.depend/diff-lib.o.d -MQ diff-lib.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diff-lib.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff-lib.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff-lib.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o diff-no-index.o -c -MF ./.depend/diff-no-index.o.d -MQ diff-no-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diff-no-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff-no-index.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff-no-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o diff.o -c -MF ./.depend/diff.o.d -MQ diff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diff.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o dir.o -c -MF ./.depend/dir.o.d -MQ dir.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" dir.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/dir.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/dir.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o editor.o -c -MF ./.depend/editor.o.d -MQ editor.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" editor.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/editor.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/editor.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o entry.o -c -MF ./.depend/entry.o.d -MQ entry.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" entry.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/entry.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/entry.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o environment.o -c -MF ./.depend/environment.o.d -MQ environment.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" environment.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/environment.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/environment.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o ewah/bitmap.o -c -MF ewah/.depend/bitmap.o.d -MQ ewah/bitmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ewah/bitmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ewah/bitmap.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ewah/bitmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o ewah/ewah_bitmap.o -c -MF ewah/.depend/ewah_bitmap.o.d -MQ ewah/ewah_bitmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ewah/ewah_bitmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ewah/ewah_bitmap.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ewah/ewah_bitmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o ewah/ewah_io.o -c -MF ewah/.depend/ewah_io.o.d -MQ ewah/ewah_io.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ewah/ewah_io.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ewah/ewah_io.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ewah/ewah_io.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o ewah/ewah_rlw.o -c -MF ewah/.depend/ewah_rlw.o.d -MQ ewah/ewah_rlw.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ewah/ewah_rlw.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ewah/ewah_rlw.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ewah/ewah_rlw.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o exec_cmd.o -c -MF ./.depend/exec_cmd.o.d -MQ exec_cmd.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_EXEC_PATH=\"/usr/local/libexec/git-core\" -DBINDIR=\"bin\" -DPREFIX=\"/usr/local\" exec_cmd.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/exec_cmd.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/exec_cmd.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o fetch-pack.o -c -MF ./.depend/fetch-pack.o.d -MQ fetch-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" fetch-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/fetch-pack.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/fetch-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o fsck.o -c -MF ./.depend/fsck.o.d -MQ fsck.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" fsck.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/fsck.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/fsck.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o gettext.o -c -MF ./.depend/gettext.o.d -MQ gettext.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_LOCALE_PATH=\"/usr/local/share/locale\" gettext.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gettext.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gettext.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o gpg-interface.o -c -MF ./.depend/gpg-interface.o.d -MQ gpg-interface.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" gpg-interface.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gpg-interface.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gpg-interface.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o graph.o -c -MF ./.depend/graph.o.d -MQ graph.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" graph.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/graph.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/graph.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o grep.o -c -MF ./.depend/grep.o.d -MQ grep.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" grep.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/grep.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/grep.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o hashmap.o -c -MF ./.depend/hashmap.o.d -MQ hashmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" hashmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/hashmap.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/hashmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o help.o -c -MF ./.depend/help.o.d -MQ help.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" help.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/help.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/help.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o hex.o -c -MF ./.depend/hex.o.d -MQ hex.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" hex.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/hex.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/hex.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o ident.o -c -MF ./.depend/ident.o.d -MQ ident.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ident.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ident.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ident.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o kwset.o -c -MF ./.depend/kwset.o.d -MQ kwset.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" kwset.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/kwset.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/kwset.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o levenshtein.o -c -MF ./.depend/levenshtein.o.d -MQ levenshtein.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" levenshtein.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/levenshtein.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/levenshtein.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o line-log.o -c -MF ./.depend/line-log.o.d -MQ line-log.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" line-log.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/line-log.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/line-log.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o line-range.o -c -MF ./.depend/line-range.o.d -MQ line-range.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" line-range.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/line-range.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/line-range.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o list-objects.o -c -MF ./.depend/list-objects.o.d -MQ list-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" list-objects.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/list-objects.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/list-objects.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o ll-merge.o -c -MF ./.depend/ll-merge.o.d -MQ ll-merge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ll-merge.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ll-merge.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ll-merge.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o lockfile.o -c -MF ./.depend/lockfile.o.d -MQ lockfile.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" lockfile.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/lockfile.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/lockfile.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o log-tree.o -c -MF ./.depend/log-tree.o.d -MQ log-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" log-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/log-tree.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/log-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o mailmap.o -c -MF ./.depend/mailmap.o.d -MQ mailmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" mailmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/mailmap.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/mailmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o match-trees.o -c -MF ./.depend/match-trees.o.d -MQ match-trees.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" match-trees.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/match-trees.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/match-trees.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o merge.o -c -MF ./.depend/merge.o.d -MQ merge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" merge.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/merge.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/merge.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o merge-blobs.o -c -MF ./.depend/merge-blobs.o.d -MQ merge-blobs.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" merge-blobs.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/merge-blobs.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/merge-blobs.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o merge-recursive.o -c -MF ./.depend/merge-recursive.o.d -MQ merge-recursive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" merge-recursive.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/merge-recursive.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/merge-recursive.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o mergesort.o -c -MF ./.depend/mergesort.o.d -MQ mergesort.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" mergesort.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/mergesort.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/mergesort.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o name-hash.o -c -MF ./.depend/name-hash.o.d -MQ name-hash.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" name-hash.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/name-hash.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/name-hash.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o notes.o -c -MF ./.depend/notes.o.d -MQ notes.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" notes.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o notes-cache.o -c -MF ./.depend/notes-cache.o.d -MQ notes-cache.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" notes-cache.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes-cache.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes-cache.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o notes-merge.o -c -MF ./.depend/notes-merge.o.d -MQ notes-merge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" notes-merge.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes-merge.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes-merge.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o notes-utils.o -c -MF ./.depend/notes-utils.o.d -MQ notes-utils.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" notes-utils.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes-utils.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes-utils.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o object.o -c -MF ./.depend/object.o.d -MQ object.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" object.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/object.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/object.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o pack-bitmap.o -c -MF ./.depend/pack-bitmap.o.d -MQ pack-bitmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-bitmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-bitmap.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-bitmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o pack-bitmap-write.o -c -MF ./.depend/pack-bitmap-write.o.d -MQ pack-bitmap-write.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-bitmap-write.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-bitmap-write.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-bitmap-write.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o pack-check.o -c -MF ./.depend/pack-check.o.d -MQ pack-check.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-check.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-check.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-check.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o pack-objects.o -c -MF ./.depend/pack-objects.o.d -MQ pack-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-objects.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-objects.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-objects.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o pack-revindex.o -c -MF ./.depend/pack-revindex.o.d -MQ pack-revindex.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-revindex.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-revindex.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-revindex.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o pack-write.o -c -MF ./.depend/pack-write.o.d -MQ pack-write.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-write.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-write.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-write.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o pager.o -c -MF ./.depend/pager.o.d -MQ pager.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pager.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pager.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pager.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o parse-options.o -c -MF ./.depend/parse-options.o.d -MQ parse-options.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" parse-options.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/parse-options.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/parse-options.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o parse-options-cb.o -c -MF ./.depend/parse-options-cb.o.d -MQ parse-options-cb.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" parse-options-cb.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/parse-options-cb.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/parse-options-cb.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o patch-delta.o -c -MF ./.depend/patch-delta.o.d -MQ patch-delta.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" patch-delta.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/patch-delta.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/patch-delta.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o patch-ids.o -c -MF ./.depend/patch-ids.o.d -MQ patch-ids.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" patch-ids.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/patch-ids.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/patch-ids.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o path.o -c -MF ./.depend/path.o.d -MQ path.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" path.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/path.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/path.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o pathspec.o -c -MF ./.depend/pathspec.o.d -MQ pathspec.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pathspec.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pathspec.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pathspec.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o pkt-line.o -c -MF ./.depend/pkt-line.o.d -MQ pkt-line.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pkt-line.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pkt-line.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pkt-line.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o preload-index.o -c -MF ./.depend/preload-index.o.d -MQ preload-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" preload-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/preload-index.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/preload-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o pretty.o -c -MF ./.depend/pretty.o.d -MQ pretty.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pretty.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pretty.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pretty.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o prio-queue.o -c -MF ./.depend/prio-queue.o.d -MQ prio-queue.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" prio-queue.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/prio-queue.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/prio-queue.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o progress.o -c -MF ./.depend/progress.o.d -MQ progress.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" progress.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/progress.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/progress.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o prompt.o -c -MF ./.depend/prompt.o.d -MQ prompt.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" prompt.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/prompt.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/prompt.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o quote.o -c -MF ./.depend/quote.o.d -MQ quote.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" quote.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/quote.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/quote.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o reachable.o -c -MF ./.depend/reachable.o.d -MQ reachable.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" reachable.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/reachable.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/reachable.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o read-cache.o -c -MF ./.depend/read-cache.o.d -MQ read-cache.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" read-cache.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/read-cache.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/read-cache.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o reflog-walk.o -c -MF ./.depend/reflog-walk.o.d -MQ reflog-walk.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" reflog-walk.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/reflog-walk.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/reflog-walk.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o refs.o -c -MF ./.depend/refs.o.d -MQ refs.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" refs.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/refs.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/refs.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o remote.o -c -MF ./.depend/remote.o.d -MQ remote.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" remote.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/remote.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/remote.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o replace_object.o -c -MF ./.depend/replace_object.o.d -MQ replace_object.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" replace_object.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/replace_object.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/replace_object.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o rerere.o -c -MF ./.depend/rerere.o.d -MQ rerere.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" rerere.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/rerere.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/rerere.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o resolve-undo.o -c -MF ./.depend/resolve-undo.o.d -MQ resolve-undo.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" resolve-undo.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/resolve-undo.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/resolve-undo.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o revision.o -c -MF ./.depend/revision.o.d -MQ revision.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" revision.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/revision.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/revision.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o run-command.o -c -MF ./.depend/run-command.o.d -MQ run-command.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" run-command.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/run-command.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/run-command.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o send-pack.o -c -MF ./.depend/send-pack.o.d -MQ send-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" send-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/send-pack.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/send-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o sequencer.o -c -MF ./.depend/sequencer.o.d -MQ sequencer.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sequencer.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sequencer.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sequencer.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o server-info.o -c -MF ./.depend/server-info.o.d -MQ server-info.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" server-info.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/server-info.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/server-info.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o setup.o -c -MF ./.depend/setup.o.d -MQ setup.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" setup.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/setup.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/setup.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o sha1-array.o -c -MF ./.depend/sha1-array.o.d -MQ sha1-array.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sha1-array.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1-array.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1-array.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o sha1-lookup.o -c -MF ./.depend/sha1-lookup.o.d -MQ sha1-lookup.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sha1-lookup.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1-lookup.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1-lookup.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o sha1_file.o -c -MF ./.depend/sha1_file.o.d -MQ sha1_file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sha1_file.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1_file.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1_file.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o sha1_name.o -c -MF ./.depend/sha1_name.o.d -MQ sha1_name.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sha1_name.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1_name.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1_name.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o shallow.o -c -MF ./.depend/shallow.o.d -MQ shallow.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" shallow.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/shallow.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/shallow.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o sideband.o -c -MF ./.depend/sideband.o.d -MQ sideband.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sideband.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sideband.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sideband.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o sigchain.o -c -MF ./.depend/sigchain.o.d -MQ sigchain.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sigchain.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sigchain.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sigchain.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o split-index.o -c -MF ./.depend/split-index.o.d -MQ split-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" split-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/split-index.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/split-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o strbuf.o -c -MF ./.depend/strbuf.o.d -MQ strbuf.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" strbuf.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/strbuf.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/strbuf.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o streaming.o -c -MF ./.depend/streaming.o.d -MQ streaming.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" streaming.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/streaming.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/streaming.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o string-list.o -c -MF ./.depend/string-list.o.d -MQ string-list.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" string-list.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/string-list.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/string-list.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o submodule.o -c -MF ./.depend/submodule.o.d -MQ submodule.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" submodule.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/submodule.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/submodule.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o symlinks.o -c -MF ./.depend/symlinks.o.d -MQ symlinks.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" symlinks.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/symlinks.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/symlinks.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o tag.o -c -MF ./.depend/tag.o.d -MQ tag.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" tag.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/tag.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/tag.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o trace.o -c -MF ./.depend/trace.o.d -MQ trace.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" trace.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/trace.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/trace.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o trailer.o -c -MF ./.depend/trailer.o.d -MQ trailer.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" trailer.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/trailer.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/trailer.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o transport.o -c -MF ./.depend/transport.o.d -MQ transport.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" transport.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/transport.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/transport.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o transport-helper.o -c -MF ./.depend/transport-helper.o.d -MQ transport-helper.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" transport-helper.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/transport-helper.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/transport-helper.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o tree-diff.o -c -MF ./.depend/tree-diff.o.d -MQ tree-diff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" tree-diff.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/tree-diff.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/tree-diff.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o tree.o -c -MF ./.depend/tree.o.d -MQ tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/tree.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o tree-walk.o -c -MF ./.depend/tree-walk.o.d -MQ tree-walk.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" tree-walk.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/tree-walk.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/tree-walk.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o unpack-trees.o -c -MF ./.depend/unpack-trees.o.d -MQ unpack-trees.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" unpack-trees.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/unpack-trees.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/unpack-trees.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o url.o -c -MF ./.depend/url.o.d -MQ url.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" url.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/url.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/url.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o urlmatch.o -c -MF ./.depend/urlmatch.o.d -MQ urlmatch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" urlmatch.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/urlmatch.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/urlmatch.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o usage.o -c -MF ./.depend/usage.o.d -MQ usage.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" usage.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/usage.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/usage.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o userdiff.o -c -MF ./.depend/userdiff.o.d -MQ userdiff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" userdiff.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/userdiff.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/userdiff.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o utf8.o -c -MF ./.depend/utf8.o.d -MQ utf8.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" utf8.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/utf8.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/utf8.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o varint.o -c -MF ./.depend/varint.o.d -MQ varint.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" varint.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/varint.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/varint.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
-  "command": "gcc -o version.o -c -MF ./.depend/version.o.d -MQ version.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_VERSION=\"2.3.10\" -DGIT_USER_AGENT=\"git/2.3.10\" version.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/version.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
+  "command": "gcc -o version.o -c -MF ./.depend/version.o.d -MQ version.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_VERSION=\"2.4.0\" -DGIT_USER_AGENT=\"git/2.4.0\" version.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/version.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o versioncmp.o -c -MF ./.depend/versioncmp.o.d -MQ versioncmp.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" versioncmp.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/versioncmp.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/versioncmp.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o walker.o -c -MF ./.depend/walker.o.d -MQ walker.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" walker.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/walker.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/walker.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o wildmatch.o -c -MF ./.depend/wildmatch.o.d -MQ wildmatch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" wildmatch.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/wildmatch.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/wildmatch.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o wrapper.o -c -MF ./.depend/wrapper.o.d -MQ wrapper.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" wrapper.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/wrapper.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/wrapper.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o write_or_die.o -c -MF ./.depend/write_or_die.o.d -MQ write_or_die.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" write_or_die.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/write_or_die.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/write_or_die.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o ws.o -c -MF ./.depend/ws.o.d -MQ ws.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ws.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ws.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ws.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o wt-status.o -c -MF ./.depend/wt-status.o.d -MQ wt-status.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" wt-status.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/wt-status.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/wt-status.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o xdiff-interface.o -c -MF ./.depend/xdiff-interface.o.d -MQ xdiff-interface.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff-interface.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff-interface.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff-interface.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o zlib.o -c -MF ./.depend/zlib.o.d -MQ zlib.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" zlib.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/zlib.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/zlib.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o unix-socket.o -c -MF ./.depend/unix-socket.o.d -MQ unix-socket.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" unix-socket.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/unix-socket.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/unix-socket.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o block-sha1/sha1.o -c -MF block-sha1/.depend/sha1.o.d -MQ block-sha1/sha1.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" block-sha1/sha1.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/block-sha1/sha1.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/block-sha1/sha1.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o thread-utils.o -c -MF ./.depend/thread-utils.o.d -MQ thread-utils.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" thread-utils.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/thread-utils.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/thread-utils.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o compat/strlcpy.o -c -MF compat/.depend/strlcpy.o.d -MQ compat/strlcpy.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" compat/strlcpy.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/compat/strlcpy.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/compat/strlcpy.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o xdiff/xdiffi.o -c -MF xdiff/.depend/xdiffi.o.d -MQ xdiff/xdiffi.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xdiffi.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xdiffi.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xdiffi.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o xdiff/xprepare.o -c -MF xdiff/.depend/xprepare.o.d -MQ xdiff/xprepare.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xprepare.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xprepare.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xprepare.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o xdiff/xutils.o -c -MF xdiff/.depend/xutils.o.d -MQ xdiff/xutils.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xutils.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xutils.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xutils.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o xdiff/xemit.o -c -MF xdiff/.depend/xemit.o.d -MQ xdiff/xemit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xemit.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xemit.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xemit.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o xdiff/xmerge.o -c -MF xdiff/.depend/xmerge.o.d -MQ xdiff/xmerge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xmerge.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xmerge.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xmerge.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o xdiff/xpatience.o -c -MF xdiff/.depend/xpatience.o.d -MQ xdiff/xpatience.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xpatience.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xpatience.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xpatience.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o xdiff/xhistogram.o -c -MF xdiff/.depend/xhistogram.o.d -MQ xdiff/xhistogram.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xhistogram.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xhistogram.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xhistogram.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o daemon.o -c -MF ./.depend/daemon.o.d -MQ daemon.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" daemon.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/daemon.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/daemon.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o fast-import.o -c -MF ./.depend/fast-import.o.d -MQ fast-import.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" fast-import.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/fast-import.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/fast-import.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o http-backend.o -c -MF ./.depend/http-backend.o.d -MQ http-backend.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" http-backend.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/http-backend.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/http-backend.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o imap-send.o -c -MF ./.depend/imap-send.o.d -MQ imap-send.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" imap-send.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/imap-send.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/imap-send.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o sh-i18n--envsubst.o -c -MF ./.depend/sh-i18n--envsubst.o.d -MQ sh-i18n--envsubst.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sh-i18n--envsubst.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sh-i18n--envsubst.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sh-i18n--envsubst.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o shell.o -c -MF ./.depend/shell.o.d -MQ shell.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" shell.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/shell.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/shell.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o show-index.o -c -MF ./.depend/show-index.o.d -MQ show-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" show-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/show-index.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/show-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o upload-pack.o -c -MF ./.depend/upload-pack.o.d -MQ upload-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" upload-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/upload-pack.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/upload-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o remote-testsvn.o -c -MF ./.depend/remote-testsvn.o.d -MQ remote-testsvn.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" remote-testsvn.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/remote-testsvn.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/remote-testsvn.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o vcs-svn/line_buffer.o -c -MF vcs-svn/.depend/line_buffer.o.d -MQ vcs-svn/line_buffer.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/line_buffer.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/line_buffer.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/line_buffer.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o vcs-svn/sliding_window.o -c -MF vcs-svn/.depend/sliding_window.o.d -MQ vcs-svn/sliding_window.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/sliding_window.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/sliding_window.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/sliding_window.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o vcs-svn/repo_tree.o -c -MF vcs-svn/.depend/repo_tree.o.d -MQ vcs-svn/repo_tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/repo_tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/repo_tree.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/repo_tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o vcs-svn/fast_export.o -c -MF vcs-svn/.depend/fast_export.o.d -MQ vcs-svn/fast_export.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/fast_export.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/fast_export.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/fast_export.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o vcs-svn/svndiff.o -c -MF vcs-svn/.depend/svndiff.o.d -MQ vcs-svn/svndiff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/svndiff.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/svndiff.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/svndiff.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o vcs-svn/svndump.o -c -MF vcs-svn/.depend/svndump.o.d -MQ vcs-svn/svndump.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/svndump.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/svndump.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/svndump.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o credential-cache.o -c -MF ./.depend/credential-cache.o.d -MQ credential-cache.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" credential-cache.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential-cache.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential-cache.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o credential-cache--daemon.o -c -MF ./.depend/credential-cache--daemon.o.d -MQ credential-cache--daemon.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" credential-cache--daemon.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential-cache--daemon.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential-cache--daemon.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o git.o -c -MF ./.depend/git.o.d -MQ git.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_HTML_PATH=\"share/doc/git\" -DGIT_MAN_PATH=\"share/man\" -DGIT_INFO_PATH=\"share/info\" git.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/add.o -c -MF builtin/.depend/add.o.d -MQ builtin/add.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/add.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/add.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/add.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/annotate.o -c -MF builtin/.depend/annotate.o.d -MQ builtin/annotate.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/annotate.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/annotate.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/annotate.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/apply.o -c -MF builtin/.depend/apply.o.d -MQ builtin/apply.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/apply.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/apply.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/apply.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/archive.o -c -MF builtin/.depend/archive.o.d -MQ builtin/archive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/archive.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/archive.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/archive.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/bisect--helper.o -c -MF builtin/.depend/bisect--helper.o.d -MQ builtin/bisect--helper.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/bisect--helper.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/bisect--helper.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/bisect--helper.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/blame.o -c -MF builtin/.depend/blame.o.d -MQ builtin/blame.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/blame.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/blame.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/blame.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/branch.o -c -MF builtin/.depend/branch.o.d -MQ builtin/branch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/branch.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/branch.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/branch.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/bundle.o -c -MF builtin/.depend/bundle.o.d -MQ builtin/bundle.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/bundle.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/bundle.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/bundle.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/cat-file.o -c -MF builtin/.depend/cat-file.o.d -MQ builtin/cat-file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/cat-file.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/cat-file.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/cat-file.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/check-attr.o -c -MF builtin/.depend/check-attr.o.d -MQ builtin/check-attr.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/check-attr.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-attr.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-attr.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/check-ignore.o -c -MF builtin/.depend/check-ignore.o.d -MQ builtin/check-ignore.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/check-ignore.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-ignore.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-ignore.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/check-mailmap.o -c -MF builtin/.depend/check-mailmap.o.d -MQ builtin/check-mailmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/check-mailmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-mailmap.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-mailmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/check-ref-format.o -c -MF builtin/.depend/check-ref-format.o.d -MQ builtin/check-ref-format.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/check-ref-format.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-ref-format.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-ref-format.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/checkout-index.o -c -MF builtin/.depend/checkout-index.o.d -MQ builtin/checkout-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/checkout-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/checkout-index.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/checkout-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/checkout.o -c -MF builtin/.depend/checkout.o.d -MQ builtin/checkout.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/checkout.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/checkout.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/checkout.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/clean.o -c -MF builtin/.depend/clean.o.d -MQ builtin/clean.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/clean.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/clean.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/clean.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/clone.o -c -MF builtin/.depend/clone.o.d -MQ builtin/clone.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/clone.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/clone.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/clone.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/column.o -c -MF builtin/.depend/column.o.d -MQ builtin/column.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/column.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/column.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/column.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/commit-tree.o -c -MF builtin/.depend/commit-tree.o.d -MQ builtin/commit-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/commit-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/commit-tree.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/commit-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/commit.o -c -MF builtin/.depend/commit.o.d -MQ builtin/commit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/commit.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/commit.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/commit.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/config.o -c -MF builtin/.depend/config.o.d -MQ builtin/config.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/config.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/config.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/config.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/count-objects.o -c -MF builtin/.depend/count-objects.o.d -MQ builtin/count-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/count-objects.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/count-objects.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/count-objects.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/credential.o -c -MF builtin/.depend/credential.o.d -MQ builtin/credential.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/credential.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/credential.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/credential.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/describe.o -c -MF builtin/.depend/describe.o.d -MQ builtin/describe.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/describe.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/describe.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/describe.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/diff-files.o -c -MF builtin/.depend/diff-files.o.d -MQ builtin/diff-files.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/diff-files.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff-files.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff-files.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/diff-index.o -c -MF builtin/.depend/diff-index.o.d -MQ builtin/diff-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/diff-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff-index.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/diff-tree.o -c -MF builtin/.depend/diff-tree.o.d -MQ builtin/diff-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/diff-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff-tree.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/diff.o -c -MF builtin/.depend/diff.o.d -MQ builtin/diff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/diff.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/fast-export.o -c -MF builtin/.depend/fast-export.o.d -MQ builtin/fast-export.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fast-export.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fast-export.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fast-export.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/fetch-pack.o -c -MF builtin/.depend/fetch-pack.o.d -MQ builtin/fetch-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fetch-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fetch-pack.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fetch-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/fetch.o -c -MF builtin/.depend/fetch.o.d -MQ builtin/fetch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fetch.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fetch.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fetch.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/fmt-merge-msg.o -c -MF builtin/.depend/fmt-merge-msg.o.d -MQ builtin/fmt-merge-msg.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fmt-merge-msg.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fmt-merge-msg.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fmt-merge-msg.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/for-each-ref.o -c -MF builtin/.depend/for-each-ref.o.d -MQ builtin/for-each-ref.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/for-each-ref.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/for-each-ref.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/for-each-ref.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/fsck.o -c -MF builtin/.depend/fsck.o.d -MQ builtin/fsck.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fsck.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fsck.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fsck.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/gc.o -c -MF builtin/.depend/gc.o.d -MQ builtin/gc.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/gc.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/gc.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/gc.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/get-tar-commit-id.o -c -MF builtin/.depend/get-tar-commit-id.o.d -MQ builtin/get-tar-commit-id.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/get-tar-commit-id.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/get-tar-commit-id.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/get-tar-commit-id.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/grep.o -c -MF builtin/.depend/grep.o.d -MQ builtin/grep.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/grep.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/grep.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/grep.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/hash-object.o -c -MF builtin/.depend/hash-object.o.d -MQ builtin/hash-object.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/hash-object.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/hash-object.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/hash-object.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/help.o -c -MF builtin/.depend/help.o.d -MQ builtin/help.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_HTML_PATH=\"share/doc/git\" -DGIT_MAN_PATH=\"share/man\" -DGIT_INFO_PATH=\"share/info\" builtin/help.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/help.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/help.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/index-pack.o -c -MF builtin/.depend/index-pack.o.d -MQ builtin/index-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/index-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/index-pack.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/index-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/init-db.o -c -MF builtin/.depend/init-db.o.d -MQ builtin/init-db.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DDEFAULT_GIT_TEMPLATE_DIR=\"/usr/local/share/git-core/templates\" builtin/init-db.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/init-db.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/init-db.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/interpret-trailers.o -c -MF builtin/.depend/interpret-trailers.o.d -MQ builtin/interpret-trailers.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/interpret-trailers.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/interpret-trailers.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/interpret-trailers.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/log.o -c -MF builtin/.depend/log.o.d -MQ builtin/log.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/log.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/log.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/log.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/ls-files.o -c -MF builtin/.depend/ls-files.o.d -MQ builtin/ls-files.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/ls-files.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/ls-files.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/ls-files.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/ls-remote.o -c -MF builtin/.depend/ls-remote.o.d -MQ builtin/ls-remote.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/ls-remote.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/ls-remote.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/ls-remote.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/ls-tree.o -c -MF builtin/.depend/ls-tree.o.d -MQ builtin/ls-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/ls-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/ls-tree.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/ls-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/mailinfo.o -c -MF builtin/.depend/mailinfo.o.d -MQ builtin/mailinfo.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mailinfo.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mailinfo.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mailinfo.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/mailsplit.o -c -MF builtin/.depend/mailsplit.o.d -MQ builtin/mailsplit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mailsplit.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mailsplit.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mailsplit.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/merge.o -c -MF builtin/.depend/merge.o.d -MQ builtin/merge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/merge-base.o -c -MF builtin/.depend/merge-base.o.d -MQ builtin/merge-base.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-base.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-base.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-base.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/merge-file.o -c -MF builtin/.depend/merge-file.o.d -MQ builtin/merge-file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-file.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-file.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-file.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/merge-index.o -c -MF builtin/.depend/merge-index.o.d -MQ builtin/merge-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-index.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/merge-ours.o -c -MF builtin/.depend/merge-ours.o.d -MQ builtin/merge-ours.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-ours.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-ours.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-ours.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/merge-recursive.o -c -MF builtin/.depend/merge-recursive.o.d -MQ builtin/merge-recursive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-recursive.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-recursive.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-recursive.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/merge-tree.o -c -MF builtin/.depend/merge-tree.o.d -MQ builtin/merge-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-tree.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/mktag.o -c -MF builtin/.depend/mktag.o.d -MQ builtin/mktag.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mktag.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mktag.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mktag.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/mktree.o -c -MF builtin/.depend/mktree.o.d -MQ builtin/mktree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mktree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mktree.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mktree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/mv.o -c -MF builtin/.depend/mv.o.d -MQ builtin/mv.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mv.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mv.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mv.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/name-rev.o -c -MF builtin/.depend/name-rev.o.d -MQ builtin/name-rev.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/name-rev.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/name-rev.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/name-rev.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/notes.o -c -MF builtin/.depend/notes.o.d -MQ builtin/notes.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/notes.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/notes.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/notes.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/pack-objects.o -c -MF builtin/.depend/pack-objects.o.d -MQ builtin/pack-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/pack-objects.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/pack-objects.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/pack-objects.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/pack-redundant.o -c -MF builtin/.depend/pack-redundant.o.d -MQ builtin/pack-redundant.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/pack-redundant.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/pack-redundant.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/pack-redundant.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/pack-refs.o -c -MF builtin/.depend/pack-refs.o.d -MQ builtin/pack-refs.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/pack-refs.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/pack-refs.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/pack-refs.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/patch-id.o -c -MF builtin/.depend/patch-id.o.d -MQ builtin/patch-id.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/patch-id.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/patch-id.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/patch-id.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/prune-packed.o -c -MF builtin/.depend/prune-packed.o.d -MQ builtin/prune-packed.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/prune-packed.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/prune-packed.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/prune-packed.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/prune.o -c -MF builtin/.depend/prune.o.d -MQ builtin/prune.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/prune.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/prune.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/prune.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/push.o -c -MF builtin/.depend/push.o.d -MQ builtin/push.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/push.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/push.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/push.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/read-tree.o -c -MF builtin/.depend/read-tree.o.d -MQ builtin/read-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/read-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/read-tree.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/read-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/receive-pack.o -c -MF builtin/.depend/receive-pack.o.d -MQ builtin/receive-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/receive-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/receive-pack.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/receive-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/reflog.o -c -MF builtin/.depend/reflog.o.d -MQ builtin/reflog.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/reflog.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/reflog.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/reflog.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/remote.o -c -MF builtin/.depend/remote.o.d -MQ builtin/remote.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/remote.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/remote.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/remote.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/remote-ext.o -c -MF builtin/.depend/remote-ext.o.d -MQ builtin/remote-ext.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/remote-ext.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/remote-ext.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/remote-ext.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/remote-fd.o -c -MF builtin/.depend/remote-fd.o.d -MQ builtin/remote-fd.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/remote-fd.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/remote-fd.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/remote-fd.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/repack.o -c -MF builtin/.depend/repack.o.d -MQ builtin/repack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/repack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/repack.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/repack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/replace.o -c -MF builtin/.depend/replace.o.d -MQ builtin/replace.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/replace.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/replace.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/replace.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/rerere.o -c -MF builtin/.depend/rerere.o.d -MQ builtin/rerere.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/rerere.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rerere.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rerere.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/reset.o -c -MF builtin/.depend/reset.o.d -MQ builtin/reset.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/reset.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/reset.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/reset.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/rev-list.o -c -MF builtin/.depend/rev-list.o.d -MQ builtin/rev-list.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/rev-list.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rev-list.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rev-list.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/rev-parse.o -c -MF builtin/.depend/rev-parse.o.d -MQ builtin/rev-parse.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/rev-parse.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rev-parse.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rev-parse.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/revert.o -c -MF builtin/.depend/revert.o.d -MQ builtin/revert.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/revert.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/revert.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/revert.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/rm.o -c -MF builtin/.depend/rm.o.d -MQ builtin/rm.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/rm.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rm.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rm.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/send-pack.o -c -MF builtin/.depend/send-pack.o.d -MQ builtin/send-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/send-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/send-pack.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/send-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/shortlog.o -c -MF builtin/.depend/shortlog.o.d -MQ builtin/shortlog.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/shortlog.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/shortlog.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/shortlog.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/show-branch.o -c -MF builtin/.depend/show-branch.o.d -MQ builtin/show-branch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/show-branch.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/show-branch.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/show-branch.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/show-ref.o -c -MF builtin/.depend/show-ref.o.d -MQ builtin/show-ref.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/show-ref.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/show-ref.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/show-ref.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/stripspace.o -c -MF builtin/.depend/stripspace.o.d -MQ builtin/stripspace.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/stripspace.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/stripspace.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/stripspace.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/symbolic-ref.o -c -MF builtin/.depend/symbolic-ref.o.d -MQ builtin/symbolic-ref.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/symbolic-ref.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/symbolic-ref.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/symbolic-ref.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/tag.o -c -MF builtin/.depend/tag.o.d -MQ builtin/tag.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/tag.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/tag.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/tag.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/unpack-file.o -c -MF builtin/.depend/unpack-file.o.d -MQ builtin/unpack-file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/unpack-file.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/unpack-file.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/unpack-file.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/unpack-objects.o -c -MF builtin/.depend/unpack-objects.o.d -MQ builtin/unpack-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/unpack-objects.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/unpack-objects.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/unpack-objects.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/update-index.o -c -MF builtin/.depend/update-index.o.d -MQ builtin/update-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/update-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/update-index.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/update-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/update-ref.o -c -MF builtin/.depend/update-ref.o.d -MQ builtin/update-ref.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/update-ref.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/update-ref.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/update-ref.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/update-server-info.o -c -MF builtin/.depend/update-server-info.o.d -MQ builtin/update-server-info.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/update-server-info.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/update-server-info.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/update-server-info.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/upload-archive.o -c -MF builtin/.depend/upload-archive.o.d -MQ builtin/upload-archive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/upload-archive.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/upload-archive.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/upload-archive.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/var.o -c -MF builtin/.depend/var.o.d -MQ builtin/var.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/var.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/var.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/var.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/verify-commit.o -c -MF builtin/.depend/verify-commit.o.d -MQ builtin/verify-commit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/verify-commit.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/verify-commit.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/verify-commit.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/verify-pack.o -c -MF builtin/.depend/verify-pack.o.d -MQ builtin/verify-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/verify-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/verify-pack.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/verify-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/verify-tag.o -c -MF builtin/.depend/verify-tag.o.d -MQ builtin/verify-tag.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/verify-tag.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/verify-tag.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/verify-tag.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o builtin/write-tree.o -c -MF builtin/.depend/write-tree.o.d -MQ builtin/write-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/write-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/write-tree.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/write-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-chmtime.o -c -MF ./.depend/test-chmtime.o.d -MQ test-chmtime.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-chmtime.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-chmtime.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-chmtime.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-ctype.o -c -MF ./.depend/test-ctype.o.d -MQ test-ctype.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-ctype.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-ctype.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-ctype.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-config.o -c -MF ./.depend/test-config.o.d -MQ test-config.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-config.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-config.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-config.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-date.o -c -MF ./.depend/test-date.o.d -MQ test-date.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-date.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-date.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-date.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-delta.o -c -MF ./.depend/test-delta.o.d -MQ test-delta.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-delta.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-delta.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-delta.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-dump-cache-tree.o -c -MF ./.depend/test-dump-cache-tree.o.d -MQ test-dump-cache-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-dump-cache-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-dump-cache-tree.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-dump-cache-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-dump-split-index.o -c -MF ./.depend/test-dump-split-index.o.d -MQ test-dump-split-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-dump-split-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-dump-split-index.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-dump-split-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-genrandom.o -c -MF ./.depend/test-genrandom.o.d -MQ test-genrandom.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-genrandom.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-genrandom.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-genrandom.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-hashmap.o -c -MF ./.depend/test-hashmap.o.d -MQ test-hashmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-hashmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-hashmap.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-hashmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-index-version.o -c -MF ./.depend/test-index-version.o.d -MQ test-index-version.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-index-version.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-index-version.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-index-version.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-line-buffer.o -c -MF ./.depend/test-line-buffer.o.d -MQ test-line-buffer.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-line-buffer.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-line-buffer.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-line-buffer.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-match-trees.o -c -MF ./.depend/test-match-trees.o.d -MQ test-match-trees.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-match-trees.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-match-trees.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-match-trees.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-mergesort.o -c -MF ./.depend/test-mergesort.o.d -MQ test-mergesort.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-mergesort.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-mergesort.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-mergesort.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-mktemp.o -c -MF ./.depend/test-mktemp.o.d -MQ test-mktemp.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-mktemp.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-mktemp.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-mktemp.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-parse-options.o -c -MF ./.depend/test-parse-options.o.d -MQ test-parse-options.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-parse-options.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-parse-options.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-parse-options.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-path-utils.o -c -MF ./.depend/test-path-utils.o.d -MQ test-path-utils.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-path-utils.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-path-utils.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-path-utils.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-prio-queue.o -c -MF ./.depend/test-prio-queue.o.d -MQ test-prio-queue.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-prio-queue.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-prio-queue.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-prio-queue.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-read-cache.o -c -MF ./.depend/test-read-cache.o.d -MQ test-read-cache.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-read-cache.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-read-cache.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-read-cache.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-regex.o -c -MF ./.depend/test-regex.o.d -MQ test-regex.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-regex.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-regex.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-regex.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-revision-walking.o -c -MF ./.depend/test-revision-walking.o.d -MQ test-revision-walking.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-revision-walking.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-revision-walking.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-revision-walking.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-run-command.o -c -MF ./.depend/test-run-command.o.d -MQ test-run-command.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-run-command.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-run-command.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-run-command.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-scrap-cache-tree.o -c -MF ./.depend/test-scrap-cache-tree.o.d -MQ test-scrap-cache-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-scrap-cache-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-scrap-cache-tree.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-scrap-cache-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-sha1.o -c -MF ./.depend/test-sha1.o.d -MQ test-sha1.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-sha1.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-sha1.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-sha1.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-sha1-array.o -c -MF ./.depend/test-sha1-array.o.d -MQ test-sha1-array.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-sha1-array.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-sha1-array.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-sha1-array.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-sigchain.o -c -MF ./.depend/test-sigchain.o.d -MQ test-sigchain.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-sigchain.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-sigchain.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-sigchain.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-string-list.o -c -MF ./.depend/test-string-list.o.d -MQ test-string-list.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-string-list.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-string-list.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-string-list.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-subprocess.o -c -MF ./.depend/test-subprocess.o.d -MQ test-subprocess.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-subprocess.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-subprocess.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-subprocess.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-svn-fe.o -c -MF ./.depend/test-svn-fe.o.d -MQ test-svn-fe.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-svn-fe.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-svn-fe.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-svn-fe.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-urlmatch-normalization.o -c -MF ./.depend/test-urlmatch-normalization.o.d -MQ test-urlmatch-normalization.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-urlmatch-normalization.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-urlmatch-normalization.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-urlmatch-normalization.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0",
   "command": "gcc -o test-wildmatch.o -c -MF ./.depend/test-wildmatch.o.d -MQ test-wildmatch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-wildmatch.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-wildmatch.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-wildmatch.c"
 }
 ]
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/compiled_files.def /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/compiled_files.def
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/compiled_files.def	2017-10-10 12:32:03.334631373 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/compiled_files.def	2017-10-10 13:04:32.838559925 +0800
@@ -1,311 +1,311 @@
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential-store.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/abspath.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/advice.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/alias.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/alloc.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/archive.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/archive-tar.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/archive-zip.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/argv-array.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/attr.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/base85.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bisect.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/blob.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/branch.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bulk-checkin.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/bundle.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/cache-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/color.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/column.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/combine-diff.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/commit.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/compat/obstack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/compat/terminal.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/config.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/connect.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/connected.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/convert.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/copy.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/csum-file.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ctype.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/date.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/decorate.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-break.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-delta.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-order.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-pickaxe.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-rename.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff-delta.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff-lib.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff-no-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/dir.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/editor.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/entry.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/environment.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ewah/bitmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ewah/ewah_bitmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ewah/ewah_io.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ewah/ewah_rlw.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/exec_cmd.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/fetch-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/fsck.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gettext.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gpg-interface.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/graph.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/grep.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/hashmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/help.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/hex.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ident.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/kwset.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/levenshtein.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/line-log.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/line-range.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/list-objects.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ll-merge.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/lockfile.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/log-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/mailmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/match-trees.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/merge.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/merge-blobs.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/merge-recursive.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/mergesort.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/name-hash.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes-cache.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes-merge.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes-utils.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/object.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-bitmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-bitmap-write.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-check.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-objects.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-revindex.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-write.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pager.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/parse-options.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/parse-options-cb.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/patch-delta.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/patch-ids.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/path.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pathspec.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pkt-line.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/preload-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pretty.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/prio-queue.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/progress.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/prompt.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/quote.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/reachable.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/read-cache.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/reflog-walk.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/refs.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/remote.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/replace_object.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/rerere.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/resolve-undo.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/revision.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/run-command.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/send-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sequencer.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/server-info.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/setup.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1-array.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1-lookup.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1_file.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1_name.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/shallow.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sideband.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sigchain.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/split-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/strbuf.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/streaming.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/string-list.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/submodule.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/symlinks.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/tag.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/trace.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/trailer.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/transport.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/transport-helper.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/tree-diff.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/tree-walk.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/unpack-trees.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/url.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/urlmatch.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/usage.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/userdiff.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/utf8.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/varint.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/version.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/versioncmp.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/walker.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/wildmatch.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/wrapper.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/write_or_die.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ws.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/wt-status.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff-interface.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/zlib.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/unix-socket.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/block-sha1/sha1.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/thread-utils.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/compat/strlcpy.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xdiffi.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xprepare.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xutils.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xemit.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xmerge.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xpatience.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xhistogram.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/daemon.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/fast-import.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/http-backend.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/imap-send.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sh-i18n--envsubst.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/shell.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/show-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/upload-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/remote-testsvn.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/line_buffer.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/sliding_window.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/repo_tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/fast_export.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/svndiff.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/svndump.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential-cache.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential-cache--daemon.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/add.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/annotate.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/apply.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/archive.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/bisect--helper.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/blame.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/branch.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/bundle.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/cat-file.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-attr.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-ignore.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-mailmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/check-ref-format.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/checkout-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/checkout.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/clean.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/clone.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/column.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/commit-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/commit.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/config.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/count-objects.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/credential.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/describe.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff-files.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/diff.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fast-export.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fetch-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fetch.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fmt-merge-msg.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/for-each-ref.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/fsck.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/gc.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/get-tar-commit-id.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/grep.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/hash-object.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/help.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/index-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/init-db.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/interpret-trailers.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/log.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/ls-files.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/ls-remote.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/ls-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mailinfo.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mailsplit.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-base.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-file.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-ours.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-recursive.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/merge-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mktag.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mktree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/mv.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/name-rev.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/notes.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/pack-objects.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/pack-redundant.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/pack-refs.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/patch-id.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/prune-packed.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/prune.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/push.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/read-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/receive-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/reflog.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/remote.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/remote-ext.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/remote-fd.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/repack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/replace.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rerere.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/reset.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rev-list.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rev-parse.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/revert.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/rm.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/send-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/shortlog.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/show-branch.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/show-ref.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/stripspace.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/symbolic-ref.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/tag.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/unpack-file.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/unpack-objects.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/update-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/update-ref.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/update-server-info.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/upload-archive.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/var.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/verify-commit.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/verify-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/verify-tag.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/builtin/write-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-chmtime.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-ctype.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-config.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-date.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-delta.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-dump-cache-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-dump-split-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-genrandom.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-hashmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-index-version.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-line-buffer.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-match-trees.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-mergesort.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-mktemp.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-parse-options.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-path-utils.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-prio-queue.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-read-cache.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-regex.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-revision-walking.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-run-command.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-scrap-cache-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-sha1.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-sha1-array.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-sigchain.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-string-list.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-subprocess.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-svn-fe.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-urlmatch-normalization.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-wildmatch.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential-store.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/abspath.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/advice.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/alias.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/alloc.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/archive.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/archive-tar.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/archive-zip.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/argv-array.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/attr.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/base85.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bisect.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/blob.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/branch.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bulk-checkin.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/bundle.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/cache-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/color.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/column.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/combine-diff.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/commit.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/compat/obstack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/compat/terminal.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/config.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/connect.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/connected.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/convert.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/copy.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/csum-file.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ctype.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/date.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/decorate.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-break.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-delta.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-order.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-pickaxe.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-rename.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff-delta.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff-lib.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff-no-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/dir.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/editor.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/entry.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/environment.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ewah/bitmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ewah/ewah_bitmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ewah/ewah_io.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ewah/ewah_rlw.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/exec_cmd.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/fetch-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/fsck.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gettext.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gpg-interface.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/graph.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/grep.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/hashmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/help.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/hex.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ident.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/kwset.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/levenshtein.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/line-log.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/line-range.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/list-objects.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ll-merge.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/lockfile.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/log-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/mailmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/match-trees.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/merge.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/merge-blobs.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/merge-recursive.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/mergesort.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/name-hash.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes-cache.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes-merge.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes-utils.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/object.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-bitmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-bitmap-write.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-check.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-objects.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-revindex.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-write.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pager.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/parse-options.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/parse-options-cb.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/patch-delta.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/patch-ids.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/path.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pathspec.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pkt-line.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/preload-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pretty.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/prio-queue.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/progress.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/prompt.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/quote.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/reachable.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/read-cache.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/reflog-walk.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/refs.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/remote.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/replace_object.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/rerere.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/resolve-undo.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/revision.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/run-command.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/send-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sequencer.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/server-info.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/setup.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1-array.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1-lookup.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1_file.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1_name.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/shallow.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sideband.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sigchain.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/split-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/strbuf.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/streaming.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/string-list.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/submodule.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/symlinks.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/tag.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/trace.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/trailer.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/transport.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/transport-helper.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/tree-diff.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/tree-walk.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/unpack-trees.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/url.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/urlmatch.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/usage.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/userdiff.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/utf8.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/varint.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/version.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/versioncmp.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/walker.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/wildmatch.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/wrapper.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/write_or_die.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ws.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/wt-status.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff-interface.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/zlib.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/unix-socket.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/block-sha1/sha1.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/thread-utils.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/compat/strlcpy.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xdiffi.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xprepare.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xutils.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xemit.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xmerge.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xpatience.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xhistogram.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/daemon.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/fast-import.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/http-backend.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/imap-send.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sh-i18n--envsubst.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/shell.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/show-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/upload-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/remote-testsvn.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/line_buffer.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/sliding_window.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/repo_tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/fast_export.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/svndiff.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/svndump.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential-cache.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential-cache--daemon.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/add.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/annotate.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/apply.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/archive.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/bisect--helper.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/blame.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/branch.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/bundle.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/cat-file.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-attr.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-ignore.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-mailmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/check-ref-format.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/checkout-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/checkout.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/clean.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/clone.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/column.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/commit-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/commit.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/config.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/count-objects.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/credential.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/describe.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff-files.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/diff.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fast-export.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fetch-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fetch.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fmt-merge-msg.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/for-each-ref.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/fsck.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/gc.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/get-tar-commit-id.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/grep.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/hash-object.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/help.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/index-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/init-db.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/interpret-trailers.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/log.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/ls-files.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/ls-remote.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/ls-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mailinfo.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mailsplit.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-base.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-file.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-ours.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-recursive.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/merge-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mktag.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mktree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/mv.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/name-rev.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/notes.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/pack-objects.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/pack-redundant.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/pack-refs.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/patch-id.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/prune-packed.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/prune.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/push.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/read-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/receive-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/reflog.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/remote.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/remote-ext.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/remote-fd.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/repack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/replace.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rerere.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/reset.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rev-list.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rev-parse.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/revert.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/rm.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/send-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/shortlog.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/show-branch.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/show-ref.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/stripspace.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/symbolic-ref.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/tag.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/unpack-file.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/unpack-objects.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/update-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/update-ref.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/update-server-info.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/upload-archive.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/var.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/verify-commit.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/verify-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/verify-tag.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/builtin/write-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-chmtime.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-ctype.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-config.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-date.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-delta.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-dump-cache-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-dump-split-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-genrandom.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-hashmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-index-version.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-line-buffer.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-match-trees.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-mergesort.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-mktemp.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-parse-options.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-path-utils.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-prio-queue.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-read-cache.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-regex.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-revision-walking.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-run-command.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-scrap-cache-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-sha1.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-sha1-array.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-sigchain.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-string-list.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-subprocess.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-svn-fe.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-urlmatch-normalization.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-wildmatch.c
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/config.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/config.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/config.log /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/config.log
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/config.log	2017-10-10 12:31:12.274633244 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/config.log	2017-10-10 13:03:41.962561789 +0800
@@ -1,10 +1,10 @@
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by git configure 2.3.10, which was
+It was created by git configure 2.4.0, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   $ ./configure 
 
 ## --------- ##
 ## Platform. ##
@@ -118,14 +118,14 @@
 compilation terminated.
 configure:3293: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.3.10"
-| #define PACKAGE_STRING "git 2.3.10"
+| #define PACKAGE_VERSION "2.4.0"
+| #define PACKAGE_STRING "git 2.4.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | /* end confdefs.h.  */
 | #include <ac_nonexistent.h>
 configure:3318: result: gcc -E
 configure:3338: gcc -E  conftest.c
@@ -137,14 +137,14 @@
 compilation terminated.
 configure:3352: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.3.10"
-| #define PACKAGE_STRING "git 2.3.10"
+| #define PACKAGE_VERSION "2.4.0"
+| #define PACKAGE_STRING "git 2.4.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | /* end confdefs.h.  */
 | #include <ac_nonexistent.h>
 configure:3381: checking for grep that handles long lines and -e
 configure:3439: result: /bin/grep
@@ -204,14 +204,14 @@
                      ^
 configure:3640: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.3.10"
-| #define PACKAGE_STRING "git 2.3.10"
+| #define PACKAGE_VERSION "2.4.0"
+| #define PACKAGE_STRING "git 2.4.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -315,14 +315,14 @@
 gcc: error: unrecognized command line option '-R'
 configure:4588: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.3.10"
-| #define PACKAGE_STRING "git 2.3.10"
+| #define PACKAGE_VERSION "2.4.0"
+| #define PACKAGE_STRING "git 2.4.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -374,14 +374,14 @@
 collect2: error: ld returned 1 exit status
 configure:5024: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.3.10"
-| #define PACKAGE_STRING "git 2.3.10"
+| #define PACKAGE_VERSION "2.4.0"
+| #define PACKAGE_STRING "git 2.4.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -416,14 +416,14 @@
 collect2: error: ld returned 1 exit status
 configure:5063: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.3.10"
-| #define PACKAGE_STRING "git 2.3.10"
+| #define PACKAGE_VERSION "2.4.0"
+| #define PACKAGE_STRING "git 2.4.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -458,14 +458,14 @@
 collect2: error: ld returned 1 exit status
 configure:5205: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.3.10"
-| #define PACKAGE_STRING "git 2.3.10"
+| #define PACKAGE_VERSION "2.4.0"
+| #define PACKAGE_STRING "git 2.4.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -581,14 +581,14 @@
                         ^
 configure:5867: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.3.10"
-| #define PACKAGE_STRING "git 2.3.10"
+| #define PACKAGE_VERSION "2.4.0"
+| #define PACKAGE_STRING "git 2.4.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -623,14 +623,14 @@
                                ^
 configure:5939: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.3.10"
-| #define PACKAGE_STRING "git 2.3.10"
+| #define PACKAGE_VERSION "2.4.0"
+| #define PACKAGE_STRING "git 2.4.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -662,14 +662,14 @@
             ^
 configure:5958: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.3.10"
-| #define PACKAGE_STRING "git 2.3.10"
+| #define PACKAGE_VERSION "2.4.0"
+| #define PACKAGE_STRING "git 2.4.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -732,14 +732,14 @@
                    ^
 configure:5958: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.3.10"
-| #define PACKAGE_STRING "git 2.3.10"
+| #define PACKAGE_VERSION "2.4.0"
+| #define PACKAGE_STRING "git 2.4.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -822,14 +822,14 @@
                                       ^
 configure:6018: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.3.10"
-| #define PACKAGE_STRING "git 2.3.10"
+| #define PACKAGE_VERSION "2.4.0"
+| #define PACKAGE_STRING "git 2.4.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -867,14 +867,14 @@
                               ^
 configure:6033: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.3.10"
-| #define PACKAGE_STRING "git 2.3.10"
+| #define PACKAGE_VERSION "2.4.0"
+| #define PACKAGE_STRING "git 2.4.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -956,14 +956,14 @@
 compilation terminated.
 configure:6344: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.3.10"
-| #define PACKAGE_STRING "git 2.3.10"
+| #define PACKAGE_VERSION "2.4.0"
+| #define PACKAGE_STRING "git 2.4.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1020,14 +1020,14 @@
 compilation terminated.
 configure:6344: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.3.10"
-| #define PACKAGE_STRING "git 2.3.10"
+| #define PACKAGE_VERSION "2.4.0"
+| #define PACKAGE_STRING "git 2.4.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1053,14 +1053,14 @@
 collect2: error: ld returned 1 exit status
 configure:6394: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.3.10"
-| #define PACKAGE_STRING "git 2.3.10"
+| #define PACKAGE_VERSION "2.4.0"
+| #define PACKAGE_STRING "git 2.4.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1096,14 +1096,14 @@
 collect2: error: ld returned 1 exit status
 configure:6433: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.3.10"
-| #define PACKAGE_STRING "git 2.3.10"
+| #define PACKAGE_VERSION "2.4.0"
+| #define PACKAGE_STRING "git 2.4.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1139,14 +1139,14 @@
 collect2: error: ld returned 1 exit status
 configure:6479: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.3.10"
-| #define PACKAGE_STRING "git 2.3.10"
+| #define PACKAGE_VERSION "2.4.0"
+| #define PACKAGE_STRING "git 2.4.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1211,22 +1211,22 @@
 configure:6751: checking for library containing memmem
 configure:6782: gcc -o conftest -g -O2   conftest.c  >&5
 configure:6782: $? = 0
 configure:6799: result: none required
 configure:6818: checking for strlcpy
 configure:6818: gcc -o conftest -g -O2   conftest.c  >&5
-/tmp/ccZsFJVp.o: In function `main':
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/conftest.c:56: undefined reference to `strlcpy'
+/tmp/ccxlBNo7.o: In function `main':
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/conftest.c:56: undefined reference to `strlcpy'
 collect2: error: ld returned 1 exit status
 configure:6818: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.3.10"
-| #define PACKAGE_STRING "git 2.3.10"
+| #define PACKAGE_VERSION "2.4.0"
+| #define PACKAGE_STRING "git 2.4.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1289,14 +1289,14 @@
                         ^
 configure:6888: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.3.10"
-| #define PACKAGE_STRING "git 2.3.10"
+| #define PACKAGE_VERSION "2.4.0"
+| #define PACKAGE_STRING "git 2.4.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1368,24 +1368,75 @@
 configure:7252: $? = 0
 configure:7252: result: yes
 configure:7255: checking for library containing initgroups
 configure:7286: gcc -o conftest -g -O2   conftest.c  >&5
 configure:7286: $? = 0
 configure:7303: result: none required
-configure:7363: checking for POSIX Threads with ''
-configure:7388: gcc -o conftest  -g -O2   conftest.c  >&5
-/tmp/ccPFrWQI.o: In function `main':
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/conftest.c:33: undefined reference to `pthread_key_create'
+configure:7330: checking for BSD sysctl
+configure:7355: gcc -c -g -O2  conftest.c >&5
+conftest.c: In function 'main':
+conftest.c:34:10: error: 'CTL_HW' undeclared (first use in this function)
+ mib[0] = CTL_HW;
+          ^
+conftest.c:34:10: note: each undeclared identifier is reported only once for each function it appears in
+configure:7355: $? = 1
+configure: failed program was:
+| /* confdefs.h */
+| #define PACKAGE_NAME "git"
+| #define PACKAGE_TARNAME "git"
+| #define PACKAGE_VERSION "2.4.0"
+| #define PACKAGE_STRING "git 2.4.0"
+| #define PACKAGE_BUGREPORT "git@vger.kernel.org"
+| #define PACKAGE_URL ""
+| #define STDC_HEADERS 1
+| #define HAVE_SYS_TYPES_H 1
+| #define HAVE_SYS_STAT_H 1
+| #define HAVE_STDLIB_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_MEMORY_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_INTTYPES_H 1
+| #define HAVE_STDINT_H 1
+| #define HAVE_UNISTD_H 1
+| #define HAVE_ALLOCA_H 1
+| #define HAVE_ALLOCA 1
+| #define HAVE_STRUCT_ITIMERVAL 1
+| /* end confdefs.h.  */
+| 
+| 
+| #include <stddef.h>
+| #include <sys/types.h>
+| #include <sys/sysctl.h>
+| 
+| int
+| main ()
+| {
+| 
+| int val, mib[2];
+| size_t len;
+| mib[0] = CTL_HW;
+| mib[1] = 1;
+| len = sizeof(val);
+| return sysctl(mib, 2, &val, &len, NULL, 0) ? 1 : 0;
+| 
+|   ;
+|   return 0;
+| }
+configure:7360: result: no
+configure:7404: checking for POSIX Threads with ''
+configure:7429: gcc -o conftest  -g -O2   conftest.c  >&5
+/tmp/cc4clKLv.o: In function `main':
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/conftest.c:33: undefined reference to `pthread_key_create'
 collect2: error: ld returned 1 exit status
-configure:7388: $? = 1
+configure:7429: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.3.10"
-| #define PACKAGE_STRING "git 2.3.10"
+| #define PACKAGE_VERSION "2.4.0"
+| #define PACKAGE_STRING "git 2.4.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1416,23 +1467,23 @@
 | 	retcode |= pthread_mutex_unlock(&test_mutex);
 | 	return retcode;
 | 
 |   ;
 |   return 0;
 | }
-configure:7398: result: no
-configure:7363: checking for POSIX Threads with '-mt'
-configure:7388: gcc -o conftest -mt -g -O2   conftest.c  >&5
+configure:7439: result: no
+configure:7404: checking for POSIX Threads with '-mt'
+configure:7429: gcc -o conftest -mt -g -O2   conftest.c  >&5
 gcc: error: unrecognized command line option '-mt'
-configure:7388: $? = 1
+configure:7429: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.3.10"
-| #define PACKAGE_STRING "git 2.3.10"
+| #define PACKAGE_VERSION "2.4.0"
+| #define PACKAGE_STRING "git 2.4.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1463,36 +1514,36 @@
 | 	retcode |= pthread_mutex_unlock(&test_mutex);
 | 	return retcode;
 | 
 |   ;
 |   return 0;
 | }
-configure:7398: result: no
-configure:7363: checking for POSIX Threads with '-pthread'
-configure:7388: gcc -o conftest -pthread -g -O2   conftest.c  >&5
-configure:7388: $? = 0
-configure:7389: result: yes
-configure:7655: creating ./config.status
+configure:7439: result: no
+configure:7404: checking for POSIX Threads with '-pthread'
+configure:7429: gcc -o conftest -pthread -g -O2   conftest.c  >&5
+configure:7429: $? = 0
+configure:7430: result: yes
+configure:7696: creating ./config.status
 
 ## ---------------------- ##
 ## Running config.status. ##
 ## ---------------------- ##
 
-This file was extended by git config.status 2.3.10, which was
+This file was extended by git config.status 2.4.0, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = 
   CONFIG_HEADERS  = 
   CONFIG_LINKS    = 
   CONFIG_COMMANDS = 
   $ ./config.status 
 
 on sarah-Erazer-X310
 
-config.status:799: creating config.mak.autogen
-config.status:960: executing config.mak.autogen commands
+config.status:800: creating config.mak.autogen
+config.status:961: executing config.mak.autogen commands
 
 ## ---------------- ##
 ## Cache variables. ##
 ## ---------------- ##
 
 ac_cv_c_compiler_gnu=yes
@@ -1605,13 +1656,13 @@
 AR='ar'
 ASCIIDOC=''
 CC='gcc'
 CFLAGS='-g -O2'
 CPP='gcc -E'
 CPPFLAGS=''
-DEFS='-DPACKAGE_NAME=\"git\" -DPACKAGE_TARNAME=\"git\" -DPACKAGE_VERSION=\"2.3.10\" -DPACKAGE_STRING=\"git\ 2.3.10\" -DPACKAGE_BUGREPORT=\"git@vger.kernel.org\" -DPACKAGE_URL=\"\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_ALLOCA=1 -DHAVE_STRUCT_ITIMERVAL=1'
+DEFS='-DPACKAGE_NAME=\"git\" -DPACKAGE_TARNAME=\"git\" -DPACKAGE_VERSION=\"2.4.0\" -DPACKAGE_STRING=\"git\ 2.4.0\" -DPACKAGE_BUGREPORT=\"git@vger.kernel.org\" -DPACKAGE_URL=\"\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_ALLOCA=1 -DHAVE_STRUCT_ITIMERVAL=1'
 DIFF='diff'
 ECHO_C=''
 ECHO_N='-n'
 ECHO_T=''
 EGREP='/bin/grep -E'
 EXEEXT=''
@@ -1620,16 +1671,16 @@
 LIBOBJS=''
 LIBS=''
 LTLIBOBJS=''
 OBJEXT='o'
 PACKAGE_BUGREPORT='git@vger.kernel.org'
 PACKAGE_NAME='git'
-PACKAGE_STRING='git 2.3.10'
+PACKAGE_STRING='git 2.4.0'
 PACKAGE_TARNAME='git'
 PACKAGE_URL=''
-PACKAGE_VERSION='2.3.10'
+PACKAGE_VERSION='2.4.0'
 PATH_SEPARATOR=':'
 SHELL='/bin/bash'
 TAR='tar'
 TCLTK_PATH='wish'
 ac_ct_AR='ar'
 ac_ct_CC='gcc'
@@ -1663,14 +1714,14 @@
 ## confdefs.h. ##
 ## ----------- ##
 
 /* confdefs.h */
 #define PACKAGE_NAME "git"
 #define PACKAGE_TARNAME "git"
-#define PACKAGE_VERSION "2.3.10"
-#define PACKAGE_STRING "git 2.3.10"
+#define PACKAGE_VERSION "2.4.0"
+#define PACKAGE_STRING "git 2.4.0"
 #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 #define PACKAGE_URL ""
 #define STDC_HEADERS 1
 #define HAVE_SYS_TYPES_H 1
 #define HAVE_SYS_STAT_H 1
 #define HAVE_STDLIB_H 1
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/config.mak.autogen /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/config.mak.autogen
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/config.mak.autogen	2017-10-10 12:31:12.262633245 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/config.mak.autogen	2017-10-10 13:03:41.946561790 +0800
@@ -74,9 +74,10 @@
 NO_STRTOUMAX=
 NO_SETENV=
 NO_UNSETENV=
 NO_MKDTEMP=
 NO_MKSTEMPS=
 NO_INITGROUPS=
+HAVE_BSD_SYSCTL=
 PTHREAD_CFLAGS=-pthread
 PTHREAD_LIBS=-pthread
 NO_PTHREADS=
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/config.mak.uname /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/config.mak.uname
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/config.mak.uname	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/config.mak.uname	2015-05-01 03:12:02.000000000 +0800
@@ -104,12 +104,13 @@
 	NO_MEMMEM = YesPlease
 	USE_ST_TIMESPEC = YesPlease
 	HAVE_DEV_TTY = YesPlease
 	COMPAT_OBJS += compat/precompose_utf8.o
 	BASIC_CFLAGS += -DPRECOMPOSE_UNICODE
 	BASIC_CFLAGS += -DPROTECT_HFS_DEFAULT=1
+	HAVE_BSD_SYSCTL = YesPlease
 endif
 ifeq ($(uname_S),SunOS)
 	NEEDS_SOCKET = YesPlease
 	NEEDS_NSL = YesPlease
 	SHELL_PATH = /bin/bash
 	SANE_TOOL_PATH = /usr/xpg6/bin:/usr/xpg4/bin
@@ -196,38 +197,42 @@
 		NO_UINTMAX_T = YesPlease
 		NO_STRTOUMAX = YesPlease
 	endif
 	PYTHON_PATH = /usr/local/bin/python
 	HAVE_PATHS_H = YesPlease
 	GMTIME_UNRELIABLE_ERRORS = UnfortunatelyYes
+	HAVE_BSD_SYSCTL = YesPlease
 endif
 ifeq ($(uname_S),OpenBSD)
 	NO_STRCASESTR = YesPlease
 	NO_MEMMEM = YesPlease
 	USE_ST_TIMESPEC = YesPlease
 	NEEDS_LIBICONV = YesPlease
 	BASIC_CFLAGS += -I/usr/local/include
 	BASIC_LDFLAGS += -L/usr/local/lib
 	HAVE_PATHS_H = YesPlease
+	HAVE_BSD_SYSCTL = YesPlease
 endif
 ifeq ($(uname_S),MirBSD)
 	NO_STRCASESTR = YesPlease
 	NO_MEMMEM = YesPlease
 	USE_ST_TIMESPEC = YesPlease
 	NEEDS_LIBICONV = YesPlease
 	HAVE_PATHS_H = YesPlease
+	HAVE_BSD_SYSCTL = YesPlease
 endif
 ifeq ($(uname_S),NetBSD)
 	ifeq ($(shell expr "$(uname_R)" : '[01]\.'),2)
 		NEEDS_LIBICONV = YesPlease
 	endif
 	BASIC_CFLAGS += -I/usr/pkg/include
 	BASIC_LDFLAGS += -L/usr/pkg/lib $(CC_LD_DYNPATH)/usr/pkg/lib
 	USE_ST_TIMESPEC = YesPlease
 	NO_MKSTEMPS = YesPlease
 	HAVE_PATHS_H = YesPlease
+	HAVE_BSD_SYSCTL = YesPlease
 endif
 ifeq ($(uname_S),AIX)
 	DEFAULT_PAGER = more
 	NO_STRCASESTR = YesPlease
 	NO_MEMMEM = YesPlease
 	NO_MKDTEMP = YesPlease
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/config.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/config.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/config.status /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/config.status
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/config.status	2017-10-10 12:31:12.230633246 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/config.status	2017-10-10 13:03:41.922561791 +0800
@@ -377,13 +377,13 @@
 ## Main body of $CONFIG_STATUS script. ##
 ## ----------------------------------- ##
 # Save the log message, to keep $0 and so on meaningful, and to
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by git $as_me 2.3.10, which was
+This file was extended by git $as_me 2.4.0, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
   CONFIG_HEADERS  = $CONFIG_HEADERS
   CONFIG_LINKS    = $CONFIG_LINKS
   CONFIG_COMMANDS = $CONFIG_COMMANDS
@@ -420,21 +420,21 @@
 $config_commands
 
 Report bugs to <git@vger.kernel.org>."
 
 ac_cs_config=""
 ac_cs_version="\
-git config.status 2.3.10
+git config.status 2.4.0
 configured by ./configure, generated by GNU Autoconf 2.69,
   with options \"$ac_cs_config\"
 
 Copyright (C) 2012 Free Software Foundation, Inc.
 This config.status script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it."
 
-ac_pwd='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10'
+ac_pwd='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0'
 srcdir='.'
 test -n "$AWK" || AWK=awk
 # The default lists apply if the user does not specify any file.
 ac_need_defaults=:
 while test $# != 0
 do
@@ -572,12 +572,13 @@
 NO_STRTOUMAX=
 NO_SETENV=
 NO_UNSETENV=
 NO_MKDTEMP=
 NO_MKSTEMPS=
 NO_INITGROUPS=
+HAVE_BSD_SYSCTL=
 PTHREAD_CFLAGS=-pthread
 PTHREAD_LIBS=-pthread
 NO_PTHREADS="
 
 
 # Handling of arguments.
@@ -673,15 +674,15 @@
 S["host_alias"]=""
 S["build_alias"]=""
 S["LIBS"]=""
 S["ECHO_T"]=""
 S["ECHO_N"]="-n"
 S["ECHO_C"]=""
-S["DEFS"]="-DPACKAGE_NAME=\\\"git\\\" -DPACKAGE_TARNAME=\\\"git\\\" -DPACKAGE_VERSION=\\\"2.3.10\\\" -DPACKAGE_STRING=\\\"git\\ 2.3.10\\\" -DPACKAGE_BUGREPORT=\\\"git@vger.kernel"\
-".org\\\" -DPACKAGE_URL=\\\"\\\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STR"\
-"INGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_ALLOCA=1 -DHAVE_STRUCT_ITIMERVAL=1"
+S["DEFS"]="-DPACKAGE_NAME=\\\"git\\\" -DPACKAGE_TARNAME=\\\"git\\\" -DPACKAGE_VERSION=\\\"2.4.0\\\" -DPACKAGE_STRING=\\\"git\\ 2.4.0\\\" -DPACKAGE_BUGREPORT=\\\"git@vger.kernel.o"\
+"rg\\\" -DPACKAGE_URL=\\\"\\\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRIN"\
+"GS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_ALLOCA=1 -DHAVE_STRUCT_ITIMERVAL=1"
 S["mandir"]="${datarootdir}/man"
 S["localedir"]="${datarootdir}/locale"
 S["libdir"]="${exec_prefix}/lib"
 S["psdir"]="${docdir}"
 S["pdfdir"]="${docdir}"
 S["dvidir"]="${docdir}"
@@ -700,14 +701,14 @@
 S["bindir"]="${exec_prefix}/bin"
 S["program_transform_name"]="s,x,x,"
 S["prefix"]="/usr/local"
 S["exec_prefix"]="${prefix}"
 S["PACKAGE_URL"]=""
 S["PACKAGE_BUGREPORT"]="git@vger.kernel.org"
-S["PACKAGE_STRING"]="git 2.3.10"
-S["PACKAGE_VERSION"]="2.3.10"
+S["PACKAGE_STRING"]="git 2.4.0"
+S["PACKAGE_VERSION"]="2.4.0"
 S["PACKAGE_TARNAME"]="git"
 S["PACKAGE_NAME"]="git"
 S["PATH_SEPARATOR"]=":"
 S["SHELL"]="/bin/bash"
 _ACAWK
 cat >>"$ac_tmp/subs1.awk" <<_ACAWK &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/configure /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/configure
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/configure	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/configure	2015-05-01 03:12:02.000000000 +0800
@@ -1,9 +1,9 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.69 for git 2.3.10.
+# Generated by GNU Autoconf 2.69 for git 2.4.0.
 #
 # Report bugs to <git@vger.kernel.org>.
 #
 #
 # Copyright (C) 1992-1996, 1998-2012 Free Software Foundation, Inc.
 #
@@ -577,14 +577,14 @@
 MFLAGS=
 MAKEFLAGS=
 
 # Identity of this package.
 PACKAGE_NAME='git'
 PACKAGE_TARNAME='git'
-PACKAGE_VERSION='2.3.10'
-PACKAGE_STRING='git 2.3.10'
+PACKAGE_VERSION='2.4.0'
+PACKAGE_STRING='git 2.4.0'
 PACKAGE_BUGREPORT='git@vger.kernel.org'
 PACKAGE_URL=''
 
 ac_unique_file="git.c"
 # Factoring default headers for most tests.
 ac_includes_default="\
@@ -1248,13 +1248,13 @@
 # Report the --help message.
 #
 if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures git 2.3.10 to adapt to many kinds of systems.
+\`configure' configures git 2.4.0 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
 To assign environment variables (e.g., CC, CFLAGS...), specify them as
 VAR=VALUE.  See below for descriptions of some of the useful variables.
 
@@ -1309,13 +1309,13 @@
   cat <<\_ACEOF
 _ACEOF
 fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of git 2.3.10:";;
+     short | recursive ) echo "Configuration of git 2.4.0:";;
    esac
   cat <<\_ACEOF
 
 Optional Features:
   --disable-option-checking  ignore unrecognized --enable/--with options
   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
@@ -1448,13 +1448,13 @@
   done
 fi
 
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-git configure 2.3.10
+git configure 2.4.0
 generated by GNU Autoconf 2.69
 
 Copyright (C) 2012 Free Software Foundation, Inc.
 This configure script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it.
 _ACEOF
@@ -1928,13 +1928,13 @@
 
 } # ac_fn_c_check_member
 cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by git $as_me 2.3.10, which was
+It was created by git $as_me 2.4.0, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   $ $0 $@
 
 _ACEOF
 exec 5>>config.log
@@ -7321,12 +7321,53 @@
 #
 # Define NO_MMAP if you want to avoid mmap.
 #
 # Define NO_ICONV if your libc does not properly support iconv.
 
 
+
+#
+# Define HAVE_BSD_SYSCTL=YesPlease if a BSD-compatible sysctl function is available.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for BSD sysctl" >&5
+$as_echo_n "checking for BSD sysctl... " >&6; }
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+
+#include <stddef.h>
+#include <sys/types.h>
+#include <sys/sysctl.h>
+
+int
+main ()
+{
+
+int val, mib[2];
+size_t len;
+mib[0] = CTL_HW;
+mib[1] = 1;
+len = sizeof(val);
+return sysctl(mib, 2, &val, &len, NULL, 0) ? 1 : 0;
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+	HAVE_BSD_SYSCTL=YesPlease
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+	HAVE_BSD_SYSCTL=
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+
+config_appended_defs="$config_appended_defs${newline}HAVE_BSD_SYSCTL=${HAVE_BSD_SYSCTL}"
+
 ## Other checks.
 # Define USE_PIC if you need the main git objects to be built with -fPIC
 # in order to build and link perl/Git.so.  x86-64 seems to need this.
 #
 # Define NO_SYMLINK_HEAD if you never want .git/HEAD to be a symbolic link.
 # Enable it on Windows.  By default, symrefs are still used.
@@ -8041,13 +8082,13 @@
 
 cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # Save the log message, to keep $0 and so on meaningful, and to
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by git $as_me 2.3.10, which was
+This file was extended by git $as_me 2.4.0, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
   CONFIG_HEADERS  = $CONFIG_HEADERS
   CONFIG_LINKS    = $CONFIG_LINKS
   CONFIG_COMMANDS = $CONFIG_COMMANDS
@@ -8098,13 +8139,13 @@
 Report bugs to <git@vger.kernel.org>."
 
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_config="`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`"
 ac_cs_version="\\
-git config.status 2.3.10
+git config.status 2.4.0
 configured by $0, generated by GNU Autoconf 2.69,
   with options \\"\$ac_cs_config\\"
 
 Copyright (C) 2012 Free Software Foundation, Inc.
 This config.status script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it."
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/configure.ac /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/configure.ac
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/configure.ac	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/configure.ac	2015-05-01 03:12:02.000000000 +0800
@@ -1043,12 +1043,35 @@
 #
 #
 # Define NO_MMAP if you want to avoid mmap.
 #
 # Define NO_ICONV if your libc does not properly support iconv.
 
+AC_DEFUN([BSD_SYSCTL_SRC], [
+AC_LANG_PROGRAM([[
+#include <stddef.h>
+#include <sys/types.h>
+#include <sys/sysctl.h>
+]],[[
+int val, mib[2];
+size_t len;
+mib[0] = CTL_HW;
+mib[1] = 1;
+len = sizeof(val);
+return sysctl(mib, 2, &val, &len, NULL, 0) ? 1 : 0;
+]])])
+
+#
+# Define HAVE_BSD_SYSCTL=YesPlease if a BSD-compatible sysctl function is available.
+AC_MSG_CHECKING([for BSD sysctl])
+AC_COMPILE_IFELSE([BSD_SYSCTL_SRC],
+	[AC_MSG_RESULT([yes])
+	HAVE_BSD_SYSCTL=YesPlease],
+	[AC_MSG_RESULT([no])
+	HAVE_BSD_SYSCTL=])
+GIT_CONF_SUBST([HAVE_BSD_SYSCTL])
 
 ## Other checks.
 # Define USE_PIC if you need the main git objects to be built with -fPIC
 # in order to build and link perl/Git.so.  x86-64 seems to need this.
 #
 # Define NO_SYMLINK_HEAD if you never want .git/HEAD to be a symbolic link.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/connect.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/connect.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/connect.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/connect.c	2015-05-01 03:12:02.000000000 +0800
@@ -6,13 +6,12 @@
 #include "run-command.h"
 #include "remote.h"
 #include "connect.h"
 #include "url.h"
 #include "string-list.h"
 #include "sha1-array.h"
-#include "transport.h"
 
 static char *server_capabilities;
 static const char *parse_feature_value(const char *, const char *, int *);
 
 static int check_ref(const char *name, unsigned int flags)
 {
@@ -692,14 +691,12 @@
 		char *target_host = getenv("GIT_OVERRIDE_VIRTUAL_HOST");
 		if (target_host)
 			target_host = xstrdup(target_host);
 		else
 			target_host = xstrdup(hostandport);
 
-		transport_check_allowed("git");
-
 		/* These underlying connection commands die() if they
 		 * cannot connect.
 		 */
 		if (git_use_proxy(hostandport))
 			conn = git_proxy_connect(fd, hostandport);
 		else
@@ -727,13 +724,12 @@
 		conn->in = conn->out = -1;
 		if (protocol == PROTO_SSH) {
 			const char *ssh;
 			int putty;
 			char *ssh_host = hostandport;
 			const char *port = NULL;
-			transport_check_allowed("ssh");
 			get_host_and_port(&ssh_host, &port);
 
 			if (!port)
 				port = get_port(ssh_host);
 
 			if (flags & CONNECT_DIAG_URL) {
@@ -742,12 +738,13 @@
 				printf("Diag: userandhost=%s\n", ssh_host ? ssh_host : "NULL");
 				printf("Diag: port=%s\n", port ? port : "NONE");
 				printf("Diag: path=%s\n", path ? path : "NULL");
 
 				free(hostandport);
 				free(path);
+				free(conn);
 				return NULL;
 			} else {
 				ssh = getenv("GIT_SSH_COMMAND");
 				if (ssh) {
 					conn->use_shell = 1;
 					putty = 0;
@@ -769,13 +766,12 @@
 				argv_array_push(&conn->args, ssh_host);
 			}
 		} else {
 			/* remove repo-local variables from the environment */
 			conn->env = local_repo_env;
 			conn->use_shell = 1;
-			transport_check_allowed("file");
 		}
 		argv_array_push(&conn->args, cmd.buf);
 
 		if (start_command(conn))
 			die("unable to fork");
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/connect.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/connect.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/connected.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/connected.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/connected.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/connected.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/connect.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/connect.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/contrib/completion/git-completion.bash /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/contrib/completion/git-completion.bash
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/contrib/completion/git-completion.bash	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/contrib/completion/git-completion.bash	2015-05-01 03:12:02.000000000 +0800
@@ -1419,13 +1419,13 @@
 	--simplify-merges --simplify-by-decoration
 	--left-right --notes --no-notes
 "
 # Options that go well for log and shortlog (not gitk)
 __git_log_shortlog_options="
 	--author= --committer= --grep=
-	--all-match
+	--all-match --invert-grep
 "
 
 __git_log_pretty_formats="oneline short medium full fuller email raw format:"
 __git_log_date_formats="relative iso8601 rfc2822 short local default raw"
 
 _git_log ()
@@ -2183,12 +2183,13 @@
 		pack.windowMemory
 		pager.
 		pretty.
 		pull.octopus
 		pull.twohead
 		push.default
+		push.followTags
 		rebase.autosquash
 		rebase.stat
 		receive.autogc
 		receive.denyCurrentBranch
 		receive.denyDeleteCurrent
 		receive.denyDeletes
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/contrib/hooks/multimail/README /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/contrib/hooks/multimail/README
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/contrib/hooks/multimail/README	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/contrib/hooks/multimail/README	2015-05-01 03:12:02.000000000 +0800
@@ -453,40 +453,41 @@
 consider sharing them with the community!
 
 
 Getting involved
 ----------------
 
-git-multimail is an open-source project, built by volunteers.  We
-would welcome your help!
+git-multimail is an open-source project, built by volunteers. We would
+welcome your help!
 
-The current maintainer is Michael Haggerty <mhagger@alum.mit.edu>.
+The current maintainers are Michael Haggerty <mhagger@alum.mit.edu>
+and Matthieu Moy <matthieu.moy@grenoble-inp.fr>.
 
-General discussion of git-multimail takes place on the main Git
-mailing list,
+Please note that although a copy of git-multimail is distributed in
+the "contrib" section of the main Git project, development takes place
+in a separate git-multimail repository on GitHub:
 
-    git@vger.kernel.org
+    https://github.com/git-multimail/git-multimail
 
-Please CC emails regarding git-multimail to me so that I don't
-overlook them.
+Whenever enough changes to git-multimail have accumulated, a new
+code-drop of git-multimail will be submitted for inclusion in the Git
+project.
 
-The git-multimail project itself is currently hosted on GitHub:
+We use the GitHub issue tracker to keep track of bugs and feature
+requests, and we use GitHub pull requests to exchange patches (though,
+if you prefer, you can send patches via the Git mailing list with CC
+to the maintainers). Please sign off your patches as per the Git
+project practice.
 
-    https://github.com/mhagger/git-multimail
+General discussion of git-multimail can take place on the main Git
+mailing list,
 
-We use the GitHub issue tracker to keep track of bugs and feature
-requests, and GitHub pull requests to exchange patches (though, if you
-prefer, you can send patches via the Git mailing list with cc to me).
-Please sign off your patches as per the Git project practice.
-
-Please note that although a copy of git-multimail will probably be
-distributed in the "contrib" section of the main Git project,
-development takes place in the separate git-multimail repository on
-GitHub!  (Whenever enough changes to git-multimail have accumulated, a
-new code-drop of git-multimail will be submitted for inclusion in the
-Git project.)
+    git@vger.kernel.org
+
+Please CC emails regarding git-multimail to the maintainers so that we
+don't overlook them.
 
 
 Footnotes
 ---------
 
 [1] http://www.python.org/dev/peps/pep-0394/
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/contrib/hooks/multimail/README.Git /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/contrib/hooks/multimail/README.Git
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/contrib/hooks/multimail/README.Git	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/contrib/hooks/multimail/README.Git	2015-05-01 03:12:02.000000000 +0800
@@ -1,15 +1,15 @@
 This copy of git-multimail is distributed as part of the "contrib"
 section of the Git project as a convenience to Git users.
 git-multimail is developed as an independent project at the following
 website:
 
-    https://github.com/mhagger/git-multimail
+    https://github.com/git-multimail/git-multimail
 
 The version in this directory was obtained from the upstream project
-on 2014-04-07 and consists of the "git-multimail" subdirectory from
+on 2015-04-27 and consists of the "git-multimail" subdirectory from
 revision
 
-    1b32653bafc4f902535b9fc1cd9cae911325b870
+    8c3aaafa873bf10de8dddf1d202c449b3eff3b42 refs/tags/1.0.2
 
 Please see the README file in this directory for information about how
 to report bugs or contribute to git-multimail.
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/convert.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/convert.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/convert.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/convert.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/copy.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/copy.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/copy.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/copy.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential-cache.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential-cache.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential-cache--daemon.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential-cache--daemon.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential-cache--daemon.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential-cache--daemon.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential-cache.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential-cache.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential-store.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential-store.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential-store.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential-store.c	2015-05-01 03:12:02.000000000 +0800
@@ -115,13 +115,13 @@
 	return c->username && c->password;
 }
 
 int main(int argc, char **argv)
 {
 	const char * const usage[] = {
-		"git credential-store [options] <action>",
+		"git credential-store [<options>] <action>",
 		NULL
 	};
 	const char *op;
 	struct credential c = CREDENTIAL_INIT;
 	char *file = NULL;
 	struct option options[] = {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential-store.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential-store.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/credential-store.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/credential-store.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/csum-file.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/csum-file.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/csum-file.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/csum-file.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ctype.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ctype.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ctype.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ctype.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/daemon.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/daemon.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/daemon.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/daemon.c	2015-05-01 03:12:02.000000000 +0800
@@ -40,44 +40,43 @@
 
 /* Take all paths relative to this one if non-NULL */
 static const char *base_path;
 static const char *interpolated_path;
 static int base_path_relaxed;
 
-/* Flag indicating client sent extra args. */
-static int saw_extended_args;
-
 /* If defined, ~user notation is allowed and the string is inserted
  * after ~user/.  E.g. a request to git://host/~alice/frotz would
  * go to /home/alice/pub_git/frotz with --user-path=pub_git.
  */
 static const char *user_path;
 
 /* Timeout, and initial timeout */
 static unsigned int timeout;
 static unsigned int init_timeout;
 
-static char *hostname;
-static char *canon_hostname;
-static char *ip_address;
-static char *tcp_port;
-
-static int hostname_lookup_done;
+struct hostinfo {
+	struct strbuf hostname;
+	struct strbuf canon_hostname;
+	struct strbuf ip_address;
+	struct strbuf tcp_port;
+	unsigned int hostname_lookup_done:1;
+	unsigned int saw_extended_args:1;
+};
 
-static void lookup_hostname(void);
+static void lookup_hostname(struct hostinfo *hi);
 
-static const char *get_canon_hostname(void)
+static const char *get_canon_hostname(struct hostinfo *hi)
 {
-	lookup_hostname();
-	return canon_hostname;
+	lookup_hostname(hi);
+	return hi->canon_hostname.buf;
 }
 
-static const char *get_ip_address(void)
+static const char *get_ip_address(struct hostinfo *hi)
 {
-	lookup_hostname();
-	return ip_address;
+	lookup_hostname(hi);
+	return hi->ip_address.buf;
 }
 
 static void logreport(int priority, const char *err, va_list params)
 {
 	if (log_syslog) {
 		char buf[1024];
@@ -119,53 +118,49 @@
 static void NORETURN daemon_die(const char *err, va_list params)
 {
 	logreport(LOG_ERR, err, params);
 	exit(1);
 }
 
-static void strbuf_addstr_or_null(struct strbuf *sb, const char *s)
-{
-	if (s)
-		strbuf_addstr(sb, s);
-}
-
 struct expand_path_context {
 	const char *directory;
+	struct hostinfo *hostinfo;
 };
 
 static size_t expand_path(struct strbuf *sb, const char *placeholder, void *ctx)
 {
 	struct expand_path_context *context = ctx;
+	struct hostinfo *hi = context->hostinfo;
 
 	switch (placeholder[0]) {
 	case 'H':
-		strbuf_addstr_or_null(sb, hostname);
+		strbuf_addbuf(sb, &hi->hostname);
 		return 1;
 	case 'C':
 		if (placeholder[1] == 'H') {
-			strbuf_addstr_or_null(sb, get_canon_hostname());
+			strbuf_addstr(sb, get_canon_hostname(hi));
 			return 2;
 		}
 		break;
 	case 'I':
 		if (placeholder[1] == 'P') {
-			strbuf_addstr_or_null(sb, get_ip_address());
+			strbuf_addstr(sb, get_ip_address(hi));
 			return 2;
 		}
 		break;
 	case 'P':
-		strbuf_addstr_or_null(sb, tcp_port);
+		strbuf_addbuf(sb, &hi->tcp_port);
 		return 1;
 	case 'D':
 		strbuf_addstr(sb, context->directory);
 		return 1;
 	}
 	return 0;
 }
 
-static const char *path_ok(const char *directory)
+static const char *path_ok(const char *directory, struct hostinfo *hi)
 {
 	static char rpath[PATH_MAX];
 	static char interp_path[PATH_MAX];
 	const char *path;
 	const char *dir;
 
@@ -195,17 +190,18 @@
 			loginfo("userpath <%s>, request <%s>, namlen %d, restlen %d, slash <%s>", user_path, dir, namlen, restlen, slash);
 			snprintf(rpath, PATH_MAX, "%.*s/%s%.*s",
 				 namlen, dir, user_path, restlen, slash);
 			dir = rpath;
 		}
 	}
-	else if (interpolated_path && saw_extended_args) {
+	else if (interpolated_path && hi->saw_extended_args) {
 		struct strbuf expanded_path = STRBUF_INIT;
 		struct expand_path_context context;
 
 		context.directory = directory;
+		context.hostinfo = hi;
 
 		if (*dir != '/') {
 			/* Allow only absolute */
 			logerror("'%s': Non-absolute path denied (interpolated-path active)", dir);
 			return NULL;
 		}
@@ -289,31 +285,30 @@
 	packet_write(1, "ERR %s: %s", msg, dir);
 	return -1;
 }
 
 static const char *access_hook;
 
-static int run_access_hook(struct daemon_service *service, const char *dir, const char *path)
+static int run_access_hook(struct daemon_service *service, const char *dir,
+			   const char *path, struct hostinfo *hi)
 {
 	struct child_process child = CHILD_PROCESS_INIT;
 	struct strbuf buf = STRBUF_INIT;
 	const char *argv[8];
 	const char **arg = argv;
 	char *eol;
 	int seen_errors = 0;
 
-#define STRARG(x) ((x) ? (x) : "")
 	*arg++ = access_hook;
 	*arg++ = service->name;
 	*arg++ = path;
-	*arg++ = STRARG(hostname);
-	*arg++ = STRARG(get_canon_hostname());
-	*arg++ = STRARG(get_ip_address());
-	*arg++ = STRARG(tcp_port);
+	*arg++ = hi->hostname.buf;
+	*arg++ = get_canon_hostname(hi);
+	*arg++ = get_ip_address(hi);
+	*arg++ = hi->tcp_port.buf;
 	*arg = NULL;
-#undef STRARG
 
 	child.use_shell = 1;
 	child.argv = argv;
 	child.no_stdin = 1;
 	child.no_stderr = 1;
 	child.out = -1;
@@ -351,13 +346,14 @@
 	errno = EACCES;
 	daemon_error(dir, buf.buf);
 	strbuf_release(&buf);
 	return -1;
 }
 
-static int run_service(const char *dir, struct daemon_service *service)
+static int run_service(const char *dir, struct daemon_service *service,
+		       struct hostinfo *hi)
 {
 	const char *path;
 	int enabled = service->enabled;
 	struct strbuf var = STRBUF_INIT;
 
 	loginfo("Request %s for '%s'", service->name, dir);
@@ -365,13 +361,13 @@
 	if (!enabled && !service->overridable) {
 		logerror("'%s': service not enabled.", service->name);
 		errno = EACCES;
 		return daemon_error(dir, "service not enabled");
 	}
 
-	if (!(path = path_ok(dir)))
+	if (!(path = path_ok(dir, hi)))
 		return daemon_error(dir, "no such repository");
 
 	/*
 	 * Security on the cheap.
 	 *
 	 * We want a readable HEAD, usable "objects" directory, and
@@ -401,13 +397,13 @@
 	}
 
 	/*
 	 * Optionally, a hook can choose to deny access to the
 	 * repository depending on the phase of the moon.
 	 */
-	if (access_hook && run_access_hook(service, dir, path))
+	if (access_hook && run_access_hook(service, dir, path, hi))
 		return -1;
 
 	/*
 	 * We'll ignore SIGTERM from now on, we have a
 	 * good client.
 	 */
@@ -539,13 +535,13 @@
 /*
  * Sanitize a string from the client so that it's OK to be inserted into a
  * filesystem path. Specifically, we disallow slashes, runs of "..", and
  * trailing and leading dots, which means that the client cannot escape
  * our base path via ".." traversal.
  */
-static void sanitize_client_strbuf(struct strbuf *out, const char *in)
+static void sanitize_client(struct strbuf *out, const char *in)
 {
 	for (; *in; in++) {
 		if (*in == '/')
 			continue;
 		if (*in == '.' && (!out->len || out->buf[out->len - 1] == '.'))
 			continue;
@@ -553,57 +549,45 @@
 	}
 
 	while (out->len && out->buf[out->len - 1] == '.')
 		strbuf_setlen(out, out->len - 1);
 }
 
-static char *sanitize_client(const char *in)
-{
-	struct strbuf out = STRBUF_INIT;
-	sanitize_client_strbuf(&out, in);
-	return strbuf_detach(&out, NULL);
-}
-
 /*
  * Like sanitize_client, but we also perform any canonicalization
  * to make life easier on the admin.
  */
-static char *canonicalize_client(const char *in)
+static void canonicalize_client(struct strbuf *out, const char *in)
 {
-	struct strbuf out = STRBUF_INIT;
-	sanitize_client_strbuf(&out, in);
-	strbuf_tolower(&out);
-	return strbuf_detach(&out, NULL);
+	sanitize_client(out, in);
+	strbuf_tolower(out);
 }
 
 /*
  * Read the host as supplied by the client connection.
  */
-static void parse_host_arg(char *extra_args, int buflen)
+static void parse_host_arg(struct hostinfo *hi, char *extra_args, int buflen)
 {
 	char *val;
 	int vallen;
 	char *end = extra_args + buflen;
 
 	if (extra_args < end && *extra_args) {
-		saw_extended_args = 1;
+		hi->saw_extended_args = 1;
 		if (strncasecmp("host=", extra_args, 5) == 0) {
 			val = extra_args + 5;
 			vallen = strlen(val) + 1;
 			if (*val) {
 				/* Split <host>:<port> at colon. */
 				char *host;
 				char *port;
 				parse_host_and_port(val, &host, &port);
-				if (port) {
-					free(tcp_port);
-					tcp_port = sanitize_client(port);
-				}
-				free(hostname);
-				hostname = canonicalize_client(host);
-				hostname_lookup_done = 0;
+				if (port)
+					sanitize_client(&hi->tcp_port, port);
+				canonicalize_client(&hi->hostname, host);
+				hi->hostname_lookup_done = 0;
 			}
 
 			/* On to the next one */
 			extra_args = val + vallen;
 		}
 		if (extra_args < end && *extra_args)
@@ -611,73 +595,91 @@
 	}
 }
 
 /*
  * Locate canonical hostname and its IP address.
  */
-static void lookup_hostname(void)
+static void lookup_hostname(struct hostinfo *hi)
 {
-	if (!hostname_lookup_done && hostname) {
+	if (!hi->hostname_lookup_done && hi->hostname.len) {
 #ifndef NO_IPV6
 		struct addrinfo hints;
 		struct addrinfo *ai;
 		int gai;
 		static char addrbuf[HOST_NAME_MAX + 1];
 
 		memset(&hints, 0, sizeof(hints));
 		hints.ai_flags = AI_CANONNAME;
 
-		gai = getaddrinfo(hostname, NULL, &hints, &ai);
+		gai = getaddrinfo(hi->hostname.buf, NULL, &hints, &ai);
 		if (!gai) {
 			struct sockaddr_in *sin_addr = (void *)ai->ai_addr;
 
 			inet_ntop(AF_INET, &sin_addr->sin_addr,
 				  addrbuf, sizeof(addrbuf));
-			free(ip_address);
-			ip_address = xstrdup(addrbuf);
+			strbuf_addstr(&hi->ip_address, addrbuf);
 
-			free(canon_hostname);
-			canon_hostname = ai->ai_canonname ?
-				sanitize_client(ai->ai_canonname) :
-				xstrdup(ip_address);
+			if (ai->ai_canonname)
+				sanitize_client(&hi->canon_hostname,
+						ai->ai_canonname);
+			else
+				strbuf_addbuf(&hi->canon_hostname,
+					      &hi->ip_address);
 
 			freeaddrinfo(ai);
 		}
 #else
 		struct hostent *hent;
 		struct sockaddr_in sa;
 		char **ap;
 		static char addrbuf[HOST_NAME_MAX + 1];
 
-		hent = gethostbyname(hostname);
+		hent = gethostbyname(hostname.buf);
 		if (hent) {
 			ap = hent->h_addr_list;
 			memset(&sa, 0, sizeof sa);
 			sa.sin_family = hent->h_addrtype;
 			sa.sin_port = htons(0);
 			memcpy(&sa.sin_addr, *ap, hent->h_length);
 
 			inet_ntop(hent->h_addrtype, &sa.sin_addr,
 				  addrbuf, sizeof(addrbuf));
 
-			free(canon_hostname);
-			canon_hostname = sanitize_client(hent->h_name);
-			free(ip_address);
-			ip_address = xstrdup(addrbuf);
+			sanitize_client(&hi->canon_hostname, hent->h_name);
+			strbuf_addstr(&hi->ip_address, addrbuf);
 		}
 #endif
-		hostname_lookup_done = 1;
+		hi->hostname_lookup_done = 1;
 	}
 }
 
+static void hostinfo_init(struct hostinfo *hi)
+{
+	memset(hi, 0, sizeof(*hi));
+	strbuf_init(&hi->hostname, 0);
+	strbuf_init(&hi->canon_hostname, 0);
+	strbuf_init(&hi->ip_address, 0);
+	strbuf_init(&hi->tcp_port, 0);
+}
+
+static void hostinfo_clear(struct hostinfo *hi)
+{
+	strbuf_release(&hi->hostname);
+	strbuf_release(&hi->canon_hostname);
+	strbuf_release(&hi->ip_address);
+	strbuf_release(&hi->tcp_port);
+}
 
 static int execute(void)
 {
 	char *line = packet_buffer;
 	int pktlen, len, i;
 	char *addr = getenv("REMOTE_ADDR"), *port = getenv("REMOTE_PORT");
+	struct hostinfo hi;
+
+	hostinfo_init(&hi);
 
 	if (addr)
 		loginfo("Connection from %s:%s", addr, port);
 
 	alarm(init_timeout ? init_timeout : timeout);
 	pktlen = packet_read(0, NULL, NULL, packet_buffer, sizeof(packet_buffer), 0);
@@ -690,36 +692,33 @@
 			(int) pktlen - len, line + len + 1);
 	if (len && line[len-1] == '\n') {
 		line[--len] = 0;
 		pktlen--;
 	}
 
-	free(hostname);
-	free(canon_hostname);
-	free(ip_address);
-	free(tcp_port);
-	hostname = canon_hostname = ip_address = tcp_port = NULL;
-
 	if (len != pktlen)
-		parse_host_arg(line + len + 1, pktlen - len - 1);
+		parse_host_arg(&hi, line + len + 1, pktlen - len - 1);
 
 	for (i = 0; i < ARRAY_SIZE(daemon_service); i++) {
 		struct daemon_service *s = &(daemon_service[i]);
 		const char *arg;
 
 		if (skip_prefix(line, "git-", &arg) &&
 		    skip_prefix(arg, s->name, &arg) &&
 		    *arg++ == ' ') {
 			/*
 			 * Note: The directory here is probably context sensitive,
 			 * and might depend on the actual service being performed.
 			 */
-			return run_service(arg, s);
+			int rc = run_service(arg, s, &hi);
+			hostinfo_clear(&hi);
+			return rc;
 		}
 	}
 
+	hostinfo_clear(&hi);
 	logerror("Protocol error: '%s'", line);
 	return -1;
 }
 
 static int addrcmp(const struct sockaddr_storage *s1,
     const struct sockaddr_storage *s2)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/daemon.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/daemon.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/daemon.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/daemon.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/date.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/date.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/date.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/date.c	2015-05-01 03:12:02.000000000 +0800
@@ -701,30 +701,26 @@
 			match = 1;
 		}
 
 		date += match;
 	}
 
-	/* do not use mktime(), which uses local timezone, here */
+	/* mktime uses local timezone */
 	*timestamp = tm_to_time_t(&tm);
-	if (*timestamp == -1)
-		return -1;
-
 	if (*offset == -1) {
-		time_t temp_time;
-
-		/* gmtime_r() in match_digit() may have clobbered it */
-		tm.tm_isdst = -1;
-		temp_time = mktime(&tm);
+		time_t temp_time = mktime(&tm);
 		if ((time_t)*timestamp > temp_time) {
 			*offset = ((time_t)*timestamp - temp_time) / 60;
 		} else {
 			*offset = -(int)((temp_time - (time_t)*timestamp) / 60);
 		}
 	}
 
+	if (*timestamp == -1)
+		return -1;
+
 	if (!tm_gmt)
 		*timestamp -= *offset * 60;
 	return 0; /* success */
 }
 
 int parse_expiry_date(const char *date, unsigned long *timestamp)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/date.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/date.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/date.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/date.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/decorate.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/decorate.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/decorate.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/decorate.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/.depend/archive-zip.o.d /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/.depend/archive-zip.o.d
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/.depend/archive-zip.o.d	2017-10-10 12:31:13.170633211 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/.depend/archive-zip.o.d	2017-10-10 13:03:42.858561756 +0800
@@ -1,9 +1,10 @@
 archive-zip.o: archive-zip.c cache.h git-compat-util.h compat/bswap.h \
  wildmatch.h strbuf.h hashmap.h advice.h gettext.h convert.h trace.h \
- string-list.h block-sha1/sha1.h archive.h pathspec.h streaming.h utf8.h
+ string-list.h block-sha1/sha1.h archive.h pathspec.h streaming.h utf8.h \
+ userdiff.h notes-cache.h notes.h xdiff-interface.h xdiff/xdiff.h
 
 cache.h:
 
 git-compat-util.h:
 
 compat/bswap.h:
@@ -30,6 +31,16 @@
 
 pathspec.h:
 
 streaming.h:
 
 utf8.h:
+
+userdiff.h:
+
+notes-cache.h:
+
+notes.h:
+
+xdiff-interface.h:
+
+xdiff/xdiff.h:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/.depend/connect.o.d /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/.depend/connect.o.d
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/.depend/connect.o.d	2017-10-10 12:31:16.050633106 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/.depend/connect.o.d	2017-10-10 13:03:45.738561651 +0800
@@ -1,10 +1,10 @@
 connect.o: connect.c git-compat-util.h compat/bswap.h wildmatch.h cache.h \
  strbuf.h hashmap.h advice.h gettext.h convert.h trace.h string-list.h \
  block-sha1/sha1.h pkt-line.h quote.h refs.h run-command.h argv-array.h \
- remote.h parse-options.h connect.h url.h sha1-array.h transport.h
+ remote.h parse-options.h connect.h url.h sha1-array.h
 
 git-compat-util.h:
 
 compat/bswap.h:
 
 wildmatch.h:
@@ -43,8 +43,6 @@
 
 connect.h:
 
 url.h:
 
 sha1-array.h:
-
-transport.h:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff.c	2015-05-01 03:12:02.000000000 +0800
@@ -999,15 +999,14 @@
 	memset(&xecfg, 0, sizeof(xecfg));
 	diff_words_fill(&diff_words->minus, &minus, diff_words->word_regex);
 	diff_words_fill(&diff_words->plus, &plus, diff_words->word_regex);
 	xpp.flags = 0;
 	/* as only the hunk header will be parsed, we need a 0-context */
 	xecfg.ctxlen = 0;
-	if (xdi_diff_outf(&minus, &plus, fn_out_diff_words_aux, diff_words,
-			  &xpp, &xecfg))
-		die("unable to generate word diff");
+	xdi_diff_outf(&minus, &plus, fn_out_diff_words_aux, diff_words,
+		      &xpp, &xecfg);
 	free(minus.ptr);
 	free(plus.ptr);
 	if (diff_words->current_plus != diff_words->plus.text.ptr +
 			diff_words->plus.text.size) {
 		if (color_words_output_graph_prefix(diff_words))
 			fputs(line_prefix, diff_words->opt->file);
@@ -2398,15 +2397,14 @@
 		else if (skip_prefix(diffopts, "--unified=", &v))
 			xecfg.ctxlen = strtoul(v, NULL, 10);
 		else if (skip_prefix(diffopts, "-u", &v))
 			xecfg.ctxlen = strtoul(v, NULL, 10);
 		if (o->word_diff)
 			init_diff_words_data(&ecbdata, o, one, two);
-		if (xdi_diff_outf(&mf1, &mf2, fn_out_consume, &ecbdata,
-				  &xpp, &xecfg))
-			die("unable to generate diff for %s", one->path);
+		xdi_diff_outf(&mf1, &mf2, fn_out_consume, &ecbdata,
+			      &xpp, &xecfg);
 		if (o->word_diff)
 			free_diff_words_data(&ecbdata);
 		if (textconv_one)
 			free(mf1.ptr);
 		if (textconv_two)
 			free(mf2.ptr);
@@ -2477,15 +2475,14 @@
 
 		memset(&xpp, 0, sizeof(xpp));
 		memset(&xecfg, 0, sizeof(xecfg));
 		xpp.flags = o->xdl_opts;
 		xecfg.ctxlen = o->context;
 		xecfg.interhunkctxlen = o->interhunkcontext;
-		if (xdi_diff_outf(&mf1, &mf2, diffstat_consume, diffstat,
-				  &xpp, &xecfg))
-			die("unable to generate diffstat for %s", one->path);
+		xdi_diff_outf(&mf1, &mf2, diffstat_consume, diffstat,
+			      &xpp, &xecfg);
 	}
 
 	diff_free_filespec_data(one);
 	diff_free_filespec_data(two);
 }
 
@@ -2525,15 +2522,14 @@
 		xdemitconf_t xecfg;
 
 		memset(&xpp, 0, sizeof(xpp));
 		memset(&xecfg, 0, sizeof(xecfg));
 		xecfg.ctxlen = 1; /* at least one context line */
 		xpp.flags = 0;
-		if (xdi_diff_outf(&mf1, &mf2, checkdiff_consume, &data,
-				  &xpp, &xecfg))
-			die("unable to generate checkdiff for %s", one->path);
+		xdi_diff_outf(&mf1, &mf2, checkdiff_consume, &data,
+			      &xpp, &xecfg);
 
 		if (data.ws_rule & WS_BLANK_AT_EOF) {
 			struct emit_callback ecbdata;
 			int blank_at_eof;
 
 			ecbdata.ws_rule = data.ws_rule;
@@ -4426,16 +4422,14 @@
 			continue;
 		}
 
 		xpp.flags = 0;
 		xecfg.ctxlen = 3;
 		xecfg.flags = 0;
-		if (xdi_diff_outf(&mf1, &mf2, patch_id_consume, &data,
-				  &xpp, &xecfg))
-			return error("unable to generate patch-id diff for %s",
-				     p->one->path);
+		xdi_diff_outf(&mf1, &mf2, patch_id_consume, &data,
+			      &xpp, &xecfg);
 	}
 
 	git_SHA1_Final(sha1, &ctx);
 	return 0;
 }
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-break.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-break.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-break.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-break.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-delta.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-delta.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-delta.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-delta.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-order.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-order.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-order.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-order.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-pickaxe.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-pickaxe.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-pickaxe.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-pickaxe.c	2015-05-01 03:12:02.000000000 +0800
@@ -59,14 +59,14 @@
 	memset(&xpp, 0, sizeof(xpp));
 	memset(&xecfg, 0, sizeof(xecfg));
 	ecbdata.regexp = regexp;
 	ecbdata.hit = 0;
 	xecfg.ctxlen = o->context;
 	xecfg.interhunkctxlen = o->interhunkcontext;
-	if (xdi_diff_outf(one, two, diffgrep_consume, &ecbdata, &xpp, &xecfg))
-		return 0;
+	xdi_diff_outf(one, two, diffgrep_consume, &ecbdata,
+		      &xpp, &xecfg);
 	return ecbdata.hit;
 }
 
 static unsigned int contains(mmfile_t *mf, regex_t *regexp, kwset_t kws)
 {
 	unsigned int cnt;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-pickaxe.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-pickaxe.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-pickaxe.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-pickaxe.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-rename.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-rename.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diffcore-rename.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diffcore-rename.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff-delta.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff-delta.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff-delta.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff-delta.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff-lib.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff-lib.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff-lib.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff-lib.c	2015-05-01 03:12:02.000000000 +0800
@@ -98,12 +98,13 @@
 	entries = active_nr;
 	for (i = 0; i < entries; i++) {
 		unsigned int oldmode, newmode;
 		struct cache_entry *ce = active_cache[i];
 		int changed;
 		unsigned dirty_submodule = 0;
+		const unsigned char *old_sha1, *new_sha1;
 
 		if (diff_can_quit_early(&revs->diffopt))
 			break;
 
 		if (!ce_path_match(ce, &revs->prune_data, NULL))
 			continue;
@@ -221,15 +222,18 @@
 		if (!changed && !dirty_submodule) {
 			ce_mark_uptodate(ce);
 			if (!DIFF_OPT_TST(&revs->diffopt, FIND_COPIES_HARDER))
 				continue;
 		}
 		oldmode = ce->ce_mode;
+		old_sha1 = ce->sha1;
+		new_sha1 = changed ? null_sha1 : ce->sha1;
 		diff_change(&revs->diffopt, oldmode, newmode,
-			    ce->sha1, (changed ? null_sha1 : ce->sha1),
-			    !is_null_sha1(ce->sha1), (changed ? 0 : !is_null_sha1(ce->sha1)),
+			    old_sha1, new_sha1,
+			    !is_null_sha1(old_sha1),
+			    !is_null_sha1(new_sha1),
 			    ce->name, 0, dirty_submodule);
 
 	}
 	diffcore_std(&revs->diffopt);
 	diff_flush(&revs->diffopt);
 	return 0;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff-lib.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff-lib.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff-lib.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff-lib.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff-no-index.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff-no-index.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff-no-index.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff-no-index.c	2015-05-01 03:12:02.000000000 +0800
@@ -94,33 +94,14 @@
 {
 	int mode1 = 0, mode2 = 0;
 
 	if (get_mode(name1, &mode1) || get_mode(name2, &mode2))
 		return -1;
 
-	if (mode1 && mode2 && S_ISDIR(mode1) != S_ISDIR(mode2)) {
-		struct diff_filespec *d1, *d2;
-
-		if (S_ISDIR(mode1)) {
-			/* 2 is file that is created */
-			d1 = noindex_filespec(NULL, 0);
-			d2 = noindex_filespec(name2, mode2);
-			name2 = NULL;
-			mode2 = 0;
-		} else {
-			/* 1 is file that is deleted */
-			d1 = noindex_filespec(name1, mode1);
-			d2 = noindex_filespec(NULL, 0);
-			name1 = NULL;
-			mode1 = 0;
-		}
-		/* emit that file */
-		diff_queue(&diff_queued_diff, d1, d2);
-
-		/* and then let the entire directory be created or deleted */
-	}
+	if (mode1 && mode2 && S_ISDIR(mode1) != S_ISDIR(mode2))
+		return error("file/directory conflict: %s, %s", name1, name2);
 
 	if (S_ISDIR(mode1) || S_ISDIR(mode2)) {
 		struct strbuf buffer1 = STRBUF_INIT;
 		struct strbuf buffer2 = STRBUF_INIT;
 		struct string_list p1 = STRING_LIST_INIT_DUP;
 		struct string_list p2 = STRING_LIST_INIT_DUP;
@@ -198,56 +179,18 @@
 		d2 = noindex_filespec(name2, mode2);
 		diff_queue(&diff_queued_diff, d1, d2);
 		return 0;
 	}
 }
 
-/* append basename of F to D */
-static void append_basename(struct strbuf *path, const char *dir, const char *file)
-{
-	const char *tail = strrchr(file, '/');
-
-	strbuf_addstr(path, dir);
-	while (path->len && path->buf[path->len - 1] == '/')
-		path->len--;
-	strbuf_addch(path, '/');
-	strbuf_addstr(path, tail ? tail + 1 : file);
-}
-
-/*
- * DWIM "diff D F" into "diff D/F F" and "diff F D" into "diff F D/F"
- * Note that we append the basename of F to D/, so "diff a/b/file D"
- * becomes "diff a/b/file D/file", not "diff a/b/file D/a/b/file".
- */
-static void fixup_paths(const char **path, struct strbuf *replacement)
-{
-	unsigned int isdir0, isdir1;
-
-	if (path[0] == file_from_standard_input ||
-	    path[1] == file_from_standard_input)
-		return;
-	isdir0 = is_directory(path[0]);
-	isdir1 = is_directory(path[1]);
-	if (isdir0 == isdir1)
-		return;
-	if (isdir0) {
-		append_basename(replacement, path[0], path[1]);
-		path[0] = replacement->buf;
-	} else {
-		append_basename(replacement, path[1], path[0]);
-		path[1] = replacement->buf;
-	}
-}
-
 void diff_no_index(struct rev_info *revs,
 		   int argc, const char **argv,
 		   const char *prefix)
 {
 	int i, prefixlen;
 	const char *paths[2];
-	struct strbuf replacement = STRBUF_INIT;
 
 	diff_setup(&revs->diffopt);
 	for (i = 1; i < argc - 2; ) {
 		int j;
 		if (!strcmp(argv[i], "--no-index"))
 			i++;
@@ -271,15 +214,12 @@
 			 */
 			p = file_from_standard_input;
 		else if (prefixlen)
 			p = xstrdup(prefix_filename(prefix, prefixlen, p));
 		paths[i] = p;
 	}
-
-	fixup_paths(paths, &replacement);
-
 	revs->diffopt.skip_stat_unmatch = 1;
 	if (!revs->diffopt.output_format)
 		revs->diffopt.output_format = DIFF_FORMAT_PATCH;
 
 	DIFF_OPT_SET(&revs->diffopt, NO_INDEX);
 
@@ -292,14 +232,12 @@
 	if (queue_diff(&revs->diffopt, paths[0], paths[1]))
 		exit(1);
 	diff_set_mnemonic_prefix(&revs->diffopt, "1/", "2/");
 	diffcore_std(&revs->diffopt);
 	diff_flush(&revs->diffopt);
 
-	strbuf_release(&replacement);
-
 	/*
 	 * The return code for --no-index imitates diff(1):
 	 * 0 = no changes, 1 = changes, else error
 	 */
 	exit(diff_result_code(&revs->diffopt, 0));
 }
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff-no-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff-no-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff-no-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff-no-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/diff.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/diff.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/dir.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/dir.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/dir.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/dir.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/blame-options.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/blame-options.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/blame-options.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/blame-options.txt	2015-05-01 03:12:02.000000000 +0800
@@ -1,19 +1,19 @@
 -b::
 	Show blank SHA-1 for boundary commits.  This can also
 	be controlled via the `blame.blankboundary` config option.
 
 --root::
 	Do not treat root commits as boundaries.  This can also be
-	controlled via the `blame.showroot` config option.
+	controlled via the `blame.showRoot` config option.
 
 --show-stats::
 	Include additional statistics at the end of blame output.
 
 -L <start>,<end>::
--L :<funcname>::
+-L :<regex>::
 	Annotate only the given line range. May be specified multiple times.
 	Overlapping ranges are allowed.
 +
 <start> and <end> are optional. ``-L <start>'' or ``-L <start>,'' spans from
 <start> to end of file. ``-L ,<end>'' spans from start of file to <end>.
 +
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/CodingGuidelines /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/CodingGuidelines
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/CodingGuidelines	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/CodingGuidelines	2015-05-01 03:12:02.000000000 +0800
@@ -325,15 +325,20 @@
    string), several arrays with the ALLOC_GROW() macro, a
    string_list for sorted string lists, a hash map (mapping struct
    objects) named "struct decorate", amongst other things.
 
  - When you come up with an API, document it.
 
- - The first #include in C files, except in platform specific
-   compat/ implementations, should be git-compat-util.h or another
-   header file that includes it, such as cache.h or builtin.h.
+ - The first #include in C files, except in platform specific compat/
+   implementations, must be either "git-compat-util.h", "cache.h" or
+   "builtin.h".  You do not have to include more than one of these.
+
+ - A C file must directly include the header files that declare the
+   functions and the types it uses, except for the functions and types
+   that are made available to it by including one of the header files
+   it must include by the previous rule.
 
  - If you are planning a new command, consider writing it in shell
    or perl first, so that changes in semantics can be easily
    changed and discussed.  Many Git commands started out like
    that, and a few are still scripts.
 
@@ -461,12 +466,16 @@
 
  Placeholders are spelled in lowercase and enclosed in angle brackets:
    <file>
    --sort=<key>
    --abbrev[=<n>]
 
+ If a placeholder has multiple words, they are separated by dashes:
+   <new-branch-name>
+   --template=<template-directory>
+
  Possibility of multiple occurrences is indicated by three dots:
    <file>...
    (One or more of <file>.)
 
  Optional parts are enclosed in square brackets:
    [<extra>]
@@ -477,18 +486,18 @@
    brackets.)
 
    [<patch>...]
    (Zero or more of <patch>.  Note that the dots are inside, not
    outside the brackets.)
 
- Multiple alternatives are indicated with vertical bar:
+ Multiple alternatives are indicated with vertical bars:
    [-q | --quiet]
    [--utf8 | --no-utf8]
 
  Parentheses are used for grouping:
-   [(<rev>|<range>)...]
+   [(<rev> | <range>)...]
    (Any number of either <rev> or <range>.  Parens are needed to make
    it clear that "..." pertains to both <rev> and <range>.)
 
    [(-p <parent>)...]
    (Any number of option -p, each with one <parent> argument.)
 
@@ -514,13 +523,13 @@
 
  Literal examples (e.g. use of command-line options, command names, and
  configuration variables) are typeset in monospace, and if you can use
  `backticks around word phrases`, do so.
    `--pretty=oneline`
    `git rev-list`
-   `remote.pushdefault`
+   `remote.pushDefault`
 
  Word phrases enclosed in `backtick characters` are rendered literally
  and will not be further expanded. The use of `backticks` to achieve the
  previous rule means that literal examples should not use AsciiDoc
  escapes.
    Correct:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/config.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/config.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/config.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/config.txt	2015-05-01 03:12:02.000000000 +0800
@@ -151,15 +151,14 @@
        colors (at most two) and attributes (at most one), separated
        by spaces.  The colors accepted are `normal`, `black`,
        `red`, `green`, `yellow`, `blue`, `magenta`, `cyan` and
        `white`; the attributes are `bold`, `dim`, `ul`, `blink` and
        `reverse`.  The first color given is the foreground; the
        second is the background.  The position of the attribute, if
-       any, doesn't matter.  Attributes may be turned off
-       specifically by prefixing them with `no` (e.g., `noreverse`,
-	`noul`, etc).
+       any, doesn't matter. Attributes may be turned off specifically
+       by prefixing them with `no` (e.g., `noreverse`, `noul`, etc).
 +
 Colors (foreground and background) may also be given as numbers between
 0 and 255; these use ANSI 256-color mode (but note that not all
 terminals may support this).  If your terminal supports it, you may also
 specify 24-bit RGB values as hex, like `#ff0ab3`.
 +
@@ -267,27 +266,27 @@
 Git for Windows or Eclipse).
 In such a case it may be necessary to set this variable to 'false'.
 See linkgit:git-update-index[1].
 +
 The default is true (when core.filemode is not specified in the config file).
 
-core.ignorecase::
+core.ignoreCase::
 	If true, this option enables various workarounds to enable
 	Git to work better on filesystems that are not case sensitive,
 	like FAT. For example, if a directory listing finds
 	"makefile" when Git expects "Makefile", Git will assume
 	it is really the same file, and continue to remember it as
 	"Makefile".
 +
 The default is false, except linkgit:git-clone[1] or linkgit:git-init[1]
-will probe and set core.ignorecase true if appropriate when the repository
+will probe and set core.ignoreCase true if appropriate when the repository
 is created.
 
-core.precomposeunicode::
+core.precomposeUnicode::
 	This option is only used by Mac OS implementation of Git.
-	When core.precomposeunicode=true, Git reverts the unicode decomposition
+	When core.precomposeUnicode=true, Git reverts the unicode decomposition
 	of filenames done by Mac OS. This is useful when sharing a repository
 	between Mac OS and Linux or Windows.
 	(Git for Windows 1.7.10 or higher is needed, or Git under cygwin 1.7).
 	When false, file names are handled fully transparent by Git,
 	which is backward compatible with older versions of Git.
 
@@ -306,19 +305,19 @@
 	If false, the ctime differences between the index and the
 	working tree are ignored; useful when the inode change time
 	is regularly modified by something outside Git (file system
 	crawlers and some backup systems).
 	See linkgit:git-update-index[1]. True by default.
 
-core.checkstat::
+core.checkStat::
 	Determines which stat fields to match between the index
 	and work tree. The user can set this to 'default' or
 	'minimal'. Default (or explicitly 'default'), is to check
 	all fields, including the sub-second part of mtime and ctime.
 
-core.quotepath::
+core.quotePath::
 	The commands that output paths (e.g. 'ls-files',
 	'diff'), when not given the `-z` option, will quote
 	"unusual" characters in the pathname by enclosing the
 	pathname in a double-quote pair and with backslashes the
 	same way strings in C source code are quoted.  If this
 	variable is set to false, the bytes higher than 0x80 are
@@ -516,15 +515,15 @@
 
 core.compression::
 	An integer -1..9, indicating a default compression level.
 	-1 is the zlib default. 0 means no compression,
 	and 1..9 are various speed/size tradeoffs, 9 being slowest.
 	If set, this provides a default to other compression variables,
-	such as 'core.loosecompression' and 'pack.compression'.
+	such as 'core.looseCompression' and 'pack.compression'.
 
-core.loosecompression::
+core.looseCompression::
 	An integer -1..9, indicating the compression level for objects that
 	are not in a pack file. -1 is the zlib default. 0 means no
 	compression, and 1..9 are various speed/size tradeoffs, 9 being
 	slowest.  If not set,  defaults to core.compression.  If that is
 	not set,  defaults to 1 (best speed).
 
@@ -579,45 +578,45 @@
 Default is 512 MiB on all platforms.  This should be reasonable
 for most projects as source code and other text files can still
 be delta compressed, but larger binary media files won't be.
 +
 Common unit suffixes of 'k', 'm', or 'g' are supported.
 
-core.excludesfile::
+core.excludesFile::
 	In addition to '.gitignore' (per-directory) and
 	'.git/info/exclude', Git looks into this file for patterns
 	of files which are not meant to be tracked.  "`~/`" is expanded
 	to the value of `$HOME` and "`~user/`" to the specified user's
 	home directory. Its default value is $XDG_CONFIG_HOME/git/ignore.
 	If $XDG_CONFIG_HOME is either not set or empty, $HOME/.config/git/ignore
 	is used instead. See linkgit:gitignore[5].
 
-core.askpass::
+core.askPass::
 	Some commands (e.g. svn and http interfaces) that interactively
 	ask for a password can be told to use an external program given
 	via the value of this variable. Can be overridden by the 'GIT_ASKPASS'
 	environment variable. If not set, fall back to the value of the
 	'SSH_ASKPASS' environment variable or, failing that, a simple password
 	prompt. The external program shall be given a suitable prompt as
 	command-line argument and write the password on its STDOUT.
 
-core.attributesfile::
+core.attributesFile::
 	In addition to '.gitattributes' (per-directory) and
 	'.git/info/attributes', Git looks into this file for attributes
 	(see linkgit:gitattributes[5]). Path expansions are made the same
-	way as for `core.excludesfile`. Its default value is
+	way as for `core.excludesFile`. Its default value is
 	$XDG_CONFIG_HOME/git/attributes. If $XDG_CONFIG_HOME is either not
 	set or empty, $HOME/.config/git/attributes is used instead.
 
 core.editor::
 	Commands such as `commit` and `tag` that lets you edit
 	messages by launching an editor uses the value of this
 	variable when it is set, and the environment variable
 	`GIT_EDITOR` is not set.  See linkgit:git-var[1].
 
-core.commentchar::
+core.commentChar::
 	Commands such as `commit` and `tag` that lets you edit
 	messages consider a line that begins with this character
 	commented, and removes them after the editor returns
 	(default '#').
 +
 If set to "auto", `git-commit` would select a character that is not
@@ -680,21 +679,21 @@
   does not trigger if the character before such a carriage-return
   is not a whitespace (not enabled by default).
 * `tabwidth=<n>` tells how many character positions a tab occupies; this
   is relevant for `indent-with-non-tab` and when Git fixes `tab-in-indent`
   errors. The default tab width is 8. Allowed values are 1 to 63.
 
-core.fsyncobjectfiles::
+core.fsyncObjectFiles::
 	This boolean will enable 'fsync()' when writing object files.
 +
 This is a total waste of time and effort on a filesystem that orders
 data writes properly, but can be useful for filesystems that do not use
 journalling (traditional UNIX filesystems) or that only journal metadata
 and not file contents (OS X's HFS+, or Linux ext3 with "data=writeback").
 
-core.preloadindex::
+core.preloadIndex::
 	Enable parallel index preload for operations like 'git diff'
 +
 This can speed up operations like 'git diff' and 'git status' especially
 on filesystems like NFS that have weak caching semantics and thus
 relatively high IO latencies.  When enabled, Git will do the
 index comparison to the filesystem data in parallel, allowing
@@ -759,68 +758,68 @@
 	If true, git-am will call git-mailsplit for patches in mbox format
 	with parameter '--keep-cr'. In this case git-mailsplit will
 	not remove `\r` from lines ending with `\r\n`. Can be overridden
 	by giving '--no-keep-cr' from the command line.
 	See linkgit:git-am[1], linkgit:git-mailsplit[1].
 
-apply.ignorewhitespace::
+apply.ignoreWhitespace::
 	When set to 'change', tells 'git apply' to ignore changes in
 	whitespace, in the same way as the '--ignore-space-change'
 	option.
 	When set to one of: no, none, never, false tells 'git apply' to
 	respect all whitespace differences.
 	See linkgit:git-apply[1].
 
 apply.whitespace::
 	Tells 'git apply' how to handle whitespaces, in the same way
 	as the '--whitespace' option. See linkgit:git-apply[1].
 
-branch.autosetupmerge::
+branch.autoSetupMerge::
 	Tells 'git branch' and 'git checkout' to set up new branches
 	so that linkgit:git-pull[1] will appropriately merge from the
 	starting point branch. Note that even if this option is not set,
 	this behavior can be chosen per-branch using the `--track`
 	and `--no-track` options. The valid settings are: `false` -- no
 	automatic setup is done; `true` -- automatic setup is done when the
 	starting point is a remote-tracking branch; `always` --
 	automatic setup is done when the starting point is either a
 	local branch or remote-tracking
 	branch. This option defaults to true.
 
-branch.autosetuprebase::
+branch.autoSetupRebase::
 	When a new branch is created with 'git branch' or 'git checkout'
 	that tracks another branch, this variable tells Git to set
 	up pull to rebase instead of merge (see "branch.<name>.rebase").
 	When `never`, rebase is never automatically set to true.
 	When `local`, rebase is set to true for tracked branches of
 	other local branches.
 	When `remote`, rebase is set to true for tracked branches of
 	remote-tracking branches.
 	When `always`, rebase will be set to true for all tracking
 	branches.
-	See "branch.autosetupmerge" for details on how to set up a
+	See "branch.autoSetupMerge" for details on how to set up a
 	branch to track another branch.
 	This option defaults to never.
 
 branch.<name>.remote::
 	When on branch <name>, it tells 'git fetch' and 'git push'
 	which remote to fetch from/push to.  The remote to push to
-	may be overridden with `remote.pushdefault` (for all branches).
+	may be overridden with `remote.pushDefault` (for all branches).
 	The remote to push to, for the current branch, may be further
-	overridden by `branch.<name>.pushremote`.  If no remote is
+	overridden by `branch.<name>.pushRemote`.  If no remote is
 	configured, or if you are not on any branch, it defaults to
-	`origin` for fetching and `remote.pushdefault` for pushing.
+	`origin` for fetching and `remote.pushDefault` for pushing.
 	Additionally, `.` (a period) is the current local repository
 	(a dot-repository), see `branch.<name>.merge`'s final note below.
 
-branch.<name>.pushremote::
+branch.<name>.pushRemote::
 	When on branch <name>, it overrides `branch.<name>.remote` for
-	pushing.  It also overrides `remote.pushdefault` for pushing
+	pushing.  It also overrides `remote.pushDefault` for pushing
 	from branch <name>.  When you pull from one place (e.g. your
 	upstream) and push to another place (e.g. your own publishing
-	repository), you would want to set `remote.pushdefault` to
+	repository), you would want to set `remote.pushDefault` to
 	specify the remote to push to for all branches, and use this
 	option to override it for a specific branch.
 
 branch.<name>.merge::
 	Defines, together with branch.<name>.remote, the upstream branch
 	for the given branch. It tells 'git fetch'/'git pull'/'git rebase' which
@@ -836,13 +835,13 @@
 	Specify multiple values to get an octopus merge.
 	If you wish to setup 'git pull' so that it merges into <name> from
 	another branch in the local repository, you can point
 	branch.<name>.merge to the desired branch, and use the relative path
 	setting `.` (a period) for branch.<name>.remote.
 
-branch.<name>.mergeoptions::
+branch.<name>.mergeOptions::
 	Sets default options for merging into branch <name>. The syntax and
 	supported options are the same as those of linkgit:git-merge[1], but
 	option values containing whitespace characters are currently not
 	supported.
 
 branch.<name>.rebase::
@@ -962,13 +961,13 @@
 	interactive commands.
 
 color.pager::
 	A boolean to enable/disable colored output when the pager is in
 	use (default is true).
 
-color.showbranch::
+color.showBranch::
 	A boolean to enable/disable color in the output of
 	linkgit:git-show-branch[1]. May be set to `always`,
 	`false` (or `never`) or `auto` (or `true`), in which case colors are used
 	only when the output is to a terminal. Defaults to false.
 
 color.status::
@@ -1062,13 +1061,13 @@
 	default can be useful when you always want to keep lines that begin
 	with comment character `#` in your log message, in which case you
 	would do `git config commit.cleanup whitespace` (note that you will
 	have to remove the help lines that begin with `#` in the commit log
 	template yourself, if you do this).
 
-commit.gpgsign::
+commit.gpgSign::
 
 	A boolean to specify whether all commits should be GPG signed.
 	Use of this option when doing operations such as rebase can
 	result in a large number of commits being signed. It may be
 	convenient to use an agent to avoid typing your GPG passphrase
 	several times.
@@ -1175,23 +1174,23 @@
 format.to::
 format.cc::
 	Additional recipients to include in a patch to be submitted
 	by mail.  See the --to and --cc options in
 	linkgit:git-format-patch[1].
 
-format.subjectprefix::
+format.subjectPrefix::
 	The default for format-patch is to output files with the '[PATCH]'
 	subject prefix. Use this variable to change that prefix.
 
 format.signature::
 	The default for format-patch is to output a signature containing
 	the Git version number. Use this variable to change that default.
 	Set this variable to the empty string ("") to suppress
 	signature generation.
 
-format.signaturefile::
+format.signatureFile::
 	Works just like format.signature except the contents of the
 	file specified by this variable will be used as the signature.
 
 format.suffix::
 	The default for format-patch is to output files with the suffix
 	`.patch`. Use this variable to change that suffix (make sure to
@@ -1209,13 +1208,13 @@
 	where the head is chosen from the cover letter, the
 	`--in-reply-to`, and the first patch mail, in this order.
 	`deep` threading makes every mail a reply to the previous one.
 	A true boolean value is the same as `shallow`, and a false
 	value disables threading.
 
-format.signoff::
+format.signOff::
 	A boolean value which lets you enable the `-s/--signoff` option of
 	format-patch by default. *Note:* Adding the Signed-off-by: line to a
 	patch should be a conscious act and means that you certify you have
 	the rights to submit this work under the same open source license.
 	Please see the 'SubmittingPatches' document for further discussion.
 
@@ -1248,125 +1247,125 @@
 	When there are approximately more than this many loose
 	objects in the repository, `git gc --auto` will pack them.
 	Some Porcelain commands use this command to perform a
 	light-weight garbage collection from time to time.  The
 	default value is 6700.  Setting this to 0 disables it.
 
-gc.autopacklimit::
+gc.autoPackLimit::
 	When there are more than this many packs that are not
 	marked with `*.keep` file in the repository, `git gc
 	--auto` consolidates them into one larger pack.  The
 	default	value is 50.  Setting this to 0 disables it.
 
-gc.autodetach::
+gc.autoDetach::
 	Make `git gc --auto` return immediately and run in background
 	if the system supports it. Default is true.
 
-gc.packrefs::
+gc.packRefs::
 	Running `git pack-refs` in a repository renders it
 	unclonable by Git versions prior to 1.5.1.2 over dumb
 	transports such as HTTP.  This variable determines whether
 	'git gc' runs `git pack-refs`. This can be set to `notbare`
 	to enable it within all non-bare repos or it can be set to a
 	boolean value.  The default is `true`.
 
-gc.pruneexpire::
+gc.pruneExpire::
 	When 'git gc' is run, it will call 'prune --expire 2.weeks.ago'.
 	Override the grace period with this config variable.  The value
 	"now" may be used to disable this  grace period and always prune
 	unreachable objects immediately.
 
-gc.reflogexpire::
-gc.<pattern>.reflogexpire::
+gc.reflogExpire::
+gc.<pattern>.reflogExpire::
 	'git reflog expire' removes reflog entries older than
 	this time; defaults to 90 days.  With "<pattern>" (e.g.
 	"refs/stash") in the middle the setting applies only to
 	the refs that match the <pattern>.
 
-gc.reflogexpireunreachable::
-gc.<ref>.reflogexpireunreachable::
+gc.reflogExpireUnreachable::
+gc.<ref>.reflogExpireUnreachable::
 	'git reflog expire' removes reflog entries older than
 	this time and are not reachable from the current tip;
 	defaults to 30 days.  With "<pattern>" (e.g. "refs/stash")
 	in the middle, the setting applies only to the refs that
 	match the <pattern>.
 
-gc.rerereresolved::
+gc.rerereResolved::
 	Records of conflicted merge you resolved earlier are
 	kept for this many days when 'git rerere gc' is run.
 	The default is 60 days.  See linkgit:git-rerere[1].
 
-gc.rerereunresolved::
+gc.rerereUnresolved::
 	Records of conflicted merge you have not resolved are
 	kept for this many days when 'git rerere gc' is run.
 	The default is 15 days.  See linkgit:git-rerere[1].
 
-gitcvs.commitmsgannotation::
+gitcvs.commitMsgAnnotation::
 	Append this string to each commit message. Set to empty string
 	to disable this feature. Defaults to "via git-CVS emulator".
 
 gitcvs.enabled::
 	Whether the CVS server interface is enabled for this repository.
 	See linkgit:git-cvsserver[1].
 
-gitcvs.logfile::
+gitcvs.logFile::
 	Path to a log file where the CVS server interface well... logs
 	various stuff. See linkgit:git-cvsserver[1].
 
 gitcvs.usecrlfattr::
 	If true, the server will look up the end-of-line conversion
 	attributes for files to determine the '-k' modes to use. If
 	the attributes force Git to treat a file as text,
 	the '-k' mode will be left blank so CVS clients will
 	treat it as text. If they suppress text conversion, the file
 	will be set with '-kb' mode, which suppresses any newline munging
 	the client might otherwise do. If the attributes do not allow
-	the file type to be determined, then 'gitcvs.allbinary' is
+	the file type to be determined, then 'gitcvs.allBinary' is
 	used. See linkgit:gitattributes[5].
 
-gitcvs.allbinary::
+gitcvs.allBinary::
 	This is used if 'gitcvs.usecrlfattr' does not resolve
 	the correct '-kb' mode to use. If true, all
 	unresolved files are sent to the client in
 	mode '-kb'. This causes the client to treat them
 	as binary files, which suppresses any newline munging it
 	otherwise might do. Alternatively, if it is set to "guess",
 	then the contents of the file are examined to decide if
 	it is binary, similar to 'core.autocrlf'.
 
-gitcvs.dbname::
+gitcvs.dbName::
 	Database used by git-cvsserver to cache revision information
 	derived from the Git repository. The exact meaning depends on the
 	used database driver, for SQLite (which is the default driver) this
 	is a filename. Supports variable substitution (see
 	linkgit:git-cvsserver[1] for details). May not contain semicolons (`;`).
 	Default: '%Ggitcvs.%m.sqlite'
 
-gitcvs.dbdriver::
+gitcvs.dbDriver::
 	Used Perl DBI driver. You can specify any available driver
 	for this here, but it might not work. git-cvsserver is tested
 	with 'DBD::SQLite', reported to work with 'DBD::Pg', and
 	reported *not* to work with 'DBD::mysql'. Experimental feature.
 	May not contain double colons (`:`). Default: 'SQLite'.
 	See linkgit:git-cvsserver[1].
 
-gitcvs.dbuser, gitcvs.dbpass::
-	Database user and password. Only useful if setting 'gitcvs.dbdriver',
+gitcvs.dbUser, gitcvs.dbPass::
+	Database user and password. Only useful if setting 'gitcvs.dbDriver',
 	since SQLite has no concept of database users and/or passwords.
-	'gitcvs.dbuser' supports variable substitution (see
+	'gitcvs.dbUser' supports variable substitution (see
 	linkgit:git-cvsserver[1] for details).
 
 gitcvs.dbTableNamePrefix::
 	Database table name prefix.  Prepended to the names of any
 	database tables used, allowing a single database to be used
 	for several repositories.  Supports variable substitution (see
 	linkgit:git-cvsserver[1] for details).  Any non-alphabetic
 	characters will be replaced with underscores.
 
 All gitcvs variables except for 'gitcvs.usecrlfattr' and
-'gitcvs.allbinary' can also be specified as
+'gitcvs.allBinary' can also be specified as
 'gitcvs.<access_method>.<varname>' (where 'access_method'
 is one of "ext" and "pserver") to make them apply only for the given
 access method.
 
 gitweb.category::
 gitweb.description::
@@ -1378,13 +1377,13 @@
 gitweb.blame::
 gitweb.grep::
 gitweb.highlight::
 gitweb.patches::
 gitweb.pickaxe::
 gitweb.remote_heads::
-gitweb.showsizes::
+gitweb.showSizes::
 gitweb.snapshot::
 	See linkgit:gitweb.conf[5] for description.
 
 grep.lineNumber::
 	If set to true, enable '-n' option by default.
 
@@ -1407,60 +1406,60 @@
 	program is expected to signal a good signature by exiting with
 	code 0, and to generate an ASCII-armored detached signature, the
 	standard input of "gpg -bsau $key" is fed with the contents to be
 	signed, and the program is expected to send the result to its
 	standard output.
 
-gui.commitmsgwidth::
+gui.commitMsgWidth::
 	Defines how wide the commit message window is in the
 	linkgit:git-gui[1]. "75" is the default.
 
-gui.diffcontext::
+gui.diffContext::
 	Specifies how many context lines should be used in calls to diff
 	made by the linkgit:git-gui[1]. The default is "5".
 
-gui.displayuntracked::
+gui.displayUntracked::
 	Determines if linkgit::git-gui[1] shows untracked files
 	in the file list. The default is "true".
 
 gui.encoding::
 	Specifies the default encoding to use for displaying of
 	file contents in linkgit:git-gui[1] and linkgit:gitk[1].
 	It can be overridden by setting the 'encoding' attribute
 	for relevant files (see linkgit:gitattributes[5]).
 	If this option is not set, the tools default to the
 	locale encoding.
 
-gui.matchtrackingbranch::
+gui.matchTrackingBranch::
 	Determines if new branches created with linkgit:git-gui[1] should
 	default to tracking remote branches with matching names or
 	not. Default: "false".
 
-gui.newbranchtemplate::
+gui.newBranchTemplate::
 	Is used as suggested name when creating new branches using the
 	linkgit:git-gui[1].
 
-gui.pruneduringfetch::
+gui.pruneDuringFetch::
 	"true" if linkgit:git-gui[1] should prune remote-tracking branches when
 	performing a fetch. The default value is "false".
 
 gui.trustmtime::
 	Determines if linkgit:git-gui[1] should trust the file modification
 	timestamp or not. By default the timestamps are not trusted.
 
-gui.spellingdictionary::
+gui.spellingDictionary::
 	Specifies the dictionary used for spell checking commit messages in
 	the linkgit:git-gui[1]. When set to "none" spell checking is turned
 	off.
 
-gui.fastcopyblame::
+gui.fastCopyBlame::
 	If true, 'git gui blame' uses `-C` instead of `-C -C` for original
 	location detection. It makes blame significantly faster on huge
 	repositories at the expense of less thorough copy detection.
 
-gui.copyblamethreshold::
+gui.copyBlameThreshold::
 	Specifies the threshold to use in 'git gui blame' original location
 	detection, measured in alphanumeric characters. See the
 	linkgit:git-blame[1] manual for more information on copy detection.
 
 gui.blamehistoryctx::
 	Specifies the radius of history context in days to show in
@@ -1474,95 +1473,95 @@
 	mandatory for every tool. The command is executed from the root of
 	the working directory, and in the environment it receives the name of
 	the tool as 'GIT_GUITOOL', the name of the currently selected file as
 	'FILENAME', and the name of the current branch as 'CUR_BRANCH' (if
 	the head is detached, 'CUR_BRANCH' is empty).
 
-guitool.<name>.needsfile::
+guitool.<name>.needsFile::
 	Run the tool only if a diff is selected in the GUI. It guarantees
 	that 'FILENAME' is not empty.
 
-guitool.<name>.noconsole::
+guitool.<name>.noConsole::
 	Run the command silently, without creating a window to display its
 	output.
 
-guitool.<name>.norescan::
+guitool.<name>.noRescan::
 	Don't rescan the working directory for changes after the tool
 	finishes execution.
 
 guitool.<name>.confirm::
 	Show a confirmation dialog before actually running the tool.
 
-guitool.<name>.argprompt::
+guitool.<name>.argPrompt::
 	Request a string argument from the user, and pass it to the tool
 	through the 'ARGS' environment variable. Since requesting an
 	argument implies confirmation, the 'confirm' option has no effect
 	if this is enabled. If the option is set to 'true', 'yes', or '1',
 	the dialog uses a built-in generic prompt; otherwise the exact
 	value of the variable is used.
 
-guitool.<name>.revprompt::
+guitool.<name>.revPrompt::
 	Request a single valid revision from the user, and set the
 	'REVISION' environment variable. In other aspects this option
-	is similar to 'argprompt', and can be used together with it.
+	is similar to 'argPrompt', and can be used together with it.
 
-guitool.<name>.revunmerged::
-	Show only unmerged branches in the 'revprompt' subdialog.
+guitool.<name>.revUnmerged::
+	Show only unmerged branches in the 'revPrompt' subdialog.
 	This is useful for tools similar to merge or rebase, but not
 	for things like checkout or reset.
 
 guitool.<name>.title::
 	Specifies the title to use for the prompt dialog. The default
 	is the tool name.
 
 guitool.<name>.prompt::
 	Specifies the general prompt string to display at the top of
-	the dialog, before subsections for 'argprompt' and 'revprompt'.
+	the dialog, before subsections for 'argPrompt' and 'revPrompt'.
 	The default value includes the actual command.
 
 help.browser::
 	Specify the browser that will be used to display help in the
 	'web' format. See linkgit:git-help[1].
 
 help.format::
 	Override the default help format used by linkgit:git-help[1].
 	Values 'man', 'info', 'web' and 'html' are supported. 'man' is
 	the default. 'web' and 'html' are the same.
 
-help.autocorrect::
+help.autoCorrect::
 	Automatically correct and execute mistyped commands after
 	waiting for the given number of deciseconds (0.1 sec). If more
 	than one command can be deduced from the entered text, nothing
 	will be executed.  If the value of this option is negative,
 	the corrected command will be executed immediately. If the
 	value is 0 - the command will be just shown but not executed.
 	This is the default.
 
-help.htmlpath::
+help.htmlPath::
 	Specify the path where the HTML documentation resides. File system paths
 	and URLs are supported. HTML pages will be prefixed with this path when
 	help is displayed in the 'web' format. This defaults to the documentation
 	path of your Git installation.
 
 http.proxy::
 	Override the HTTP proxy, normally configured using the 'http_proxy',
 	'https_proxy', and 'all_proxy' environment variables (see
 	`curl(1)`).  This can be overridden on a per-remote basis; see
 	remote.<name>.proxy
 
-http.cookiefile::
+http.cookieFile::
 	File containing previously stored cookie lines which should be used
 	in the Git http session, if they match the server. The file format
 	of the file to read cookies from should be plain HTTP headers or
 	the Netscape/Mozilla cookie file format (see linkgit:curl[1]).
-	NOTE that the file specified with http.cookiefile is only used as
+	NOTE that the file specified with http.cookieFile is only used as
 	input unless http.saveCookies is set.
 
-http.savecookies::
+http.saveCookies::
 	If set, store cookies received during requests to the file specified by
-	http.cookiefile. Has no effect if http.cookiefile is unset.
+	http.cookieFile. Has no effect if http.cookieFile is unset.
 
 http.sslVerify::
 	Whether to verify the SSL certificate when fetching or pushing
 	over HTTPS. Can be overridden by the 'GIT_SSL_NO_VERIFY' environment
 	variable.
 
@@ -1627,13 +1626,13 @@
 http.noEPSV::
 	A boolean which disables using of EPSV ftp command by curl.
 	This can helpful with some "poor" ftp servers which don't
 	support EPSV mode. Can be overridden by the 'GIT_CURL_FTP_NO_EPSV'
 	environment variable. Default is false (curl will use EPSV).
 
-http.useragent::
+http.userAgent::
 	The HTTP USER_AGENT string presented to an HTTP server.  The default
 	value represents the version of the client Git such as git/1.7.1.
 	This option allows you to override this value to a more common value
 	such as Mozilla/4.0.  This may be necessary, for instance, if
 	connecting through a firewall that restricts HTTP connections to a set
 	of common USER_AGENT strings (but not including those like git/1.7.1).
@@ -1700,13 +1699,13 @@
 	in linkgit:git-imap-send[1].
 
 index.version::
 	Specify the version with which new index files should be
 	initialized.  This does not affect existing repositories.
 
-init.templatedir::
+init.templateDir::
 	Specify the directory from which templates will be copied.
 	(See the "TEMPLATE DIRECTORY" section of linkgit:git-init[1].)
 
 instaweb.browser::
 	Specify the program that will be used to browse your working
 	repository in gitweb. See linkgit:git-instaweb[1].
@@ -1716,22 +1715,22 @@
 	repository. See linkgit:git-instaweb[1].
 
 instaweb.local::
 	If true the web server started by linkgit:git-instaweb[1] will
 	be bound to the local IP (127.0.0.1).
 
-instaweb.modulepath::
+instaweb.modulePath::
 	The default module path for linkgit:git-instaweb[1] to use
 	instead of /usr/lib/apache2/modules.  Only used if httpd
 	is Apache.
 
 instaweb.port::
 	The port number to bind the gitweb httpd to. See
 	linkgit:git-instaweb[1].
 
-interactive.singlekey::
+interactive.singleKey::
 	In interactive commands, allow the user to provide one-letter
 	input with a single key (i.e., without hitting enter).
 	Currently this is used by the `--patch` mode of
 	linkgit:git-add[1], linkgit:git-checkout[1], linkgit:git-commit[1],
 	linkgit:git-reset[1], and linkgit:git-stash[1]. Note that this
 	setting is silently ignored if portable keystroke input
@@ -1753,13 +1752,13 @@
 	Print out the ref names of any commits that are shown by the log
 	command. If 'short' is specified, the ref name prefixes 'refs/heads/',
 	'refs/tags/' and 'refs/remotes/' will not be printed. If 'full' is
 	specified, the full ref name (including prefix) will be printed.
 	This is the same as the log commands '--decorate' option.
 
-log.showroot::
+log.showRoot::
 	If true, the initial commit will be shown as a big creation event.
 	This is equivalent to a diff against an empty tree.
 	Tools like linkgit:git-log[1] or linkgit:git-whatchanged[1], which
 	normally hide the root commit will now show it. True by default.
 
 log.mailmap::
@@ -1990,13 +1989,13 @@
 pack.useBitmaps::
 	When true, git will use pack bitmaps (if available) when packing
 	to stdout (e.g., during the server side of a fetch). Defaults to
 	true. You should not generally need to turn this off unless
 	you are debugging pack bitmaps.
 
-pack.writebitmaps (deprecated)::
+pack.writeBitmaps (deprecated)::
 	This is a deprecated synonym for `repack.writeBitmaps`.
 
 pack.writeBitmapHashCache::
 	When true, git will include a "hash cache" section in the bitmap
 	index (if one is written). This cache can be used to feed git's
 	delta heuristics, potentially leading to better deltas between
@@ -2109,39 +2108,50 @@
 +
 This used to be the default, but not since Git 2.0 (`simple` is the
 new default).
 
 --
 
+push.followTags::
+	If set to true enable '--follow-tags' option by default.  You
+	may override this configuration at time of push by specifying
+	'--no-follow-tags'.
+
+
 rebase.stat::
 	Whether to show a diffstat of what changed upstream since the last
 	rebase. False by default.
 
-rebase.autosquash::
+rebase.autoSquash::
 	If set to true enable '--autosquash' option by default.
 
-rebase.autostash::
+rebase.autoStash::
 	When set to true, automatically create a temporary stash
 	before the operation begins, and apply it after the operation
 	ends.  This means that you can run rebase on a dirty worktree.
 	However, use with care: the final stash application after a
 	successful rebase might result in non-trivial conflicts.
 	Defaults to false.
 
+receive.advertiseAtomic::
+	By default, git-receive-pack will advertise the atomic push
+	capability to its clients. If you don't want to this capability
+	to be advertised, set this variable to false.
+
 receive.autogc::
 	By default, git-receive-pack will run "git-gc --auto" after
 	receiving data from git-push and updating refs.  You can stop
 	it by setting this variable to false.
 
-receive.certnonceseed::
+receive.certNonceSeed::
 	By setting this variable to a string, `git receive-pack`
 	will accept a `git push --signed` and verifies it by using
 	a "nonce" protected by HMAC using this string as a secret
 	key.
 
-receive.certnonceslop::
+receive.certNonceSlop::
 	When a `git push --signed` sent a push certificate with a
 	"nonce" that was issued by a receive-pack serving the same
 	repository within this many seconds, export the "nonce"
 	found in the certificate to `GIT_PUSH_CERT_NONCE` to the
 	hooks (instead of what the receive-pack asked the sending
 	side to include).  This may allow writing checks in
@@ -2183,45 +2193,49 @@
 	out of sync with the index and working tree. If set to "warn",
 	print a warning of such a push to stderr, but allow the push to
 	proceed. If set to false or "ignore", allow such pushes with no
 	message. Defaults to "refuse".
 +
 Another option is "updateInstead" which will update the working
-directory (must be clean) if pushing into the current branch. This option is
+tree if pushing into the current branch.  This option is
 intended for synchronizing working directories when one side is not easily
 accessible via interactive ssh (e.g. a live web site, hence the requirement
 that the working directory be clean). This mode also comes in handy when
 developing inside a VM to test and fix code on different Operating Systems.
++
+By default, "updateInstead" will refuse the push if the working tree or
+the index have any difference from the HEAD, but the `push-to-checkout`
+hook can be used to customize this.  See linkgit:githooks[5].
 
 receive.denyNonFastForwards::
 	If set to true, git-receive-pack will deny a ref update which is
 	not a fast-forward. Use this to prevent such an update via a push,
 	even if that push is forced. This configuration variable is
 	set when initializing a shared repository.
 
-receive.hiderefs::
+receive.hideRefs::
 	String(s) `receive-pack` uses to decide which refs to omit
 	from its initial advertisement.  Use more than one
 	definitions to specify multiple prefix strings. A ref that
 	are under the hierarchies listed on the value of this
 	variable is excluded, and is hidden when responding to `git
 	push`, and an attempt to update or delete a hidden ref by
 	`git push` is rejected.
 
-receive.updateserverinfo::
+receive.updateServerInfo::
 	If set to true, git-receive-pack will run git-update-server-info
 	after receiving data from git-push and updating refs.
 
-receive.shallowupdate::
+receive.shallowUpdate::
 	If set to true, .git/shallow can be updated when new refs
 	require new shallow roots. Otherwise those refs are rejected.
 
-remote.pushdefault::
+remote.pushDefault::
 	The remote to push to by default.  Overrides
 	`branch.<name>.remote` for all branches, and is overridden by
-	`branch.<name>.pushremote` for specific branches.
+	`branch.<name>.pushRemote` for specific branches.
 
 remote.<name>.url::
 	The URL of a remote repository.  See linkgit:git-fetch[1] or
 	linkgit:git-push[1].
 
 remote.<name>.pushurl::
@@ -2259,13 +2273,13 @@
 	option \--receive-pack of linkgit:git-push[1].
 
 remote.<name>.uploadpack::
 	The default program to execute on the remote side when fetching.  See
 	option \--upload-pack of linkgit:git-fetch-pack[1].
 
-remote.<name>.tagopt::
+remote.<name>.tagOpt::
 	Setting this value to \--no-tags disables automatic tag following when
 	fetching from remote <name>. Setting it to \--tags will fetch every
 	tag from remote <name>, even if they are not reachable from remote
 	branch heads. Passing these flags directly to linkgit:git-fetch[1] can
 	override this setting. See options \--tags and \--no-tags of
 	linkgit:git-fetch[1].
@@ -2281,13 +2295,13 @@
 	Overrides `fetch.prune` settings, if any.
 
 remotes.<group>::
 	The list of remotes which are fetched by "git remote update
 	<group>".  See linkgit:git-remote[1].
 
-repack.usedeltabaseoffset::
+repack.useDeltaBaseOffset::
 	By default, linkgit:git-repack[1] creates packs that use
 	delta-base offset. If you need to share your repository with
 	Git older than version 1.4.4, either directly or via a dumb
 	protocol such as http, then you need to set this option to
 	"false" and repack. Access from old Git versions over the
 	native protocol are unaffected by this option.
@@ -2304,13 +2318,13 @@
 	objects to disk (e.g., when `git repack -a` is run).  This
 	index can speed up the "counting objects" phase of subsequent
 	packs created for clones and fetches, at the cost of some disk
 	space and extra time spent on the initial repack.  Defaults to
 	false.
 
-rerere.autoupdate::
+rerere.autoUpdate::
 	When set to true, `git-rerere` updates the index with the
 	resulting contents after it cleanly resolves conflicts using
 	previously recorded resolution.  Defaults to false.
 
 rerere.enabled::
 	Activate recording of resolved conflicts, so that identical
@@ -2323,52 +2337,52 @@
 sendemail.identity::
 	A configuration identity. When given, causes values in the
 	'sendemail.<identity>' subsection to take precedence over
 	values in the 'sendemail' section. The default identity is
 	the value of 'sendemail.identity'.
 
-sendemail.smtpencryption::
+sendemail.smtpEncryption::
 	See linkgit:git-send-email[1] for description.  Note that this
 	setting is not subject to the 'identity' mechanism.
 
 sendemail.smtpssl (deprecated)::
-	Deprecated alias for 'sendemail.smtpencryption = ssl'.
+	Deprecated alias for 'sendemail.smtpEncryption = ssl'.
 
 sendemail.smtpsslcertpath::
 	Path to ca-certificates (either a directory or a single file).
 	Set it to an empty string to disable certificate verification.
 
 sendemail.<identity>.*::
 	Identity-specific versions of the 'sendemail.*' parameters
 	found below, taking precedence over those when the this
 	identity is selected, through command-line or
 	'sendemail.identity'.
 
-sendemail.aliasesfile::
-sendemail.aliasfiletype::
+sendemail.aliasesFile::
+sendemail.aliasFileType::
 sendemail.annotate::
 sendemail.bcc::
 sendemail.cc::
-sendemail.cccmd::
-sendemail.chainreplyto::
+sendemail.ccCmd::
+sendemail.chainReplyTo::
 sendemail.confirm::
-sendemail.envelopesender::
+sendemail.envelopeSender::
 sendemail.from::
-sendemail.multiedit::
+sendemail.multiEdit::
 sendemail.signedoffbycc::
-sendemail.smtppass::
+sendemail.smtpPass::
 sendemail.suppresscc::
-sendemail.suppressfrom::
+sendemail.suppressFrom::
 sendemail.to::
-sendemail.smtpdomain::
-sendemail.smtpserver::
-sendemail.smtpserverport::
-sendemail.smtpserveroption::
-sendemail.smtpuser::
+sendemail.smtpDomain::
+sendemail.smtpServer::
+sendemail.smtpServerPort::
+sendemail.smtpServerOption::
+sendemail.smtpUser::
 sendemail.thread::
-sendemail.transferencoding::
+sendemail.transferEncoding::
 sendemail.validate::
 sendemail.xmailer::
 	See linkgit:git-send-email[1] for description.
 
 sendemail.signedoffcc (deprecated)::
 	Deprecated alias for 'sendemail.signedoffbycc'.
@@ -2414,13 +2428,13 @@
 --
 +
 If this variable is not specified, it defaults to 'normal'.
 This variable can be overridden with the -u|--untracked-files option
 of linkgit:git-status[1] and linkgit:git-commit[1].
 
-status.submodulesummary::
+status.submoduleSummary::
 	Defaults to false.
 	If this is set to a non zero number or true (identical to -1 or an
 	unlimited number), the submodule summary will be enabled and a
 	summary of commits for modified submodules will be shown (see
 	--summary-limit option of linkgit:git-submodule[1]). Please note
 	that the summary output command will be suppressed for all
@@ -2489,15 +2503,15 @@
 
 transfer.fsckObjects::
 	When `fetch.fsckObjects` or `receive.fsckObjects` are
 	not set, the value of this variable is used instead.
 	Defaults to false.
 
-transfer.hiderefs::
-	This variable can be used to set both `receive.hiderefs`
-	and `uploadpack.hiderefs` at the same time to the same
+transfer.hideRefs::
+	This variable can be used to set both `receive.hideRefs`
+	and `uploadpack.hideRefs` at the same time to the same
 	values.  See entries for these other variables.
 
 transfer.unpackLimit::
 	When `fetch.unpackLimit` or `receive.unpackLimit` are
 	not set, the value of this variable is used instead.
 	The default value is 100.
@@ -2506,36 +2520,36 @@
 	If true, allow clients to use `git archive --remote` to request
 	any tree, whether reachable from the ref tips or not. See the
 	discussion in the `SECURITY` section of
 	linkgit:git-upload-archive[1] for more details. Defaults to
 	`false`.
 
-uploadpack.hiderefs::
+uploadpack.hideRefs::
 	String(s) `upload-pack` uses to decide which refs to omit
 	from its initial advertisement.  Use more than one
 	definitions to specify multiple prefix strings. A ref that
 	are under the hierarchies listed on the value of this
 	variable is excluded, and is hidden from `git ls-remote`,
 	`git fetch`, etc.  An attempt to fetch a hidden ref by `git
 	fetch` will fail.  See also `uploadpack.allowtipsha1inwant`.
 
 uploadpack.allowtipsha1inwant::
-	When `uploadpack.hiderefs` is in effect, allow `upload-pack`
+	When `uploadpack.hideRefs` is in effect, allow `upload-pack`
 	to accept a fetch request that asks for an object at the tip
 	of a hidden ref (by default, such a request is rejected).
-	see also `uploadpack.hiderefs`.
+	see also `uploadpack.hideRefs`.
 
-uploadpack.keepalive::
+uploadpack.keepAlive::
 	When `upload-pack` has started `pack-objects`, there may be a
 	quiet period while `pack-objects` prepares the pack. Normally
 	it would output progress information, but if `--quiet` was used
 	for the fetch, `pack-objects` will output nothing at all until
 	the pack data begins. Some clients and networks may consider
 	the server to be hung and give up. Setting this option instructs
 	`upload-pack` to send an empty keepalive packet every
-	`uploadpack.keepalive` seconds. Setting this option to 0
+	`uploadpack.keepAlive` seconds. Setting this option to 0
 	disables keepalive packets entirely. The default is 5 seconds.
 
 url.<base>.insteadOf::
 	Any URL that starts with this value will be rewritten to
 	start, instead, with <base>. In cases where some site serves a
 	large number of repositories, and serves them with multiple
@@ -2566,17 +2580,29 @@
 
 user.name::
 	Your full name to be recorded in any newly created commits.
 	Can be overridden by the 'GIT_AUTHOR_NAME' and 'GIT_COMMITTER_NAME'
 	environment variables.  See linkgit:git-commit-tree[1].
 
-user.signingkey::
+user.signingKey::
 	If linkgit:git-tag[1] or linkgit:git-commit[1] is not selecting the
 	key you want it to automatically when creating a signed tag or
 	commit, you can override the default selection with this variable.
 	This option is passed unchanged to gpg's --local-user parameter,
 	so you may specify a key using any method that gpg supports.
 
+versionsort.prereleaseSuffix::
+	When version sort is used in linkgit:git-tag[1], prerelease
+	tags (e.g. "1.0-rc1") may appear after the main release
+	"1.0". By specifying the suffix "-rc" in this variable,
+	"1.0-rc1" will appear before "1.0".
++
+This variable can be specified multiple times, once per suffix. The
+order of suffixes in the config file determines the sorting order
+(e.g. if "-pre" appears before "-rc" in the config file then 1.0-preXX
+is sorted before 1.0-rcXX). The sorting order between different
+suffixes is undefined if they are in multiple config files.
+
 web.browser::
 	Specify a web browser that may be used by some commands.
 	Currently only linkgit:git-instaweb[1] and linkgit:git-help[1]
 	may use it.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/diff-config.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/diff-config.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/diff-config.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/diff-config.txt	2015-05-01 03:12:02.000000000 +0800
@@ -1,7 +1,7 @@
-diff.autorefreshindex::
+diff.autoRefreshIndex::
 	When using 'git diff' to compare with work tree
 	files, do not consider stat-only change as changed.
 	Instead, silently run `git update-index --refresh` to
 	update the cached stat information for paths whose
 	contents in the work tree match the contents in the
 	index.  This option defaults to true.  Note that this
@@ -72,17 +72,17 @@
 diff.ignoreSubmodules::
 	Sets the default value of --ignore-submodules. Note that this
 	affects only 'git diff' Porcelain, and not lower level 'diff'
 	commands such as 'git diff-files'. 'git checkout' also honors
 	this setting when reporting uncommitted changes. Setting it to
 	'all' disables the submodule summary normally shown by 'git commit'
-	and 'git status' when 'status.submodulesummary' is set unless it is
+	and 'git status' when 'status.submoduleSummary' is set unless it is
 	overridden by using the --ignore-submodules command-line option.
 	The 'git submodule' commands are not affected by this setting.
 
-diff.mnemonicprefix::
+diff.mnemonicPrefix::
 	If set, 'git diff' uses a prefix pair that is different from the
 	standard "a/" and "b/" depending on what is being compared.  When
 	this configuration is in effect, reverse diff output also swaps
 	the order of the prefixes:
 `git diff`;;
 	compares the (i)ndex and the (w)ork tree;
@@ -95,13 +95,13 @@
 `git diff --no-index a b`;;
 	compares two non-git things (1) and (2).
 
 diff.noprefix::
 	If set, 'git diff' does not show any source or destination prefix.
 
-diff.orderfile::
+diff.orderFile::
 	File indicating how to order files within a diff, using
 	one shell glob pattern per line.
 	Can be overridden by the '-O' option to linkgit:git-diff[1].
 
 diff.renameLimit::
 	The number of files to consider when performing the copy/rename
@@ -145,13 +145,13 @@
 diff.<driver>.textconv::
 	The command that the diff driver should call to generate the
 	text-converted version of a file.  The result of the
 	conversion is used to generate a human-readable diff.  See
 	linkgit:gitattributes[5] for details.
 
-diff.<driver>.wordregex::
+diff.<driver>.wordRegex::
 	The regular expression that the diff driver should use to
 	split words in a line.  See linkgit:gitattributes[5] for
 	details.
 
 diff.<driver>.cachetextconv::
 	Set this option to true to make the diff driver cache the text
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/diff-options.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/diff-options.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/diff-options.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/diff-options.txt	2015-05-01 03:12:02.000000000 +0800
@@ -429,14 +429,14 @@
 	expression to match.
 endif::git-format-patch[]
 
 -O<orderfile>::
 	Output the patch in the order specified in the
 	<orderfile>, which has one shell glob pattern per line.
-	This overrides the `diff.orderfile` configuration variable
-	(see linkgit:git-config[1]).  To cancel `diff.orderfile`,
+	This overrides the `diff.orderFile` configuration variable
+	(see linkgit:git-config[1]).  To cancel `diff.orderFile`,
 	use `-O/dev/null`.
 
 ifndef::git-format-patch[]
 -R::
 	Swap two inputs; that is, show differences from index or
 	on-disk file to tree contents.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/fetch-options.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/fetch-options.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/fetch-options.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/fetch-options.txt	2015-05-01 03:12:02.000000000 +0800
@@ -65,13 +65,13 @@
 -n::
 endif::git-pull[]
 --no-tags::
 	By default, tags that point at objects that are downloaded
 	from the remote repository are fetched and stored locally.
 	This option disables this automatic tag following. The default
-	behavior for a remote may be specified with the remote.<name>.tagopt
+	behavior for a remote may be specified with the remote.<name>.tagOpt
 	setting. See linkgit:git-config[1].
 
 ifndef::git-pull[]
 --refmap=<refspec>::
 	When fetching refs listed on the command line, use the
 	specified refspec (can be given more than once) to map the
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-add.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-add.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-add.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-add.txt	2015-05-01 03:12:02.000000000 +0800
@@ -170,13 +170,13 @@
 	for command-line options).
 
 
 Configuration
 -------------
 
-The optional configuration variable `core.excludesfile` indicates a path to a
+The optional configuration variable `core.excludesFile` indicates a path to a
 file containing patterns of file names to exclude from git-add, similar to
 $GIT_DIR/info/exclude.  Patterns in the exclude file are used in addition to
 those in info/exclude.  See linkgit:gitignore[5].
 
 
 EXAMPLES
@@ -314,13 +314,13 @@
        ? - print help
 +
 After deciding the fate for all hunks, if there is any hunk
 that was chosen, the index is updated with the selected hunks.
 +
 You can omit having to type return here, by setting the configuration
-variable `interactive.singlekey` to `true`.
+variable `interactive.singleKey` to `true`.
 
 diff::
 
   This lets you review what will be committed (i.e. between
   HEAD and index).
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-apply.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-apply.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-apply.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-apply.txt	2015-05-01 03:12:02.000000000 +0800
@@ -239,13 +239,13 @@
 the `--unsafe-paths` option to override this safety check.  This option
 has no effect when `--index` or `--cached` is in use.
 
 Configuration
 -------------
 
-apply.ignorewhitespace::
+apply.ignoreWhitespace::
 	Set to 'change' if you want changes in whitespace to be ignored by default.
 	Set to one of: no, none, never, false if you want changes in
 	whitespace to be significant.
 apply.whitespace::
 	When no `--whitespace` flag is given from the command
 	line, this configuration item is used as the default.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/gitattributes.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/gitattributes.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/gitattributes.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/gitattributes.txt	2015-05-01 03:12:02.000000000 +0800
@@ -77,13 +77,13 @@
 one user's workflow for that repository), then
 attributes should be placed in the `$GIT_DIR/info/attributes` file.
 Attributes which should be version-controlled and distributed to other
 repositories (i.e., attributes of interest to all users) should go into
 `.gitattributes` files. Attributes that should affect all repositories
 for a single user should be placed in a file specified by the
-`core.attributesfile` configuration option (see linkgit:git-config[1]).
+`core.attributesFile` configuration option (see linkgit:git-config[1]).
 Its default value is $XDG_CONFIG_HOME/git/attributes. If $XDG_CONFIG_HOME
 is either not set or empty, $HOME/.config/git/attributes is used instead.
 Attributes for all users on a system should be placed in the
 `$(prefix)/etc/gitattributes` file.
 
 Sometimes you would need to override an setting of an attribute
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-branch.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-branch.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-branch.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-branch.txt	2015-05-01 03:12:02.000000000 +0800
@@ -48,13 +48,13 @@
 new branch.
 
 When a local branch is started off a remote-tracking branch, Git sets up the
 branch (specifically the `branch.<name>.remote` and `branch.<name>.merge`
 configuration entries) so that 'git pull' will appropriately merge from
 the remote-tracking branch. This behavior may be changed via the global
-`branch.autosetupmerge` configuration flag. That setting can be
+`branch.autoSetupMerge` configuration flag. That setting can be
 overridden by using the `--track` and `--no-track` options, and
 changed later using `git branch --set-upstream-to`.
 
 With a `-m` or `-M` option, <oldbranch> will be renamed to <newbranch>.
 If <oldbranch> had a corresponding reflog, it is renamed to match
 <newbranch>, and a reflog entry is created to remember the branch
@@ -163,20 +163,20 @@
 	configuration will tell git to show the relationship between the
 	two branches in `git status` and `git branch -v`. Furthermore,
 	it directs `git pull` without arguments to pull from the
 	upstream when the new branch is checked out.
 +
 This behavior is the default when the start point is a remote-tracking branch.
-Set the branch.autosetupmerge configuration variable to `false` if you
+Set the branch.autoSetupMerge configuration variable to `false` if you
 want `git checkout` and `git branch` to always behave as if '--no-track'
 were given. Set it to `always` if you want this behavior when the
 start-point is either a local or remote-tracking branch.
 
 --no-track::
 	Do not set up "upstream" configuration, even if the
-	branch.autosetupmerge configuration variable is true.
+	branch.autoSetupMerge configuration variable is true.
 
 --set-upstream::
 	If specified branch does not exist yet or if `--force` has been
 	given, acts exactly like `--track`. Otherwise sets up configuration
 	like `--track` would when creating the branch, except that where
 	branch points to is not changed.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-check-ignore.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-check-ignore.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-check-ignore.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-check-ignore.txt	2015-05-01 03:12:02.000000000 +0800
@@ -69,13 +69,13 @@
 
 <pathname> is the path of a file being queried, <pattern> is the
 matching pattern, <source> is the pattern's source file, and <linenum>
 is the line number of the pattern within that source.  If the pattern
 contained a `!` prefix or `/` suffix, it will be preserved in the
 output.  <source> will be an absolute path when referring to the file
-configured by `core.excludesfile`, or relative to the repository root
+configured by `core.excludesFile`, or relative to the repository root
 when referring to `.git/info/exclude` or a per-directory exclude file.
 
 If `-z` is specified, the pathnames in the output are delimited by the
 null character; if `--verbose` is also specified then null characters
 are also used instead of colons and hard tabs:
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-checkout.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-checkout.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-checkout.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-checkout.txt	2015-05-01 03:12:02.000000000 +0800
@@ -141,13 +141,13 @@
 "refs/remotes/origin/hack").  If the given name has no slash, or the above
 guessing results in an empty name, the guessing is aborted.  You can
 explicitly give a name with '-b' in such a case.
 
 --no-track::
 	Do not set up "upstream" configuration, even if the
-	branch.autosetupmerge configuration variable is true.
+	branch.autoSetupMerge configuration variable is true.
 
 -l::
 	Create the new branch's reflog; see linkgit:git-branch[1] for
 	details.
 
 --detach::
@@ -207,13 +207,13 @@
 When checking out paths from the index, this option lets you recreate
 the conflicted merge in the specified paths.
 
 --conflict=<style>::
 	The same as --merge option above, but changes the way the
 	conflicting hunks are presented, overriding the
-	merge.conflictstyle configuration variable.  Possible values are
+	merge.conflictStyle configuration variable.  Possible values are
 	"merge" (default) and "diff3" (in addition to what is shown by
 	"merge" style, shows the original contents).
 
 -p::
 --patch::
 	Interactively select hunks in the difference between the
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-commit-tree.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-commit-tree.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-commit-tree.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-commit-tree.txt	2015-05-01 03:12:02.000000000 +0800
@@ -56,13 +56,13 @@
 
 -S[<keyid>]::
 --gpg-sign[=<keyid>]::
 	GPG-sign commit.
 
 --no-gpg-sign::
-	Countermand `commit.gpgsign` configuration variable that is
+	Countermand `commit.gpgSign` configuration variable that is
 	set to force each and every commit to be signed.
 
 
 Commit Information
 ------------------
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-commit.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-commit.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-commit.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-commit.txt	2015-05-01 03:12:02.000000000 +0800
@@ -281,12 +281,16 @@
 -v::
 --verbose::
 	Show unified diff between the HEAD commit and what
 	would be committed at the bottom of the commit message
 	template.  Note that this diff output doesn't have its
 	lines prefixed with '#'.
++
+If specified twice, show in addition the unified diff between
+what would be committed and the worktree files, i.e. the unstaged
+changes to tracked files.
 
 -q::
 --quiet::
 	Suppress commit summary message.
 
 --dry-run::
@@ -307,13 +311,13 @@
 
 -S[<keyid>]::
 --gpg-sign[=<keyid>]::
 	GPG-sign commit.
 
 --no-gpg-sign::
-	Countermand `commit.gpgsign` configuration variable that is
+	Countermand `commit.gpgSign` configuration variable that is
 	set to force each and every commit to be signed.
 
 \--::
 	Do not interpret any more arguments as options.
 
 <file>...::
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-config.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-config.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-config.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-config.txt	2015-05-01 03:12:02.000000000 +0800
@@ -402,13 +402,13 @@
 ------------
 % git config --bool --get-urlmatch http.sslverify https://good.example.com
 true
 % git config --bool --get-urlmatch http.sslverify https://weak.example.com
 false
 % git config --get-urlmatch http https://weak.example.com
-http.cookiefile /tmp/cookie.txt
+http.cookieFile /tmp/cookie.txt
 http.sslverify false
 ------------
 
 include::config.txt[]
 
 GIT
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/gitcredentials.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/gitcredentials.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/gitcredentials.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/gitcredentials.txt	2015-05-01 03:12:02.000000000 +0800
@@ -29,13 +29,13 @@
 
 1. If the `GIT_ASKPASS` environment variable is set, the program
    specified by the variable is invoked. A suitable prompt is provided
    to the program on the command line, and the user's input is read
    from its standard output.
 
-2. Otherwise, if the `core.askpass` configuration variable is set, its
+2. Otherwise, if the `core.askPass` configuration variable is set, its
    value is used as above.
 
 3. Otherwise, if the `SSH_ASKPASS` environment variable is set, its
    value is used as above.
 
 4. Otherwise, the user is prompted on the terminal.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-cvsserver.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-cvsserver.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-cvsserver.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-cvsserver.txt	2015-05-01 03:12:02.000000000 +0800
@@ -151,13 +151,13 @@
 +
 --
 ------
    [gitcvs]
         enabled=1
         # optional for debugging
-        logfile=/path/to/logfile
+	logFile=/path/to/logfile
 
 ------
 Note: you need to ensure each user that is going to invoke 'git-cvsserver' has
 write access to the log file and to the database (see
 <<dbbackend,Database Backend>>. If you want to offer write access over
 SSH, the users of course also need write access to the Git repository itself.
@@ -251,47 +251,47 @@
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
 'git-cvsserver' uses the Perl DBI module. Please also read
 its documentation if changing these variables, especially
 about `DBI->connect()`.
 
-gitcvs.dbname::
+gitcvs.dbName::
 	Database name. The exact meaning depends on the
 	selected database driver, for SQLite this is a filename.
 	Supports variable substitution (see below). May
 	not contain semicolons (`;`).
 	Default: '%Ggitcvs.%m.sqlite'
 
-gitcvs.dbdriver::
+gitcvs.dbDriver::
 	Used DBI driver. You can specify any available driver
 	for this here, but it might not work. cvsserver is tested
 	with 'DBD::SQLite', reported to work with
 	'DBD::Pg', and reported *not* to work with 'DBD::mysql'.
 	Please regard this as an experimental feature. May not
 	contain colons (`:`).
 	Default: 'SQLite'
 
 gitcvs.dbuser::
-	Database user. Only useful if setting `dbdriver`, since
+	Database user. Only useful if setting `dbDriver`, since
 	SQLite has no concept of database users. Supports variable
 	substitution (see below).
 
-gitcvs.dbpass::
-	Database password.  Only useful if setting `dbdriver`, since
+gitcvs.dbPass::
+	Database password.  Only useful if setting `dbDriver`, since
 	SQLite has no concept of database passwords.
 
 gitcvs.dbTableNamePrefix::
 	Database table name prefix.  Supports variable substitution
 	(see below).  Any non-alphabetic characters will be replaced
 	with underscores.
 
 All variables can also be set per access method, see <<configaccessmethod,above>>.
 
 Variable substitution
 ^^^^^^^^^^^^^^^^^^^^^
-In `dbdriver` and `dbuser` you can use the following variables:
+In `dbDriver` and `dbUser` you can use the following variables:
 
 %G::
 	Git directory name
 %g::
 	Git directory name, where all characters except for
 	alpha-numeric ones, `.`, and `-` are replaced with
@@ -410,22 +410,22 @@
 set the '-k' modes for files by setting the `gitcvs.usecrlfattr`
 config variable.  See linkgit:gitattributes[5] for more information
 about end-of-line conversion.
 
 Alternatively, if `gitcvs.usecrlfattr` config is not enabled
 or the attributes do not allow automatic detection for a filename, then
-the server uses the `gitcvs.allbinary` config for the default setting.
-If `gitcvs.allbinary` is set, then file not otherwise
+the server uses the `gitcvs.allBinary` config for the default setting.
+If `gitcvs.allBinary` is set, then file not otherwise
 specified will default to '-kb' mode. Otherwise the '-k' mode
-is left blank. But if `gitcvs.allbinary` is set to "guess", then
+is left blank. But if `gitcvs.allBinary` is set to "guess", then
 the correct '-k' mode will be guessed based on the contents of
 the file.
 
 For best consistency with 'cvs', it is probably best to override the
 defaults by setting `gitcvs.usecrlfattr` to true,
-and `gitcvs.allbinary` to "guess".
+and `gitcvs.allBinary` to "guess".
 
 Dependencies
 ------------
 'git-cvsserver' depends on DBD::SQLite.
 
 GIT
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-fetch.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-fetch.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-fetch.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-fetch.txt	2015-05-01 03:12:02.000000000 +0800
@@ -23,13 +23,13 @@
 of <refspec> below for ways to control this behavior).
 
 By default, any tag that points into the histories being fetched is
 also fetched; the effect is to fetch tags that
 point at branches that you are interested in.  This default behavior
 can be changed by using the --tags or --no-tags options or by
-configuring remote.<name>.tagopt.  By using a refspec that fetches tags
+configuring remote.<name>.tagOpt.  By using a refspec that fetches tags
 explicitly, you can fetch tags that do not point into branches you
 are interested in as well.
 
 'git fetch' can fetch from either a single named repository or URL,
 or from several repositories at once if <group> is given and
 there is a remotes.<group> entry in the configuration file.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-format-patch.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-format-patch.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-format-patch.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-format-patch.txt	2015-05-01 03:12:02.000000000 +0800
@@ -270,19 +270,19 @@
 outputting more than one patch, add "To" or "Cc:" headers, configure
 attachments, and sign off patches with configuration variables.
 
 ------------
 [format]
 	headers = "Organization: git-foo\n"
-	subjectprefix = CHANGE
+	subjectPrefix = CHANGE
 	suffix = .txt
 	numbered = auto
 	to = <email>
 	cc = <email>
 	attach [ = mime-boundary-string ]
-	signoff = true
+	signOff = true
 	coverletter = auto
 ------------
 
 
 DISCUSSION
 ----------
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-gc.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-gc.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-gc.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-gc.txt	2015-05-01 03:12:02.000000000 +0800
@@ -51,16 +51,16 @@
 too many packs in the repository. If the number of loose objects
 exceeds the value of the `gc.auto` configuration variable, then
 all loose objects are combined into a single pack using
 `git repack -d -l`.  Setting the value of `gc.auto` to 0
 disables automatic packing of loose objects.
 +
-If the number of packs exceeds the value of `gc.autopacklimit`,
+If the number of packs exceeds the value of `gc.autoPackLimit`,
 then existing packs (except those marked with a `.keep` file)
 are consolidated into a single pack by using the `-A` option of
-'git repack'. Setting `gc.autopacklimit` to 0 disables
+'git repack'. Setting `gc.autoPackLimit` to 0 disables
 automatic consolidation of packs.
 
 --prune=<date>::
 	Prune loose objects older than date (default is 2 weeks ago,
 	overridable by the config variable `gc.pruneExpire`).
 	--prune=all prunes loose objects regardless of their age.
@@ -98,24 +98,24 @@
 example, this sets non-default expiry values only to remote-tracking
 branches:
 
 ------------
 [gc "refs/remotes/*"]
 	reflogExpire = never
-	reflogexpireUnreachable = 3 days
+	reflogExpireUnreachable = 3 days
 ------------
 
-The optional configuration variable 'gc.rerereresolved' indicates
+The optional configuration variable 'gc.rerereResolved' indicates
 how long records of conflicted merge you resolved earlier are
 kept.  This defaults to 60 days.
 
-The optional configuration variable 'gc.rerereunresolved' indicates
+The optional configuration variable 'gc.rerereUnresolved' indicates
 how long records of conflicted merge you have not resolved are
 kept.  This defaults to 15 days.
 
-The optional configuration variable 'gc.packrefs' determines if
+The optional configuration variable 'gc.packRefs' determines if
 'git gc' runs 'git pack-refs'. This can be set to "notbare" to enable
 it within all non-bare repos or it can be set to a boolean value.
 This defaults to true.
 
 The optional configuration variable 'gc.aggressiveWindow' controls how
 much time is spent optimizing the delta compression of the objects in
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/githooks.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/githooks.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/githooks.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/githooks.txt	2015-05-01 03:12:02.000000000 +0800
@@ -338,12 +338,42 @@
 probably enable this hook.
 
 Both standard output and standard error output are forwarded to
 'git send-pack' on the other end, so you can simply `echo` messages
 for the user.
 
+push-to-checkout
+~~~~~~~~~~~~~~~~
+
+This hook is invoked by 'git-receive-pack' on the remote repository,
+which happens when a 'git push' is done on a local repository, when
+the push tries to update the branch that is currently checked out
+and the `receive.denyCurrentBranch` configuration variable is set to
+`updateInstead`.  Such a push by default is refused if the working
+tree and the index of the remote repository has any difference from
+the currently checked out commit; when both the working tree and the
+index match the current commit, they are updated to match the newly
+pushed tip of the branch.  This hook is to be used to override the
+default behaviour.
+
+The hook receives the commit with which the tip of the current
+branch is going to be updated.  It can exit with a non-zero status
+to refuse the push (when it does so, it must not modify the index or
+the working tree).  Or it can make any necessary changes to the
+working tree and to the index to bring them to the desired state
+when the tip of the current branch is updated to the new commit, and
+exit with a zero status.
+
+For example, the hook can simply run `git read-tree -u -m HEAD "$1"`
+in order to emulate 'git fetch' that is run in the reverse direction
+with `git push`, as the two-tree form of `read-tree -u -m` is
+essentially the same as `git checkout` that switches branches while
+keeping the local changes in the working tree that do not interfere
+with the difference between the branches.
+
+
 pre-auto-gc
 ~~~~~~~~~~~
 
 This hook is invoked by 'git gc --auto'. It takes no parameter, and
 exiting with non-zero status from this script causes the 'git gc --auto'
 to abort.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/gitignore.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/gitignore.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/gitignore.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/gitignore.txt	2015-05-01 03:12:02.000000000 +0800
@@ -35,13 +35,13 @@
    `.gitignore` files in its repository, containing patterns for
    files generated as part of the project build.
 
  * Patterns read from `$GIT_DIR/info/exclude`.
 
  * Patterns read from the file specified by the configuration
-   variable 'core.excludesfile'.
+   variable 'core.excludesFile'.
 
 Which file to place a pattern in depends on how the pattern is meant to
 be used.
 
  * Patterns which should be version-controlled and distributed to
    other repositories via clone (i.e., files that all developers will want
@@ -53,13 +53,13 @@
    the repository but are specific to one user's workflow) should go into
    the `$GIT_DIR/info/exclude` file.
 
  * Patterns which a user wants Git to
    ignore in all situations (e.g., backup or temporary files generated by
    the user's editor of choice) generally go into a file specified by
-   `core.excludesfile` in the user's `~/.gitconfig`. Its default value is
+   `core.excludesFile` in the user's `~/.gitconfig`. Its default value is
    $XDG_CONFIG_HOME/git/ignore. If $XDG_CONFIG_HOME is either not set or
    empty, $HOME/.config/git/ignore is used instead.
 
 The underlying Git plumbing tools, such as
 'git ls-files' and 'git read-tree', read
 `gitignore` patterns specified by command-line options, or from
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-init.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-init.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-init.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-init.txt	2015-05-01 03:12:02.000000000 +0800
@@ -122,13 +122,13 @@
 The template directory will be one of the following (in order):
 
  - the argument given with the `--template` option;
 
  - the contents of the `$GIT_TEMPLATE_DIR` environment variable;
 
- - the `init.templatedir` configuration variable; or
+ - the `init.templateDir` configuration variable; or
 
  - the default template directory: `/usr/share/git-core/templates`.
 
 The default template directory includes some directory structure, suggested
 "exclude patterns" (see linkgit:gitignore[5]), and sample hook files (see linkgit:githooks[5]).
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-instaweb.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-instaweb.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-instaweb.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-instaweb.txt	2015-05-01 03:12:02.000000000 +0800
@@ -73,13 +73,13 @@
 -----------------------------------------------------------------------
 [instaweb]
 	local = true
 	httpd = apache2 -f
 	port = 4321
 	browser = konqueror
-	modulepath = /usr/lib/apache2/modules
+	modulePath = /usr/lib/apache2/modules
 
 -----------------------------------------------------------------------
 
 If the configuration variable 'instaweb.browser' is not set,
 'web.browser' will be used instead if it is defined. See
 linkgit:git-web{litdd}browse[1] for more information about this.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/gitk.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/gitk.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/gitk.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/gitk.txt	2015-05-01 03:12:02.000000000 +0800
@@ -96,16 +96,16 @@
 	between the 'commit1' and 'commit2', i.e. commits that are
 	both descendants of 'commit1', and ancestors of 'commit2'.
 	(See "History simplification" in linkgit:git-log[1] for a more
 	detailed explanation.)
 
 -L<start>,<end>:<file>::
--L:<funcname>:<file>::
+-L:<regex>:<file>::
 
 	Trace the evolution of the line range given by "<start>,<end>"
-	(or the function name regex <funcname>) within the <file>.  You may
+	(or the funcname regex <regex>) within the <file>.  You may
 	not give any pathspec limiters.  This is currently limited to
 	a walk starting from a single revision, i.e., you may only
 	give zero or one positive revision arguments.
 	You can specify this option more than once.
 +
 *Note:* gitk (unlike linkgit:git-log[1]) currently only understands
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-log.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-log.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-log.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-log.txt	2015-05-01 03:12:02.000000000 +0800
@@ -59,15 +59,15 @@
 	Include a line ``log size <number>'' in the output for each commit,
 	where <number> is the length of that commit's message in bytes.
 	Intended to speed up tools that read log messages from `git log`
 	output by allowing them to allocate space in advance.
 
 -L <start>,<end>:<file>::
--L :<funcname>:<file>::
+-L :<regex>:<file>::
 	Trace the evolution of the line range given by "<start>,<end>"
-	(or the function name regex <funcname>) within the <file>.  You may
+	(or the funcname regex <regex>) within the <file>.  You may
 	not give any pathspec limiters.  This is currently limited to
 	a walk starting from a single revision, i.e., you may only
 	give zero or one positive revision arguments.
 	You can specify this option more than once.
 +
 include::line-range-format.txt[]
@@ -181,13 +181,13 @@
 
 log.date::
 	Default format for human-readable dates.  (Compare the
 	`--date` option.)  Defaults to "default", which means to write
 	dates like `Sat May 8 19:35:34 2010 -0500`.
 
-log.showroot::
+log.showRoot::
 	If `false`, `git log` and related commands will not treat the
 	initial commit as a big creation event.  Any root commits in
 	`git log -p` output would be shown without a diff attached.
 	The default is `true`.
 
 mailmap.*::
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-merge.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-merge.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-merge.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-merge.txt	2015-05-01 03:12:02.000000000 +0800
@@ -229,13 +229,13 @@
 The default format does not show what the original said in the conflicting
 area.  You cannot tell how many lines are deleted and replaced with
 Barbie's remark on your side.  The only thing you can tell is that your
 side wants to say it is hard and you'd prefer to go shopping, while the
 other side wants to claim it is easy.
 
-An alternative style can be used by setting the "merge.conflictstyle"
+An alternative style can be used by setting the "merge.conflictStyle"
 configuration variable to "diff3".  In "diff3" style, the above conflict
 may look like this:
 
 ------------
 Here are lines that are either unchanged from the common
 ancestor, or cleanly resolved because only one side changed.
@@ -326,13 +326,13 @@
 include::merge-strategies.txt[]
 
 CONFIGURATION
 -------------
 include::merge-config.txt[]
 
-branch.<name>.mergeoptions::
+branch.<name>.mergeOptions::
 	Sets default options for merging into branch <name>. The syntax and
 	supported options are the same as those of 'git merge', but option
 	values containing whitespace characters are currently not supported.
 
 SEE ALSO
 --------
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-p4.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-p4.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-p4.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-p4.txt	2015-05-01 03:12:02.000000000 +0800
@@ -238,12 +238,15 @@
 	Git path is instead 'depot/main/foo/bar.c'.
 
 --use-client-spec::
 	Use a client spec to find the list of interesting files in p4.
 	See the "CLIENT SPEC" section below.
 
+-/ <path>::
+	Exclude selected depot paths when cloning or syncing.
+
 Clone options
 ~~~~~~~~~~~~~
 These options can be used in an initial 'clone', along with the 'sync'
 options described above.
 
 --destination <directory>::
@@ -251,15 +254,12 @@
 	component in the p4 depot path is used to create a new
 	directory.
 
 --bare::
 	Perform a bare clone.  See linkgit:git-clone[1].
 
--/ <path>::
-	Exclude selected depot paths when cloning.
-
 Submit options
 ~~~~~~~~~~~~~~
 These options can be used to modify 'git p4 submit' behavior.
 
 --origin <commit>::
 	Upstream location from which commits are identified to submit to
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-pull.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-pull.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-pull.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-pull.txt	2015-05-01 03:12:02.000000000 +0800
@@ -113,13 +113,13 @@
 +
 When set to preserve, rebase with the `--preserve-merges` option passed
 to `git rebase` so that locally created merge commits will not be flattened.
 +
 When false, merge the current branch into the upstream branch.
 +
-See `pull.rebase`, `branch.<name>.rebase` and `branch.autosetuprebase` in
+See `pull.rebase`, `branch.<name>.rebase` and `branch.autoSetupRebase` in
 linkgit:git-config[1] if you want to make `git pull` always use
 `--rebase` instead of merging.
 +
 [NOTE]
 This is a potentially _dangerous_ mode of operation.
 It rewrites history, which does not bode well when you
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-push.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-push.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-push.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-push.txt	2015-05-01 03:12:02.000000000 +0800
@@ -6,13 +6,13 @@
 git-push - Update remote refs along with associated objects
 
 
 SYNOPSIS
 --------
 [verse]
-'git push' [--all | --mirror | --tags] [--follow-tags] [-n | --dry-run] [--receive-pack=<git-receive-pack>]
+'git push' [--all | --mirror | --tags] [--follow-tags] [--atomic] [-n | --dry-run] [--receive-pack=<git-receive-pack>]
 	   [--repo=<repository>] [-f | --force] [--prune] [-v | --verbose]
 	   [-u | --set-upstream] [--signed]
 	   [--force-with-lease[=<refname>[:<expect>]]]
 	   [--no-verify] [<repository> [<refspec>...]]
 
 DESCRIPTION
@@ -125,20 +125,28 @@
 	line.
 
 --follow-tags::
 	Push all the refs that would be pushed without this option,
 	and also push annotated tags in `refs/tags` that are missing
 	from the remote but are pointing at commit-ish that are
-	reachable from the refs being pushed.
+	reachable from the refs being pushed.  This can also be specified
+	with configuration variable 'push.followTags'.  For more
+	information, see 'push.followTags' in linkgit:git-config[1].
+
 
 --signed::
 	GPG-sign the push request to update refs on the receiving
 	side, to allow it to be checked by the hooks and/or be
 	logged.  See linkgit:git-receive-pack[1] for the details
 	on the receiving end.
 
+--[no-]atomic::
+	Use an atomic transaction on the remote side if available.
+	Either all refs are updated, or on error, no refs are updated.
+	If the server does not support atomic pushes the push will fail.
+
 --receive-pack=<git-receive-pack>::
 --exec=<git-receive-pack>::
 	Path to the 'git-receive-pack' program on the remote
 	end.  Sometimes useful when pushing to a remote
 	repository over ssh, and you do not have the program in
 	a directory on the default $PATH.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-rebase.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-rebase.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-rebase.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-rebase.txt	2015-05-01 03:12:02.000000000 +0800
@@ -204,16 +204,16 @@
 -------------
 
 rebase.stat::
 	Whether to show a diffstat of what changed upstream since the last
 	rebase. False by default.
 
-rebase.autosquash::
+rebase.autoSquash::
 	If set to true enable '--autosquash' option by default.
 
-rebase.autostash::
+rebase.autoStash::
 	If set to true enable '--autostash' option by default.
 
 OPTIONS
 -------
 --onto <newbase>::
 	Starting point at which to create the new commits. If the
@@ -413,13 +413,13 @@
 	"fixup! " or "squash! " after the first, in case you referred to an
 	earlier fixup/squash with `git commit --fixup/--squash`.
 +
 This option is only valid when the '--interactive' option is used.
 +
 If the '--autosquash' option is enabled by default using the
-configuration variable `rebase.autosquash`, this option can be
+configuration variable `rebase.autoSquash`, this option can be
 used to override and disable this setting.
 
 --[no-]autostash::
 	Automatically create a temporary stash before the operation
 	begins, and apply it after the operation ends.  This means
 	that you can run rebase on a dirty worktree.  However, use
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-receive-pack.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-receive-pack.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-receive-pack.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-receive-pack.txt	2015-05-01 03:12:02.000000000 +0800
@@ -97,13 +97,13 @@
 `GIT_PUSH_CERT_NONCE_SLOP`::
 	"git push --signed" sent a nonce different from what we
 	asked it to send now, but in a different session whose
 	starting time is different by this many seconds from the
 	current session.  Only meaningful when
 	`GIT_PUSH_CERT_NONCE_STATUS` says `SLOP`.
-	Also read about `receive.certnonceslop` variable in
+	Also read about `receive.certNonceSlop` variable in
 	linkgit:git-config[1].
 
 This hook is called before any refname is updated and before any
 fast-forward checks are performed.
 
 If the pre-receive hook exits with a non-zero exit status no updates
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-reflog.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-reflog.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-reflog.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-reflog.txt	2015-05-01 03:12:02.000000000 +0800
@@ -14,88 +14,116 @@
 DESCRIPTION
 -----------
 The command takes various subcommands, and different options
 depending on the subcommand:
 
 [verse]
-'git reflog expire' [--dry-run] [--stale-fix] [--verbose]
-	[--expire=<time>] [--expire-unreachable=<time>] [--all] <refs>...
-'git reflog delete' ref@\{specifier\}...
 'git reflog' ['show'] [log-options] [<ref>]
+'git reflog expire' [--expire=<time>] [--expire-unreachable=<time>]
+	[--rewrite] [--updateref] [--stale-fix]
+	[--dry-run] [--verbose] [--all | <refs>...]
+'git reflog delete' [--rewrite] [--updateref]
+	[--dry-run] [--verbose] ref@\{specifier\}...
+
+Reference logs, or "reflogs", record when the tips of branches and
+other references were updated in the local repository. Reflogs are
+useful in various Git commands, to specify the old value of a
+reference. For example, `HEAD@{2}` means "where HEAD used to be two
+moves ago", `master@{one.week.ago}` means "where master used to point
+to one week ago in this local repository", and so on. See
+linkgit:gitrevisions[7] for more details.
+
+This command manages the information recorded in the reflogs.
+
+The "show" subcommand (which is also the default, in the absence of
+any subcommands) shows the log of the reference provided in the
+command-line (or `HEAD`, by default). The reflog covers all recent
+actions, and in addition the `HEAD` reflog records branch switching.
+`git reflog show` is an alias for `git log -g --abbrev-commit
+--pretty=oneline`; see linkgit:git-log[1] for more information.
+
+The "expire" subcommand prunes older reflog entries. Entries older
+than `expire` time, or entries older than `expire-unreachable` time
+and not reachable from the current tip, are removed from the reflog.
+This is typically not used directly by end users -- instead, see
+linkgit:git-gc[1].
+
+The "delete" subcommand deletes single entries from the reflog. Its
+argument must be an _exact_ entry (e.g. "`git reflog delete
+master@{2}`"). This subcommand is also typically not used directly by
+end users.
 
-Reflog is a mechanism to record when the tip of branches are
-updated.  This command is to manage the information recorded in it.
 
-The subcommand "expire" is used to prune older reflog entries.
-Entries older than `expire` time, or entries older than
-`expire-unreachable` time and not reachable from the current
-tip, are removed from the reflog.  This is typically not used
-directly by the end users -- instead, see linkgit:git-gc[1].
-
-The subcommand "show" (which is also the default, in the absence of any
-subcommands) will take all the normal log options, and show the log of
-the reference provided in the command-line (or `HEAD`, by default).
-The reflog will cover all recent actions (HEAD reflog records branch switching
-as well).  It is an alias for `git log -g --abbrev-commit --pretty=oneline`;
-see linkgit:git-log[1].
-
-The reflog is useful in various Git commands, to specify the old value
-of a reference. For example, `HEAD@{2}` means "where HEAD used to be
-two moves ago", `master@{one.week.ago}` means "where master used to
-point to one week ago", and so on. See linkgit:gitrevisions[7] for
-more details.
+OPTIONS
+-------
 
-To delete single entries from the reflog, use the subcommand "delete"
-and specify the _exact_ entry (e.g. "`git reflog delete master@{2}`").
+Options for `show`
+~~~~~~~~~~~~~~~~~~
 
+`git reflog show` accepts any of the options accepted by `git log`.
 
-OPTIONS
--------
 
---stale-fix::
-	This revamps the logic -- the definition of "broken commit"
-	becomes: a commit that is not reachable from any of the refs and
-	there is a missing object among the commit, tree, or blob
-	objects reachable from it that is not reachable from any of the
-	refs.
-+
-This computation involves traversing all the reachable objects, i.e. it
-has the same cost as 'git prune'.  Fortunately, once this is run, we
-should not have to ever worry about missing objects, because the current
-prune and pack-objects know about reflogs and protect objects referred by
-them.
+Options for `expire`
+~~~~~~~~~~~~~~~~~~~~
+
+--all::
+	Process the reflogs of all references.
 
 --expire=<time>::
-	Entries older than this time are pruned.  Without the
-	option it is taken from configuration `gc.reflogExpire`,
-	which in turn defaults to 90 days.  --expire=all prunes
-	entries regardless of their age; --expire=never turns off
-	pruning of reachable entries (but see --expire-unreachable).
+	Prune entries older than the specified time. If this option is
+	not specified, the expiration time is taken from the
+	configuration setting `gc.reflogExpire`, which in turn
+	defaults to 90 days. `--expire=all` prunes entries regardless
+	of their age; `--expire=never` turns off pruning of reachable
+	entries (but see `--expire-unreachable`).
 
 --expire-unreachable=<time>::
-	Entries older than this time and not reachable from
-	the current tip of the branch are pruned.  Without the
-	option it is taken from configuration
-	`gc.reflogExpireUnreachable`, which in turn defaults to
-	30 days.  --expire-unreachable=all prunes unreachable
-	entries regardless of their age; --expire-unreachable=never
+	Prune entries older than `<time>` that are not reachable from
+	the current tip of the branch. If this option is not
+	specified, the expiration time is taken from the configuration
+	setting `gc.reflogExpireUnreachable`, which in turn defaults
+	to 30 days. `--expire-unreachable=all` prunes unreachable
+	entries regardless of their age; `--expire-unreachable=never`
 	turns off early pruning of unreachable entries (but see
-	--expire).
-
---all::
-	Instead of listing <refs> explicitly, prune all refs.
+	`--expire`).
 
 --updateref::
-	Update the ref with the sha1 of the top reflog entry (i.e.
-	<ref>@\{0\}) after expiring or deleting.
+	Update the reference to the value of the top reflog entry (i.e.
+	<ref>@\{0\}) if the previous top entry was pruned.  (This
+	option is ignored for symbolic references.)
 
 --rewrite::
-	While expiring or deleting, adjust each reflog entry to ensure
-	that the `old` sha1 field points to the `new` sha1 field of the
-	previous entry.
+	If a reflog entry's predecessor is pruned, adjust its "old"
+	SHA-1 to be equal to the "new" SHA-1 field of the entry that
+	now precedes it.
+
+--stale-fix::
+	Prune any reflog entries that point to "broken commits". A
+	broken commit is a commit that is not reachable from any of
+	the reference tips and that refers, directly or indirectly, to
+	a missing commit, tree, or blob object.
++
+This computation involves traversing all the reachable objects, i.e. it
+has the same cost as 'git prune'.  It is primarily intended to fix
+corruption caused by garbage collecting using older versions of Git,
+which didn't protect objects referred to by reflogs.
+
+-n::
+--dry-run::
+	Do not actually prune any entries; just show what would have
+	been pruned.
 
 --verbose::
 	Print extra information on screen.
 
+
+Options for `delete`
+~~~~~~~~~~~~~~~~~~~~
+
+`git reflog delete` accepts options `--updateref`, `--rewrite`, `-n`,
+`--dry-run`, and `--verbose`, with the same meanings as when they are
+used with `expire`.
+
+
 GIT
 ---
 Part of the linkgit:git[1] suite
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-repack.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-repack.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-repack.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-repack.txt	2015-05-01 03:12:02.000000000 +0800
@@ -112,21 +112,21 @@
 
 -b::
 --write-bitmap-index::
 	Write a reachability bitmap index as part of the repack. This
 	only makes sense when used with `-a` or `-A`, as the bitmaps
 	must be able to refer to all reachable objects. This option
-	overrides the setting of `pack.writebitmaps`.
+	overrides the setting of `pack.writeBitmaps`.
 
 --pack-kept-objects::
 	Include objects in `.keep` files when repacking.  Note that we
 	still do not delete `.keep` packs after `pack-objects` finishes.
 	This means that we may duplicate objects, but this makes the
 	option safe to use when there are concurrent pushes or fetches.
 	This option is generally only useful if you are writing bitmaps
-	with `-b` or `pack.writebitmaps`, as it ensures that the
+	with `-b` or `pack.writeBitmaps`, as it ensures that the
 	bitmapped packfile has the necessary objects.
 
 Configuration
 -------------
 
 By default, the command passes `--delta-base-offset` option to
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-rerere.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-rerere.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-rerere.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-rerere.txt	2015-05-01 03:12:02.000000000 +0800
@@ -66,13 +66,13 @@
 'gc'::
 
 Prune records of conflicted merges that
 occurred a long time ago.  By default, unresolved conflicts older
 than 15 days and resolved conflicts older than 60
 days are pruned.  These defaults are controlled via the
-`gc.rerereunresolved` and `gc.rerereresolved` configuration
+`gc.rerereUnresolved` and `gc.rerereResolved` configuration
 variables respectively.
 
 
 DISCUSSION
 ----------
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-send-email.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-send-email.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-send-email.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-send-email.txt	2015-05-01 03:12:02.000000000 +0800
@@ -44,13 +44,13 @@
 Composing
 ~~~~~~~~~
 
 --annotate::
 	Review and edit each patch you're about to send. Default is the value
 	of 'sendemail.annotate'. See the CONFIGURATION section for
-	'sendemail.multiedit'.
+	'sendemail.multiEdit'.
 
 --bcc=<address>::
 	Specify a "Bcc:" value for each email. Default is the value of
 	'sendemail.bcc'.
 +
 The --bcc option must be repeated for each user you want on the bcc list.
@@ -70,13 +70,13 @@
 (what you type after the headers and a blank line) only contains blank
 (or Git: prefixed) lines, the summary won't be sent, but From, Subject,
 and In-Reply-To headers will be used unless they are removed.
 +
 Missing From or In-Reply-To headers will be prompted for.
 +
-See the CONFIGURATION section for 'sendemail.multiedit'.
+See the CONFIGURATION section for 'sendemail.multiEdit'.
 
 --from=<address>::
 	Specify the sender of the emails.  If not specified on the command line,
 	the value of the 'sendemail.from' configuration option is used.  If
 	neither the command-line option nor 'sendemail.from' are set, then the
 	user will be prompted for the value.  The default for the prompt will be
@@ -153,60 +153,60 @@
 --envelope-sender=<address>::
 	Specify the envelope sender used to send the emails.
 	This is useful if your default address is not the address that is
 	subscribed to a list. In order to use the 'From' address, set the
 	value to "auto". If you use the sendmail binary, you must have
 	suitable privileges for the -f parameter.  Default is the value of the
-	'sendemail.envelopesender' configuration variable; if that is
+	'sendemail.envelopeSender' configuration variable; if that is
 	unspecified, choosing the envelope sender is left to your MTA.
 
 --smtp-encryption=<encryption>::
 	Specify the encryption to use, either 'ssl' or 'tls'.  Any other
 	value reverts to plain SMTP.  Default is the value of
-	'sendemail.smtpencryption'.
+	'sendemail.smtpEncryption'.
 
 --smtp-domain=<FQDN>::
 	Specifies the Fully Qualified Domain Name (FQDN) used in the
 	HELO/EHLO command to the SMTP server.  Some servers require the
 	FQDN to match your IP address.  If not set, git send-email attempts
 	to determine your FQDN automatically.  Default is the value of
-	'sendemail.smtpdomain'.
+	'sendemail.smtpDomain'.
 
 --smtp-pass[=<password>]::
 	Password for SMTP-AUTH. The argument is optional: If no
 	argument is specified, then the empty string is used as
-	the password. Default is the value of 'sendemail.smtppass',
+	the password. Default is the value of 'sendemail.smtpPass',
 	however '--smtp-pass' always overrides this value.
 +
 Furthermore, passwords need not be specified in configuration files
 or on the command line. If a username has been specified (with
-'--smtp-user' or a 'sendemail.smtpuser'), but no password has been
-specified (with '--smtp-pass' or 'sendemail.smtppass'), then
+'--smtp-user' or a 'sendemail.smtpUser'), but no password has been
+specified (with '--smtp-pass' or 'sendemail.smtpPass'), then
 a password is obtained using 'git-credential'.
 
 --smtp-server=<host>::
 	If set, specifies the outgoing SMTP server to use (e.g.
 	`smtp.example.com` or a raw IP address).  Alternatively it can
 	specify a full pathname of a sendmail-like program instead;
 	the program must support the `-i` option.  Default value can
-	be specified by the 'sendemail.smtpserver' configuration
+	be specified by the 'sendemail.smtpServer' configuration
 	option; the built-in default is `/usr/sbin/sendmail` or
 	`/usr/lib/sendmail` if such program is available, or
 	`localhost` otherwise.
 
 --smtp-server-port=<port>::
 	Specifies a port different from the default port (SMTP
 	servers typically listen to smtp port 25, but may also listen to
 	submission port 587, or the common SSL smtp port 465);
 	symbolic port names (e.g. "submission" instead of 587)
 	are also accepted. The port can also be set with the
-	'sendemail.smtpserverport' configuration variable.
+	'sendemail.smtpServerPort' configuration variable.
 
 --smtp-server-option=<option>::
 	If set, specifies the outgoing SMTP server option to use.
-	Default value can be specified by the 'sendemail.smtpserveroption'
+	Default value can be specified by the 'sendemail.smtpServerOption'
 	configuration option.
 +
 The --smtp-server-option option must be repeated for each option you want
 to pass to the server. Likewise, different lines in the configuration files
 must be used for each option.
 
@@ -222,14 +222,14 @@
 	to disable certificate verification. Defaults to the value of the
 	'sendemail.smtpsslcertpath' configuration variable, if set, or the
 	backing SSL library's compiled-in default otherwise (which should
 	be the best choice on most platforms).
 
 --smtp-user=<user>::
-	Username for SMTP-AUTH. Default is the value of 'sendemail.smtpuser';
-	if a username is not specified (with '--smtp-user' or 'sendemail.smtpuser'),
+	Username for SMTP-AUTH. Default is the value of 'sendemail.smtpUser';
+	if a username is not specified (with '--smtp-user' or 'sendemail.smtpUser'),
 	then authentication is not attempted.
 
 --smtp-debug=0|1::
 	Enable (1) or disable (0) debug output. If enabled, SMTP
 	commands and replies will be printed. Useful to debug TLS
 	connection and authentication problems.
@@ -244,20 +244,20 @@
 	Default is the value of 'sendemail.tocmd' configuration value.
 
 --cc-cmd=<command>::
 	Specify a command to execute once per patch file which
 	should generate patch file specific "Cc:" entries.
 	Output of this command must be single email address per line.
-	Default is the value of 'sendemail.cccmd' configuration value.
+	Default is the value of 'sendemail.ccCmd' configuration value.
 
 --[no-]chain-reply-to::
 	If this is set, each email will be sent as a reply to the previous
 	email sent.  If disabled with "--no-chain-reply-to", all emails after
 	the first will be sent as replies to the first email sent.  When using
 	this, it is recommended that the first file given be an overview of the
-	entire patch series. Disabled by default, but the 'sendemail.chainreplyto'
+	entire patch series. Disabled by default, but the 'sendemail.chainReplyTo'
 	configuration variable can be used to enable it.
 
 --identity=<identity>::
 	A configuration identity. When given, causes values in the
 	'sendemail.<identity>' subsection to take precedence over
 	values in the 'sendemail' section. The default identity is
@@ -301,13 +301,13 @@
 Default is the value of 'sendemail.suppresscc' configuration value; if
 that is unspecified, default to 'self' if --suppress-from is
 specified, as well as 'body' if --no-signed-off-cc is specified.
 
 --[no-]suppress-from::
 	If this is set, do not add the From: address to the cc: list.
-	Default is the value of 'sendemail.suppressfrom' configuration
+	Default is the value of 'sendemail.suppressFrom' configuration
 	value; if that is unspecified, default to --no-suppress-from.
 
 --[no-]thread::
 	If this is set, the In-Reply-To and References headers will be
 	added to each email sent.  Whether each mail refers to the
 	previous email (`deep` threading per 'git format-patch'
@@ -374,21 +374,21 @@
 	Send emails even if safety checks would prevent it.
 
 
 CONFIGURATION
 -------------
 
-sendemail.aliasesfile::
+sendemail.aliasesFile::
 	To avoid typing long email addresses, point this to one or more
-	email aliases files.  You must also supply 'sendemail.aliasfiletype'.
+	email aliases files.  You must also supply 'sendemail.aliasFileType'.
 
-sendemail.aliasfiletype::
-	Format of the file(s) specified in sendemail.aliasesfile. Must be
+sendemail.aliasFileType::
+	Format of the file(s) specified in sendemail.aliasesFile. Must be
 	one of 'mutt', 'mailrc', 'pine', 'elm', or 'gnus'.
 
-sendemail.multiedit::
+sendemail.multiEdit::
 	If true (default), a single editor instance will be spawned to edit
 	files you have to edit (patches when '--annotate' is used, and the
 	summary when '--compose' is used). If false, files will be edited one
 	after the other, spawning a new editor each time.
 
 sendemail.confirm::
@@ -401,16 +401,16 @@
 Use gmail as the smtp server
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 To use 'git send-email' to send your patches through the GMail SMTP server,
 edit ~/.gitconfig to specify your account settings:
 
 	[sendemail]
-		smtpencryption = tls
-		smtpserver = smtp.gmail.com
-		smtpuser = yourname@gmail.com
-		smtpserverport = 587
+		smtpEncryption = tls
+		smtpServer = smtp.gmail.com
+		smtpUser = yourname@gmail.com
+		smtpServerPort = 587
 
 Once your commits are ready to be sent to the mailing list, run the
 following commands:
 
 	$ git format-patch --cover-letter -M origin/master -o outgoing/
 	$ edit outgoing/0000-*
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-send-pack.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-send-pack.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-send-pack.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-send-pack.txt	2015-05-01 03:12:02.000000000 +0800
@@ -6,13 +6,13 @@
 git-send-pack - Push objects over Git protocol to another repository
 
 
 SYNOPSIS
 --------
 [verse]
-'git send-pack' [--all] [--dry-run] [--force] [--receive-pack=<git-receive-pack>] [--verbose] [--thin] [<host>:]<directory> [<ref>...]
+'git send-pack' [--all] [--dry-run] [--force] [--receive-pack=<git-receive-pack>] [--verbose] [--thin] [--atomic] [<host>:]<directory> [<ref>...]
 
 DESCRIPTION
 -----------
 Usually you would want to use 'git push', which is a
 higher-level wrapper of this command, instead. See linkgit:git-push[1].
 
@@ -59,12 +59,17 @@
 	Run verbosely.
 
 --thin::
 	Send a "thin" pack, which records objects in deltified form based
 	on objects not included in the pack to reduce network traffic.
 
+--atomic::
+	Use an atomic transaction for updating the refs. If any of the refs
+	fails to update then the entire push will fail without changing any
+	refs.
+
 <host>::
 	A remote host to house the repository.  When this
 	part is specified, 'git-receive-pack' is invoked via
 	ssh.
 
 <directory>::
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-status.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-status.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-status.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-status.txt	2015-05-01 03:12:02.000000000 +0800
@@ -38,12 +38,20 @@
 	across Git versions and regardless of user configuration. See
 	below for details.
 
 --long::
 	Give the output in the long-format. This is the default.
 
+-v::
+--verbose::
+	In addition to the names of files that have been changed, also
+	show the textual changes that are staged to be committed
+	(i.e., like the output of `git diff --cached`). If `-v` is specified
+	twice, then also show the changes in the working tree that
+	have not yet been staged (i.e., like the output of `git diff`).
+
 -u[<mode>]::
 --untracked-files[=<mode>]::
 	Show untracked files.
 +
 The mode parameter is optional (defaults to 'all'), and is used to
 specify the handling of untracked files.
@@ -74,13 +82,13 @@
 	"untracked" is used submodules are not considered dirty when they only
 	contain untracked content (but they are still scanned for modified
 	content). Using "dirty" ignores all changes to the work tree of submodules,
 	only changes to the commits stored in the superproject are shown (this was
 	the behavior before 1.7.0). Using "all" hides all changes to submodules
 	(and suppresses the output of submodule summaries when the config option
-	`status.submodulesummary` is set).
+	`status.submoduleSummary` is set).
 
 --ignored::
 	Show ignored files as well.
 
 -z::
 	Terminate entries with NUL, instead of LF.  This implies
@@ -204,13 +212,13 @@
 to colorize its output.
 
 If the config variable `status.relativePaths` is set to false, then all
 paths shown are relative to the repository root, not to the current
 directory.
 
-If `status.submodulesummary` is set to a non zero number or true (identical
+If `status.submoduleSummary` is set to a non zero number or true (identical
 to -1 or an unlimited number), the submodule summary will be enabled for
 the long format and a summary of commits for modified submodules will be
 shown (see --summary-limit option of linkgit:git-submodule[1]). Please note
 that the summary output from the status command will be suppressed for all
 submodules when `diff.ignoreSubmodules` is set to 'all' or only for those
 submodules where `submodule.<name>.ignore=all`. To also view the summary for
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-tag.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-tag.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git-tag.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git-tag.txt	2015-05-01 03:12:02.000000000 +0800
@@ -95,16 +95,19 @@
 	using fnmatch(3)).  Multiple patterns may be given; if any of
 	them matches, the tag is shown.
 
 --sort=<type>::
 	Sort in a specific order. Supported type is "refname"
 	(lexicographic order), "version:refname" or "v:refname" (tag
-	names are treated as versions). Prepend "-" to reverse sort
-	order. When this option is not given, the sort order defaults to the
-	value configured for the 'tag.sort' variable if it exists, or
-	lexicographic order otherwise. See linkgit:git-config[1].
+	names are treated as versions). The "version:refname" sort
+	order can also be affected by the
+	"versionsort.prereleaseSuffix" configuration variable. Prepend
+	"-" to reverse sort order. When this option is not given, the
+	sort order defaults to the value configured for the 'tag.sort'
+	variable if it exists, or lexicographic order otherwise. See
+	linkgit:git-config[1].
 
 --column[=<options>]::
 --no-column::
 	Display tag listing in columns. See configuration variable
 	column.tag for option syntax.`--column` and `--no-column`
 	without options are equivalent to 'always' and 'never' respectively.
@@ -158,13 +161,13 @@
 committer identity (of the form "Your Name <\your@email.address>") to
 find a key.  If you want to use a different default key, you can specify
 it in the repository configuration as follows:
 
 -------------------------------------
 [user]
-    signingkey = <gpg-key-id>
+    signingKey = <gpg-key-id>
 -------------------------------------
 
 
 DISCUSSION
 ----------
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/git.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/git.txt	2015-05-01 03:12:02.000000000 +0800
@@ -40,31 +40,32 @@
 
 You are reading the documentation for the latest (possibly
 unreleased) version of Git, that is available from the 'master'
 branch of the `git.git` repository.
 Documentation for older releases are available here:
 
-* link:v2.3.10/git.html[documentation for release 2.3.10]
+* link:v2.4.0/git.html[documentation for release 2.4]
+
+* release notes for
+  link:RelNotes/2.4.0.txt[2.4].
+
+* link:v2.3.7/git.html[documentation for release 2.3.7]
 
 * release notes for
-  link:RelNotes/2.3.10.txt[2.3.10],
-  link:RelNotes/2.3.9.txt[2.3.9],
-  link:RelNotes/2.3.8.txt[2.3.8],
   link:RelNotes/2.3.7.txt[2.3.7],
   link:RelNotes/2.3.6.txt[2.3.6],
   link:RelNotes/2.3.5.txt[2.3.5],
   link:RelNotes/2.3.4.txt[2.3.4],
   link:RelNotes/2.3.3.txt[2.3.3],
   link:RelNotes/2.3.2.txt[2.3.2],
   link:RelNotes/2.3.1.txt[2.3.1],
   link:RelNotes/2.3.0.txt[2.3].
 
-* link:v2.2.3/git.html[documentation for release 2.2.3]
+* link:v2.2.2/git.html[documentation for release 2.2.2]
 
 * release notes for
-  link:RelNotes/2.2.3.txt[2.2.3],
   link:RelNotes/2.2.2.txt[2.2.2],
   link:RelNotes/2.2.1.txt[2.2.1],
   link:RelNotes/2.2.0.txt[2.2].
 
 * link:v2.1.4/git.html[documentation for release 2.1.4]
 
@@ -925,13 +926,13 @@
 for further details.
 
 'GIT_ASKPASS'::
 	If this environment variable is set, then Git commands which need to
 	acquire passwords or passphrases (e.g. for HTTP or IMAP authentication)
 	will call this program with a suitable prompt as command-line argument
-	and read the password from its STDOUT. See also the 'core.askpass'
+	and read the password from its STDOUT. See also the 'core.askPass'
 	option in linkgit:git-config[1].
 
 'GIT_TERMINAL_PROMPT'::
 	If this environment variable is set to `0`, git will not prompt
 	on the terminal (e.g., when asking for HTTP authentication).
 
@@ -1043,39 +1044,12 @@
 	this variable automatically when performing destructive
 	operations like linkgit:git-prune[1]. You should not need to set
 	it yourself unless you want to be paranoid about making sure
 	an operation has touched every ref (e.g., because you are
 	cloning a repository to make a backup).
 
-`GIT_ALLOW_PROTOCOL`::
-	If set, provide a colon-separated list of protocols which are
-	allowed to be used with fetch/push/clone. This is useful to
-	restrict recursive submodule initialization from an untrusted
-	repository. Any protocol not mentioned will be disallowed (i.e.,
-	this is a whitelist, not a blacklist). If the variable is not
-	set at all, all protocols are enabled.  The protocol names
-	currently used by git are:
-
-	  - `file`: any local file-based path (including `file://` URLs,
-	    or local paths)
-
-	  - `git`: the anonymous git protocol over a direct TCP
-	    connection (or proxy, if configured)
-
-	  - `ssh`: git over ssh (including `host:path` syntax,
-	    `git+ssh://`, etc).
-
-	  - `rsync`: git over rsync
-
-	  - `http`: git over http, both "smart http" and "dumb http".
-	    Note that this does _not_ include `https`; if you want both,
-	    you should specify both as `http:https`.
-
-	  - any external helpers are named by their protocol (e.g., use
-	    `hg` to allow the `git-remote-hg` helper)
-
 
 Discussion[[Discussion]]
 ------------------------
 
 More detail on the following is available from the
 link:user-manual.html#git-concepts[Git concepts chapter of the
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/gitweb.conf.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/gitweb.conf.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/gitweb.conf.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/gitweb.conf.txt	2015-05-01 03:12:02.000000000 +0800
@@ -703,13 +703,13 @@
 	Enable showing size of blobs (ordinary files) in a "tree" view, in a
 	separate column, similar to what `ls -l` does; see description of
 	`-l` option in linkgit:git-ls-tree[1] manpage.  This costs a bit of
 	I/O.  Enabled by default.
 +
 This feature can be configured on a per-repository basis via
-repository's `gitweb.showsizes` configuration variable (boolean).
+repository's `gitweb.showSizes` configuration variable (boolean).
 
 patches::
 	Enable and configure "patches" view, which displays list of commits in email
 	(plain text) output format; see also linkgit:git-format-patch[1].
 	The value is the maximum number of patches in a patchset generated
 	in "patches" view.  Set the 'default' field to a list containing single
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/line-range-format.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/line-range-format.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/line-range-format.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/line-range-format.txt	2015-05-01 03:12:02.000000000 +0800
@@ -19,12 +19,11 @@
 - +offset or -offset
 +
 This is only valid for <end> and will specify a number
 of lines before or after the line given by <start>.
 
 +
-If ``:<funcname>'' is given in place of <start> and <end>, it is a
-regular expression that denotes the range from the first funcname line
-that matches <funcname>, up to the next funcname line. ``:<funcname>''
-searches from the end of the previous `-L` range, if any, otherwise
-from the start of file. ``^:<funcname>'' searches from the start of
-file.
+If ``:<regex>'' is given in place of <start> and <end>, it denotes the range
+from the first funcname line that matches <regex>, up to the next
+funcname line. ``:<regex>'' searches from the end of the previous `-L` range,
+if any, otherwise from the start of file.
+``^:<regex>'' searches from the start of file.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/merge-config.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/merge-config.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/merge-config.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/merge-config.txt	2015-05-01 03:12:02.000000000 +0800
@@ -1,7 +1,7 @@
-merge.conflictstyle::
+merge.conflictStyle::
 	Specify the style in which conflicted hunks are written out to
 	working tree files upon merge.  The default is "merge", which
 	shows a `<<<<<<<` conflict marker, changes made by one side,
 	a `=======` marker, changes made by the other side, and then
 	a `>>>>>>>` marker.  An alternate style, "diff3", adds a `|||||||`
 	marker and the original text before the `=======` marker.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/pretty-options.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/pretty-options.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/pretty-options.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/pretty-options.txt	2015-05-01 03:12:02.000000000 +0800
@@ -1,14 +1,18 @@
 --pretty[=<format>]::
 --format=<format>::
 
 	Pretty-print the contents of the commit logs in a given format,
 	where '<format>' can be one of 'oneline', 'short', 'medium',
-	'full', 'fuller', 'email', 'raw' and 'format:<string>'.  See
-	the "PRETTY FORMATS" section for some additional details for each
-	format.  When omitted, the format defaults to 'medium'.
+	'full', 'fuller', 'email', 'raw', 'format:<string>'
+	and 'tformat:<string>'.  When '<format>' is none of the above,
+	and has '%placeholder' in it, it acts as if
+	'--pretty=tformat:<format>' were given.
++
+See the "PRETTY FORMATS" section for some additional details for each
+format.  When '=<format>' part is omitted, it defaults to 'medium'.
 +
 Note: you can specify the default pretty format in the repository
 configuration (see linkgit:git-config[1]).
 
 --abbrev-commit::
 	Instead of showing the full 40-byte hexadecimal commit object
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/RelNotes: 2.2.3.txt
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/RelNotes: 2.3.10.txt
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/RelNotes: 2.3.8.txt
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/RelNotes: 2.3.9.txt
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/RelNotes: 2.4.0.txt
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/rev-list-options.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/rev-list-options.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/rev-list-options.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/rev-list-options.txt	2015-05-01 03:12:02.000000000 +0800
@@ -56,19 +56,23 @@
 	Limit the commits output to ones with log message that
 	matches the specified pattern (regular expression).  With
 	more than one `--grep=<pattern>`, commits whose message
 	matches any of the given patterns are chosen (but see
 	`--all-match`).
 +
-When `--show-notes` is in effect, the message from the notes as
-if it is part of the log message.
+When `--show-notes` is in effect, the message from the notes is
+matched as if it were part of the log message.
 
 --all-match::
 	Limit the commits output to ones that match all given `--grep`,
 	instead of ones that match at least one.
 
+--invert-grep::
+	Limit the commits output to ones with log message that do not
+	match the pattern specified with `--grep=<pattern>`.
+
 -i::
 --regexp-ignore-case::
 	Match the regular expression limiting patterns without regard to letter
 	case.
 
 --basic-regexp::
@@ -116,13 +120,14 @@
 	Follow only the first parent commit upon seeing a merge
 	commit.  This option can give a better overview when
 	viewing the evolution of a particular topic branch,
 	because merges into a topic branch tend to be only about
 	adjusting to updated upstream from time to time, and
 	this option allows you to ignore the individual commits
-	brought in to your history by such a merge.
+	brought in to your history by such a merge. Cannot be
+	combined with --bisect.
 
 --not::
 	Reverses the meaning of the '{caret}' prefix (or lack thereof)
 	for all following revision specifiers, up to the next `--not`.
 
 --all::
@@ -178,13 +183,13 @@
 
 ifndef::git-rev-list[]
 --bisect::
 	Pretend as if the bad bisection ref `refs/bisect/bad`
 	was listed and as if it was followed by `--not` and the good
 	bisection refs `refs/bisect/good-*` on the command
-	line.
+	line. Cannot be combined with --first-parent.
 endif::git-rev-list[]
 
 --stdin::
 	In addition to the '<commit>' listed on the command
 	line, read them from the standard input. If a '--' separator is
 	seen, stop reading commits and start reading paths to limit the
@@ -559,13 +564,13 @@
 	$ git rev-list midpoint ^bar ^baz
 -----------------------------------------------------------------------
 +
 would be of roughly the same length.  Finding the change which
 introduces a regression is thus reduced to a binary search: repeatedly
 generate and test new 'midpoint's until the commit chain is of length
-one.
+one. Cannot be combined with --first-parent.
 
 --bisect-vars::
 	This calculates the same as `--bisect`, except that refs in
 	`refs/bisect/` are not used, and except that this outputs
 	text ready to be eval'ed by the shell. These lines will assign the
 	name of the midpoint revision to the variable `bisect_rev`, and the
@@ -672,12 +677,13 @@
 	Only show the given commits, but do not traverse their ancestors.
 	This has no effect if a range is specified. If the argument
 	`unsorted` is given, the commits are shown in the order they were
 	given on the command line. Otherwise (if `sorted` or no argument
 	was given), the commits are shown in reverse chronological order
 	by commit time.
+	Cannot be combined with `--graph`.
 
 --do-walk::
 	Overrides a previous `--no-walk`.
 
 Commit Formatting
 ~~~~~~~~~~~~~~~~~
@@ -774,12 +780,13 @@
 
 --graph::
 	Draw a text-based graphical representation of the commit history
 	on the left hand side of the output.  This may cause extra lines
 	to be printed in between commits, in order for the graph history
 	to be drawn properly.
+	Cannot be combined with `--no-walk`.
 +
 This enables parent rewriting, see 'History Simplification' below.
 +
 This implies the `--topo-order` option by default, but the
 `--date-order` option may also be specified.
 
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/technical: api-error-handling.txt
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/technical: api-strbuf.txt
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/technical/protocol-capabilities.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/technical/protocol-capabilities.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/technical/protocol-capabilities.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/technical/protocol-capabilities.txt	2015-05-01 03:12:02.000000000 +0800
@@ -15,14 +15,15 @@
 
 Server MUST diagnose and abort if capabilities it does not understand
 was sent.  Server MUST NOT ignore capabilities that client requested
 and server advertised.  As a consequence of these rules, server MUST
 NOT advertise capabilities it does not understand.
 
-The 'report-status', 'delete-refs', 'quiet', and 'push-cert' capabilities
-are sent and recognized by the receive-pack (push to server) process.
+The 'atomic', 'report-status', 'delete-refs', 'quiet', and 'push-cert'
+capabilities are sent and recognized by the receive-pack (push to server)
+process.
 
 The 'ofs-delta' and 'side-band-64k' capabilities are sent and recognized
 by both upload-pack and receive-pack protocols.  The 'agent' capability
 may optionally be sent in both protocols.
 
 All other capabilities are only recognized by the upload-pack (fetch
@@ -241,12 +242,20 @@
 capable of silencing human-readable progress output which otherwise may
 be shown when processing the received pack. A send-pack client should
 respond with the 'quiet' capability to suppress server-side progress
 reporting if the local progress reporting is also being suppressed
 (e.g., via `push -q`, or if stderr does not go to a tty).
 
+atomic
+------
+
+If the server sends the 'atomic' capability it is capable of accepting
+atomic pushes. If the pushing client requests this capability, the server
+will update the refs in one atomic transaction. Either all refs are
+updated or none.
+
 allow-tip-sha1-in-want
 ----------------------
 
 If the upload-pack server advertises this capability, fetch-pack may
 send "want" lines with SHA-1s that exist at the server but are not
 advertised by upload-pack.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/user-manual.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/user-manual.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Documentation/user-manual.txt	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Documentation/user-manual.txt	2015-05-01 03:12:02.000000000 +0800
@@ -1197,13 +1197,13 @@
 patterns (such as patterns matching build output files) would also make sense
 for other users who clone your repository.
 
 If you wish the exclude patterns to affect only certain repositories
 (instead of every repository for a given project), you may instead put
 them in a file in your repository named `.git/info/exclude`, or in any
-file specified by the `core.excludesfile` configuration variable.
+file specified by the `core.excludesFile` configuration variable.
 Some Git commands can also take exclude patterns directly on the
 command line.  See linkgit:gitignore[5] for the details.
 
 [[how-to-merge]]
 How to merge
 ------------
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/editor.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/editor.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/editor.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/editor.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/entry.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/entry.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/entry.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/entry.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/environment.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/environment.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/environment.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/environment.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ewah/bitmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ewah/bitmap.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ewah/bitmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ewah/bitmap.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ewah/ewah_bitmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ewah/ewah_bitmap.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ewah/ewah_bitmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ewah/ewah_bitmap.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ewah/ewah_io.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ewah/ewah_io.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ewah/ewah_io.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ewah/ewah_io.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ewah/ewah_rlw.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ewah/ewah_rlw.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ewah/ewah_rlw.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ewah/ewah_rlw.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/exec_cmd.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/exec_cmd.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/exec_cmd.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/exec_cmd.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/fast-import.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/fast-import.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/fast-import.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/fast-import.c	2015-05-01 03:12:02.000000000 +0800
@@ -1714,13 +1714,13 @@
 			return -1;
 		}
 	}
 	transaction = ref_transaction_begin(&err);
 	if (!transaction ||
 	    ref_transaction_update(transaction, b->name, b->sha1, old_sha1,
-				   0, 1, msg, &err) ||
+				   0, msg, &err) ||
 	    ref_transaction_commit(transaction, &err)) {
 		ref_transaction_free(transaction);
 		error("%s", err.buf);
 		strbuf_release(&err);
 		return -1;
 	}
@@ -1754,14 +1754,14 @@
 		goto cleanup;
 	}
 	for (t = first_tag; t; t = t->next_tag) {
 		strbuf_reset(&ref_name);
 		strbuf_addf(&ref_name, "refs/tags/%s", t->name);
 
-		if (ref_transaction_update(transaction, ref_name.buf, t->sha1,
-					   NULL, 0, 0, msg, &err)) {
+		if (ref_transaction_update(transaction, ref_name.buf,
+					   t->sha1, NULL, 0, msg, &err)) {
 			failure |= error("%s", err.buf);
 			goto cleanup;
 		}
 	}
 	if (ref_transaction_commit(transaction, &err))
 		failure |= error("%s", err.buf);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/fast-import.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/fast-import.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/fast-import.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/fast-import.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/fetch-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/fetch-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/fetch-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/fetch-pack.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/fsck.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/fsck.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/fsck.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/fsck.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gettext.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gettext.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gettext.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gettext.c	2015-05-01 03:12:02.000000000 +0800
@@ -15,12 +15,37 @@
 #	else
 #		include <langinfo.h>
 #		define locale_charset() nl_langinfo(CODESET)
 #	endif
 #endif
 
+/*
+ * Guess the user's preferred languages from the value in LANGUAGE environment
+ * variable and LC_MESSAGES locale category if NO_GETTEXT is not defined.
+ *
+ * The result can be a colon-separated list like "ko:ja:en".
+ */
+const char *get_preferred_languages(void)
+{
+	const char *retval;
+
+	retval = getenv("LANGUAGE");
+	if (retval && *retval)
+		return retval;
+
+#ifndef NO_GETTEXT
+	retval = setlocale(LC_MESSAGES, NULL);
+	if (retval && *retval &&
+		strcmp(retval, "C") &&
+		strcmp(retval, "POSIX"))
+		return retval;
+#endif
+
+	return NULL;
+}
+
 #ifdef GETTEXT_POISON
 int use_gettext_poison(void)
 {
 	static int poison_requested = -1;
 	if (poison_requested == -1)
 		poison_requested = getenv("GIT_GETTEXT_POISON") ? 1 : 0;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gettext.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gettext.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gettext.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gettext.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gettext.h	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gettext.h	2015-05-01 03:12:02.000000000 +0800
@@ -60,9 +60,35 @@
 	if (use_gettext_poison())
 		return "# GETTEXT POISON #";
 	return ngettext(msgid, plu, n);
 }
 
 /* Mark msgid for translation but do not translate it. */
+#if !USE_PARENS_AROUND_GETTEXT_N
 #define N_(msgid) msgid
+#else
+/*
+ * Strictly speaking, this will lead to invalid C when
+ * used this way:
+ *	static const char s[] = N_("FOO");
+ * which will expand to
+ *	static const char s[] = ("FOO");
+ * and in valid C, the initializer on the right hand side must
+ * be without the parentheses.  But many compilers do accept it
+ * as a language extension and it will allow us to catch mistakes
+ * like:
+ *	static const char *msgs[] = {
+ *		N_("one")
+ *		N_("two"),
+ *		N_("three"),
+ *		NULL
+ *	};
+ * (notice the missing comma on one of the lines) by forcing
+ * a compilation error, because parenthesised ("one") ("two")
+ * will not get silently turned into ("onetwo").
+ */
+#define N_(msgid) (msgid)
+#endif
+
+const char *get_preferred_languages(void);
 
 #endif
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gettext.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gettext.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-add and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-add differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-annotate and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-annotate differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-apply and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-apply differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-archive and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-archive differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-bisect /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-bisect
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-bisect	2017-10-10 12:31:41.866632160 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-bisect	2017-10-10 13:04:11.450560709 +0800
@@ -124,13 +124,13 @@
 	then
 		# Reset to the rev from where we started.
 		start_head=$(cat "$GIT_DIR/BISECT_START")
 		if test "z$mode" != "z--no-checkout"
 		then
 			git checkout "$start_head" -- ||
-			die "$(eval_gettext "Checking out '\$start_head' failed. Try 'git bisect reset <validbranch>'.")"
+			die "$(eval_gettext "Checking out '\$start_head' failed. Try 'git bisect reset <valid-branch>'.")"
 		fi
 	else
 		# Get rev from where we start.
 		case "$head" in
 		refs/heads/*|$_x40)
 			# This error message should only be triggered by
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-bisect--helper and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-bisect--helper differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-bisect.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-bisect.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-bisect.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-bisect.sh	2015-05-01 03:12:02.000000000 +0800
@@ -124,13 +124,13 @@
 	then
 		# Reset to the rev from where we started.
 		start_head=$(cat "$GIT_DIR/BISECT_START")
 		if test "z$mode" != "z--no-checkout"
 		then
 			git checkout "$start_head" -- ||
-			die "$(eval_gettext "Checking out '\$start_head' failed. Try 'git bisect reset <validbranch>'.")"
+			die "$(eval_gettext "Checking out '\$start_head' failed. Try 'git bisect reset <valid-branch>'.")"
 		fi
 	else
 		# Get rev from where we start.
 		case "$head" in
 		refs/heads/*|$_x40)
 			# This error message should only be triggered by
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-blame and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-blame differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-branch and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-branch differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-bundle and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-bundle differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git.c	2015-05-01 03:12:02.000000000 +0800
@@ -3,13 +3,13 @@
 #include "help.h"
 #include "run-command.h"
 
 const char git_usage_string[] =
 	"git [--version] [--help] [-C <path>] [-c name=value]\n"
 	"           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n"
-	"           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]\n"
+	"           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]\n"
 	"           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n"
 	"           <command> [<args>]";
 
 const char git_more_info_string[] =
 	N_("'git help -a' and 'git help -g' list available subcommands and some\n"
 	   "concept guides. See 'git help <command>' or 'git help <concept>'\n"
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-cat-file and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-cat-file differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-check-attr and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-check-attr differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-check-ignore and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-check-ignore differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-check-mailmap and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-check-mailmap differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-checkout and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-checkout differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-checkout-index and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-checkout-index differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-check-ref-format and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-check-ref-format differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-cherry and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-cherry differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-cherry-pick and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-cherry-pick differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-clean and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-clean differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-clone and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-clone differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-column and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-column differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-commit and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-commit differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-commit-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-commit-tree differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-compat-util.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-compat-util.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-compat-util.h	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-compat-util.h	2015-05-01 03:12:02.000000000 +0800
@@ -124,12 +124,15 @@
 #include <syslog.h>
 #ifndef NO_SYS_POLL_H
 #include <sys/poll.h>
 #else
 #include <poll.h>
 #endif
+#ifdef HAVE_BSD_SYSCTL
+#include <sys/sysctl.h>
+#endif
 
 #if defined(__MINGW32__)
 /* pull in Windows compatibility stuff */
 #include "compat/mingw.h"
 #elif defined(_MSC_VER)
 #include "compat/msvc.h"
@@ -869,7 +872,15 @@
 struct tm *git_gmtime(const time_t *);
 struct tm *git_gmtime_r(const time_t *, struct tm *);
 #define gmtime git_gmtime
 #define gmtime_r git_gmtime_r
 #endif
 
+#if !defined(USE_PARENS_AROUND_GETTEXT_N) && defined(__GNUC__)
+#define USE_PARENS_AROUND_GETTEXT_N 1
+#endif
+
+#ifndef SHELL_PATH
+# define SHELL_PATH "/bin/sh"
+#endif
+
 #endif
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-config and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-config differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-count-objects and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-count-objects differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-credential and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-credential differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-credential-cache and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-credential-cache differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-credential-cache--daemon and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-credential-cache--daemon differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-credential-store and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-credential-store differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-cvsserver /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-cvsserver
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-cvsserver	2017-10-10 12:31:42.078632152 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-cvsserver	2017-10-10 13:04:11.670560701 +0800
@@ -24,13 +24,13 @@
 use Fcntl;
 use File::Temp qw/tempdir tempfile/;
 use File::Path qw/rmtree/;
 use File::Basename;
 use Getopt::Long qw(:config require_order no_ignore_case);
 
-my $VERSION = '2.3.10';
+my $VERSION = '2.4.0';
 
 my $log = GITCVS::log->new();
 my $cfg;
 
 my $DATE_LIST = {
     Jan => "01",
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-daemon and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-daemon differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-describe and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-describe differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-diff and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-diff differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-diff-files and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-diff-files differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-diff-index and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-diff-index differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-diff-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-diff-tree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-fast-export and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-fast-export differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-fast-import and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-fast-import differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-fetch and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-fetch differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-fetch-pack and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-fetch-pack differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-fmt-merge-msg and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-fmt-merge-msg differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-for-each-ref and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-for-each-ref differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-format-patch and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-format-patch differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-fsck and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-fsck differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-fsck-objects and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-fsck-objects differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-get-tar-commit-id and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-get-tar-commit-id differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-grep and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-grep differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/git-gui /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/git-gui
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/git-gui	2017-10-10 12:31:58.966631533 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/git-gui	2017-10-10 13:04:28.010560102 +0800
@@ -1,18 +1,18 @@
 #!/bin/sh
 # Tcl ignores the next line -*- tcl -*- \
  if test "z$*" = zversion \
  || test "z$*" = z--version; \
  then \
-	echo 'git-gui version 0.19.0.2.g3decb8e'; \
+	echo 'git-gui version 0.19.0.18.g4498b'; \
 	exit; \
  fi; \
  argv0=$0; \
  exec 'wish' "$argv0" -- "$@"
 
-set appvers {0.19.0.2.g3decb8e}
+set appvers {0.19.0.18.g4498b}
 set copyright [string map [list (c) \u00a9] {
 Copyright (c) 2006-2010 Shawn Pearce, et. al.
 
 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
@@ -46,13 +46,17 @@
 catch {rename send {}} ; # What an evil concept...
 
 ######################################################################
 ##
 ## locate our library
 
-set oguilib {/usr/local/share/git-gui/lib}
+if { [info exists ::env(GIT_GUI_LIB_DIR) ] } {
+	set oguilib $::env(GIT_GUI_LIB_DIR)
+} else {
+	set oguilib {/usr/local/share/git-gui/lib}
+}
 set oguirel {}
 if {$oguirel eq {1}} {
 	set oguilib [file dirname [file normalize $argv0]]
 	if {[file tail $oguilib] eq {git-core}} {
 		set oguilib [file dirname $oguilib]
 	}
@@ -76,15 +80,15 @@
 	rename auto_load real__auto_load
 	proc auto_load {name args} {
 		puts stderr "auto_load $name"
 		return [uplevel 1 real__auto_load $name $args]
 	}
 	rename source real__source
-	proc source {name} {
-		puts stderr "source    $name"
-		uplevel 1 real__source $name
+	proc source {args} {
+		puts stderr "source    $args"
+		uplevel 1 [linsert $args 0 real__source]
 	}
 	if {[tk windowingsystem] eq "win32"} { console show }
 }
 
 ######################################################################
 ##
@@ -663,15 +667,13 @@
 
 proc kill_file_process {fd} {
 	set process [pid $fd]
 
 	catch {
 		if {[is_Windows]} {
-			# Use a Cygwin-specific flag to allow killing
-			# native Windows processes
-			exec kill -f $process
+			exec taskkill /pid $process
 		} else {
 			exec kill $process
 		}
 	}
 }
 
@@ -905,12 +907,13 @@
 set default_config(gui.fontui) [font configure font_ui]
 set default_config(gui.fontdiff) [font configure font_diff]
 # TODO: this option should be added to the git-config documentation
 set default_config(gui.maxfilesdisplayed) 5000
 set default_config(gui.usettk) 1
 set default_config(gui.warndetachedcommit) 1
+set default_config(gui.tabsize) 8
 set font_descs {
 	{fontui   font_ui   {mc "Main Font"}}
 	{fontdiff font_diff {mc "Diff/Console Font"}}
 }
 set default_config(gui.stageuntracked) ask
 set default_config(gui.displayuntracked) true
@@ -1280,13 +1283,13 @@
 }
 # _gitdir exists, so try loading the config
 load_config 0
 apply_config
 
 # v1.7.0 introduced --show-toplevel to return the canonical work-tree
-if {[package vsatisfies $_git_version 1.7.0-]} {
+if {[package vcompare $_git_version 1.7.0] >= 0} {
 	if { [is_Cygwin] } {
 		catch {set _gitworktree [exec cygpath --windows [git rev-parse --show-toplevel]]}
 	} else {
 		set _gitworktree [git rev-parse --show-toplevel]
 	}
 } else {
@@ -1536,13 +1539,13 @@
 	if {$fd ne {}} {
 		read $fd
 		if {![eof $fd]} return
 		close $fd
 	}
 
-	if {[package vsatisfies $::_git_version 1.6.3-]} {
+	if {[package vcompare $::_git_version 1.6.3] >= 0} {
 		set ls_others [list --exclude-standard]
 	} else {
 		set ls_others [list --exclude-per-directory=.gitignore]
 		if {[have_info_exclude]} {
 			lappend ls_others "--exclude-from=[gitdir info exclude]"
 		}
@@ -1959,26 +1962,28 @@
 
 	set file_lists($ui_index) [list]
 	set file_lists($ui_workdir) [list]
 
 	set to_display [lsort [array names file_states]]
 	set display_limit [get_config gui.maxfilesdisplayed]
-	if {[llength $to_display] > $display_limit} {
-		if {!$files_warning} {
-			# do not repeatedly warn:
-			set files_warning 1
-			info_popup [mc "Displaying only %s of %s files." \
-				$display_limit [llength $to_display]]
-		}
-		set to_display [lrange $to_display 0 [expr {$display_limit-1}]]
-	}
+	set displayed 0
 	foreach path $to_display {
 		set s $file_states($path)
 		set m [lindex $s 0]
 		set icon_name [lindex $s 1]
 
+		if {$displayed > $display_limit && [string index $m 1] eq {O} } {
+			if {!$files_warning} {
+				# do not repeatedly warn:
+				set files_warning 1
+				info_popup [mc "Display limit (gui.maxfilesdisplayed = %s) reached, not showing all %s files." \
+					$display_limit [llength $to_display]]
+			}
+			continue
+		}
+
 		set s [string index $m 0]
 		if {$s ne {U} && $s ne {_}} {
 			display_all_files_helper $ui_index $path \
 				$icon_name $s
 		}
 
@@ -1987,12 +1992,13 @@
 		} else {
 			set s [string index $m 1]
 		}
 		if {$s ne {_}} {
 			display_all_files_helper $ui_workdir $path \
 				$icon_name $s
+			incr displayed
 		}
 	}
 
 	$ui_index conf -state disabled
 	$ui_workdir conf -state disabled
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/git-gui.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/git-gui.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/git-gui.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/git-gui.sh	2015-05-01 03:12:02.000000000 +0800
@@ -46,13 +46,17 @@
 catch {rename send {}} ; # What an evil concept...
 
 ######################################################################
 ##
 ## locate our library
 
-set oguilib {@@GITGUI_LIBDIR@@}
+if { [info exists ::env(GIT_GUI_LIB_DIR) ] } {
+	set oguilib $::env(GIT_GUI_LIB_DIR)
+} else {
+	set oguilib {@@GITGUI_LIBDIR@@}
+}
 set oguirel {@@GITGUI_RELATIVE@@}
 if {$oguirel eq {1}} {
 	set oguilib [file dirname [file normalize $argv0]]
 	if {[file tail $oguilib] eq {git-core}} {
 		set oguilib [file dirname $oguilib]
 	}
@@ -76,15 +80,15 @@
 	rename auto_load real__auto_load
 	proc auto_load {name args} {
 		puts stderr "auto_load $name"
 		return [uplevel 1 real__auto_load $name $args]
 	}
 	rename source real__source
-	proc source {name} {
-		puts stderr "source    $name"
-		uplevel 1 real__source $name
+	proc source {args} {
+		puts stderr "source    $args"
+		uplevel 1 [linsert $args 0 real__source]
 	}
 	if {[tk windowingsystem] eq "win32"} { console show }
 }
 
 ######################################################################
 ##
@@ -663,15 +667,13 @@
 
 proc kill_file_process {fd} {
 	set process [pid $fd]
 
 	catch {
 		if {[is_Windows]} {
-			# Use a Cygwin-specific flag to allow killing
-			# native Windows processes
-			exec kill -f $process
+			exec taskkill /pid $process
 		} else {
 			exec kill $process
 		}
 	}
 }
 
@@ -905,12 +907,13 @@
 set default_config(gui.fontui) [font configure font_ui]
 set default_config(gui.fontdiff) [font configure font_diff]
 # TODO: this option should be added to the git-config documentation
 set default_config(gui.maxfilesdisplayed) 5000
 set default_config(gui.usettk) 1
 set default_config(gui.warndetachedcommit) 1
+set default_config(gui.tabsize) 8
 set font_descs {
 	{fontui   font_ui   {mc "Main Font"}}
 	{fontdiff font_diff {mc "Diff/Console Font"}}
 }
 set default_config(gui.stageuntracked) ask
 set default_config(gui.displayuntracked) true
@@ -1280,13 +1283,13 @@
 }
 # _gitdir exists, so try loading the config
 load_config 0
 apply_config
 
 # v1.7.0 introduced --show-toplevel to return the canonical work-tree
-if {[package vsatisfies $_git_version 1.7.0-]} {
+if {[package vcompare $_git_version 1.7.0] >= 0} {
 	if { [is_Cygwin] } {
 		catch {set _gitworktree [exec cygpath --windows [git rev-parse --show-toplevel]]}
 	} else {
 		set _gitworktree [git rev-parse --show-toplevel]
 	}
 } else {
@@ -1536,13 +1539,13 @@
 	if {$fd ne {}} {
 		read $fd
 		if {![eof $fd]} return
 		close $fd
 	}
 
-	if {[package vsatisfies $::_git_version 1.6.3-]} {
+	if {[package vcompare $::_git_version 1.6.3] >= 0} {
 		set ls_others [list --exclude-standard]
 	} else {
 		set ls_others [list --exclude-per-directory=.gitignore]
 		if {[have_info_exclude]} {
 			lappend ls_others "--exclude-from=[gitdir info exclude]"
 		}
@@ -1959,26 +1962,28 @@
 
 	set file_lists($ui_index) [list]
 	set file_lists($ui_workdir) [list]
 
 	set to_display [lsort [array names file_states]]
 	set display_limit [get_config gui.maxfilesdisplayed]
-	if {[llength $to_display] > $display_limit} {
-		if {!$files_warning} {
-			# do not repeatedly warn:
-			set files_warning 1
-			info_popup [mc "Displaying only %s of %s files." \
-				$display_limit [llength $to_display]]
-		}
-		set to_display [lrange $to_display 0 [expr {$display_limit-1}]]
-	}
+	set displayed 0
 	foreach path $to_display {
 		set s $file_states($path)
 		set m [lindex $s 0]
 		set icon_name [lindex $s 1]
 
+		if {$displayed > $display_limit && [string index $m 1] eq {O} } {
+			if {!$files_warning} {
+				# do not repeatedly warn:
+				set files_warning 1
+				info_popup [mc "Display limit (gui.maxfilesdisplayed = %s) reached, not showing all %s files." \
+					$display_limit [llength $to_display]]
+			}
+			continue
+		}
+
 		set s [string index $m 0]
 		if {$s ne {U} && $s ne {_}} {
 			display_all_files_helper $ui_index $path \
 				$icon_name $s
 		}
 
@@ -1987,12 +1992,13 @@
 		} else {
 			set s [string index $m 1]
 		}
 		if {$s ne {_}} {
 			display_all_files_helper $ui_workdir $path \
 				$icon_name $s
+			incr displayed
 		}
 	}
 
 	$ui_index conf -state disabled
 	$ui_workdir conf -state disabled
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/GIT-VERSION-FILE /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/GIT-VERSION-FILE
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/GIT-VERSION-FILE	2017-10-10 12:31:58.938631534 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/GIT-VERSION-FILE	2017-10-10 13:04:27.990560102 +0800
@@ -1 +1 @@
-GITGUI_VERSION = 0.19.0.2.g3decb8e
+GITGUI_VERSION = 0.19.0.18.g4498b
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/GIT-VERSION-GEN /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/GIT-VERSION-GEN
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/GIT-VERSION-GEN	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/GIT-VERSION-GEN	2015-05-01 03:12:02.000000000 +0800
@@ -1,10 +1,10 @@
 #!/bin/sh
 
 GVF=GIT-VERSION-FILE
-DEF_VER=0.19.GITGUI
+DEF_VER=0.20.GITGUI
 
 LF='
 '
 
 tree_search ()
 {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/lib/choose_repository.tcl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/lib/choose_repository.tcl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/lib/choose_repository.tcl	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/lib/choose_repository.tcl	2015-05-01 03:12:02.000000000 +0800
@@ -15,12 +15,13 @@
 
 field done              0 ; # Finished picking the repository?
 field local_path       {} ; # Where this repository is locally
 field origin_url       {} ; # Where we are cloning from
 field origin_name  origin ; # What we shall call 'origin'
 field clone_type hardlink ; # Type of clone to construct
+field recursive      true ; # Recursive cloning flag
 field readtree_err        ; # Error output from read-tree (if any)
 field sorted_recent       ; # recent repositories (sorted)
 
 constructor pick {} {
 	global M1T M1B use_ttk NS
 
@@ -334,22 +335,37 @@
 	_append_recentrepos [pwd]
 	set ::_gitdir .git
 	set ::_prefix {}
 	return 1
 }
 
-proc _is_git {path} {
+proc _is_git {path {outdir_var ""}} {
+	if {$outdir_var ne ""} {
+		upvar 1 $outdir_var outdir
+	}
+	if {[file isfile $path]} {
+		set fp [open $path r]
+		gets $fp line
+		close $fp
+		if {[regexp "^gitdir: (.+)$" $line line link_target]} {
+			set path [file join [file dirname $path] $link_target]
+			set path [file normalize $path]
+		}
+	}
+
 	if {[file exists [file join $path HEAD]]
 	 && [file exists [file join $path objects]]
 	 && [file exists [file join $path config]]} {
+		set outdir $path
 		return 1
 	}
 	if {[is_Cygwin]} {
 		if {[file exists [file join $path HEAD]]
 		 && [file exists [file join $path objects.lnk]]
 		 && [file exists [file join $path config.lnk]]} {
+			set outdir $path
 			return 1
 		}
 	}
 	return 0
 }
 
@@ -522,12 +538,17 @@
 		-text [mc "Shared (Fastest, Not Recommended, No Backup)"] \
 		-variable @clone_type \
 		-value shared]
 	foreach r $w_types {
 		pack $r -anchor w
 	}
+	${NS}::checkbutton $args.type_f.recursive \
+		-text [mc "Recursively clone submodules too"] \
+		-variable @recursive \
+		-onvalue true -offvalue false
+	pack $args.type_f.recursive -anchor w
 	grid $args.type_l $args.type_f -sticky new
 
 	grid columnconfigure $args 1 -weight 1
 
 	trace add variable @local_path write [cb _update_clone]
 	trace add variable @origin_url write [cb _update_clone]
@@ -949,12 +970,36 @@
 		HEAD \
 		]
 	fconfigure $fd -blocking 0 -translation binary
 	fileevent $fd readable [cb _readtree_wait $fd]
 }
 
+method _do_validate_submodule_cloning {ok} {
+	if {$ok} {
+		$o_cons done $ok
+		set done 1
+	} else {
+		_clone_failed $this [mc "Cannot clone submodules."]
+	}
+}
+
+method _do_clone_submodules {} {
+	if {$recursive eq {true}} {
+		destroy $w_body
+		set o_cons [console::embed \
+			$w_body \
+			[mc "Cloning submodules"]]
+		pack $w_body -fill both -expand 1 -padx 10
+		$o_cons exec \
+			[list git submodule update --init --recursive] \
+			[cb _do_validate_submodule_cloning]
+	} else {
+		set done 1
+	}
+}
+
 method _readtree_wait {fd} {
 	set buf [read $fd]
 	$o_cons update_meter $buf
 	append readtree_err $buf
 
 	fconfigure $fd -blocking 1
@@ -979,13 +1024,13 @@
 	if {$fd_ph ne {}} {
 		global pch_error
 		set pch_error {}
 		fconfigure $fd_ph -blocking 0 -translation binary -eofchar {}
 		fileevent $fd_ph readable [cb _postcheckout_wait $fd_ph]
 	} else {
-		set done 1
+		_do_clone_submodules $this
 	}
 }
 
 method _postcheckout_wait {fd_ph} {
 	global pch_error
 
@@ -993,13 +1038,13 @@
 	fconfigure $fd_ph -blocking 1
 	if {[eof $fd_ph]} {
 		if {[catch {close $fd_ph}]} {
 			hook_failed_popup post-checkout $pch_error 0
 		}
 		unset pch_error
-		set done 1
+		_do_clone_submodules $this
 		return
 	}
 	fconfigure $fd_ph -blocking 0
 }
 
 ######################################################################
@@ -1060,25 +1105,25 @@
 		return
 	}
 	set local_path $p
 }
 
 method _do_open2 {} {
-	if {![_is_git [file join $local_path .git]]} {
+	if {![_is_git [file join $local_path .git] actualgit]} {
 		error_popup [mc "Not a Git repository: %s" [file tail $local_path]]
 		return
 	}
 
 	if {[catch {cd $local_path} err]} {
 		error_popup [strcat \
 			[mc "Failed to open repository %s:" $local_path] \
 			"\n\n$err"]
 		return
 	}
 
 	_append_recentrepos [pwd]
-	set ::_gitdir .git
+	set ::_gitdir $actualgit
 	set ::_prefix {}
 	set done 1
 }
 
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/lib/diff.tcl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/lib/diff.tcl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/lib/diff.tcl	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/lib/diff.tcl	2015-05-01 03:12:02.000000000 +0800
@@ -1,9 +1,22 @@
 # git-gui diff viewer
 # Copyright (C) 2006, 2007 Shawn Pearce
 
+proc apply_tab_size {{firsttab {}}} {
+	global have_tk85 repo_config ui_diff
+
+	set w [font measure font_diff "0"]
+	if {$have_tk85 && $firsttab != 0} {
+		$ui_diff configure -tabs [list [expr {$firsttab * $w}] [expr {($firsttab + $repo_config(gui.tabsize)) * $w}]]
+	} elseif {$have_tk85 || $repo_config(gui.tabsize) != 8} {
+		$ui_diff configure -tabs [expr {$repo_config(gui.tabsize) * $w}]
+	} else {
+		$ui_diff configure -tabs {}
+	}
+}
+
 proc clear_diff {} {
 	global ui_diff current_diff_path current_diff_header
 	global ui_index ui_workdir
 
 	$ui_diff conf -state normal
 	$ui_diff delete 0.0 end
@@ -102,12 +115,14 @@
 	set current_diff_side $w
 	set current_diff_queue {}
 	ui_status [mc "Loading diff of %s..." [escape_path $path]]
 
 	set cont_info [list $scroll_pos $callback]
 
+	apply_tab_size 0
+
 	if {[string first {U} $m] >= 0} {
 		merge_load_stages $path [list show_unmerged_diff $cont_info]
 	} elseif {$m eq {_O}} {
 		show_other_diff $path $w $m $cont_info
 	} else {
 		start_show_diff $cont_info
@@ -398,13 +413,16 @@
 		# -- Check for end of diff header (any hunk line will do this).
 		#
 		if {[regexp {^@@+ } $line]} {set ::current_diff_inheader 0}
 
 		# -- Automatically detect if this is a 3 way diff.
 		#
-		if {[string match {@@@ *} $line]} {set is_3way_diff 1}
+		if {[string match {@@@ *} $line]} {
+			set is_3way_diff 1
+			apply_tab_size 1
+		}
 
 		if {$::current_diff_inheader} {
 
 			# -- These two lines stop a diff header and shouldn't be in there
 			if {   [string match {Binary files * and * differ} $line]
 			    || [regexp {^\* Unmerged path }                $line]} {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/lib/option.tcl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/lib/option.tcl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/lib/option.tcl	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/lib/option.tcl	2015-05-01 03:12:02.000000000 +0800
@@ -158,12 +158,13 @@
 		{i-0..99 gui.commitmsgwidth {mc "Commit Message Text Width"}}
 		{t gui.newbranchtemplate {mc "New Branch Name Template"}}
 		{c gui.encoding {mc "Default File Contents Encoding"}}
 		{b gui.warndetachedcommit {mc "Warn before committing to a detached head"}}
 		{s gui.stageuntracked {mc "Staging of untracked files"} {list "yes" "no" "ask"}}
 		{b gui.displayuntracked {mc "Show untracked files"}}
+		{i-1..99 gui.tabsize {mc "Tab spacing"}}
 		} {
 		set type [lindex $option 0]
 		set name [lindex $option 1]
 		set text [eval [lindex $option 2]]
 		incr optid
 		foreach f {repo global} {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/lib/tclIndex /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/lib/tclIndex
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/lib/tclIndex	2017-10-10 12:31:58.990631532 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/lib/tclIndex	2017-10-10 13:04:28.038560101 +0800
@@ -22,12 +22,13 @@
 set auto_index(commit_prehook_wait) [list source [file join $dir commit.tcl]]
 set auto_index(commit_commitmsg) [list source [file join $dir commit.tcl]]
 set auto_index(commit_commitmsg_wait) [list source [file join $dir commit.tcl]]
 set auto_index(commit_writetree) [list source [file join $dir commit.tcl]]
 set auto_index(commit_committree) [list source [file join $dir commit.tcl]]
 set auto_index(commit_postcommit_wait) [list source [file join $dir commit.tcl]]
+set auto_index(apply_tab_size) [list source [file join $dir diff.tcl]]
 set auto_index(clear_diff) [list source [file join $dir diff.tcl]]
 set auto_index(reshow_diff) [list source [file join $dir diff.tcl]]
 set auto_index(force_diff_encoding) [list source [file join $dir diff.tcl]]
 set auto_index(handle_empty_diff) [list source [file join $dir diff.tcl]]
 set auto_index(show_diff) [list source [file join $dir diff.tcl]]
 set auto_index(show_unmerged_diff) [list source [file join $dir diff.tcl]]
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/macosx/AppMain.tcl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/macosx/AppMain.tcl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/macosx/AppMain.tcl	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/macosx/AppMain.tcl	2015-05-01 03:12:02.000000000 +0800
@@ -1,8 +1,13 @@
 set gitexecdir {@@gitexecdir@@}
-set gitguilib  {@@GITGUI_LIBDIR@@}
+if { [info exists ::env(GIT_GUI_LIB_DIR) ] } {
+	set gitguilib $::env(GIT_GUI_LIB_DIR)
+} else {
+	set gitguilib {@@GITGUI_LIBDIR@@}
+}
+
 set env(PATH) "$gitexecdir:$env(PATH)"
 
 if {[string first -psn [lindex $argv 0]] == 0} {
 	lset argv 0 [file join $gitexecdir git-gui]
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/Makefile /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/Makefile
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/Makefile	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/Makefile	2015-05-01 03:12:02.000000000 +0800
@@ -174,13 +174,14 @@
 	echo '#!$(SHELL_PATH_SQ)' >$@+ && \
 	echo 'if test "z$$*" = zversion ||' >>$@+ && \
 	echo '   test "z$$*" = z--version' >>$@+ && \
 	echo then >>$@+ && \
 	echo '	'echo \'git-gui version '$(GITGUI_VERSION)'\' >>$@+ && \
 	echo else >>$@+ && \
-	echo '	'exec \''$(libdir_SQ)/Git Gui.app/Contents/MacOS/$(subst \,,$(TKEXECUTABLE))'\' \
+	echo '	libdir="$${GIT_GUI_LIB_DIR:-$(libdir_SQ)}"' >>$@+ && \
+	echo '	'exec \"'$$libdir/Git Gui.app/Contents/MacOS/$(subst \,,$(TKEXECUTABLE))'\" \
 		'"$$0" "$$@"' >>$@+ && \
 	echo fi >>$@+ && \
 	chmod +x $@+ && \
 	mv $@+ $@
 
 Git\ Gui.app: GIT-VERSION-FILE GIT-GUI-VARS \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/po/bg.msg /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/po/bg.msg
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/po/bg.msg	2017-10-10 12:31:59.006631532 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/po/bg.msg	2017-10-10 13:04:28.046560100 +0800
@@ -1,53 +1,53 @@
-set ::msgcat::header "Project-Id-Version: git-gui master\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2014-01-13 20:45+0200\nPO-Revision-Date: 2014-01-13 21:31+0200\nLast-Translator: Alexander Shopov <ash@kambanaria.org>\nLanguage-Team: Bulgarian <dict@fsa-bg.org>\nLanguage: bg\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\nPlural-Forms: nplurals=2; plural=(n != 1);\n"
-::msgcat::mcset bg "Invalid font specified in %s:" "\u0423\u043a\u0430\u0437\u0430\u043d \u0435 \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u0435\u043d \u0448\u0440\u0438\u0444\u0442 \u0432 %s:"
+set ::msgcat::header "Project-Id-Version: git-gui master\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2015-04-07 07:37+0300\nPO-Revision-Date: 2015-04-07 07:46+0300\nLast-Translator: Alexander Shopov <ash@kambanaria.org>\nLanguage-Team: Bulgarian <dict@fsa-bg.org>\nLanguage: bg\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\nPlural-Forms: nplurals=2; plural=(n != 1);\n"
+::msgcat::mcset bg "Invalid font specified in %s:" "\u0423\u043a\u0430\u0437\u0430\u043d \u0435 \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u0435\u043d \u0448\u0440\u0438\u0444\u0442 \u0432 \u201e%s\u201c:"
 ::msgcat::mcset bg "Main Font" "\u041e\u0441\u043d\u043e\u0432\u0435\u043d \u0448\u0440\u0438\u0444\u0442"
 ::msgcat::mcset bg "Diff/Console Font" "\u0428\u0440\u0438\u0444\u0442 \u0437\u0430 \u0440\u0430\u0437\u043b\u0438\u043a\u0438\u0442\u0435/\u043a\u043e\u043d\u0437\u043e\u043b\u0430\u0442\u0430"
 ::msgcat::mcset bg "git-gui: fatal error" "git-gui: \u0444\u0430\u0442\u0430\u043b\u043d\u0430 \u0433\u0440\u0435\u0448\u043a\u0430"
 ::msgcat::mcset bg "Cannot find git in PATH." "\u041a\u043e\u043c\u0430\u043d\u0434\u0430\u0442\u0430 git \u043b\u0438\u043f\u0441\u0432\u0430 \u0432 \u043f\u044a\u0442\u044f (PATH)."
 ::msgcat::mcset bg "Cannot parse Git version string:" "\u041d\u0438\u0437\u044a\u0442 \u0441 \u0432\u0435\u0440\u0441\u0438\u044f\u0442\u0430 \u043d\u0430 Git \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0438\u0440\u0430\u043d:"
-::msgcat::mcset bg "Git version cannot be determined.\n\n%s claims it is version '%s'.\n\n%s requires at least Git 1.5.0 or later.\n\nAssume '%s' is version 1.5.0?\n" "\u0412\u0435\u0440\u0441\u0438\u044f\u0442\u0430 \u043d\u0430 Git \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0430.\n\n\u0412\u0435\u0440\u0441\u0438\u044f\u0442\u0430 \u043d\u0430 %s \u0438\u0437\u0433\u043b\u0435\u0436\u0434\u0430, \u0447\u0435 \u0435 \u201e%s\u201c.\n\n%s \u0438\u0437\u0438\u0441\u043a\u0432\u0430 Git, \u0432\u0435\u0440\u0441\u0438\u044f \u043f\u043e\u043d\u0435 1.5.0.\n\n\u0414\u0430 \u0441\u0435 \u043f\u0440\u0438\u0435\u043c\u0435 \u043b\u0438, \u0447\u0435 \u201e%s\u201c \u0435 \u0432\u0435\u0440\u0441\u0438\u044f 1.5.0?\n"
+::msgcat::mcset bg "Git version cannot be determined.\n\n%s claims it is version '%s'.\n\n%s requires at least Git 1.5.0 or later.\n\nAssume '%s' is version 1.5.0?\n" "\u0412\u0435\u0440\u0441\u0438\u044f\u0442\u0430 \u043d\u0430 Git \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0430.\n\n\u0412\u0435\u0440\u0441\u0438\u044f\u0442\u0430 \u043d\u0430 \u201e%s\u201c \u0438\u0437\u0433\u043b\u0435\u0436\u0434\u0430, \u0447\u0435 \u0435 \u201e%s\u201c.\n\n\u201e%s\u201c \u0438\u0437\u0438\u0441\u043a\u0432\u0430 Git, \u0432\u0435\u0440\u0441\u0438\u044f \u043f\u043e\u043d\u0435 1.5.0.\n\n\u0414\u0430 \u0441\u0435 \u043f\u0440\u0438\u0435\u043c\u0435 \u043b\u0438, \u0447\u0435 \u201e%s\u201c \u0435 \u0432\u0435\u0440\u0441\u0438\u044f \u201e1.5.0\u201c?\n"
 ::msgcat::mcset bg "Git directory not found:" "\u0414\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f\u0442\u0430 \u043d\u0430 Git \u043d\u0435 \u0435 \u043e\u0442\u043a\u0440\u0438\u0442\u0430:"
 ::msgcat::mcset bg "Cannot move to top of working directory:" "\u041d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0441\u0435 \u043f\u0440\u0435\u043c\u0438\u043d\u0435 \u043a\u044a\u043c \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u0441\u043a\u0430\u0442\u0430  \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f."
 ::msgcat::mcset bg "Cannot use bare repository:" "\u0413\u043e\u043b\u043e \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435 \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0441\u0435 \u0438\u0437\u043f\u043e\u043b\u0437\u0432\u0430:"
 ::msgcat::mcset bg "No working directory" "\u0420\u0430\u0431\u043e\u0442\u043d\u0430\u0442\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f \u043b\u0438\u043f\u0441\u0432\u0430"
 ::msgcat::mcset bg "Refreshing file status..." "\u041e\u0431\u043d\u043e\u0432\u044f\u0432\u0430\u043d\u0435 \u043d\u0430 \u0441\u044a\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u0442\u043e \u043d\u0430 \u0444\u0430\u0439\u043b\u0430\u2026"
 ::msgcat::mcset bg "Scanning for modified files ..." "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0437\u0430 \u043f\u0440\u043e\u043c\u0435\u043d\u0435\u043d\u0438 \u0444\u0430\u0439\u043b\u043e\u0432\u0435\u2026"
-::msgcat::mcset bg "Calling prepare-commit-msg hook..." "\u041a\u0443\u043a\u0430\u0442\u0430 prepare-commit-msg \u0441\u0435 \u0438\u0437\u043f\u044a\u043b\u043d\u044f\u0432\u0430 \u0432 \u043c\u043e\u043c\u0435\u043d\u0442\u0430\u2026"
-::msgcat::mcset bg "Commit declined by prepare-commit-msg hook." "\u041f\u043e\u0434\u0430\u0432\u0430\u043d\u0435\u0442\u043e \u0435 \u043e\u0442\u0445\u0432\u044a\u0440\u043b\u0435\u043d\u043e \u043e\u0442 \u043a\u0443\u043a\u0430\u0442\u0430 prepare-commit-msg."
+::msgcat::mcset bg "Calling prepare-commit-msg hook..." "\u041a\u0443\u043a\u0430\u0442\u0430 \u201eprepare-commit-msg\u201c \u0441\u0435 \u0438\u0437\u043f\u044a\u043b\u043d\u044f\u0432\u0430 \u0432 \u043c\u043e\u043c\u0435\u043d\u0442\u0430\u2026"
+::msgcat::mcset bg "Commit declined by prepare-commit-msg hook." "\u041f\u043e\u0434\u0430\u0432\u0430\u043d\u0435\u0442\u043e \u0435 \u043e\u0442\u0445\u0432\u044a\u0440\u043b\u0435\u043d\u043e \u043e\u0442 \u043a\u0443\u043a\u0430\u0442\u0430 \u201eprepare-commit-msg\u201c."
 ::msgcat::mcset bg "Ready." "\u0413\u043e\u0442\u043e\u0432\u043e."
-::msgcat::mcset bg "Displaying only %s of %s files." "\u041f\u043e\u043a\u0430\u0437\u0432\u0430\u043d\u0435 \u043d\u0430 \u0441\u0430\u043c\u043e %s \u043e\u0442 %s \u0444\u0430\u0439\u043b\u0430."
+::msgcat::mcset bg "Display limit (gui.maxfilesdisplayed = %s) reached, not showing all %s files." "\u0414\u043e\u0441\u0442\u0438\u0433\u043d\u0430\u0442 \u0435 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u043d\u0438\u044f\u0442 \u0431\u0440\u043e\u0439 \u0444\u0430\u0439\u043b\u043e\u0432\u0435 \u0437\u0430 \u043f\u043e\u043a\u0430\u0437\u0432\u0430\u043d\u0435 (gui.maxfilesdisplayed = %s). \u0424\u0430\u0439\u043b\u043e\u0432\u0435\u0442\u0435 \u0441\u0430 \u043e\u0431\u0449\u043e %s."
 ::msgcat::mcset bg "Unmodified" "\u041d\u0435\u043f\u0440\u043e\u043c\u0435\u043d\u0435\u043d"
 ::msgcat::mcset bg "Modified, not staged" "\u041f\u0440\u043e\u043c\u0435\u043d\u0435\u043d, \u043d\u043e \u043d\u0435 \u0435 \u0432 \u0438\u043d\u0434\u0435\u043a\u0441\u0430"
 ::msgcat::mcset bg "Staged for commit" "\u0412 \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u0437\u0430 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435"
 ::msgcat::mcset bg "Portions staged for commit" "\u0427\u0430\u0441\u0442\u0438 \u0441\u0430 \u0432 \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u0437\u0430 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435"
 ::msgcat::mcset bg "Staged for commit, missing" "\u0412 \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u0437\u0430 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435, \u043d\u043e \u043b\u0438\u043f\u0441\u0432\u0430"
 ::msgcat::mcset bg "File type changed, not staged" "\u0412\u0438\u0434\u044a\u0442 \u043d\u0430 \u0444\u0430\u0439\u043b\u0430 \u0435 \u0441\u043c\u0435\u043d\u0435\u043d, \u043d\u043e \u043d\u0435 \u0435 \u0432 \u0438\u043d\u0434\u0435\u043a\u0441\u0430"
-::msgcat::mcset bg "File type changed, old type staged for commit" "\u0412\u0438\u0434\u044a\u0442 \u043d\u0430 \u0444\u0430\u0439\u043b\u0430 \u0435 \u0441\u043c\u0435\u043d\u0435\u043d, \u0432 \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u0435 \u0441\u0442\u0430\u0440\u0438\u044f\u0442"
+::msgcat::mcset bg "File type changed, old type staged for commit" "\u0412\u0438\u0434\u044a\u0442 \u043d\u0430 \u0444\u0430\u0439\u043b\u0430 \u0435 \u0441\u043c\u0435\u043d\u0435\u043d, \u043d\u043e \u0432 \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u0435 \u0432\u0441\u0435 \u043e\u0449\u0435 \u0441\u0442\u0430\u0440\u0438\u044f\u0442"
 ::msgcat::mcset bg "File type changed, staged" "\u0412\u0438\u0434\u044a\u0442 \u043d\u0430 \u0444\u0430\u0439\u043b\u0430 \u0435 \u0441\u043c\u0435\u043d\u0435\u043d \u0438 \u0435 \u0432 \u0438\u043d\u0434\u0435\u043a\u0441\u0430"
-::msgcat::mcset bg "File type change staged, modification not staged" "\u0412\u0438\u0434\u044a\u0442 \u043d\u0430 \u0444\u0430\u0439\u043b\u0430 \u0435 \u0441\u043c\u0435\u043d\u0435\u043d, \u043f\u0440\u043e\u043c\u044f\u043d\u0430\u0442\u0430 \u043d\u0435 \u0435 \u0432 \u0438\u043d\u0434\u0435\u043a\u0441\u0430"
+::msgcat::mcset bg "File type change staged, modification not staged" "\u0412\u0438\u0434\u044a\u0442 \u043d\u0430 \u0444\u0430\u0439\u043b\u0430 \u0435 \u0441\u043c\u0435\u043d\u0435\u043d, \u043d\u043e \u043f\u0440\u043e\u043c\u044f\u043d\u0430\u0442\u0430 \u043d\u0435 \u0435 \u0432 \u0438\u043d\u0434\u0435\u043a\u0441\u0430"
 ::msgcat::mcset bg "File type change staged, file missing" "\u0412\u0438\u0434\u044a\u0442 \u043d\u0430 \u0444\u0430\u0439\u043b\u0430 \u0435 \u0441\u043c\u0435\u043d\u0435\u043d, \u0444\u0430\u0439\u043b\u044a\u0442 \u043b\u0438\u043f\u0441\u0432\u0430"
 ::msgcat::mcset bg "Untracked, not staged" "\u041d\u0435\u0441\u043b\u0435\u0434\u0435\u043d"
 ::msgcat::mcset bg "Missing" "\u041b\u0438\u043f\u0441\u0432\u0430\u0449"
 ::msgcat::mcset bg "Staged for removal" "\u0412 \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u0437\u0430 \u0438\u0437\u0442\u0440\u0438\u0432\u0430\u043d\u0435"
 ::msgcat::mcset bg "Staged for removal, still present" "\u0412 \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u0437\u0430 \u0438\u0437\u0442\u0440\u0438\u0432\u0430\u043d\u0435, \u043d\u043e \u043e\u0449\u0435 \u0433\u043e \u0438\u043c\u0430"
 ::msgcat::mcset bg "Requires merge resolution" "\u0418\u0437\u0438\u0441\u043a\u0432\u0430 \u043a\u043e\u0440\u0438\u0433\u0438\u0440\u0430\u043d\u0435 \u043f\u0440\u0438 \u0441\u043b\u0438\u0432\u0430\u043d\u0435"
-::msgcat::mcset bg "Starting gitk... please wait..." "\u0421\u0442\u0430\u0440\u0442\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 gitk\u2026, \u0438\u0437\u0447\u0430\u043a\u0430\u0439\u0442\u0435\u2026"
-::msgcat::mcset bg "Couldn't find gitk in PATH" "\u0412 \u043f\u044a\u0442\u0438\u0449\u0430\u0442\u0430, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438 \u043e\u0442 \u043f\u0440\u043e\u043c\u0435\u043d\u043b\u0438\u0432\u0430\u0442\u0430 PATH, \u043b\u0438\u043f\u0441\u0432\u0430 \u0438\u0437\u043f\u044a\u043b\u043d\u0438\u043c gitk"
-::msgcat::mcset bg "Couldn't find git gui in PATH" "\u0412 \u043f\u044a\u0442\u0438\u0449\u0430\u0442\u0430, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438 \u043e\u0442 \u043f\u0440\u043e\u043c\u0435\u043d\u043b\u0438\u0432\u0430\u0442\u0430 PATH, \u043b\u0438\u043f\u0441\u0432\u0430 \u0438\u0437\u043f\u044a\u043b\u043d\u0438\u043c git gui"
+::msgcat::mcset bg "Starting gitk... please wait..." "\u0421\u0442\u0430\u0440\u0442\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 \u201egitk\u201c\u2026, \u0438\u0437\u0447\u0430\u043a\u0430\u0439\u0442\u0435\u2026"
+::msgcat::mcset bg "Couldn't find gitk in PATH" "\u041a\u043e\u043c\u0430\u043d\u0434\u0430\u0442\u0430 \u201egitk\u201c \u043b\u0438\u043f\u0441\u0432\u0430 \u0432 \u043f\u044a\u0442\u0438\u0449\u0430\u0442\u0430, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438 \u043e\u0442 \u043f\u0440\u043e\u043c\u0435\u043d\u043b\u0438\u0432\u0430\u0442\u0430 PATH."
+::msgcat::mcset bg "Couldn't find git gui in PATH" "\u041a\u043e\u043c\u0430\u043d\u0434\u0430\u0442\u0430 \u201egit gui\u201c \u043b\u0438\u043f\u0441\u0432\u0430 \u0432 \u043f\u044a\u0442\u0438\u0449\u0430\u0442\u0430, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438 \u043e\u0442 \u043f\u0440\u043e\u043c\u0435\u043d\u043b\u0438\u0432\u0430\u0442\u0430 PATH."
 ::msgcat::mcset bg "Repository" "\u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435"
 ::msgcat::mcset bg "Edit" "\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u0430\u043d\u0435"
 ::msgcat::mcset bg "Branch" "\u041a\u043b\u043e\u043d"
 ::msgcat::mcset bg "Commit@@noun" "\u041f\u043e\u0434\u0430\u0432\u0430\u043d\u0435"
 ::msgcat::mcset bg "Merge" "\u0421\u043b\u0438\u0432\u0430\u043d\u0435"
 ::msgcat::mcset bg "Remote" "\u041e\u0442\u0434\u0430\u043b\u0435\u0447\u0435\u043d\u043e \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435"
 ::msgcat::mcset bg "Tools" "\u041a\u043e\u043c\u0430\u043d\u0434\u0438"
 ::msgcat::mcset bg "Explore Working Copy" "\u0420\u0430\u0437\u0433\u043b\u0435\u0436\u0434\u0430\u043d\u0435 \u043d\u0430 \u0440\u0430\u0431\u043e\u0442\u043d\u043e\u0442\u043e \u043a\u043e\u043f\u0438\u0435"
-::msgcat::mcset bg "Git Bash" "Bash \u043d\u0430 Git"
+::msgcat::mcset bg "Git Bash" "Bash \u0437\u0430 Git"
 ::msgcat::mcset bg "Browse Current Branch's Files" "\u0420\u0430\u0437\u0433\u043b\u0435\u0436\u0434\u0430\u043d\u0435 \u043d\u0430 \u0444\u0430\u0439\u043b\u043e\u0432\u0435\u0442\u0435 \u0432 \u0442\u0435\u043a\u0443\u0449\u0438\u044f \u043a\u043b\u043e\u043d"
-::msgcat::mcset bg "Browse Branch Files..." "\u0420\u0430\u0437\u0433\u043b\u0435\u0436\u0434\u0430\u043d\u0435 \u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u0438\u044f \u043a\u043b\u043e\u043d"
+::msgcat::mcset bg "Browse Branch Files..." "\u0420\u0430\u0437\u0433\u043b\u0435\u0436\u0434\u0430\u043d\u0435 \u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u0438\u044f \u043a\u043b\u043e\u043d\u2026"
 ::msgcat::mcset bg "Visualize Current Branch's History" "\u0412\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043d\u0430 \u0438\u0441\u0442\u043e\u0440\u0438\u044f\u0442\u0430 \u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u0438\u044f \u043a\u043b\u043e\u043d"
 ::msgcat::mcset bg "Visualize All Branch History" "\u0412\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043d\u0430 \u0438\u0441\u0442\u043e\u0440\u0438\u044f\u0442\u0430 \u043d\u0430 \u0432\u0441\u0438\u0447\u043a\u0438 \u043a\u043b\u043e\u043d\u043e\u0432\u0435"
 ::msgcat::mcset bg "Browse %s's Files" "\u0420\u0430\u0437\u0433\u043b\u0435\u0436\u0434\u0430\u043d\u0435 \u043d\u0430 \u0444\u0430\u0439\u043b\u043e\u0432\u0435\u0442\u0435 \u0432 %s"
 ::msgcat::mcset bg "Visualize %s's History" "\u0412\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043d\u0430 \u0438\u0441\u0442\u043e\u0440\u0438\u044f\u0442\u0430 \u043d\u0430 %s"
 ::msgcat::mcset bg "Database Statistics" "\u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u043d\u0430 \u0431\u0430\u0437\u0430\u0442\u0430 \u043e\u0442 \u0434\u0430\u043d\u043d\u0438"
 ::msgcat::mcset bg "Compress Database" "\u041a\u043e\u043c\u043f\u0440\u0435\u0441\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 \u0431\u0430\u0437\u0430\u0442\u0430 \u043e\u0442 \u0434\u0430\u043d\u043d\u0438"
@@ -65,13 +65,13 @@
 ::msgcat::mcset bg "Checkout..." "\u0418\u0437\u0442\u0435\u0433\u043b\u044f\u043d\u0435\u2026"
 ::msgcat::mcset bg "Rename..." "\u041f\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0432\u0430\u043d\u0435\u2026"
 ::msgcat::mcset bg "Delete..." "\u0418\u0437\u0442\u0440\u0438\u0432\u0430\u043d\u0435\u2026"
 ::msgcat::mcset bg "Reset..." "\u041e\u0442\u043c\u044f\u043d\u0430 \u043d\u0430 \u043f\u0440\u043e\u043c\u0435\u043d\u0438\u0442\u0435\u2026"
 ::msgcat::mcset bg "Done" "\u0413\u043e\u0442\u043e\u0432\u043e"
 ::msgcat::mcset bg "Commit@@verb" "\u041f\u043e\u0434\u0430\u0432\u0430\u043d\u0435"
-::msgcat::mcset bg "New Commit" "\u041f\u043e\u0434\u0430\u0432\u0430\u043d\u0435"
+::msgcat::mcset bg "New Commit" "\u041d\u043e\u0432\u043e \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435"
 ::msgcat::mcset bg "Amend Last Commit" "\u041f\u043e\u043f\u0440\u0430\u0432\u044f\u043d\u0435 \u043d\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u043e\u0442\u043e \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435"
 ::msgcat::mcset bg "Rescan" "\u041e\u0431\u043d\u043e\u0432\u044f\u0432\u0430\u043d\u0435"
 ::msgcat::mcset bg "Stage To Commit" "\u041a\u044a\u043c \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u0437\u0430 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435"
 ::msgcat::mcset bg "Stage Changed Files To Commit" "\u0412\u0441\u0438\u0447\u043a\u0438 \u043f\u0440\u043e\u043c\u0435\u043d\u0435\u043d\u0438 \u0444\u0430\u0439\u043b\u043e\u0432\u0435 \u043a\u044a\u043c \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u0437\u0430 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435"
 ::msgcat::mcset bg "Unstage From Commit" "\u0418\u0437\u0432\u0430\u0436\u0434\u0430\u043d\u0435 \u043e\u0442 \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u0437\u0430 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435"
 ::msgcat::mcset bg "Revert Changes" "\u0412\u0440\u044a\u0449\u0430\u043d\u0435 \u043d\u0430 \u043e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u0430"
@@ -88,13 +88,13 @@
 ::msgcat::mcset bg "Help" "\u041f\u043e\u043c\u043e\u0449"
 ::msgcat::mcset bg "About %s" "\u041e\u0442\u043d\u043e\u0441\u043d\u043e %s"
 ::msgcat::mcset bg "Online Documentation" "\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0432 \u0418\u043d\u0442\u0435\u0440\u043d\u0435\u0442"
 ::msgcat::mcset bg "Show SSH Key" "\u041f\u043e\u043a\u0430\u0437\u0432\u0430\u043d\u0435 \u043d\u0430 \u043a\u043b\u044e\u0447\u0430 \u0437\u0430 SSH"
 ::msgcat::mcset bg "Usage" "\u0423\u043f\u043e\u0442\u0440\u0435\u0431\u0430"
 ::msgcat::mcset bg "Error" "\u0413\u0440\u0435\u0448\u043a\u0430"
-::msgcat::mcset bg "fatal: cannot stat path %s: No such file or directory" "\u0444\u0430\u0442\u0430\u043b\u043d\u043e: \u043f\u044a\u0442\u044f\u0442 %s \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043e\u0442\u043a\u0440\u0438\u0442: \u0442\u0430\u043a\u044a\u0432 \u0444\u0430\u0439\u043b \u0438\u043b\u0438 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f \u043d\u044f\u043c\u0430"
+::msgcat::mcset bg "fatal: cannot stat path %s: No such file or directory" "\u0424\u0410\u0422\u0410\u041b\u041d\u0410 \u0413\u0420\u0415\u0428\u041a\u0410: \u043f\u044a\u0442\u044f\u0442 %s \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043e\u0442\u043a\u0440\u0438\u0442: \u0442\u0430\u043a\u044a\u0432 \u0444\u0430\u0439\u043b \u0438\u043b\u0438 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f \u043d\u044f\u043c\u0430"
 ::msgcat::mcset bg "Current Branch:" "\u0422\u0435\u043a\u0443\u0449 \u043a\u043b\u043e\u043d:"
 ::msgcat::mcset bg "Staged Changes (Will Commit)" "\u041f\u0440\u043e\u043c\u0435\u043d\u0438 \u0432 \u0438\u043d\u0434\u0435\u043a\u0441\u0430 (\u0437\u0430 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435)"
 ::msgcat::mcset bg "Unstaged Changes" "\u041f\u0440\u043e\u043c\u0435\u043d\u0438 \u0438\u0437\u0432\u044a\u043d \u0438\u043d\u0434\u0435\u043a\u0441\u0430"
 ::msgcat::mcset bg "Stage Changed" "\u0418\u043d\u0434\u0435\u043a\u0441\u044a\u0442 \u0435 \u043f\u0440\u043e\u043c\u0435\u043d\u0435\u043d"
 ::msgcat::mcset bg "Push" "\u0418\u0437\u0442\u043b\u0430\u0441\u043a\u0432\u0430\u043d\u0435"
 ::msgcat::mcset bg "Initial Commit Message:" "\u041f\u044a\u0440\u0432\u043e\u043d\u0430\u0447\u0430\u043b\u043d\u043e \u0441\u044a\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043f\u0440\u0438 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435:"
@@ -123,15 +123,15 @@
 ::msgcat::mcset bg "Unstage Lines From Commit" "\u0418\u0437\u0432\u0430\u0436\u0434\u0430\u043d\u0435 \u043d\u0430 \u0440\u0435\u0434\u043e\u0432\u0435\u0442\u0435 \u043e\u0442 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435\u0442\u043e"
 ::msgcat::mcset bg "Unstage Line From Commit" "\u0418\u0437\u0432\u0430\u0436\u0434\u0430\u043d\u0435 \u043d\u0430 \u0440\u0435\u0434\u0430 \u043e\u0442 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435\u0442\u043e"
 ::msgcat::mcset bg "Stage Hunk For Commit" "\u0414\u043e\u0431\u0430\u0432\u044f\u043d\u0435 \u043d\u0430 \u043f\u0430\u0440\u0447\u0435\u0442\u043e \u0437\u0430 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435"
 ::msgcat::mcset bg "Stage Lines For Commit" "\u0414\u043e\u0431\u0430\u0432\u044f\u043d\u0435 \u043d\u0430 \u0440\u0435\u0434\u043e\u0432\u0435\u0442\u0435 \u0437\u0430 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435"
 ::msgcat::mcset bg "Stage Line For Commit" "\u0414\u043e\u0431\u0430\u0432\u044f\u043d\u0435 \u043d\u0430 \u0440\u0435\u0434\u0430 \u0437\u0430 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435"
 ::msgcat::mcset bg "Initializing..." "\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0430\u043d\u0435\u2026"
-::msgcat::mcset bg "Possible environment issues exist.\n\nThe following environment variables are probably\ngoing to be ignored by any Git subprocess run\nby %s:\n\n" "\u0412\u044a\u0437\u043c\u043e\u0436\u043d\u043e \u0435 \u0434\u0430 \u0438\u043c\u0430 \u043f\u0440\u043e\u0431\u043b\u0435\u043c \u0441\u044a\u0441 \u0441\u0440\u0435\u0434\u0430\u0442\u0430.\n\n\u041d\u0430\u0439-\u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e \u0441\u043b\u0435\u0434\u043d\u0438\u0442\u0435 \u043f\u0440\u043e\u043c\u0435\u043d\u043b\u0438\u0432\u0438 \u043d\u044f\u043c\u0430 \u0434\u0430 \u0431\u044a\u0434\u0430\u0442\n\u0432\u0437\u0435\u0442\u0438 \u043f\u043e\u0434 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u043e\u0442 \u043f\u043e\u0434\u043f\u0440\u043e\u0446\u0435\u0441\u0438\u0442\u0435 Git \u0438\u0437\u043f\u044a\u043b\u043d\u0435\u043d\u0438\n\u043e\u0442 %s:\n\n"
+::msgcat::mcset bg "Possible environment issues exist.\n\nThe following environment variables are probably\ngoing to be ignored by any Git subprocess run\nby %s:\n\n" "\u0412\u044a\u0437\u043c\u043e\u0436\u043d\u043e \u0435 \u0434\u0430 \u0438\u043c\u0430 \u043f\u0440\u043e\u0431\u043b\u0435\u043c \u0441\u044a\u0441 \u0441\u0440\u0435\u0434\u0430\u0442\u0430.\n\n\u041d\u0430\u0439-\u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e \u0441\u043b\u0435\u0434\u043d\u0438\u0442\u0435 \u043f\u0440\u043e\u043c\u0435\u043d\u043b\u0438\u0432\u0438 \u043d\u044f\u043c\u0430 \u0434\u0430 \u0431\u044a\u0434\u0430\u0442\n\u0432\u0437\u0435\u0442\u0438 \u043f\u043e\u0434 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u043e\u0442 \u043f\u043e\u0434\u043f\u0440\u043e\u0446\u0435\u0441\u0438\u0442\u0435 \u043d\u0430 Git\n\u043e\u0442 %s:\n\n"
 ::msgcat::mcset bg "\nThis is due to a known issue with the\nTcl binary distributed by Cygwin." "\n\u0422\u043e\u0432\u0430 \u0435 \u043f\u043e\u0437\u043d\u0430\u0442 \u043f\u0440\u043e\u0431\u043b\u0435\u043c \u0438 \u0441\u0435 \u0434\u044a\u043b\u0436\u0438 \u043d\u0430\n\u0432\u0435\u0440\u0441\u0438\u044f\u0442\u0430 \u043d\u0430 Tcl \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0430 \u0432 Cygwin."
-::msgcat::mcset bg "\n\nA good replacement for %s\nis placing values for the user.name and\nuser.email settings into your personal\n~/.gitconfig file.\n" "\n\n\u0414\u043e\u0431\u044a\u0440 \u0437\u0430\u043c\u0435\u0441\u0442\u0438\u0442\u0435\u043b \u043d\u0430 %s\n\u0435 \u0434\u0430 \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438\u0442\u0435 user.name \u0438\nuser.email \u0432 \u043b\u0438\u0447\u043d\u0438\u044f \u0441\u0438 \u0444\u0430\u0439\u043b ~/.gitconfig.\n"
+::msgcat::mcset bg "\n\nA good replacement for %s\nis placing values for the user.name and\nuser.email settings into your personal\n~/.gitconfig file.\n" "\n\n\u0414\u043e\u0431\u044a\u0440 \u0437\u0430\u043c\u0435\u0441\u0442\u0438\u0442\u0435\u043b \u043d\u0430 \u201e%s\u201c\n\u0435 \u0434\u0430 \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438\u0442\u0435 \u201euser.name\u201c \u0438\n\u201euser.email\u201c \u0432 \u043b\u0438\u0447\u043d\u0438\u044f \u0441\u0438 \u0444\u0430\u0439\u043b \u201e~/.gitconfig\u201c.\n"
 ::msgcat::mcset bg "Unsupported spell checker" "\u0422\u0430\u0437\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0430 \u0437\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u043f\u0440\u0430\u0432\u043e\u043f\u0438\u0441\u0430 \u043d\u0435 \u0441\u0435 \u043f\u043e\u0434\u0434\u044a\u0440\u0436\u0430"
 ::msgcat::mcset bg "Spell checking is unavailable" "\u041b\u0438\u043f\u0441\u0432\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0430 \u0437\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u043f\u0440\u0430\u0432\u043e\u043f\u0438\u0441\u0430"
 ::msgcat::mcset bg "Invalid spell checking configuration" "\u041d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u043d\u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043d\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\u0442\u0430 \u043d\u0430 \u043f\u0440\u0430\u0432\u043e\u043f\u0438\u0441\u0430"
 ::msgcat::mcset bg "Reverting dictionary to %s." "\u041f\u043e\u043b\u0437\u0432\u0430\u043d\u0435 \u043d\u0430 \u0440\u0435\u0447\u043d\u0438\u043a \u0437\u0430 \u0435\u0437\u0438\u043a \u201e%s\u201c."
 ::msgcat::mcset bg "Spell checker silently failed on startup" "\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u0430\u0442\u0430 \u0437\u0430 \u043f\u0440\u0430\u0432\u043e\u043f\u0438\u0441 \u0434\u0430\u0436\u0435 \u043d\u0435 \u0441\u0442\u0430\u0440\u0442\u0438\u0440\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e."
 ::msgcat::mcset bg "Unrecognized spell checker" "\u041d\u0435\u043f\u043e\u0437\u043d\u0430\u0442\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0430 \u0437\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u043f\u0440\u0430\u0432\u043e\u043f\u0438\u0441\u0430"
@@ -162,33 +162,33 @@
 ::msgcat::mcset bg "Loading %s..." "\u0417\u0430\u0440\u0435\u0436\u0434\u0430\u043d\u0435 \u043d\u0430 \u201e%s\u201c\u2026"
 ::msgcat::mcset bg "\[Up To Parent\]" "\[\u041a\u044a\u043c \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044f\]"
 ::msgcat::mcset bg "Browse Branch Files" "\u0420\u0430\u0437\u0433\u043b\u0435\u0436\u0434\u0430\u043d\u0435 \u043d\u0430 \u0444\u0430\u0439\u043b\u043e\u0432\u0435\u0442\u0435 \u0432 \u043a\u043b\u043e\u043d\u0430"
 ::msgcat::mcset bg "Browse" "\u0420\u0430\u0437\u0433\u043b\u0435\u0436\u0434\u0430\u043d\u0435"
 ::msgcat::mcset bg "Revision" "\u0412\u0435\u0440\u0441\u0438\u044f"
 ::msgcat::mcset bg "Running %s requires a selected file." "\u0417\u0430 \u0438\u0437\u043f\u044a\u043b\u043d\u0435\u043d\u0438\u0435\u0442\u043e \u043d\u0430 \u201e%s\u201c \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0438\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u0444\u0430\u0439\u043b."
-::msgcat::mcset bg "Are you sure you want to run %1\$s on file \"%2\$s\"?" "\u0421\u0438\u0433\u0443\u0440\u043d\u0438 \u043b\u0438 \u0441\u0442\u0435, \u0447\u0435 \u0438\u0441\u043a\u0430\u0442\u0435 \u0434\u0430 \u0441\u0442\u0430\u0440\u0442\u0438\u0440\u0430\u0442\u0435 \u201e%1\$s\u201c \u0432\u044a\u0440\u0445\u0443 \u201e%2\$s\u201c?"
-::msgcat::mcset bg "Are you sure you want to run %s?" "\u0421\u0438\u0433\u0443\u0440\u043d\u0438 \u043b\u0438 \u0441\u0442\u0435, \u0447\u0435 \u0438\u0441\u043a\u0430\u0442\u0435 \u0434\u0430 \u0441\u0442\u0430\u0440\u0442\u0438\u0440\u0430\u0442\u0435 \u201e%s\u201c?"
+::msgcat::mcset bg "Are you sure you want to run %1\$s on file \"%2\$s\"?" "\u0421\u0438\u0433\u0443\u0440\u043d\u0438 \u043b\u0438 \u0441\u0442\u0435, \u0447\u0435 \u0438\u0441\u043a\u0430\u0442\u0435 \u0434\u0430 \u0438\u0437\u043f\u044a\u043b\u043d\u0438\u0442\u0435 \u201e%1\$s\u201c \u0432\u044a\u0440\u0445\u0443 \u0444\u0430\u0439\u043b\u0430 \u201e%2\$s\u201c?"
+::msgcat::mcset bg "Are you sure you want to run %s?" "\u0421\u0438\u0433\u0443\u0440\u043d\u0438 \u043b\u0438 \u0441\u0442\u0435, \u0447\u0435 \u0438\u0441\u043a\u0430\u0442\u0435 \u0434\u0430 \u0438\u0437\u043f\u044a\u043b\u043d\u0438\u0442\u0435 \u201e%s\u201c?"
 ::msgcat::mcset bg "Tool: %s" "\u041a\u043e\u043c\u0430\u043d\u0434\u0430: %s"
 ::msgcat::mcset bg "Running: %s" "\u0418\u0437\u043f\u044a\u043b\u043d\u0435\u043d\u0438\u0435: %s"
 ::msgcat::mcset bg "Tool completed successfully: %s" "\u041a\u043e\u043c\u0430\u043d\u0434\u0430\u0442\u0430 \u0437\u0430\u0432\u044a\u0440\u0448\u0438 \u0443\u0441\u043f\u0435\u0448\u043d\u043e: %s"
 ::msgcat::mcset bg "Tool failed: %s" "\u041a\u043e\u043c\u0430\u043d\u0434\u0430\u0442\u0430 \u0432\u044a\u0440\u043d\u0430 \u0433\u0440\u0435\u0448\u043a\u0430: %s"
 ::msgcat::mcset bg "Checkout Branch" "\u041a\u043b\u043e\u043d \u0437\u0430 \u0438\u0437\u0442\u0435\u0433\u043b\u044f\u043d\u0435"
 ::msgcat::mcset bg "Checkout" "\u0418\u0437\u0442\u0435\u0433\u043b\u044f\u043d\u0435"
 ::msgcat::mcset bg "Options" "\u041e\u043f\u0446\u0438\u0438"
 ::msgcat::mcset bg "Fetch Tracking Branch" "\u0418\u0437\u0442\u0435\u0433\u043b\u044f\u043d\u0435 \u043d\u0430 \u043f\u0440\u043e\u043c\u0435\u043d\u0438\u0442\u0435 \u043e\u0442 \u0441\u043b\u0435\u0434\u0435\u043d\u0438\u044f \u043a\u043b\u043e\u043d"
 ::msgcat::mcset bg "Detach From Local Branch" "\u0418\u0437\u0442\u0440\u0438\u0432\u0430\u043d\u0435 \u043e\u0442 \u043b\u043e\u043a\u0430\u043b\u043d\u0438\u044f \u043a\u043b\u043e\u043d"
-::msgcat::mcset bg "Fetching new changes from %s" "\u0414\u043e\u0441\u0442\u0430\u0432\u044f\u043d\u0435 \u043d\u0430 \u043f\u0440\u043e\u043c\u0435\u043d\u0438\u0442\u0435 \u043e\u0442 %s"
+::msgcat::mcset bg "Fetching new changes from %s" "\u0414\u043e\u0441\u0442\u0430\u0432\u044f\u043d\u0435 \u043d\u0430 \u043f\u0440\u043e\u043c\u0435\u043d\u0438\u0442\u0435 \u043e\u0442 \u201e%s\u201c"
 ::msgcat::mcset bg "remote prune %s" "\u043e\u043a\u0430\u0441\u0442\u0440\u044f\u043d\u0435 \u043d\u0430 \u0441\u043b\u0435\u0434\u044f\u0449\u0438\u0442\u0435 \u043a\u043b\u043e\u043d\u0438 \u043a\u044a\u043c \u201e%s\u201c"
 ::msgcat::mcset bg "Pruning tracking branches deleted from %s" "\u041e\u043a\u0430\u0441\u0442\u0440\u044f\u043d\u0435 \u043d\u0430 \u0441\u043b\u0435\u0434\u044f\u0449\u0438\u0442\u0435 \u043a\u043b\u043e\u043d\u0438 \u043d\u0430 \u0438\u0437\u0442\u0440\u0438\u0442\u0438\u0442\u0435 \u043a\u043b\u043e\u043d\u0438 \u043e\u0442 \u201e%s\u201c"
-::msgcat::mcset bg "fetch all remotes" "\u0434\u043e\u0441\u0442\u0430\u0432\u044f\u043d\u0435 \u043d\u0430 \u0432\u0441\u0438\u0447\u043a\u0438 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430"
-::msgcat::mcset bg "Fetching new changes from all remotes" "\u0414\u043e\u0441\u0442\u0430\u0432\u044f\u043d\u0435 \u043d\u0430 \u043f\u0440\u043e\u043c\u0435\u043d\u0438\u0442\u0435 \u043e\u0442 \u0432\u0441\u0438\u0447\u043a\u0438 \u043e\u0442\u0434\u0430\u043b\u0435\u0447\u0435\u043d\u0438 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430"
-::msgcat::mcset bg "remote prune all remotes" "\u043e\u043a\u0430\u0441\u0442\u0440\u044f\u043d\u0435 \u043d\u0430 \u0432\u0441\u0438\u0447\u043a\u0438 \u043a\u043b\u043e\u043d\u0438 \u0441\u043b\u0435\u0434\u044f\u0449\u0438 \u0438\u0437\u0442\u0440\u0438\u0442\u0438 \u043a\u043b\u043e\u043d\u0438"
-::msgcat::mcset bg "Pruning tracking branches deleted from all remotes" "\u041e\u043a\u0430\u0441\u0442\u0440\u044f\u043d\u0435 \u043d\u0430 \u0441\u043b\u0435\u0434\u044f\u0449\u0438\u0442\u0435 \u043a\u043b\u043e\u043d\u0438 \u043d\u0430 \u0438\u0437\u0442\u0440\u0438\u0442\u0438\u0442\u0435 \u043a\u043b\u043e\u043d\u0438 \u043e\u0442 \u0432\u0441\u0438\u0447\u043a\u0438 \u043e\u0442\u0434\u0430\u043b\u0435\u0447\u0435\u043d\u0438 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430"
-::msgcat::mcset bg "Pushing changes to %s" "\u0418\u0437\u0442\u043b\u0430\u0441\u043a\u0432\u0430\u043d\u0435 \u043d\u0430 \u043f\u0440\u043e\u043c\u0435\u043d\u0438\u0442\u0435 \u043a\u044a\u043c %s"
+::msgcat::mcset bg "fetch all remotes" "\u0434\u043e\u0441\u0442\u0430\u0432\u044f\u043d\u0435 \u043d\u0430 \u0432\u0441\u0438\u0447\u043a\u0438 \u043e\u0442\u0434\u0430\u043b\u0435\u0447\u0435\u043d\u0438 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430"
+::msgcat::mcset bg "Fetching new changes from all remotes" "\u0414\u043e\u0441\u0442\u0430\u0432\u044f\u043d\u0435 \u043d\u0430 \u043d\u043e\u0432\u0438\u0442\u0435 \u043f\u0440\u043e\u043c\u0435\u043d\u0438 \u043e\u0442 \u0432\u0441\u0438\u0447\u043a\u0438 \u043e\u0442\u0434\u0430\u043b\u0435\u0447\u0435\u043d\u0438 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430"
+::msgcat::mcset bg "remote prune all remotes" "\u043e\u043a\u0430\u0441\u0442\u0440\u044f\u043d\u0435 \u043d\u0430 \u0432\u0441\u0438\u0447\u043a\u0438 \u0441\u043b\u0435\u0434\u044f\u0449\u0438 \u043a\u043b\u043e\u043d\u0438"
+::msgcat::mcset bg "Pruning tracking branches deleted from all remotes" "\u041e\u043a\u0430\u0441\u0442\u0440\u044f\u043d\u0435 \u043d\u0430 \u0432\u0441\u0438\u0447\u043a\u0438 \u043a\u043b\u043e\u043d\u0438, \u043a\u043e\u0438\u0442\u043e \u0441\u043b\u0435\u0434\u044f\u0442 \u0438\u0437\u0442\u0440\u0438\u0442\u0438 \u043a\u043b\u043e\u043d\u0438 \u043e\u0442 \u043e\u0442\u0434\u0430\u043b\u0435\u0447\u0435\u043d\u0438 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430"
+::msgcat::mcset bg "Pushing changes to %s" "\u0418\u0437\u0442\u043b\u0430\u0441\u043a\u0432\u0430\u043d\u0435 \u043d\u0430 \u043f\u0440\u043e\u043c\u0435\u043d\u0438\u0442\u0435 \u043a\u044a\u043c \u201e%s\u201c"
 ::msgcat::mcset bg "Mirroring to %s" "\u0418\u0437\u0442\u043b\u0430\u0441\u043a\u0432\u0430\u043d\u0435 \u043d\u0430 \u0432\u0441\u0438\u0447\u043a\u043e \u043a\u044a\u043c \u201e%s\u201c"
-::msgcat::mcset bg "Pushing %s %s to %s" "\u0418\u0437\u0442\u043b\u0430\u0441\u043a\u0432\u0430\u043d\u0435 \u043d\u0430 %s %s \u043a\u044a\u043c %s"
+::msgcat::mcset bg "Pushing %s %s to %s" "\u0418\u0437\u0442\u043b\u0430\u0441\u043a\u0432\u0430\u043d\u0435 \u043d\u0430 %s \u201e%s\u201c \u043a\u044a\u043c \u201e%s\u201c"
 ::msgcat::mcset bg "Push Branches" "\u041a\u043b\u043e\u043d\u0438 \u0437\u0430 \u0438\u0437\u0442\u043b\u0430\u0441\u043a\u0432\u0430\u043d\u0435"
 ::msgcat::mcset bg "Source Branches" "\u041a\u043b\u043e\u043d\u0438-\u0438\u0437\u0442\u043e\u0447\u043d\u0438\u0446\u0438"
 ::msgcat::mcset bg "Destination Repository" "\u0426\u0435\u043b\u0435\u0432\u043e \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435"
 ::msgcat::mcset bg "Remote:" "\u041e\u0442\u0434\u0430\u043b\u0435\u0447\u0435\u043d\u043e \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435:"
 ::msgcat::mcset bg "Arbitrary Location:" "\u041f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u043d\u043e \u043c\u0435\u0441\u0442\u043e\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435:"
 ::msgcat::mcset bg "Transfer Options" "\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043f\u0440\u0438 \u043f\u0440\u0435\u043d\u0430\u0441\u044f\u043d\u0435\u0442\u043e"
@@ -221,13 +221,13 @@
 ::msgcat::mcset bg "'%s' is not an acceptable branch name." "\u201e%s\u201c \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0441\u0435 \u0438\u0437\u043f\u043e\u043b\u0437\u0432\u0430 \u0437\u0430 \u0438\u043c\u0435 \u043d\u0430 \u043a\u043b\u043e\u043d."
 ::msgcat::mcset bg "Failed to rename '%s'." "\u041d\u0435\u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043f\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0432\u0430\u043d\u0435 \u043d\u0430 \u201e%s\u201c."
 ::msgcat::mcset bg "Select" "\u0418\u0437\u0431\u043e\u0440"
 ::msgcat::mcset bg "Font Family" "\u0428\u0440\u0438\u0444\u0442"
 ::msgcat::mcset bg "Font Size" "\u0420\u0430\u0437\u043c\u0435\u0440"
 ::msgcat::mcset bg "Font Example" "\u041c\u043e\u0441\u0442\u0440\u0430"
-::msgcat::mcset bg "This is example text.\nIf you like this text, it can be your font." "\u0422\u043e\u0432\u0430 \u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u0435\u043d \u0442\u0435\u043a\u0441\u0442.\n\u0410\u043a\u043e \u0432\u0438 \u0445\u0430\u0440\u0435\u0441\u0432\u0430 \u043a\u0430\u043a \u0438\u0437\u0433\u043b\u0435\u0436\u0434\u0430, \u0438\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u0442\u043e\u0437\u0438 \u0448\u0440\u0438\u0444\u0442."
+::msgcat::mcset bg "This is example text.\nIf you like this text, it can be your font." "\u0422\u043e\u0432\u0430 \u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u0435\u043d \u0442\u0435\u043a\u0441\u0442.\n\u0410\u043a\u043e \u0432\u0438 \u0445\u0430\u0440\u0435\u0441\u0432\u0430 \u043a\u0430\u043a \u0438\u0437\u0433\u043b\u0435\u0436\u0434\u0430, \u0438\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u0448\u0440\u0438\u0444\u0442\u0430."
 ::msgcat::mcset bg "Invalid global encoding '%s'" "\u041d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u043d\u043e \u0433\u043b\u043e\u0431\u0430\u043b\u043d\u043e \u043a\u043e\u0434\u0438\u0440\u0430\u043d\u0435 \u201e%s\u201c"
 ::msgcat::mcset bg "Invalid repo encoding '%s'" "\u041d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u043d\u043e \u043a\u043e\u0434\u0438\u0440\u0430\u043d\u0435 \u201e%s\u201c \u043d\u0430 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435\u0442\u043e"
 ::msgcat::mcset bg "Restore Defaults" "\u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438"
 ::msgcat::mcset bg "Save" "\u0417\u0430\u043f\u0430\u0437\u0432\u0430\u043d\u0435"
 ::msgcat::mcset bg "%s Repository" "\u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435 \u201e%s\u201c"
 ::msgcat::mcset bg "Global (All Repositories)" "\u0413\u043b\u043e\u0431\u0430\u043b\u043d\u043e (\u0437\u0430 \u0432\u0441\u0438\u0447\u043a\u0438 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430)"
@@ -237,37 +237,41 @@
 ::msgcat::mcset bg "Merge Verbosity" "\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0441\u0442\u0438 \u043f\u0440\u0438 \u0441\u043b\u0438\u0432\u0430\u043d\u0438\u044f\u0442\u0430"
 ::msgcat::mcset bg "Show Diffstat After Merge" "\u0418\u0437\u0432\u0435\u0436\u0434\u0430\u043d\u0435 \u043d\u0430 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u0441\u043b\u0435\u0434 \u0441\u043b\u0438\u0432\u0430\u043d\u0438\u044f\u0442\u0430"
 ::msgcat::mcset bg "Use Merge Tool" "\u0418\u0437\u043f\u043e\u043b\u0437\u0432\u0430\u043d\u0435 \u043d\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0430 \u0437\u0430 \u0441\u043b\u0438\u0432\u0430\u043d\u0435"
 ::msgcat::mcset bg "Trust File Modification Timestamps" "\u0414\u043e\u0432\u0435\u0440\u0438\u0435 \u0432\u044a\u0432 \u0432\u0440\u0435\u043c\u0435\u0442\u043e \u043d\u0430 \u043f\u0440\u043e\u043c\u044f\u043d\u0430 \u043d\u0430 \u0444\u0430\u0439\u043b\u043e\u0432\u0435\u0442\u0435"
 ::msgcat::mcset bg "Prune Tracking Branches During Fetch" "\u041e\u043a\u0430\u0441\u0442\u0440\u044f\u043d\u0435 \u043d\u0430 \u0441\u043b\u0435\u0434\u044f\u0449\u0438\u0442\u0435 \u043a\u043b\u043e\u043d\u043e\u0432\u0435 \u043f\u0440\u0438 \u0434\u043e\u0441\u0442\u0430\u0432\u044f\u043d\u0435"
 ::msgcat::mcset bg "Match Tracking Branches" "\u041d\u0430\u043f\u0430\u0441\u0432\u0430\u043d\u0435 \u043d\u0430 \u0441\u043b\u0435\u0434\u044f\u0449\u0438\u0442\u0435 \u043a\u043b\u043e\u043d\u043e\u0432\u0435"
-::msgcat::mcset bg "Use Textconv For Diffs and Blames" "\u0418\u0437\u043f\u043e\u043b\u0437\u0432\u0430\u043d\u0435 \u043d\u0430 \u201etextconv\u201c \u0437\u0430 \u0440\u0430\u0437\u043b\u0438\u043a\u0438\u0442\u0435 \u0438 \u0430\u043d\u043e\u0442\u0430\u0446\u0438\u0438\u0442\u0435"
+::msgcat::mcset bg "Use Textconv For Diffs and Blames" "\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0432\u0430\u043d\u0435 \u043d\u0430 \u0442\u0435\u043a\u0441\u0442\u0430 \u0441 \u201etextconv\u201c \u043f\u0440\u0438 \u0430\u043d\u043e\u0442\u0438\u0440\u0430\u043d\u0435 \u0438 \u0438\u0437\u0432\u0435\u0436\u0434\u0430\u043d\u0435 \u043d\u0430 \u0440\u0430\u0437\u043b\u0438\u043a\u0438"
 ::msgcat::mcset bg "Blame Copy Only On Changed Files" "\u0410\u043d\u043e\u0442\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 \u043a\u043e\u043f\u0438\u0435\u0442\u043e \u0441\u0430\u043c\u043e \u043f\u043e \u043f\u0440\u043e\u043c\u0435\u043d\u0435\u043d\u0438\u0442\u0435 \u0444\u0430\u0439\u043b\u043e\u0432\u0435"
-::msgcat::mcset bg "Maximum Length of Recent Repositories List" "\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u0435\u043d \u0431\u0440\u043e\u0439 \u0441\u043a\u043e\u0440\u043e \u043f\u043e\u043b\u0437\u0432\u0430\u043d\u0438 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430"
+::msgcat::mcset bg "Maximum Length of Recent Repositories List" "\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u043d\u0430 \u0434\u044a\u043b\u0436\u0438\u043d\u0430 \u043d\u0430 \u0441\u043f\u0438\u0441\u044a\u043a\u0430 \u0441\u044a\u0441 \u0441\u043a\u043e\u0440\u043e \u043f\u043e\u043b\u0437\u0432\u0430\u043d\u0438 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430"
 ::msgcat::mcset bg "Minimum Letters To Blame Copy On" "\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u0435\u043d \u0431\u0440\u043e\u0439 \u0437\u043d\u0430\u0446\u0438 \u0437\u0430 \u0430\u043d\u043e\u0442\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 \u043a\u043e\u043f\u0438\u0435\u0442\u043e"
 ::msgcat::mcset bg "Blame History Context Radius (days)" "\u0418\u0441\u0442\u043e\u0440\u0438\u0447\u0435\u0441\u043a\u0438 \u043e\u0431\u0445\u0432\u0430\u0442 \u0437\u0430 \u0430\u043d\u043e\u0442\u0438\u0440\u0430\u043d\u0435 \u0432 \u0434\u043d\u0438"
 ::msgcat::mcset bg "Number of Diff Context Lines" "\u0411\u0440\u043e\u0439 \u0440\u0435\u0434\u043e\u0432\u0435 \u0437\u0430 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 \u043f\u0440\u0438 \u0438\u0437\u0432\u0435\u0436\u0434\u0430\u043d\u0435 \u043d\u0430 \u0440\u0430\u0437\u043b\u0438\u043a\u0438\u0442\u0435"
-::msgcat::mcset bg "Additional Diff Parameters" "\u0414\u043e\u043f\u044a\u043b\u043d\u0438\u0442\u0435\u043b\u043d\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438 \u0437\u0430 \u0440\u0430\u0437\u043b\u0438\u043a\u0438\u0442\u0435"
+::msgcat::mcset bg "Additional Diff Parameters" "\u0414\u043e\u043f\u044a\u043b\u043d\u0438\u0442\u0435\u043b\u043d\u0438 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0438 \u043a\u044a\u043c \u201egit diff\u201c"
 ::msgcat::mcset bg "Commit Message Text Width" "\u0428\u0438\u0440\u043e\u0447\u0438\u043d\u0430 \u043d\u0430 \u0442\u0435\u043a\u0441\u0442\u0430 \u043d\u0430 \u0441\u044a\u043e\u0431\u0449\u0435\u043d\u0438\u0435\u0442\u043e \u043f\u0440\u0438 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435"
 ::msgcat::mcset bg "New Branch Name Template" "\u0428\u0430\u0431\u043b\u043e\u043d \u0437\u0430 \u0438\u043c\u0435\u0442\u043e \u043d\u0430 \u043d\u043e\u0432\u0438\u0442\u0435 \u043a\u043b\u043e\u043d\u0438"
 ::msgcat::mcset bg "Default File Contents Encoding" "\u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e \u043a\u043e\u0434\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 \u0444\u0430\u0439\u043b\u043e\u0432\u0435\u0442\u0435"
-::msgcat::mcset bg "Warn before committing to a detached head" "\u041f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435 \u043f\u0440\u0438 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435 \u043a\u044a\u043c \u043d\u0435\u0441\u0432\u044a\u0440\u0437\u0430\u043d \u0432\u0440\u044a\u0445"
-::msgcat::mcset bg "Staging of untracked files" "\u0414\u043e\u0431\u0430\u0432\u044f\u043d\u0435 \u043d\u0430 \u043d\u0435\u0441\u043b\u0435\u0434\u0435\u043d\u0438\u0442\u0435 \u0444\u0430\u0439\u043b\u043e\u0432\u0435 \u043a\u044a\u043c \u0438\u043d\u0434\u0435\u043a\u0441\u0430"
+::msgcat::mcset bg "Warn before committing to a detached head" "\u041f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0430\u0432\u0430\u043d\u0435 \u043f\u0440\u0438 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435\u0442\u043e \u043f\u0440\u0438 \u043d\u0435\u0441\u0432\u044a\u0440\u0437\u0430\u043d \u0432\u0440\u044a\u0445"
+::msgcat::mcset bg "Staging of untracked files" "\u0412\u043a\u0430\u0440\u0432\u0430\u043d\u0435 \u043d\u0430 \u043d\u0435\u0441\u043b\u0435\u0434\u0435\u043d\u0438 \u0444\u0430\u0439\u043b\u043e\u0432\u0435 \u0432 \u0438\u043d\u0434\u0435\u043a\u0441\u0430"
 ::msgcat::mcset bg "Show untracked files" "\u041f\u043e\u043a\u0430\u0437\u0432\u0430\u043d\u0435 \u043d\u0430 \u043d\u0435\u0441\u043b\u0435\u0434\u0435\u043d\u0438\u0442\u0435 \u0444\u0430\u0439\u043b\u043e\u0432\u0435"
+::msgcat::mcset bg "Tab spacing" "\u0420\u0430\u0437\u043c\u0435\u0440 \u043d\u0430 \u0442\u0430\u0431\u0443\u043b\u0430\u0446\u0438\u044f\u0442\u0430 \u0432 \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u0438"
 ::msgcat::mcset bg "Change" "\u0421\u043c\u044f\u043d\u0430"
 ::msgcat::mcset bg "Spelling Dictionary:" "\u041f\u0440\u0430\u0432\u043e\u043f\u0438\u0441\u0435\u043d \u0440\u0435\u0447\u043d\u0438\u043a:"
 ::msgcat::mcset bg "Change Font" "\u0421\u043c\u044f\u043d\u0430 \u043d\u0430 \u0448\u0440\u0438\u0444\u0442\u0430"
 ::msgcat::mcset bg "Choose %s" "\u0418\u0437\u0431\u043e\u0440 \u043d\u0430 \u201e%s\u201c"
 ::msgcat::mcset bg "pt." "\u0442\u0447\u043a."
 ::msgcat::mcset bg "Preferences" "\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438"
 ::msgcat::mcset bg "Failed to completely save options:" "\u041d\u0435\u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u043f\u0430\u0437\u0432\u0430\u043d\u0435 \u043d\u0430 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438\u0442\u0435:"
+::msgcat::mcset bg "Default" "\u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0442\u043e"
+::msgcat::mcset bg "System (%s)" "\u0421\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u0442\u043e (%s)"
+::msgcat::mcset bg "Other" "\u0414\u0440\u0443\u0433\u043e"
 ::msgcat::mcset bg "Force resolution to the base version?" "\u0414\u0430 \u0441\u0435 \u0438\u0437\u043f\u043e\u043b\u0437\u0432\u0430 \u0431\u0430\u0437\u043e\u0432\u0430\u0442\u0430 \u0432\u0435\u0440\u0441\u0438\u044f"
 ::msgcat::mcset bg "Force resolution to this branch?" "\u0414\u0430 \u0441\u0435 \u0438\u0437\u043f\u043e\u043b\u0437\u0432\u0430 \u0432\u0435\u0440\u0441\u0438\u044f\u0442\u0430 \u043e\u0442 \u0442\u043e\u0437\u0438 \u043a\u043b\u043e\u043d"
 ::msgcat::mcset bg "Force resolution to the other branch?" "\u0414\u0430 \u0441\u0435 \u0438\u0437\u043f\u043e\u043b\u0437\u0432\u0430 \u0432\u0435\u0440\u0441\u0438\u044f\u0442\u0430 \u043e\u0442 \u0434\u0440\u0443\u0433\u0438\u044f \u043a\u043b\u043e\u043d"
 ::msgcat::mcset bg "Note that the diff shows only conflicting changes.\n\n%s will be overwritten.\n\nThis operation can be undone only by restarting the merge." "\u0420\u0430\u0437\u043b\u0438\u043a\u0430\u0442\u0430 \u043f\u043e\u043a\u0430\u0437\u0432\u0430 \u0441\u0430\u043c\u043e \u0440\u0430\u0437\u043b\u0438\u043a\u0438\u0442\u0435 \u0441 \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442.\n\n\u0424\u0430\u0439\u043b\u044a\u0442 \u201e%s\u201c \u0449\u0435 \u0431\u044a\u0434\u0435 \u043f\u0440\u0435\u0437\u0430\u043f\u0438\u0441\u0430\u043d.\n\n\u0422\u0430\u0437\u0438 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043e\u0442\u043c\u0435\u043d\u0435\u043d\u0430 \u0441\u0430\u043c\u043e \u0447\u0440\u0435\u0437 \u0437\u0430\u043f\u043e\u0447\u0432\u0430\u043d\u0435 \u043d\u0430 \u0441\u043b\u0438\u0432\u0430\u043d\u0435\u0442\u043e \u043d\u0430\u043d\u043e\u0432\u043e."
-::msgcat::mcset bg "File %s seems to have unresolved conflicts, still stage?" "\u0418\u0437\u0433\u043b\u0435\u0436\u0434\u0430, \u0447\u0435 \u0432\u044a\u0432 \u0444\u0430\u0439\u043b\u0430 \u201e%s\u201c \u0432\u0441\u0435 \u043e\u0449\u0435 \u0438\u043c\u0430 \u043d\u0435\u043a\u043e\u0440\u0438\u0433\u0438\u0440\u0430\u043d\u0438 \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u0438. \u0414\u0430 \u0441\u0435 \u0434\u043e\u0431\u0430\u0432\u0438 \u043b\u0438 \u0444\u0430\u0439\u043b\u044a\u0442 \u043a\u044a\u043c \u0438\u043d\u0434\u0435\u043a\u0441\u0430?"
+::msgcat::mcset bg "File %s seems to have unresolved conflicts, still stage?" "\u0418\u0437\u0433\u043b\u0435\u0436\u0434\u0430, \u0447\u0435 \u0432\u0441\u0435 \u043e\u0449\u0435 \u0438\u043c\u0430 \u043d\u0435\u043a\u043e\u0440\u0438\u0433\u0438\u0440\u0430\u043d\u0438 \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u0438 \u0432\u044a\u0432 \u0444\u0430\u0439\u043b\u0430 \u201e%s\u201c. \u0414\u0430 \u0441\u0435 \u0434\u043e\u0431\u0430\u0432\u0438 \u043b\u0438 \u0444\u0430\u0439\u043b\u044a\u0442 \u043a\u044a\u043c \u0438\u043d\u0434\u0435\u043a\u0441\u0430?"
 ::msgcat::mcset bg "Adding resolution for %s" "\u0414\u043e\u0431\u0430\u0432\u044f\u043d\u0435 \u043d\u0430 \u043a\u043e\u0440\u0435\u043a\u0446\u0438\u044f \u043d\u0430 \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u0438\u0442\u0435 \u0432 \u201e%s\u201c"
 ::msgcat::mcset bg "Cannot resolve deletion or link conflicts using a tool" "\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u0438\u0442\u0435 \u043f\u0440\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u043d\u0438 \u0432\u0440\u044a\u0437\u043a\u0438 \u0438\u043b\u0438 \u0438\u0437\u0442\u0440\u0438\u0432\u0430\u043d\u0435 \u043d\u0435 \u043c\u043e\u0433\u0430\u0442 \u0434\u0430 \u0431\u044a\u0434\u0430\u0442 \u043a\u043e\u0440\u0438\u0433\u0438\u0440\u0430\u043d\u0438 \u0441 \u0432\u044a\u043d\u0448\u043d\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0430."
 ::msgcat::mcset bg "Conflict file does not exist" "\u0424\u0430\u0439\u043b\u044a\u0442, \u0432 \u043a\u043e\u0439\u0442\u043e \u0435 \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u044a\u0442, \u043d\u0435 \u0441\u044a\u0449\u0435\u0441\u0442\u0432\u0443\u0432\u0430"
 ::msgcat::mcset bg "Not a GUI merge tool: '%s'" "\u0422\u043e\u0432\u0430 \u043d\u0435 \u0435 \u0433\u0440\u0430\u0444\u0438\u0447\u043d\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0430 \u0437\u0430 \u0441\u043b\u0438\u0432\u0430\u043d\u0435: \u201e%s\u201c"
 ::msgcat::mcset bg "Unsupported merge tool '%s'" "\u041d\u0435\u043f\u043e\u0434\u0434\u044a\u0440\u0436\u0430\u043d\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0430 \u0437\u0430 \u0441\u043b\u0438\u0432\u0430\u043d\u0435: \u201e%s\u201c"
 ::msgcat::mcset bg "Merge tool is already running, terminate it?" "\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u0430\u0442\u0430 \u0437\u0430 \u0441\u043b\u0438\u0432\u0430\u043d\u0435 \u0432\u0435\u0447\u0435 \u0435 \u0441\u0442\u0430\u0440\u0442\u0438\u0440\u0430\u043d\u0430. \u0414\u0430 \u0431\u044a\u0434\u0435 \u043b\u0438 \u0438\u0437\u043a\u043b\u044e\u0447\u0435\u043d\u0430?"
@@ -276,62 +280,62 @@
 ::msgcat::mcset bg "Running merge tool..." "\u0421\u0442\u0430\u0440\u0442\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0430\u0442\u0430 \u0437\u0430 \u0441\u043b\u0438\u0432\u0430\u043d\u0435\u2026"
 ::msgcat::mcset bg "Merge tool failed." "\u0413\u0440\u0435\u0448\u043a\u0430 \u0432 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0430\u0442\u0430 \u0437\u0430 \u0441\u043b\u0438\u0432\u0430\u043d\u0435."
 ::msgcat::mcset bg "Add Tool" "\u0414\u043e\u0431\u0430\u0432\u044f\u043d\u0435 \u043d\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u0430"
 ::msgcat::mcset bg "Add New Tool Command" "\u0414\u043e\u0431\u0430\u0432\u044f\u043d\u0435 \u043d\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u0430"
 ::msgcat::mcset bg "Add globally" "\u0413\u043b\u043e\u0431\u0430\u043b\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u044f\u043d\u0435"
 ::msgcat::mcset bg "Tool Details" "\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0441\u0442\u0438 \u0437\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u0430\u0442\u0430"
-::msgcat::mcset bg "Use '/' separators to create a submenu tree:" "\u0417\u0430 \u0441\u044a\u0437\u0434\u0430\u0432\u0430\u043d\u0435 \u043d\u0430 \u043f\u043e\u0434\u043c\u0435\u043d\u044e\u0442\u0430 \u0438\u0437\u043f\u043e\u043b\u0437\u0432\u0430\u0439\u0442\u0435 \u0437\u0430 \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b \u0437\u043d\u0430\u043a\u0430 \u201e/\u201c:"
+::msgcat::mcset bg "Use '/' separators to create a submenu tree:" "\u0417\u0430 \u0441\u044a\u0437\u0434\u0430\u0432\u0430\u043d\u0435 \u043d\u0430 \u043f\u043e\u0434\u043c\u0435\u043d\u044e\u0442\u0430 \u0438\u0437\u043f\u043e\u043b\u0437\u0432\u0430\u0439\u0442\u0435 \u0437\u043d\u0430\u043a\u0430 \u201e/\u201c \u0437\u0430 \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b:"
 ::msgcat::mcset bg "Command:" "\u041a\u043e\u043c\u0430\u043d\u0434\u0430:"
 ::msgcat::mcset bg "Show a dialog before running" "\u041f\u0440\u0435\u0434\u0438 \u0438\u0437\u043f\u044a\u043b\u043d\u0435\u043d\u0438\u0435 \u0434\u0430 \u0441\u0435 \u0438\u0437\u0432\u0435\u0436\u0434\u0430 \u0434\u0438\u0430\u043b\u043e\u0433\u043e\u0432 \u043f\u0440\u043e\u0437\u043e\u0440\u0435\u0446"
 ::msgcat::mcset bg "Ask the user to select a revision (sets \$REVISION)" "\u041f\u043e\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044f\u0442 \u0434\u0430 \u0443\u043a\u0430\u0436\u0435 \u0432\u0435\u0440\u0441\u0438\u044f (\u0437\u0430\u0434\u0430\u0432\u0430\u043d\u0435 \u043d\u0430 \u043f\u0440\u043e\u043c\u0435\u043d\u043b\u0438\u0432\u0430\u0442\u0430 \$REVISION)"
 ::msgcat::mcset bg "Ask the user for additional arguments (sets \$ARGS)" "\u041f\u043e\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044f\u0442 \u0434\u0430 \u0443\u043a\u0430\u0436\u0435 \u0434\u043e\u043f\u044a\u043b\u043d\u0438\u0442\u0435\u043b\u043d\u0438 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0438 (\u0437\u0430\u0434\u0430\u0432\u0430\u043d\u0435 \u043d\u0430 \u043f\u0440\u043e\u043c\u0435\u043d\u043b\u0438\u0432\u0430\u0442\u0430 \$ARGS)"
 ::msgcat::mcset bg "Don't show the command output window" "\u0411\u0435\u0437 \u043f\u043e\u043a\u0430\u0437\u0432\u0430\u043d\u0435 \u043d\u0430 \u043f\u0440\u043e\u0437\u043e\u0440\u0435\u0446 \u0441 \u0438\u0437\u0445\u043e\u0434\u0430 \u043e\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u0430\u0442\u0430"
 ::msgcat::mcset bg "Run only if a diff is selected (\$FILENAME not empty)" "\u0421\u0442\u0430\u0440\u0442\u0438\u0440\u0430\u043d\u0435 \u0441\u0430\u043c\u043e \u0441\u043b\u0435\u0434 \u0438\u0437\u0431\u043e\u0440 \u043d\u0430 \u0440\u0430\u0437\u043b\u0438\u043a\u0430 (\u043f\u0440\u043e\u043c\u0435\u043d\u043b\u0438\u0432\u0430\u0442\u0430 \$FILENAME \u043d\u0435 \u0435 \u043f\u0440\u0430\u0437\u043d\u0430)"
 ::msgcat::mcset bg "Please supply a name for the tool." "\u0417\u0430\u0434\u0430\u0439\u0442\u0435 \u0438\u043c\u0435 \u0437\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u0430\u0442\u0430."
 ::msgcat::mcset bg "Tool '%s' already exists." "\u041a\u043e\u043c\u0430\u043d\u0434\u0430\u0442\u0430 \u201e%s\u201c \u0432\u0435\u0447\u0435 \u0441\u044a\u0449\u0435\u0441\u0442\u0432\u0443\u0432\u0430."
 ::msgcat::mcset bg "Could not add tool:\n%s" "\u041a\u043e\u043c\u0430\u043d\u0434\u0430\u0442\u0430 \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u0434\u043e\u0431\u0430\u0432\u0435\u043d\u0430:\n%s"
 ::msgcat::mcset bg "Remove Tool" "\u041f\u0440\u0435\u043c\u0430\u0445\u0432\u0430\u043d\u0435 \u043d\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u0430"
 ::msgcat::mcset bg "Remove Tool Commands" "\u041f\u0440\u0435\u043c\u0430\u0445\u0432\u0430\u043d\u0435 \u043d\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u0438"
 ::msgcat::mcset bg "Remove" "\u041f\u0440\u0435\u043c\u0430\u0445\u0432\u0430\u043d\u0435"
-::msgcat::mcset bg "(Blue denotes repository-local tools)" "(\u043a\u043e\u043c\u0430\u043d\u0434\u0438 \u043a\u044a\u043c \u043b\u043e\u043a\u0430\u043b\u043d\u043e\u0442\u043e \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435 \u0441\u0430 \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438 \u0432 \u0441\u0438\u043d\u044c\u043e)"
+::msgcat::mcset bg "(Blue denotes repository-local tools)" "(\u043a\u043e\u043c\u0430\u043d\u0434\u0438\u0442\u0435 \u043a\u044a\u043c \u043b\u043e\u043a\u0430\u043b\u043d\u043e\u0442\u043e \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435 \u0441\u0430 \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438 \u0432 \u0441\u0438\u043d\u044c\u043e)"
 ::msgcat::mcset bg "Run Command: %s" "\u0418\u0437\u043f\u044a\u043b\u043d\u0435\u043d\u0438\u0435 \u043d\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u0430\u0442\u0430 \u201e%s\u201c"
 ::msgcat::mcset bg "Arguments" "\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0438"
 ::msgcat::mcset bg "Visualize" "\u0412\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f"
 ::msgcat::mcset bg "OK" "\u0414\u043e\u0431\u0440\u0435"
 ::msgcat::mcset bg "Find:" "\u0422\u044a\u0440\u0441\u0435\u043d\u0435:"
 ::msgcat::mcset bg "Next" "\u0421\u043b\u0435\u0434\u0432\u0430\u0449\u0430 \u043f\u043e\u044f\u0432\u0430"
 ::msgcat::mcset bg "Prev" "\u041f\u0440\u0435\u0434\u0438\u0448\u043d\u0430 \u043f\u043e\u044f\u0432\u0430"
-::msgcat::mcset bg "RegExp" "\u0420\u0435\u0433. \u0438\u0437\u0440."
+::msgcat::mcset bg "RegExp" "\u0420\u0435\u0433. \u0438\u0437\u0440\u0430\u0437"
 ::msgcat::mcset bg "Case" "\u0420\u0435\u0433\u0438\u0441\u0442\u044a\u0440"
 ::msgcat::mcset bg "Cannot write shortcut:" "\u041a\u043b\u0430\u0432\u0438\u0448\u043d\u0430\u0442\u0430 \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u044f \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u0437\u0430\u043f\u0430\u0437\u0435\u043d\u0430:"
 ::msgcat::mcset bg "Cannot write icon:" "\u0418\u043a\u043e\u043d\u0430\u0442\u0430 \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u0437\u0430\u043f\u0430\u0437\u0435\u043d\u0430:"
 ::msgcat::mcset bg "No differences detected.\n\n%s has no changes.\n\nThe modification date of this file was updated by another application, but the content within the file was not changed.\n\nA rescan will be automatically started to find other files which may have the same state." "\u041d\u0435 \u0441\u0430 \u043e\u0442\u043a\u0440\u0438\u0442\u0438 \u0440\u0430\u0437\u043b\u0438\u043a\u0438.\n\n\u041d\u044f\u043c\u0430 \u043f\u0440\u043e\u043c\u0435\u043d\u0438 \u0432 \u201e%s\u201c.\n\n\u0412\u0440\u0435\u043c\u0435\u0442\u043e \u043d\u0430 \u043f\u0440\u043e\u043c\u044f\u043d\u0430 \u043d\u0430 \u0444\u0430\u0439\u043b\u0430 \u0435 \u0431\u0438\u043b \u0437\u0430\u0434\u0430\u0434\u0435\u043d \u043e\u0442 \u0434\u0440\u0443\u0433\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0430, \u043d\u043e \u0441\u044a\u0434\u044a\u0440\u0436\u0430\u043d\u0438\u0435\u0442\u043e \u043c\u0443 \u043d\u0435 \u0435 \u043f\u0440\u043e\u043c\u0435\u043d\u0435\u043d\u043e.\n\n\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u043e \u0449\u0435 \u0437\u0430\u043f\u043e\u0447\u043d\u0435 \u043d\u043e\u0432\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0434\u0430\u043b\u0438 \u043d\u044f\u043c\u0430 \u0434\u0440\u0443\u0433\u0438 \u0444\u0430\u0439\u043b\u043e\u0432\u0435 \u0432 \u0442\u043e\u0432\u0430 \u0441\u044a\u0441\u0442\u043e\u044f\u043d\u0438\u0435."
 ::msgcat::mcset bg "Loading diff of %s..." "\u0417\u0430\u0440\u0435\u0436\u0434\u0430\u043d\u0435 \u043d\u0430 \u0440\u0430\u0437\u043b\u0438\u043a\u0438\u0442\u0435 \u0432 \u201e%s\u201c\u2026"
 ::msgcat::mcset bg "LOCAL: deleted\nREMOTE:\n" "\u041b\u041e\u041a\u0410\u041b\u041d\u041e: \u0438\u0437\u0442\u0440\u0438\u0442\n\u041e\u0422\u0414\u0410\u041b\u0415\u0427\u0415\u041d\u041e:\n"
 ::msgcat::mcset bg "REMOTE: deleted\nLOCAL:\n" "\u041e\u0422\u0414\u0410\u041b\u0415\u0427\u0415\u041d\u041e: \u0438\u0437\u0442\u0440\u0438\u0442\n\u041b\u041e\u041a\u0410\u041b\u041d\u041e:\n"
 ::msgcat::mcset bg "LOCAL:\n" "\u041b\u041e\u041a\u0410\u041b\u041d\u041e:\n"
 ::msgcat::mcset bg "REMOTE:\n" "\u041e\u0422\u0414\u0410\u041b\u0415\u0427\u0415\u041d\u041e:\n"
-::msgcat::mcset bg "Unable to display %s" "\u041d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u043d \u0444\u0430\u0439\u043b\u044a\u0442 \u201e%s\u201c"
+::msgcat::mcset bg "Unable to display %s" "\u0424\u0430\u0439\u043b\u044a\u0442 \u201e%s\u201c \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u043d"
 ::msgcat::mcset bg "Error loading file:" "\u0413\u0440\u0435\u0448\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0440\u0435\u0436\u0434\u0430\u043d\u0435 \u043d\u0430 \u0444\u0430\u0439\u043b:"
-::msgcat::mcset bg "Git Repository (subproject)" "\u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435 \u043d\u0430 Git (\u043f\u043e\u0434\u043f\u0440\u043e\u0435\u043a\u0442)"
-::msgcat::mcset bg "* Binary file (not showing content)." "\u2043 \u0414\u0432\u043e\u0438\u0447\u0435\u043d \u0444\u0430\u0439\u043b (\u0441\u044a\u0434\u044a\u0440\u0436\u0430\u043d\u0438\u0435\u0442\u043e \u043d\u0435 \u0441\u0435 \u043f\u043e\u043a\u0430\u0437\u0432\u0430)."
-::msgcat::mcset bg "* Untracked file is %d bytes.\n* Showing only first %d bytes.\n" "\u2043 \u041d\u0435\u0441\u043b\u0435\u0434\u0435\u043d\u0438\u044f\u0442 \u0444\u0430\u0439\u043b \u0435 %d \u0431\u0430\u0439\u0442\u0430.\n\u2043 \u041f\u043e\u043a\u0430\u0437\u0432\u0430\u0442 \u0441\u0435 \u0441\u0430\u043c\u043e \u043f\u044a\u0440\u0432\u0438\u0442\u0435 %d \u0431\u0430\u0439\u0442\u0430.\n"
-::msgcat::mcset bg "\n* Untracked file clipped here by %s.\n* To see the entire file, use an external editor.\n" "\n\u2043 \u041d\u0435\u0441\u043b\u0435\u0434\u0435\u043d\u0438\u044f\u0442 \u0444\u0430\u0439\u043b \u0435 \u043e\u0442\u0440\u044f\u0437\u0430\u043d \u0434\u043e\u0442\u0443\u043a %s.\n\u2043 \u0418\u0437\u043f\u043e\u043b\u0437\u0432\u0430\u0439\u0442\u0435 \u0432\u044a\u043d\u0448\u0435\u043d \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440, \u0437\u0430 \u0434\u0430 \u0432\u0438\u0434\u0438\u0442\u0435 \u0446\u0435\u043b\u0438\u044f \u0444\u0430\u0439\u043b.\n"
+::msgcat::mcset bg "Git Repository (subproject)" "\u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435 \u043d\u0430 Git (\u043f\u043e\u0434\u043c\u043e\u0434\u0443\u043b)"
+::msgcat::mcset bg "* Binary file (not showing content)." "\u25cf \u0414\u0432\u043e\u0438\u0447\u0435\u043d \u0444\u0430\u0439\u043b (\u0441\u044a\u0434\u044a\u0440\u0436\u0430\u043d\u0438\u0435\u0442\u043e \u043d\u0435 \u0441\u0435 \u043f\u043e\u043a\u0430\u0437\u0432\u0430)."
+::msgcat::mcset bg "* Untracked file is %d bytes.\n* Showing only first %d bytes.\n" "\u25cf \u041d\u0435\u0441\u043b\u0435\u0434\u0435\u043d\u0438\u044f\u0442 \u0444\u0430\u0439\u043b \u0435 %d \u0431\u0430\u0439\u0442\u0430.\n\u25cf \u041f\u043e\u043a\u0430\u0437\u0432\u0430\u0442 \u0441\u0435 \u0441\u0430\u043c\u043e \u043f\u044a\u0440\u0432\u0438\u0442\u0435 %d \u0431\u0430\u0439\u0442\u0430.\n"
+::msgcat::mcset bg "\n* Untracked file clipped here by %s.\n* To see the entire file, use an external editor.\n" "\n\u25cf \u041d\u0435\u0441\u043b\u0435\u0434\u0435\u043d\u0438\u044f\u0442 \u0444\u0430\u0439\u043b \u0435 \u043e\u0442\u0440\u044f\u0437\u0430\u043d \u0434\u043e\u0442\u0443\u043a \u043e\u0442 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0430\u0442\u0430 \u201e%s\u201c.\n\u25cf \u0418\u0437\u043f\u043e\u043b\u0437\u0432\u0430\u0439\u0442\u0435 \u0432\u044a\u043d\u0448\u0435\u043d \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440, \u0437\u0430 \u0434\u0430 \u0432\u0438\u0434\u0438\u0442\u0435 \u0446\u0435\u043b\u0438\u044f \u0444\u0430\u0439\u043b.\n"
 ::msgcat::mcset bg "Error loading diff:" "\u0413\u0440\u0435\u0448\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0440\u0435\u0436\u0434\u0430\u043d\u0435 \u043d\u0430 \u0440\u0430\u0437\u043b\u0438\u043a\u0430:"
 ::msgcat::mcset bg "Failed to unstage selected hunk." "\u0418\u0437\u0431\u0440\u0430\u043d\u043e\u0442\u043e \u043f\u0430\u0440\u0447\u0435 \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u0438\u0437\u0432\u0430\u0434\u0435\u043d\u043e \u043e\u0442 \u0438\u043d\u0434\u0435\u043a\u0441\u0430."
-::msgcat::mcset bg "Failed to stage selected hunk." "\u0418\u0437\u0431\u0440\u0430\u043d\u043e\u0442\u043e \u043f\u0430\u0440\u0447\u0435 \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u0434\u043e\u0431\u0430\u0432\u0435\u043d \u043a\u044a\u043c \u0438\u043d\u0434\u0435\u043a\u0441\u0430."
+::msgcat::mcset bg "Failed to stage selected hunk." "\u0418\u0437\u0431\u0440\u0430\u043d\u043e\u0442\u043e \u043f\u0430\u0440\u0447\u0435 \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u0434\u043e\u0431\u0430\u0432\u0435\u043d\u043e \u043a\u044a\u043c \u0438\u043d\u0434\u0435\u043a\u0441\u0430."
 ::msgcat::mcset bg "Failed to unstage selected line." "\u0418\u0437\u0431\u0440\u0430\u043d\u0438\u044f\u0442 \u0440\u0435\u0434 \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u0438\u0437\u0432\u0430\u0434\u0435\u043d \u043e\u0442 \u0438\u043d\u0434\u0435\u043a\u0441\u0430."
 ::msgcat::mcset bg "Failed to stage selected line." "\u0418\u0437\u0431\u0440\u0430\u043d\u0438\u044f\u0442 \u0440\u0435\u0434 \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u0434\u043e\u0431\u0430\u0432\u0435\u043d \u043a\u044a\u043c \u0438\u043d\u0434\u0435\u043a\u0441\u0430."
 ::msgcat::mcset bg "Delete Branch Remotely" "\u0418\u0437\u0442\u0440\u0438\u0432\u0430\u043d\u0435 \u043d\u0430 \u043e\u0442\u0434\u0430\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u043a\u043b\u043e\u043d"
 ::msgcat::mcset bg "From Repository" "\u041e\u0442 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435"
-::msgcat::mcset bg "Branches" "\u041a\u043b\u043e\u043d\u043e\u0432\u0435"
+::msgcat::mcset bg "Branches" "\u041a\u043b\u043e\u043d\u0438"
 ::msgcat::mcset bg "Delete Only If" "\u0418\u0437\u0442\u0440\u0438\u0432\u0430\u043d\u0435, \u0441\u0430\u043c\u043e \u0430\u043a\u043e"
 ::msgcat::mcset bg "Merged Into:" "\u0421\u043b\u044f\u0442 \u0432:"
 ::msgcat::mcset bg "Always (Do not perform merge checks)" "\u0412\u0438\u043d\u0430\u0433\u0438 (\u0431\u0435\u0437 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0437\u0430 \u0441\u043b\u0438\u0432\u0430\u043d\u0435)"
 ::msgcat::mcset bg "A branch is required for 'Merged Into'." "\u0417\u0430 \u0434\u0430\u043d\u043d\u0438\u0442\u0435 \u201e\u0421\u043b\u044f\u0442 \u0432\u201c \u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0434\u0430 \u0437\u0430\u0434\u0430\u0434\u0435\u0442\u0435 \u043a\u043b\u043e\u043d."
-::msgcat::mcset bg "The following branches are not completely merged into %s:\n\n - %s" "\u0421\u043b\u0435\u0434\u043d\u0438\u0442\u0435 \u043a\u043b\u043e\u043d\u0438 \u043d\u0435 \u0441\u0430 \u0441\u043b\u0435\u0442\u0438 \u043d\u0430\u043f\u044a\u043b\u043d\u043e \u0432 \u201e%s\u201c:\n\n \u2043 %s"
+::msgcat::mcset bg "The following branches are not completely merged into %s:\n\n - %s" "\u0421\u043b\u0435\u0434\u043d\u0438\u0442\u0435 \u043a\u043b\u043e\u043d\u0438 \u043d\u0435 \u0441\u0430 \u0441\u043b\u0435\u0442\u0438 \u043d\u0430\u043f\u044a\u043b\u043d\u043e \u0432 \u201e%s\u201c:\n\n \u25cf %s"
 ::msgcat::mcset bg "One or more of the merge tests failed because you have not fetched the necessary commits.  Try fetching from %s first." "\u041f\u043e\u043d\u0435 \u0435\u0434\u043d\u0430 \u043e\u0442 \u043f\u0440\u043e\u0431\u0438\u0442\u0435 \u0437\u0430 \u0441\u043b\u0438\u0432\u0430\u043d\u0435 \u0435 \u043d\u0435\u0443\u0441\u043f\u0435\u0448\u043d\u0430, \u0437\u0430\u0449\u043e\u0442\u043e \u043d\u0435 \u0441\u0442\u0435 \u0434\u043e\u0441\u0442\u0430\u0432\u0438\u043b\u0438 \u0432\u0441\u0438\u0447\u043a\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0438 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0438\u044f. \u041f\u0440\u043e\u0431\u0432\u0430\u0439\u0442\u0435 \u043f\u044a\u0440\u0432\u043e \u0434\u0430 \u0434\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u0435 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0438\u044f\u0442\u0430 \u043e\u0442 \u201e%s\u201c."
 ::msgcat::mcset bg "Please select one or more branches to delete." "\u0418\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u043f\u043e\u043d\u0435 \u0435\u0434\u0438\u043d \u043a\u043b\u043e\u043d \u0437\u0430 \u0438\u0437\u0442\u0440\u0438\u0432\u0430\u043d\u0435."
 ::msgcat::mcset bg "Recovering deleted branches is difficult.\n\nDelete the selected branches?" "\u0412\u044a\u0437\u0441\u0442\u0430\u043d\u043e\u0432\u044f\u0432\u0430\u043d\u0435\u0442\u043e \u043d\u0430 \u0438\u0437\u0442\u0440\u0438\u0442\u0438 \u043a\u043b\u043e\u043d\u0438 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0435 \u0442\u0440\u0443\u0434\u043d\u043e.\n\n\u0421\u0438\u0433\u0443\u0440\u043d\u0438 \u043b\u0438 \u0441\u0442\u0435, \u0447\u0435 \u0438\u0441\u043a\u0430\u0442\u0435 \u0434\u0430 \u0442\u0440\u0438\u0435\u0442\u0435?"
 ::msgcat::mcset bg "Deleting branches from %s" "\u0418\u0437\u0442\u0440\u0438\u0432\u0430\u043d\u0435 \u043d\u0430 \u043a\u043b\u043e\u043d\u0438 \u043e\u0442 \u201e%s\u201c"
 ::msgcat::mcset bg "No repository selected." "\u041d\u0435 \u0435 \u0438\u0437\u0431\u0440\u0430\u043d\u043e \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435."
 ::msgcat::mcset bg "Scanning %s..." "\u041f\u0440\u0435\u0442\u044a\u0440\u0441\u0432\u0430\u043d\u0435 \u043d\u0430 \u201e%s\u201c\u2026"
@@ -354,16 +358,17 @@
 ::msgcat::mcset bg "Source Location:" "\u0410\u0434\u0440\u0435\u0441 \u043d\u0430 \u0438\u0437\u0442\u043e\u0447\u043d\u0438\u043a\u0430:"
 ::msgcat::mcset bg "Target Directory:" "\u0426\u0435\u043b\u0435\u0432\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f:"
 ::msgcat::mcset bg "Clone Type:" "\u0412\u0438\u0434 \u043a\u043b\u043e\u043d\u0438\u0440\u0430\u043d\u0435:"
 ::msgcat::mcset bg "Standard (Fast, Semi-Redundant, Hardlinks)" "\u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e (\u0431\u044a\u0440\u0437\u043e, \u0447\u0430\u0441\u0442\u0438\u0447\u043d\u043e \u0441\u043f\u043e\u0434\u0435\u043b\u044f\u043d\u0435 \u043d\u0430 \u0444\u0430\u0439\u043b\u043e\u0432\u0435, \u0442\u0432\u044a\u0440\u0434\u0438 \u0432\u0440\u044a\u0437\u043a\u0438)"
 ::msgcat::mcset bg "Full Copy (Slower, Redundant Backup)" "\u041f\u044a\u043b\u043d\u043e (\u0431\u0430\u0432\u043d\u043e, \u043f\u044a\u043b\u043d\u043e\u0446\u0435\u043d\u043d\u043e \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u043e \u043a\u043e\u043f\u0438\u0435)"
 ::msgcat::mcset bg "Shared (Fastest, Not Recommended, No Backup)" "\u0421\u043f\u043e\u0434\u0435\u043b\u0435\u043d\u043e (\u043d\u0430\u0439-\u0431\u044a\u0440\u0437\u043e, \u043d\u0435 \u0441\u0435 \u043f\u0440\u0435\u043f\u043e\u0440\u044a\u0447\u0432\u0430, \u043d\u0435 \u043f\u0440\u0430\u0432\u0438 \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u043e \u043a\u043e\u043f\u0438\u0435)"
+::msgcat::mcset bg "Recursively clone submodules too" "\u0420\u0435\u043a\u0443\u0440\u0441\u0438\u0432\u043d\u043e \u043a\u043b\u043e\u043d\u0438\u0440\u0430\u043d\u0435 \u0438 \u043d\u0430 \u043f\u043e\u0434\u043c\u043e\u0434\u0443\u043b\u0438\u0442\u0435"
 ::msgcat::mcset bg "Not a Git repository: %s" "\u0422\u043e\u0432\u0430 \u043d\u0435 \u0435 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435 \u043d\u0430 Git: %s"
 ::msgcat::mcset bg "Standard only available for local repository." "\u0421\u0430\u043c\u043e \u043b\u043e\u043a\u0430\u043b\u043d\u0438 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430 \u043c\u043e\u0433\u0430\u0442 \u0434\u0430 \u0441\u0435 \u043a\u043b\u043e\u043d\u0438\u0440\u0430\u0442 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e"
 ::msgcat::mcset bg "Shared only available for local repository." "\u0421\u0430\u043c\u043e \u043b\u043e\u043a\u0430\u043b\u043d\u0438 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430 \u043c\u043e\u0433\u0430\u0442 \u0434\u0430 \u0441\u0435 \u043a\u043b\u043e\u043d\u0438\u0440\u0430\u0442 \u0441\u043f\u043e\u0434\u0435\u043b\u0435\u043d\u043e"
-::msgcat::mcset bg "Location %s already exists." "\u0412\u0435\u0447\u0435 \u0441\u044a\u0449\u0435\u0441\u0442\u0432\u0443\u0432\u0430 \u043c\u0435\u0441\u0442\u043e\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u0442\u043e \u201e%s\u201c."
+::msgcat::mcset bg "Location %s already exists." "\u041c\u0435\u0441\u0442\u043e\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u0442\u043e \u201e%s\u201c \u0432\u0435\u0447\u0435 \u0441\u044a\u0449\u0435\u0441\u0442\u0432\u0443\u0432\u0430."
 ::msgcat::mcset bg "Failed to configure origin" "\u041d\u0435\u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u0432\u0430\u043d\u0435 \u043d\u0430 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435\u0442\u043e-\u0438\u0437\u0442\u043e\u0447\u043d\u0438\u043a"
 ::msgcat::mcset bg "Counting objects" "\u041f\u0440\u0435\u0431\u0440\u043e\u044f\u0432\u0430\u043d\u0435 \u043d\u0430 \u043e\u0431\u0435\u043a\u0442\u0438"
 ::msgcat::mcset bg "buckets" "\u043a\u043b\u0435\u0442\u043a\u0438"
 ::msgcat::mcset bg "Unable to copy objects/info/alternates: %s" "\u041e\u0431\u0435\u043a\u0442\u0438\u0442\u0435/\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f\u0442\u0430/\u0441\u0438\u043d\u043e\u043d\u0438\u043c\u0438\u0442\u0435 \u043d\u0435 \u043c\u043e\u0433\u0430\u0442 \u0434\u0430 \u0431\u044a\u0434\u0430\u0442 \u043a\u043e\u043f\u0438\u0440\u0430\u043d\u0438: %s"
 ::msgcat::mcset bg "Nothing to clone from %s." "\u041d\u044f\u043c\u0430 \u043a\u0430\u043a\u0432\u043e \u0434\u0430 \u0441\u0435 \u043a\u043b\u043e\u043d\u0438\u0440\u0430 \u043e\u0442 \u201e%s\u201c."
 ::msgcat::mcset bg "The 'master' branch has not been initialized." "\u041e\u0441\u043d\u043e\u0432\u043d\u0438\u044f\u0442 \u043a\u043b\u043e\u043d \u2014 \u201emaster\u201c \u043d\u0435 \u0435 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0430\u043d."
@@ -374,29 +379,31 @@
 ::msgcat::mcset bg "Unable to copy object: %s" "\u041d\u0435\u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043a\u043e\u043f\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 \u043e\u0431\u0435\u043a\u0442: %s"
 ::msgcat::mcset bg "Linking objects" "\u0421\u044a\u0437\u0434\u0430\u0432\u0430\u043d\u0435 \u043d\u0430 \u0432\u0440\u044a\u0437\u043a\u0438 \u043a\u044a\u043c \u043e\u0431\u0435\u043a\u0442\u0438\u0442\u0435"
 ::msgcat::mcset bg "objects" "\u043e\u0431\u0435\u043a\u0442\u0438"
 ::msgcat::mcset bg "Unable to hardlink object: %s" "\u041d\u0435\u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0441\u044a\u0437\u0434\u0430\u0432\u0430\u043d\u0435 \u043d\u0430 \u0442\u0432\u044a\u0440\u0434\u0430 \u0432\u0440\u044a\u0437\u043a\u0430 \u043a\u044a\u043c \u043e\u0431\u0435\u043a\u0442: %s"
 ::msgcat::mcset bg "Cannot fetch branches and objects.  See console output for details." "\u041a\u043b\u043e\u043d\u0438\u0442\u0435 \u0438 \u043e\u0431\u0435\u043a\u0442\u0438\u0442\u0435 \u043d\u0435 \u043c\u043e\u0433\u0430\u0442 \u0434\u0430 \u0431\u044a\u0434\u0430\u0442 \u0438\u0437\u0442\u0435\u0433\u043b\u0435\u043d\u0438. \u0417\u0430 \u043f\u043e\u0432\u0435\u0447\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043f\u043e\u0433\u043b\u0435\u0434\u043d\u0435\u0442\u0435 \u0438\u0437\u0445\u043e\u0434\u0430 \u043d\u0430 \u043a\u043e\u043d\u0437\u043e\u043b\u0430\u0442\u0430."
 ::msgcat::mcset bg "Cannot fetch tags.  See console output for details." "\u0415\u0442\u0438\u043a\u0435\u0442\u0438\u0442\u0435 \u043d\u0435 \u043c\u043e\u0433\u0430\u0442 \u0434\u0430 \u0431\u044a\u0434\u0430\u0442 \u0438\u0437\u0442\u0435\u0433\u043b\u0435\u043d\u0438. \u0417\u0430 \u043f\u043e\u0432\u0435\u0447\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043f\u043e\u0433\u043b\u0435\u0434\u043d\u0435\u0442\u0435 \u0438\u0437\u0445\u043e\u0434\u0430 \u043d\u0430 \u043a\u043e\u043d\u0437\u043e\u043b\u0430\u0442\u0430."
-::msgcat::mcset bg "Cannot determine HEAD.  See console output for details." "\u0412\u044a\u0440\u0445\u044a\u0442 HEAD \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d. \u0417\u0430 \u043f\u043e\u0432\u0435\u0447\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043f\u043e\u0433\u043b\u0435\u0434\u043d\u0435\u0442\u0435 \u0438\u0437\u0445\u043e\u0434\u0430 \u043d\u0430 \u043a\u043e\u043d\u0437\u043e\u043b\u0430\u0442\u0430."
-::msgcat::mcset bg "Unable to cleanup %s" "\u041d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0441\u0435 \u0437\u0430\u0447\u0438\u0441\u0442\u0438 \u201e%s\u201c"
+::msgcat::mcset bg "Cannot determine HEAD.  See console output for details." "\u0412\u044a\u0440\u0445\u044a\u0442 \u201eHEAD\u201c \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d. \u0417\u0430 \u043f\u043e\u0432\u0435\u0447\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043f\u043e\u0433\u043b\u0435\u0434\u043d\u0435\u0442\u0435 \u0438\u0437\u0445\u043e\u0434\u0430 \u043d\u0430 \u043a\u043e\u043d\u0437\u043e\u043b\u0430\u0442\u0430."
+::msgcat::mcset bg "Unable to cleanup %s" "\u201e%s\u201c \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0441\u0435 \u0437\u0430\u0447\u0438\u0441\u0442\u0438"
 ::msgcat::mcset bg "Clone failed." "\u041d\u0435\u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043a\u043b\u043e\u043d\u0438\u0440\u0430\u043d\u0435."
 ::msgcat::mcset bg "No default branch obtained." "\u041d\u0435 \u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d \u043a\u043b\u043e\u043d \u043f\u043e \u043f\u043e\u0434\u0440\u0430\u0437\u0431\u0438\u0440\u0430\u043d\u0435."
 ::msgcat::mcset bg "Cannot resolve %s as a commit." "\u041d\u044f\u043c\u0430 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435 \u043e\u0442\u0433\u043e\u0432\u0430\u0440\u044f\u0449\u043e \u043d\u0430 \u201e%s\u201c."
 ::msgcat::mcset bg "Creating working directory" "\u0421\u044a\u0437\u0434\u0430\u0432\u0430\u043d\u0435 \u043d\u0430 \u0440\u0430\u0431\u043e\u0442\u043d\u0430\u0442\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f"
 ::msgcat::mcset bg "files" "\u0444\u0430\u0439\u043b\u043e\u0432\u0435"
+::msgcat::mcset bg "Cannot clone submodules." "\u041f\u043e\u0434\u043c\u043e\u0434\u0443\u043b\u0438\u0442\u0435 \u043d\u0435 \u043c\u043e\u0433\u0430\u0442 \u0434\u0430 \u0441\u0435 \u043a\u043b\u043e\u043d\u0438\u0440\u0430\u0442."
+::msgcat::mcset bg "Cloning submodules" "\u041a\u043b\u043e\u043d\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 \u043f\u043e\u0434\u043c\u043e\u0434\u0443\u043b\u0438\u0442\u0435"
 ::msgcat::mcset bg "Initial file checkout failed." "\u041d\u0435\u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043f\u044a\u0440\u0432\u043e\u043d\u0430\u0447\u0430\u043b\u043d\u043e \u0438\u0437\u0442\u0435\u0433\u043b\u044f\u043d\u0435."
 ::msgcat::mcset bg "Open" "\u041e\u0442\u0432\u0430\u0440\u044f\u043d\u0435"
 ::msgcat::mcset bg "Repository:" "\u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435:"
 ::msgcat::mcset bg "Failed to open repository %s:" "\u041d\u0435\u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043e\u0442\u0432\u0430\u0440\u044f\u043d\u0435 \u043d\u0430 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435\u0442\u043e \u201e%s\u201c:"
 ::msgcat::mcset bg "git-gui - a graphical user interface for Git." "git-gui \u2014 \u0433\u0440\u0430\u0444\u0438\u0447\u0435\u043d \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0437\u0430 Git."
 ::msgcat::mcset bg "Fetching %s from %s" "\u0414\u043e\u0441\u0442\u0430\u0432\u044f\u043d\u0435 \u043d\u0430 \u201e%s\u201c \u043e\u0442 \u201e%s\u201c"
 ::msgcat::mcset bg "fatal: Cannot resolve %s" "\u0444\u0430\u0442\u0430\u043b\u043d\u0430 \u0433\u0440\u0435\u0448\u043a\u0430: \u201e%s\u201c \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0441\u0435 \u043e\u0442\u043a\u0440\u0438\u0435"
 ::msgcat::mcset bg "Branch '%s' does not exist." "\u041a\u043b\u043e\u043d\u044a\u0442 \u201e%s\u201c \u043d\u0435 \u0441\u044a\u0449\u0435\u0441\u0442\u0432\u0443\u0432\u0430."
 ::msgcat::mcset bg "Failed to configure simplified git-pull for '%s'." "\u041d\u0435\u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u0432\u0430\u043d\u0435 \u043d\u0430 \u043e\u043f\u0440\u043e\u0441\u0442\u0435\u043d git-pull \u0437\u0430 \u201e%s\u201c."
-::msgcat::mcset bg "Branch '%s' already exists.\n\nIt cannot fast-forward to %s.\nA merge is required." "\u041a\u043b\u043e\u043d\u044a\u0442 \u201e%s\u201c \u0441\u044a\u0449\u0435\u0441\u0442\u0432\u0443\u0432\u0430.\n\n\u0422\u043e\u0439 \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u0442\u0440\u0438\u0432\u0438\u0430\u043b\u043d\u043e \u043f\u0440\u0435\u0432\u044a\u0440\u0442\u044f\u043d \u0434\u043e %s.\n\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0435 \u0441\u043b\u0438\u0432\u0430\u043d\u0435."
+::msgcat::mcset bg "Branch '%s' already exists.\n\nIt cannot fast-forward to %s.\nA merge is required." "\u041a\u043b\u043e\u043d\u044a\u0442 \u201e%s\u201c \u0441\u044a\u0449\u0435\u0441\u0442\u0432\u0443\u0432\u0430.\n\n\u0422\u043e\u0439 \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u0442\u0440\u0438\u0432\u0438\u0430\u043b\u043d\u043e \u0441\u043b\u044f\u0442 \u0434\u043e \u201e%s\u201c.\n\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0435 \u0441\u043b\u0438\u0432\u0430\u043d\u0435."
 ::msgcat::mcset bg "Merge strategy '%s' not supported." "\u0421\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044f \u0437\u0430 \u0441\u043b\u0438\u0432\u0430\u043d\u0435  \u201e%s\u201c \u043d\u0435 \u0441\u0435 \u043f\u043e\u0434\u0434\u044a\u0440\u0436\u0430."
 ::msgcat::mcset bg "Failed to update '%s'." "\u041d\u0435\u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043e\u0431\u043d\u043e\u0432\u044f\u0432\u0430\u043d\u0435 \u043d\u0430 \u201e%s\u201c."
 ::msgcat::mcset bg "Staging area (index) is already locked." "\u0418\u043d\u0434\u0435\u043a\u0441\u044a\u0442 \u0432\u0435\u0447\u0435 \u0435 \u0437\u0430\u043a\u043b\u044e\u0447\u0435\u043d."
 ::msgcat::mcset bg "Last scanned state does not match repository state.\n\nAnother Git program has modified this repository since the last scan.  A rescan must be performed before the current branch can be changed.\n\nThe rescan will be automatically started now.\n" "\u0421\u044a\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u0442\u043e \u043f\u0440\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0430\u0442\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0435 \u043e\u0442\u0433\u043e\u0432\u0430\u0440\u044f \u043d\u0430 \u0441\u044a\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u0442\u043e \u043d\u0430 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435\u0442\u043e.\n\n\u041d\u044f\u043a\u043e\u0439 \u0434\u0440\u0443\u0433 \u043f\u0440\u043e\u0446\u0435\u0441 \u0437\u0430 Git \u0435 \u043f\u0440\u043e\u043c\u0435\u043d\u0438\u043b \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435\u0442\u043e \u043c\u0435\u0436\u0434\u0443\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e. \u0421\u044a\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u0442\u043e \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u0435\u043d\u043e, \u043f\u0440\u0435\u0434\u0438 \u0434\u0430 \u0441\u0435 \u043f\u0440\u0435\u043c\u0438\u043d\u0435 \u043a\u044a\u043c \u043d\u043e\u0432 \u043a\u043b\u043e\u043d.\n\n\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u043e \u0449\u0435 \u0437\u0430\u043f\u043e\u0447\u043d\u0435 \u043d\u043e\u0432\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430.\n"
 ::msgcat::mcset bg "Updating working directory to '%s'..." "\u0420\u0430\u0431\u043e\u0442\u043d\u0430\u0442\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f \u0441\u0435 \u043f\u0440\u0438\u0432\u0435\u0436\u0434\u0430 \u043a\u044a\u043c \u201e%s\u201c\u2026"
 ::msgcat::mcset bg "files checked out" "\u0444\u0430\u0439\u043b\u0430 \u0441\u0430 \u0438\u0437\u0442\u0435\u0433\u043b\u0435\u043d\u0438"
@@ -417,18 +424,18 @@
 ::msgcat::mcset bg "Starting Revision" "\u041d\u0430\u0447\u0430\u043b\u043d\u0430 \u0432\u0435\u0440\u0441\u0438\u044f"
 ::msgcat::mcset bg "Update Existing Branch:" "\u041e\u0431\u043d\u043e\u0432\u044f\u0432\u0430\u043d\u0435 \u043d\u0430 \u0441\u044a\u0449\u0435\u0441\u0442\u0432\u0443\u0432\u0430\u0449 \u043a\u043b\u043e\u043d:"
 ::msgcat::mcset bg "No" "\u041d\u0435"
 ::msgcat::mcset bg "Fast Forward Only" "\u0421\u0430\u043c\u043e \u0442\u0440\u0438\u0432\u0438\u0430\u043b\u043d\u043e \u043f\u0440\u0435\u0432\u044a\u0440\u0442\u0430\u0449\u043e \u0441\u043b\u0438\u0432\u0430\u043d\u0435"
 ::msgcat::mcset bg "Checkout After Creation" "\u041f\u0440\u0435\u043c\u0438\u043d\u0430\u0432\u0430\u043d\u0435 \u043a\u044a\u043c \u043a\u043b\u043e\u043d\u0430 \u0441\u043b\u0435\u0434 \u0441\u044a\u0437\u0434\u0430\u0432\u0430\u043d\u0435\u0442\u043e \u043c\u0443"
 ::msgcat::mcset bg "Please select a tracking branch." "\u0418\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u043a\u043b\u043e\u043d \u0437\u0430 \u0441\u043b\u0435\u0434\u0435\u043d\u0438."
-::msgcat::mcset bg "Tracking branch %s is not a branch in the remote repository." "\u041a\u043b\u043e\u043d\u044a\u0442, \u043a\u043e\u0439\u0442\u043e \u0441\u0435 \u0441\u043b\u0435\u0434\u0438 \u201e%s\u201c \u043d\u0435 \u0441\u044a\u0449\u0435\u0441\u0442\u0432\u0443\u0432\u0430 \u0432 \u043e\u0442\u0434\u0430\u043b\u0435\u0447\u0435\u043d\u043e\u0442\u043e \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435."
+::msgcat::mcset bg "Tracking branch %s is not a branch in the remote repository." "\u0421\u043b\u0435\u0434\u044f\u0449\u0438\u044f\u0442 \u043a\u043b\u043e\u043d \u2014 \u201e%s\u201c, \u043d\u0435 \u0441\u044a\u0449\u0435\u0441\u0442\u0432\u0443\u0432\u0430 \u0432 \u043e\u0442\u0434\u0430\u043b\u0435\u0447\u0435\u043d\u043e\u0442\u043e \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435."
 ::msgcat::mcset bg "Working... please wait..." "\u0412 \u043c\u043e\u043c\u0435\u043d\u0442\u0430 \u0441\u0435 \u0438\u0437\u0432\u044a\u0440\u0448\u0432\u0430 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435, \u0438\u0437\u0447\u0430\u043a\u0430\u0439\u0442\u0435\u2026"
 ::msgcat::mcset bg "Success" "\u0423\u0441\u043f\u0435\u0445"
 ::msgcat::mcset bg "Error: Command Failed" "\u0413\u0440\u0435\u0448\u043a\u0430: \u043d\u0435\u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0438\u0437\u043f\u044a\u043b\u043d\u0435\u043d\u0438\u0435 \u043d\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u0430"
 ::msgcat::mcset bg "This Detached Checkout" "\u0422\u043e\u0432\u0430 \u043d\u0435\u0441\u0432\u044a\u0440\u0437\u0430\u043d\u043e \u0438\u0437\u0442\u0435\u0433\u043b\u044f\u043d\u0435"
-::msgcat::mcset bg "Revision Expression:" "\u0418\u0437\u0440\u0430\u0437 \u0437\u0430 \u0432\u0435\u0440\u0441\u0438\u044f"
+::msgcat::mcset bg "Revision Expression:" "\u0418\u0437\u0440\u0430\u0437 \u0437\u0430 \u0432\u0435\u0440\u0441\u0438\u044f:"
 ::msgcat::mcset bg "Local Branch" "\u041b\u043e\u043a\u0430\u043b\u0435\u043d \u043a\u043b\u043e\u043d"
 ::msgcat::mcset bg "Tracking Branch" "\u0421\u043b\u0435\u0434\u044f\u0449 \u043a\u043b\u043e\u043d"
 ::msgcat::mcset bg "Tag" "\u0415\u0442\u0438\u043a\u0435\u0442"
 ::msgcat::mcset bg "Invalid revision: %s" "\u041d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u043d\u0430 \u0432\u0435\u0440\u0441\u0438\u044f: %s"
 ::msgcat::mcset bg "No revision selected." "\u041d\u0435 \u0435 \u0438\u0437\u0431\u0440\u0430\u043d\u0430 \u0432\u0435\u0440\u0441\u0438\u044f."
 ::msgcat::mcset bg "Revision expression is empty." "\u0418\u0437\u0440\u0430\u0437\u044a\u0442 \u0437\u0430 \u0432\u0435\u0440\u0441\u0438\u044f \u0435 \u043f\u0440\u0430\u0437\u0435\u043d."
@@ -437,108 +444,105 @@
 ::msgcat::mcset bg "Goto Line:" "\u041a\u044a\u043c \u0440\u0435\u0434:"
 ::msgcat::mcset bg "Go" "\u041f\u0440\u0438\u0434\u0432\u0438\u0436\u0432\u0430\u043d\u0435"
 ::msgcat::mcset bg "There is nothing to amend.\n\nYou are about to create the initial commit.  There is no commit before this to amend.\n" "\u041d\u044f\u043c\u0430 \u043a\u0430\u043a\u0432\u043e \u0434\u0430 \u0441\u0435 \u043f\u043e\u043f\u0440\u0430\u0432\u0438.\n\n\u0429\u0435 \u0441\u044a\u0437\u0434\u0430\u0434\u0435\u0442\u0435 \u043f\u044a\u0440\u0432\u043e\u043d\u0430\u0447\u0430\u043b\u043d\u043e\u0442\u043e \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435. \u041f\u0440\u0435\u0434\u0438 \u043d\u0435\u0433\u043e \u043d\u044f\u043c\u0430 \u0434\u0440\u0443\u0433\u0438 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0438\u044f, \u043a\u043e\u0438\u0442\u043e \u0434\u0430 \u043f\u043e\u043f\u0440\u0430\u0432\u0438\u0442\u0435.\n"
 ::msgcat::mcset bg "Cannot amend while merging.\n\nYou are currently in the middle of a merge that has not been fully completed.  You cannot amend the prior commit unless you first abort the current merge activity.\n" "\u041f\u043e \u0432\u0440\u0435\u043c\u0435 \u043d\u0430 \u0441\u043b\u0438\u0432\u0430\u043d\u0435 \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u043f\u043e\u043f\u0440\u0430\u0432\u044f\u0442\u0435.\n\n\u0412 \u043c\u043e\u043c\u0435\u043d\u0442\u0430 \u0432\u0441\u0435 \u043e\u0449\u0435 \u043d\u0435 \u0441\u0442\u0435 \u0437\u0430\u0432\u044a\u0440\u0448\u0438\u043b\u0438 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u043f\u043e \u0441\u043b\u0438\u0432\u0430\u043d\u0435. \u041d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u043f\u043e\u043f\u0440\u0430\u0432\u0438\u0442\u0435 \u043f\u0440\u0435\u0434\u0438\u0448\u043d\u043e\u0442\u043e \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435, \u043e\u0441\u0432\u0435\u043d \u0430\u043a\u043e \u043f\u044a\u0440\u0432\u043e \u043d\u0435 \u043f\u0440\u0435\u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u0442\u0435\u043a\u0443\u0449\u043e\u0442\u043e \u0441\u043b\u0438\u0432\u0430\u043d\u0435.\n"
 ::msgcat::mcset bg "Error loading commit data for amend:" "\u0413\u0440\u0435\u0448\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0440\u0435\u0436\u0434\u0430\u043d\u0435 \u043d\u0430 \u0434\u0430\u043d\u043d\u0438\u0442\u0435 \u043e\u0442 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435, \u043a\u043e\u0438\u0442\u043e \u0434\u0430 \u0441\u0435 \u043f\u043e\u043f\u0440\u0430\u0432\u044f\u0442:"
 ::msgcat::mcset bg "Unable to obtain your identity:" "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f\u0442\u0430 \u0432\u0438 \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0430:"
-::msgcat::mcset bg "Invalid GIT_COMMITTER_IDENT:" "\u041d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u043d\u043e \u043f\u043e\u043b\u0435 GIT_COMMITTER_IDENT:"
+::msgcat::mcset bg "Invalid GIT_COMMITTER_IDENT:" "\u041d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u043d\u043e \u043f\u043e\u043b\u0435 \u201eGIT_COMMITTER_IDENT\u201c:"
 ::msgcat::mcset bg "warning: Tcl does not support encoding '%s'." "\u043f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435: Tcl \u043d\u0435 \u043f\u043e\u0434\u0434\u044a\u0440\u0436\u0430 \u043a\u043e\u0434\u0438\u0440\u0430\u043d\u0435\u0442\u043e \u201e%s\u201c."
 ::msgcat::mcset bg "Last scanned state does not match repository state.\n\nAnother Git program has modified this repository since the last scan.  A rescan must be performed before another commit can be created.\n\nThe rescan will be automatically started now.\n" "\u0421\u044a\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u0442\u043e \u043f\u0440\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0430\u0442\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0435 \u043e\u0442\u0433\u043e\u0432\u0430\u0440\u044f \u043d\u0430 \u0441\u044a\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u0442\u043e \u043d\u0430 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435\u0442\u043e.\n\n\u041d\u044f\u043a\u043e\u0439 \u0434\u0440\u0443\u0433 \u043f\u0440\u043e\u0446\u0435\u0441 \u0437\u0430 Git \u0435 \u043f\u0440\u043e\u043c\u0435\u043d\u0438\u043b \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435\u0442\u043e \u043c\u0435\u0436\u0434\u0443\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e. \u0421\u044a\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u0442\u043e \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u0435\u043d\u043e \u043f\u0440\u0435\u0434\u0438 \u043d\u043e\u0432\u043e \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435.\n\n\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u043e \u0449\u0435 \u0437\u0430\u043f\u043e\u0447\u043d\u0435 \u043d\u043e\u0432\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430.\n"
 ::msgcat::mcset bg "Unmerged files cannot be committed.\n\nFile %s has merge conflicts.  You must resolve them and stage the file before committing.\n" "\u041d\u0435\u0441\u043b\u0435\u0442\u0438\u0442\u0435 \u0444\u0430\u0439\u043b\u043e\u0432\u0435 \u043d\u0435 \u043c\u043e\u0433\u0430\u0442 \u0434\u0430 \u0431\u044a\u0434\u0430\u0442 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0438.\n\n\u0412\u044a\u0432 \u0444\u0430\u0439\u043b\u0430 \u201e%s\u201c \u0438\u043c\u0430 \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u0438 \u043f\u0440\u0438 \u0441\u043b\u0438\u0432\u0430\u043d\u0435. \u0417\u0430 \u0434\u0430 \u0433\u043e \u043f\u043e\u0434\u0430\u0434\u0435\u0442\u0435, \u0442\u0440\u044f\u0431\u0432\u0430 \u043f\u044a\u0440\u0432\u043e \u0434\u0430 \u043a\u043e\u0440\u0438\u0433\u0438\u0440\u0430\u0442\u0435 \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u0438\u0442\u0435 \u0438 \u0434\u0430 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u0435 \u0444\u0430\u0439\u043b\u0430 \u043a\u044a\u043c \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u0437\u0430 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435.\n"
 ::msgcat::mcset bg "Unknown file state %s detected.\n\nFile %s cannot be committed by this program.\n" "\u041d\u0435\u043f\u043e\u0437\u043d\u0430\u0442\u043e \u0441\u044a\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043d\u0430 \u0444\u0430\u0439\u043b \u201e%s\u201c.\n\n\u0424\u0430\u0439\u043b\u044a\u0442 \u201e%s\u201c \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043f\u043e\u0434\u0430\u0434\u0435\u043d \u0447\u0440\u0435\u0437 \u0442\u0435\u043a\u0443\u0449\u0430\u0442\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0430.\n"
-::msgcat::mcset bg "No changes to commit.\n\nYou must stage at least 1 file before you can commit.\n" "\u041d\u044f\u043c\u0430 \u043f\u0440\u043e\u043c\u0435\u043d\u0438 \u0437\u0430 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435.\n\n\u0422\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u0435 \u043f\u043e\u043d\u0435 1 \u0444\u0430\u0439\u043b \u043a\u044a\u043c \u0438\u043d\u0434\u0435\u043a\u0441\u0430, \u043f\u0440\u0435\u0434\u0438 \u0434\u0430 \u043f\u043e\u0434\u0430\u0434\u0435\u0442\u0435.\n"
-::msgcat::mcset bg "Please supply a commit message.\n\nA good commit message has the following format:\n\n- First line: Describe in one sentence what you did.\n- Second line: Blank\n- Remaining lines: Describe why this change is good.\n" "\u0417\u0430\u0434\u0430\u0439\u0442\u0435 \u0434\u043e\u0431\u0440\u043e \u0441\u044a\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043f\u0440\u0438 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435.\n\n\u0418\u0437\u043f\u043e\u043b\u0437\u0432\u0430\u0439\u0442\u0435 \u0441\u043b\u0435\u0434\u043d\u0438\u044f \u0444\u043e\u0440\u043c\u0430\u0442:\n\n\u2043 \u041f\u044a\u0440\u0432\u0438 \u0440\u0435\u0434: \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0432 \u0435\u0434\u043d\u043e \u0438\u0437\u0440\u0435\u0447\u0435\u043d\u0438\u0435 \u043d\u0430 \u043f\u0440\u043e\u043c\u044f\u043d\u0430\u0442\u0430.\n\u2043 \u0412\u0442\u043e\u0440\u0438 \u0440\u0435\u0434: \u043f\u0440\u0430\u0437\u0435\u043d.\n\u2043 \u041e\u0441\u0442\u0430\u043d\u0430\u043b\u0438\u0442\u0435 \u0440\u0435\u0434\u043e\u0432\u0435: \u043e\u043f\u0438\u0448\u0435\u0442\u0435 \u0437\u0430\u0449\u043e \u0441\u0435 \u043d\u0430\u043b\u0430\u0433\u0430 \u0442\u0430\u0437\u0438 \u043f\u0440\u043e\u043c\u044f\u043d\u0430.\n"
+::msgcat::mcset bg "No changes to commit.\n\nYou must stage at least 1 file before you can commit.\n" "\u041d\u044f\u043c\u0430 \u043f\u0440\u043e\u043c\u0435\u043d\u0438 \u0437\u0430 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435.\n\n\u0422\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u0435 \u043f\u043e\u043d\u0435 \u0435\u0434\u0438\u043d \u0444\u0430\u0439\u043b \u043a\u044a\u043c \u0438\u043d\u0434\u0435\u043a\u0441\u0430, \u0437\u0430 \u0434\u0430 \u043f\u043e\u0434\u0430\u0434\u0435\u0442\u0435.\n"
+::msgcat::mcset bg "Please supply a commit message.\n\nA good commit message has the following format:\n\n- First line: Describe in one sentence what you did.\n- Second line: Blank\n- Remaining lines: Describe why this change is good.\n" "\u0417\u0430\u0434\u0430\u0439\u0442\u0435 \u0434\u043e\u0431\u0440\u043e \u0441\u044a\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043f\u0440\u0438 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435.\n\n\u0418\u0437\u043f\u043e\u043b\u0437\u0432\u0430\u0439\u0442\u0435 \u0441\u043b\u0435\u0434\u043d\u0438\u044f \u0444\u043e\u0440\u043c\u0430\u0442:\n\n\u25cf \u041f\u044a\u0440\u0432\u0438 \u0440\u0435\u0434: \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0432 \u0435\u0434\u043d\u043e \u0438\u0437\u0440\u0435\u0447\u0435\u043d\u0438\u0435 \u043d\u0430 \u043f\u0440\u043e\u043c\u044f\u043d\u0430\u0442\u0430.\n\u25cf \u0412\u0442\u043e\u0440\u0438 \u0440\u0435\u0434: \u043f\u0440\u0430\u0437\u0435\u043d.\n\u25cf \u041e\u0441\u0442\u0430\u043d\u0430\u043b\u0438\u0442\u0435 \u0440\u0435\u0434\u043e\u0432\u0435: \u043e\u043f\u0438\u0448\u0435\u0442\u0435 \u0437\u0430\u0449\u043e \u0441\u0435 \u043d\u0430\u043b\u0430\u0433\u0430 \u0442\u0430\u0437\u0438 \u043f\u0440\u043e\u043c\u044f\u043d\u0430.\n"
 ::msgcat::mcset bg "Calling pre-commit hook..." "\u0418\u0437\u043f\u044a\u043b\u043d\u044f\u0432\u0430\u043d\u0435 \u043d\u0430 \u043a\u0443\u043a\u0430\u0442\u0430 \u043f\u0440\u0435\u0434\u0438 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435\u2026"
 ::msgcat::mcset bg "Commit declined by pre-commit hook." "\u041f\u043e\u0434\u0430\u0432\u0430\u043d\u0435\u0442\u043e \u0435 \u043e\u0442\u0445\u0432\u044a\u0440\u043b\u0435\u043d\u043e \u043e\u0442 \u043a\u0443\u043a\u0430\u0442\u0430 \u043f\u0440\u0435\u0434\u0438 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435."
-::msgcat::mcset bg "You are about to commit on a detached head. This is a potentially dangerous thing to do because if you switch to another branch you will lose your changes and it can be difficult to retrieve them later from the reflog. You should probably cancel this commit and create a new branch to continue.\n \n Do you really want to proceed with your Commit?" "\u0429\u0435 \u043f\u043e\u0434\u0430\u0434\u0435\u0442\u0435 \u043a\u044a\u043c \u043d\u0435\u0441\u0432\u044a\u0440\u0437\u0430\u043d \u0432\u0440\u044a\u0445. \u0422\u043e\u0432\u0430 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0435 \u043e\u043f\u0430\u0441\u043d\u043e, \u0437\u0430\u0449\u043e\u0442\u043e \u043f\u0440\u0438 \u043f\u0440\u0435\u043c\u0438\u043d\u0430\u0432\u0430\u043d\u0435\u0442\u043e \u043a\u044a\u043c \u043a\u043e\u0439\u0442\u043e \u0438 \u0434\u0430 \u0435 \u043a\u043b\u043e\u043d \u0449\u0435 \u0437\u0430\u0433\u0443\u0431\u0438\u0442\u0435 \u043f\u0440\u043e\u043c\u0435\u043d\u0438\u0442\u0435 \u0441\u0438 \u0438 \u043d\u0435 \u0435 \u0441\u0438\u0433\u0443\u0440\u043d\u043e, \u0447\u0435 \u0449\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e-\u043a\u044a\u0441\u043d\u043e \u0434\u0430 \u0433\u0438 \u0432\u044a\u0437\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u0447\u0440\u0435\u0437 \u0436\u0443\u0440\u043d\u0430\u043b\u0430 \u043d\u0430 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438\u0442\u0435. \u041d\u0430\u0439-\u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e \u0442\u0440\u044f\u0431\u0432\u0430 \u043f\u044a\u0440\u0432\u043e \u0434\u0430 \u0441\u044a\u0437\u0434\u0430\u0434\u0435\u0442\u0435 \u043a\u043b\u043e\u043d \u0431\u0430\u0437\u0438\u0440\u0430\u043d \u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u043e\u0442\u043e \u0441\u044a\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0438 \u0434\u0430 \u043f\u043e\u0434\u0430\u0434\u0435\u0442\u0435 \u043a\u044a\u043c \u043d\u0435\u0433\u043e.\n \n\u0421\u0438\u0433\u0443\u0440\u043d\u0438 \u043b\u0438 \u0441\u0442\u0435, \u0447\u0435 \u0438\u0441\u043a\u0430\u0442\u0435 \u0434\u0430 \u043f\u043e\u0434\u0430\u0434\u0435\u0442\u0435 \u0442\u043e\u0447\u043d\u043e \u0441\u0435\u0433\u0430?"
+::msgcat::mcset bg "You are about to commit on a detached head. This is a potentially dangerous thing to do because if you switch to another branch you will lose your changes and it can be difficult to retrieve them later from the reflog. You should probably cancel this commit and create a new branch to continue.\n \n Do you really want to proceed with your Commit?" "\u0429\u0435 \u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435 \u043a\u044a\u043c \u043d\u0435\u0441\u0432\u044a\u0440\u0437\u0430\u043d \u0432\u0440\u044a\u0445. \u0422\u043e\u0432\u0430 \u0435 \u043e\u043f\u0430\u0441\u043d\u043e \u2014 \u043f\u0440\u0438 \u0438\u0437\u0442\u0435\u0433\u043b\u044f\u043d\u0435\u0442\u043e \u043d\u0430 \u0434\u0440\u0443\u0433 \u043a\u043b\u043e\u043d \u0449\u0435 \u0438\u0437\u0433\u0443\u0431\u0438\u0442\u0435 \u043f\u0440\u043e\u043c\u0435\u043d\u0438\u0442\u0435 \u0441\u0438. \u0421\u043b\u0435\u0434 \u0442\u043e\u0432\u0430 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0435 \u043d\u0435\u0432\u044a\u0437\u043c\u043e\u0436\u043d\u043e \u0434\u0430 \u0433\u0438 \u0432\u044a\u0437\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u043e\u0442 \u0436\u0443\u0440\u043d\u0430\u043b\u0430 \u043d\u0430 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438\u0442\u0435 \u201ereflog\u201c. \u041d\u0430\u0439-\u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u043e\u0442\u043c\u0435\u043d\u0438\u0442\u0435 \u0442\u043e\u0432\u0430 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435 \u0438 \u0434\u0430 \u0441\u044a\u0437\u0434\u0430\u0434\u0435\u0442\u0435 \u043a\u043b\u043e\u043d, \u0432 \u043a\u043e\u0439\u0442\u043e \u0434\u0430 \u043f\u043e\u0434\u0430\u0434\u0435\u0442\u0435.\n \n\u0421\u0438\u0433\u0443\u0440\u043d\u0438 \u043b\u0438 \u0441\u0442\u0435, \u0447\u0435 \u0438\u0441\u043a\u0430\u0442\u0435 \u0434\u0430 \u043f\u043e\u0434\u0430\u0434\u0435\u0442\u0435 \u043a\u044a\u043c \u043d\u0435\u0441\u0432\u044a\u0440\u0437\u0430\u043d \u0432\u0440\u044a\u0445?"
 ::msgcat::mcset bg "Calling commit-msg hook..." "\u0418\u0437\u043f\u044a\u043b\u043d\u044f\u0432\u0430\u043d\u0435 \u043d\u0430 \u043a\u0443\u043a\u0430\u0442\u0430 \u0437\u0430 \u0441\u044a\u043e\u0431\u0449\u0435\u043d\u0438\u0435\u0442\u043e \u043f\u0440\u0438 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435\u2026"
 ::msgcat::mcset bg "Commit declined by commit-msg hook." "\u041f\u043e\u0434\u0430\u0432\u0430\u043d\u0435\u0442\u043e \u0435 \u043e\u0442\u0445\u0432\u044a\u0440\u043b\u0435\u043d\u043e \u043e\u0442 \u043a\u0443\u043a\u0430\u0442\u0430 \u0437\u0430 \u0441\u044a\u043e\u0431\u0449\u0435\u043d\u0438\u0435\u0442\u043e \u043f\u0440\u0438 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435."
-::msgcat::mcset bg "Committing changes..." "\u041f\u043e\u0434\u0430\u0432\u0430\u043d\u0435 \u043d\u0430 \u043f\u0440\u043e\u043c\u0435\u043d\u0438\u0442\u0435."
+::msgcat::mcset bg "Committing changes..." "\u041f\u043e\u0434\u0430\u0432\u0430\u043d\u0435 \u043d\u0430 \u043f\u0440\u043e\u043c\u0435\u043d\u0438\u0442\u0435\u2026"
 ::msgcat::mcset bg "write-tree failed:" "\u043d\u0435\u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u043f\u0430\u0437\u0432\u0430\u043d\u0435 \u043d\u0430 \u0434\u044a\u0440\u0432\u043e\u0442\u043e (write-tree):"
 ::msgcat::mcset bg "Commit failed." "\u041d\u0435\u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435."
 ::msgcat::mcset bg "Commit %s appears to be corrupt" "\u041f\u043e\u0434\u0430\u0432\u0430\u043d\u0435\u0442\u043e \u201e%s\u201c \u0438\u0437\u0433\u043b\u0435\u0436\u0434\u0430 \u043f\u043e\u0432\u0440\u0435\u0434\u0435\u043d\u043e"
 ::msgcat::mcset bg "No changes to commit.\n\nNo files were modified by this commit and it was not a merge commit.\n\nA rescan will be automatically started now.\n" "\u041d\u044f\u043c\u0430 \u043f\u0440\u043e\u043c\u0435\u043d\u0438 \u0437\u0430 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435.\n\n\u0412 \u0442\u043e\u0432\u0430 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435 \u043d\u0435 \u0441\u0430 \u043f\u0440\u043e\u043c\u0435\u043d\u044f\u043d\u0438 \u043d\u0438\u043a\u0430\u043a\u0432\u0438 \u0444\u0430\u0439\u043b\u043e\u0432\u0435, \u0430 \u0438 \u043d\u0435 \u0435 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435 \u0441\u044a\u0441 \u0441\u043b\u0438\u0432\u0430\u043d\u0435.\n\n\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u043e \u0449\u0435 \u0437\u0430\u043f\u043e\u0447\u043d\u0435 \u043d\u043e\u0432\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430.\n"
 ::msgcat::mcset bg "No changes to commit." "\u041d\u044f\u043c\u0430 \u043f\u0440\u043e\u043c\u0435\u043d\u0438 \u0437\u0430 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435."
 ::msgcat::mcset bg "commit-tree failed:" "\u043d\u0435\u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435 \u043d\u0430 \u0434\u044a\u0440\u0432\u043e\u0442\u043e (commit-tree):"
 ::msgcat::mcset bg "update-ref failed:" "\u043d\u0435\u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043e\u0431\u043d\u043e\u0432\u044f\u0432\u0430\u043d\u0435 \u043d\u0430 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438\u0442\u0435 (update-ref):"
 ::msgcat::mcset bg "Created commit %s: %s" "\u0423\u0441\u043f\u0435\u0448\u043d\u043e \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435 %s: %s"
 ::msgcat::mcset bg "Delete Branch" "\u0418\u0437\u0442\u0440\u0438\u0432\u0430\u043d\u0435 \u043d\u0430 \u043a\u043b\u043e\u043d"
 ::msgcat::mcset bg "Delete Local Branch" "\u0418\u0437\u0442\u0440\u0438\u0432\u0430\u043d\u0435 \u043d\u0430 \u043b\u043e\u043a\u0430\u043b\u0435\u043d \u043a\u043b\u043e\u043d"
 ::msgcat::mcset bg "Local Branches" "\u041b\u043e\u043a\u0430\u043b\u043d\u0438 \u043a\u043b\u043e\u043d\u0438"
 ::msgcat::mcset bg "Delete Only If Merged Into" "\u0418\u0437\u0442\u0440\u0438\u0432\u0430\u043d\u0435, \u0441\u0430\u043c\u043e \u0430\u043a\u043e \u043f\u0440\u043e\u043c\u0435\u043d\u0438\u0442\u0435 \u0441\u0430 \u0441\u043b\u0435\u0442\u0438 \u0438 \u0434\u0440\u0443\u0433\u0430\u0434\u0435"
-::msgcat::mcset bg "The following branches are not completely merged into %s:" "\u041d\u0435 \u0432\u0441\u0438\u0447\u043a\u0438 \u043f\u0440\u043e\u043c\u0435\u043d\u0438 \u0432 \u043a\u043b\u043e\u043d\u0438\u0442\u0435 \u0441\u0430 \u0441\u043b\u0435\u0442\u0438 \u0432 %s:"
+::msgcat::mcset bg "The following branches are not completely merged into %s:" "\u041d\u0435 \u0432\u0441\u0438\u0447\u043a\u0438 \u043f\u0440\u043e\u043c\u0435\u043d\u0438 \u0432 \u043a\u043b\u043e\u043d\u0438\u0442\u0435 \u0441\u0430 \u0441\u043b\u0435\u0442\u0438 \u0432 \u201e%s\u201c:"
 ::msgcat::mcset bg "Failed to delete branches:\n%s" "\u041d\u0435\u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0442\u0440\u0438\u0435\u043d\u0435 \u043d\u0430 \u043a\u043b\u043e\u043d\u0438:\n%s"
 ::msgcat::mcset bg "File Viewer" "\u041f\u0440\u0435\u0433\u043b\u0435\u0434 \u043d\u0430 \u0444\u0430\u0439\u043b\u043e\u0432\u0435"
 ::msgcat::mcset bg "Commit:" "\u041f\u043e\u0434\u0430\u0432\u0430\u043d\u0435:"
 ::msgcat::mcset bg "Copy Commit" "\u041a\u043e\u043f\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435"
 ::msgcat::mcset bg "Find Text..." "\u0422\u044a\u0440\u0441\u0435\u043d\u0435 \u043d\u0430 \u0442\u0435\u043a\u0441\u0442\u2026"
 ::msgcat::mcset bg "Goto Line..." "\u041a\u044a\u043c \u0440\u0435\u0434\u2026"
 ::msgcat::mcset bg "Do Full Copy Detection" "\u041f\u044a\u043b\u043d\u043e \u0442\u044a\u0440\u0441\u0435\u043d\u0435 \u043d\u0430 \u043a\u043e\u043f\u0438\u0440\u0430\u043d\u0435"
 ::msgcat::mcset bg "Show History Context" "\u041f\u043e\u043a\u0430\u0437\u0432\u0430\u043d\u0435 \u043d\u0430 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 \u043e\u0442 \u0438\u0441\u0442\u043e\u0440\u0438\u044f\u0442\u0430"
 ::msgcat::mcset bg "Blame Parent Commit" "\u0410\u043d\u043e\u0442\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u0441\u043a\u043e\u0442\u043e \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435"
-::msgcat::mcset bg "Reading %s..." "%s \u0441\u0435 \u0447\u0435\u0442\u0435\u2026"
+::msgcat::mcset bg "Reading %s..." "\u0427\u0435\u0442\u0435 \u0441\u0435 \u201e%s\u201c\u2026"
 ::msgcat::mcset bg "Loading copy/move tracking annotations..." "\u0417\u0430\u0440\u0435\u0436\u0434\u0430\u043d\u0435 \u043d\u0430 \u0430\u043d\u043e\u0442\u0430\u0446\u0438\u0438\u0442\u0435 \u0437\u0430 \u043f\u0440\u043e\u0441\u043b\u0435\u0434\u044f\u0432\u0430\u043d\u0435 \u043d\u0430 \u043a\u043e\u043f\u0438\u0440\u0430\u043d\u0435\u0442\u043e/\u043f\u0440\u0435\u043c\u0435\u0441\u0442\u0432\u0430\u043d\u0435\u0442\u043e\u2026"
 ::msgcat::mcset bg "lines annotated" "\u0440\u0435\u0434\u0430 \u0430\u043d\u043e\u0442\u0438\u0440\u0430\u043d\u0438"
 ::msgcat::mcset bg "Loading original location annotations..." "\u0417\u0430\u0440\u0435\u0436\u0434\u0430\u043d\u0435 \u043d\u0430 \u0430\u043d\u043e\u0442\u0430\u0446\u0438\u0438\u0442\u0435 \u0437\u0430 \u043f\u044a\u0440\u0432\u043e\u043d\u0430\u0447\u0430\u043b\u043d\u043e\u0442\u043e \u043c\u0435\u0441\u0442\u043e\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u2026"
 ::msgcat::mcset bg "Annotation complete." "\u0410\u043d\u043e\u0442\u0438\u0440\u0430\u043d\u0435\u0442\u043e \u0437\u0430\u0432\u044a\u0440\u0448\u0438."
 ::msgcat::mcset bg "Busy" "\u041e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u0442\u0430 \u043d\u0435 \u0435 \u0437\u0430\u0432\u044a\u0440\u0448\u0438\u043b\u0430"
 ::msgcat::mcset bg "Annotation process is already running." "\u0412 \u043c\u043e\u043c\u0435\u043d\u0442\u0430 \u0442\u0435\u0447\u0435 \u043f\u0440\u043e\u0446\u0435\u0441 \u043d\u0430 \u0430\u043d\u043e\u0442\u0438\u0440\u0430\u043d\u0435."
 ::msgcat::mcset bg "Running thorough copy detection..." "\u0418\u0437\u043f\u044a\u043b\u043d\u044f\u0432\u0430 \u0441\u0435 \u0446\u044f\u043b\u043e\u0441\u0442\u0435\u043d \u043f\u0440\u043e\u0446\u0435\u0441 \u043d\u0430 \u043e\u0442\u043a\u0440\u0438\u0432\u0430\u043d\u0435 \u043d\u0430 \u043a\u043e\u043f\u0438\u0440\u0430\u043d\u0435\u2026"
 ::msgcat::mcset bg "Loading annotation..." "\u0417\u0430\u0440\u0435\u0436\u0434\u0430\u043d\u0435 \u043d\u0430 \u0430\u043d\u043e\u0442\u0430\u0446\u0438\u0438\u2026"
 ::msgcat::mcset bg "Author:" "\u0410\u0432\u0442\u043e\u0440:"
 ::msgcat::mcset bg "Committer:" "\u041f\u043e\u0434\u0430\u043b:"
 ::msgcat::mcset bg "Original File:" "\u041f\u044a\u0440\u0432\u043e\u043d\u0430\u0447\u0430\u043b\u0435\u043d \u0444\u0430\u0439\u043b:"
-::msgcat::mcset bg "Cannot find HEAD commit:" "\u041f\u043e\u0434\u0430\u0432\u0430\u043d\u0435\u0442\u043e \u0437\u0430 \u0432\u0440\u044a\u0445 HEAD \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0441\u0435 \u043e\u0442\u043a\u0440\u0438\u0435:"
+::msgcat::mcset bg "Cannot find HEAD commit:" "\u041f\u043e\u0434\u0430\u0432\u0430\u043d\u0435\u0442\u043e \u0437\u0430 \u0432\u0440\u044a\u0445 \u201eHEAD\u201c \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0441\u0435 \u043e\u0442\u043a\u0440\u0438\u0435:"
 ::msgcat::mcset bg "Cannot find parent commit:" "\u0420\u043e\u0434\u0438\u0442\u0435\u043b\u0441\u043a\u043e\u0442\u043e \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435 \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043e\u0442\u043a\u0440\u0438\u0442\u043e"
 ::msgcat::mcset bg "Unable to display parent" "\u0420\u043e\u0434\u0438\u0442\u0435\u043b\u044f\u0442 \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u043d"
 ::msgcat::mcset bg "Originally By:" "\u041f\u044a\u0440\u0432\u043e\u043d\u0430\u0447\u0430\u043b\u043d\u043e \u043e\u0442:"
 ::msgcat::mcset bg "In File:" "\u0412\u044a\u0432 \u0444\u0430\u0439\u043b:"
 ::msgcat::mcset bg "Copied Or Moved Here By:" "\u041a\u043e\u043f\u0438\u0440\u0430\u043d\u043e \u0438\u043b\u0438 \u043f\u0440\u0435\u043c\u0435\u0441\u0442\u0435\u043d\u043e \u0442\u0443\u043a \u043e\u0442:"
 ::msgcat::mcset bg "Unable to unlock the index." "\u0418\u043d\u0434\u0435\u043a\u0441\u044a\u0442 \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d."
 ::msgcat::mcset bg "Index Error" "\u0413\u0440\u0435\u0448\u043a\u0430 \u0432 \u0438\u043d\u0434\u0435\u043a\u0441\u0430"
 ::msgcat::mcset bg "Updating the Git index failed.  A rescan will be automatically started to resynchronize git-gui." "\u041d\u0435\u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043e\u0431\u043d\u043e\u0432\u044f\u0432\u0430\u043d\u0435 \u043d\u0430 \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u043d\u0430 Git. \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u043e \u0449\u0435 \u0437\u0430\u043f\u043e\u0447\u043d\u0435 \u043d\u043e\u0432\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0437\u0430 \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u0430\u043d\u0435\u0442\u043e \u043d\u0430 git-gui."
 ::msgcat::mcset bg "Continue" "\u041f\u0440\u043e\u0434\u044a\u043b\u0436\u0430\u0432\u0430\u043d\u0435"
 ::msgcat::mcset bg "Unlock Index" "\u041e\u0442\u043a\u043b\u044e\u0447\u0432\u0430\u043d\u0435 \u043d\u0430 \u0438\u043d\u0434\u0435\u043a\u0441\u0430"
-::msgcat::mcset bg "Unstaging %s from commit" "\u0418\u0437\u0432\u0430\u0436\u0434\u0430\u043d\u0435 \u043d\u0430 %s \u043e\u0442 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435\u0442\u043e"
+::msgcat::mcset bg "Unstaging %s from commit" "\u0418\u0437\u0432\u0430\u0436\u0434\u0430\u043d\u0435 \u043d\u0430 \u201e%s\u201c \u043e\u0442 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435\u0442\u043e"
 ::msgcat::mcset bg "Ready to commit." "\u0413\u043e\u0442\u043e\u0432\u043d\u043e\u0441\u0442 \u0437\u0430 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435."
 ::msgcat::mcset bg "Adding %s" "\u0414\u043e\u0431\u0430\u0432\u044f\u043d\u0435 \u043d\u0430 \u201e%s\u201c"
-::msgcat::mcset bg "Stage %d untracked files?" "\u0414\u0430 \u0441\u0435 \u0434\u043e\u0431\u0430\u0432\u044f\u0442 \u043b\u0438 %d \u043d\u0430 \u0431\u0440\u043e\u0439 \u043d\u0435\u0441\u043b\u0435\u0434\u0435\u043d\u0438 \u0444\u0430\u0439\u043b\u0430 \u043a\u044a\u043c \u0438\u043d\u0434\u0435\u043a\u0441\u0430?"
+::msgcat::mcset bg "Stage %d untracked files?" "\u0414\u0430 \u0441\u0435 \u0432\u043a\u0430\u0440\u0430\u0442 \u043b\u0438 %d \u043d\u0435\u0441\u043b\u0435\u0434\u0435\u043d\u0438 \u0444\u0430\u0439\u043b\u0430 \u0432 \u0438\u043d\u0434\u0435\u043a\u0441\u0430?"
 ::msgcat::mcset bg "Revert changes in file %s?" "\u0414\u0430 \u0441\u0435 \u043c\u0430\u0445\u043d\u0430\u0442 \u043b\u0438 \u043f\u0440\u043e\u043c\u0435\u043d\u0438\u0442\u0435 \u0432\u044a\u0432 \u0444\u0430\u0439\u043b\u0430 \u201e%s\u201c?"
 ::msgcat::mcset bg "Revert changes in these %i files?" "\u0414\u0430 \u0441\u0435 \u043c\u0430\u0445\u043d\u0430\u0442 \u043b\u0438 \u043f\u0440\u043e\u043c\u0435\u043d\u0438\u0442\u0435 \u0432 \u0442\u0435\u0437\u0438 %i \u0444\u0430\u0439\u043b\u0430?"
 ::msgcat::mcset bg "Any unstaged changes will be permanently lost by the revert." "\u0412\u0441\u0438\u0447\u043a\u0438 \u043f\u0440\u043e\u043c\u0435\u043d\u0438, \u043a\u043e\u0438\u0442\u043e \u043d\u0435 \u0441\u0430 \u0431\u0438\u043b\u0438 \u0432\u043a\u0430\u0440\u0430\u043d\u0438 \u0432 \u0438\u043d\u0434\u0435\u043a\u0441\u0430, \u0449\u0435 \u0431\u044a\u0434\u0430\u0442 \u0431\u0435\u0437\u0432\u044a\u0437\u0432\u0440\u0430\u0442\u043d\u043e \u0437\u0430\u0433\u0443\u0431\u0435\u043d\u0438."
 ::msgcat::mcset bg "Do Nothing" "\u041d\u0438\u0449\u043e \u0434\u0430 \u043d\u0435 \u0441\u0435 \u043f\u0440\u0430\u0432\u0438"
 ::msgcat::mcset bg "Reverting selected files" "\u041c\u0430\u0445\u0430\u043d\u0435 \u043d\u0430 \u043f\u0440\u043e\u043c\u0435\u043d\u0438\u0442\u0435 \u0432 \u0438\u0437\u0431\u0440\u0430\u043d\u0438\u0442\u0435 \u0444\u0430\u0439\u043b\u043e\u0432\u0435"
 ::msgcat::mcset bg "Reverting %s" "\u041c\u0430\u0445\u0430\u043d\u0435 \u043d\u0430 \u043f\u0440\u043e\u043c\u0435\u043d\u0438\u0442\u0435 \u0432 \u201e%s\u201c"
-::msgcat::mcset bg "Default" "\u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0442\u043e"
-::msgcat::mcset bg "System (%s)" "\u0421\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u0442\u043e (%s)"
-::msgcat::mcset bg "Other" "\u0414\u0440\u0443\u0433\u043e"
 ::msgcat::mcset bg "Invalid date from Git: %s" "\u041d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u043d\u0438 \u0434\u0430\u043d\u043d\u0438 \u043e\u0442 Git: %s"
 ::msgcat::mcset bg "Number of loose objects" "\u0411\u0440\u043e\u0439 \u043d\u0435\u043f\u0430\u043a\u0435\u0442\u0438\u0440\u0430\u043d\u0438 \u043e\u0431\u0435\u043a\u0442\u0438"
 ::msgcat::mcset bg "Disk space used by loose objects" "\u0414\u0438\u0441\u043a\u043e\u0432\u043e \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u043e \u0437\u0430\u0435\u0442\u043e \u043e\u0442 \u043d\u0435\u043f\u0430\u043a\u0435\u0442\u0438\u0440\u0430\u043d\u0438 \u043e\u0431\u0435\u043a\u0442\u0438"
 ::msgcat::mcset bg "Number of packed objects" "\u0411\u0440\u043e\u0439 \u043f\u0430\u043a\u0435\u0442\u0438\u0440\u0430\u043d\u0438 \u043e\u0431\u0435\u043a\u0442\u0438"
 ::msgcat::mcset bg "Number of packs" "\u0411\u0440\u043e\u0439 \u043f\u0430\u043a\u0435\u0442\u0438"
 ::msgcat::mcset bg "Disk space used by packed objects" "\u0414\u0438\u0441\u043a\u043e\u0432\u043e \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u043e \u0437\u0430\u0435\u0442\u043e \u043e\u0442 \u043f\u0430\u043a\u0435\u0442\u0438\u0440\u0430\u043d\u0438 \u043e\u0431\u0435\u043a\u0442\u0438"
 ::msgcat::mcset bg "Packed objects waiting for pruning" "\u041f\u0430\u043a\u0435\u0442\u0438\u0440\u0430\u043d\u0438 \u043e\u0431\u0435\u043a\u0442\u0438 \u0437\u0430 \u043e\u043a\u0430\u0441\u0442\u0440\u044f\u043d\u0435"
 ::msgcat::mcset bg "Garbage files" "\u0424\u0430\u0439\u043b\u043e\u0432\u0435 \u0437\u0430 \u0431\u043e\u043a\u043b\u0443\u043a\u0430"
 ::msgcat::mcset bg "Compressing the object database" "\u041a\u043e\u043c\u043f\u0440\u0435\u0441\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 \u0431\u0430\u0437\u0430\u0442\u0430 \u0441 \u0434\u0430\u043d\u043d\u0438 \u0437\u0430 \u043e\u0431\u0435\u043a\u0442\u0438\u0442\u0435"
-::msgcat::mcset bg "Verifying the object database with fsck-objects" "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u0431\u0430\u0437\u0430\u0442\u0430 \u0441 \u0434\u0430\u043d\u043d\u0438 \u0437\u0430 \u043e\u0431\u0435\u043a\u0442\u0438\u0442\u0435 \u0441 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0430\u0442\u0430 fsck-objects"
-::msgcat::mcset bg "This repository currently has approximately %i loose objects.\n\nTo maintain optimal performance it is strongly recommended that you compress the database.\n\nCompress the database now?" "\u0412 \u0442\u043e\u0432\u0430 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435 \u0432 \u043c\u043e\u043c\u0435\u043d\u0442\u0430 \u0438\u043c\u0430 \u043a\u044a\u043c %i \u043d\u0435\u043f\u0430\u043a\u0435\u0442\u0438\u0440\u0430\u043d\u0438 \u043e\u0431\u0435\u043a\u0442\u0438.\n\n\u0417d \u0434\u043e\u0431\u0440\u0430 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u043d\u043e\u0441\u0442 \u0441\u0435 \u043f\u0440\u0435\u043f\u043e\u0440\u044a\u0447\u0432\u0430 \u0434\u0430 \u043a\u043e\u043c\u043f\u0440\u0435\u0441\u0438\u0440\u0430\u0442\u0435 \u0431\u0430\u0437\u0430\u0442\u0430 \u0441 \u0434\u0430\u043d\u043d\u0438 \u0437\u0430 \u043e\u0431\u0435\u043a\u0442\u0438\u0442\u0435.\n\n\u0414\u0430 \u0441\u0435 \u0437\u0430\u043f\u043e\u0447\u043d\u0435 \u043b\u0438 \u043a\u043e\u043c\u043f\u0440\u0435\u0441\u0438\u0440\u0430\u043d\u0435\u0442\u043e?"
+::msgcat::mcset bg "Verifying the object database with fsck-objects" "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u0431\u0430\u0437\u0430\u0442\u0430 \u0441 \u0434\u0430\u043d\u043d\u0438 \u0437\u0430 \u043e\u0431\u0435\u043a\u0442\u0438\u0442\u0435 \u0441 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0430\u0442\u0430 \u201efsck-objects\u201c"
+::msgcat::mcset bg "This repository currently has approximately %i loose objects.\n\nTo maintain optimal performance it is strongly recommended that you compress the database.\n\nCompress the database now?" "\u0412 \u0442\u043e\u0432\u0430 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435 \u0432 \u043c\u043e\u043c\u0435\u043d\u0442\u0430 \u0438\u043c\u0430 \u043a\u044a\u043c %i \u043d\u0435\u043f\u0430\u043a\u0435\u0442\u0438\u0440\u0430\u043d\u0438 \u043e\u0431\u0435\u043a\u0442\u0438.\n\n\u0417\u0430 \u0434\u043e\u0431\u0440\u0430 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u043d\u043e\u0441\u0442 \u0441\u0435 \u043f\u0440\u0435\u043f\u043e\u0440\u044a\u0447\u0432\u0430 \u0434\u0430 \u043a\u043e\u043c\u043f\u0440\u0435\u0441\u0438\u0440\u0430\u0442\u0435 \u0431\u0430\u0437\u0430\u0442\u0430 \u0441 \u0434\u0430\u043d\u043d\u0438 \u0437\u0430 \u043e\u0431\u0435\u043a\u0442\u0438\u0442\u0435.\n\n\u0414\u0430 \u0441\u0435 \u0437\u0430\u043f\u043e\u0447\u043d\u0435 \u043b\u0438 \u043a\u043e\u043c\u043f\u0440\u0435\u0441\u0438\u0440\u0430\u043d\u0435\u0442\u043e?"
 ::msgcat::mcset bg "error" "\u0433\u0440\u0435\u0448\u043a\u0430"
 ::msgcat::mcset bg "warning" "\u043f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435"
-::msgcat::mcset bg "You must correct the above errors before committing." "\u041f\u0440\u0435\u0434\u0438 \u0434\u0430 \u043c\u043e\u0436\u0435\u0442\u0435 \u0434\u0430 \u043f\u043e\u0434\u0430\u0434\u0435\u0442\u0435, \u043e\u043f\u0440\u0430\u0432\u0435\u0442\u0435 \u0433\u043e\u0440\u043d\u0438\u0442\u0435 \u0433\u0440\u0435\u0448\u043a\u0438."
+::msgcat::mcset bg "You must correct the above errors before committing." "\u041f\u0440\u0435\u0434\u0438 \u0434\u0430 \u043c\u043e\u0436\u0435\u0442\u0435 \u0434\u0430 \u043f\u043e\u0434\u0430\u0434\u0435\u0442\u0435, \u043a\u043e\u0440\u0438\u0433\u0438\u0440\u0430\u0439\u0442\u0435 \u0433\u043e\u0440\u043d\u0438\u0442\u0435 \u0433\u0440\u0435\u0448\u043a\u0438."
 ::msgcat::mcset bg "Cannot merge while amending.\n\nYou must finish amending this commit before starting any type of merge.\n" "\u041f\u043e \u0432\u0440\u0435\u043c\u0435 \u043d\u0430 \u043f\u043e\u043f\u0440\u0430\u0432\u044f\u043d\u0435 \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0441\u043b\u0438\u0432\u0430\u043d\u0435.\n\n\u0422\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0437\u0430\u0432\u044a\u0440\u0448\u0438\u0442\u0435 \u043f\u043e\u043f\u0440\u0430\u0432\u044f\u043d\u0435\u0442\u043e \u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u043e\u0442\u043e \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435, \u043f\u0440\u0435\u0434\u0438 \u0434\u0430 \u0437\u0430\u043f\u043e\u0447\u043d\u0435\u0442\u0435 \u0441\u043b\u0438\u0432\u0430\u043d\u0435.\n"
 ::msgcat::mcset bg "Last scanned state does not match repository state.\n\nAnother Git program has modified this repository since the last scan.  A rescan must be performed before a merge can be performed.\n\nThe rescan will be automatically started now.\n" "\u041f\u043e\u0441\u043b\u0435\u0434\u043d\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0435\u043d\u043e\u0442\u043e \u0441\u044a\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043d\u0435 \u043e\u0442\u0433\u043e\u0432\u0430\u0440\u044f \u043d\u0430 \u0442\u043e\u0432\u0430 \u0432 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435\u0442\u043e.\n\n\u041d\u044f\u043a\u043e\u0439 \u0434\u0440\u0443\u0433 \u043f\u0440\u043e\u0446\u0435\u0441 \u0437\u0430 Git \u0435 \u043f\u0440\u043e\u043c\u0435\u043d\u0438\u043b \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435\u0442\u043e \u043c\u0435\u0436\u0434\u0443\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e. \u0421\u044a\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u0442\u043e \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u0435\u043d\u043e, \u043f\u0440\u0435\u0434\u0438 \u0434\u0430 \u0441\u0435 \u0438\u0437\u0432\u044a\u0440\u0448\u0438 \u0441\u043b\u0438\u0432\u0430\u043d\u0435.\n\n\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u043e \u0449\u0435 \u0437\u0430\u043f\u043e\u0447\u043d\u0435 \u043d\u043e\u0432\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430.\n\n"
 ::msgcat::mcset bg "You are in the middle of a conflicted merge.\n\nFile %s has merge conflicts.\n\nYou must resolve them, stage the file, and commit to complete the current merge.  Only then can you begin another merge.\n" "\u0412 \u043c\u043e\u043c\u0435\u043d\u0442\u0430 \u0442\u0435\u0447\u0435 \u0441\u043b\u0438\u0432\u0430\u043d\u0435, \u043d\u043e \u0438\u043c\u0430 \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u0438.\n\n\u041f\u043e\u0433\u043b\u0435\u0434\u043d\u0435\u0442\u0435 \u0444\u0430\u0439\u043b\u0430 \u201e%s\u201c.\n\n\u0422\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u043a\u043e\u0440\u0438\u0433\u0438\u0440\u0430\u0442\u0435 \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u0438\u0442\u0435 \u0432 \u043d\u0435\u0433\u043e, \u0434\u0430 \u0433\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u0435 \u043a\u044a\u043c \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u0438 \u0434\u0430 \u0437\u0430\u0432\u044a\u0440\u0448\u0438\u0442\u0435 \u0442\u0435\u043a\u0443\u0449\u043e\u0442\u043e \u0441\u043b\u0438\u0432\u0430\u043d\u0435 \u0447\u0440\u0435\u0437 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435. \u0427\u0430\u043a \u0442\u043e\u0433\u0430\u0432\u0430 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0437\u0430\u043f\u043e\u0447\u043d\u0435\u0442\u0435 \u043d\u043e\u0432\u043e \u0441\u043b\u0438\u0432\u0430\u043d\u0435.\n"
 ::msgcat::mcset bg "You are in the middle of a change.\n\nFile %s is modified.\n\nYou should complete the current commit before starting a merge.  Doing so will help you abort a failed merge, should the need arise.\n" "\u0412 \u043c\u043e\u043c\u0435\u043d\u0442\u0430 \u0442\u0435\u0447\u0435 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435.\n\n\u0424\u0430\u0439\u043b\u044a\u0442 \u201e%s\u201c \u0435 \u043f\u0440\u043e\u043c\u0435\u043d\u0435\u043d.\n\n\u0422\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0437\u0430\u0432\u044a\u0440\u0448\u0438\u0442\u0435 \u0442\u0435\u043a\u0443\u0449\u043e\u0442\u043e \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435, \u043f\u0440\u0435\u0434\u0438 \u0434\u0430 \u0437\u0430\u043f\u043e\u0447\u043d\u0435\u0442\u0435 \u0441\u043b\u0438\u0432\u0430\u043d\u0435. \u0422\u0430\u043a\u0430 \u0449\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u043b\u0435\u0441\u043d\u043e \u0434\u0430 \u043f\u0440\u0435\u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u0441\u043b\u0438\u0432\u0430\u043d\u0435\u0442\u043e, \u0430\u043a\u043e \u0432\u044a\u0437\u043d\u0438\u043a\u043d\u0435 \u043d\u0443\u0436\u0434\u0430.\n"
 ::msgcat::mcset bg "%s of %s" "%s \u043e\u0442 \u043e\u0431\u0449\u043e %s"
 ::msgcat::mcset bg "Merging %s and %s..." "\u0421\u043b\u0438\u0432\u0430\u043d\u0435 \u043d\u0430 \u201e%s\u201c \u0438 \u201e%s\u201c\u2026"
 ::msgcat::mcset bg "Merge completed successfully." "\u0421\u043b\u0438\u0432\u0430\u043d\u0435\u0442\u043e \u0437\u0430\u0432\u044a\u0440\u0448\u0438 \u0443\u0441\u043f\u0435\u0448\u043d\u043e."
 ::msgcat::mcset bg "Merge failed.  Conflict resolution is required." "\u041d\u0435\u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0441\u043b\u0438\u0432\u0430\u043d\u0435 \u2014 \u0438\u043c\u0430 \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u0438 \u0437\u0430 \u043a\u043e\u0440\u0438\u0433\u0438\u0440\u0430\u043d\u0435."
 ::msgcat::mcset bg "Merge Into %s" "\u0421\u043b\u0438\u0432\u0430\u043d\u0435 \u0432 \u201e%s\u201c"
 ::msgcat::mcset bg "Revision To Merge" "\u0412\u0435\u0440\u0441\u0438\u044f \u0437\u0430 \u0441\u043b\u0438\u0432\u0430\u043d\u0435"
 ::msgcat::mcset bg "Cannot abort while amending.\n\nYou must finish amending this commit.\n" "\u041f\u043e\u043f\u0440\u0430\u0432\u044f\u043d\u0435\u0442\u043e \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043f\u0440\u0435\u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0435\u043d\u043e.\n\n\u0422\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0437\u0430\u0432\u044a\u0440\u0448\u0438\u0442\u0435 \u043f\u043e\u043f\u0440\u0430\u0432\u043a\u0430\u0442\u0430 \u043d\u0430 \u0442\u043e\u0432\u0430 \u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0435.\n"
-::msgcat::mcset bg "Abort merge?\n\nAborting the current merge will cause *ALL* uncommitted changes to be lost.\n\nContinue with aborting the current merge?" "\u0414\u0430 \u0441\u0435 \u043f\u0440\u0435\u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438 \u043b\u0438 \u0441\u043b\u0438\u0432\u0430\u043d\u0435\u0442\u043e?\n\n\u0412 \u0442\u0430\u043a\u044a\u0432 \u0441\u043b\u0443\u0447\u0430\u0439 *\u0412\u0421\u0418\u0427\u041a\u0418* \u043d\u0435\u043f\u043e\u0434\u0430\u0434\u0435\u043d\u0438 \u043f\u0440\u043e\u043c\u0435\u043d\u0438 \u0449\u0435 \u0431\u044a\u0434\u0430\u0442 \u0431\u0435\u0437\u0432\u044a\u0437\u0432\u0440\u0430\u0442\u043d\u043e \u0437\u0430\u0433\u0443\u0431\u0435\u043d\u0438.\n\n\u041d\u0430\u0438\u0441\u0442\u0438\u043d\u0430 \u043b\u0438 \u0434\u0430 \u0441\u0435 \u043f\u0440\u0435\u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438 \u0441\u043b\u0438\u0432\u0430\u043d\u0435\u0442\u043e?"
-::msgcat::mcset bg "Reset changes?\n\nResetting the changes will cause *ALL* uncommitted changes to be lost.\n\nContinue with resetting the current changes?" "\u0414\u0430 \u0441\u0435 \u0437\u0430\u043d\u0443\u043b\u044f\u0442 \u043b\u0438 \u043f\u0440\u043e\u043c\u0435\u043d\u0438\u0442\u0435?\n\n\u0412 \u0442\u0430\u043a\u044a\u0432 \u0441\u043b\u0443\u0447\u0430\u0439 *\u0412\u0421\u0418\u0427\u041a\u0418* \u043d\u0435\u043f\u043e\u0434\u0430\u0434\u0435\u043d\u0438 \u043f\u0440\u043e\u043c\u0435\u043d\u0438 \u0449\u0435 \u0431\u044a\u0434\u0430\u0442 \u0431\u0435\u0437\u0432\u044a\u0437\u0432\u0440\u0430\u0442\u043d\u043e \u0437\u0430\u0433\u0443\u0431\u0435\u043d\u0438.\n\n\u041d\u0430\u0438\u0441\u0442\u0438\u043d\u0430 \u043b\u0438 \u0434\u0430 \u0441\u0435 \u0437\u0430\u043d\u0443\u043b\u044f\u0442 \u043f\u0440\u043e\u043c\u0435\u043d\u0438\u0442\u0435?"
+::msgcat::mcset bg "Abort merge?\n\nAborting the current merge will cause *ALL* uncommitted changes to be lost.\n\nContinue with aborting the current merge?" "\u0414\u0430 \u0441\u0435 \u043f\u0440\u0435\u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438 \u043b\u0438 \u0441\u043b\u0438\u0432\u0430\u043d\u0435\u0442\u043e?\n\n\u0412 \u0442\u0430\u043a\u044a\u0432 \u0441\u043b\u0443\u0447\u0430\u0439 \u25cf\u0412\u0421\u0418\u0427\u041a\u0418\u25cf \u043d\u0435\u043f\u043e\u0434\u0430\u0434\u0435\u043d\u0438 \u043f\u0440\u043e\u043c\u0435\u043d\u0438 \u0449\u0435 \u0431\u044a\u0434\u0430\u0442 \u0431\u0435\u0437\u0432\u044a\u0437\u0432\u0440\u0430\u0442\u043d\u043e \u0437\u0430\u0433\u0443\u0431\u0435\u043d\u0438.\n\n\u041d\u0430\u0438\u0441\u0442\u0438\u043d\u0430 \u043b\u0438 \u0434\u0430 \u0441\u0435 \u043f\u0440\u0435\u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438 \u0441\u043b\u0438\u0432\u0430\u043d\u0435\u0442\u043e?"
+::msgcat::mcset bg "Reset changes?\n\nResetting the changes will cause *ALL* uncommitted changes to be lost.\n\nContinue with resetting the current changes?" "\u0414\u0430 \u0441\u0435 \u0437\u0430\u043d\u0443\u043b\u044f\u0442 \u043b\u0438 \u043f\u0440\u043e\u043c\u0435\u043d\u0438\u0442\u0435?\n\n\u0412 \u0442\u0430\u043a\u044a\u0432 \u0441\u043b\u0443\u0447\u0430\u0439 \u25cf\u0412\u0421\u0418\u0427\u041a\u0418\u25cf \u043d\u0435\u043f\u043e\u0434\u0430\u0434\u0435\u043d\u0438 \u043f\u0440\u043e\u043c\u0435\u043d\u0438 \u0449\u0435 \u0431\u044a\u0434\u0430\u0442 \u0431\u0435\u0437\u0432\u044a\u0437\u0432\u0440\u0430\u0442\u043d\u043e \u0437\u0430\u0433\u0443\u0431\u0435\u043d\u0438.\n\n\u041d\u0430\u0438\u0441\u0442\u0438\u043d\u0430 \u043b\u0438 \u0434\u0430 \u0441\u0435 \u0437\u0430\u043d\u0443\u043b\u044f\u0442 \u043f\u0440\u043e\u043c\u0435\u043d\u0438\u0442\u0435?"
 ::msgcat::mcset bg "Aborting" "\u041f\u0440\u0435\u0443\u0441\u0442\u0430\u043d\u043e\u0432\u044f\u0432\u0430\u043d\u0435"
 ::msgcat::mcset bg "files reset" "\u0444\u0430\u0439\u043b\u0430 \u0441\u044a\u0441 \u0437\u0430\u043d\u0443\u043b\u0435\u043d\u0438 \u043f\u0440\u043e\u043c\u0435\u043d\u0438"
 ::msgcat::mcset bg "Abort failed." "\u041d\u0435\u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043f\u0440\u0435\u0443\u0441\u0442\u0430\u043d\u043e\u0432\u044f\u0432\u0430\u043d\u0435."
 ::msgcat::mcset bg "Abort completed.  Ready." "\u0423\u0441\u043f\u0435\u0448\u043d\u043e \u043f\u0440\u0435\u0443\u0441\u0442\u0430\u043d\u043e\u0432\u044f\u0432\u0430\u043d\u0435. \u0413\u043e\u0442\u043e\u0432\u043d\u043e\u0441\u0442 \u0437\u0430 \u0441\u043b\u0435\u0434\u0432\u0430\u0449\u043e \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435."
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/po/bg.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/po/bg.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/po/bg.po	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/po/bg.po	2015-05-01 03:12:02.000000000 +0800
@@ -1,604 +1,609 @@
 # Bulgarian translation of git-gui po-file.
-# Copyright (C) 2012, 2013, 2014 Alexander Shopov <ash@kambanaria.org>.
+# Copyright (C) 2012, 2013, 2014, 2015 Alexander Shopov <ash@kambanaria.org>.
 # This file is distributed under the same license as the git package.
-# Alexander Shopov <ash@kambanaria.org>, 2012, 2013, 2014.
+# Alexander Shopov <ash@kambanaria.org>, 2012, 2013, 2014, 2015.
 #
 #
 msgid ""
 msgstr ""
 "Project-Id-Version: git-gui master\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2014-01-13 20:45+0200\n"
-"PO-Revision-Date: 2014-01-13 21:31+0200\n"
+"POT-Creation-Date: 2015-04-07 07:37+0300\n"
+"PO-Revision-Date: 2015-04-07 07:46+0300\n"
 "Last-Translator: Alexander Shopov <ash@kambanaria.org>\n"
 "Language-Team: Bulgarian <dict@fsa-bg.org>\n"
 "Language: bg\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
 "Plural-Forms: nplurals=2; plural=(n != 1);\n"
 
-#: git-gui.sh:859
+#: git-gui.sh:861
 #, tcl-format
 msgid "Invalid font specified in %s:"
-msgstr "Указан е неправилен шрифт в %s:"
+msgstr "Указан е неправилен шрифт в „%s“:"
 
-#: git-gui.sh:912
+#: git-gui.sh:915
 msgid "Main Font"
 msgstr "Основен шрифт"
 
-#: git-gui.sh:913
+#: git-gui.sh:916
 msgid "Diff/Console Font"
 msgstr "Шрифт за разликите/конзолата"
 
-#: git-gui.sh:928 git-gui.sh:942 git-gui.sh:955 git-gui.sh:1045
-#: git-gui.sh:1064 git-gui.sh:3115
+#: git-gui.sh:931 git-gui.sh:945 git-gui.sh:958 git-gui.sh:1048
+#: git-gui.sh:1067 git-gui.sh:3125
 msgid "git-gui: fatal error"
 msgstr "git-gui: фатална грешка"
 
-#: git-gui.sh:929
+#: git-gui.sh:932
 msgid "Cannot find git in PATH."
 msgstr "Командата git липсва в пътя (PATH)."
 
-#: git-gui.sh:956
+#: git-gui.sh:959
 msgid "Cannot parse Git version string:"
 msgstr "Низът с версията на Git не може да бъде интерпретиран:"
 
-#: git-gui.sh:981
+#: git-gui.sh:984
 #, tcl-format
 msgid ""
 "Git version cannot be determined.\n"
 "\n"
 "%s claims it is version '%s'.\n"
 "\n"
 "%s requires at least Git 1.5.0 or later.\n"
 "\n"
 "Assume '%s' is version 1.5.0?\n"
 msgstr ""
 "Версията на Git не може да бъде определена.\n"
 "\n"
-"Версията на %s изглежда, че е „%s“.\n"
+"Версията на „%s“ изглежда, че е „%s“.\n"
 "\n"
-"%s изисква Git, версия поне 1.5.0.\n"
+"„%s“ изисква Git, версия поне 1.5.0.\n"
 "\n"
-"Да се приеме ли, че „%s“ е версия 1.5.0?\n"
+"Да се приеме ли, че „%s“ е версия „1.5.0“?\n"
 
-#: git-gui.sh:1278
+#: git-gui.sh:1281
 msgid "Git directory not found:"
 msgstr "Директорията на Git не е открита:"
 
-#: git-gui.sh:1312
+#: git-gui.sh:1315
 msgid "Cannot move to top of working directory:"
 msgstr "Не може да се премине към родителската  директория."
 
-#: git-gui.sh:1320
+#: git-gui.sh:1323
 msgid "Cannot use bare repository:"
 msgstr "Голо хранилище не може да се използва:"
 
-#: git-gui.sh:1328
+#: git-gui.sh:1331
 msgid "No working directory"
 msgstr "Работната директория липсва"
 
-#: git-gui.sh:1500 lib/checkout_op.tcl:306
+#: git-gui.sh:1503 lib/checkout_op.tcl:306
 msgid "Refreshing file status..."
 msgstr "Обновяване на състоянието на файла…"
 
-#: git-gui.sh:1560
+#: git-gui.sh:1563
 msgid "Scanning for modified files ..."
 msgstr "Проверка за променени файлове…"
 
-#: git-gui.sh:1632
+#: git-gui.sh:1639
 msgid "Calling prepare-commit-msg hook..."
-msgstr "Куката prepare-commit-msg се изпълнява в момента…"
+msgstr "Куката „prepare-commit-msg“ се изпълнява в момента…"
 
-#: git-gui.sh:1649
+#: git-gui.sh:1656
 msgid "Commit declined by prepare-commit-msg hook."
-msgstr "Подаването е отхвърлено от куката prepare-commit-msg."
+msgstr "Подаването е отхвърлено от куката „prepare-commit-msg“."
 
-#: git-gui.sh:1807 lib/browser.tcl:252
+#: git-gui.sh:1814 lib/browser.tcl:252
 msgid "Ready."
 msgstr "Готово."
 
-#: git-gui.sh:1965
+#: git-gui.sh:1978
 #, tcl-format
-msgid "Displaying only %s of %s files."
-msgstr "Показване на само %s от %s файла."
+msgid ""
+"Display limit (gui.maxfilesdisplayed = %s) reached, not showing all %s files."
+msgstr ""
+"Достигнат е максималният брой файлове за показване (gui.maxfilesdisplayed = "
+"%s). Файловете са общо %s."
 
-#: git-gui.sh:2091
+#: git-gui.sh:2101
 msgid "Unmodified"
 msgstr "Непроменен"
 
-#: git-gui.sh:2093
+#: git-gui.sh:2103
 msgid "Modified, not staged"
 msgstr "Променен, но не е в индекса"
 
-#: git-gui.sh:2094 git-gui.sh:2106
+#: git-gui.sh:2104 git-gui.sh:2116
 msgid "Staged for commit"
 msgstr "В индекса за подаване"
 
-#: git-gui.sh:2095 git-gui.sh:2107
+#: git-gui.sh:2105 git-gui.sh:2117
 msgid "Portions staged for commit"
 msgstr "Части са в индекса за подаване"
 
-#: git-gui.sh:2096 git-gui.sh:2108
+#: git-gui.sh:2106 git-gui.sh:2118
 msgid "Staged for commit, missing"
 msgstr "В индекса за подаване, но липсва"
 
-#: git-gui.sh:2098
+#: git-gui.sh:2108
 msgid "File type changed, not staged"
 msgstr "Видът на файла е сменен, но не е в индекса"
 
-#: git-gui.sh:2099 git-gui.sh:2100
+#: git-gui.sh:2109 git-gui.sh:2110
 msgid "File type changed, old type staged for commit"
-msgstr "Видът на файла е сменен, в индекса е старият"
+msgstr "Видът на файла е сменен, но в индекса е все още старият"
 
-#: git-gui.sh:2101
+#: git-gui.sh:2111
 msgid "File type changed, staged"
 msgstr "Видът на файла е сменен и е в индекса"
 
-#: git-gui.sh:2102
+#: git-gui.sh:2112
 msgid "File type change staged, modification not staged"
-msgstr "Видът на файла е сменен, промяната не е в индекса"
+msgstr "Видът на файла е сменен, но промяната не е в индекса"
 
-#: git-gui.sh:2103
+#: git-gui.sh:2113
 msgid "File type change staged, file missing"
 msgstr "Видът на файла е сменен, файлът липсва"
 
-#: git-gui.sh:2105
+#: git-gui.sh:2115
 msgid "Untracked, not staged"
 msgstr "Неследен"
 
-#: git-gui.sh:2110
+#: git-gui.sh:2120
 msgid "Missing"
 msgstr "Липсващ"
 
-#: git-gui.sh:2111
+#: git-gui.sh:2121
 msgid "Staged for removal"
 msgstr "В индекса за изтриване"
 
-#: git-gui.sh:2112
+#: git-gui.sh:2122
 msgid "Staged for removal, still present"
 msgstr "В индекса за изтриване, но още го има"
 
-#: git-gui.sh:2114 git-gui.sh:2115 git-gui.sh:2116 git-gui.sh:2117
-#: git-gui.sh:2118 git-gui.sh:2119
+#: git-gui.sh:2124 git-gui.sh:2125 git-gui.sh:2126 git-gui.sh:2127
+#: git-gui.sh:2128 git-gui.sh:2129
 msgid "Requires merge resolution"
 msgstr "Изисква коригиране при сливане"
 
-#: git-gui.sh:2154
+#: git-gui.sh:2164
 msgid "Starting gitk... please wait..."
-msgstr "Стартиране на gitk…, изчакайте…"
+msgstr "Стартиране на „gitk“…, изчакайте…"
 
-#: git-gui.sh:2166
+#: git-gui.sh:2176
 msgid "Couldn't find gitk in PATH"
-msgstr "В пътищата, определени от променливата PATH, липсва изпълним gitk"
+msgstr "Командата „gitk“ липсва в пътищата, определени от променливата PATH."
 
-#: git-gui.sh:2225
+#: git-gui.sh:2235
 msgid "Couldn't find git gui in PATH"
-msgstr "В пътищата, определени от променливата PATH, липсва изпълним git gui"
+msgstr ""
+"Командата „git gui“ липсва в пътищата, определени от променливата PATH."
 
-#: git-gui.sh:2644 lib/choose_repository.tcl:40
+#: git-gui.sh:2654 lib/choose_repository.tcl:41
 msgid "Repository"
 msgstr "Хранилище"
 
-#: git-gui.sh:2645
+#: git-gui.sh:2655
 msgid "Edit"
 msgstr "Редактиране"
 
-#: git-gui.sh:2647 lib/choose_rev.tcl:567
+#: git-gui.sh:2657 lib/choose_rev.tcl:567
 msgid "Branch"
 msgstr "Клон"
 
-#: git-gui.sh:2650 lib/choose_rev.tcl:554
+#: git-gui.sh:2660 lib/choose_rev.tcl:554
 msgid "Commit@@noun"
 msgstr "Подаване"
 
-#: git-gui.sh:2653 lib/merge.tcl:123 lib/merge.tcl:152 lib/merge.tcl:170
+#: git-gui.sh:2663 lib/merge.tcl:123 lib/merge.tcl:152 lib/merge.tcl:170
 msgid "Merge"
 msgstr "Сливане"
 
-#: git-gui.sh:2654 lib/choose_rev.tcl:563
+#: git-gui.sh:2664 lib/choose_rev.tcl:563
 msgid "Remote"
 msgstr "Отдалечено хранилище"
 
-#: git-gui.sh:2657
+#: git-gui.sh:2667
 msgid "Tools"
 msgstr "Команди"
 
-#: git-gui.sh:2666
+#: git-gui.sh:2676
 msgid "Explore Working Copy"
 msgstr "Разглеждане на работното копие"
 
-#: git-gui.sh:2672
+#: git-gui.sh:2682
 msgid "Git Bash"
-msgstr "Bash на Git"
+msgstr "Bash за Git"
 
-#: git-gui.sh:2682
+#: git-gui.sh:2692
 msgid "Browse Current Branch's Files"
 msgstr "Разглеждане на файловете в текущия клон"
 
-#: git-gui.sh:2686
+#: git-gui.sh:2696
 msgid "Browse Branch Files..."
-msgstr "Разглеждане на текущия клон"
+msgstr "Разглеждане на текущия клон…"
 
-#: git-gui.sh:2691
+#: git-gui.sh:2701
 msgid "Visualize Current Branch's History"
 msgstr "Визуализация на историята на текущия клон"
 
-#: git-gui.sh:2695
+#: git-gui.sh:2705
 msgid "Visualize All Branch History"
 msgstr "Визуализация на историята на всички клонове"
 
-#: git-gui.sh:2702
+#: git-gui.sh:2712
 #, tcl-format
 msgid "Browse %s's Files"
 msgstr "Разглеждане на файловете в %s"
 
-#: git-gui.sh:2704
+#: git-gui.sh:2714
 #, tcl-format
 msgid "Visualize %s's History"
 msgstr "Визуализация на историята на %s"
 
-#: git-gui.sh:2709 lib/database.tcl:40 lib/database.tcl:66
+#: git-gui.sh:2719 lib/database.tcl:40 lib/database.tcl:66
 msgid "Database Statistics"
 msgstr "Статистика на базата от данни"
 
-#: git-gui.sh:2712 lib/database.tcl:33
+#: git-gui.sh:2722 lib/database.tcl:33
 msgid "Compress Database"
 msgstr "Компресиране на базата от данни"
 
-#: git-gui.sh:2715
+#: git-gui.sh:2725
 msgid "Verify Database"
 msgstr "Проверка на базата от данни"
 
-#: git-gui.sh:2722 git-gui.sh:2726 git-gui.sh:2730 lib/shortcut.tcl:8
+#: git-gui.sh:2732 git-gui.sh:2736 git-gui.sh:2740 lib/shortcut.tcl:8
 #: lib/shortcut.tcl:40 lib/shortcut.tcl:72
 msgid "Create Desktop Icon"
 msgstr "Добавяне на икона на работния плот"
 
-#: git-gui.sh:2738 lib/choose_repository.tcl:192 lib/choose_repository.tcl:200
+#: git-gui.sh:2748 lib/choose_repository.tcl:193 lib/choose_repository.tcl:201
 msgid "Quit"
 msgstr "Спиране на програмата"
 
-#: git-gui.sh:2746
+#: git-gui.sh:2756
 msgid "Undo"
 msgstr "Отмяна"
 
-#: git-gui.sh:2749
+#: git-gui.sh:2759
 msgid "Redo"
 msgstr "Повторение"
 
-#: git-gui.sh:2753 git-gui.sh:3348
+#: git-gui.sh:2763 git-gui.sh:3368
 msgid "Cut"
 msgstr "Отрязване"
 
-#: git-gui.sh:2756 git-gui.sh:3351 git-gui.sh:3425 git-gui.sh:3510
+#: git-gui.sh:2766 git-gui.sh:3371 git-gui.sh:3445 git-gui.sh:3530
 #: lib/console.tcl:69
 msgid "Copy"
 msgstr "Копиране"
 
-#: git-gui.sh:2759 git-gui.sh:3354
+#: git-gui.sh:2769 git-gui.sh:3374
 msgid "Paste"
 msgstr "Поставяне"
 
-#: git-gui.sh:2762 git-gui.sh:3357 lib/remote_branch_delete.tcl:39
+#: git-gui.sh:2772 git-gui.sh:3377 lib/remote_branch_delete.tcl:39
 #: lib/branch_delete.tcl:28
 msgid "Delete"
 msgstr "Изтриване"
 
-#: git-gui.sh:2766 git-gui.sh:3361 git-gui.sh:3514 lib/console.tcl:71
+#: git-gui.sh:2776 git-gui.sh:3381 git-gui.sh:3534 lib/console.tcl:71
 msgid "Select All"
 msgstr "Избиране на всичко"
 
-#: git-gui.sh:2775
+#: git-gui.sh:2785
 msgid "Create..."
 msgstr "Създаване…"
 
-#: git-gui.sh:2781
+#: git-gui.sh:2791
 msgid "Checkout..."
 msgstr "Изтегляне…"
 
-#: git-gui.sh:2787
+#: git-gui.sh:2797
 msgid "Rename..."
 msgstr "Преименуване…"
 
-#: git-gui.sh:2792
+#: git-gui.sh:2802
 msgid "Delete..."
 msgstr "Изтриване…"
 
-#: git-gui.sh:2797
+#: git-gui.sh:2807
 msgid "Reset..."
 msgstr "Отмяна на промените…"
 
-#: git-gui.sh:2807
+#: git-gui.sh:2817
 msgid "Done"
 msgstr "Готово"
 
-#: git-gui.sh:2809
+#: git-gui.sh:2819
 msgid "Commit@@verb"
 msgstr "Подаване"
 
-#: git-gui.sh:2818 git-gui.sh:3289
+#: git-gui.sh:2828 git-gui.sh:3309
 msgid "New Commit"
-msgstr "Подаване"
+msgstr "Ново подаване"
 
-#: git-gui.sh:2826 git-gui.sh:3296
+#: git-gui.sh:2836 git-gui.sh:3316
 msgid "Amend Last Commit"
 msgstr "Поправяне на последното подаване"
 
-#: git-gui.sh:2836 git-gui.sh:3250 lib/remote_branch_delete.tcl:101
+#: git-gui.sh:2846 git-gui.sh:3270 lib/remote_branch_delete.tcl:101
 msgid "Rescan"
 msgstr "Обновяване"
 
-#: git-gui.sh:2842
+#: git-gui.sh:2852
 msgid "Stage To Commit"
 msgstr "Към индекса за подаване"
 
-#: git-gui.sh:2848
+#: git-gui.sh:2858
 msgid "Stage Changed Files To Commit"
 msgstr "Всички променени файлове към индекса за подаване"
 
-#: git-gui.sh:2854
+#: git-gui.sh:2864
 msgid "Unstage From Commit"
 msgstr "Изваждане от индекса за подаване"
 
-#: git-gui.sh:2860 lib/index.tcl:442
+#: git-gui.sh:2870 lib/index.tcl:442
 msgid "Revert Changes"
 msgstr "Връщане на оригинала"
 
-#: git-gui.sh:2868 git-gui.sh:3561 git-gui.sh:3592
+#: git-gui.sh:2878 git-gui.sh:3581 git-gui.sh:3612
 msgid "Show Less Context"
 msgstr "По-малко контекст"
 
-#: git-gui.sh:2872 git-gui.sh:3565 git-gui.sh:3596
+#: git-gui.sh:2882 git-gui.sh:3585 git-gui.sh:3616
 msgid "Show More Context"
 msgstr "Повече контекст"
 
-#: git-gui.sh:2879 git-gui.sh:3263 git-gui.sh:3372
+#: git-gui.sh:2889 git-gui.sh:3283 git-gui.sh:3392
 msgid "Sign Off"
 msgstr "Подписване"
 
-#: git-gui.sh:2895
+#: git-gui.sh:2905
 msgid "Local Merge..."
 msgstr "Локално сливане…"
 
-#: git-gui.sh:2900
+#: git-gui.sh:2910
 msgid "Abort Merge..."
 msgstr "Преустановяване на сливане…"
 
-#: git-gui.sh:2912 git-gui.sh:2940
+#: git-gui.sh:2922 git-gui.sh:2950
 msgid "Add..."
 msgstr "Добавяне…"
 
-#: git-gui.sh:2916
+#: git-gui.sh:2926
 msgid "Push..."
 msgstr "Избутване…"
 
-#: git-gui.sh:2920
+#: git-gui.sh:2930
 msgid "Delete Branch..."
 msgstr "Изтриване на клон…"
 
-#: git-gui.sh:2930 git-gui.sh:3543
+#: git-gui.sh:2940 git-gui.sh:3563
 msgid "Options..."
 msgstr "Опции…"
 
-#: git-gui.sh:2941
+#: git-gui.sh:2951
 msgid "Remove..."
 msgstr "Премахване…"
 
-#: git-gui.sh:2950 lib/choose_repository.tcl:54
+#: git-gui.sh:2960 lib/choose_repository.tcl:55
 msgid "Help"
 msgstr "Помощ"
 
-#: git-gui.sh:2954 git-gui.sh:2958 lib/choose_repository.tcl:48
-#: lib/choose_repository.tcl:57 lib/about.tcl:14
+#: git-gui.sh:2964 git-gui.sh:2968 lib/choose_repository.tcl:49
+#: lib/choose_repository.tcl:58 lib/about.tcl:14
 #, tcl-format
 msgid "About %s"
 msgstr "Относно %s"
 
-#: git-gui.sh:2982
+#: git-gui.sh:2992
 msgid "Online Documentation"
 msgstr "Документация в Интернет"
 
-#: git-gui.sh:2985 lib/choose_repository.tcl:51 lib/choose_repository.tcl:60
+#: git-gui.sh:2995 lib/choose_repository.tcl:52 lib/choose_repository.tcl:61
 msgid "Show SSH Key"
 msgstr "Показване на ключа за SSH"
 
-#: git-gui.sh:3004 git-gui.sh:3136
+#: git-gui.sh:3014 git-gui.sh:3146
 msgid "Usage"
 msgstr "Употреба"
 
-#: git-gui.sh:3085 lib/blame.tcl:573
+#: git-gui.sh:3095 lib/blame.tcl:573
 msgid "Error"
 msgstr "Грешка"
 
-#: git-gui.sh:3116
+#: git-gui.sh:3126
 #, tcl-format
 msgid "fatal: cannot stat path %s: No such file or directory"
 msgstr ""
-"фатално: пътят %s не може да бъде открит: такъв файл или директория няма"
+"ФАТАЛНА ГРЕШКА: пътят %s не може да бъде открит: такъв файл или директория "
+"няма"
 
-#: git-gui.sh:3149
+#: git-gui.sh:3159
 msgid "Current Branch:"
 msgstr "Текущ клон:"
 
-#: git-gui.sh:3175
+#: git-gui.sh:3185
 msgid "Staged Changes (Will Commit)"
 msgstr "Промени в индекса (за подаване)"
 
-#: git-gui.sh:3195
+#: git-gui.sh:3205
 msgid "Unstaged Changes"
 msgstr "Промени извън индекса"
 
-#: git-gui.sh:3256
+#: git-gui.sh:3276
 msgid "Stage Changed"
 msgstr "Индексът е променен"
 
-#: git-gui.sh:3275 lib/transport.tcl:137 lib/transport.tcl:229
+#: git-gui.sh:3295 lib/transport.tcl:137 lib/transport.tcl:229
 msgid "Push"
 msgstr "Изтласкване"
 
-#: git-gui.sh:3310
+#: git-gui.sh:3330
 msgid "Initial Commit Message:"
 msgstr "Първоначално съобщение при подаване:"
 
-#: git-gui.sh:3311
+#: git-gui.sh:3331
 msgid "Amended Commit Message:"
 msgstr "Поправено съобщение при подаване:"
 
-#: git-gui.sh:3312
+#: git-gui.sh:3332
 msgid "Amended Initial Commit Message:"
 msgstr "Поправено първоначално съобщение при подаване:"
 
-#: git-gui.sh:3313
+#: git-gui.sh:3333
 msgid "Amended Merge Commit Message:"
 msgstr "Поправено съобщение при подаване със сливане:"
 
-#: git-gui.sh:3314
+#: git-gui.sh:3334
 msgid "Merge Commit Message:"
 msgstr "Съобщение при подаване със сливане:"
 
-#: git-gui.sh:3315
+#: git-gui.sh:3335
 msgid "Commit Message:"
 msgstr "Съобщение при подаване:"
 
-#: git-gui.sh:3364 git-gui.sh:3518 lib/console.tcl:73
+#: git-gui.sh:3384 git-gui.sh:3538 lib/console.tcl:73
 msgid "Copy All"
 msgstr "Копиране на всичко"
 
-#: git-gui.sh:3388 lib/blame.tcl:105
+#: git-gui.sh:3408 lib/blame.tcl:105
 msgid "File:"
 msgstr "Файл:"
 
-#: git-gui.sh:3506
+#: git-gui.sh:3526
 msgid "Refresh"
 msgstr "Обновяване"
 
-#: git-gui.sh:3527
+#: git-gui.sh:3547
 msgid "Decrease Font Size"
 msgstr "По-едър шрифт"
 
-#: git-gui.sh:3531
+#: git-gui.sh:3551
 msgid "Increase Font Size"
 msgstr "По-дребен шрифт"
 
-#: git-gui.sh:3539 lib/blame.tcl:294
+#: git-gui.sh:3559 lib/blame.tcl:294
 msgid "Encoding"
 msgstr "Кодиране"
 
-#: git-gui.sh:3550
+#: git-gui.sh:3570
 msgid "Apply/Reverse Hunk"
 msgstr "Прилагане/връщане на парче"
 
-#: git-gui.sh:3555
+#: git-gui.sh:3575
 msgid "Apply/Reverse Line"
 msgstr "Прилагане/връщане на ред"
 
-#: git-gui.sh:3574
+#: git-gui.sh:3594
 msgid "Run Merge Tool"
 msgstr "Изпълнение на програмата за сливане"
 
-#: git-gui.sh:3579
+#: git-gui.sh:3599
 msgid "Use Remote Version"
 msgstr "Версия от отдалеченото хранилище"
 
-#: git-gui.sh:3583
+#: git-gui.sh:3603
 msgid "Use Local Version"
 msgstr "Локална версия"
 
-#: git-gui.sh:3587
+#: git-gui.sh:3607
 msgid "Revert To Base"
 msgstr "Връщане към родителската версия"
 
-#: git-gui.sh:3605
+#: git-gui.sh:3625
 msgid "Visualize These Changes In The Submodule"
 msgstr "Визуализиране на промените в подмодула"
 
-#: git-gui.sh:3609
+#: git-gui.sh:3629
 msgid "Visualize Current Branch History In The Submodule"
 msgstr "Визуализация на историята на текущия клон в историята за подмодула"
 
-#: git-gui.sh:3613
+#: git-gui.sh:3633
 msgid "Visualize All Branch History In The Submodule"
 msgstr "Визуализация на историята на всички клони в историята за подмодула"
 
-#: git-gui.sh:3618
+#: git-gui.sh:3638
 msgid "Start git gui In The Submodule"
 msgstr "Стартиране на „git gui“ за подмодула"
 
-#: git-gui.sh:3653
+#: git-gui.sh:3673
 msgid "Unstage Hunk From Commit"
 msgstr "Изваждане на парчето от подаването"
 
-#: git-gui.sh:3655
+#: git-gui.sh:3675
 msgid "Unstage Lines From Commit"
 msgstr "Изваждане на редовете от подаването"
 
-#: git-gui.sh:3657
+#: git-gui.sh:3677
 msgid "Unstage Line From Commit"
 msgstr "Изваждане на реда от подаването"
 
-#: git-gui.sh:3660
+#: git-gui.sh:3680
 msgid "Stage Hunk For Commit"
 msgstr "Добавяне на парчето за подаване"
 
-#: git-gui.sh:3662
+#: git-gui.sh:3682
 msgid "Stage Lines For Commit"
 msgstr "Добавяне на редовете за подаване"
 
-#: git-gui.sh:3664
+#: git-gui.sh:3684
 msgid "Stage Line For Commit"
 msgstr "Добавяне на реда за подаване"
 
-#: git-gui.sh:3689
+#: git-gui.sh:3709
 msgid "Initializing..."
 msgstr "Инициализиране…"
 
-#: git-gui.sh:3832
+#: git-gui.sh:3852
 #, tcl-format
 msgid ""
 "Possible environment issues exist.\n"
 "\n"
 "The following environment variables are probably\n"
 "going to be ignored by any Git subprocess run\n"
 "by %s:\n"
 "\n"
 msgstr ""
 "Възможно е да има проблем със средата.\n"
 "\n"
 "Най-вероятно следните променливи няма да бъдат\n"
-"взети под внимание от подпроцесите Git изпълнени\n"
+"взети под внимание от подпроцесите на Git\n"
 "от %s:\n"
 "\n"
 
-#: git-gui.sh:3861
+#: git-gui.sh:3881
 msgid ""
 "\n"
 "This is due to a known issue with the\n"
 "Tcl binary distributed by Cygwin."
 msgstr ""
 "\n"
 "Това е познат проблем и се дължи на\n"
 "версията на Tcl включена в Cygwin."
 
-#: git-gui.sh:3866
+#: git-gui.sh:3886
 #, tcl-format
 msgid ""
 "\n"
 "\n"
 "A good replacement for %s\n"
 "is placing values for the user.name and\n"
 "user.email settings into your personal\n"
 "~/.gitconfig file.\n"
 msgstr ""
 "\n"
 "\n"
-"Добър заместител на %s\n"
-"е да поставите настройките user.name и\n"
-"user.email в личния си файл ~/.gitconfig.\n"
+"Добър заместител на „%s“\n"
+"е да поставите настройките „user.name“ и\n"
+"„user.email“ в личния си файл „~/.gitconfig“.\n"
 
 #: lib/spellcheck.tcl:57
 msgid "Unsupported spell checker"
 msgstr "Тази програма за проверка на правописа не се поддържа"
 
 #: lib/spellcheck.tcl:65
@@ -741,15 +746,15 @@
 msgstr "[Към родителя]"
 
 #: lib/browser.tcl:275 lib/browser.tcl:282
 msgid "Browse Branch Files"
 msgstr "Разглеждане на файловете в клона"
 
-#: lib/browser.tcl:288 lib/choose_repository.tcl:406
-#: lib/choose_repository.tcl:493 lib/choose_repository.tcl:502
-#: lib/choose_repository.tcl:1029
+#: lib/browser.tcl:288 lib/choose_repository.tcl:422
+#: lib/choose_repository.tcl:509 lib/choose_repository.tcl:518
+#: lib/choose_repository.tcl:1074
 msgid "Browse"
 msgstr "Разглеждане"
 
 #: lib/browser.tcl:297 lib/branch_checkout.tcl:35 lib/tools_dlg.tcl:321
 msgid "Revision"
 msgstr "Версия"
@@ -759,18 +764,18 @@
 msgid "Running %s requires a selected file."
 msgstr "За изпълнението на „%s“ трябва да изберете файл."
 
 #: lib/tools.tcl:91
 #, tcl-format
 msgid "Are you sure you want to run %1$s on file \"%2$s\"?"
-msgstr "Сигурни ли сте, че искате да стартирате „%1$s“ върху „%2$s“?"
+msgstr "Сигурни ли сте, че искате да изпълните „%1$s“ върху файла „%2$s“?"
 
 #: lib/tools.tcl:95
 #, tcl-format
 msgid "Are you sure you want to run %s?"
-msgstr "Сигурни ли сте, че искате да стартирате „%s“?"
+msgstr "Сигурни ли сте, че искате да изпълните „%s“?"
 
 #: lib/tools.tcl:116
 #, tcl-format
 msgid "Tool: %s"
 msgstr "Команда: %s"
 
@@ -794,13 +799,13 @@
 msgstr "Клон за изтегляне"
 
 #: lib/branch_checkout.tcl:26
 msgid "Checkout"
 msgstr "Изтегляне"
 
-#: lib/branch_checkout.tcl:39 lib/option.tcl:309 lib/branch_create.tcl:69
+#: lib/branch_checkout.tcl:39 lib/option.tcl:310 lib/branch_create.tcl:69
 msgid "Options"
 msgstr "Опции"
 
 #: lib/branch_checkout.tcl:42 lib/branch_create.tcl:92
 msgid "Fetch Tracking Branch"
 msgstr "Изтегляне на промените от следения клон"
@@ -809,13 +814,13 @@
 msgid "Detach From Local Branch"
 msgstr "Изтриване от локалния клон"
 
 #: lib/transport.tcl:7
 #, tcl-format
 msgid "Fetching new changes from %s"
-msgstr "Доставяне на промените от %s"
+msgstr "Доставяне на промените от „%s“"
 
 #: lib/transport.tcl:18
 #, tcl-format
 msgid "remote prune %s"
 msgstr "окастряне на следящите клони към „%s“"
 
@@ -823,42 +828,41 @@
 #, tcl-format
 msgid "Pruning tracking branches deleted from %s"
 msgstr "Окастряне на следящите клони на изтритите клони от „%s“"
 
 #: lib/transport.tcl:25
 msgid "fetch all remotes"
-msgstr "доставяне на всички хранилища"
+msgstr "доставяне на всички отдалечени хранилища"
 
 #: lib/transport.tcl:26
 msgid "Fetching new changes from all remotes"
-msgstr "Доставяне на промените от всички отдалечени хранилища"
+msgstr "Доставяне на новите промени от всички отдалечени хранилища"
 
 #: lib/transport.tcl:40
 msgid "remote prune all remotes"
-msgstr "окастряне на всички клони следящи изтрити клони"
+msgstr "окастряне на всички следящи клони"
 
 #: lib/transport.tcl:41
 msgid "Pruning tracking branches deleted from all remotes"
 msgstr ""
-"Окастряне на следящите клони на изтритите клони от всички отдалечени "
-"хранилища"
+"Окастряне на всички клони, които следят изтрити клони от отдалечени хранилища"
 
 #: lib/transport.tcl:55
 #, tcl-format
 msgid "Pushing changes to %s"
-msgstr "Изтласкване на промените към %s"
+msgstr "Изтласкване на промените към „%s“"
 
 #: lib/transport.tcl:93
 #, tcl-format
 msgid "Mirroring to %s"
 msgstr "Изтласкване на всичко към „%s“"
 
 #: lib/transport.tcl:111
 #, tcl-format
 msgid "Pushing %s %s to %s"
-msgstr "Изтласкване на %s %s към %s"
+msgstr "Изтласкване на %s „%s“ към „%s“"
 
 #: lib/transport.tcl:132
 msgid "Push Branches"
 msgstr "Клони за изтласкване"
 
 #: lib/transport.tcl:147
@@ -1028,13 +1032,13 @@
 #: lib/choose_font.tcl:105
 msgid ""
 "This is example text.\n"
 "If you like this text, it can be your font."
 msgstr ""
 "Това е примерен текст.\n"
-"Ако ви харесва как изглежда, изберете този шрифт."
+"Ако ви харесва как изглежда, изберете шрифта."
 
 #: lib/option.tcl:11
 #, tcl-format
 msgid "Invalid global encoding '%s'"
 msgstr "Неправилно глобално кодиране „%s“"
 
@@ -1095,21 +1099,22 @@
 #: lib/option.tcl:150
 msgid "Match Tracking Branches"
 msgstr "Напасване на следящите клонове"
 
 #: lib/option.tcl:151
 msgid "Use Textconv For Diffs and Blames"
-msgstr "Използване на „textconv“ за разликите и анотациите"
+msgstr ""
+"Преобразуване на текста с „textconv“ при анотиране и извеждане на разлики"
 
 #: lib/option.tcl:152
 msgid "Blame Copy Only On Changed Files"
 msgstr "Анотиране на копието само по променените файлове"
 
 #: lib/option.tcl:153
 msgid "Maximum Length of Recent Repositories List"
-msgstr "Максимален брой скоро ползвани хранилища"
+msgstr "Максимална дължина на списъка със скоро ползвани хранилища"
 
 #: lib/option.tcl:154
 msgid "Minimum Letters To Blame Copy On"
 msgstr "Минимален брой знаци за анотиране на копието"
 
 #: lib/option.tcl:155
@@ -1119,13 +1124,13 @@
 #: lib/option.tcl:156
 msgid "Number of Diff Context Lines"
 msgstr "Брой редове за контекста при извеждане на разликите"
 
 #: lib/option.tcl:157
 msgid "Additional Diff Parameters"
-msgstr "Допълнителни параметри за разликите"
+msgstr "Допълнителни аргументи към „git diff“"
 
 #: lib/option.tcl:158
 msgid "Commit Message Text Width"
 msgstr "Широчина на текста на съобщението при подаване"
 
 #: lib/option.tcl:159
@@ -1135,51 +1140,68 @@
 #: lib/option.tcl:160
 msgid "Default File Contents Encoding"
 msgstr "Стандартно кодиране на файловете"
 
 #: lib/option.tcl:161
 msgid "Warn before committing to a detached head"
-msgstr "Предупреждение при подаване към несвързан връх"
+msgstr "Предупреждаване при подаването при несвързан връх"
 
 #: lib/option.tcl:162
 msgid "Staging of untracked files"
-msgstr "Добавяне на неследените файлове към индекса"
+msgstr "Вкарване на неследени файлове в индекса"
 
 #: lib/option.tcl:163
 msgid "Show untracked files"
 msgstr "Показване на неследените файлове"
 
-#: lib/option.tcl:209
+#: lib/option.tcl:164
+msgid "Tab spacing"
+msgstr "Размер на табулацията в интервали"
+
+#: lib/option.tcl:210
 msgid "Change"
 msgstr "Смяна"
 
-#: lib/option.tcl:253
+#: lib/option.tcl:254
 msgid "Spelling Dictionary:"
 msgstr "Правописен речник:"
 
-#: lib/option.tcl:283
+#: lib/option.tcl:284
 msgid "Change Font"
 msgstr "Смяна на шрифта"
 
-#: lib/option.tcl:287
+#: lib/option.tcl:288
 #, tcl-format
 msgid "Choose %s"
 msgstr "Избор на „%s“"
 
-#: lib/option.tcl:293
+#: lib/option.tcl:294
 msgid "pt."
 msgstr "тчк."
 
-#: lib/option.tcl:307
+#: lib/option.tcl:308
 msgid "Preferences"
 msgstr "Настройки"
 
-#: lib/option.tcl:344
+#: lib/option.tcl:345
 msgid "Failed to completely save options:"
 msgstr "Неуспешно запазване на настройките:"
 
+#: lib/encoding.tcl:443
+msgid "Default"
+msgstr "Стандартното"
+
+#: lib/encoding.tcl:448
+#, tcl-format
+msgid "System (%s)"
+msgstr "Системното (%s)"
+
+#: lib/encoding.tcl:459 lib/encoding.tcl:465
+msgid "Other"
+msgstr "Друго"
+
 #: lib/mergetool.tcl:8
 msgid "Force resolution to the base version?"
 msgstr "Да се използва базовата версия"
 
 #: lib/mergetool.tcl:9
 msgid "Force resolution to this branch?"
@@ -1205,13 +1227,13 @@
 "Тази операция може да бъде отменена само чрез започване на сливането наново."
 
 #: lib/mergetool.tcl:45
 #, tcl-format
 msgid "File %s seems to have unresolved conflicts, still stage?"
 msgstr ""
-"Изглежда, че във файла „%s“ все още има некоригирани конфликти. Да се добави "
+"Изглежда, че все още има некоригирани конфликти във файла „%s“. Да се добави "
 "ли файлът към индекса?"
 
 #: lib/mergetool.tcl:60
 #, tcl-format
 msgid "Adding resolution for %s"
 msgstr "Добавяне на корекция на конфликтите в „%s“"
@@ -1283,13 +1305,13 @@
 #: lib/tools_dlg.tcl:46
 msgid "Tool Details"
 msgstr "Подробности за командата"
 
 #: lib/tools_dlg.tcl:49
 msgid "Use '/' separators to create a submenu tree:"
-msgstr "За създаване на подменюта използвайте за разделител знака „/“:"
+msgstr "За създаване на подменюта използвайте знака „/“ за разделител:"
 
 #: lib/tools_dlg.tcl:60
 msgid "Command:"
 msgstr "Команда:"
 
 #: lib/tools_dlg.tcl:71
@@ -1343,13 +1365,13 @@
 #: lib/tools_dlg.tcl:198
 msgid "Remove"
 msgstr "Премахване"
 
 #: lib/tools_dlg.tcl:231
 msgid "(Blue denotes repository-local tools)"
-msgstr "(команди към локалното хранилище са обозначени в синьо)"
+msgstr "(командите към локалното хранилище са обозначени в синьо)"
 
 #: lib/tools_dlg.tcl:292
 #, tcl-format
 msgid "Run Command: %s"
 msgstr "Изпълнение на командата „%s“"
 
@@ -1376,13 +1398,13 @@
 #: lib/search.tcl:51
 msgid "Prev"
 msgstr "Предишна поява"
 
 #: lib/search.tcl:52
 msgid "RegExp"
-msgstr "Рег. изр."
+msgstr "Рег. израз"
 
 #: lib/search.tcl:54
 msgid "Case"
 msgstr "Регистър"
 
 #: lib/shortcut.tcl:21 lib/shortcut.tcl:62
@@ -1390,13 +1412,13 @@
 msgstr "Клавишната комбинация не може да бъде запазена:"
 
 #: lib/shortcut.tcl:137
 msgid "Cannot write icon:"
 msgstr "Иконата не може да бъде запазена:"
 
-#: lib/diff.tcl:64
+#: lib/diff.tcl:77
 #, tcl-format
 msgid ""
 "No differences detected.\n"
 "\n"
 "%s has no changes.\n"
 "\n"
@@ -1413,95 +1435,95 @@
 "Времето на промяна на файла е бил зададен от друга програма, но съдържанието "
 "му не е променено.\n"
 "\n"
 "Автоматично ще започне нова проверка дали няма други файлове в това "
 "състояние."
 
-#: lib/diff.tcl:104
+#: lib/diff.tcl:117
 #, tcl-format
 msgid "Loading diff of %s..."
 msgstr "Зареждане на разликите в „%s“…"
 
-#: lib/diff.tcl:125
+#: lib/diff.tcl:140
 msgid ""
 "LOCAL: deleted\n"
 "REMOTE:\n"
 msgstr ""
 "ЛОКАЛНО: изтрит\n"
 "ОТДАЛЕЧЕНО:\n"
 
-#: lib/diff.tcl:130
+#: lib/diff.tcl:145
 msgid ""
 "REMOTE: deleted\n"
 "LOCAL:\n"
 msgstr ""
 "ОТДАЛЕЧЕНО: изтрит\n"
 "ЛОКАЛНО:\n"
 
-#: lib/diff.tcl:137
+#: lib/diff.tcl:152
 msgid "LOCAL:\n"
 msgstr "ЛОКАЛНО:\n"
 
-#: lib/diff.tcl:140
+#: lib/diff.tcl:155
 msgid "REMOTE:\n"
 msgstr "ОТДАЛЕЧЕНО:\n"
 
-#: lib/diff.tcl:202 lib/diff.tcl:337
+#: lib/diff.tcl:217 lib/diff.tcl:355
 #, tcl-format
 msgid "Unable to display %s"
-msgstr "Не може да бъде показан файлът „%s“"
+msgstr "Файлът „%s“ не може да бъде показан"
 
-#: lib/diff.tcl:203
+#: lib/diff.tcl:218
 msgid "Error loading file:"
 msgstr "Грешка при зареждане на файл:"
 
-#: lib/diff.tcl:210
+#: lib/diff.tcl:225
 msgid "Git Repository (subproject)"
-msgstr "Хранилище на Git (подпроект)"
+msgstr "Хранилище на Git (подмодул)"
 
-#: lib/diff.tcl:222
+#: lib/diff.tcl:237
 msgid "* Binary file (not showing content)."
-msgstr "⁃ Двоичен файл (съдържанието не се показва)."
+msgstr "● Двоичен файл (съдържанието не се показва)."
 
-#: lib/diff.tcl:227
+#: lib/diff.tcl:242
 #, tcl-format
 msgid ""
 "* Untracked file is %d bytes.\n"
 "* Showing only first %d bytes.\n"
 msgstr ""
-"⁃ Неследеният файл е %d байта.\n"
-"⁃ Показват се само първите %d байта.\n"
+"● Неследеният файл е %d байта.\n"
+"● Показват се само първите %d байта.\n"
 
-#: lib/diff.tcl:233
+#: lib/diff.tcl:248
 #, tcl-format
 msgid ""
 "\n"
 "* Untracked file clipped here by %s.\n"
 "* To see the entire file, use an external editor.\n"
 msgstr ""
 "\n"
-"⁃ Неследеният файл е отрязан дотук %s.\n"
-"⁃ Използвайте външен редактор, за да видите целия файл.\n"
+"● Неследеният файл е отрязан дотук от програмата „%s“.\n"
+"● Използвайте външен редактор, за да видите целия файл.\n"
 
-#: lib/diff.tcl:338 lib/blame.tcl:1128
+#: lib/diff.tcl:356 lib/blame.tcl:1128
 msgid "Error loading diff:"
 msgstr "Грешка при зареждане на разлика:"
 
-#: lib/diff.tcl:557
+#: lib/diff.tcl:578
 msgid "Failed to unstage selected hunk."
 msgstr "Избраното парче не може да бъде извадено от индекса."
 
-#: lib/diff.tcl:564
+#: lib/diff.tcl:585
 msgid "Failed to stage selected hunk."
-msgstr "Избраното парче не може да бъде добавен към индекса."
+msgstr "Избраното парче не може да бъде добавено към индекса."
 
-#: lib/diff.tcl:643
+#: lib/diff.tcl:664
 msgid "Failed to unstage selected line."
 msgstr "Избраният ред не може да бъде изваден от индекса."
 
-#: lib/diff.tcl:651
+#: lib/diff.tcl:672
 msgid "Failed to stage selected line."
 msgstr "Избраният ред не може да бъде добавен към индекса."
 
 #: lib/remote_branch_delete.tcl:29 lib/remote_branch_delete.tcl:34
 msgid "Delete Branch Remotely"
 msgstr "Изтриване на отдалечения клон"
@@ -1509,13 +1531,13 @@
 #: lib/remote_branch_delete.tcl:48
 msgid "From Repository"
 msgstr "От хранилище"
 
 #: lib/remote_branch_delete.tcl:88
 msgid "Branches"
-msgstr "Клонове"
+msgstr "Клони"
 
 #: lib/remote_branch_delete.tcl:110
 msgid "Delete Only If"
 msgstr "Изтриване, само ако"
 
 #: lib/remote_branch_delete.tcl:112
@@ -1536,13 +1558,13 @@
 "The following branches are not completely merged into %s:\n"
 "\n"
 " - %s"
 msgstr ""
 "Следните клони не са слети напълно в „%s“:\n"
 "\n"
-" ⁃ %s"
+" ● %s"
 
 #: lib/remote_branch_delete.tcl:190
 #, tcl-format
 msgid ""
 "One or more of the merge tests failed because you have not fetched the "
 "necessary commits.  Try fetching from %s first."
@@ -1575,245 +1597,257 @@
 
 #: lib/remote_branch_delete.tcl:305
 #, tcl-format
 msgid "Scanning %s..."
 msgstr "Претърсване на „%s“…"
 
-#: lib/choose_repository.tcl:32
+#: lib/choose_repository.tcl:33
 msgid "Git Gui"
 msgstr "ГПИ на Git"
 
-#: lib/choose_repository.tcl:91 lib/choose_repository.tcl:396
+#: lib/choose_repository.tcl:92 lib/choose_repository.tcl:412
 msgid "Create New Repository"
 msgstr "Създаване на ново хранилище"
 
-#: lib/choose_repository.tcl:97
+#: lib/choose_repository.tcl:98
 msgid "New..."
 msgstr "Ново…"
 
-#: lib/choose_repository.tcl:104 lib/choose_repository.tcl:480
+#: lib/choose_repository.tcl:105 lib/choose_repository.tcl:496
 msgid "Clone Existing Repository"
 msgstr "Клониране на съществуващо хранилище"
 
-#: lib/choose_repository.tcl:115
+#: lib/choose_repository.tcl:116
 msgid "Clone..."
 msgstr "Клониране…"
 
-#: lib/choose_repository.tcl:122 lib/choose_repository.tcl:1019
+#: lib/choose_repository.tcl:123 lib/choose_repository.tcl:1064
 msgid "Open Existing Repository"
 msgstr "Отваряне на съществуващо хранилище"
 
-#: lib/choose_repository.tcl:128
+#: lib/choose_repository.tcl:129
 msgid "Open..."
 msgstr "Отваряне…"
 
-#: lib/choose_repository.tcl:141
+#: lib/choose_repository.tcl:142
 msgid "Recent Repositories"
 msgstr "Скоро ползвани"
 
-#: lib/choose_repository.tcl:147
+#: lib/choose_repository.tcl:148
 msgid "Open Recent Repository:"
 msgstr "Отваряне на хранилище ползвано наскоро:"
 
-#: lib/choose_repository.tcl:315 lib/choose_repository.tcl:322
-#: lib/choose_repository.tcl:329
+#: lib/choose_repository.tcl:316 lib/choose_repository.tcl:323
+#: lib/choose_repository.tcl:330
 #, tcl-format
 msgid "Failed to create repository %s:"
 msgstr "Неуспешно създаване на хранилището „%s“:"
 
-#: lib/choose_repository.tcl:391 lib/branch_create.tcl:33
+#: lib/choose_repository.tcl:407 lib/branch_create.tcl:33
 msgid "Create"
 msgstr "Създаване"
 
-#: lib/choose_repository.tcl:401
+#: lib/choose_repository.tcl:417
 msgid "Directory:"
 msgstr "Директория:"
 
-#: lib/choose_repository.tcl:431 lib/choose_repository.tcl:552
-#: lib/choose_repository.tcl:1053
+#: lib/choose_repository.tcl:447 lib/choose_repository.tcl:573
+#: lib/choose_repository.tcl:1098
 msgid "Git Repository"
 msgstr "Хранилище на Git"
 
-#: lib/choose_repository.tcl:456
+#: lib/choose_repository.tcl:472
 #, tcl-format
 msgid "Directory %s already exists."
 msgstr "Вече съществува директория „%s“."
 
-#: lib/choose_repository.tcl:460
+#: lib/choose_repository.tcl:476
 #, tcl-format
 msgid "File %s already exists."
 msgstr "Вече съществува файл „%s“."
 
-#: lib/choose_repository.tcl:475
+#: lib/choose_repository.tcl:491
 msgid "Clone"
 msgstr "Клониране"
 
-#: lib/choose_repository.tcl:488
+#: lib/choose_repository.tcl:504
 msgid "Source Location:"
 msgstr "Адрес на източника:"
 
-#: lib/choose_repository.tcl:497
+#: lib/choose_repository.tcl:513
 msgid "Target Directory:"
 msgstr "Целева директория:"
 
-#: lib/choose_repository.tcl:507
+#: lib/choose_repository.tcl:523
 msgid "Clone Type:"
 msgstr "Вид клониране:"
 
-#: lib/choose_repository.tcl:512
+#: lib/choose_repository.tcl:528
 msgid "Standard (Fast, Semi-Redundant, Hardlinks)"
 msgstr "Стандартно (бързо, частично споделяне на файлове, твърди връзки)"
 
-#: lib/choose_repository.tcl:517
+#: lib/choose_repository.tcl:533
 msgid "Full Copy (Slower, Redundant Backup)"
 msgstr "Пълно (бавно, пълноценно резервно копие)"
 
-#: lib/choose_repository.tcl:522
+#: lib/choose_repository.tcl:538
 msgid "Shared (Fastest, Not Recommended, No Backup)"
 msgstr "Споделено (най-бързо, не се препоръчва, не прави резервно копие)"
 
-#: lib/choose_repository.tcl:558 lib/choose_repository.tcl:605
-#: lib/choose_repository.tcl:751 lib/choose_repository.tcl:821
-#: lib/choose_repository.tcl:1059 lib/choose_repository.tcl:1067
+#: lib/choose_repository.tcl:545
+msgid "Recursively clone submodules too"
+msgstr "Рекурсивно клониране и на подмодулите"
+
+#: lib/choose_repository.tcl:579 lib/choose_repository.tcl:626
+#: lib/choose_repository.tcl:772 lib/choose_repository.tcl:842
+#: lib/choose_repository.tcl:1104 lib/choose_repository.tcl:1112
 #, tcl-format
 msgid "Not a Git repository: %s"
 msgstr "Това не е хранилище на Git: %s"
 
-#: lib/choose_repository.tcl:594
+#: lib/choose_repository.tcl:615
 msgid "Standard only available for local repository."
 msgstr "Само локални хранилища могат да се клонират стандартно"
 
-#: lib/choose_repository.tcl:598
+#: lib/choose_repository.tcl:619
 msgid "Shared only available for local repository."
 msgstr "Само локални хранилища могат да се клонират споделено"
 
-#: lib/choose_repository.tcl:619
+#: lib/choose_repository.tcl:640
 #, tcl-format
 msgid "Location %s already exists."
-msgstr "Вече съществува местоположението „%s“."
+msgstr "Местоположението „%s“ вече съществува."
 
-#: lib/choose_repository.tcl:630
+#: lib/choose_repository.tcl:651
 msgid "Failed to configure origin"
 msgstr "Неуспешно настройване на хранилището-източник"
 
-#: lib/choose_repository.tcl:642
+#: lib/choose_repository.tcl:663
 msgid "Counting objects"
 msgstr "Преброяване на обекти"
 
-#: lib/choose_repository.tcl:643
+#: lib/choose_repository.tcl:664
 msgid "buckets"
 msgstr "клетки"
 
-#: lib/choose_repository.tcl:667
+#: lib/choose_repository.tcl:688
 #, tcl-format
 msgid "Unable to copy objects/info/alternates: %s"
 msgstr "Обектите/информацията/синонимите не могат да бъдат копирани: %s"
 
-#: lib/choose_repository.tcl:703
+#: lib/choose_repository.tcl:724
 #, tcl-format
 msgid "Nothing to clone from %s."
 msgstr "Няма какво да се клонира от „%s“."
 
-#: lib/choose_repository.tcl:705 lib/choose_repository.tcl:919
-#: lib/choose_repository.tcl:931
+#: lib/choose_repository.tcl:726 lib/choose_repository.tcl:940
+#: lib/choose_repository.tcl:952
 msgid "The 'master' branch has not been initialized."
 msgstr "Основният клон — „master“ не е инициализиран."
 
-#: lib/choose_repository.tcl:718
+#: lib/choose_repository.tcl:739
 msgid "Hardlinks are unavailable.  Falling back to copying."
 msgstr "Не се поддържат твърди връзки. Преминава се към копиране."
 
-#: lib/choose_repository.tcl:730
+#: lib/choose_repository.tcl:751
 #, tcl-format
 msgid "Cloning from %s"
 msgstr "Клониране на „%s“"
 
-#: lib/choose_repository.tcl:761
+#: lib/choose_repository.tcl:782
 msgid "Copying objects"
 msgstr "Копиране на обекти"
 
-#: lib/choose_repository.tcl:762
+#: lib/choose_repository.tcl:783
 msgid "KiB"
 msgstr "KiB"
 
-#: lib/choose_repository.tcl:786
+#: lib/choose_repository.tcl:807
 #, tcl-format
 msgid "Unable to copy object: %s"
 msgstr "Неуспешно копиране на обект: %s"
 
-#: lib/choose_repository.tcl:796
+#: lib/choose_repository.tcl:817
 msgid "Linking objects"
 msgstr "Създаване на връзки към обектите"
 
-#: lib/choose_repository.tcl:797
+#: lib/choose_repository.tcl:818
 msgid "objects"
 msgstr "обекти"
 
-#: lib/choose_repository.tcl:805
+#: lib/choose_repository.tcl:826
 #, tcl-format
 msgid "Unable to hardlink object: %s"
 msgstr "Неуспешно създаване на твърда връзка към обект: %s"
 
-#: lib/choose_repository.tcl:860
+#: lib/choose_repository.tcl:881
 msgid "Cannot fetch branches and objects.  See console output for details."
 msgstr ""
 "Клоните и обектите не могат да бъдат изтеглени. За повече информация "
 "погледнете изхода на конзолата."
 
-#: lib/choose_repository.tcl:871
+#: lib/choose_repository.tcl:892
 msgid "Cannot fetch tags.  See console output for details."
 msgstr ""
 "Етикетите не могат да бъдат изтеглени. За повече информация погледнете "
 "изхода на конзолата."
 
-#: lib/choose_repository.tcl:895
+#: lib/choose_repository.tcl:916
 msgid "Cannot determine HEAD.  See console output for details."
 msgstr ""
-"Върхът HEAD не може да бъде определен. За повече информация погледнете "
+"Върхът „HEAD“ не може да бъде определен. За повече информация погледнете "
 "изхода на конзолата."
 
-#: lib/choose_repository.tcl:904
+#: lib/choose_repository.tcl:925
 #, tcl-format
 msgid "Unable to cleanup %s"
-msgstr "Не може да се зачисти „%s“"
+msgstr "„%s“ не може да се зачисти"
 
-#: lib/choose_repository.tcl:910
+#: lib/choose_repository.tcl:931
 msgid "Clone failed."
 msgstr "Неуспешно клониране."
 
-#: lib/choose_repository.tcl:917
+#: lib/choose_repository.tcl:938
 msgid "No default branch obtained."
 msgstr "Не е получен клон по подразбиране."
 
-#: lib/choose_repository.tcl:928
+#: lib/choose_repository.tcl:949
 #, tcl-format
 msgid "Cannot resolve %s as a commit."
 msgstr "Няма подаване отговарящо на „%s“."
 
-#: lib/choose_repository.tcl:940
+#: lib/choose_repository.tcl:961
 msgid "Creating working directory"
 msgstr "Създаване на работната директория"
 
-#: lib/choose_repository.tcl:941 lib/index.tcl:70 lib/index.tcl:136
+#: lib/choose_repository.tcl:962 lib/index.tcl:70 lib/index.tcl:136
 #: lib/index.tcl:207
 msgid "files"
 msgstr "файлове"
 
-#: lib/choose_repository.tcl:970
+#: lib/choose_repository.tcl:981
+msgid "Cannot clone submodules."
+msgstr "Подмодулите не могат да се клонират."
+
+#: lib/choose_repository.tcl:990
+msgid "Cloning submodules"
+msgstr "Клониране на подмодулите"
+
+#: lib/choose_repository.tcl:1015
 msgid "Initial file checkout failed."
 msgstr "Неуспешно първоначално изтегляне."
 
-#: lib/choose_repository.tcl:1014
+#: lib/choose_repository.tcl:1059
 msgid "Open"
 msgstr "Отваряне"
 
-#: lib/choose_repository.tcl:1024
+#: lib/choose_repository.tcl:1069
 msgid "Repository:"
 msgstr "Хранилище:"
 
-#: lib/choose_repository.tcl:1073
+#: lib/choose_repository.tcl:1118
 #, tcl-format
 msgid "Failed to open repository %s:"
 msgstr "Неуспешно отваряне на хранилището „%s“:"
 
 #: lib/about.tcl:26
 msgid "git-gui - a graphical user interface for Git."
@@ -1846,13 +1880,13 @@
 "\n"
 "It cannot fast-forward to %s.\n"
 "A merge is required."
 msgstr ""
 "Клонът „%s“ съществува.\n"
 "\n"
-"Той не може да бъде тривиално превъртян до %s.\n"
+"Той не може да бъде тривиално слят до „%s“.\n"
 "Необходимо е сливане."
 
 #: lib/checkout_op.tcl:243
 #, tcl-format
 msgid "Merge strategy '%s' not supported."
 msgstr "Стратегия за сливане  „%s“ не се поддържа."
@@ -2000,13 +2034,13 @@
 msgid "Please select a tracking branch."
 msgstr "Изберете клон за следени."
 
 #: lib/branch_create.tcl:141
 #, tcl-format
 msgid "Tracking branch %s is not a branch in the remote repository."
-msgstr "Клонът, който се следи „%s“ не съществува в отдалеченото хранилище."
+msgstr "Следящият клон — „%s“, не съществува в отдалеченото хранилище."
 
 #: lib/console.tcl:59
 msgid "Working... please wait..."
 msgstr "В момента се извършва действие, изчакайте…"
 
 #: lib/console.tcl:186
@@ -2020,13 +2054,13 @@
 #: lib/choose_rev.tcl:52
 msgid "This Detached Checkout"
 msgstr "Това несвързано изтегляне"
 
 #: lib/choose_rev.tcl:60
 msgid "Revision Expression:"
-msgstr "Израз за версия"
+msgstr "Израз за версия:"
 
 #: lib/choose_rev.tcl:72
 msgid "Local Branch"
 msgstr "Локален клон"
 
 #: lib/choose_rev.tcl:77
@@ -2098,13 +2132,13 @@
 #: lib/commit.tcl:75
 msgid "Unable to obtain your identity:"
 msgstr "Идентификацията ви не може да бъде определена:"
 
 #: lib/commit.tcl:80
 msgid "Invalid GIT_COMMITTER_IDENT:"
-msgstr "Неправилно поле GIT_COMMITTER_IDENT:"
+msgstr "Неправилно поле „GIT_COMMITTER_IDENT“:"
 
 #: lib/commit.tcl:129
 #, tcl-format
 msgid "warning: Tcl does not support encoding '%s'."
 msgstr "предупреждение: Tcl не поддържа кодирането „%s“."
 
@@ -2154,13 +2188,13 @@
 "No changes to commit.\n"
 "\n"
 "You must stage at least 1 file before you can commit.\n"
 msgstr ""
 "Няма промени за подаване.\n"
 "\n"
-"Трябва да добавите поне 1 файл към индекса, преди да подадете.\n"
+"Трябва да добавите поне един файл към индекса, за да подадете.\n"
 
 #: lib/commit.tcl:204
 msgid ""
 "Please supply a commit message.\n"
 "\n"
 "A good commit message has the following format:\n"
@@ -2170,15 +2204,15 @@
 "- Remaining lines: Describe why this change is good.\n"
 msgstr ""
 "Задайте добро съобщение при подаване.\n"
 "\n"
 "Използвайте следния формат:\n"
 "\n"
-"⁃ Първи ред: описание в едно изречение на промяната.\n"
-"⁃ Втори ред: празен.\n"
-"⁃ Останалите редове: опишете защо се налага тази промяна.\n"
+"● Първи ред: описание в едно изречение на промяната.\n"
+"● Втори ред: празен.\n"
+"● Останалите редове: опишете защо се налага тази промяна.\n"
 
 #: lib/commit.tcl:235
 msgid "Calling pre-commit hook..."
 msgstr "Изпълняване на куката преди подаване…"
 
 #: lib/commit.tcl:250
@@ -2191,31 +2225,30 @@
 "thing to do because if you switch to another branch you will lose your "
 "changes and it can be difficult to retrieve them later from the reflog. You "
 "should probably cancel this commit and create a new branch to continue.\n"
 " \n"
 " Do you really want to proceed with your Commit?"
 msgstr ""
-"Ще подадете към несвързан връх. Това действие е опасно, защото при "
-"преминаването към който и да е клон ще загубите промените си и не е сигурно, "
-"че ще можете по-късно да ги възстановите чрез журнала на указателите. Най-"
-"вероятно трябва първо да създадете клон базиран на текущото състояние и да "
-"подадете към него.\n"
+"Ще подавате към несвързан връх. Това е опасно — при изтеглянето на друг клон "
+"ще изгубите промените си. След това може да е невъзможно да ги възстановите "
+"от журнала на указателите „reflog“. Най-вероятно трябва да отмените това "
+"подаване и да създадете клон, в който да подадете.\n"
 " \n"
-"Сигурни ли сте, че искате да подадете точно сега?"
+"Сигурни ли сте, че искате да подадете към несвързан връх?"
 
 #: lib/commit.tcl:290
 msgid "Calling commit-msg hook..."
 msgstr "Изпълняване на куката за съобщението при подаване…"
 
 #: lib/commit.tcl:305
 msgid "Commit declined by commit-msg hook."
 msgstr "Подаването е отхвърлено от куката за съобщението при подаване."
 
 #: lib/commit.tcl:318
 msgid "Committing changes..."
-msgstr "Подаване на промените."
+msgstr "Подаване на промените…"
 
 #: lib/commit.tcl:334
 msgid "write-tree failed:"
 msgstr "неуспешно запазване на дървото (write-tree):"
 
 #: lib/commit.tcl:335 lib/commit.tcl:379 lib/commit.tcl:400
@@ -2275,13 +2308,13 @@
 msgid "Delete Only If Merged Into"
 msgstr "Изтриване, само ако промените са слети и другаде"
 
 #: lib/branch_delete.tcl:103
 #, tcl-format
 msgid "The following branches are not completely merged into %s:"
-msgstr "Не всички промени в клоните са слети в %s:"
+msgstr "Не всички промени в клоните са слети в „%s“:"
 
 #: lib/branch_delete.tcl:141
 #, tcl-format
 msgid ""
 "Failed to delete branches:\n"
 "%s"
@@ -2321,13 +2354,13 @@
 msgid "Blame Parent Commit"
 msgstr "Анотиране на родителското подаване"
 
 #: lib/blame.tcl:466
 #, tcl-format
 msgid "Reading %s..."
-msgstr "%s се чете…"
+msgstr "Чете се „%s“…"
 
 #: lib/blame.tcl:594
 msgid "Loading copy/move tracking annotations..."
 msgstr "Зареждане на анотациите за проследяване на копирането/преместването…"
 
 #: lib/blame.tcl:614
@@ -2369,13 +2402,13 @@
 #: lib/blame.tcl:1009
 msgid "Original File:"
 msgstr "Първоначален файл:"
 
 #: lib/blame.tcl:1057
 msgid "Cannot find HEAD commit:"
-msgstr "Подаването за връх HEAD не може да се открие:"
+msgstr "Подаването за връх „HEAD“ не може да се открие:"
 
 #: lib/blame.tcl:1112
 msgid "Cannot find parent commit:"
 msgstr "Родителското подаване не може да бъде открито"
 
 #: lib/blame.tcl:1127
@@ -2418,13 +2451,13 @@
 msgid "Unlock Index"
 msgstr "Отключване на индекса"
 
 #: lib/index.tcl:298
 #, tcl-format
 msgid "Unstaging %s from commit"
-msgstr "Изваждане на %s от подаването"
+msgstr "Изваждане на „%s“ от подаването"
 
 #: lib/index.tcl:337
 msgid "Ready to commit."
 msgstr "Готовност за подаване."
 
 #: lib/index.tcl:350
@@ -2432,13 +2465,13 @@
 msgid "Adding %s"
 msgstr "Добавяне на „%s“"
 
 #: lib/index.tcl:380
 #, tcl-format
 msgid "Stage %d untracked files?"
-msgstr "Да се добавят ли %d на брой неследени файла към индекса?"
+msgstr "Да се вкарат ли %d неследени файла в индекса?"
 
 #: lib/index.tcl:428
 #, tcl-format
 msgid "Revert changes in file %s?"
 msgstr "Да се махнат ли промените във файла „%s“?"
 
@@ -2463,25 +2496,12 @@
 
 #: lib/index.tcl:463
 #, tcl-format
 msgid "Reverting %s"
 msgstr "Махане на промените в „%s“"
 
-#: lib/encoding.tcl:443
-msgid "Default"
-msgstr "Стандартното"
-
-#: lib/encoding.tcl:448
-#, tcl-format
-msgid "System (%s)"
-msgstr "Системното (%s)"
-
-#: lib/encoding.tcl:459 lib/encoding.tcl:465
-msgid "Other"
-msgstr "Друго"
-
 #: lib/date.tcl:25
 #, tcl-format
 msgid "Invalid date from Git: %s"
 msgstr "Неправилни данни от Git: %s"
 
 #: lib/database.tcl:42
@@ -2515,13 +2535,13 @@
 #: lib/database.tcl:72
 msgid "Compressing the object database"
 msgstr "Компресиране на базата с данни за обектите"
 
 #: lib/database.tcl:83
 msgid "Verifying the object database with fsck-objects"
-msgstr "Проверка на базата с данни за обектите с програмата fsck-objects"
+msgstr "Проверка на базата с данни за обектите с програмата „fsck-objects“"
 
 #: lib/database.tcl:107
 #, tcl-format
 msgid ""
 "This repository currently has approximately %i loose objects.\n"
 "\n"
@@ -2529,13 +2549,13 @@
 "the database.\n"
 "\n"
 "Compress the database now?"
 msgstr ""
 "В това хранилище в момента има към %i непакетирани обекти.\n"
 "\n"
-"Зd добра производителност се препоръчва да компресирате базата с данни за "
+"За добра производителност се препоръчва да компресирате базата с данни за "
 "обектите.\n"
 "\n"
 "Да се започне ли компресирането?"
 
 #: lib/error.tcl:20 lib/error.tcl:116
 msgid "error"
@@ -2544,13 +2564,13 @@
 #: lib/error.tcl:36
 msgid "warning"
 msgstr "предупреждение"
 
 #: lib/error.tcl:96
 msgid "You must correct the above errors before committing."
-msgstr "Преди да можете да подадете, оправете горните грешки."
+msgstr "Преди да можете да подадете, коригирайте горните грешки."
 
 #: lib/merge.tcl:13
 msgid ""
 "Cannot merge while amending.\n"
 "\n"
 "You must finish amending this commit before starting any type of merge.\n"
@@ -2656,13 +2676,13 @@
 "Aborting the current merge will cause *ALL* uncommitted changes to be lost.\n"
 "\n"
 "Continue with aborting the current merge?"
 msgstr ""
 "Да се преустанови ли сливането?\n"
 "\n"
-"В такъв случай *ВСИЧКИ* неподадени промени ще бъдат безвъзвратно загубени.\n"
+"В такъв случай ●ВСИЧКИ● неподадени промени ще бъдат безвъзвратно загубени.\n"
 "\n"
 "Наистина ли да се преустанови сливането?"
 
 #: lib/merge.tcl:230
 msgid ""
 "Reset changes?\n"
@@ -2670,13 +2690,13 @@
 "Resetting the changes will cause *ALL* uncommitted changes to be lost.\n"
 "\n"
 "Continue with resetting the current changes?"
 msgstr ""
 "Да се занулят ли промените?\n"
 "\n"
-"В такъв случай *ВСИЧКИ* неподадени промени ще бъдат безвъзвратно загубени.\n"
+"В такъв случай ●ВСИЧКИ● неподадени промени ще бъдат безвъзвратно загубени.\n"
 "\n"
 "Наистина ли да се занулят промените?"
 
 #: lib/merge.tcl:241
 msgid "Aborting"
 msgstr "Преустановяване"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/po/sv.msg /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/po/sv.msg
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/po/sv.msg	2017-10-10 12:31:59.078631529 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/po/sv.msg	2017-10-10 13:04:28.118560098 +0800
@@ -1,7 +1,7 @@
-set ::msgcat::header "Project-Id-Version: sv\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2010-09-12 21:11+0100\nPO-Revision-Date: 2010-09-12 21:12+0100\nLast-Translator: Peter Krefting <peter@softwolves.pp.se>\nLanguage-Team: Swedish <tp-sv@listor.tp-sv.se>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit"
+set ::msgcat::header "Project-Id-Version: sv\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2015-03-27 10:15+0100\nPO-Revision-Date: 2015-03-27 10:24+0100\nLast-Translator: Peter Krefting <peter@softwolves.pp.se>\nLanguage-Team: Swedish <tp-sv@listor.tp-sv.se>\nLanguage: sv\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\nPlural-Forms: nplurals=2; plural=(n != 1);\nX-Generator: Gtranslator 2.91.6\n"
 ::msgcat::mcset sv "Invalid font specified in %s:" "Ogiltigt teckensnitt angivet i %s:"
 ::msgcat::mcset sv "Main Font" "Huvudteckensnitt"
 ::msgcat::mcset sv "Diff/Console Font" "Diff/konsolteckensnitt"
 ::msgcat::mcset sv "git-gui: fatal error" "git-gui: \u00f6desdigert fel"
 ::msgcat::mcset sv "Cannot find git in PATH." "Hittar inte git i PATH."
 ::msgcat::mcset sv "Cannot parse Git version string:" "Kan inte tolka versionsstr\u00e4ng fr\u00e5n Git:"
@@ -12,20 +12,23 @@
 ::msgcat::mcset sv "No working directory" "Ingen arbetskatalog"
 ::msgcat::mcset sv "Refreshing file status..." "Uppdaterar filstatus..."
 ::msgcat::mcset sv "Scanning for modified files ..." "S\u00f6ker efter \u00e4ndrade filer..."
 ::msgcat::mcset sv "Calling prepare-commit-msg hook..." "Anropar kroken f\u00f6r f\u00f6rberedelse av incheckningsmeddelande (prepare-commit-msg)..."
 ::msgcat::mcset sv "Commit declined by prepare-commit-msg hook." "Incheckningen avvisades av kroken f\u00f6r f\u00f6rberedelse av incheckningsmeddelande (prepare-commit-msg)."
 ::msgcat::mcset sv "Ready." "Klar."
-::msgcat::mcset sv "Displaying only %s of %s files." "Visar endast %s av %s filer."
+::msgcat::mcset sv "Display limit (gui.maxfilesdisplayed = %s) reached, not showing all %s files." "Visningsgr\u00e4ns (gui.maxfilesdisplayed = %s) n\u00e5dd, visare inte samtliga %s filer."
 ::msgcat::mcset sv "Unmodified" "Of\u00f6r\u00e4ndrade"
 ::msgcat::mcset sv "Modified, not staged" "F\u00f6r\u00e4ndrade, ej k\u00f6ade"
 ::msgcat::mcset sv "Staged for commit" "K\u00f6ade f\u00f6r incheckning"
 ::msgcat::mcset sv "Portions staged for commit" "Delar k\u00f6ade f\u00f6r incheckning"
 ::msgcat::mcset sv "Staged for commit, missing" "K\u00f6ade f\u00f6r incheckning, saknade"
 ::msgcat::mcset sv "File type changed, not staged" "Filtyp \u00e4ndrad, ej k\u00f6ade"
+::msgcat::mcset sv "File type changed, old type staged for commit" "Filtyp \u00e4ndrad, gammal typ k\u00f6ade f\u00f6r incheckning"
 ::msgcat::mcset sv "File type changed, staged" "Filtyp \u00e4ndrad, k\u00f6ade"
+::msgcat::mcset sv "File type change staged, modification not staged" "Filtyps\u00e4ndringar k\u00f6ade, inneh\u00e5lls\u00e4ndringar ej k\u00f6ade"
+::msgcat::mcset sv "File type change staged, file missing" "Filtyps\u00e4ndringar k\u00f6ade, fil saknas"
 ::msgcat::mcset sv "Untracked, not staged" "Ej sp\u00e5rade, ej k\u00f6ade"
 ::msgcat::mcset sv "Missing" "Saknade"
 ::msgcat::mcset sv "Staged for removal" "K\u00f6ade f\u00f6r borttagning"
 ::msgcat::mcset sv "Staged for removal, still present" "K\u00f6ade f\u00f6r borttagning, fortfarande n\u00e4rvarande"
 ::msgcat::mcset sv "Requires merge resolution" "Kr\u00e4ver konflikthantering efter sammanslagning"
 ::msgcat::mcset sv "Starting gitk... please wait..." "Startar gitk... v\u00e4nta..."
@@ -36,12 +39,13 @@
 ::msgcat::mcset sv "Branch" "Gren"
 ::msgcat::mcset sv "Commit@@noun" "Incheckning"
 ::msgcat::mcset sv "Merge" "Sl\u00e5 ihop"
 ::msgcat::mcset sv "Remote" "Fj\u00e4rrarkiv"
 ::msgcat::mcset sv "Tools" "Verktyg"
 ::msgcat::mcset sv "Explore Working Copy" "Utforska arbetskopia"
+::msgcat::mcset sv "Git Bash" "Git Bash"
 ::msgcat::mcset sv "Browse Current Branch's Files" "Bl\u00e4ddra i grenens filer"
 ::msgcat::mcset sv "Browse Branch Files..." "Bl\u00e4ddra filer p\u00e5 gren..."
 ::msgcat::mcset sv "Visualize Current Branch's History" "Visualisera grenens historik"
 ::msgcat::mcset sv "Visualize All Branch History" "Visualisera alla grenars historik"
 ::msgcat::mcset sv "Browse %s's Files" "Bl\u00e4ddra i filer f\u00f6r %s"
 ::msgcat::mcset sv "Visualize %s's History" "Visualisera historik f\u00f6r %s"
@@ -82,12 +86,14 @@
 ::msgcat::mcset sv "Options..." "Alternativ..."
 ::msgcat::mcset sv "Remove..." "Ta bort..."
 ::msgcat::mcset sv "Help" "Hj\u00e4lp"
 ::msgcat::mcset sv "About %s" "Om %s"
 ::msgcat::mcset sv "Online Documentation" "Webbdokumentation"
 ::msgcat::mcset sv "Show SSH Key" "Visa SSH-nyckel"
+::msgcat::mcset sv "Usage" "Anv\u00e4ndning"
+::msgcat::mcset sv "Error" "Fel"
 ::msgcat::mcset sv "fatal: cannot stat path %s: No such file or directory" "\u00f6desdigert: kunde inte ta status p\u00e5 s\u00f6kv\u00e4gen %s: Fil eller katalog saknas"
 ::msgcat::mcset sv "Current Branch:" "Aktuell gren:"
 ::msgcat::mcset sv "Staged Changes (Will Commit)" "K\u00f6ade \u00e4ndringar (kommer att checkas in)"
 ::msgcat::mcset sv "Unstaged Changes" "Ok\u00f6ade \u00e4ndringar"
 ::msgcat::mcset sv "Stage Changed" "K\u00f6a \u00e4ndrade"
 ::msgcat::mcset sv "Push" "S\u00e4nd"
@@ -120,88 +126,23 @@
 ::msgcat::mcset sv "Stage Lines For Commit" "St\u00e4ll rader i incheckningsk\u00f6"
 ::msgcat::mcset sv "Stage Line For Commit" "St\u00e4ll rad i incheckningsk\u00f6"
 ::msgcat::mcset sv "Initializing..." "Initierar..."
 ::msgcat::mcset sv "Possible environment issues exist.\n\nThe following environment variables are probably\ngoing to be ignored by any Git subprocess run\nby %s:\n\n" "Det finns m\u00f6jliga problem med milj\u00f6variabler.\n\nF\u00f6ljande milj\u00f6variabler kommer troligen att\nignoreras av alla Git-underprocesser som k\u00f6rs\nav %s:\n\n"
 ::msgcat::mcset sv "\nThis is due to a known issue with the\nTcl binary distributed by Cygwin." "\nDetta beror p\u00e5 ett k\u00e4nt problem med\nTcl-bin\u00e4ren som f\u00f6ljer med Cygwin."
 ::msgcat::mcset sv "\n\nA good replacement for %s\nis placing values for the user.name and\nuser.email settings into your personal\n~/.gitconfig file.\n" "\n\nDu kan ers\u00e4tta %s\nmed att l\u00e4gga in v\u00e4rden f\u00f6r inst\u00e4llningarna\nuser.name och user.email i din personliga\n~/.gitconfig-fil.\n"
-::msgcat::mcset sv "git-gui - a graphical user interface for Git." "git-gui - ett grafiskt anv\u00e4ndargr\u00e4nssnitt f\u00f6r Git."
-::msgcat::mcset sv "File Viewer" "Filvisare"
-::msgcat::mcset sv "Commit:" "Incheckning:"
-::msgcat::mcset sv "Copy Commit" "Kopiera incheckning"
-::msgcat::mcset sv "Find Text..." "S\u00f6k text..."
-::msgcat::mcset sv "Do Full Copy Detection" "G\u00f6r full kopieringsigenk\u00e4nning"
-::msgcat::mcset sv "Show History Context" "Visa historiksammanhang"
-::msgcat::mcset sv "Blame Parent Commit" "Klandra f\u00f6r\u00e4ldraincheckning"
-::msgcat::mcset sv "Reading %s..." "L\u00e4ser %s..."
-::msgcat::mcset sv "Loading copy/move tracking annotations..." "L\u00e4ser annoteringar f\u00f6r kopiering/flyttning..."
-::msgcat::mcset sv "lines annotated" "rader annoterade"
-::msgcat::mcset sv "Loading original location annotations..." "L\u00e4ser in annotering av originalplacering..."
-::msgcat::mcset sv "Annotation complete." "Annotering fullbordad."
-::msgcat::mcset sv "Busy" "Upptagen"
-::msgcat::mcset sv "Annotation process is already running." "Annoteringsprocess k\u00f6rs redan."
-::msgcat::mcset sv "Running thorough copy detection..." "K\u00f6r grundlig kopieringsigenk\u00e4nning..."
-::msgcat::mcset sv "Loading annotation..." "L\u00e4ser in annotering..."
-::msgcat::mcset sv "Author:" "F\u00f6rfattare:"
-::msgcat::mcset sv "Committer:" "Incheckare:"
-::msgcat::mcset sv "Original File:" "Ursprunglig fil:"
-::msgcat::mcset sv "Cannot find HEAD commit:" "Hittar inte incheckning f\u00f6r HEAD:"
-::msgcat::mcset sv "Cannot find parent commit:" "Hittar inte f\u00f6r\u00e4ldraincheckning:"
-::msgcat::mcset sv "Unable to display parent" "Kan inte visa f\u00f6r\u00e4lder"
-::msgcat::mcset sv "Error loading diff:" "Fel vid inl\u00e4sning av differens:"
-::msgcat::mcset sv "Originally By:" "Ursprungligen av:"
-::msgcat::mcset sv "In File:" "I filen:"
-::msgcat::mcset sv "Copied Or Moved Here By:" "Kopierad eller flyttad hit av:"
-::msgcat::mcset sv "Checkout Branch" "Checka ut gren"
-::msgcat::mcset sv "Checkout" "Checka ut"
-::msgcat::mcset sv "Cancel" "Avbryt"
-::msgcat::mcset sv "Revision" "Revision"
-::msgcat::mcset sv "Options" "Alternativ"
-::msgcat::mcset sv "Fetch Tracking Branch" "H\u00e4mta sp\u00e5rande gren"
-::msgcat::mcset sv "Detach From Local Branch" "Koppla bort fr\u00e5n lokal gren"
-::msgcat::mcset sv "Create Branch" "Skapa gren"
-::msgcat::mcset sv "Create New Branch" "Skapa ny gren"
-::msgcat::mcset sv "Create" "Skapa"
-::msgcat::mcset sv "Branch Name" "Namn p\u00e5 gren"
-::msgcat::mcset sv "Name:" "Namn:"
-::msgcat::mcset sv "Match Tracking Branch Name" "Anv\u00e4nd namn p\u00e5 sp\u00e5rad gren"
-::msgcat::mcset sv "Starting Revision" "Inledande revision"
-::msgcat::mcset sv "Update Existing Branch:" "Uppdatera befintlig gren:"
-::msgcat::mcset sv "No" "Nej"
-::msgcat::mcset sv "Fast Forward Only" "Endast snabbspolning"
-::msgcat::mcset sv "Reset" "\u00c5terst\u00e4ll"
-::msgcat::mcset sv "Checkout After Creation" "Checka ut n\u00e4r skapad"
-::msgcat::mcset sv "Please select a tracking branch." "V\u00e4lj en gren att sp\u00e5ra."
-::msgcat::mcset sv "Tracking branch %s is not a branch in the remote repository." "Den sp\u00e5rade grenen %s \u00e4r inte en gren i fj\u00e4rrarkivet."
-::msgcat::mcset sv "Please supply a branch name." "Ange ett namn f\u00f6r grenen."
-::msgcat::mcset sv "'%s' is not an acceptable branch name." "\"%s\" kan inte anv\u00e4ndas som namn p\u00e5 grenen."
-::msgcat::mcset sv "Delete Branch" "Ta bort gren"
-::msgcat::mcset sv "Delete Local Branch" "Ta bort lokal gren"
-::msgcat::mcset sv "Local Branches" "Lokala grenar"
-::msgcat::mcset sv "Delete Only If Merged Into" "Ta bara bort om sammanslagen med"
-::msgcat::mcset sv "Always (Do not perform merge checks)" "Alltid (utf\u00f6r inte sammanslagningstest)"
-::msgcat::mcset sv "The following branches are not completely merged into %s:" "F\u00f6ljande grenar \u00e4r inte till fullo sammanslagna med %s:"
-::msgcat::mcset sv "Recovering deleted branches is difficult.\n\nDelete the selected branches?" "Det kan vara sv\u00e5rt att \u00e5terst\u00e4lla borttagna grenar.\n\nTa bort de valda grenarna?"
-::msgcat::mcset sv "Failed to delete branches:\n%s" "Kunde inte ta bort grenar:\n%s"
-::msgcat::mcset sv "Rename Branch" "Byt namn p\u00e5 gren"
-::msgcat::mcset sv "Rename" "Byt namn"
-::msgcat::mcset sv "Branch:" "Gren:"
-::msgcat::mcset sv "New Name:" "Nytt namn:"
-::msgcat::mcset sv "Please select a branch to rename." "V\u00e4lj en gren att byta namn p\u00e5."
-::msgcat::mcset sv "Branch '%s' already exists." "Grenen \"%s\" finns redan."
-::msgcat::mcset sv "Failed to rename '%s'." "Kunde inte byta namn p\u00e5 \"%s\"."
-::msgcat::mcset sv "Starting..." "Startar..."
-::msgcat::mcset sv "File Browser" "Filbl\u00e4ddrare"
-::msgcat::mcset sv "Loading %s..." "L\u00e4ser %s..."
-::msgcat::mcset sv "\[Up To Parent\]" "\[Upp till f\u00f6r\u00e4lder\]"
-::msgcat::mcset sv "Browse Branch Files" "Bl\u00e4ddra filer p\u00e5 grenen"
-::msgcat::mcset sv "Browse" "Bl\u00e4ddra"
+::msgcat::mcset sv "Goto Line:" "G\u00e5 till rad:"
+::msgcat::mcset sv "Go" "G\u00e5"
+::msgcat::mcset sv "Working... please wait..." "Arbetar... v\u00e4nta..."
+::msgcat::mcset sv "Close" "St\u00e4ng"
+::msgcat::mcset sv "Success" "Lyckades"
+::msgcat::mcset sv "Error: Command Failed" "Fel: Kommando misslyckades"
 ::msgcat::mcset sv "Fetching %s from %s" "H\u00e4mtar %s fr\u00e5n %s"
 ::msgcat::mcset sv "fatal: Cannot resolve %s" "\u00f6desdigert: Kunde inte sl\u00e5 upp %s"
-::msgcat::mcset sv "Close" "St\u00e4ng"
 ::msgcat::mcset sv "Branch '%s' does not exist." "Grenen \"%s\" finns inte."
 ::msgcat::mcset sv "Failed to configure simplified git-pull for '%s'." "Kunde inte konfigurera f\u00f6renklad git-pull f\u00f6r '%s'."
+::msgcat::mcset sv "Branch '%s' already exists." "Grenen \"%s\" finns redan."
 ::msgcat::mcset sv "Branch '%s' already exists.\n\nIt cannot fast-forward to %s.\nA merge is required." "Grenen \"%s\" finns redan.\n\nDen kan inte snabbspolas till %s.\nEn sammanslagning kr\u00e4vs."
 ::msgcat::mcset sv "Merge strategy '%s' not supported." "Sammanslagningsstrategin \"%s\" st\u00f6ds inte."
 ::msgcat::mcset sv "Failed to update '%s'." "Misslyckades med att uppdatera \"%s\"."
 ::msgcat::mcset sv "Staging area (index) is already locked." "K\u00f6omr\u00e5det (index) \u00e4r redan l\u00e5st."
 ::msgcat::mcset sv "Last scanned state does not match repository state.\n\nAnother Git program has modified this repository since the last scan.  A rescan must be performed before the current branch can be changed.\n\nThe rescan will be automatically started now.\n" "Det senaste inl\u00e4sta tillst\u00e5ndet motsvarar inte tillst\u00e5ndet i arkivet.\n\nEtt annat Git-program har \u00e4ndrat arkivet sedan senaste avs\u00f6kningen. Du m\u00e5ste utf\u00f6ra en ny s\u00f6kning innan den aktuella grenen kan \u00e4ndras.\n\nS\u00f6kningen kommer att startas automatiskt nu.\n"
 ::msgcat::mcset sv "Updating working directory to '%s'..." "Uppdaterar arbetskatalogen till \"%s\"..."
@@ -212,39 +153,246 @@
 ::msgcat::mcset sv "You are no longer on a local branch.\n\nIf you wanted to be on a branch, create one now starting from 'This Detached Checkout'." "Du \u00e4r inte l\u00e4ngre p\u00e5 en lokal gren.\n\nOm du ville vara p\u00e5 en gren skapar du en nu, baserad p\u00e5 \"Denna fr\u00e5nkopplade utcheckning\"."
 ::msgcat::mcset sv "Checked out '%s'." "Checkade ut \"%s\"."
 ::msgcat::mcset sv "Resetting '%s' to '%s' will lose the following commits:" "Om du \u00e5terst\u00e4ller \"%s\" till \"%s\" g\u00e5r f\u00f6ljande incheckningar f\u00f6rlorade:"
 ::msgcat::mcset sv "Recovering lost commits may not be easy." "Det kanske inte \u00e4r s\u00e5 enkelt att \u00e5terskapa f\u00f6rlorade incheckningar."
 ::msgcat::mcset sv "Reset '%s'?" "\u00c5terst\u00e4lla \"%s\"?"
 ::msgcat::mcset sv "Visualize" "Visualisera"
+::msgcat::mcset sv "Reset" "\u00c5terst\u00e4ll"
+::msgcat::mcset sv "Cancel" "Avbryt"
 ::msgcat::mcset sv "Failed to set current branch.\n\nThis working directory is only partially switched.  We successfully updated your files, but failed to update an internal Git file.\n\nThis should not have occurred.  %s will now close and give up." "Kunde inte st\u00e4lla in aktuell gren.\n\nArbetskatalogen har bara v\u00e4xlats delvis. Vi uppdaterade filerna utan problem, men kunde inte uppdatera en intern fil i Git.\n\nDetta skulle inte ha h\u00e4nt. %s kommer nu st\u00e4ngas och ge upp."
+::msgcat::mcset sv "fetch %s" "h\u00e4mta %s"
+::msgcat::mcset sv "Fetching new changes from %s" "H\u00e4mtar nya \u00e4ndringar fr\u00e5n %s"
+::msgcat::mcset sv "remote prune %s" "fj\u00e4rrborttagning %s"
+::msgcat::mcset sv "Pruning tracking branches deleted from %s" "Tar bort sp\u00e5rande grenar som tagits bort fr\u00e5n %s"
+::msgcat::mcset sv "fetch all remotes" "h\u00e4mta alla fj\u00e4rrarkiv"
+::msgcat::mcset sv "Fetching new changes from all remotes" "H\u00e4mtar nya \u00e4ndringar fr\u00e5n alla fj\u00e4rrarkiv"
+::msgcat::mcset sv "remote prune all remotes" "rensa alla fj\u00e4rrarkiv"
+::msgcat::mcset sv "Pruning tracking branches deleted from all remotes" "Rensar sp\u00e5rande grenar som tagits bort, fr\u00e5n alla fj\u00e4rrarkiv"
+::msgcat::mcset sv "push %s" "s\u00e4nd %s"
+::msgcat::mcset sv "Pushing changes to %s" "S\u00e4nder \u00e4ndringar till %s"
+::msgcat::mcset sv "Mirroring to %s" "Speglar till %s"
+::msgcat::mcset sv "Pushing %s %s to %s" "S\u00e4nder %s %s till %s"
+::msgcat::mcset sv "Push Branches" "S\u00e4nd grenar"
+::msgcat::mcset sv "Source Branches" "K\u00e4llgrenar"
+::msgcat::mcset sv "Destination Repository" "Destinationsarkiv"
+::msgcat::mcset sv "Remote:" "Fj\u00e4rrarkiv:"
+::msgcat::mcset sv "Arbitrary Location:" "Godtycklig plats:"
+::msgcat::mcset sv "Transfer Options" "\u00d6verf\u00f6ringsalternativ"
+::msgcat::mcset sv "Force overwrite existing branch (may discard changes)" "Tvinga \u00f6verskrivning av befintlig gren (kan kasta bort \u00e4ndringar)"
+::msgcat::mcset sv "Use thin pack (for slow network connections)" "Anv\u00e4nd tunt paket (f\u00f6r l\u00e5ngsamma n\u00e4tverksanslutningar)"
+::msgcat::mcset sv "Include tags" "Ta med taggar"
+::msgcat::mcset sv "Add Remote" "L\u00e4gg till fj\u00e4rrarkiv"
+::msgcat::mcset sv "Add New Remote" "L\u00e4gg till nytt fj\u00e4rrarkiv"
+::msgcat::mcset sv "Add" "L\u00e4gg till"
+::msgcat::mcset sv "Remote Details" "Detaljer f\u00f6r fj\u00e4rrarkiv"
+::msgcat::mcset sv "Name:" "Namn:"
+::msgcat::mcset sv "Location:" "Plats:"
+::msgcat::mcset sv "Further Action" "Ytterligare \u00e5tg\u00e4rd"
+::msgcat::mcset sv "Fetch Immediately" "H\u00e4mta omedelbart"
+::msgcat::mcset sv "Initialize Remote Repository and Push" "Initiera fj\u00e4rrarkiv och s\u00e4nd till"
+::msgcat::mcset sv "Do Nothing Else Now" "G\u00f6r ingent mer nu"
+::msgcat::mcset sv "Please supply a remote name." "Ange ett namn f\u00f6r fj\u00e4rrarkivet."
+::msgcat::mcset sv "'%s' is not an acceptable remote name." "\"%s\" kan inte anv\u00e4ndas som namn p\u00e5 fj\u00e4rrarkivet."
+::msgcat::mcset sv "Failed to add remote '%s' of location '%s'." "Kunde inte l\u00e4gga till fj\u00e4rrarkivet \"%s\" p\u00e5 platsen \"%s\"."
+::msgcat::mcset sv "Fetching the %s" "H\u00e4mtar %s"
+::msgcat::mcset sv "Do not know how to initialize repository at location '%s'." "Vet inte hur arkivet p\u00e5 platsen \"%s\" skall initieras."
+::msgcat::mcset sv "Setting up the %s (at %s)" "Konfigurerar %s (p\u00e5 %s)"
+::msgcat::mcset sv "Starting..." "Startar..."
+::msgcat::mcset sv "File Browser" "Filbl\u00e4ddrare"
+::msgcat::mcset sv "Loading %s..." "L\u00e4ser %s..."
+::msgcat::mcset sv "\[Up To Parent\]" "\[Upp till f\u00f6r\u00e4lder\]"
+::msgcat::mcset sv "Browse Branch Files" "Bl\u00e4ddra filer p\u00e5 grenen"
+::msgcat::mcset sv "Browse" "Bl\u00e4ddra"
+::msgcat::mcset sv "Revision" "Revision"
+::msgcat::mcset sv "Cannot merge while amending.\n\nYou must finish amending this commit before starting any type of merge.\n" "Kan inte sl\u00e5 ihop vid ut\u00f6kning.\n\nDu m\u00e5ste g\u00f6ra f\u00e4rdig ut\u00f6kningen av incheckningen innan du p\u00e5b\u00f6rjar n\u00e5gon slags sammanslagning.\n"
+::msgcat::mcset sv "Last scanned state does not match repository state.\n\nAnother Git program has modified this repository since the last scan.  A rescan must be performed before a merge can be performed.\n\nThe rescan will be automatically started now.\n" "Det senaste inl\u00e4sta tillst\u00e5ndet motsvarar inte tillst\u00e5ndet i arkivet.\n\nEtt annat Git-program har \u00e4ndrat arkivet sedan senaste avs\u00f6kningen. Du m\u00e5ste utf\u00f6ra en ny s\u00f6kning innan du kan utf\u00f6ra en sammanslagning.\n\nS\u00f6kningen kommer att startas automatiskt nu.\n"
+::msgcat::mcset sv "You are in the middle of a conflicted merge.\n\nFile %s has merge conflicts.\n\nYou must resolve them, stage the file, and commit to complete the current merge.  Only then can you begin another merge.\n" "Du \u00e4r mitt i en sammanslagning med konflikter.\n\nFilen %s har sammanslagningskonflikter.\n\nDu m\u00e5ste l\u00f6sa dem, k\u00f6a filen och checka in f\u00f6r att fullborda den aktuella sammanslagningen. N\u00e4r du gjort det kan du p\u00e5b\u00f6rja en ny sammanslagning.\n"
+::msgcat::mcset sv "You are in the middle of a change.\n\nFile %s is modified.\n\nYou should complete the current commit before starting a merge.  Doing so will help you abort a failed merge, should the need arise.\n" "Du \u00e4r mitt i en \u00e4ndring.\n\nFilen %s har \u00e4ndringar.\n\nDu b\u00f6r fullborda den aktuella incheckningen innan du p\u00e5b\u00f6rjar en sammanslagning. Om du g\u00f6r det blir det enklare att avbryta en misslyckad sammanslagning, om det skulle vara n\u00f6dv\u00e4ndigt.\n"
+::msgcat::mcset sv "%s of %s" "%s av %s"
+::msgcat::mcset sv "Merging %s and %s..." "Sl\u00e5r ihop %s och %s..."
+::msgcat::mcset sv "Merge completed successfully." "Sammanslagningen avslutades framg\u00e5ngsrikt."
+::msgcat::mcset sv "Merge failed.  Conflict resolution is required." "Sammanslagningen misslyckades. Du m\u00e5ste l\u00f6sa konflikterna."
+::msgcat::mcset sv "Merge Into %s" "Sl\u00e5 ihop i %s"
+::msgcat::mcset sv "Revision To Merge" "Revisioner att sl\u00e5 ihop"
+::msgcat::mcset sv "Cannot abort while amending.\n\nYou must finish amending this commit.\n" "Kan inte avbryta vid ut\u00f6kning.\n\nDu m\u00e5ste g\u00f6ra dig f\u00e4rdig med att ut\u00f6ka incheckningen.\n"
+::msgcat::mcset sv "Abort merge?\n\nAborting the current merge will cause *ALL* uncommitted changes to be lost.\n\nContinue with aborting the current merge?" "Avbryt sammanslagning?\n\nOm du avbryter sammanslagningen kommer *ALLA* ej incheckade \u00e4ndringar att g\u00e5 f\u00f6rlorade.\n\nG\u00e5 vidare med att avbryta den aktuella sammanslagningen?"
+::msgcat::mcset sv "Reset changes?\n\nResetting the changes will cause *ALL* uncommitted changes to be lost.\n\nContinue with resetting the current changes?" "\u00c5terst\u00e4ll \u00e4ndringar?\n\nOm du \u00e5terst\u00e4ller \u00e4ndringarna kommer *ALLA* ej incheckade \u00e4ndringar att g\u00e5 f\u00f6rlorade.\n\nG\u00e5 vidare med att \u00e5terst\u00e4lla de aktuella \u00e4ndringarna?"
+::msgcat::mcset sv "Aborting" "Avbryter"
+::msgcat::mcset sv "files reset" "filer \u00e5terst\u00e4llda"
+::msgcat::mcset sv "Abort failed." "Misslyckades avbryta."
+::msgcat::mcset sv "Abort completed.  Ready." "Avbrytning fullbordad. Redo."
+::msgcat::mcset sv "Running %s requires a selected file." "F\u00f6r att starta %s m\u00e5ste du v\u00e4lja en fil."
+::msgcat::mcset sv "Are you sure you want to run %1\$s on file \"%2\$s\"?" "\u00c4r du s\u00e4ker p\u00e5 att du vill starta %1\$s med filen \"%2\$s\"?"
+::msgcat::mcset sv "Are you sure you want to run %s?" "\u00c4r du s\u00e4ker p\u00e5 att du vill starta %s?"
+::msgcat::mcset sv "Tool: %s" "Verktyg: %s"
+::msgcat::mcset sv "Running: %s" "Exekverar: %s"
+::msgcat::mcset sv "Tool completed successfully: %s" "Verktyget avslutades framg\u00e5ngsrikt: %s"
+::msgcat::mcset sv "Tool failed: %s" "Verktyget misslyckades: %s"
+::msgcat::mcset sv "Checkout Branch" "Checka ut gren"
+::msgcat::mcset sv "Checkout" "Checka ut"
+::msgcat::mcset sv "Options" "Alternativ"
+::msgcat::mcset sv "Fetch Tracking Branch" "H\u00e4mta sp\u00e5rande gren"
+::msgcat::mcset sv "Detach From Local Branch" "Koppla bort fr\u00e5n lokal gren"
+::msgcat::mcset sv "Unsupported spell checker" "Stavningskontrollprogrammet st\u00f6ds inte"
+::msgcat::mcset sv "Spell checking is unavailable" "Stavningskontroll \u00e4r ej tillg\u00e4nglig"
+::msgcat::mcset sv "Invalid spell checking configuration" "Ogiltig inst\u00e4llning f\u00f6r stavningskontroll"
+::msgcat::mcset sv "Reverting dictionary to %s." "\u00c5terst\u00e4ller ordlistan till %s."
+::msgcat::mcset sv "Spell checker silently failed on startup" "Stavningskontroll misslyckades tyst vid start"
+::msgcat::mcset sv "Unrecognized spell checker" "Stavningskontrollprogrammet k\u00e4nns inte igen"
+::msgcat::mcset sv "No Suggestions" "Inga f\u00f6rslag"
+::msgcat::mcset sv "Unexpected EOF from spell checker" "Ov\u00e4ntat filslut fr\u00e5n stavningskontroll"
+::msgcat::mcset sv "Spell Checker Failed" "Stavningskontroll misslyckades"
+::msgcat::mcset sv "%s ... %*i of %*i %s (%3i%%)" "%s... %*i av %*i %s (%3i%%)"
+::msgcat::mcset sv "No differences detected.\n\n%s has no changes.\n\nThe modification date of this file was updated by another application, but the content within the file was not changed.\n\nA rescan will be automatically started to find other files which may have the same state." "Hittade inga skillnader.\n\n%s inneh\u00e5ller inga \u00e4ndringar.\n\nModifieringsdatum f\u00f6r filen uppdaterades av ett annat program, men inneh\u00e5llet i filen har inte \u00e4ndrats.\n\nEn s\u00f6kning kommer automatiskt att startas f\u00f6r att hitta andra filer som kan vara i samma tillst\u00e5nd."
+::msgcat::mcset sv "Loading diff of %s..." "L\u00e4ser differens f\u00f6r %s..."
+::msgcat::mcset sv "LOCAL: deleted\nREMOTE:\n" "LOKAL: borttagen\nFJ\u00c4RR:\n"
+::msgcat::mcset sv "REMOTE: deleted\nLOCAL:\n" "FJ\u00c4RR: borttagen\nLOKAL:\n"
+::msgcat::mcset sv "LOCAL:\n" "LOKAL:\n"
+::msgcat::mcset sv "REMOTE:\n" "FJ\u00c4RR:\n"
+::msgcat::mcset sv "Unable to display %s" "Kan inte visa %s"
+::msgcat::mcset sv "Error loading file:" "Fel vid l\u00e4sning av fil:"
+::msgcat::mcset sv "Git Repository (subproject)" "Gitarkiv (underprojekt)"
+::msgcat::mcset sv "* Binary file (not showing content)." "* Bin\u00e4rfil (visar inte inneh\u00e5llet)."
+::msgcat::mcset sv "* Untracked file is %d bytes.\n* Showing only first %d bytes.\n" "* Den osp\u00e5rade filen \u00e4r %d byte.\n* Visar endast inledande %d byte.\n"
+::msgcat::mcset sv "\n* Untracked file clipped here by %s.\n* To see the entire file, use an external editor.\n" "\n* Den osp\u00e5rade filen klipptes h\u00e4r av %s.\n* F\u00f6r att se hela filen, anv\u00e4nd ett externt redigeringsprogram.\n"
+::msgcat::mcset sv "Error loading diff:" "Fel vid inl\u00e4sning av differens:"
+::msgcat::mcset sv "Failed to unstage selected hunk." "Kunde inte ta bort den valda delen fr\u00e5n k\u00f6n."
+::msgcat::mcset sv "Failed to stage selected hunk." "Kunde inte l\u00e4gga till den valda delen till k\u00f6n."
+::msgcat::mcset sv "Failed to unstage selected line." "Kunde inte ta bort den valda raden fr\u00e5n k\u00f6n."
+::msgcat::mcset sv "Failed to stage selected line." "Kunde inte l\u00e4gga till den valda raden till k\u00f6n."
+::msgcat::mcset sv "Push to" "S\u00e4nd till"
+::msgcat::mcset sv "Remove Remote" "Ta bort fj\u00e4rrarkiv"
+::msgcat::mcset sv "Prune from" "Ta bort fr\u00e5n"
+::msgcat::mcset sv "Fetch from" "H\u00e4mta fr\u00e5n"
 ::msgcat::mcset sv "Select" "V\u00e4lj"
 ::msgcat::mcset sv "Font Family" "Teckensnittsfamilj"
 ::msgcat::mcset sv "Font Size" "Storlek"
 ::msgcat::mcset sv "Font Example" "Exempel"
 ::msgcat::mcset sv "This is example text.\nIf you like this text, it can be your font." "Detta \u00e4r en exempeltext.\nOm du tycker om den h\u00e4r texten kan den vara ditt teckensnitt."
+::msgcat::mcset sv "Invalid global encoding '%s'" "Den globala teckenkodningen \"%s\" \u00e4r ogiltig"
+::msgcat::mcset sv "Invalid repo encoding '%s'" "Arkivets teckenkodning \"%s\" \u00e4r ogiltig"
+::msgcat::mcset sv "Restore Defaults" "\u00c5terst\u00e4ll standardv\u00e4rden"
+::msgcat::mcset sv "Save" "Spara"
+::msgcat::mcset sv "%s Repository" "Arkivet %s"
+::msgcat::mcset sv "Global (All Repositories)" "Globalt (alla arkiv)"
+::msgcat::mcset sv "User Name" "Anv\u00e4ndarnamn"
+::msgcat::mcset sv "Email Address" "E-postadress"
+::msgcat::mcset sv "Summarize Merge Commits" "Summera sammanslagningsincheckningar"
+::msgcat::mcset sv "Merge Verbosity" "Pratsamhet f\u00f6r sammanslagningar"
+::msgcat::mcset sv "Show Diffstat After Merge" "Visa diffstatistik efter sammanslagning"
+::msgcat::mcset sv "Use Merge Tool" "Anv\u00e4nd verktyg f\u00f6r sammanslagning"
+::msgcat::mcset sv "Trust File Modification Timestamps" "Lita p\u00e5 fil\u00e4ndringstidsst\u00e4mplar"
+::msgcat::mcset sv "Prune Tracking Branches During Fetch" "St\u00e4da sp\u00e5rade grenar vid h\u00e4mtning"
+::msgcat::mcset sv "Match Tracking Branches" "Matcha sp\u00e5rade grenar"
+::msgcat::mcset sv "Use Textconv For Diffs and Blames" "Anv\u00e4nd Textconv f\u00f6r diff och klandring"
+::msgcat::mcset sv "Blame Copy Only On Changed Files" "Klandra kopiering bara i \u00e4ndrade filer"
+::msgcat::mcset sv "Maximum Length of Recent Repositories List" "Max l\u00e4ngd f\u00f6r lista \u00f6ver tidigare arkiv"
+::msgcat::mcset sv "Minimum Letters To Blame Copy On" "Minsta antal tecken att klandra kopiering f\u00f6r"
+::msgcat::mcset sv "Blame History Context Radius (days)" "Historikradie f\u00f6r klandring (dagar)"
+::msgcat::mcset sv "Number of Diff Context Lines" "Antal rader sammanhang i differenser"
+::msgcat::mcset sv "Additional Diff Parameters" "Ytterligare diff-parametrar"
+::msgcat::mcset sv "Commit Message Text Width" "Textbredd f\u00f6r incheckningsmeddelande"
+::msgcat::mcset sv "New Branch Name Template" "Mall f\u00f6r namn p\u00e5 nya grenar"
+::msgcat::mcset sv "Default File Contents Encoding" "Standardteckenkodning f\u00f6r filinneh\u00e5ll"
+::msgcat::mcset sv "Warn before committing to a detached head" "Varna f\u00f6r incheckning p\u00e5 fr\u00e5nkopplat huvud"
+::msgcat::mcset sv "Staging of untracked files" "K\u00f6a osp\u00e5rade filer"
+::msgcat::mcset sv "Show untracked files" "Visa osp\u00e5rade filer"
+::msgcat::mcset sv "Tab spacing" "Blanksteg f\u00f6r tabulatortecken"
+::msgcat::mcset sv "Change" "\u00c4ndra"
+::msgcat::mcset sv "Spelling Dictionary:" "Stavningsordlista:"
+::msgcat::mcset sv "Change Font" "Byt teckensnitt"
+::msgcat::mcset sv "Choose %s" "V\u00e4lj %s"
+::msgcat::mcset sv "pt." "p."
+::msgcat::mcset sv "Preferences" "Inst\u00e4llningar"
+::msgcat::mcset sv "Failed to completely save options:" "Misslyckades med att helt spara alternativ:"
+::msgcat::mcset sv "Force resolution to the base version?" "Tvinga l\u00f6sning att anv\u00e4nda basversionen?"
+::msgcat::mcset sv "Force resolution to this branch?" "Tvinga l\u00f6sning att anv\u00e4nda den aktuella grenen?"
+::msgcat::mcset sv "Force resolution to the other branch?" "Tvinga l\u00f6sning att anv\u00e4nda den andra grenen?"
+::msgcat::mcset sv "Note that the diff shows only conflicting changes.\n\n%s will be overwritten.\n\nThis operation can be undone only by restarting the merge." "Observera att diffen endast visar de \u00e4ndringar som st\u00e5r i konflikt.\n\n%s kommer att skrivas \u00f6ver.\n\nDu m\u00e5ste starta om sammanslagningen f\u00f6r att g\u00f6ra den h\u00e4r operationen ogjord."
+::msgcat::mcset sv "File %s seems to have unresolved conflicts, still stage?" "Filen %s verkar inneh\u00e5lla ol\u00f6sta konflikter. Vill du k\u00f6a \u00e4nd\u00e5?"
+::msgcat::mcset sv "Adding resolution for %s" "L\u00e4gger till l\u00f6sning f\u00f6r %s"
+::msgcat::mcset sv "Cannot resolve deletion or link conflicts using a tool" "Kan inte l\u00f6sa borttagnings- eller l\u00e4nkkonflikter med ett verktyg"
+::msgcat::mcset sv "Conflict file does not exist" "Konfliktfil existerar inte"
+::msgcat::mcset sv "Not a GUI merge tool: '%s'" "Inte ett grafiskt verktyg f\u00f6r sammanslagning: %s"
+::msgcat::mcset sv "Unsupported merge tool '%s'" "Verktyget \"%s\" f\u00f6r sammanslagning st\u00f6ds inte"
+::msgcat::mcset sv "Merge tool is already running, terminate it?" "Verktyget f\u00f6r sammanslagning k\u00f6rs redan. Vill du avsluta det?"
+::msgcat::mcset sv "Error retrieving versions:\n%s" "Fel vid h\u00e4mtning av versioner:\n%s"
+::msgcat::mcset sv "Could not start the merge tool:\n\n%s" "Kunde inte starta verktyg f\u00f6r sammanslagning:\n\n%s"
+::msgcat::mcset sv "Running merge tool..." "K\u00f6r verktyg f\u00f6r sammanslagning..."
+::msgcat::mcset sv "Merge tool failed." "Verktyget f\u00f6r sammanslagning misslyckades."
+::msgcat::mcset sv "Add Tool" "L\u00e4gg till verktyg"
+::msgcat::mcset sv "Add New Tool Command" "L\u00e4gg till nytt verktygskommando"
+::msgcat::mcset sv "Add globally" "L\u00e4gg till globalt"
+::msgcat::mcset sv "Tool Details" "Detaljer f\u00f6r verktyg"
+::msgcat::mcset sv "Use '/' separators to create a submenu tree:" "Anv\u00e4nd \"/\"-avdelare f\u00f6r att skapa ett undermenytr\u00e4d:"
+::msgcat::mcset sv "Command:" "Kommando:"
+::msgcat::mcset sv "Show a dialog before running" "Visa dialog innan programmet startas"
+::msgcat::mcset sv "Ask the user to select a revision (sets \$REVISION)" "Be anv\u00e4ndaren v\u00e4lja en version (s\u00e4tter \$REVISION)"
+::msgcat::mcset sv "Ask the user for additional arguments (sets \$ARGS)" "Be anv\u00e4ndaren om ytterligare parametrar (s\u00e4tter \$ARGS)"
+::msgcat::mcset sv "Don't show the command output window" "Visa inte kommandots utdataf\u00f6nster"
+::msgcat::mcset sv "Run only if a diff is selected (\$FILENAME not empty)" "K\u00f6r endast om en diff har markerats (\$FILENAME \u00e4r inte tomt)"
+::msgcat::mcset sv "Please supply a name for the tool." "Ange ett namn f\u00f6r verktyget."
+::msgcat::mcset sv "Tool '%s' already exists." "Verktyget \"%s\" finns redan."
+::msgcat::mcset sv "Could not add tool:\n%s" "Kunde inte l\u00e4gga till verktyget:\n%s"
+::msgcat::mcset sv "Remove Tool" "Ta bort verktyg"
+::msgcat::mcset sv "Remove Tool Commands" "Ta bort verktygskommandon"
+::msgcat::mcset sv "Remove" "Ta bort"
+::msgcat::mcset sv "(Blue denotes repository-local tools)" "(Bl\u00e5tt anger verktyg lokala f\u00f6r arkivet)"
+::msgcat::mcset sv "Run Command: %s" "K\u00f6r kommandot: %s"
+::msgcat::mcset sv "Arguments" "Argument"
+::msgcat::mcset sv "OK" "OK"
+::msgcat::mcset sv "Find:" "S\u00f6k:"
+::msgcat::mcset sv "Next" "N\u00e4sta"
+::msgcat::mcset sv "Prev" "F\u00f6reg"
+::msgcat::mcset sv "RegExp" "Reg.uttr."
+::msgcat::mcset sv "Case" "Skiftl\u00e4ge"
+::msgcat::mcset sv "Rename Branch" "Byt namn p\u00e5 gren"
+::msgcat::mcset sv "Rename" "Byt namn"
+::msgcat::mcset sv "Branch:" "Gren:"
+::msgcat::mcset sv "New Name:" "Nytt namn:"
+::msgcat::mcset sv "Please select a branch to rename." "V\u00e4lj en gren att byta namn p\u00e5."
+::msgcat::mcset sv "Please supply a branch name." "Ange ett namn f\u00f6r grenen."
+::msgcat::mcset sv "'%s' is not an acceptable branch name." "\"%s\" kan inte anv\u00e4ndas som namn p\u00e5 grenen."
+::msgcat::mcset sv "Failed to rename '%s'." "Kunde inte byta namn p\u00e5 \"%s\"."
+::msgcat::mcset sv "Delete Branch Remotely" "Ta bort gren fr\u00e5n fj\u00e4rrarkiv"
+::msgcat::mcset sv "From Repository" "Fr\u00e5n arkiv"
+::msgcat::mcset sv "Branches" "Grenar"
+::msgcat::mcset sv "Delete Only If" "Ta endast bort om"
+::msgcat::mcset sv "Merged Into:" "Sammanslagen i:"
+::msgcat::mcset sv "Always (Do not perform merge checks)" "Alltid (utf\u00f6r inte sammanslagningstest)"
+::msgcat::mcset sv "A branch is required for 'Merged Into'." "En gren kr\u00e4vs f\u00f6r \"Sammanslagen i\"."
+::msgcat::mcset sv "The following branches are not completely merged into %s:\n\n - %s" "F\u00f6ljande grenar har inte helt slagits samman i %s:\n\n - %s"
+::msgcat::mcset sv "One or more of the merge tests failed because you have not fetched the necessary commits.  Try fetching from %s first." "En eller flera av sammanslagningstesterna misslyckades eftersom du inte har h\u00e4mtat de n\u00f6dv\u00e4ndiga incheckningarna. F\u00f6rs\u00f6k h\u00e4mta fr\u00e5n %s f\u00f6rst."
+::msgcat::mcset sv "Please select one or more branches to delete." "V\u00e4lj en eller flera grenar att ta bort."
+::msgcat::mcset sv "Recovering deleted branches is difficult.\n\nDelete the selected branches?" "Det kan vara sv\u00e5rt att \u00e5terst\u00e4lla borttagna grenar.\n\nTa bort de valda grenarna?"
+::msgcat::mcset sv "Deleting branches from %s" "Tar bort grenar fr\u00e5n %s"
+::msgcat::mcset sv "No repository selected." "Inget arkiv markerat."
+::msgcat::mcset sv "Scanning %s..." "S\u00f6ker %s..."
 ::msgcat::mcset sv "Git Gui" "Git Gui"
 ::msgcat::mcset sv "Create New Repository" "Skapa nytt arkiv"
 ::msgcat::mcset sv "New..." "Nytt..."
 ::msgcat::mcset sv "Clone Existing Repository" "Klona befintligt arkiv"
 ::msgcat::mcset sv "Clone..." "Klona..."
 ::msgcat::mcset sv "Open Existing Repository" "\u00d6ppna befintligt arkiv"
 ::msgcat::mcset sv "Open..." "\u00d6ppna..."
 ::msgcat::mcset sv "Recent Repositories" "Senaste arkiven"
 ::msgcat::mcset sv "Open Recent Repository:" "\u00d6ppna tidigare arkiv:"
 ::msgcat::mcset sv "Failed to create repository %s:" "Kunde inte skapa arkivet %s:"
+::msgcat::mcset sv "Create" "Skapa"
 ::msgcat::mcset sv "Directory:" "Katalog:"
 ::msgcat::mcset sv "Git Repository" "Gitarkiv"
 ::msgcat::mcset sv "Directory %s already exists." "Katalogen %s finns redan."
 ::msgcat::mcset sv "File %s already exists." "Filen %s finns redan."
 ::msgcat::mcset sv "Clone" "Klona"
 ::msgcat::mcset sv "Source Location:" "Plats f\u00f6r k\u00e4llkod:"
 ::msgcat::mcset sv "Target Directory:" "M\u00e5lkatalog:"
 ::msgcat::mcset sv "Clone Type:" "Typ av klon:"
 ::msgcat::mcset sv "Standard (Fast, Semi-Redundant, Hardlinks)" "Standard (snabb, semiredundant, h\u00e5rda l\u00e4nkar)"
 ::msgcat::mcset sv "Full Copy (Slower, Redundant Backup)" "Full kopia (l\u00e5ngsammare, redundant s\u00e4kerhetskopia)"
 ::msgcat::mcset sv "Shared (Fastest, Not Recommended, No Backup)" "Delad (snabbast, rekommenderas ej, ingen s\u00e4kerhetskopia)"
+::msgcat::mcset sv "Recursively clone submodules too" "Klona \u00e4ven rekursivt undermoduler"
 ::msgcat::mcset sv "Not a Git repository: %s" "Inte ett Gitarkiv: %s"
 ::msgcat::mcset sv "Standard only available for local repository." "Standard \u00e4r endast tillg\u00e4ngligt f\u00f6r lokala arkiv."
 ::msgcat::mcset sv "Shared only available for local repository." "Delat \u00e4r endast tillg\u00e4ngligt f\u00f6r lokala arkiv."
 ::msgcat::mcset sv "Location %s already exists." "Platsen %s finns redan."
 ::msgcat::mcset sv "Failed to configure origin" "Kunde inte konfigurera ursprung"
 ::msgcat::mcset sv "Counting objects" "R\u00e4knar objekt"
@@ -266,16 +414,68 @@
 ::msgcat::mcset sv "Unable to cleanup %s" "Kunde inte st\u00e4da upp %s"
 ::msgcat::mcset sv "Clone failed." "Kloning misslyckades."
 ::msgcat::mcset sv "No default branch obtained." "H\u00e4mtade ingen standardgren."
 ::msgcat::mcset sv "Cannot resolve %s as a commit." "Kunde inte sl\u00e5 upp %s till n\u00e5gon incheckning."
 ::msgcat::mcset sv "Creating working directory" "Skapar arbetskatalog"
 ::msgcat::mcset sv "files" "filer"
+::msgcat::mcset sv "Cannot clone submodules." "Kan inte klona undermoduler."
+::msgcat::mcset sv "Cloning submodules" "Klonar undermoduler"
 ::msgcat::mcset sv "Initial file checkout failed." "Inledande filutcheckning misslyckades."
 ::msgcat::mcset sv "Open" "\u00d6ppna"
 ::msgcat::mcset sv "Repository:" "Arkiv:"
 ::msgcat::mcset sv "Failed to open repository %s:" "Kunde inte \u00f6ppna arkivet %s:"
+::msgcat::mcset sv "git-gui - a graphical user interface for Git." "git-gui - ett grafiskt anv\u00e4ndargr\u00e4nssnitt f\u00f6r Git."
+::msgcat::mcset sv "File Viewer" "Filvisare"
+::msgcat::mcset sv "Commit:" "Incheckning:"
+::msgcat::mcset sv "Copy Commit" "Kopiera incheckning"
+::msgcat::mcset sv "Find Text..." "S\u00f6k text..."
+::msgcat::mcset sv "Goto Line..." "G\u00e5 till rad..."
+::msgcat::mcset sv "Do Full Copy Detection" "G\u00f6r full kopieringsigenk\u00e4nning"
+::msgcat::mcset sv "Show History Context" "Visa historiksammanhang"
+::msgcat::mcset sv "Blame Parent Commit" "Klandra f\u00f6r\u00e4ldraincheckning"
+::msgcat::mcset sv "Reading %s..." "L\u00e4ser %s..."
+::msgcat::mcset sv "Loading copy/move tracking annotations..." "L\u00e4ser annoteringar f\u00f6r kopiering/flyttning..."
+::msgcat::mcset sv "lines annotated" "rader annoterade"
+::msgcat::mcset sv "Loading original location annotations..." "L\u00e4ser in annotering av originalplacering..."
+::msgcat::mcset sv "Annotation complete." "Annotering fullbordad."
+::msgcat::mcset sv "Busy" "Upptagen"
+::msgcat::mcset sv "Annotation process is already running." "Annoteringsprocess k\u00f6rs redan."
+::msgcat::mcset sv "Running thorough copy detection..." "K\u00f6r grundlig kopieringsigenk\u00e4nning..."
+::msgcat::mcset sv "Loading annotation..." "L\u00e4ser in annotering..."
+::msgcat::mcset sv "Author:" "F\u00f6rfattare:"
+::msgcat::mcset sv "Committer:" "Incheckare:"
+::msgcat::mcset sv "Original File:" "Ursprunglig fil:"
+::msgcat::mcset sv "Cannot find HEAD commit:" "Hittar inte incheckning f\u00f6r HEAD:"
+::msgcat::mcset sv "Cannot find parent commit:" "Hittar inte f\u00f6r\u00e4ldraincheckning:"
+::msgcat::mcset sv "Unable to display parent" "Kan inte visa f\u00f6r\u00e4lder"
+::msgcat::mcset sv "Originally By:" "Ursprungligen av:"
+::msgcat::mcset sv "In File:" "I filen:"
+::msgcat::mcset sv "Copied Or Moved Here By:" "Kopierad eller flyttad hit av:"
+::msgcat::mcset sv "No keys found." "Inga nycklar hittades."
+::msgcat::mcset sv "Found a public key in: %s" "Hittade \u00f6ppen nyckel i: %s"
+::msgcat::mcset sv "Generate Key" "Skapa nyckel"
+::msgcat::mcset sv "Copy To Clipboard" "Kopiera till Urklipp"
+::msgcat::mcset sv "Your OpenSSH Public Key" "Din \u00f6ppna OpenSSH-nyckel"
+::msgcat::mcset sv "Generating..." "Skapar..."
+::msgcat::mcset sv "Could not start ssh-keygen:\n\n%s" "Kunde inte starta ssh-keygen:\n\n%s"
+::msgcat::mcset sv "Generation failed." "Misslyckades med att skapa."
+::msgcat::mcset sv "Generation succeeded, but no keys found." "Lyckades skapa nyckeln, men hittar inte n\u00e5gon nyckel."
+::msgcat::mcset sv "Your key is in: %s" "Din nyckel finns i: %s"
+::msgcat::mcset sv "Create Branch" "Skapa gren"
+::msgcat::mcset sv "Create New Branch" "Skapa ny gren"
+::msgcat::mcset sv "Branch Name" "Namn p\u00e5 gren"
+::msgcat::mcset sv "Match Tracking Branch Name" "Anv\u00e4nd namn p\u00e5 sp\u00e5rad gren"
+::msgcat::mcset sv "Starting Revision" "Inledande revision"
+::msgcat::mcset sv "Update Existing Branch:" "Uppdatera befintlig gren:"
+::msgcat::mcset sv "No" "Nej"
+::msgcat::mcset sv "Fast Forward Only" "Endast snabbspolning"
+::msgcat::mcset sv "Checkout After Creation" "Checka ut n\u00e4r skapad"
+::msgcat::mcset sv "Please select a tracking branch." "V\u00e4lj en gren att sp\u00e5ra."
+::msgcat::mcset sv "Tracking branch %s is not a branch in the remote repository." "Den sp\u00e5rade grenen %s \u00e4r inte en gren i fj\u00e4rrarkivet."
+::msgcat::mcset sv "Cannot write shortcut:" "Kan inte skriva genv\u00e4g:"
+::msgcat::mcset sv "Cannot write icon:" "Kan inte skriva ikon:"
 ::msgcat::mcset sv "This Detached Checkout" "Denna fr\u00e5nkopplade utcheckning"
 ::msgcat::mcset sv "Revision Expression:" "Revisionsuttryck:"
 ::msgcat::mcset sv "Local Branch" "Lokal gren"
 ::msgcat::mcset sv "Tracking Branch" "Sp\u00e5rande gren"
 ::msgcat::mcset sv "Tag" "Tagg"
 ::msgcat::mcset sv "Invalid revision: %s" "Ogiltig revision: %s"
@@ -293,230 +493,56 @@
 ::msgcat::mcset sv "Unmerged files cannot be committed.\n\nFile %s has merge conflicts.  You must resolve them and stage the file before committing.\n" "Osammanslagna filer kan inte checkas in.\n\nFilen %s har sammanslagningskonflikter. Du m\u00e5ste l\u00f6sa dem och k\u00f6a filen innan du checkar in den.\n"
 ::msgcat::mcset sv "Unknown file state %s detected.\n\nFile %s cannot be committed by this program.\n" "Ok\u00e4nd filstatus %s uppt\u00e4ckt.\n\nFilen %s kan inte checkas in av programmet.\n"
 ::msgcat::mcset sv "No changes to commit.\n\nYou must stage at least 1 file before you can commit.\n" "Inga \u00e4ndringar att checka in.\n\nDu m\u00e5ste k\u00f6a \u00e5tminstone en fil innan du kan checka in.\n"
 ::msgcat::mcset sv "Please supply a commit message.\n\nA good commit message has the following format:\n\n- First line: Describe in one sentence what you did.\n- Second line: Blank\n- Remaining lines: Describe why this change is good.\n" "Ange ett incheckningsmeddelande.\n\nEtt bra incheckningsmeddelande har f\u00f6ljande format:\n\n- F\u00f6rsta raden: Beskriv i en mening vad du gjorde.\n- Andra raden: Tom\n- F\u00f6ljande rader: Beskriv varf\u00f6r det h\u00e4r \u00e4r en bra \u00e4ndring.\n"
 ::msgcat::mcset sv "Calling pre-commit hook..." "Anropar kroken f\u00f6re incheckning (pre-commit)..."
 ::msgcat::mcset sv "Commit declined by pre-commit hook." "Incheckningen avvisades av kroken f\u00f6re incheckning (pre-commit)."
+::msgcat::mcset sv "You are about to commit on a detached head. This is a potentially dangerous thing to do because if you switch to another branch you will lose your changes and it can be difficult to retrieve them later from the reflog. You should probably cancel this commit and create a new branch to continue.\n \n Do you really want to proceed with your Commit?" "Du \u00e4r p\u00e5 v\u00e4g att checka in p\u00e5 ett fr\u00e5nkopplat huvud. Det kan potentiellt vara farligt, eftersom du kommer f\u00f6rlora dina \u00e4ndringar om du v\u00e4xlar till en annan gren och det kan vara sv\u00e5rt att h\u00e4mta dem senare fr\u00e5n ref-loggen. Du b\u00f6r troligen avbryta incheckningen och skapa en ny gren f\u00f6r att forts\u00e4tta.\n \n Vill du verkligen forts\u00e4tta checka in?"
 ::msgcat::mcset sv "Calling commit-msg hook..." "Anropar kroken f\u00f6r incheckningsmeddelande (commit-msg)..."
 ::msgcat::mcset sv "Commit declined by commit-msg hook." "Incheckning avvisad av kroken f\u00f6r incheckningsmeddelande (commit-msg)."
 ::msgcat::mcset sv "Committing changes..." "Checkar in \u00e4ndringar..."
 ::msgcat::mcset sv "write-tree failed:" "write-tree misslyckades:"
 ::msgcat::mcset sv "Commit failed." "Incheckningen misslyckades."
 ::msgcat::mcset sv "Commit %s appears to be corrupt" "Incheckningen %s verkar vara trasig"
 ::msgcat::mcset sv "No changes to commit.\n\nNo files were modified by this commit and it was not a merge commit.\n\nA rescan will be automatically started now.\n" "Inga \u00e4ndringar att checka in.\n\nInga filer \u00e4ndrades av incheckningen och det var inte en sammanslagning.\n\nEn s\u00f6kning kommer att startas automatiskt nu.\n"
 ::msgcat::mcset sv "No changes to commit." "Inga \u00e4ndringar att checka in."
 ::msgcat::mcset sv "commit-tree failed:" "commit-tree misslyckades:"
 ::msgcat::mcset sv "update-ref failed:" "update-ref misslyckades:"
 ::msgcat::mcset sv "Created commit %s: %s" "Skapade incheckningen %s: %s"
-::msgcat::mcset sv "Working... please wait..." "Arbetar... v\u00e4nta..."
-::msgcat::mcset sv "Success" "Lyckades"
-::msgcat::mcset sv "Error: Command Failed" "Fel: Kommando misslyckades"
-::msgcat::mcset sv "Number of loose objects" "Antal l\u00f6sa objekt"
-::msgcat::mcset sv "Disk space used by loose objects" "Diskutrymme anv\u00e4nt av l\u00f6sa objekt"
-::msgcat::mcset sv "Number of packed objects" "Antal packade objekt"
-::msgcat::mcset sv "Number of packs" "Antal paket"
-::msgcat::mcset sv "Disk space used by packed objects" "Diskutrymme anv\u00e4nt av packade objekt"
-::msgcat::mcset sv "Packed objects waiting for pruning" "Packade objekt som v\u00e4ntar p\u00e5 st\u00e4dning"
-::msgcat::mcset sv "Garbage files" "Skr\u00e4pfiler"
-::msgcat::mcset sv "Compressing the object database" "Komprimerar objektdatabasen"
-::msgcat::mcset sv "Verifying the object database with fsck-objects" "Verifierar objektdatabasen med fsck-objects"
-::msgcat::mcset sv "This repository currently has approximately %i loose objects.\n\nTo maintain optimal performance it is strongly recommended that you compress the database.\n\nCompress the database now?" "Arkivet har f\u00f6r n\u00e4rvarande omkring %i l\u00f6sa objekt.\n\nF\u00f6r att bibeh\u00e5lla optimal prestanda rekommenderas det \u00e5 det best\u00e4mdaste att du komprimerar databasen.\n\nKomprimera databasen nu?"
-::msgcat::mcset sv "Invalid date from Git: %s" "Ogiltigt datum fr\u00e5n Git: %s"
-::msgcat::mcset sv "No differences detected.\n\n%s has no changes.\n\nThe modification date of this file was updated by another application, but the content within the file was not changed.\n\nA rescan will be automatically started to find other files which may have the same state." "Hittade inga skillnader.\n\n%s inneh\u00e5ller inga \u00e4ndringar.\n\nModifieringsdatum f\u00f6r filen uppdaterades av ett annat program, men inneh\u00e5llet i filen har inte \u00e4ndrats.\n\nEn s\u00f6kning kommer automatiskt att startas f\u00f6r att hitta andra filer som kan vara i samma tillst\u00e5nd."
-::msgcat::mcset sv "Loading diff of %s..." "L\u00e4ser differens f\u00f6r %s..."
-::msgcat::mcset sv "LOCAL: deleted\nREMOTE:\n" "LOKAL: borttagen\nFJ\u00c4RR:\n"
-::msgcat::mcset sv "REMOTE: deleted\nLOCAL:\n" "FJ\u00c4RR: borttagen\nLOKAL:\n"
-::msgcat::mcset sv "LOCAL:\n" "LOKAL:\n"
-::msgcat::mcset sv "REMOTE:\n" "FJ\u00c4RR:\n"
-::msgcat::mcset sv "Unable to display %s" "Kan inte visa %s"
-::msgcat::mcset sv "Error loading file:" "Fel vid l\u00e4sning av fil:"
-::msgcat::mcset sv "Git Repository (subproject)" "Gitarkiv (underprojekt)"
-::msgcat::mcset sv "* Binary file (not showing content)." "* Bin\u00e4rfil (visar inte inneh\u00e5llet)."
-::msgcat::mcset sv "* Untracked file is %d bytes.\n* Showing only first %d bytes.\n" "* Den osp\u00e5rade filen \u00e4r %d byte.\n* Visar endast inledande %d byte.\n"
-::msgcat::mcset sv "\n* Untracked file clipped here by %s.\n* To see the entire file, use an external editor.\n" "\n* Den osp\u00e5rade filen klipptes h\u00e4r av %s.\n* F\u00f6r att se hela filen, anv\u00e4nd ett externt redigeringsprogram.\n"
-::msgcat::mcset sv "Failed to unstage selected hunk." "Kunde inte ta bort den valda delen fr\u00e5n k\u00f6n."
-::msgcat::mcset sv "Failed to stage selected hunk." "Kunde inte l\u00e4gga till den valda delen till k\u00f6n."
-::msgcat::mcset sv "Failed to unstage selected line." "Kunde inte ta bort den valda raden fr\u00e5n k\u00f6n."
-::msgcat::mcset sv "Failed to stage selected line." "Kunde inte l\u00e4gga till den valda raden till k\u00f6n."
-::msgcat::mcset sv "Default" "Standard"
-::msgcat::mcset sv "System (%s)" "Systemets (%s)"
-::msgcat::mcset sv "Other" "Annan"
-::msgcat::mcset sv "error" "fel"
-::msgcat::mcset sv "warning" "varning"
-::msgcat::mcset sv "You must correct the above errors before committing." "Du m\u00e5ste r\u00e4tta till felen ovan innan du checkar in."
+::msgcat::mcset sv "Delete Branch" "Ta bort gren"
+::msgcat::mcset sv "Delete Local Branch" "Ta bort lokal gren"
+::msgcat::mcset sv "Local Branches" "Lokala grenar"
+::msgcat::mcset sv "Delete Only If Merged Into" "Ta bara bort om sammanslagen med"
+::msgcat::mcset sv "The following branches are not completely merged into %s:" "F\u00f6ljande grenar \u00e4r inte till fullo sammanslagna med %s:"
+::msgcat::mcset sv "Failed to delete branches:\n%s" "Kunde inte ta bort grenar:\n%s"
 ::msgcat::mcset sv "Unable to unlock the index." "Kunde inte l\u00e5sa upp indexet."
 ::msgcat::mcset sv "Index Error" "Indexfel"
 ::msgcat::mcset sv "Updating the Git index failed.  A rescan will be automatically started to resynchronize git-gui." "Misslyckades med att uppdatera Gitindexet. En oms\u00f6kning kommer att startas automatiskt f\u00f6r att synkronisera om git-gui."
 ::msgcat::mcset sv "Continue" "Forts\u00e4tt"
 ::msgcat::mcset sv "Unlock Index" "L\u00e5s upp index"
 ::msgcat::mcset sv "Unstaging %s from commit" "Tar bort %s f\u00f6r incheckningsk\u00f6n"
 ::msgcat::mcset sv "Ready to commit." "Redo att checka in."
 ::msgcat::mcset sv "Adding %s" "L\u00e4gger till %s"
+::msgcat::mcset sv "Stage %d untracked files?" "K\u00f6a %d osp\u00e5rade filer?"
 ::msgcat::mcset sv "Revert changes in file %s?" "\u00c5terst\u00e4ll \u00e4ndringarna i filen %s?"
 ::msgcat::mcset sv "Revert changes in these %i files?" "\u00c5terst\u00e4ll \u00e4ndringarna i dessa %i filer?"
 ::msgcat::mcset sv "Any unstaged changes will be permanently lost by the revert." "Alla ok\u00f6ade \u00e4ndringar kommer permanent g\u00e5 f\u00f6rlorade vid \u00e5terst\u00e4llningen."
 ::msgcat::mcset sv "Do Nothing" "G\u00f6r ingenting"
 ::msgcat::mcset sv "Reverting selected files" "\u00c5terst\u00e4ller valda filer"
 ::msgcat::mcset sv "Reverting %s" "\u00c5terst\u00e4ller %s"
-::msgcat::mcset sv "Cannot merge while amending.\n\nYou must finish amending this commit before starting any type of merge.\n" "Kan inte sl\u00e5 ihop vid ut\u00f6kning.\n\nDu m\u00e5ste g\u00f6ra f\u00e4rdig ut\u00f6kningen av incheckningen innan du p\u00e5b\u00f6rjar n\u00e5gon slags sammanslagning.\n"
-::msgcat::mcset sv "Last scanned state does not match repository state.\n\nAnother Git program has modified this repository since the last scan.  A rescan must be performed before a merge can be performed.\n\nThe rescan will be automatically started now.\n" "Det senaste inl\u00e4sta tillst\u00e5ndet motsvarar inte tillst\u00e5ndet i arkivet.\n\nEtt annat Git-program har \u00e4ndrat arkivet sedan senaste avs\u00f6kningen. Du m\u00e5ste utf\u00f6ra en ny s\u00f6kning innan du kan utf\u00f6ra en sammanslagning.\n\nS\u00f6kningen kommer att startas automatiskt nu.\n"
-::msgcat::mcset sv "You are in the middle of a conflicted merge.\n\nFile %s has merge conflicts.\n\nYou must resolve them, stage the file, and commit to complete the current merge.  Only then can you begin another merge.\n" "Du \u00e4r mitt i en sammanslagning med konflikter.\n\nFilen %s har sammanslagningskonflikter.\n\nDu m\u00e5ste l\u00f6sa dem, k\u00f6a filen och checka in f\u00f6r att fullborda den aktuella sammanslagningen. N\u00e4r du gjort det kan du p\u00e5b\u00f6rja en ny sammanslagning.\n"
-::msgcat::mcset sv "You are in the middle of a change.\n\nFile %s is modified.\n\nYou should complete the current commit before starting a merge.  Doing so will help you abort a failed merge, should the need arise.\n" "Du \u00e4r mitt i en \u00e4ndring.\n\nFilen %s har \u00e4ndringar.\n\nDu b\u00f6r fullborda den aktuella incheckningen innan du p\u00e5b\u00f6rjar en sammanslagning. Om du g\u00f6r det blir det enklare att avbryta en misslyckad sammanslagning, om det skulle vara n\u00f6dv\u00e4ndigt.\n"
-::msgcat::mcset sv "%s of %s" "%s av %s"
-::msgcat::mcset sv "Merging %s and %s..." "Sl\u00e5r ihop %s och %s..."
-::msgcat::mcset sv "Merge completed successfully." "Sammanslagningen avslutades framg\u00e5ngsrikt."
-::msgcat::mcset sv "Merge failed.  Conflict resolution is required." "Sammanslagningen misslyckades. Du m\u00e5ste l\u00f6sa konflikterna."
-::msgcat::mcset sv "Merge Into %s" "Sl\u00e5 ihop i %s"
-::msgcat::mcset sv "Revision To Merge" "Revisioner att sl\u00e5 ihop"
-::msgcat::mcset sv "Cannot abort while amending.\n\nYou must finish amending this commit.\n" "Kan inte avbryta vid ut\u00f6kning.\n\nDu m\u00e5ste g\u00f6ra dig f\u00e4rdig med att ut\u00f6ka incheckningen.\n"
-::msgcat::mcset sv "Abort merge?\n\nAborting the current merge will cause *ALL* uncommitted changes to be lost.\n\nContinue with aborting the current merge?" "Avbryt sammanslagning?\n\nOm du avbryter sammanslagningen kommer *ALLA* ej incheckade \u00e4ndringar att g\u00e5 f\u00f6rlorade.\n\nG\u00e5 vidare med att avbryta den aktuella sammanslagningen?"
-::msgcat::mcset sv "Reset changes?\n\nResetting the changes will cause *ALL* uncommitted changes to be lost.\n\nContinue with resetting the current changes?" "\u00c5terst\u00e4ll \u00e4ndringar?\n\nOm du \u00e5terst\u00e4ller \u00e4ndringarna kommer *ALLA* ej incheckade \u00e4ndringar att g\u00e5 f\u00f6rlorade.\n\nG\u00e5 vidare med att \u00e5terst\u00e4lla de aktuella \u00e4ndringarna?"
-::msgcat::mcset sv "Aborting" "Avbryter"
-::msgcat::mcset sv "files reset" "filer \u00e5terst\u00e4llda"
-::msgcat::mcset sv "Abort failed." "Misslyckades avbryta."
-::msgcat::mcset sv "Abort completed.  Ready." "Avbrytning fullbordad. Redo."
-::msgcat::mcset sv "Force resolution to the base version?" "Tvinga l\u00f6sning att anv\u00e4nda basversionen?"
-::msgcat::mcset sv "Force resolution to this branch?" "Tvinga l\u00f6sning att anv\u00e4nda den aktuella grenen?"
-::msgcat::mcset sv "Force resolution to the other branch?" "Tvinga l\u00f6sning att anv\u00e4nda den andra grenen?"
-::msgcat::mcset sv "Note that the diff shows only conflicting changes.\n\n%s will be overwritten.\n\nThis operation can be undone only by restarting the merge." "Observera att diffen endast visar de \u00e4ndringar som st\u00e5r i konflikt.\n\n%s kommer att skrivas \u00f6ver.\n\nDu m\u00e5ste starta om sammanslagningen f\u00f6r att g\u00f6ra den h\u00e4r operationen ogjord."
-::msgcat::mcset sv "File %s seems to have unresolved conflicts, still stage?" "Filen %s verkar inneh\u00e5lla ol\u00f6sta konflikter. Vill du k\u00f6a \u00e4nd\u00e5?"
-::msgcat::mcset sv "Adding resolution for %s" "L\u00e4gger till l\u00f6sning f\u00f6r %s"
-::msgcat::mcset sv "Cannot resolve deletion or link conflicts using a tool" "Kan inte l\u00f6sa borttagnings- eller l\u00e4nkkonflikter med ett verktyg"
-::msgcat::mcset sv "Conflict file does not exist" "Konfliktfil existerar inte"
-::msgcat::mcset sv "Not a GUI merge tool: '%s'" "Inte ett grafiskt verktyg f\u00f6r sammanslagning: %s"
-::msgcat::mcset sv "Unsupported merge tool '%s'" "Verktyget \"%s\" f\u00f6r sammanslagning st\u00f6ds inte"
-::msgcat::mcset sv "Merge tool is already running, terminate it?" "Verktyget f\u00f6r sammanslagning k\u00f6rs redan. Vill du avsluta det?"
-::msgcat::mcset sv "Error retrieving versions:\n%s" "Fel vid h\u00e4mtning av versioner:\n%s"
-::msgcat::mcset sv "Could not start the merge tool:\n\n%s" "Kunde inte starta verktyg f\u00f6r sammanslagning:\n\n%s"
-::msgcat::mcset sv "Running merge tool..." "K\u00f6r verktyg f\u00f6r sammanslagning..."
-::msgcat::mcset sv "Merge tool failed." "Verktyget f\u00f6r sammanslagning misslyckades."
-::msgcat::mcset sv "Invalid global encoding '%s'" "Den globala teckenkodningen \"%s\" \u00e4r ogiltig"
-::msgcat::mcset sv "Invalid repo encoding '%s'" "Arkivets teckenkodning \"%s\" \u00e4r ogiltig"
-::msgcat::mcset sv "Restore Defaults" "\u00c5terst\u00e4ll standardv\u00e4rden"
-::msgcat::mcset sv "Save" "Spara"
-::msgcat::mcset sv "%s Repository" "Arkivet %s"
-::msgcat::mcset sv "Global (All Repositories)" "Globalt (alla arkiv)"
-::msgcat::mcset sv "User Name" "Anv\u00e4ndarnamn"
-::msgcat::mcset sv "Email Address" "E-postadress"
-::msgcat::mcset sv "Summarize Merge Commits" "Summera sammanslagningsincheckningar"
-::msgcat::mcset sv "Merge Verbosity" "Pratsamhet f\u00f6r sammanslagningar"
-::msgcat::mcset sv "Show Diffstat After Merge" "Visa diffstatistik efter sammanslagning"
-::msgcat::mcset sv "Use Merge Tool" "Anv\u00e4nd verktyg f\u00f6r sammanslagning"
-::msgcat::mcset sv "Trust File Modification Timestamps" "Lita p\u00e5 fil\u00e4ndringstidsst\u00e4mplar"
-::msgcat::mcset sv "Prune Tracking Branches During Fetch" "St\u00e4da sp\u00e5rade grenar vid h\u00e4mtning"
-::msgcat::mcset sv "Match Tracking Branches" "Matcha sp\u00e5rade grenar"
-::msgcat::mcset sv "Use Textconv For Diffs and Blames" "Anv\u00e4nd Textconv f\u00f6r diff och klandring"
-::msgcat::mcset sv "Blame Copy Only On Changed Files" "Klandra kopiering bara i \u00e4ndrade filer"
-::msgcat::mcset sv "Minimum Letters To Blame Copy On" "Minsta antal tecken att klandra kopiering f\u00f6r"
-::msgcat::mcset sv "Blame History Context Radius (days)" "Historikradie f\u00f6r klandring (dagar)"
-::msgcat::mcset sv "Number of Diff Context Lines" "Antal rader sammanhang i differenser"
-::msgcat::mcset sv "Commit Message Text Width" "Textbredd f\u00f6r incheckningsmeddelande"
-::msgcat::mcset sv "New Branch Name Template" "Mall f\u00f6r namn p\u00e5 nya grenar"
-::msgcat::mcset sv "Default File Contents Encoding" "Standardteckenkodning f\u00f6r filinneh\u00e5ll"
-::msgcat::mcset sv "Change" "\u00c4ndra"
-::msgcat::mcset sv "Spelling Dictionary:" "Stavningsordlista:"
-::msgcat::mcset sv "Change Font" "Byt teckensnitt"
-::msgcat::mcset sv "Choose %s" "V\u00e4lj %s"
-::msgcat::mcset sv "pt." "p."
-::msgcat::mcset sv "Preferences" "Inst\u00e4llningar"
-::msgcat::mcset sv "Failed to completely save options:" "Misslyckades med att helt spara alternativ:"
-::msgcat::mcset sv "Add Remote" "L\u00e4gg till fj\u00e4rrarkiv"
-::msgcat::mcset sv "Add New Remote" "L\u00e4gg till nytt fj\u00e4rrarkiv"
-::msgcat::mcset sv "Add" "L\u00e4gg till"
-::msgcat::mcset sv "Remote Details" "Detaljer f\u00f6r fj\u00e4rrarkiv"
-::msgcat::mcset sv "Location:" "Plats:"
-::msgcat::mcset sv "Further Action" "Ytterligare \u00e5tg\u00e4rd"
-::msgcat::mcset sv "Fetch Immediately" "H\u00e4mta omedelbart"
-::msgcat::mcset sv "Initialize Remote Repository and Push" "Initiera fj\u00e4rrarkiv och s\u00e4nd till"
-::msgcat::mcset sv "Do Nothing Else Now" "G\u00f6r ingent mer nu"
-::msgcat::mcset sv "Please supply a remote name." "Ange ett namn f\u00f6r fj\u00e4rrarkivet."
-::msgcat::mcset sv "'%s' is not an acceptable remote name." "\"%s\" kan inte anv\u00e4ndas som namn p\u00e5 fj\u00e4rrarkivet."
-::msgcat::mcset sv "Failed to add remote '%s' of location '%s'." "Kunde inte l\u00e4gga till fj\u00e4rrarkivet \"%s\" p\u00e5 platsen \"%s\"."
-::msgcat::mcset sv "fetch %s" "h\u00e4mta %s"
-::msgcat::mcset sv "Fetching the %s" "H\u00e4mtar %s"
-::msgcat::mcset sv "Do not know how to initialize repository at location '%s'." "Vet inte hur arkivet p\u00e5 platsen \"%s\" skall initieras."
-::msgcat::mcset sv "push %s" "s\u00e4nd %s"
-::msgcat::mcset sv "Setting up the %s (at %s)" "Konfigurerar %s (p\u00e5 %s)"
-::msgcat::mcset sv "Delete Branch Remotely" "Ta bort gren fr\u00e5n fj\u00e4rrarkiv"
-::msgcat::mcset sv "From Repository" "Fr\u00e5n arkiv"
-::msgcat::mcset sv "Remote:" "Fj\u00e4rrarkiv:"
-::msgcat::mcset sv "Arbitrary Location:" "Godtycklig plats:"
-::msgcat::mcset sv "Branches" "Grenar"
-::msgcat::mcset sv "Delete Only If" "Ta endast bort om"
-::msgcat::mcset sv "Merged Into:" "Sammanslagen i:"
-::msgcat::mcset sv "A branch is required for 'Merged Into'." "En gren kr\u00e4vs f\u00f6r \"Sammanslagen i\"."
-::msgcat::mcset sv "The following branches are not completely merged into %s:\n\n - %s" "F\u00f6ljande grenar har inte helt slagits samman i %s:\n\n - %s"
-::msgcat::mcset sv "One or more of the merge tests failed because you have not fetched the necessary commits.  Try fetching from %s first." "En eller flera av sammanslagningstesterna misslyckades eftersom du inte har h\u00e4mtat de n\u00f6dv\u00e4ndiga incheckningarna. F\u00f6rs\u00f6k h\u00e4mta fr\u00e5n %s f\u00f6rst."
-::msgcat::mcset sv "Please select one or more branches to delete." "V\u00e4lj en eller flera grenar att ta bort."
-::msgcat::mcset sv "Deleting branches from %s" "Tar bort grenar fr\u00e5n %s"
-::msgcat::mcset sv "No repository selected." "Inget arkiv markerat."
-::msgcat::mcset sv "Scanning %s..." "S\u00f6ker %s..."
-::msgcat::mcset sv "Remove Remote" "Ta bort fj\u00e4rrarkiv"
-::msgcat::mcset sv "Prune from" "Ta bort fr\u00e5n"
-::msgcat::mcset sv "Fetch from" "H\u00e4mta fr\u00e5n"
-::msgcat::mcset sv "Push to" "S\u00e4nd till"
-::msgcat::mcset sv "Find:" "S\u00f6k:"
-::msgcat::mcset sv "Next" "N\u00e4sta"
-::msgcat::mcset sv "Prev" "F\u00f6reg"
-::msgcat::mcset sv "Case-Sensitive" "Skilj p\u00e5 VERSALER/gemener"
-::msgcat::mcset sv "Cannot write shortcut:" "Kan inte skriva genv\u00e4g:"
-::msgcat::mcset sv "Cannot write icon:" "Kan inte skriva ikon:"
-::msgcat::mcset sv "Unsupported spell checker" "Stavningskontrollprogrammet st\u00f6ds inte"
-::msgcat::mcset sv "Spell checking is unavailable" "Stavningskontroll \u00e4r ej tillg\u00e4nglig"
-::msgcat::mcset sv "Invalid spell checking configuration" "Ogiltig inst\u00e4llning f\u00f6r stavningskontroll"
-::msgcat::mcset sv "Reverting dictionary to %s." "\u00c5terst\u00e4ller ordlistan till %s."
-::msgcat::mcset sv "Spell checker silently failed on startup" "Stavningskontroll misslyckades tyst vid start"
-::msgcat::mcset sv "Unrecognized spell checker" "Stavningskontrollprogrammet k\u00e4nns inte igen"
-::msgcat::mcset sv "No Suggestions" "Inga f\u00f6rslag"
-::msgcat::mcset sv "Unexpected EOF from spell checker" "Ov\u00e4ntat filslut fr\u00e5n stavningskontroll"
-::msgcat::mcset sv "Spell Checker Failed" "Stavningskontroll misslyckades"
-::msgcat::mcset sv "No keys found." "Inga nycklar hittades."
-::msgcat::mcset sv "Found a public key in: %s" "Hittade \u00f6ppen nyckel i: %s"
-::msgcat::mcset sv "Generate Key" "Skapa nyckel"
-::msgcat::mcset sv "Copy To Clipboard" "Kopiera till Urklipp"
-::msgcat::mcset sv "Your OpenSSH Public Key" "Din \u00f6ppna OpenSSH-nyckel"
-::msgcat::mcset sv "Generating..." "Skapar..."
-::msgcat::mcset sv "Could not start ssh-keygen:\n\n%s" "Kunde inte starta ssh-keygen:\n\n%s"
-::msgcat::mcset sv "Generation failed." "Misslyckades med att skapa."
-::msgcat::mcset sv "Generation succeeded, but no keys found." "Lyckades skapa nyckeln, men hittar inte n\u00e5gon nyckel."
-::msgcat::mcset sv "Your key is in: %s" "Din nyckel finns i: %s"
-::msgcat::mcset sv "%s ... %*i of %*i %s (%3i%%)" "%s... %*i av %*i %s (%3i%%)"
-::msgcat::mcset sv "Add Tool" "L\u00e4gg till verktyg"
-::msgcat::mcset sv "Add New Tool Command" "L\u00e4gg till nytt verktygskommando"
-::msgcat::mcset sv "Add globally" "L\u00e4gg till globalt"
-::msgcat::mcset sv "Tool Details" "Detaljer f\u00f6r verktyg"
-::msgcat::mcset sv "Use '/' separators to create a submenu tree:" "Anv\u00e4nd \"/\"-avdelare f\u00f6r att skapa ett undermenytr\u00e4d:"
-::msgcat::mcset sv "Command:" "Kommando:"
-::msgcat::mcset sv "Show a dialog before running" "Visa dialog innan programmet startas"
-::msgcat::mcset sv "Ask the user to select a revision (sets \$REVISION)" "Be anv\u00e4ndaren v\u00e4lja en version (s\u00e4tter \$REVISION)"
-::msgcat::mcset sv "Ask the user for additional arguments (sets \$ARGS)" "Be anv\u00e4ndaren om ytterligare parametrar (s\u00e4tter \$ARGS)"
-::msgcat::mcset sv "Don't show the command output window" "Visa inte kommandots utdataf\u00f6nster"
-::msgcat::mcset sv "Run only if a diff is selected (\$FILENAME not empty)" "K\u00f6r endast om en diff har markerats (\$FILENAME \u00e4r inte tomt)"
-::msgcat::mcset sv "Please supply a name for the tool." "Ange ett namn f\u00f6r verktyget."
-::msgcat::mcset sv "Tool '%s' already exists." "Verktyget \"%s\" finns redan."
-::msgcat::mcset sv "Could not add tool:\n%s" "Kunde inte l\u00e4gga till verktyget:\n%s"
-::msgcat::mcset sv "Remove Tool" "Ta bort verktyg"
-::msgcat::mcset sv "Remove Tool Commands" "Ta bort verktygskommandon"
-::msgcat::mcset sv "Remove" "Ta bort"
-::msgcat::mcset sv "(Blue denotes repository-local tools)" "(Bl\u00e5tt anger verktyg lokala f\u00f6r arkivet)"
-::msgcat::mcset sv "Run Command: %s" "K\u00f6r kommandot: %s"
-::msgcat::mcset sv "Arguments" "Argument"
-::msgcat::mcset sv "OK" "OK"
-::msgcat::mcset sv "Running %s requires a selected file." "F\u00f6r att starta %s m\u00e5ste du v\u00e4lja en fil."
-::msgcat::mcset sv "Are you sure you want to run %s?" "\u00c4r du s\u00e4ker p\u00e5 att du vill starta %s?"
-::msgcat::mcset sv "Tool: %s" "Verktyg: %s"
-::msgcat::mcset sv "Running: %s" "Exekverar: %s"
-::msgcat::mcset sv "Tool completed successfully: %s" "Verktyget avslutades framg\u00e5ngsrikt: %s"
-::msgcat::mcset sv "Tool failed: %s" "Verktyget misslyckades: %s"
-::msgcat::mcset sv "Fetching new changes from %s" "H\u00e4mtar nya \u00e4ndringar fr\u00e5n %s"
-::msgcat::mcset sv "remote prune %s" "fj\u00e4rrborttagning %s"
-::msgcat::mcset sv "Pruning tracking branches deleted from %s" "Tar bort sp\u00e5rande grenar som tagits bort fr\u00e5n %s"
-::msgcat::mcset sv "Pushing changes to %s" "S\u00e4nder \u00e4ndringar till %s"
-::msgcat::mcset sv "Mirroring to %s" "Speglar till %s"
-::msgcat::mcset sv "Pushing %s %s to %s" "S\u00e4nder %s %s till %s"
-::msgcat::mcset sv "Push Branches" "S\u00e4nd grenar"
-::msgcat::mcset sv "Source Branches" "K\u00e4llgrenar"
-::msgcat::mcset sv "Destination Repository" "Destinationsarkiv"
-::msgcat::mcset sv "Transfer Options" "\u00d6verf\u00f6ringsalternativ"
-::msgcat::mcset sv "Force overwrite existing branch (may discard changes)" "Tvinga \u00f6verskrivning av befintlig gren (kan kasta bort \u00e4ndringar)"
-::msgcat::mcset sv "Use thin pack (for slow network connections)" "Anv\u00e4nd tunt paket (f\u00f6r l\u00e5ngsamma n\u00e4tverksanslutningar)"
-::msgcat::mcset sv "Include tags" "Ta med taggar"
+::msgcat::mcset sv "Default" "Standard"
+::msgcat::mcset sv "System (%s)" "Systemets (%s)"
+::msgcat::mcset sv "Other" "Annan"
+::msgcat::mcset sv "Invalid date from Git: %s" "Ogiltigt datum fr\u00e5n Git: %s"
+::msgcat::mcset sv "Number of loose objects" "Antal l\u00f6sa objekt"
+::msgcat::mcset sv "Disk space used by loose objects" "Diskutrymme anv\u00e4nt av l\u00f6sa objekt"
+::msgcat::mcset sv "Number of packed objects" "Antal packade objekt"
+::msgcat::mcset sv "Number of packs" "Antal paket"
+::msgcat::mcset sv "Disk space used by packed objects" "Diskutrymme anv\u00e4nt av packade objekt"
+::msgcat::mcset sv "Packed objects waiting for pruning" "Packade objekt som v\u00e4ntar p\u00e5 st\u00e4dning"
+::msgcat::mcset sv "Garbage files" "Skr\u00e4pfiler"
+::msgcat::mcset sv "Compressing the object database" "Komprimerar objektdatabasen"
+::msgcat::mcset sv "Verifying the object database with fsck-objects" "Verifierar objektdatabasen med fsck-objects"
+::msgcat::mcset sv "This repository currently has approximately %i loose objects.\n\nTo maintain optimal performance it is strongly recommended that you compress the database.\n\nCompress the database now?" "Arkivet har f\u00f6r n\u00e4rvarande omkring %i l\u00f6sa objekt.\n\nF\u00f6r att bibeh\u00e5lla optimal prestanda rekommenderas det \u00e5 det best\u00e4mdaste att du komprimerar databasen.\n\nKomprimera databasen nu?"
+::msgcat::mcset sv "error" "fel"
+::msgcat::mcset sv "warning" "varning"
+::msgcat::mcset sv "You must correct the above errors before committing." "Du m\u00e5ste r\u00e4tta till felen ovan innan du checkar in."
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/po/sv.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/po/sv.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/po/sv.po	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/po/sv.po	2015-05-01 03:12:02.000000000 +0800
@@ -1,51 +1,55 @@
 # Swedish translation of git-gui.
 # Copyright (C) 2007-2008 Shawn Pearce, et al.
 # This file is distributed under the same license as the git-gui package.
 #
-# Peter Krefting <peter@softwolves.pp.se>, 2007-2008.
 # Mikael Magnusson <mikachu@gmail.com>, 2008.
+# Peter Krefting <peter@softwolves.pp.se>, 2007-2008, 2015.
+#
 msgid ""
 msgstr ""
 "Project-Id-Version: sv\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2010-09-12 21:11+0100\n"
-"PO-Revision-Date: 2010-09-12 21:12+0100\n"
+"POT-Creation-Date: 2015-03-27 10:15+0100\n"
+"PO-Revision-Date: 2015-03-27 10:24+0100\n"
 "Last-Translator: Peter Krefting <peter@softwolves.pp.se>\n"
 "Language-Team: Swedish <tp-sv@listor.tp-sv.se>\n"
+"Language: sv\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit"
+"Content-Transfer-Encoding: 8bit\n"
+"Plural-Forms: nplurals=2; plural=(n != 1);\n"
+"X-Generator: Gtranslator 2.91.6\n"
 
-#: git-gui.sh:781
+#: git-gui.sh:861
 #, tcl-format
 msgid "Invalid font specified in %s:"
 msgstr "Ogiltigt teckensnitt angivet i %s:"
 
-#: git-gui.sh:831
+#: git-gui.sh:915
 msgid "Main Font"
 msgstr "Huvudteckensnitt"
 
-#: git-gui.sh:832
+#: git-gui.sh:916
 msgid "Diff/Console Font"
 msgstr "Diff/konsolteckensnitt"
 
-#: git-gui.sh:845 git-gui.sh:859 git-gui.sh:872 git-gui.sh:955 git-gui.sh:974
-#: git-gui.sh:2964
+#: git-gui.sh:931 git-gui.sh:945 git-gui.sh:958 git-gui.sh:1048
+#: git-gui.sh:1067 git-gui.sh:3125
 msgid "git-gui: fatal error"
 msgstr "git-gui: ödesdigert fel"
 
-#: git-gui.sh:846
+#: git-gui.sh:932
 msgid "Cannot find git in PATH."
 msgstr "Hittar inte git i PATH."
 
-#: git-gui.sh:873
+#: git-gui.sh:959
 msgid "Cannot parse Git version string:"
 msgstr "Kan inte tolka versionssträng från Git:"
 
-#: git-gui.sh:891
+#: git-gui.sh:984
 #, tcl-format
 msgid ""
 "Git version cannot be determined.\n"
 "\n"
 "%s claims it is version '%s'.\n"
 "\n"
@@ -58,484 +62,511 @@
 "%s säger att dess version är \"%s\".\n"
 "\n"
 "%s kräver minst Git 1.5.0 eller senare.\n"
 "\n"
 "Anta att \"%s\" är version 1.5.0?\n"
 
-#: git-gui.sh:1180
+#: git-gui.sh:1281
 msgid "Git directory not found:"
 msgstr "Git-katalogen hittades inte:"
 
-#: git-gui.sh:1201
+#: git-gui.sh:1315
 msgid "Cannot move to top of working directory:"
 msgstr "Kan inte gå till början på arbetskatalogen:"
 
-#: git-gui.sh:1209
+#: git-gui.sh:1323
 msgid "Cannot use bare repository:"
 msgstr "Kan inte använda naket arkiv:"
 
-#: git-gui.sh:1217
+#: git-gui.sh:1331
 msgid "No working directory"
 msgstr "Ingen arbetskatalog"
 
-#: git-gui.sh:1389 lib/checkout_op.tcl:306
+#: git-gui.sh:1503 lib/checkout_op.tcl:306
 msgid "Refreshing file status..."
 msgstr "Uppdaterar filstatus..."
 
-#: git-gui.sh:1445
+#: git-gui.sh:1563
 msgid "Scanning for modified files ..."
 msgstr "Söker efter ändrade filer..."
 
-#: git-gui.sh:1509
+#: git-gui.sh:1639
 msgid "Calling prepare-commit-msg hook..."
 msgstr ""
 "Anropar kroken för förberedelse av incheckningsmeddelande (prepare-commit-"
 "msg)..."
 
-#: git-gui.sh:1526
+#: git-gui.sh:1656
 msgid "Commit declined by prepare-commit-msg hook."
 msgstr ""
 "Incheckningen avvisades av kroken för förberedelse av incheckningsmeddelande "
 "(prepare-commit-msg)."
 
-#: git-gui.sh:1684 lib/browser.tcl:246
+#: git-gui.sh:1814 lib/browser.tcl:252
 msgid "Ready."
 msgstr "Klar."
 
-#: git-gui.sh:1842
+#: git-gui.sh:1978
 #, tcl-format
-msgid "Displaying only %s of %s files."
-msgstr "Visar endast %s av %s filer."
+msgid ""
+"Display limit (gui.maxfilesdisplayed = %s) reached, not showing all %s files."
+msgstr ""
+"Visningsgräns (gui.maxfilesdisplayed = %s) nådd, visare inte samtliga %s "
+"filer."
 
-#: git-gui.sh:1968
+#: git-gui.sh:2101
 msgid "Unmodified"
 msgstr "Oförändrade"
 
-#: git-gui.sh:1970
+#: git-gui.sh:2103
 msgid "Modified, not staged"
 msgstr "Förändrade, ej köade"
 
-#: git-gui.sh:1971 git-gui.sh:1979
+#: git-gui.sh:2104 git-gui.sh:2116
 msgid "Staged for commit"
 msgstr "Köade för incheckning"
 
-#: git-gui.sh:1972 git-gui.sh:1980
+#: git-gui.sh:2105 git-gui.sh:2117
 msgid "Portions staged for commit"
 msgstr "Delar köade för incheckning"
 
-#: git-gui.sh:1973 git-gui.sh:1981
+#: git-gui.sh:2106 git-gui.sh:2118
 msgid "Staged for commit, missing"
 msgstr "Köade för incheckning, saknade"
 
-#: git-gui.sh:1975
+#: git-gui.sh:2108
 msgid "File type changed, not staged"
 msgstr "Filtyp ändrad, ej köade"
 
-#: git-gui.sh:1976
+#: git-gui.sh:2109 git-gui.sh:2110
+msgid "File type changed, old type staged for commit"
+msgstr "Filtyp ändrad, gammal typ köade för incheckning"
+
+#: git-gui.sh:2111
 msgid "File type changed, staged"
 msgstr "Filtyp ändrad, köade"
 
-#: git-gui.sh:1978
+#: git-gui.sh:2112
+msgid "File type change staged, modification not staged"
+msgstr "Filtypsändringar köade, innehållsändringar ej köade"
+
+#: git-gui.sh:2113
+msgid "File type change staged, file missing"
+msgstr "Filtypsändringar köade, fil saknas"
+
+#: git-gui.sh:2115
 msgid "Untracked, not staged"
 msgstr "Ej spårade, ej köade"
 
-#: git-gui.sh:1983
+#: git-gui.sh:2120
 msgid "Missing"
 msgstr "Saknade"
 
-#: git-gui.sh:1984
+#: git-gui.sh:2121
 msgid "Staged for removal"
 msgstr "Köade för borttagning"
 
-#: git-gui.sh:1985
+#: git-gui.sh:2122
 msgid "Staged for removal, still present"
 msgstr "Köade för borttagning, fortfarande närvarande"
 
-#: git-gui.sh:1987 git-gui.sh:1988 git-gui.sh:1989 git-gui.sh:1990
-#: git-gui.sh:1991 git-gui.sh:1992
+#: git-gui.sh:2124 git-gui.sh:2125 git-gui.sh:2126 git-gui.sh:2127
+#: git-gui.sh:2128 git-gui.sh:2129
 msgid "Requires merge resolution"
 msgstr "Kräver konflikthantering efter sammanslagning"
 
-#: git-gui.sh:2027
+#: git-gui.sh:2164
 msgid "Starting gitk... please wait..."
 msgstr "Startar gitk... vänta..."
 
-#: git-gui.sh:2039
+#: git-gui.sh:2176
 msgid "Couldn't find gitk in PATH"
 msgstr "Hittade inte gitk i PATH."
 
-#: git-gui.sh:2098
+#: git-gui.sh:2235
 msgid "Couldn't find git gui in PATH"
 msgstr "Hittade inte git gui i PATH."
 
-#: git-gui.sh:2515 lib/choose_repository.tcl:36
+#: git-gui.sh:2654 lib/choose_repository.tcl:41
 msgid "Repository"
 msgstr "Arkiv"
 
-#: git-gui.sh:2516
+#: git-gui.sh:2655
 msgid "Edit"
 msgstr "Redigera"
 
-#: git-gui.sh:2518 lib/choose_rev.tcl:566
+#: git-gui.sh:2657 lib/choose_rev.tcl:567
 msgid "Branch"
 msgstr "Gren"
 
-#: git-gui.sh:2521 lib/choose_rev.tcl:553
+#: git-gui.sh:2660 lib/choose_rev.tcl:554
 msgid "Commit@@noun"
 msgstr "Incheckning"
 
-#: git-gui.sh:2524 lib/merge.tcl:121 lib/merge.tcl:150 lib/merge.tcl:168
+#: git-gui.sh:2663 lib/merge.tcl:123 lib/merge.tcl:152 lib/merge.tcl:170
 msgid "Merge"
 msgstr "Slå ihop"
 
-#: git-gui.sh:2525 lib/choose_rev.tcl:562
+#: git-gui.sh:2664 lib/choose_rev.tcl:563
 msgid "Remote"
 msgstr "Fjärrarkiv"
 
-#: git-gui.sh:2528
+#: git-gui.sh:2667
 msgid "Tools"
 msgstr "Verktyg"
 
-#: git-gui.sh:2537
+#: git-gui.sh:2676
 msgid "Explore Working Copy"
 msgstr "Utforska arbetskopia"
 
-#: git-gui.sh:2543
+#: git-gui.sh:2682
+msgid "Git Bash"
+msgstr "Git Bash"
+
+#: git-gui.sh:2692
 msgid "Browse Current Branch's Files"
 msgstr "Bläddra i grenens filer"
 
-#: git-gui.sh:2547
+#: git-gui.sh:2696
 msgid "Browse Branch Files..."
 msgstr "Bläddra filer på gren..."
 
-#: git-gui.sh:2552
+#: git-gui.sh:2701
 msgid "Visualize Current Branch's History"
 msgstr "Visualisera grenens historik"
 
-#: git-gui.sh:2556
+#: git-gui.sh:2705
 msgid "Visualize All Branch History"
 msgstr "Visualisera alla grenars historik"
 
-#: git-gui.sh:2563
+#: git-gui.sh:2712
 #, tcl-format
 msgid "Browse %s's Files"
 msgstr "Bläddra i filer för %s"
 
-#: git-gui.sh:2565
+#: git-gui.sh:2714
 #, tcl-format
 msgid "Visualize %s's History"
 msgstr "Visualisera historik för %s"
 
-#: git-gui.sh:2570 lib/database.tcl:40 lib/database.tcl:66
+#: git-gui.sh:2719 lib/database.tcl:40 lib/database.tcl:66
 msgid "Database Statistics"
 msgstr "Databasstatistik"
 
-#: git-gui.sh:2573 lib/database.tcl:33
+#: git-gui.sh:2722 lib/database.tcl:33
 msgid "Compress Database"
 msgstr "Komprimera databas"
 
-#: git-gui.sh:2576
+#: git-gui.sh:2725
 msgid "Verify Database"
 msgstr "Verifiera databas"
 
-#: git-gui.sh:2583 git-gui.sh:2587 git-gui.sh:2591 lib/shortcut.tcl:8
+#: git-gui.sh:2732 git-gui.sh:2736 git-gui.sh:2740 lib/shortcut.tcl:8
 #: lib/shortcut.tcl:40 lib/shortcut.tcl:72
 msgid "Create Desktop Icon"
 msgstr "Skapa skrivbordsikon"
 
-#: git-gui.sh:2599 lib/choose_repository.tcl:188 lib/choose_repository.tcl:196
+#: git-gui.sh:2748 lib/choose_repository.tcl:193 lib/choose_repository.tcl:201
 msgid "Quit"
 msgstr "Avsluta"
 
-#: git-gui.sh:2607
+#: git-gui.sh:2756
 msgid "Undo"
 msgstr "Ångra"
 
-#: git-gui.sh:2610
+#: git-gui.sh:2759
 msgid "Redo"
 msgstr "Gör om"
 
-#: git-gui.sh:2614 git-gui.sh:3190
+#: git-gui.sh:2763 git-gui.sh:3368
 msgid "Cut"
 msgstr "Klipp ut"
 
-#: git-gui.sh:2617 git-gui.sh:3193 git-gui.sh:3267 git-gui.sh:3340
+#: git-gui.sh:2766 git-gui.sh:3371 git-gui.sh:3445 git-gui.sh:3530
 #: lib/console.tcl:69
 msgid "Copy"
 msgstr "Kopiera"
 
-#: git-gui.sh:2620 git-gui.sh:3196
+#: git-gui.sh:2769 git-gui.sh:3374
 msgid "Paste"
 msgstr "Klistra in"
 
-#: git-gui.sh:2623 git-gui.sh:3199 lib/branch_delete.tcl:28
-#: lib/remote_branch_delete.tcl:39
+#: git-gui.sh:2772 git-gui.sh:3377 lib/remote_branch_delete.tcl:39
+#: lib/branch_delete.tcl:28
 msgid "Delete"
 msgstr "Ta bort"
 
-#: git-gui.sh:2627 git-gui.sh:3203 git-gui.sh:3344 lib/console.tcl:71
+#: git-gui.sh:2776 git-gui.sh:3381 git-gui.sh:3534 lib/console.tcl:71
 msgid "Select All"
 msgstr "Markera alla"
 
-#: git-gui.sh:2636
+#: git-gui.sh:2785
 msgid "Create..."
 msgstr "Skapa..."
 
-#: git-gui.sh:2642
+#: git-gui.sh:2791
 msgid "Checkout..."
 msgstr "Checka ut..."
 
-#: git-gui.sh:2648
+#: git-gui.sh:2797
 msgid "Rename..."
 msgstr "Byt namn..."
 
-#: git-gui.sh:2653
+#: git-gui.sh:2802
 msgid "Delete..."
 msgstr "Ta bort..."
 
-#: git-gui.sh:2658
+#: git-gui.sh:2807
 msgid "Reset..."
 msgstr "Återställ..."
 
-#: git-gui.sh:2668
+#: git-gui.sh:2817
 msgid "Done"
 msgstr "Färdig"
 
-#: git-gui.sh:2670
+#: git-gui.sh:2819
 msgid "Commit@@verb"
 msgstr "Checka in"
 
-#: git-gui.sh:2679 git-gui.sh:3131
+#: git-gui.sh:2828 git-gui.sh:3309
 msgid "New Commit"
 msgstr "Ny incheckning"
 
-#: git-gui.sh:2687 git-gui.sh:3138
+#: git-gui.sh:2836 git-gui.sh:3316
 msgid "Amend Last Commit"
 msgstr "Lägg till föregående incheckning"
 
-#: git-gui.sh:2697 git-gui.sh:3092 lib/remote_branch_delete.tcl:101
+#: git-gui.sh:2846 git-gui.sh:3270 lib/remote_branch_delete.tcl:101
 msgid "Rescan"
 msgstr "Sök på nytt"
 
-#: git-gui.sh:2703
+#: git-gui.sh:2852
 msgid "Stage To Commit"
 msgstr "Köa för incheckning"
 
-#: git-gui.sh:2709
+#: git-gui.sh:2858
 msgid "Stage Changed Files To Commit"
 msgstr "Köa ändrade filer för incheckning"
 
-#: git-gui.sh:2715
+#: git-gui.sh:2864
 msgid "Unstage From Commit"
 msgstr "Ta bort från incheckningskö"
 
-#: git-gui.sh:2721 lib/index.tcl:415
+#: git-gui.sh:2870 lib/index.tcl:442
 msgid "Revert Changes"
 msgstr "Återställ ändringar"
 
-#: git-gui.sh:2729 git-gui.sh:3391 git-gui.sh:3422
+#: git-gui.sh:2878 git-gui.sh:3581 git-gui.sh:3612
 msgid "Show Less Context"
 msgstr "Visa mindre sammanhang"
 
-#: git-gui.sh:2733 git-gui.sh:3395 git-gui.sh:3426
+#: git-gui.sh:2882 git-gui.sh:3585 git-gui.sh:3616
 msgid "Show More Context"
 msgstr "Visa mer sammanhang"
 
-#: git-gui.sh:2740 git-gui.sh:3105 git-gui.sh:3214
+#: git-gui.sh:2889 git-gui.sh:3283 git-gui.sh:3392
 msgid "Sign Off"
 msgstr "Skriv under"
 
-#: git-gui.sh:2756
+#: git-gui.sh:2905
 msgid "Local Merge..."
 msgstr "Lokal sammanslagning..."
 
-#: git-gui.sh:2761
+#: git-gui.sh:2910
 msgid "Abort Merge..."
 msgstr "Avbryt sammanslagning..."
 
-#: git-gui.sh:2773 git-gui.sh:2801
+#: git-gui.sh:2922 git-gui.sh:2950
 msgid "Add..."
 msgstr "Lägg till..."
 
-#: git-gui.sh:2777
+#: git-gui.sh:2926
 msgid "Push..."
 msgstr "Sänd..."
 
-#: git-gui.sh:2781
+#: git-gui.sh:2930
 msgid "Delete Branch..."
 msgstr "Ta bort gren..."
 
-#: git-gui.sh:2791 git-gui.sh:3373
+#: git-gui.sh:2940 git-gui.sh:3563
 msgid "Options..."
 msgstr "Alternativ..."
 
-#: git-gui.sh:2802
+#: git-gui.sh:2951
 msgid "Remove..."
 msgstr "Ta bort..."
 
-#: git-gui.sh:2811 lib/choose_repository.tcl:50
+#: git-gui.sh:2960 lib/choose_repository.tcl:55
 msgid "Help"
 msgstr "Hjälp"
 
-#: git-gui.sh:2815 git-gui.sh:2819 lib/about.tcl:14
-#: lib/choose_repository.tcl:44 lib/choose_repository.tcl:53
+#: git-gui.sh:2964 git-gui.sh:2968 lib/choose_repository.tcl:49
+#: lib/choose_repository.tcl:58 lib/about.tcl:14
 #, tcl-format
 msgid "About %s"
 msgstr "Om %s"
 
-#: git-gui.sh:2843
+#: git-gui.sh:2992
 msgid "Online Documentation"
 msgstr "Webbdokumentation"
 
-#: git-gui.sh:2846 lib/choose_repository.tcl:47 lib/choose_repository.tcl:56
+#: git-gui.sh:2995 lib/choose_repository.tcl:52 lib/choose_repository.tcl:61
 msgid "Show SSH Key"
 msgstr "Visa SSH-nyckel"
 
-#: git-gui.sh:2965
+#: git-gui.sh:3014 git-gui.sh:3146
+msgid "Usage"
+msgstr "Användning"
+
+#: git-gui.sh:3095 lib/blame.tcl:573
+msgid "Error"
+msgstr "Fel"
+
+#: git-gui.sh:3126
 #, tcl-format
 msgid "fatal: cannot stat path %s: No such file or directory"
 msgstr ""
 "ödesdigert: kunde inte ta status på sökvägen %s: Fil eller katalog saknas"
 
-#: git-gui.sh:2997
+#: git-gui.sh:3159
 msgid "Current Branch:"
 msgstr "Aktuell gren:"
 
-#: git-gui.sh:3023
+#: git-gui.sh:3185
 msgid "Staged Changes (Will Commit)"
 msgstr "Köade ändringar (kommer att checkas in)"
 
-#: git-gui.sh:3043
+#: git-gui.sh:3205
 msgid "Unstaged Changes"
 msgstr "Oköade ändringar"
 
-#: git-gui.sh:3098
+#: git-gui.sh:3276
 msgid "Stage Changed"
 msgstr "Köa ändrade"
 
-#: git-gui.sh:3117 lib/transport.tcl:107 lib/transport.tcl:196
+#: git-gui.sh:3295 lib/transport.tcl:137 lib/transport.tcl:229
 msgid "Push"
 msgstr "Sänd"
 
-#: git-gui.sh:3152
+#: git-gui.sh:3330
 msgid "Initial Commit Message:"
 msgstr "Inledande incheckningsmeddelande:"
 
-#: git-gui.sh:3153
+#: git-gui.sh:3331
 msgid "Amended Commit Message:"
 msgstr "Utökat incheckningsmeddelande:"
 
-#: git-gui.sh:3154
+#: git-gui.sh:3332
 msgid "Amended Initial Commit Message:"
 msgstr "Utökat inledande incheckningsmeddelande:"
 
-#: git-gui.sh:3155
+#: git-gui.sh:3333
 msgid "Amended Merge Commit Message:"
 msgstr "Utökat incheckningsmeddelande för sammanslagning:"
 
-#: git-gui.sh:3156
+#: git-gui.sh:3334
 msgid "Merge Commit Message:"
 msgstr "Incheckningsmeddelande för sammanslagning:"
 
-#: git-gui.sh:3157
+#: git-gui.sh:3335
 msgid "Commit Message:"
 msgstr "Incheckningsmeddelande:"
 
-#: git-gui.sh:3206 git-gui.sh:3348 lib/console.tcl:73
+#: git-gui.sh:3384 git-gui.sh:3538 lib/console.tcl:73
 msgid "Copy All"
 msgstr "Kopiera alla"
 
-#: git-gui.sh:3230 lib/blame.tcl:104
+#: git-gui.sh:3408 lib/blame.tcl:105
 msgid "File:"
 msgstr "Fil:"
 
-#: git-gui.sh:3336
+#: git-gui.sh:3526
 msgid "Refresh"
 msgstr "Uppdatera"
 
-#: git-gui.sh:3357
+#: git-gui.sh:3547
 msgid "Decrease Font Size"
 msgstr "Minska teckensnittsstorlek"
 
-#: git-gui.sh:3361
+#: git-gui.sh:3551
 msgid "Increase Font Size"
 msgstr "Öka teckensnittsstorlek"
 
-#: git-gui.sh:3369 lib/blame.tcl:281
+#: git-gui.sh:3559 lib/blame.tcl:294
 msgid "Encoding"
 msgstr "Teckenkodning"
 
-#: git-gui.sh:3380
+#: git-gui.sh:3570
 msgid "Apply/Reverse Hunk"
 msgstr "Använd/återställ del"
 
-#: git-gui.sh:3385
+#: git-gui.sh:3575
 msgid "Apply/Reverse Line"
 msgstr "Använd/återställ rad"
 
-#: git-gui.sh:3404
+#: git-gui.sh:3594
 msgid "Run Merge Tool"
 msgstr "Starta verktyg för sammanslagning"
 
-#: git-gui.sh:3409
+#: git-gui.sh:3599
 msgid "Use Remote Version"
 msgstr "Använd versionen från fjärrarkivet"
 
-#: git-gui.sh:3413
+#: git-gui.sh:3603
 msgid "Use Local Version"
 msgstr "Använd lokala versionen"
 
-#: git-gui.sh:3417
+#: git-gui.sh:3607
 msgid "Revert To Base"
 msgstr "Återställ till basversionen"
 
-#: git-gui.sh:3435
+#: git-gui.sh:3625
 msgid "Visualize These Changes In The Submodule"
 msgstr "Visualisera ändringarna i undermodulen"
 
-#: git-gui.sh:3439
+#: git-gui.sh:3629
 msgid "Visualize Current Branch History In The Submodule"
 msgstr "Visualisera grenens historik i undermodulen"
 
-#: git-gui.sh:3443
+#: git-gui.sh:3633
 msgid "Visualize All Branch History In The Submodule"
 msgstr "Visualisera alla grenars historik i undermodulen"
 
-#: git-gui.sh:3448
+#: git-gui.sh:3638
 msgid "Start git gui In The Submodule"
 msgstr "Starta git gui i undermodulen"
 
-#: git-gui.sh:3483
+#: git-gui.sh:3673
 msgid "Unstage Hunk From Commit"
 msgstr "Ta bort del ur incheckningskö"
 
-#: git-gui.sh:3485
+#: git-gui.sh:3675
 msgid "Unstage Lines From Commit"
 msgstr "Ta bort rader ur incheckningskö"
 
-#: git-gui.sh:3487
+#: git-gui.sh:3677
 msgid "Unstage Line From Commit"
 msgstr "Ta bort rad ur incheckningskö"
 
-#: git-gui.sh:3490
+#: git-gui.sh:3680
 msgid "Stage Hunk For Commit"
 msgstr "Ställ del i incheckningskö"
 
-#: git-gui.sh:3492
+#: git-gui.sh:3682
 msgid "Stage Lines For Commit"
 msgstr "Ställ rader i incheckningskö"
 
-#: git-gui.sh:3494
+#: git-gui.sh:3684
 msgid "Stage Line For Commit"
 msgstr "Ställ rad i incheckningskö"
 
-#: git-gui.sh:3519
+#: git-gui.sh:3709
 msgid "Initializing..."
 msgstr "Initierar..."
 
-#: git-gui.sh:3658
+#: git-gui.sh:3852
 #, tcl-format
 msgid ""
 "Possible environment issues exist.\n"
 "\n"
 "The following environment variables are probably\n"
 "going to be ignored by any Git subprocess run\n"
@@ -546,23 +577,23 @@
 "\n"
 "Följande miljövariabler kommer troligen att\n"
 "ignoreras av alla Git-underprocesser som körs\n"
 "av %s:\n"
 "\n"
 
-#: git-gui.sh:3687
+#: git-gui.sh:3881
 msgid ""
 "\n"
 "This is due to a known issue with the\n"
 "Tcl binary distributed by Cygwin."
 msgstr ""
 "\n"
 "Detta beror på ett känt problem med\n"
 "Tcl-binären som följer med Cygwin."
 
-#: git-gui.sh:3692
+#: git-gui.sh:3886
 #, tcl-format
 msgid ""
 "\n"
 "\n"
 "A good replacement for %s\n"
 "is placing values for the user.name and\n"
@@ -573,1003 +604,630 @@
 "\n"
 "Du kan ersätta %s\n"
 "med att lägga in värden för inställningarna\n"
 "user.name och user.email i din personliga\n"
 "~/.gitconfig-fil.\n"
 
-#: lib/about.tcl:26
-msgid "git-gui - a graphical user interface for Git."
-msgstr "git-gui - ett grafiskt användargränssnitt för Git."
-
-#: lib/blame.tcl:72
-msgid "File Viewer"
-msgstr "Filvisare"
-
-#: lib/blame.tcl:78
-msgid "Commit:"
-msgstr "Incheckning:"
+#: lib/line.tcl:17
+msgid "Goto Line:"
+msgstr "Gå till rad:"
+
+#: lib/line.tcl:23
+msgid "Go"
+msgstr "Gå"
 
-#: lib/blame.tcl:271
-msgid "Copy Commit"
-msgstr "Kopiera incheckning"
+#: lib/console.tcl:59
+msgid "Working... please wait..."
+msgstr "Arbetar... vänta..."
 
-#: lib/blame.tcl:275
-msgid "Find Text..."
-msgstr "Sök text..."
+#: lib/console.tcl:81 lib/checkout_op.tcl:146 lib/sshkey.tcl:55
+#: lib/database.tcl:30
+msgid "Close"
+msgstr "Stäng"
 
-#: lib/blame.tcl:284
-msgid "Do Full Copy Detection"
-msgstr "Gör full kopieringsigenkänning"
+#: lib/console.tcl:186
+msgid "Success"
+msgstr "Lyckades"
 
-#: lib/blame.tcl:288
-msgid "Show History Context"
-msgstr "Visa historiksammanhang"
+#: lib/console.tcl:200
+msgid "Error: Command Failed"
+msgstr "Fel: Kommando misslyckades"
 
-#: lib/blame.tcl:291
-msgid "Blame Parent Commit"
-msgstr "Klandra föräldraincheckning"
+#: lib/checkout_op.tcl:85
+#, tcl-format
+msgid "Fetching %s from %s"
+msgstr "Hämtar %s från %s"
 
-#: lib/blame.tcl:450
+#: lib/checkout_op.tcl:133
 #, tcl-format
-msgid "Reading %s..."
-msgstr "Läser %s..."
+msgid "fatal: Cannot resolve %s"
+msgstr "ödesdigert: Kunde inte slå upp %s"
 
-#: lib/blame.tcl:581
-msgid "Loading copy/move tracking annotations..."
-msgstr "Läser annoteringar för kopiering/flyttning..."
+#: lib/checkout_op.tcl:175
+#, tcl-format
+msgid "Branch '%s' does not exist."
+msgstr "Grenen \"%s\" finns inte."
 
-#: lib/blame.tcl:601
-msgid "lines annotated"
-msgstr "rader annoterade"
+#: lib/checkout_op.tcl:194
+#, tcl-format
+msgid "Failed to configure simplified git-pull for '%s'."
+msgstr "Kunde inte konfigurera förenklad git-pull för '%s'."
 
-#: lib/blame.tcl:793
-msgid "Loading original location annotations..."
-msgstr "Läser in annotering av originalplacering..."
+#: lib/checkout_op.tcl:202 lib/branch_rename.tcl:102
+#, tcl-format
+msgid "Branch '%s' already exists."
+msgstr "Grenen \"%s\" finns redan."
 
-#: lib/blame.tcl:796
-msgid "Annotation complete."
-msgstr "Annotering fullbordad."
+#: lib/checkout_op.tcl:229
+#, tcl-format
+msgid ""
+"Branch '%s' already exists.\n"
+"\n"
+"It cannot fast-forward to %s.\n"
+"A merge is required."
+msgstr ""
+"Grenen \"%s\" finns redan.\n"
+"\n"
+"Den kan inte snabbspolas till %s.\n"
+"En sammanslagning krävs."
 
-#: lib/blame.tcl:826
-msgid "Busy"
-msgstr "Upptagen"
+#: lib/checkout_op.tcl:243
+#, tcl-format
+msgid "Merge strategy '%s' not supported."
+msgstr "Sammanslagningsstrategin \"%s\" stöds inte."
 
-#: lib/blame.tcl:827
-msgid "Annotation process is already running."
-msgstr "Annoteringsprocess körs redan."
+#: lib/checkout_op.tcl:262
+#, tcl-format
+msgid "Failed to update '%s'."
+msgstr "Misslyckades med att uppdatera \"%s\"."
 
-#: lib/blame.tcl:866
-msgid "Running thorough copy detection..."
-msgstr "Kör grundlig kopieringsigenkänning..."
+#: lib/checkout_op.tcl:274
+msgid "Staging area (index) is already locked."
+msgstr "Köområdet (index) är redan låst."
 
-#: lib/blame.tcl:934
-msgid "Loading annotation..."
-msgstr "Läser in annotering..."
+#: lib/checkout_op.tcl:289
+msgid ""
+"Last scanned state does not match repository state.\n"
+"\n"
+"Another Git program has modified this repository since the last scan.  A "
+"rescan must be performed before the current branch can be changed.\n"
+"\n"
+"The rescan will be automatically started now.\n"
+msgstr ""
+"Det senaste inlästa tillståndet motsvarar inte tillståndet i arkivet.\n"
+"\n"
+"Ett annat Git-program har ändrat arkivet sedan senaste avsökningen. Du måste "
+"utföra en ny sökning innan den aktuella grenen kan ändras.\n"
+"\n"
+"Sökningen kommer att startas automatiskt nu.\n"
 
-#: lib/blame.tcl:987
-msgid "Author:"
-msgstr "Författare:"
+#: lib/checkout_op.tcl:345
+#, tcl-format
+msgid "Updating working directory to '%s'..."
+msgstr "Uppdaterar arbetskatalogen till \"%s\"..."
 
-#: lib/blame.tcl:991
-msgid "Committer:"
-msgstr "Incheckare:"
+#: lib/checkout_op.tcl:346
+msgid "files checked out"
+msgstr "filer utcheckade"
 
-#: lib/blame.tcl:996
-msgid "Original File:"
-msgstr "Ursprunglig fil:"
+#: lib/checkout_op.tcl:376
+#, tcl-format
+msgid "Aborted checkout of '%s' (file level merging is required)."
+msgstr "Avbryter utcheckning av \"%s\" (sammanslagning på filnivå krävs)."
 
-#: lib/blame.tcl:1044
-msgid "Cannot find HEAD commit:"
-msgstr "Hittar inte incheckning för HEAD:"
+#: lib/checkout_op.tcl:377
+msgid "File level merge required."
+msgstr "Sammanslagning på filnivå krävs."
 
-#: lib/blame.tcl:1099
-msgid "Cannot find parent commit:"
-msgstr "Hittar inte föräldraincheckning:"
+#: lib/checkout_op.tcl:381
+#, tcl-format
+msgid "Staying on branch '%s'."
+msgstr "Stannar på grenen \"%s\"."
 
-#: lib/blame.tcl:1114
-msgid "Unable to display parent"
-msgstr "Kan inte visa förälder"
+#: lib/checkout_op.tcl:452
+msgid ""
+"You are no longer on a local branch.\n"
+"\n"
+"If you wanted to be on a branch, create one now starting from 'This Detached "
+"Checkout'."
+msgstr ""
+"Du är inte längre på en lokal gren.\n"
+"\n"
+"Om du ville vara på en gren skapar du en nu, baserad på \"Denna frånkopplade "
+"utcheckning\"."
 
-#: lib/blame.tcl:1115 lib/diff.tcl:323
-msgid "Error loading diff:"
-msgstr "Fel vid inläsning av differens:"
+#: lib/checkout_op.tcl:503 lib/checkout_op.tcl:507
+#, tcl-format
+msgid "Checked out '%s'."
+msgstr "Checkade ut \"%s\"."
 
-#: lib/blame.tcl:1255
-msgid "Originally By:"
-msgstr "Ursprungligen av:"
+#: lib/checkout_op.tcl:535
+#, tcl-format
+msgid "Resetting '%s' to '%s' will lose the following commits:"
+msgstr ""
+"Om du återställer \"%s\" till \"%s\" går följande incheckningar förlorade:"
 
-#: lib/blame.tcl:1261
-msgid "In File:"
-msgstr "I filen:"
+#: lib/checkout_op.tcl:557
+msgid "Recovering lost commits may not be easy."
+msgstr "Det kanske inte är så enkelt att återskapa förlorade incheckningar."
 
-#: lib/blame.tcl:1266
-msgid "Copied Or Moved Here By:"
-msgstr "Kopierad eller flyttad hit av:"
+#: lib/checkout_op.tcl:562
+#, tcl-format
+msgid "Reset '%s'?"
+msgstr "Återställa \"%s\"?"
 
-#: lib/branch_checkout.tcl:16 lib/branch_checkout.tcl:21
-msgid "Checkout Branch"
-msgstr "Checka ut gren"
+#: lib/checkout_op.tcl:567 lib/merge.tcl:166 lib/tools_dlg.tcl:336
+msgid "Visualize"
+msgstr "Visualisera"
 
-#: lib/branch_checkout.tcl:26
-msgid "Checkout"
-msgstr "Checka ut"
+#: lib/checkout_op.tcl:571 lib/branch_create.tcl:85
+msgid "Reset"
+msgstr "Återställ"
 
-#: lib/branch_checkout.tcl:30 lib/branch_create.tcl:37
-#: lib/branch_delete.tcl:34 lib/branch_rename.tcl:32 lib/browser.tcl:286
-#: lib/checkout_op.tcl:579 lib/choose_font.tcl:45 lib/merge.tcl:172
-#: lib/option.tcl:127 lib/remote_add.tcl:34 lib/remote_branch_delete.tcl:43
-#: lib/tools_dlg.tcl:41 lib/tools_dlg.tcl:202 lib/tools_dlg.tcl:345
-#: lib/transport.tcl:111
+#: lib/checkout_op.tcl:579 lib/transport.tcl:141 lib/remote_add.tcl:34
+#: lib/browser.tcl:292 lib/merge.tcl:174 lib/branch_checkout.tcl:30
+#: lib/choose_font.tcl:45 lib/option.tcl:127 lib/tools_dlg.tcl:41
+#: lib/tools_dlg.tcl:202 lib/tools_dlg.tcl:345 lib/branch_rename.tcl:32
+#: lib/remote_branch_delete.tcl:43 lib/branch_create.tcl:37
+#: lib/branch_delete.tcl:34
 msgid "Cancel"
 msgstr "Avbryt"
 
-#: lib/branch_checkout.tcl:35 lib/browser.tcl:291 lib/tools_dlg.tcl:321
-msgid "Revision"
-msgstr "Revision"
+#: lib/checkout_op.tcl:635
+#, tcl-format
+msgid ""
+"Failed to set current branch.\n"
+"\n"
+"This working directory is only partially switched.  We successfully updated "
+"your files, but failed to update an internal Git file.\n"
+"\n"
+"This should not have occurred.  %s will now close and give up."
+msgstr ""
+"Kunde inte ställa in aktuell gren.\n"
+"\n"
+"Arbetskatalogen har bara växlats delvis. Vi uppdaterade filerna utan "
+"problem, men kunde inte uppdatera en intern fil i Git.\n"
+"\n"
+"Detta skulle inte ha hänt. %s kommer nu stängas och ge upp."
 
-#: lib/branch_checkout.tcl:39 lib/branch_create.tcl:69 lib/option.tcl:287
-msgid "Options"
-msgstr "Alternativ"
+#: lib/transport.tcl:6 lib/remote_add.tcl:132
+#, tcl-format
+msgid "fetch %s"
+msgstr "hämta %s"
 
-#: lib/branch_checkout.tcl:42 lib/branch_create.tcl:92
-msgid "Fetch Tracking Branch"
-msgstr "Hämta spårande gren"
+#: lib/transport.tcl:7
+#, tcl-format
+msgid "Fetching new changes from %s"
+msgstr "Hämtar nya ändringar från %s"
 
-#: lib/branch_checkout.tcl:47
-msgid "Detach From Local Branch"
-msgstr "Koppla bort från lokal gren"
+#: lib/transport.tcl:18
+#, tcl-format
+msgid "remote prune %s"
+msgstr "fjärrborttagning %s"
 
-#: lib/branch_create.tcl:23
-msgid "Create Branch"
-msgstr "Skapa gren"
+#: lib/transport.tcl:19
+#, tcl-format
+msgid "Pruning tracking branches deleted from %s"
+msgstr "Tar bort spårande grenar som tagits bort från %s"
 
-#: lib/branch_create.tcl:28
-msgid "Create New Branch"
-msgstr "Skapa ny gren"
+#: lib/transport.tcl:25
+msgid "fetch all remotes"
+msgstr "hämta alla fjärrarkiv"
 
-#: lib/branch_create.tcl:33 lib/choose_repository.tcl:389
-msgid "Create"
-msgstr "Skapa"
+#: lib/transport.tcl:26
+msgid "Fetching new changes from all remotes"
+msgstr "Hämtar nya ändringar från alla fjärrarkiv"
 
-#: lib/branch_create.tcl:42
-msgid "Branch Name"
-msgstr "Namn på gren"
+#: lib/transport.tcl:40
+msgid "remote prune all remotes"
+msgstr "rensa alla fjärrarkiv"
+
+#: lib/transport.tcl:41
+msgid "Pruning tracking branches deleted from all remotes"
+msgstr "Rensar spårande grenar som tagits bort, från alla fjärrarkiv"
 
-#: lib/branch_create.tcl:44 lib/remote_add.tcl:41 lib/tools_dlg.tcl:51
-msgid "Name:"
-msgstr "Namn:"
+#: lib/transport.tcl:54 lib/transport.tcl:92 lib/transport.tcl:110
+#: lib/remote_add.tcl:162
+#, tcl-format
+msgid "push %s"
+msgstr "sänd %s"
 
-#: lib/branch_create.tcl:57
-msgid "Match Tracking Branch Name"
-msgstr "Använd namn på spårad gren"
+#: lib/transport.tcl:55
+#, tcl-format
+msgid "Pushing changes to %s"
+msgstr "Sänder ändringar till %s"
 
-#: lib/branch_create.tcl:66
-msgid "Starting Revision"
-msgstr "Inledande revision"
+#: lib/transport.tcl:93
+#, tcl-format
+msgid "Mirroring to %s"
+msgstr "Speglar till %s"
 
-#: lib/branch_create.tcl:72
-msgid "Update Existing Branch:"
-msgstr "Uppdatera befintlig gren:"
+#: lib/transport.tcl:111
+#, tcl-format
+msgid "Pushing %s %s to %s"
+msgstr "Sänder %s %s till %s"
 
-#: lib/branch_create.tcl:75
-msgid "No"
-msgstr "Nej"
+#: lib/transport.tcl:132
+msgid "Push Branches"
+msgstr "Sänd grenar"
 
-#: lib/branch_create.tcl:80
-msgid "Fast Forward Only"
-msgstr "Endast snabbspolning"
+#: lib/transport.tcl:147
+msgid "Source Branches"
+msgstr "Källgrenar"
 
-#: lib/branch_create.tcl:85 lib/checkout_op.tcl:571
-msgid "Reset"
-msgstr "Återställ"
+#: lib/transport.tcl:162
+msgid "Destination Repository"
+msgstr "Destinationsarkiv"
 
-#: lib/branch_create.tcl:97
-msgid "Checkout After Creation"
-msgstr "Checka ut när skapad"
+#: lib/transport.tcl:165 lib/remote_branch_delete.tcl:51
+msgid "Remote:"
+msgstr "Fjärrarkiv:"
 
-#: lib/branch_create.tcl:132
-msgid "Please select a tracking branch."
-msgstr "Välj en gren att spåra."
+#: lib/transport.tcl:187 lib/remote_branch_delete.tcl:72
+msgid "Arbitrary Location:"
+msgstr "Godtycklig plats:"
 
-#: lib/branch_create.tcl:141
-#, tcl-format
-msgid "Tracking branch %s is not a branch in the remote repository."
-msgstr "Den spårade grenen %s är inte en gren i fjärrarkivet."
+#: lib/transport.tcl:205
+msgid "Transfer Options"
+msgstr "Överföringsalternativ"
 
-#: lib/branch_create.tcl:154 lib/branch_rename.tcl:92
-msgid "Please supply a branch name."
-msgstr "Ange ett namn för grenen."
+#: lib/transport.tcl:207
+msgid "Force overwrite existing branch (may discard changes)"
+msgstr "Tvinga överskrivning av befintlig gren (kan kasta bort ändringar)"
 
-#: lib/branch_create.tcl:165 lib/branch_rename.tcl:112
-#, tcl-format
-msgid "'%s' is not an acceptable branch name."
-msgstr "\"%s\" kan inte användas som namn på grenen."
+#: lib/transport.tcl:211
+msgid "Use thin pack (for slow network connections)"
+msgstr "Använd tunt paket (för långsamma nätverksanslutningar)"
 
-#: lib/branch_delete.tcl:16
-msgid "Delete Branch"
-msgstr "Ta bort gren"
+#: lib/transport.tcl:215
+msgid "Include tags"
+msgstr "Ta med taggar"
 
-#: lib/branch_delete.tcl:21
-msgid "Delete Local Branch"
-msgstr "Ta bort lokal gren"
+#: lib/remote_add.tcl:20
+msgid "Add Remote"
+msgstr "Lägg till fjärrarkiv"
 
-#: lib/branch_delete.tcl:39
-msgid "Local Branches"
-msgstr "Lokala grenar"
+#: lib/remote_add.tcl:25
+msgid "Add New Remote"
+msgstr "Lägg till nytt fjärrarkiv"
 
-#: lib/branch_delete.tcl:51
-msgid "Delete Only If Merged Into"
-msgstr "Ta bara bort om sammanslagen med"
+#: lib/remote_add.tcl:30 lib/tools_dlg.tcl:37
+msgid "Add"
+msgstr "Lägg till"
 
-#: lib/branch_delete.tcl:53 lib/remote_branch_delete.tcl:120
-msgid "Always (Do not perform merge checks)"
-msgstr "Alltid (utför inte sammanslagningstest)"
+#: lib/remote_add.tcl:39
+msgid "Remote Details"
+msgstr "Detaljer för fjärrarkiv"
 
-#: lib/branch_delete.tcl:103
-#, tcl-format
-msgid "The following branches are not completely merged into %s:"
-msgstr "Följande grenar är inte till fullo sammanslagna med %s:"
+#: lib/remote_add.tcl:41 lib/tools_dlg.tcl:51 lib/branch_create.tcl:44
+msgid "Name:"
+msgstr "Namn:"
 
-#: lib/branch_delete.tcl:115 lib/remote_branch_delete.tcl:218
-msgid ""
-"Recovering deleted branches is difficult.\n"
-"\n"
-"Delete the selected branches?"
-msgstr ""
-"Det kan vara svårt att återställa borttagna grenar.\n"
-"\n"
-"Ta bort de valda grenarna?"
+#: lib/remote_add.tcl:50
+msgid "Location:"
+msgstr "Plats:"
 
-#: lib/branch_delete.tcl:141
-#, tcl-format
-msgid ""
-"Failed to delete branches:\n"
-"%s"
-msgstr ""
-"Kunde inte ta bort grenar:\n"
-"%s"
+#: lib/remote_add.tcl:60
+msgid "Further Action"
+msgstr "Ytterligare åtgärd"
 
-#: lib/branch_rename.tcl:15 lib/branch_rename.tcl:23
-msgid "Rename Branch"
-msgstr "Byt namn på gren"
+#: lib/remote_add.tcl:63
+msgid "Fetch Immediately"
+msgstr "Hämta omedelbart"
 
-#: lib/branch_rename.tcl:28
-msgid "Rename"
-msgstr "Byt namn"
+#: lib/remote_add.tcl:69
+msgid "Initialize Remote Repository and Push"
+msgstr "Initiera fjärrarkiv och sänd till"
 
-#: lib/branch_rename.tcl:38
-msgid "Branch:"
-msgstr "Gren:"
+#: lib/remote_add.tcl:75
+msgid "Do Nothing Else Now"
+msgstr "Gör ingent mer nu"
 
-#: lib/branch_rename.tcl:46
-msgid "New Name:"
-msgstr "Nytt namn:"
+#: lib/remote_add.tcl:100
+msgid "Please supply a remote name."
+msgstr "Ange ett namn för fjärrarkivet."
 
-#: lib/branch_rename.tcl:81
-msgid "Please select a branch to rename."
-msgstr "Välj en gren att byta namn på."
+#: lib/remote_add.tcl:113
+#, tcl-format
+msgid "'%s' is not an acceptable remote name."
+msgstr "\"%s\" kan inte användas som namn på fjärrarkivet."
 
-#: lib/branch_rename.tcl:102 lib/checkout_op.tcl:202
+#: lib/remote_add.tcl:124
 #, tcl-format
-msgid "Branch '%s' already exists."
-msgstr "Grenen \"%s\" finns redan."
+msgid "Failed to add remote '%s' of location '%s'."
+msgstr "Kunde inte lägga till fjärrarkivet \"%s\" på platsen \"%s\"."
 
-#: lib/branch_rename.tcl:123
+#: lib/remote_add.tcl:133
 #, tcl-format
-msgid "Failed to rename '%s'."
-msgstr "Kunde inte byta namn på \"%s\"."
+msgid "Fetching the %s"
+msgstr "Hämtar %s"
+
+#: lib/remote_add.tcl:156
+#, tcl-format
+msgid "Do not know how to initialize repository at location '%s'."
+msgstr "Vet inte hur arkivet på platsen \"%s\" skall initieras."
+
+#: lib/remote_add.tcl:163
+#, tcl-format
+msgid "Setting up the %s (at %s)"
+msgstr "Konfigurerar %s (på %s)"
 
 #: lib/browser.tcl:17
 msgid "Starting..."
 msgstr "Startar..."
 
 #: lib/browser.tcl:27
 msgid "File Browser"
 msgstr "Filbläddrare"
 
-#: lib/browser.tcl:126 lib/browser.tcl:143
+#: lib/browser.tcl:132 lib/browser.tcl:149
 #, tcl-format
 msgid "Loading %s..."
 msgstr "Läser %s..."
 
-#: lib/browser.tcl:187
+#: lib/browser.tcl:193
 msgid "[Up To Parent]"
 msgstr "[Upp till förälder]"
 
-#: lib/browser.tcl:269 lib/browser.tcl:276
+#: lib/browser.tcl:275 lib/browser.tcl:282
 msgid "Browse Branch Files"
 msgstr "Bläddra filer på grenen"
 
-#: lib/browser.tcl:282 lib/choose_repository.tcl:404
-#: lib/choose_repository.tcl:491 lib/choose_repository.tcl:500
-#: lib/choose_repository.tcl:1027
+#: lib/browser.tcl:288 lib/choose_repository.tcl:422
+#: lib/choose_repository.tcl:509 lib/choose_repository.tcl:518
+#: lib/choose_repository.tcl:1074
 msgid "Browse"
 msgstr "Bläddra"
 
-#: lib/checkout_op.tcl:85
-#, tcl-format
-msgid "Fetching %s from %s"
-msgstr "Hämtar %s från %s"
-
-#: lib/checkout_op.tcl:133
-#, tcl-format
-msgid "fatal: Cannot resolve %s"
-msgstr "ödesdigert: Kunde inte slå upp %s"
-
-#: lib/checkout_op.tcl:146 lib/console.tcl:81 lib/database.tcl:30
-#: lib/sshkey.tcl:55
-msgid "Close"
-msgstr "Stäng"
-
-#: lib/checkout_op.tcl:175
-#, tcl-format
-msgid "Branch '%s' does not exist."
-msgstr "Grenen \"%s\" finns inte."
-
-#: lib/checkout_op.tcl:194
-#, tcl-format
-msgid "Failed to configure simplified git-pull for '%s'."
-msgstr "Kunde inte konfigurera förenklad git-pull för '%s'."
+#: lib/browser.tcl:297 lib/branch_checkout.tcl:35 lib/tools_dlg.tcl:321
+msgid "Revision"
+msgstr "Revision"
 
-#: lib/checkout_op.tcl:229
-#, tcl-format
+#: lib/merge.tcl:13
 msgid ""
-"Branch '%s' already exists.\n"
+"Cannot merge while amending.\n"
 "\n"
-"It cannot fast-forward to %s.\n"
-"A merge is required."
+"You must finish amending this commit before starting any type of merge.\n"
 msgstr ""
-"Grenen \"%s\" finns redan.\n"
+"Kan inte slå ihop vid utökning.\n"
 "\n"
-"Den kan inte snabbspolas till %s.\n"
-"En sammanslagning krävs."
-
-#: lib/checkout_op.tcl:243
-#, tcl-format
-msgid "Merge strategy '%s' not supported."
-msgstr "Sammanslagningsstrategin \"%s\" stöds inte."
-
-#: lib/checkout_op.tcl:262
-#, tcl-format
-msgid "Failed to update '%s'."
-msgstr "Misslyckades med att uppdatera \"%s\"."
-
-#: lib/checkout_op.tcl:274
-msgid "Staging area (index) is already locked."
-msgstr "Köområdet (index) är redan låst."
+"Du måste göra färdig utökningen av incheckningen innan du påbörjar någon "
+"slags sammanslagning.\n"
 
-#: lib/checkout_op.tcl:289
+#: lib/merge.tcl:27
 msgid ""
 "Last scanned state does not match repository state.\n"
 "\n"
 "Another Git program has modified this repository since the last scan.  A "
-"rescan must be performed before the current branch can be changed.\n"
+"rescan must be performed before a merge can be performed.\n"
 "\n"
 "The rescan will be automatically started now.\n"
 msgstr ""
 "Det senaste inlästa tillståndet motsvarar inte tillståndet i arkivet.\n"
 "\n"
 "Ett annat Git-program har ändrat arkivet sedan senaste avsökningen. Du måste "
-"utföra en ny sökning innan den aktuella grenen kan ändras.\n"
+"utföra en ny sökning innan du kan utföra en sammanslagning.\n"
 "\n"
 "Sökningen kommer att startas automatiskt nu.\n"
 
-#: lib/checkout_op.tcl:345
-#, tcl-format
-msgid "Updating working directory to '%s'..."
-msgstr "Uppdaterar arbetskatalogen till \"%s\"..."
-
-#: lib/checkout_op.tcl:346
-msgid "files checked out"
-msgstr "filer utcheckade"
-
-#: lib/checkout_op.tcl:376
-#, tcl-format
-msgid "Aborted checkout of '%s' (file level merging is required)."
-msgstr "Avbryter utcheckning av \"%s\" (sammanslagning på filnivå krävs)."
-
-#: lib/checkout_op.tcl:377
-msgid "File level merge required."
-msgstr "Sammanslagning på filnivå krävs."
-
-#: lib/checkout_op.tcl:381
+#: lib/merge.tcl:45
 #, tcl-format
-msgid "Staying on branch '%s'."
-msgstr "Stannar på grenen \"%s\"."
-
-#: lib/checkout_op.tcl:452
 msgid ""
-"You are no longer on a local branch.\n"
+"You are in the middle of a conflicted merge.\n"
 "\n"
-"If you wanted to be on a branch, create one now starting from 'This Detached "
-"Checkout'."
+"File %s has merge conflicts.\n"
+"\n"
+"You must resolve them, stage the file, and commit to complete the current "
+"merge.  Only then can you begin another merge.\n"
 msgstr ""
-"Du är inte längre på en lokal gren.\n"
+"Du är mitt i en sammanslagning med konflikter.\n"
 "\n"
-"Om du ville vara på en gren skapar du en nu, baserad på \"Denna frånkopplade "
-"utcheckning\"."
-
-#: lib/checkout_op.tcl:503 lib/checkout_op.tcl:507
-#, tcl-format
-msgid "Checked out '%s'."
-msgstr "Checkade ut \"%s\"."
+"Filen %s har sammanslagningskonflikter.\n"
+"\n"
+"Du måste lösa dem, köa filen och checka in för att fullborda den aktuella "
+"sammanslagningen. När du gjort det kan du påbörja en ny sammanslagning.\n"
 
-#: lib/checkout_op.tcl:535
+#: lib/merge.tcl:55
 #, tcl-format
-msgid "Resetting '%s' to '%s' will lose the following commits:"
+msgid ""
+"You are in the middle of a change.\n"
+"\n"
+"File %s is modified.\n"
+"\n"
+"You should complete the current commit before starting a merge.  Doing so "
+"will help you abort a failed merge, should the need arise.\n"
 msgstr ""
-"Om du återställer \"%s\" till \"%s\" går följande incheckningar förlorade:"
+"Du är mitt i en ändring.\n"
+"\n"
+"Filen %s har ändringar.\n"
+"\n"
+"Du bör fullborda den aktuella incheckningen innan du påbörjar en "
+"sammanslagning. Om du gör det blir det enklare att avbryta en misslyckad "
+"sammanslagning, om det skulle vara nödvändigt.\n"
 
-#: lib/checkout_op.tcl:557
-msgid "Recovering lost commits may not be easy."
-msgstr "Det kanske inte är så enkelt att återskapa förlorade incheckningar."
+#: lib/merge.tcl:108
+#, tcl-format
+msgid "%s of %s"
+msgstr "%s av %s"
 
-#: lib/checkout_op.tcl:562
+#: lib/merge.tcl:122
 #, tcl-format
-msgid "Reset '%s'?"
-msgstr "Återställa \"%s\"?"
+msgid "Merging %s and %s..."
+msgstr "Slår ihop %s och %s..."
 
-#: lib/checkout_op.tcl:567 lib/merge.tcl:164 lib/tools_dlg.tcl:336
-msgid "Visualize"
-msgstr "Visualisera"
+#: lib/merge.tcl:133
+msgid "Merge completed successfully."
+msgstr "Sammanslagningen avslutades framgångsrikt."
 
-#: lib/checkout_op.tcl:635
+#: lib/merge.tcl:135
+msgid "Merge failed.  Conflict resolution is required."
+msgstr "Sammanslagningen misslyckades. Du måste lösa konflikterna."
+
+#: lib/merge.tcl:160
 #, tcl-format
+msgid "Merge Into %s"
+msgstr "Slå ihop i %s"
+
+#: lib/merge.tcl:179
+msgid "Revision To Merge"
+msgstr "Revisioner att slå ihop"
+
+#: lib/merge.tcl:214
 msgid ""
-"Failed to set current branch.\n"
+"Cannot abort while amending.\n"
 "\n"
-"This working directory is only partially switched.  We successfully updated "
-"your files, but failed to update an internal Git file.\n"
+"You must finish amending this commit.\n"
+msgstr ""
+"Kan inte avbryta vid utökning.\n"
 "\n"
-"This should not have occurred.  %s will now close and give up."
+"Du måste göra dig färdig med att utöka incheckningen.\n"
+
+#: lib/merge.tcl:224
+msgid ""
+"Abort merge?\n"
+"\n"
+"Aborting the current merge will cause *ALL* uncommitted changes to be lost.\n"
+"\n"
+"Continue with aborting the current merge?"
 msgstr ""
-"Kunde inte ställa in aktuell gren.\n"
+"Avbryt sammanslagning?\n"
 "\n"
-"Arbetskatalogen har bara växlats delvis. Vi uppdaterade filerna utan "
-"problem, men kunde inte uppdatera en intern fil i Git.\n"
+"Om du avbryter sammanslagningen kommer *ALLA* ej incheckade ändringar att gå "
+"förlorade.\n"
 "\n"
-"Detta skulle inte ha hänt. %s kommer nu stängas och ge upp."
-
-#: lib/choose_font.tcl:41
-msgid "Select"
-msgstr "Välj"
-
-#: lib/choose_font.tcl:55
-msgid "Font Family"
-msgstr "Teckensnittsfamilj"
-
-#: lib/choose_font.tcl:76
-msgid "Font Size"
-msgstr "Storlek"
-
-#: lib/choose_font.tcl:93
-msgid "Font Example"
-msgstr "Exempel"
+"Gå vidare med att avbryta den aktuella sammanslagningen?"
 
-#: lib/choose_font.tcl:105
+#: lib/merge.tcl:230
 msgid ""
-"This is example text.\n"
-"If you like this text, it can be your font."
+"Reset changes?\n"
+"\n"
+"Resetting the changes will cause *ALL* uncommitted changes to be lost.\n"
+"\n"
+"Continue with resetting the current changes?"
 msgstr ""
-"Detta är en exempeltext.\n"
-"Om du tycker om den här texten kan den vara ditt teckensnitt."
-
-#: lib/choose_repository.tcl:28
-msgid "Git Gui"
-msgstr "Git Gui"
-
-#: lib/choose_repository.tcl:87 lib/choose_repository.tcl:394
-msgid "Create New Repository"
-msgstr "Skapa nytt arkiv"
-
-#: lib/choose_repository.tcl:93
-msgid "New..."
-msgstr "Nytt..."
-
-#: lib/choose_repository.tcl:100 lib/choose_repository.tcl:478
-msgid "Clone Existing Repository"
-msgstr "Klona befintligt arkiv"
-
-#: lib/choose_repository.tcl:111
-msgid "Clone..."
-msgstr "Klona..."
+"Återställ ändringar?\n"
+"\n"
+"Om du återställer ändringarna kommer *ALLA* ej incheckade ändringar att gå "
+"förlorade.\n"
+"\n"
+"Gå vidare med att återställa de aktuella ändringarna?"
 
-#: lib/choose_repository.tcl:118 lib/choose_repository.tcl:1017
-msgid "Open Existing Repository"
-msgstr "Öppna befintligt arkiv"
+#: lib/merge.tcl:241
+msgid "Aborting"
+msgstr "Avbryter"
 
-#: lib/choose_repository.tcl:124
-msgid "Open..."
-msgstr "Öppna..."
+#: lib/merge.tcl:241
+msgid "files reset"
+msgstr "filer återställda"
 
-#: lib/choose_repository.tcl:137
-msgid "Recent Repositories"
-msgstr "Senaste arkiven"
+#: lib/merge.tcl:269
+msgid "Abort failed."
+msgstr "Misslyckades avbryta."
 
-#: lib/choose_repository.tcl:143
-msgid "Open Recent Repository:"
-msgstr "Öppna tidigare arkiv:"
+#: lib/merge.tcl:271
+msgid "Abort completed.  Ready."
+msgstr "Avbrytning fullbordad. Redo."
 
-#: lib/choose_repository.tcl:313 lib/choose_repository.tcl:320
-#: lib/choose_repository.tcl:327
+#: lib/tools.tcl:75
 #, tcl-format
-msgid "Failed to create repository %s:"
-msgstr "Kunde inte skapa arkivet %s:"
+msgid "Running %s requires a selected file."
+msgstr "För att starta %s måste du välja en fil."
 
-#: lib/choose_repository.tcl:399
-msgid "Directory:"
-msgstr "Katalog:"
+#: lib/tools.tcl:91
+#, tcl-format
+msgid "Are you sure you want to run %1$s on file \"%2$s\"?"
+msgstr "Är du säker på att du vill starta %1$s med filen \"%2$s\"?"
 
-#: lib/choose_repository.tcl:429 lib/choose_repository.tcl:550
-#: lib/choose_repository.tcl:1051
-msgid "Git Repository"
-msgstr "Gitarkiv"
+#: lib/tools.tcl:95
+#, tcl-format
+msgid "Are you sure you want to run %s?"
+msgstr "Är du säker på att du vill starta %s?"
 
-#: lib/choose_repository.tcl:454
+#: lib/tools.tcl:116
 #, tcl-format
-msgid "Directory %s already exists."
-msgstr "Katalogen %s finns redan."
+msgid "Tool: %s"
+msgstr "Verktyg: %s"
 
-#: lib/choose_repository.tcl:458
+#: lib/tools.tcl:117
 #, tcl-format
-msgid "File %s already exists."
-msgstr "Filen %s finns redan."
+msgid "Running: %s"
+msgstr "Exekverar: %s"
 
-#: lib/choose_repository.tcl:473
-msgid "Clone"
-msgstr "Klona"
+#: lib/tools.tcl:155
+#, tcl-format
+msgid "Tool completed successfully: %s"
+msgstr "Verktyget avslutades framgångsrikt: %s"
 
-#: lib/choose_repository.tcl:486
-msgid "Source Location:"
-msgstr "Plats för källkod:"
+#: lib/tools.tcl:157
+#, tcl-format
+msgid "Tool failed: %s"
+msgstr "Verktyget misslyckades: %s"
 
-#: lib/choose_repository.tcl:495
-msgid "Target Directory:"
-msgstr "Målkatalog:"
+#: lib/branch_checkout.tcl:16 lib/branch_checkout.tcl:21
+msgid "Checkout Branch"
+msgstr "Checka ut gren"
 
-#: lib/choose_repository.tcl:505
-msgid "Clone Type:"
-msgstr "Typ av klon:"
+#: lib/branch_checkout.tcl:26
+msgid "Checkout"
+msgstr "Checka ut"
 
-#: lib/choose_repository.tcl:510
-msgid "Standard (Fast, Semi-Redundant, Hardlinks)"
-msgstr "Standard (snabb, semiredundant, hårda länkar)"
+#: lib/branch_checkout.tcl:39 lib/option.tcl:310 lib/branch_create.tcl:69
+msgid "Options"
+msgstr "Alternativ"
 
-#: lib/choose_repository.tcl:515
-msgid "Full Copy (Slower, Redundant Backup)"
-msgstr "Full kopia (långsammare, redundant säkerhetskopia)"
+#: lib/branch_checkout.tcl:42 lib/branch_create.tcl:92
+msgid "Fetch Tracking Branch"
+msgstr "Hämta spårande gren"
 
-#: lib/choose_repository.tcl:520
-msgid "Shared (Fastest, Not Recommended, No Backup)"
-msgstr "Delad (snabbast, rekommenderas ej, ingen säkerhetskopia)"
+#: lib/branch_checkout.tcl:47
+msgid "Detach From Local Branch"
+msgstr "Koppla bort från lokal gren"
 
-#: lib/choose_repository.tcl:556 lib/choose_repository.tcl:603
-#: lib/choose_repository.tcl:749 lib/choose_repository.tcl:819
-#: lib/choose_repository.tcl:1057 lib/choose_repository.tcl:1065
-#, tcl-format
-msgid "Not a Git repository: %s"
-msgstr "Inte ett Gitarkiv: %s"
+#: lib/spellcheck.tcl:57
+msgid "Unsupported spell checker"
+msgstr "Stavningskontrollprogrammet stöds inte"
 
-#: lib/choose_repository.tcl:592
-msgid "Standard only available for local repository."
-msgstr "Standard är endast tillgängligt för lokala arkiv."
+#: lib/spellcheck.tcl:65
+msgid "Spell checking is unavailable"
+msgstr "Stavningskontroll är ej tillgänglig"
 
-#: lib/choose_repository.tcl:596
-msgid "Shared only available for local repository."
-msgstr "Delat är endast tillgängligt för lokala arkiv."
+#: lib/spellcheck.tcl:68
+msgid "Invalid spell checking configuration"
+msgstr "Ogiltig inställning för stavningskontroll"
 
-#: lib/choose_repository.tcl:617
+#: lib/spellcheck.tcl:70
 #, tcl-format
-msgid "Location %s already exists."
-msgstr "Platsen %s finns redan."
-
-#: lib/choose_repository.tcl:628
-msgid "Failed to configure origin"
-msgstr "Kunde inte konfigurera ursprung"
-
-#: lib/choose_repository.tcl:640
-msgid "Counting objects"
-msgstr "Räknar objekt"
+msgid "Reverting dictionary to %s."
+msgstr "Återställer ordlistan till %s."
 
-#: lib/choose_repository.tcl:641
-msgid "buckets"
-msgstr "hinkar"
+#: lib/spellcheck.tcl:73
+msgid "Spell checker silently failed on startup"
+msgstr "Stavningskontroll misslyckades tyst vid start"
 
-#: lib/choose_repository.tcl:665
-#, tcl-format
-msgid "Unable to copy objects/info/alternates: %s"
-msgstr "Kunde inte kopiera objekt/info/alternativ: %s"
+#: lib/spellcheck.tcl:80
+msgid "Unrecognized spell checker"
+msgstr "Stavningskontrollprogrammet känns inte igen"
 
-#: lib/choose_repository.tcl:701
-#, tcl-format
-msgid "Nothing to clone from %s."
-msgstr "Ingenting att klona från %s."
+#: lib/spellcheck.tcl:186
+msgid "No Suggestions"
+msgstr "Inga förslag"
 
-#: lib/choose_repository.tcl:703 lib/choose_repository.tcl:917
-#: lib/choose_repository.tcl:929
-msgid "The 'master' branch has not been initialized."
-msgstr "Grenen \"master\" har inte initierats."
+#: lib/spellcheck.tcl:388
+msgid "Unexpected EOF from spell checker"
+msgstr "Oväntat filslut från stavningskontroll"
 
-#: lib/choose_repository.tcl:716
-msgid "Hardlinks are unavailable.  Falling back to copying."
-msgstr "Hårda länkar är inte tillgängliga. Faller tillbaka på kopiering."
+#: lib/spellcheck.tcl:392
+msgid "Spell Checker Failed"
+msgstr "Stavningskontroll misslyckades"
 
-#: lib/choose_repository.tcl:728
+#: lib/status_bar.tcl:87
 #, tcl-format
-msgid "Cloning from %s"
-msgstr "Klonar från %s"
+msgid "%s ... %*i of %*i %s (%3i%%)"
+msgstr "%s... %*i av %*i %s (%3i%%)"
 
-#: lib/choose_repository.tcl:759
-msgid "Copying objects"
-msgstr "Kopierar objekt"
-
-#: lib/choose_repository.tcl:760
-msgid "KiB"
-msgstr "KiB"
-
-#: lib/choose_repository.tcl:784
-#, tcl-format
-msgid "Unable to copy object: %s"
-msgstr "Kunde inte kopiera objekt: %s"
-
-#: lib/choose_repository.tcl:794
-msgid "Linking objects"
-msgstr "Länkar objekt"
-
-#: lib/choose_repository.tcl:795
-msgid "objects"
-msgstr "objekt"
-
-#: lib/choose_repository.tcl:803
-#, tcl-format
-msgid "Unable to hardlink object: %s"
-msgstr "Kunde inte hårdlänka objekt: %s"
-
-#: lib/choose_repository.tcl:858
-msgid "Cannot fetch branches and objects.  See console output for details."
-msgstr "Kunde inte hämta grenar och objekt. Se konsolutdata för detaljer."
-
-#: lib/choose_repository.tcl:869
-msgid "Cannot fetch tags.  See console output for details."
-msgstr "Kunde inte hämta taggar. Se konsolutdata för detaljer."
-
-#: lib/choose_repository.tcl:893
-msgid "Cannot determine HEAD.  See console output for details."
-msgstr "Kunde inte avgöra HEAD. Se konsolutdata för detaljer."
-
-#: lib/choose_repository.tcl:902
-#, tcl-format
-msgid "Unable to cleanup %s"
-msgstr "Kunde inte städa upp %s"
-
-#: lib/choose_repository.tcl:908
-msgid "Clone failed."
-msgstr "Kloning misslyckades."
-
-#: lib/choose_repository.tcl:915
-msgid "No default branch obtained."
-msgstr "Hämtade ingen standardgren."
-
-#: lib/choose_repository.tcl:926
-#, tcl-format
-msgid "Cannot resolve %s as a commit."
-msgstr "Kunde inte slå upp %s till någon incheckning."
-
-#: lib/choose_repository.tcl:938
-msgid "Creating working directory"
-msgstr "Skapar arbetskatalog"
-
-#: lib/choose_repository.tcl:939 lib/index.tcl:70 lib/index.tcl:133
-#: lib/index.tcl:201
-msgid "files"
-msgstr "filer"
-
-#: lib/choose_repository.tcl:968
-msgid "Initial file checkout failed."
-msgstr "Inledande filutcheckning misslyckades."
-
-#: lib/choose_repository.tcl:1012
-msgid "Open"
-msgstr "Öppna"
-
-#: lib/choose_repository.tcl:1022
-msgid "Repository:"
-msgstr "Arkiv:"
-
-#: lib/choose_repository.tcl:1071
-#, tcl-format
-msgid "Failed to open repository %s:"
-msgstr "Kunde inte öppna arkivet %s:"
-
-#: lib/choose_rev.tcl:52
-msgid "This Detached Checkout"
-msgstr "Denna frånkopplade utcheckning"
-
-#: lib/choose_rev.tcl:60
-msgid "Revision Expression:"
-msgstr "Revisionsuttryck:"
-
-#: lib/choose_rev.tcl:72
-msgid "Local Branch"
-msgstr "Lokal gren"
-
-#: lib/choose_rev.tcl:77
-msgid "Tracking Branch"
-msgstr "Spårande gren"
-
-#: lib/choose_rev.tcl:82 lib/choose_rev.tcl:543
-msgid "Tag"
-msgstr "Tagg"
-
-#: lib/choose_rev.tcl:321
-#, tcl-format
-msgid "Invalid revision: %s"
-msgstr "Ogiltig revision: %s"
-
-#: lib/choose_rev.tcl:342
-msgid "No revision selected."
-msgstr "Ingen revision vald."
-
-#: lib/choose_rev.tcl:350
-msgid "Revision expression is empty."
-msgstr "Revisionsuttrycket är tomt."
-
-#: lib/choose_rev.tcl:536
-msgid "Updated"
-msgstr "Uppdaterad"
-
-#: lib/choose_rev.tcl:564
-msgid "URL"
-msgstr "Webbadress"
-
-#: lib/commit.tcl:9
-msgid ""
-"There is nothing to amend.\n"
-"\n"
-"You are about to create the initial commit.  There is no commit before this "
-"to amend.\n"
-msgstr ""
-"Det finns ingenting att utöka.\n"
-"\n"
-"Du håller på att skapa den inledande incheckningen. Det finns ingen tidigare "
-"incheckning att utöka.\n"
-
-#: lib/commit.tcl:18
-msgid ""
-"Cannot amend while merging.\n"
-"\n"
-"You are currently in the middle of a merge that has not been fully "
-"completed.  You cannot amend the prior commit unless you first abort the "
-"current merge activity.\n"
-msgstr ""
-"Kan inte utöka vid sammanslagning.\n"
-"\n"
-"Du är i mitten av en sammanslagning som inte är fullbordad. Du kan inte "
-"utöka tidigare incheckningar om du inte först avbryter den pågående "
-"sammanslagningen.\n"
-
-#: lib/commit.tcl:48
-msgid "Error loading commit data for amend:"
-msgstr "Fel vid inläsning av incheckningsdata för utökning:"
-
-#: lib/commit.tcl:75
-msgid "Unable to obtain your identity:"
-msgstr "Kunde inte hämta din identitet:"
-
-#: lib/commit.tcl:80
-msgid "Invalid GIT_COMMITTER_IDENT:"
-msgstr "Felaktig GIT_COMMITTER_IDENT:"
-
-#: lib/commit.tcl:129
-#, tcl-format
-msgid "warning: Tcl does not support encoding '%s'."
-msgstr "varning: Tcl stöder inte teckenkodningen \"%s\"."
-
-#: lib/commit.tcl:149
-msgid ""
-"Last scanned state does not match repository state.\n"
-"\n"
-"Another Git program has modified this repository since the last scan.  A "
-"rescan must be performed before another commit can be created.\n"
-"\n"
-"The rescan will be automatically started now.\n"
-msgstr ""
-"Det senaste inlästa tillståndet motsvarar inte tillståndet i arkivet.\n"
-"\n"
-"Ett annat Git-program har ändrat arkivet sedan senaste avsökningen. Du måste "
-"utföra en ny sökning innan du kan göra en ny incheckning.\n"
-"\n"
-"Sökningen kommer att startas automatiskt nu.\n"
-
-#: lib/commit.tcl:172
-#, tcl-format
-msgid ""
-"Unmerged files cannot be committed.\n"
-"\n"
-"File %s has merge conflicts.  You must resolve them and stage the file "
-"before committing.\n"
-msgstr ""
-"Osammanslagna filer kan inte checkas in.\n"
-"\n"
-"Filen %s har sammanslagningskonflikter. Du måste lösa dem och köa filen "
-"innan du checkar in den.\n"
-
-#: lib/commit.tcl:180
-#, tcl-format
-msgid ""
-"Unknown file state %s detected.\n"
-"\n"
-"File %s cannot be committed by this program.\n"
-msgstr ""
-"Okänd filstatus %s upptäckt.\n"
-"\n"
-"Filen %s kan inte checkas in av programmet.\n"
-
-#: lib/commit.tcl:188
-msgid ""
-"No changes to commit.\n"
-"\n"
-"You must stage at least 1 file before you can commit.\n"
-msgstr ""
-"Inga ändringar att checka in.\n"
-"\n"
-"Du måste köa åtminstone en fil innan du kan checka in.\n"
-
-#: lib/commit.tcl:203
-msgid ""
-"Please supply a commit message.\n"
-"\n"
-"A good commit message has the following format:\n"
-"\n"
-"- First line: Describe in one sentence what you did.\n"
-"- Second line: Blank\n"
-"- Remaining lines: Describe why this change is good.\n"
-msgstr ""
-"Ange ett incheckningsmeddelande.\n"
-"\n"
-"Ett bra incheckningsmeddelande har följande format:\n"
-"\n"
-"- Första raden: Beskriv i en mening vad du gjorde.\n"
-"- Andra raden: Tom\n"
-"- Följande rader: Beskriv varför det här är en bra ändring.\n"
-
-#: lib/commit.tcl:234
-msgid "Calling pre-commit hook..."
-msgstr "Anropar kroken före incheckning (pre-commit)..."
-
-#: lib/commit.tcl:249
-msgid "Commit declined by pre-commit hook."
-msgstr "Incheckningen avvisades av kroken före incheckning (pre-commit)."
-
-#: lib/commit.tcl:272
-msgid "Calling commit-msg hook..."
-msgstr "Anropar kroken för incheckningsmeddelande (commit-msg)..."
-
-#: lib/commit.tcl:287
-msgid "Commit declined by commit-msg hook."
-msgstr "Incheckning avvisad av kroken för incheckningsmeddelande (commit-msg)."
-
-#: lib/commit.tcl:300
-msgid "Committing changes..."
-msgstr "Checkar in ändringar..."
-
-#: lib/commit.tcl:316
-msgid "write-tree failed:"
-msgstr "write-tree misslyckades:"
-
-#: lib/commit.tcl:317 lib/commit.tcl:361 lib/commit.tcl:382
-msgid "Commit failed."
-msgstr "Incheckningen misslyckades."
-
-#: lib/commit.tcl:334
-#, tcl-format
-msgid "Commit %s appears to be corrupt"
-msgstr "Incheckningen %s verkar vara trasig"
-
-#: lib/commit.tcl:339
-msgid ""
-"No changes to commit.\n"
-"\n"
-"No files were modified by this commit and it was not a merge commit.\n"
-"\n"
-"A rescan will be automatically started now.\n"
-msgstr ""
-"Inga ändringar att checka in.\n"
-"\n"
-"Inga filer ändrades av incheckningen och det var inte en sammanslagning.\n"
-"\n"
-"En sökning kommer att startas automatiskt nu.\n"
-
-#: lib/commit.tcl:346
-msgid "No changes to commit."
-msgstr "Inga ändringar att checka in."
-
-#: lib/commit.tcl:360
-msgid "commit-tree failed:"
-msgstr "commit-tree misslyckades:"
-
-#: lib/commit.tcl:381
-msgid "update-ref failed:"
-msgstr "update-ref misslyckades:"
-
-#: lib/commit.tcl:469
-#, tcl-format
-msgid "Created commit %s: %s"
-msgstr "Skapade incheckningen %s: %s"
-
-#: lib/console.tcl:59
-msgid "Working... please wait..."
-msgstr "Arbetar... vänta..."
-
-#: lib/console.tcl:186
-msgid "Success"
-msgstr "Lyckades"
-
-#: lib/console.tcl:200
-msgid "Error: Command Failed"
-msgstr "Fel: Kommando misslyckades"
-
-#: lib/database.tcl:42
-msgid "Number of loose objects"
-msgstr "Antal lösa objekt"
-
-#: lib/database.tcl:43
-msgid "Disk space used by loose objects"
-msgstr "Diskutrymme använt av lösa objekt"
-
-#: lib/database.tcl:44
-msgid "Number of packed objects"
-msgstr "Antal packade objekt"
-
-#: lib/database.tcl:45
-msgid "Number of packs"
-msgstr "Antal paket"
-
-#: lib/database.tcl:46
-msgid "Disk space used by packed objects"
-msgstr "Diskutrymme använt av packade objekt"
-
-#: lib/database.tcl:47
-msgid "Packed objects waiting for pruning"
-msgstr "Packade objekt som väntar på städning"
-
-#: lib/database.tcl:48
-msgid "Garbage files"
-msgstr "Skräpfiler"
-
-#: lib/database.tcl:72
-msgid "Compressing the object database"
-msgstr "Komprimerar objektdatabasen"
-
-#: lib/database.tcl:83
-msgid "Verifying the object database with fsck-objects"
-msgstr "Verifierar objektdatabasen med fsck-objects"
-
-#: lib/database.tcl:107
-#, tcl-format
-msgid ""
-"This repository currently has approximately %i loose objects.\n"
-"\n"
-"To maintain optimal performance it is strongly recommended that you compress "
-"the database.\n"
-"\n"
-"Compress the database now?"
-msgstr ""
-"Arkivet har för närvarande omkring %i lösa objekt.\n"
-"\n"
-"För att bibehålla optimal prestanda rekommenderas det å det bestämdaste att "
-"du komprimerar databasen.\n"
-"\n"
-"Komprimera databasen nu?"
-
-#: lib/date.tcl:25
-#, tcl-format
-msgid "Invalid date from Git: %s"
-msgstr "Ogiltigt datum från Git: %s"
-
-#: lib/diff.tcl:64
+#: lib/diff.tcl:77
 #, tcl-format
 msgid ""
 "No differences detected.\n"
 "\n"
 "%s has no changes.\n"
 "\n"
@@ -1586,763 +1244,945 @@
 "Modifieringsdatum för filen uppdaterades av ett annat program, men "
 "innehållet i filen har inte ändrats.\n"
 "\n"
 "En sökning kommer automatiskt att startas för att hitta andra filer som kan "
 "vara i samma tillstånd."
 
-#: lib/diff.tcl:104
+#: lib/diff.tcl:117
 #, tcl-format
 msgid "Loading diff of %s..."
 msgstr "Läser differens för %s..."
 
-#: lib/diff.tcl:125
+#: lib/diff.tcl:140
 msgid ""
 "LOCAL: deleted\n"
 "REMOTE:\n"
 msgstr ""
 "LOKAL: borttagen\n"
 "FJÄRR:\n"
 
-#: lib/diff.tcl:130
+#: lib/diff.tcl:145
 msgid ""
 "REMOTE: deleted\n"
 "LOCAL:\n"
 msgstr ""
 "FJÄRR: borttagen\n"
 "LOKAL:\n"
 
-#: lib/diff.tcl:137
+#: lib/diff.tcl:152
 msgid "LOCAL:\n"
 msgstr "LOKAL:\n"
 
-#: lib/diff.tcl:140
+#: lib/diff.tcl:155
 msgid "REMOTE:\n"
 msgstr "FJÄRR:\n"
 
-#: lib/diff.tcl:202 lib/diff.tcl:322
+#: lib/diff.tcl:217 lib/diff.tcl:355
 #, tcl-format
 msgid "Unable to display %s"
 msgstr "Kan inte visa %s"
 
-#: lib/diff.tcl:203
+#: lib/diff.tcl:218
 msgid "Error loading file:"
 msgstr "Fel vid läsning av fil:"
 
-#: lib/diff.tcl:210
+#: lib/diff.tcl:225
 msgid "Git Repository (subproject)"
 msgstr "Gitarkiv (underprojekt)"
 
-#: lib/diff.tcl:222
+#: lib/diff.tcl:237
 msgid "* Binary file (not showing content)."
 msgstr "* Binärfil (visar inte innehållet)."
 
-#: lib/diff.tcl:227
+#: lib/diff.tcl:242
 #, tcl-format
 msgid ""
 "* Untracked file is %d bytes.\n"
 "* Showing only first %d bytes.\n"
 msgstr ""
 "* Den ospårade filen är %d byte.\n"
 "* Visar endast inledande %d byte.\n"
 
-#: lib/diff.tcl:233
+#: lib/diff.tcl:248
 #, tcl-format
 msgid ""
 "\n"
 "* Untracked file clipped here by %s.\n"
 "* To see the entire file, use an external editor.\n"
 msgstr ""
 "\n"
 "* Den ospårade filen klipptes här av %s.\n"
 "* För att se hela filen, använd ett externt redigeringsprogram.\n"
 
-#: lib/diff.tcl:485
+#: lib/diff.tcl:356 lib/blame.tcl:1128
+msgid "Error loading diff:"
+msgstr "Fel vid inläsning av differens:"
+
+#: lib/diff.tcl:578
 msgid "Failed to unstage selected hunk."
 msgstr "Kunde inte ta bort den valda delen från kön."
 
-#: lib/diff.tcl:492
+#: lib/diff.tcl:585
 msgid "Failed to stage selected hunk."
 msgstr "Kunde inte lägga till den valda delen till kön."
 
-#: lib/diff.tcl:571
+#: lib/diff.tcl:664
 msgid "Failed to unstage selected line."
 msgstr "Kunde inte ta bort den valda raden från kön."
 
-#: lib/diff.tcl:579
+#: lib/diff.tcl:672
 msgid "Failed to stage selected line."
 msgstr "Kunde inte lägga till den valda raden till kön."
 
-#: lib/encoding.tcl:443
-msgid "Default"
-msgstr "Standard"
+#: lib/remote.tcl:200
+msgid "Push to"
+msgstr "Sänd till"
 
-#: lib/encoding.tcl:448
-#, tcl-format
-msgid "System (%s)"
-msgstr "Systemets (%s)"
+#: lib/remote.tcl:218
+msgid "Remove Remote"
+msgstr "Ta bort fjärrarkiv"
 
-#: lib/encoding.tcl:459 lib/encoding.tcl:465
-msgid "Other"
-msgstr "Annan"
+#: lib/remote.tcl:223
+msgid "Prune from"
+msgstr "Ta bort från"
 
-#: lib/error.tcl:20 lib/error.tcl:116
-msgid "error"
-msgstr "fel"
+#: lib/remote.tcl:228
+msgid "Fetch from"
+msgstr "Hämta från"
 
-#: lib/error.tcl:36
-msgid "warning"
-msgstr "varning"
+#: lib/choose_font.tcl:41
+msgid "Select"
+msgstr "Välj"
 
-#: lib/error.tcl:96
-msgid "You must correct the above errors before committing."
-msgstr "Du måste rätta till felen ovan innan du checkar in."
+#: lib/choose_font.tcl:55
+msgid "Font Family"
+msgstr "Teckensnittsfamilj"
 
-#: lib/index.tcl:6
-msgid "Unable to unlock the index."
-msgstr "Kunde inte låsa upp indexet."
+#: lib/choose_font.tcl:76
+msgid "Font Size"
+msgstr "Storlek"
 
-#: lib/index.tcl:17
-msgid "Index Error"
-msgstr "Indexfel"
+#: lib/choose_font.tcl:93
+msgid "Font Example"
+msgstr "Exempel"
 
-#: lib/index.tcl:19
+#: lib/choose_font.tcl:105
 msgid ""
-"Updating the Git index failed.  A rescan will be automatically started to "
-"resynchronize git-gui."
+"This is example text.\n"
+"If you like this text, it can be your font."
 msgstr ""
-"Misslyckades med att uppdatera Gitindexet. En omsökning kommer att startas "
-"automatiskt för att synkronisera om git-gui."
+"Detta är en exempeltext.\n"
+"Om du tycker om den här texten kan den vara ditt teckensnitt."
 
-#: lib/index.tcl:30
-msgid "Continue"
-msgstr "Fortsätt"
+#: lib/option.tcl:11
+#, tcl-format
+msgid "Invalid global encoding '%s'"
+msgstr "Den globala teckenkodningen \"%s\" är ogiltig"
+
+#: lib/option.tcl:19
+#, tcl-format
+msgid "Invalid repo encoding '%s'"
+msgstr "Arkivets teckenkodning \"%s\" är ogiltig"
+
+#: lib/option.tcl:119
+msgid "Restore Defaults"
+msgstr "Återställ standardvärden"
+
+#: lib/option.tcl:123
+msgid "Save"
+msgstr "Spara"
+
+#: lib/option.tcl:133
+#, tcl-format
+msgid "%s Repository"
+msgstr "Arkivet %s"
+
+#: lib/option.tcl:134
+msgid "Global (All Repositories)"
+msgstr "Globalt (alla arkiv)"
+
+#: lib/option.tcl:140
+msgid "User Name"
+msgstr "Användarnamn"
+
+#: lib/option.tcl:141
+msgid "Email Address"
+msgstr "E-postadress"
+
+#: lib/option.tcl:143
+msgid "Summarize Merge Commits"
+msgstr "Summera sammanslagningsincheckningar"
+
+#: lib/option.tcl:144
+msgid "Merge Verbosity"
+msgstr "Pratsamhet för sammanslagningar"
+
+#: lib/option.tcl:145
+msgid "Show Diffstat After Merge"
+msgstr "Visa diffstatistik efter sammanslagning"
+
+#: lib/option.tcl:146
+msgid "Use Merge Tool"
+msgstr "Använd verktyg för sammanslagning"
+
+#: lib/option.tcl:148
+msgid "Trust File Modification Timestamps"
+msgstr "Lita på filändringstidsstämplar"
+
+#: lib/option.tcl:149
+msgid "Prune Tracking Branches During Fetch"
+msgstr "Städa spårade grenar vid hämtning"
+
+#: lib/option.tcl:150
+msgid "Match Tracking Branches"
+msgstr "Matcha spårade grenar"
+
+#: lib/option.tcl:151
+msgid "Use Textconv For Diffs and Blames"
+msgstr "Använd Textconv för diff och klandring"
+
+#: lib/option.tcl:152
+msgid "Blame Copy Only On Changed Files"
+msgstr "Klandra kopiering bara i ändrade filer"
+
+#: lib/option.tcl:153
+msgid "Maximum Length of Recent Repositories List"
+msgstr "Max längd för lista över tidigare arkiv"
+
+#: lib/option.tcl:154
+msgid "Minimum Letters To Blame Copy On"
+msgstr "Minsta antal tecken att klandra kopiering för"
+
+#: lib/option.tcl:155
+msgid "Blame History Context Radius (days)"
+msgstr "Historikradie för klandring (dagar)"
+
+#: lib/option.tcl:156
+msgid "Number of Diff Context Lines"
+msgstr "Antal rader sammanhang i differenser"
+
+#: lib/option.tcl:157
+msgid "Additional Diff Parameters"
+msgstr "Ytterligare diff-parametrar"
+
+#: lib/option.tcl:158
+msgid "Commit Message Text Width"
+msgstr "Textbredd för incheckningsmeddelande"
+
+#: lib/option.tcl:159
+msgid "New Branch Name Template"
+msgstr "Mall för namn på nya grenar"
+
+#: lib/option.tcl:160
+msgid "Default File Contents Encoding"
+msgstr "Standardteckenkodning för filinnehåll"
+
+#: lib/option.tcl:161
+msgid "Warn before committing to a detached head"
+msgstr "Varna för incheckning på frånkopplat huvud"
+
+#: lib/option.tcl:162
+msgid "Staging of untracked files"
+msgstr "Köa ospårade filer"
+
+#: lib/option.tcl:163
+msgid "Show untracked files"
+msgstr "Visa ospårade filer"
+
+#: lib/option.tcl:164
+msgid "Tab spacing"
+msgstr "Blanksteg för tabulatortecken"
+
+#: lib/option.tcl:210
+msgid "Change"
+msgstr "Ändra"
+
+#: lib/option.tcl:254
+msgid "Spelling Dictionary:"
+msgstr "Stavningsordlista:"
+
+#: lib/option.tcl:284
+msgid "Change Font"
+msgstr "Byt teckensnitt"
+
+#: lib/option.tcl:288
+#, tcl-format
+msgid "Choose %s"
+msgstr "Välj %s"
+
+#: lib/option.tcl:294
+msgid "pt."
+msgstr "p."
+
+#: lib/option.tcl:308
+msgid "Preferences"
+msgstr "Inställningar"
+
+#: lib/option.tcl:345
+msgid "Failed to completely save options:"
+msgstr "Misslyckades med att helt spara alternativ:"
+
+#: lib/mergetool.tcl:8
+msgid "Force resolution to the base version?"
+msgstr "Tvinga lösning att använda basversionen?"
+
+#: lib/mergetool.tcl:9
+msgid "Force resolution to this branch?"
+msgstr "Tvinga lösning att använda den aktuella grenen?"
+
+#: lib/mergetool.tcl:10
+msgid "Force resolution to the other branch?"
+msgstr "Tvinga lösning att använda den andra grenen?"
+
+#: lib/mergetool.tcl:14
+#, tcl-format
+msgid ""
+"Note that the diff shows only conflicting changes.\n"
+"\n"
+"%s will be overwritten.\n"
+"\n"
+"This operation can be undone only by restarting the merge."
+msgstr ""
+"Observera att diffen endast visar de ändringar som står i konflikt.\n"
+"\n"
+"%s kommer att skrivas över.\n"
+"\n"
+"Du måste starta om sammanslagningen för att göra den här operationen ogjord."
 
-#: lib/index.tcl:33
-msgid "Unlock Index"
-msgstr "Lås upp index"
+#: lib/mergetool.tcl:45
+#, tcl-format
+msgid "File %s seems to have unresolved conflicts, still stage?"
+msgstr "Filen %s verkar innehålla olösta konflikter. Vill du köa ändå?"
 
-#: lib/index.tcl:292
+#: lib/mergetool.tcl:60
 #, tcl-format
-msgid "Unstaging %s from commit"
-msgstr "Tar bort %s för incheckningskön"
+msgid "Adding resolution for %s"
+msgstr "Lägger till lösning för %s"
 
-#: lib/index.tcl:331
-msgid "Ready to commit."
-msgstr "Redo att checka in."
+#: lib/mergetool.tcl:141
+msgid "Cannot resolve deletion or link conflicts using a tool"
+msgstr "Kan inte lösa borttagnings- eller länkkonflikter med ett verktyg"
 
-#: lib/index.tcl:344
-#, tcl-format
-msgid "Adding %s"
-msgstr "Lägger till %s"
+#: lib/mergetool.tcl:146
+msgid "Conflict file does not exist"
+msgstr "Konfliktfil existerar inte"
 
-#: lib/index.tcl:401
+#: lib/mergetool.tcl:246
 #, tcl-format
-msgid "Revert changes in file %s?"
-msgstr "Återställ ändringarna i filen %s?"
+msgid "Not a GUI merge tool: '%s'"
+msgstr "Inte ett grafiskt verktyg för sammanslagning: %s"
 
-#: lib/index.tcl:403
+#: lib/mergetool.tcl:275
 #, tcl-format
-msgid "Revert changes in these %i files?"
-msgstr "Återställ ändringarna i dessa %i filer?"
-
-#: lib/index.tcl:411
-msgid "Any unstaged changes will be permanently lost by the revert."
-msgstr ""
-"Alla oköade ändringar kommer permanent gå förlorade vid återställningen."
-
-#: lib/index.tcl:414
-msgid "Do Nothing"
-msgstr "Gör ingenting"
+msgid "Unsupported merge tool '%s'"
+msgstr "Verktyget \"%s\" för sammanslagning stöds inte"
 
-#: lib/index.tcl:432
-msgid "Reverting selected files"
-msgstr "Återställer valda filer"
+#: lib/mergetool.tcl:310
+msgid "Merge tool is already running, terminate it?"
+msgstr "Verktyget för sammanslagning körs redan. Vill du avsluta det?"
 
-#: lib/index.tcl:436
+#: lib/mergetool.tcl:330
 #, tcl-format
-msgid "Reverting %s"
-msgstr "Återställer %s"
-
-#: lib/merge.tcl:13
 msgid ""
-"Cannot merge while amending.\n"
-"\n"
-"You must finish amending this commit before starting any type of merge.\n"
+"Error retrieving versions:\n"
+"%s"
 msgstr ""
-"Kan inte slå ihop vid utökning.\n"
-"\n"
-"Du måste göra färdig utökningen av incheckningen innan du påbörjar någon "
-"slags sammanslagning.\n"
+"Fel vid hämtning av versioner:\n"
+"%s"
 
-#: lib/merge.tcl:27
+#: lib/mergetool.tcl:350
+#, tcl-format
 msgid ""
-"Last scanned state does not match repository state.\n"
-"\n"
-"Another Git program has modified this repository since the last scan.  A "
-"rescan must be performed before a merge can be performed.\n"
+"Could not start the merge tool:\n"
 "\n"
-"The rescan will be automatically started now.\n"
+"%s"
 msgstr ""
-"Det senaste inlästa tillståndet motsvarar inte tillståndet i arkivet.\n"
-"\n"
-"Ett annat Git-program har ändrat arkivet sedan senaste avsökningen. Du måste "
-"utföra en ny sökning innan du kan utföra en sammanslagning.\n"
+"Kunde inte starta verktyg för sammanslagning:\n"
 "\n"
-"Sökningen kommer att startas automatiskt nu.\n"
+"%s"
 
-#: lib/merge.tcl:45
+#: lib/mergetool.tcl:354
+msgid "Running merge tool..."
+msgstr "Kör verktyg för sammanslagning..."
+
+#: lib/mergetool.tcl:382 lib/mergetool.tcl:390
+msgid "Merge tool failed."
+msgstr "Verktyget för sammanslagning misslyckades."
+
+#: lib/tools_dlg.tcl:22
+msgid "Add Tool"
+msgstr "Lägg till verktyg"
+
+#: lib/tools_dlg.tcl:28
+msgid "Add New Tool Command"
+msgstr "Lägg till nytt verktygskommando"
+
+#: lib/tools_dlg.tcl:34
+msgid "Add globally"
+msgstr "Lägg till globalt"
+
+#: lib/tools_dlg.tcl:46
+msgid "Tool Details"
+msgstr "Detaljer för verktyg"
+
+#: lib/tools_dlg.tcl:49
+msgid "Use '/' separators to create a submenu tree:"
+msgstr "Använd \"/\"-avdelare för att skapa ett undermenyträd:"
+
+#: lib/tools_dlg.tcl:60
+msgid "Command:"
+msgstr "Kommando:"
+
+#: lib/tools_dlg.tcl:71
+msgid "Show a dialog before running"
+msgstr "Visa dialog innan programmet startas"
+
+#: lib/tools_dlg.tcl:77
+msgid "Ask the user to select a revision (sets $REVISION)"
+msgstr "Be användaren välja en version (sätter $REVISION)"
+
+#: lib/tools_dlg.tcl:82
+msgid "Ask the user for additional arguments (sets $ARGS)"
+msgstr "Be användaren om ytterligare parametrar (sätter $ARGS)"
+
+#: lib/tools_dlg.tcl:89
+msgid "Don't show the command output window"
+msgstr "Visa inte kommandots utdatafönster"
+
+#: lib/tools_dlg.tcl:94
+msgid "Run only if a diff is selected ($FILENAME not empty)"
+msgstr "Kör endast om en diff har markerats ($FILENAME är inte tomt)"
+
+#: lib/tools_dlg.tcl:118
+msgid "Please supply a name for the tool."
+msgstr "Ange ett namn för verktyget."
+
+#: lib/tools_dlg.tcl:126
 #, tcl-format
-msgid ""
-"You are in the middle of a conflicted merge.\n"
-"\n"
-"File %s has merge conflicts.\n"
-"\n"
-"You must resolve them, stage the file, and commit to complete the current "
-"merge.  Only then can you begin another merge.\n"
-msgstr ""
-"Du är mitt i en sammanslagning med konflikter.\n"
-"\n"
-"Filen %s har sammanslagningskonflikter.\n"
-"\n"
-"Du måste lösa dem, köa filen och checka in för att fullborda den aktuella "
-"sammanslagningen. När du gjort det kan du påbörja en ny sammanslagning.\n"
+msgid "Tool '%s' already exists."
+msgstr "Verktyget \"%s\" finns redan."
 
-#: lib/merge.tcl:55
+#: lib/tools_dlg.tcl:148
 #, tcl-format
 msgid ""
-"You are in the middle of a change.\n"
-"\n"
-"File %s is modified.\n"
-"\n"
-"You should complete the current commit before starting a merge.  Doing so "
-"will help you abort a failed merge, should the need arise.\n"
+"Could not add tool:\n"
+"%s"
 msgstr ""
-"Du är mitt i en ändring.\n"
-"\n"
-"Filen %s har ändringar.\n"
-"\n"
-"Du bör fullborda den aktuella incheckningen innan du påbörjar en "
-"sammanslagning. Om du gör det blir det enklare att avbryta en misslyckad "
-"sammanslagning, om det skulle vara nödvändigt.\n"
+"Kunde inte lägga till verktyget:\n"
+"%s"
 
-#: lib/merge.tcl:107
-#, tcl-format
-msgid "%s of %s"
-msgstr "%s av %s"
+#: lib/tools_dlg.tcl:187
+msgid "Remove Tool"
+msgstr "Ta bort verktyg"
 
-#: lib/merge.tcl:120
-#, tcl-format
-msgid "Merging %s and %s..."
-msgstr "Slår ihop %s och %s..."
+#: lib/tools_dlg.tcl:193
+msgid "Remove Tool Commands"
+msgstr "Ta bort verktygskommandon"
 
-#: lib/merge.tcl:131
-msgid "Merge completed successfully."
-msgstr "Sammanslagningen avslutades framgångsrikt."
+#: lib/tools_dlg.tcl:198
+msgid "Remove"
+msgstr "Ta bort"
 
-#: lib/merge.tcl:133
-msgid "Merge failed.  Conflict resolution is required."
-msgstr "Sammanslagningen misslyckades. Du måste lösa konflikterna."
+#: lib/tools_dlg.tcl:231
+msgid "(Blue denotes repository-local tools)"
+msgstr "(Blått anger verktyg lokala för arkivet)"
 
-#: lib/merge.tcl:158
+#: lib/tools_dlg.tcl:292
 #, tcl-format
-msgid "Merge Into %s"
-msgstr "Slå ihop i %s"
+msgid "Run Command: %s"
+msgstr "Kör kommandot: %s"
 
-#: lib/merge.tcl:177
-msgid "Revision To Merge"
-msgstr "Revisioner att slå ihop"
+#: lib/tools_dlg.tcl:306
+msgid "Arguments"
+msgstr "Argument"
 
-#: lib/merge.tcl:212
-msgid ""
-"Cannot abort while amending.\n"
-"\n"
-"You must finish amending this commit.\n"
-msgstr ""
-"Kan inte avbryta vid utökning.\n"
-"\n"
-"Du måste göra dig färdig med att utöka incheckningen.\n"
+#: lib/tools_dlg.tcl:341
+msgid "OK"
+msgstr "OK"
 
-#: lib/merge.tcl:222
-msgid ""
-"Abort merge?\n"
-"\n"
-"Aborting the current merge will cause *ALL* uncommitted changes to be lost.\n"
-"\n"
-"Continue with aborting the current merge?"
-msgstr ""
-"Avbryt sammanslagning?\n"
-"\n"
-"Om du avbryter sammanslagningen kommer *ALLA* ej incheckade ändringar att gå "
-"förlorade.\n"
-"\n"
-"Gå vidare med att avbryta den aktuella sammanslagningen?"
+#: lib/search.tcl:48
+msgid "Find:"
+msgstr "Sök:"
 
-#: lib/merge.tcl:228
-msgid ""
-"Reset changes?\n"
-"\n"
-"Resetting the changes will cause *ALL* uncommitted changes to be lost.\n"
-"\n"
-"Continue with resetting the current changes?"
-msgstr ""
-"Återställ ändringar?\n"
-"\n"
-"Om du återställer ändringarna kommer *ALLA* ej incheckade ändringar att gå "
-"förlorade.\n"
-"\n"
-"Gå vidare med att återställa de aktuella ändringarna?"
+#: lib/search.tcl:50
+msgid "Next"
+msgstr "Nästa"
 
-#: lib/merge.tcl:239
-msgid "Aborting"
-msgstr "Avbryter"
+#: lib/search.tcl:51
+msgid "Prev"
+msgstr "Föreg"
 
-#: lib/merge.tcl:239
-msgid "files reset"
-msgstr "filer återställda"
+#: lib/search.tcl:52
+msgid "RegExp"
+msgstr "Reg.uttr."
+
+#: lib/search.tcl:54
+msgid "Case"
+msgstr "Skiftläge"
 
-#: lib/merge.tcl:267
-msgid "Abort failed."
-msgstr "Misslyckades avbryta."
+#: lib/branch_rename.tcl:15 lib/branch_rename.tcl:23
+msgid "Rename Branch"
+msgstr "Byt namn på gren"
+
+#: lib/branch_rename.tcl:28
+msgid "Rename"
+msgstr "Byt namn"
 
-#: lib/merge.tcl:269
-msgid "Abort completed.  Ready."
-msgstr "Avbrytning fullbordad. Redo."
+#: lib/branch_rename.tcl:38
+msgid "Branch:"
+msgstr "Gren:"
 
-#: lib/mergetool.tcl:8
-msgid "Force resolution to the base version?"
-msgstr "Tvinga lösning att använda basversionen?"
+#: lib/branch_rename.tcl:46
+msgid "New Name:"
+msgstr "Nytt namn:"
 
-#: lib/mergetool.tcl:9
-msgid "Force resolution to this branch?"
-msgstr "Tvinga lösning att använda den aktuella grenen?"
+#: lib/branch_rename.tcl:81
+msgid "Please select a branch to rename."
+msgstr "Välj en gren att byta namn på."
 
-#: lib/mergetool.tcl:10
-msgid "Force resolution to the other branch?"
-msgstr "Tvinga lösning att använda den andra grenen?"
+#: lib/branch_rename.tcl:92 lib/branch_create.tcl:154
+msgid "Please supply a branch name."
+msgstr "Ange ett namn för grenen."
 
-#: lib/mergetool.tcl:14
+#: lib/branch_rename.tcl:112 lib/branch_create.tcl:165
 #, tcl-format
-msgid ""
-"Note that the diff shows only conflicting changes.\n"
-"\n"
-"%s will be overwritten.\n"
-"\n"
-"This operation can be undone only by restarting the merge."
-msgstr ""
-"Observera att diffen endast visar de ändringar som står i konflikt.\n"
-"\n"
-"%s kommer att skrivas över.\n"
-"\n"
-"Du måste starta om sammanslagningen för att göra den här operationen ogjord."
+msgid "'%s' is not an acceptable branch name."
+msgstr "\"%s\" kan inte användas som namn på grenen."
 
-#: lib/mergetool.tcl:45
+#: lib/branch_rename.tcl:123
 #, tcl-format
-msgid "File %s seems to have unresolved conflicts, still stage?"
-msgstr "Filen %s verkar innehålla olösta konflikter. Vill du köa ändå?"
+msgid "Failed to rename '%s'."
+msgstr "Kunde inte byta namn på \"%s\"."
 
-#: lib/mergetool.tcl:60
-#, tcl-format
-msgid "Adding resolution for %s"
-msgstr "Lägger till lösning för %s"
+#: lib/remote_branch_delete.tcl:29 lib/remote_branch_delete.tcl:34
+msgid "Delete Branch Remotely"
+msgstr "Ta bort gren från fjärrarkiv"
 
-#: lib/mergetool.tcl:141
-msgid "Cannot resolve deletion or link conflicts using a tool"
-msgstr "Kan inte lösa borttagnings- eller länkkonflikter med ett verktyg"
+#: lib/remote_branch_delete.tcl:48
+msgid "From Repository"
+msgstr "Från arkiv"
 
-#: lib/mergetool.tcl:146
-msgid "Conflict file does not exist"
-msgstr "Konfliktfil existerar inte"
+#: lib/remote_branch_delete.tcl:88
+msgid "Branches"
+msgstr "Grenar"
 
-#: lib/mergetool.tcl:264
-#, tcl-format
-msgid "Not a GUI merge tool: '%s'"
-msgstr "Inte ett grafiskt verktyg för sammanslagning: %s"
+#: lib/remote_branch_delete.tcl:110
+msgid "Delete Only If"
+msgstr "Ta endast bort om"
 
-#: lib/mergetool.tcl:268
-#, tcl-format
-msgid "Unsupported merge tool '%s'"
-msgstr "Verktyget \"%s\" för sammanslagning stöds inte"
+#: lib/remote_branch_delete.tcl:112
+msgid "Merged Into:"
+msgstr "Sammanslagen i:"
 
-#: lib/mergetool.tcl:303
-msgid "Merge tool is already running, terminate it?"
-msgstr "Verktyget för sammanslagning körs redan. Vill du avsluta det?"
+#: lib/remote_branch_delete.tcl:120 lib/branch_delete.tcl:53
+msgid "Always (Do not perform merge checks)"
+msgstr "Alltid (utför inte sammanslagningstest)"
+
+#: lib/remote_branch_delete.tcl:153
+msgid "A branch is required for 'Merged Into'."
+msgstr "En gren krävs för \"Sammanslagen i\"."
 
-#: lib/mergetool.tcl:323
+#: lib/remote_branch_delete.tcl:185
 #, tcl-format
 msgid ""
-"Error retrieving versions:\n"
-"%s"
+"The following branches are not completely merged into %s:\n"
+"\n"
+" - %s"
 msgstr ""
-"Fel vid hämtning av versioner:\n"
-"%s"
+"Följande grenar har inte helt slagits samman i %s:\n"
+"\n"
+" - %s"
 
-#: lib/mergetool.tcl:343
+#: lib/remote_branch_delete.tcl:190
 #, tcl-format
 msgid ""
-"Could not start the merge tool:\n"
+"One or more of the merge tests failed because you have not fetched the "
+"necessary commits.  Try fetching from %s first."
+msgstr ""
+"En eller flera av sammanslagningstesterna misslyckades eftersom du inte har "
+"hämtat de nödvändiga incheckningarna. Försök hämta från %s först."
+
+#: lib/remote_branch_delete.tcl:208
+msgid "Please select one or more branches to delete."
+msgstr "Välj en eller flera grenar att ta bort."
+
+#: lib/remote_branch_delete.tcl:218 lib/branch_delete.tcl:115
+msgid ""
+"Recovering deleted branches is difficult.\n"
 "\n"
-"%s"
+"Delete the selected branches?"
 msgstr ""
-"Kunde inte starta verktyg för sammanslagning:\n"
+"Det kan vara svårt att återställa borttagna grenar.\n"
 "\n"
-"%s"
+"Ta bort de valda grenarna?"
 
-#: lib/mergetool.tcl:347
-msgid "Running merge tool..."
-msgstr "Kör verktyg för sammanslagning..."
+#: lib/remote_branch_delete.tcl:227
+#, tcl-format
+msgid "Deleting branches from %s"
+msgstr "Tar bort grenar från %s"
 
-#: lib/mergetool.tcl:375 lib/mergetool.tcl:383
-msgid "Merge tool failed."
-msgstr "Verktyget för sammanslagning misslyckades."
+#: lib/remote_branch_delete.tcl:300
+msgid "No repository selected."
+msgstr "Inget arkiv markerat."
 
-#: lib/option.tcl:11
+#: lib/remote_branch_delete.tcl:305
 #, tcl-format
-msgid "Invalid global encoding '%s'"
-msgstr "Den globala teckenkodningen \"%s\" är ogiltig"
+msgid "Scanning %s..."
+msgstr "Söker %s..."
 
-#: lib/option.tcl:19
-#, tcl-format
-msgid "Invalid repo encoding '%s'"
-msgstr "Arkivets teckenkodning \"%s\" är ogiltig"
+#: lib/choose_repository.tcl:33
+msgid "Git Gui"
+msgstr "Git Gui"
 
-#: lib/option.tcl:119
-msgid "Restore Defaults"
-msgstr "Återställ standardvärden"
+#: lib/choose_repository.tcl:92 lib/choose_repository.tcl:412
+msgid "Create New Repository"
+msgstr "Skapa nytt arkiv"
 
-#: lib/option.tcl:123
-msgid "Save"
-msgstr "Spara"
+#: lib/choose_repository.tcl:98
+msgid "New..."
+msgstr "Nytt..."
 
-#: lib/option.tcl:133
-#, tcl-format
-msgid "%s Repository"
-msgstr "Arkivet %s"
+#: lib/choose_repository.tcl:105 lib/choose_repository.tcl:496
+msgid "Clone Existing Repository"
+msgstr "Klona befintligt arkiv"
 
-#: lib/option.tcl:134
-msgid "Global (All Repositories)"
-msgstr "Globalt (alla arkiv)"
+#: lib/choose_repository.tcl:116
+msgid "Clone..."
+msgstr "Klona..."
 
-#: lib/option.tcl:140
-msgid "User Name"
-msgstr "Användarnamn"
+#: lib/choose_repository.tcl:123 lib/choose_repository.tcl:1064
+msgid "Open Existing Repository"
+msgstr "Öppna befintligt arkiv"
 
-#: lib/option.tcl:141
-msgid "Email Address"
-msgstr "E-postadress"
+#: lib/choose_repository.tcl:129
+msgid "Open..."
+msgstr "Öppna..."
 
-#: lib/option.tcl:143
-msgid "Summarize Merge Commits"
-msgstr "Summera sammanslagningsincheckningar"
+#: lib/choose_repository.tcl:142
+msgid "Recent Repositories"
+msgstr "Senaste arkiven"
 
-#: lib/option.tcl:144
-msgid "Merge Verbosity"
-msgstr "Pratsamhet för sammanslagningar"
+#: lib/choose_repository.tcl:148
+msgid "Open Recent Repository:"
+msgstr "Öppna tidigare arkiv:"
 
-#: lib/option.tcl:145
-msgid "Show Diffstat After Merge"
-msgstr "Visa diffstatistik efter sammanslagning"
+#: lib/choose_repository.tcl:316 lib/choose_repository.tcl:323
+#: lib/choose_repository.tcl:330
+#, tcl-format
+msgid "Failed to create repository %s:"
+msgstr "Kunde inte skapa arkivet %s:"
 
-#: lib/option.tcl:146
-msgid "Use Merge Tool"
-msgstr "Använd verktyg för sammanslagning"
+#: lib/choose_repository.tcl:407 lib/branch_create.tcl:33
+msgid "Create"
+msgstr "Skapa"
 
-#: lib/option.tcl:148
-msgid "Trust File Modification Timestamps"
-msgstr "Lita på filändringstidsstämplar"
+#: lib/choose_repository.tcl:417
+msgid "Directory:"
+msgstr "Katalog:"
 
-#: lib/option.tcl:149
-msgid "Prune Tracking Branches During Fetch"
-msgstr "Städa spårade grenar vid hämtning"
+#: lib/choose_repository.tcl:447 lib/choose_repository.tcl:573
+#: lib/choose_repository.tcl:1098
+msgid "Git Repository"
+msgstr "Gitarkiv"
 
-#: lib/option.tcl:150
-msgid "Match Tracking Branches"
-msgstr "Matcha spårade grenar"
+#: lib/choose_repository.tcl:472
+#, tcl-format
+msgid "Directory %s already exists."
+msgstr "Katalogen %s finns redan."
 
-#: lib/option.tcl:151
-msgid "Use Textconv For Diffs and Blames"
-msgstr "Använd Textconv för diff och klandring"
+#: lib/choose_repository.tcl:476
+#, tcl-format
+msgid "File %s already exists."
+msgstr "Filen %s finns redan."
 
-#: lib/option.tcl:152
-msgid "Blame Copy Only On Changed Files"
-msgstr "Klandra kopiering bara i ändrade filer"
+#: lib/choose_repository.tcl:491
+msgid "Clone"
+msgstr "Klona"
 
-#: lib/option.tcl:153
-msgid "Minimum Letters To Blame Copy On"
-msgstr "Minsta antal tecken att klandra kopiering för"
+#: lib/choose_repository.tcl:504
+msgid "Source Location:"
+msgstr "Plats för källkod:"
 
-#: lib/option.tcl:154
-msgid "Blame History Context Radius (days)"
-msgstr "Historikradie för klandring (dagar)"
+#: lib/choose_repository.tcl:513
+msgid "Target Directory:"
+msgstr "Målkatalog:"
 
-#: lib/option.tcl:155
-msgid "Number of Diff Context Lines"
-msgstr "Antal rader sammanhang i differenser"
+#: lib/choose_repository.tcl:523
+msgid "Clone Type:"
+msgstr "Typ av klon:"
 
-#: lib/option.tcl:156
-msgid "Commit Message Text Width"
-msgstr "Textbredd för incheckningsmeddelande"
+#: lib/choose_repository.tcl:528
+msgid "Standard (Fast, Semi-Redundant, Hardlinks)"
+msgstr "Standard (snabb, semiredundant, hårda länkar)"
 
-#: lib/option.tcl:157
-msgid "New Branch Name Template"
-msgstr "Mall för namn på nya grenar"
+#: lib/choose_repository.tcl:533
+msgid "Full Copy (Slower, Redundant Backup)"
+msgstr "Full kopia (långsammare, redundant säkerhetskopia)"
 
-#: lib/option.tcl:158
-msgid "Default File Contents Encoding"
-msgstr "Standardteckenkodning för filinnehåll"
+#: lib/choose_repository.tcl:538
+msgid "Shared (Fastest, Not Recommended, No Backup)"
+msgstr "Delad (snabbast, rekommenderas ej, ingen säkerhetskopia)"
 
-#: lib/option.tcl:204
-msgid "Change"
-msgstr "Ändra"
+#: lib/choose_repository.tcl:545
+msgid "Recursively clone submodules too"
+msgstr "Klona även rekursivt undermoduler"
+
+#: lib/choose_repository.tcl:579 lib/choose_repository.tcl:626
+#: lib/choose_repository.tcl:772 lib/choose_repository.tcl:842
+#: lib/choose_repository.tcl:1104 lib/choose_repository.tcl:1112
+#, tcl-format
+msgid "Not a Git repository: %s"
+msgstr "Inte ett Gitarkiv: %s"
 
-#: lib/option.tcl:231
-msgid "Spelling Dictionary:"
-msgstr "Stavningsordlista:"
+#: lib/choose_repository.tcl:615
+msgid "Standard only available for local repository."
+msgstr "Standard är endast tillgängligt för lokala arkiv."
 
-#: lib/option.tcl:261
-msgid "Change Font"
-msgstr "Byt teckensnitt"
+#: lib/choose_repository.tcl:619
+msgid "Shared only available for local repository."
+msgstr "Delat är endast tillgängligt för lokala arkiv."
 
-#: lib/option.tcl:265
+#: lib/choose_repository.tcl:640
 #, tcl-format
-msgid "Choose %s"
-msgstr "Välj %s"
+msgid "Location %s already exists."
+msgstr "Platsen %s finns redan."
 
-#: lib/option.tcl:271
-msgid "pt."
-msgstr "p."
+#: lib/choose_repository.tcl:651
+msgid "Failed to configure origin"
+msgstr "Kunde inte konfigurera ursprung"
 
-#: lib/option.tcl:285
-msgid "Preferences"
-msgstr "Inställningar"
+#: lib/choose_repository.tcl:663
+msgid "Counting objects"
+msgstr "Räknar objekt"
 
-#: lib/option.tcl:322
-msgid "Failed to completely save options:"
-msgstr "Misslyckades med att helt spara alternativ:"
+#: lib/choose_repository.tcl:664
+msgid "buckets"
+msgstr "hinkar"
 
-#: lib/remote_add.tcl:20
-msgid "Add Remote"
-msgstr "Lägg till fjärrarkiv"
+#: lib/choose_repository.tcl:688
+#, tcl-format
+msgid "Unable to copy objects/info/alternates: %s"
+msgstr "Kunde inte kopiera objekt/info/alternativ: %s"
 
-#: lib/remote_add.tcl:25
-msgid "Add New Remote"
-msgstr "Lägg till nytt fjärrarkiv"
+#: lib/choose_repository.tcl:724
+#, tcl-format
+msgid "Nothing to clone from %s."
+msgstr "Ingenting att klona från %s."
 
-#: lib/remote_add.tcl:30 lib/tools_dlg.tcl:37
-msgid "Add"
-msgstr "Lägg till"
+#: lib/choose_repository.tcl:726 lib/choose_repository.tcl:940
+#: lib/choose_repository.tcl:952
+msgid "The 'master' branch has not been initialized."
+msgstr "Grenen \"master\" har inte initierats."
 
-#: lib/remote_add.tcl:39
-msgid "Remote Details"
-msgstr "Detaljer för fjärrarkiv"
+#: lib/choose_repository.tcl:739
+msgid "Hardlinks are unavailable.  Falling back to copying."
+msgstr "Hårda länkar är inte tillgängliga. Faller tillbaka på kopiering."
 
-#: lib/remote_add.tcl:50
-msgid "Location:"
-msgstr "Plats:"
+#: lib/choose_repository.tcl:751
+#, tcl-format
+msgid "Cloning from %s"
+msgstr "Klonar från %s"
 
-#: lib/remote_add.tcl:60
-msgid "Further Action"
-msgstr "Ytterligare åtgärd"
+#: lib/choose_repository.tcl:782
+msgid "Copying objects"
+msgstr "Kopierar objekt"
 
-#: lib/remote_add.tcl:63
-msgid "Fetch Immediately"
-msgstr "Hämta omedelbart"
+#: lib/choose_repository.tcl:783
+msgid "KiB"
+msgstr "KiB"
 
-#: lib/remote_add.tcl:69
-msgid "Initialize Remote Repository and Push"
-msgstr "Initiera fjärrarkiv och sänd till"
+#: lib/choose_repository.tcl:807
+#, tcl-format
+msgid "Unable to copy object: %s"
+msgstr "Kunde inte kopiera objekt: %s"
 
-#: lib/remote_add.tcl:75
-msgid "Do Nothing Else Now"
-msgstr "Gör ingent mer nu"
+#: lib/choose_repository.tcl:817
+msgid "Linking objects"
+msgstr "Länkar objekt"
 
-#: lib/remote_add.tcl:100
-msgid "Please supply a remote name."
-msgstr "Ange ett namn för fjärrarkivet."
+#: lib/choose_repository.tcl:818
+msgid "objects"
+msgstr "objekt"
 
-#: lib/remote_add.tcl:113
+#: lib/choose_repository.tcl:826
 #, tcl-format
-msgid "'%s' is not an acceptable remote name."
-msgstr "\"%s\" kan inte användas som namn på fjärrarkivet."
+msgid "Unable to hardlink object: %s"
+msgstr "Kunde inte hårdlänka objekt: %s"
 
-#: lib/remote_add.tcl:124
-#, tcl-format
-msgid "Failed to add remote '%s' of location '%s'."
-msgstr "Kunde inte lägga till fjärrarkivet \"%s\" på platsen \"%s\"."
+#: lib/choose_repository.tcl:881
+msgid "Cannot fetch branches and objects.  See console output for details."
+msgstr "Kunde inte hämta grenar och objekt. Se konsolutdata för detaljer."
 
-#: lib/remote_add.tcl:132 lib/transport.tcl:6
-#, tcl-format
-msgid "fetch %s"
-msgstr "hämta %s"
+#: lib/choose_repository.tcl:892
+msgid "Cannot fetch tags.  See console output for details."
+msgstr "Kunde inte hämta taggar. Se konsolutdata för detaljer."
 
-#: lib/remote_add.tcl:133
-#, tcl-format
-msgid "Fetching the %s"
-msgstr "Hämtar %s"
+#: lib/choose_repository.tcl:916
+msgid "Cannot determine HEAD.  See console output for details."
+msgstr "Kunde inte avgöra HEAD. Se konsolutdata för detaljer."
 
-#: lib/remote_add.tcl:156
+#: lib/choose_repository.tcl:925
 #, tcl-format
-msgid "Do not know how to initialize repository at location '%s'."
-msgstr "Vet inte hur arkivet på platsen \"%s\" skall initieras."
+msgid "Unable to cleanup %s"
+msgstr "Kunde inte städa upp %s"
 
-#: lib/remote_add.tcl:162 lib/transport.tcl:25 lib/transport.tcl:63
-#: lib/transport.tcl:81
-#, tcl-format
-msgid "push %s"
-msgstr "sänd %s"
+#: lib/choose_repository.tcl:931
+msgid "Clone failed."
+msgstr "Kloning misslyckades."
 
-#: lib/remote_add.tcl:163
+#: lib/choose_repository.tcl:938
+msgid "No default branch obtained."
+msgstr "Hämtade ingen standardgren."
+
+#: lib/choose_repository.tcl:949
 #, tcl-format
-msgid "Setting up the %s (at %s)"
-msgstr "Konfigurerar %s (på %s)"
+msgid "Cannot resolve %s as a commit."
+msgstr "Kunde inte slå upp %s till någon incheckning."
 
-#: lib/remote_branch_delete.tcl:29 lib/remote_branch_delete.tcl:34
-msgid "Delete Branch Remotely"
-msgstr "Ta bort gren från fjärrarkiv"
+#: lib/choose_repository.tcl:961
+msgid "Creating working directory"
+msgstr "Skapar arbetskatalog"
 
-#: lib/remote_branch_delete.tcl:48
-msgid "From Repository"
-msgstr "Från arkiv"
+#: lib/choose_repository.tcl:962 lib/index.tcl:70 lib/index.tcl:136
+#: lib/index.tcl:207
+msgid "files"
+msgstr "filer"
 
-#: lib/remote_branch_delete.tcl:51 lib/transport.tcl:134
-msgid "Remote:"
-msgstr "Fjärrarkiv:"
+#: lib/choose_repository.tcl:981
+msgid "Cannot clone submodules."
+msgstr "Kan inte klona undermoduler."
+
+#: lib/choose_repository.tcl:990
+msgid "Cloning submodules"
+msgstr "Klonar undermoduler"
 
-#: lib/remote_branch_delete.tcl:72 lib/transport.tcl:154
-msgid "Arbitrary Location:"
-msgstr "Godtycklig plats:"
+#: lib/choose_repository.tcl:1015
+msgid "Initial file checkout failed."
+msgstr "Inledande filutcheckning misslyckades."
 
-#: lib/remote_branch_delete.tcl:88
-msgid "Branches"
-msgstr "Grenar"
+#: lib/choose_repository.tcl:1059
+msgid "Open"
+msgstr "Öppna"
 
-#: lib/remote_branch_delete.tcl:110
-msgid "Delete Only If"
-msgstr "Ta endast bort om"
+#: lib/choose_repository.tcl:1069
+msgid "Repository:"
+msgstr "Arkiv:"
 
-#: lib/remote_branch_delete.tcl:112
-msgid "Merged Into:"
-msgstr "Sammanslagen i:"
+#: lib/choose_repository.tcl:1118
+#, tcl-format
+msgid "Failed to open repository %s:"
+msgstr "Kunde inte öppna arkivet %s:"
 
-#: lib/remote_branch_delete.tcl:153
-msgid "A branch is required for 'Merged Into'."
-msgstr "En gren krävs för \"Sammanslagen i\"."
+#: lib/about.tcl:26
+msgid "git-gui - a graphical user interface for Git."
+msgstr "git-gui - ett grafiskt användargränssnitt för Git."
 
-#: lib/remote_branch_delete.tcl:185
-#, tcl-format
-msgid ""
-"The following branches are not completely merged into %s:\n"
-"\n"
-" - %s"
-msgstr ""
-"Följande grenar har inte helt slagits samman i %s:\n"
-"\n"
-" - %s"
+#: lib/blame.tcl:73
+msgid "File Viewer"
+msgstr "Filvisare"
 
-#: lib/remote_branch_delete.tcl:190
-#, tcl-format
-msgid ""
-"One or more of the merge tests failed because you have not fetched the "
-"necessary commits.  Try fetching from %s first."
-msgstr ""
-"En eller flera av sammanslagningstesterna misslyckades eftersom du inte har "
-"hämtat de nödvändiga incheckningarna. Försök hämta från %s först."
+#: lib/blame.tcl:79
+msgid "Commit:"
+msgstr "Incheckning:"
 
-#: lib/remote_branch_delete.tcl:208
-msgid "Please select one or more branches to delete."
-msgstr "Välj en eller flera grenar att ta bort."
+#: lib/blame.tcl:280
+msgid "Copy Commit"
+msgstr "Kopiera incheckning"
 
-#: lib/remote_branch_delete.tcl:227
-#, tcl-format
-msgid "Deleting branches from %s"
-msgstr "Tar bort grenar från %s"
+#: lib/blame.tcl:284
+msgid "Find Text..."
+msgstr "Sök text..."
 
-#: lib/remote_branch_delete.tcl:293
-msgid "No repository selected."
-msgstr "Inget arkiv markerat."
+#: lib/blame.tcl:288
+msgid "Goto Line..."
+msgstr "Gå till rad..."
 
-#: lib/remote_branch_delete.tcl:298
-#, tcl-format
-msgid "Scanning %s..."
-msgstr "Söker %s..."
+#: lib/blame.tcl:297
+msgid "Do Full Copy Detection"
+msgstr "Gör full kopieringsigenkänning"
 
-#: lib/remote.tcl:163
-msgid "Remove Remote"
-msgstr "Ta bort fjärrarkiv"
+#: lib/blame.tcl:301
+msgid "Show History Context"
+msgstr "Visa historiksammanhang"
 
-#: lib/remote.tcl:168
-msgid "Prune from"
-msgstr "Ta bort från"
+#: lib/blame.tcl:304
+msgid "Blame Parent Commit"
+msgstr "Klandra föräldraincheckning"
 
-#: lib/remote.tcl:173
-msgid "Fetch from"
-msgstr "Hämta från"
+#: lib/blame.tcl:466
+#, tcl-format
+msgid "Reading %s..."
+msgstr "Läser %s..."
 
-#: lib/remote.tcl:215
-msgid "Push to"
-msgstr "Sänd till"
+#: lib/blame.tcl:594
+msgid "Loading copy/move tracking annotations..."
+msgstr "Läser annoteringar för kopiering/flyttning..."
 
-#: lib/search.tcl:22
-msgid "Find:"
-msgstr "Sök:"
+#: lib/blame.tcl:614
+msgid "lines annotated"
+msgstr "rader annoterade"
 
-#: lib/search.tcl:24
-msgid "Next"
-msgstr "Nästa"
+#: lib/blame.tcl:806
+msgid "Loading original location annotations..."
+msgstr "Läser in annotering av originalplacering..."
 
-#: lib/search.tcl:25
-msgid "Prev"
-msgstr "Föreg"
+#: lib/blame.tcl:809
+msgid "Annotation complete."
+msgstr "Annotering fullbordad."
+
+#: lib/blame.tcl:839
+msgid "Busy"
+msgstr "Upptagen"
 
-#: lib/search.tcl:26
-msgid "Case-Sensitive"
-msgstr "Skilj på VERSALER/gemener"
+#: lib/blame.tcl:840
+msgid "Annotation process is already running."
+msgstr "Annoteringsprocess körs redan."
 
-#: lib/shortcut.tcl:21 lib/shortcut.tcl:62
-msgid "Cannot write shortcut:"
-msgstr "Kan inte skriva genväg:"
+#: lib/blame.tcl:879
+msgid "Running thorough copy detection..."
+msgstr "Kör grundlig kopieringsigenkänning..."
 
-#: lib/shortcut.tcl:137
-msgid "Cannot write icon:"
-msgstr "Kan inte skriva ikon:"
+#: lib/blame.tcl:947
+msgid "Loading annotation..."
+msgstr "Läser in annotering..."
 
-#: lib/spellcheck.tcl:57
-msgid "Unsupported spell checker"
-msgstr "Stavningskontrollprogrammet stöds inte"
+#: lib/blame.tcl:1000
+msgid "Author:"
+msgstr "Författare:"
 
-#: lib/spellcheck.tcl:65
-msgid "Spell checking is unavailable"
-msgstr "Stavningskontroll är ej tillgänglig"
+#: lib/blame.tcl:1004
+msgid "Committer:"
+msgstr "Incheckare:"
 
-#: lib/spellcheck.tcl:68
-msgid "Invalid spell checking configuration"
-msgstr "Ogiltig inställning för stavningskontroll"
+#: lib/blame.tcl:1009
+msgid "Original File:"
+msgstr "Ursprunglig fil:"
 
-#: lib/spellcheck.tcl:70
-#, tcl-format
-msgid "Reverting dictionary to %s."
-msgstr "Återställer ordlistan till %s."
+#: lib/blame.tcl:1057
+msgid "Cannot find HEAD commit:"
+msgstr "Hittar inte incheckning för HEAD:"
 
-#: lib/spellcheck.tcl:73
-msgid "Spell checker silently failed on startup"
-msgstr "Stavningskontroll misslyckades tyst vid start"
+#: lib/blame.tcl:1112
+msgid "Cannot find parent commit:"
+msgstr "Hittar inte föräldraincheckning:"
 
-#: lib/spellcheck.tcl:80
-msgid "Unrecognized spell checker"
-msgstr "Stavningskontrollprogrammet känns inte igen"
+#: lib/blame.tcl:1127
+msgid "Unable to display parent"
+msgstr "Kan inte visa förälder"
 
-#: lib/spellcheck.tcl:186
-msgid "No Suggestions"
-msgstr "Inga förslag"
+#: lib/blame.tcl:1269
+msgid "Originally By:"
+msgstr "Ursprungligen av:"
 
-#: lib/spellcheck.tcl:388
-msgid "Unexpected EOF from spell checker"
-msgstr "Oväntat filslut från stavningskontroll"
+#: lib/blame.tcl:1275
+msgid "In File:"
+msgstr "I filen:"
 
-#: lib/spellcheck.tcl:392
-msgid "Spell Checker Failed"
-msgstr "Stavningskontroll misslyckades"
+#: lib/blame.tcl:1280
+msgid "Copied Or Moved Here By:"
+msgstr "Kopierad eller flyttad hit av:"
 
 #: lib/sshkey.tcl:31
 msgid "No keys found."
 msgstr "Inga nycklar hittades."
 
 #: lib/sshkey.tcl:34
@@ -2387,195 +2227,486 @@
 
 #: lib/sshkey.tcl:123
 #, tcl-format
 msgid "Your key is in: %s"
 msgstr "Din nyckel finns i: %s"
 
-#: lib/status_bar.tcl:86
+#: lib/branch_create.tcl:23
+msgid "Create Branch"
+msgstr "Skapa gren"
+
+#: lib/branch_create.tcl:28
+msgid "Create New Branch"
+msgstr "Skapa ny gren"
+
+#: lib/branch_create.tcl:42
+msgid "Branch Name"
+msgstr "Namn på gren"
+
+#: lib/branch_create.tcl:57
+msgid "Match Tracking Branch Name"
+msgstr "Använd namn på spårad gren"
+
+#: lib/branch_create.tcl:66
+msgid "Starting Revision"
+msgstr "Inledande revision"
+
+#: lib/branch_create.tcl:72
+msgid "Update Existing Branch:"
+msgstr "Uppdatera befintlig gren:"
+
+#: lib/branch_create.tcl:75
+msgid "No"
+msgstr "Nej"
+
+#: lib/branch_create.tcl:80
+msgid "Fast Forward Only"
+msgstr "Endast snabbspolning"
+
+#: lib/branch_create.tcl:97
+msgid "Checkout After Creation"
+msgstr "Checka ut när skapad"
+
+#: lib/branch_create.tcl:132
+msgid "Please select a tracking branch."
+msgstr "Välj en gren att spåra."
+
+#: lib/branch_create.tcl:141
 #, tcl-format
-msgid "%s ... %*i of %*i %s (%3i%%)"
-msgstr "%s... %*i av %*i %s (%3i%%)"
+msgid "Tracking branch %s is not a branch in the remote repository."
+msgstr "Den spårade grenen %s är inte en gren i fjärrarkivet."
 
-#: lib/tools_dlg.tcl:22
-msgid "Add Tool"
-msgstr "Lägg till verktyg"
+#: lib/shortcut.tcl:21 lib/shortcut.tcl:62
+msgid "Cannot write shortcut:"
+msgstr "Kan inte skriva genväg:"
 
-#: lib/tools_dlg.tcl:28
-msgid "Add New Tool Command"
-msgstr "Lägg till nytt verktygskommando"
+#: lib/shortcut.tcl:137
+msgid "Cannot write icon:"
+msgstr "Kan inte skriva ikon:"
 
-#: lib/tools_dlg.tcl:34
-msgid "Add globally"
-msgstr "Lägg till globalt"
+#: lib/choose_rev.tcl:52
+msgid "This Detached Checkout"
+msgstr "Denna frånkopplade utcheckning"
+
+#: lib/choose_rev.tcl:60
+msgid "Revision Expression:"
+msgstr "Revisionsuttryck:"
+
+#: lib/choose_rev.tcl:72
+msgid "Local Branch"
+msgstr "Lokal gren"
+
+#: lib/choose_rev.tcl:77
+msgid "Tracking Branch"
+msgstr "Spårande gren"
+
+#: lib/choose_rev.tcl:82 lib/choose_rev.tcl:544
+msgid "Tag"
+msgstr "Tagg"
+
+#: lib/choose_rev.tcl:321
+#, tcl-format
+msgid "Invalid revision: %s"
+msgstr "Ogiltig revision: %s"
+
+#: lib/choose_rev.tcl:342
+msgid "No revision selected."
+msgstr "Ingen revision vald."
+
+#: lib/choose_rev.tcl:350
+msgid "Revision expression is empty."
+msgstr "Revisionsuttrycket är tomt."
+
+#: lib/choose_rev.tcl:537
+msgid "Updated"
+msgstr "Uppdaterad"
+
+#: lib/choose_rev.tcl:565
+msgid "URL"
+msgstr "Webbadress"
+
+#: lib/commit.tcl:9
+msgid ""
+"There is nothing to amend.\n"
+"\n"
+"You are about to create the initial commit.  There is no commit before this "
+"to amend.\n"
+msgstr ""
+"Det finns ingenting att utöka.\n"
+"\n"
+"Du håller på att skapa den inledande incheckningen. Det finns ingen tidigare "
+"incheckning att utöka.\n"
+
+#: lib/commit.tcl:18
+msgid ""
+"Cannot amend while merging.\n"
+"\n"
+"You are currently in the middle of a merge that has not been fully "
+"completed.  You cannot amend the prior commit unless you first abort the "
+"current merge activity.\n"
+msgstr ""
+"Kan inte utöka vid sammanslagning.\n"
+"\n"
+"Du är i mitten av en sammanslagning som inte är fullbordad. Du kan inte "
+"utöka tidigare incheckningar om du inte först avbryter den pågående "
+"sammanslagningen.\n"
+
+#: lib/commit.tcl:48
+msgid "Error loading commit data for amend:"
+msgstr "Fel vid inläsning av incheckningsdata för utökning:"
+
+#: lib/commit.tcl:75
+msgid "Unable to obtain your identity:"
+msgstr "Kunde inte hämta din identitet:"
+
+#: lib/commit.tcl:80
+msgid "Invalid GIT_COMMITTER_IDENT:"
+msgstr "Felaktig GIT_COMMITTER_IDENT:"
+
+#: lib/commit.tcl:129
+#, tcl-format
+msgid "warning: Tcl does not support encoding '%s'."
+msgstr "varning: Tcl stöder inte teckenkodningen \"%s\"."
+
+#: lib/commit.tcl:149
+msgid ""
+"Last scanned state does not match repository state.\n"
+"\n"
+"Another Git program has modified this repository since the last scan.  A "
+"rescan must be performed before another commit can be created.\n"
+"\n"
+"The rescan will be automatically started now.\n"
+msgstr ""
+"Det senaste inlästa tillståndet motsvarar inte tillståndet i arkivet.\n"
+"\n"
+"Ett annat Git-program har ändrat arkivet sedan senaste avsökningen. Du måste "
+"utföra en ny sökning innan du kan göra en ny incheckning.\n"
+"\n"
+"Sökningen kommer att startas automatiskt nu.\n"
+
+#: lib/commit.tcl:173
+#, tcl-format
+msgid ""
+"Unmerged files cannot be committed.\n"
+"\n"
+"File %s has merge conflicts.  You must resolve them and stage the file "
+"before committing.\n"
+msgstr ""
+"Osammanslagna filer kan inte checkas in.\n"
+"\n"
+"Filen %s har sammanslagningskonflikter. Du måste lösa dem och köa filen "
+"innan du checkar in den.\n"
+
+#: lib/commit.tcl:181
+#, tcl-format
+msgid ""
+"Unknown file state %s detected.\n"
+"\n"
+"File %s cannot be committed by this program.\n"
+msgstr ""
+"Okänd filstatus %s upptäckt.\n"
+"\n"
+"Filen %s kan inte checkas in av programmet.\n"
+
+#: lib/commit.tcl:189
+msgid ""
+"No changes to commit.\n"
+"\n"
+"You must stage at least 1 file before you can commit.\n"
+msgstr ""
+"Inga ändringar att checka in.\n"
+"\n"
+"Du måste köa åtminstone en fil innan du kan checka in.\n"
+
+#: lib/commit.tcl:204
+msgid ""
+"Please supply a commit message.\n"
+"\n"
+"A good commit message has the following format:\n"
+"\n"
+"- First line: Describe in one sentence what you did.\n"
+"- Second line: Blank\n"
+"- Remaining lines: Describe why this change is good.\n"
+msgstr ""
+"Ange ett incheckningsmeddelande.\n"
+"\n"
+"Ett bra incheckningsmeddelande har följande format:\n"
+"\n"
+"- Första raden: Beskriv i en mening vad du gjorde.\n"
+"- Andra raden: Tom\n"
+"- Följande rader: Beskriv varför det här är en bra ändring.\n"
+
+#: lib/commit.tcl:235
+msgid "Calling pre-commit hook..."
+msgstr "Anropar kroken före incheckning (pre-commit)..."
+
+#: lib/commit.tcl:250
+msgid "Commit declined by pre-commit hook."
+msgstr "Incheckningen avvisades av kroken före incheckning (pre-commit)."
+
+#: lib/commit.tcl:269
+msgid ""
+"You are about to commit on a detached head. This is a potentially dangerous "
+"thing to do because if you switch to another branch you will lose your "
+"changes and it can be difficult to retrieve them later from the reflog. You "
+"should probably cancel this commit and create a new branch to continue.\n"
+" \n"
+" Do you really want to proceed with your Commit?"
+msgstr ""
+"Du är på väg att checka in på ett frånkopplat huvud. Det kan potentiellt "
+"vara farligt, eftersom du kommer förlora dina ändringar om du växlar till en "
+"annan gren och det kan vara svårt att hämta dem senare från ref-loggen. Du "
+"bör troligen avbryta incheckningen och skapa en ny gren för att fortsätta.\n"
+" \n"
+" Vill du verkligen fortsätta checka in?"
+
+#: lib/commit.tcl:290
+msgid "Calling commit-msg hook..."
+msgstr "Anropar kroken för incheckningsmeddelande (commit-msg)..."
+
+#: lib/commit.tcl:305
+msgid "Commit declined by commit-msg hook."
+msgstr "Incheckning avvisad av kroken för incheckningsmeddelande (commit-msg)."
+
+#: lib/commit.tcl:318
+msgid "Committing changes..."
+msgstr "Checkar in ändringar..."
+
+#: lib/commit.tcl:334
+msgid "write-tree failed:"
+msgstr "write-tree misslyckades:"
+
+#: lib/commit.tcl:335 lib/commit.tcl:379 lib/commit.tcl:400
+msgid "Commit failed."
+msgstr "Incheckningen misslyckades."
+
+#: lib/commit.tcl:352
+#, tcl-format
+msgid "Commit %s appears to be corrupt"
+msgstr "Incheckningen %s verkar vara trasig"
 
-#: lib/tools_dlg.tcl:46
-msgid "Tool Details"
-msgstr "Detaljer för verktyg"
+#: lib/commit.tcl:357
+msgid ""
+"No changes to commit.\n"
+"\n"
+"No files were modified by this commit and it was not a merge commit.\n"
+"\n"
+"A rescan will be automatically started now.\n"
+msgstr ""
+"Inga ändringar att checka in.\n"
+"\n"
+"Inga filer ändrades av incheckningen och det var inte en sammanslagning.\n"
+"\n"
+"En sökning kommer att startas automatiskt nu.\n"
 
-#: lib/tools_dlg.tcl:49
-msgid "Use '/' separators to create a submenu tree:"
-msgstr "Använd \"/\"-avdelare för att skapa ett undermenyträd:"
+#: lib/commit.tcl:364
+msgid "No changes to commit."
+msgstr "Inga ändringar att checka in."
 
-#: lib/tools_dlg.tcl:60
-msgid "Command:"
-msgstr "Kommando:"
+#: lib/commit.tcl:378
+msgid "commit-tree failed:"
+msgstr "commit-tree misslyckades:"
 
-#: lib/tools_dlg.tcl:71
-msgid "Show a dialog before running"
-msgstr "Visa dialog innan programmet startas"
+#: lib/commit.tcl:399
+msgid "update-ref failed:"
+msgstr "update-ref misslyckades:"
 
-#: lib/tools_dlg.tcl:77
-msgid "Ask the user to select a revision (sets $REVISION)"
-msgstr "Be användaren välja en version (sätter $REVISION)"
+#: lib/commit.tcl:492
+#, tcl-format
+msgid "Created commit %s: %s"
+msgstr "Skapade incheckningen %s: %s"
 
-#: lib/tools_dlg.tcl:82
-msgid "Ask the user for additional arguments (sets $ARGS)"
-msgstr "Be användaren om ytterligare parametrar (sätter $ARGS)"
+#: lib/branch_delete.tcl:16
+msgid "Delete Branch"
+msgstr "Ta bort gren"
 
-#: lib/tools_dlg.tcl:89
-msgid "Don't show the command output window"
-msgstr "Visa inte kommandots utdatafönster"
+#: lib/branch_delete.tcl:21
+msgid "Delete Local Branch"
+msgstr "Ta bort lokal gren"
 
-#: lib/tools_dlg.tcl:94
-msgid "Run only if a diff is selected ($FILENAME not empty)"
-msgstr "Kör endast om en diff har markerats ($FILENAME är inte tomt)"
+#: lib/branch_delete.tcl:39
+msgid "Local Branches"
+msgstr "Lokala grenar"
 
-#: lib/tools_dlg.tcl:118
-msgid "Please supply a name for the tool."
-msgstr "Ange ett namn för verktyget."
+#: lib/branch_delete.tcl:51
+msgid "Delete Only If Merged Into"
+msgstr "Ta bara bort om sammanslagen med"
 
-#: lib/tools_dlg.tcl:126
+#: lib/branch_delete.tcl:103
 #, tcl-format
-msgid "Tool '%s' already exists."
-msgstr "Verktyget \"%s\" finns redan."
+msgid "The following branches are not completely merged into %s:"
+msgstr "Följande grenar är inte till fullo sammanslagna med %s:"
 
-#: lib/tools_dlg.tcl:148
+#: lib/branch_delete.tcl:141
 #, tcl-format
 msgid ""
-"Could not add tool:\n"
+"Failed to delete branches:\n"
 "%s"
 msgstr ""
-"Kunde inte lägga till verktyget:\n"
+"Kunde inte ta bort grenar:\n"
 "%s"
 
-#: lib/tools_dlg.tcl:187
-msgid "Remove Tool"
-msgstr "Ta bort verktyg"
+#: lib/index.tcl:6
+msgid "Unable to unlock the index."
+msgstr "Kunde inte låsa upp indexet."
 
-#: lib/tools_dlg.tcl:193
-msgid "Remove Tool Commands"
-msgstr "Ta bort verktygskommandon"
+#: lib/index.tcl:17
+msgid "Index Error"
+msgstr "Indexfel"
 
-#: lib/tools_dlg.tcl:198
-msgid "Remove"
-msgstr "Ta bort"
+#: lib/index.tcl:19
+msgid ""
+"Updating the Git index failed.  A rescan will be automatically started to "
+"resynchronize git-gui."
+msgstr ""
+"Misslyckades med att uppdatera Gitindexet. En omsökning kommer att startas "
+"automatiskt för att synkronisera om git-gui."
 
-#: lib/tools_dlg.tcl:231
-msgid "(Blue denotes repository-local tools)"
-msgstr "(Blått anger verktyg lokala för arkivet)"
+#: lib/index.tcl:30
+msgid "Continue"
+msgstr "Fortsätt"
 
-#: lib/tools_dlg.tcl:292
-#, tcl-format
-msgid "Run Command: %s"
-msgstr "Kör kommandot: %s"
+#: lib/index.tcl:33
+msgid "Unlock Index"
+msgstr "Lås upp index"
 
-#: lib/tools_dlg.tcl:306
-msgid "Arguments"
-msgstr "Argument"
+#: lib/index.tcl:298
+#, tcl-format
+msgid "Unstaging %s from commit"
+msgstr "Tar bort %s för incheckningskön"
 
-#: lib/tools_dlg.tcl:341
-msgid "OK"
-msgstr "OK"
+#: lib/index.tcl:337
+msgid "Ready to commit."
+msgstr "Redo att checka in."
 
-#: lib/tools.tcl:75
+#: lib/index.tcl:350
 #, tcl-format
-msgid "Running %s requires a selected file."
-msgstr "För att starta %s måste du välja en fil."
+msgid "Adding %s"
+msgstr "Lägger till %s"
 
-#: lib/tools.tcl:90
+#: lib/index.tcl:380
 #, tcl-format
-msgid "Are you sure you want to run %s?"
-msgstr "Är du säker på att du vill starta %s?"
+msgid "Stage %d untracked files?"
+msgstr "Köa %d ospårade filer?"
 
-#: lib/tools.tcl:110
+#: lib/index.tcl:428
 #, tcl-format
-msgid "Tool: %s"
-msgstr "Verktyg: %s"
+msgid "Revert changes in file %s?"
+msgstr "Återställ ändringarna i filen %s?"
 
-#: lib/tools.tcl:111
+#: lib/index.tcl:430
 #, tcl-format
-msgid "Running: %s"
-msgstr "Exekverar: %s"
+msgid "Revert changes in these %i files?"
+msgstr "Återställ ändringarna i dessa %i filer?"
 
-#: lib/tools.tcl:149
-#, tcl-format
-msgid "Tool completed successfully: %s"
-msgstr "Verktyget avslutades framgångsrikt: %s"
+#: lib/index.tcl:438
+msgid "Any unstaged changes will be permanently lost by the revert."
+msgstr ""
+"Alla oköade ändringar kommer permanent gå förlorade vid återställningen."
 
-#: lib/tools.tcl:151
-#, tcl-format
-msgid "Tool failed: %s"
-msgstr "Verktyget misslyckades: %s"
+#: lib/index.tcl:441
+msgid "Do Nothing"
+msgstr "Gör ingenting"
 
-#: lib/transport.tcl:7
-#, tcl-format
-msgid "Fetching new changes from %s"
-msgstr "Hämtar nya ändringar från %s"
+#: lib/index.tcl:459
+msgid "Reverting selected files"
+msgstr "Återställer valda filer"
 
-#: lib/transport.tcl:18
+#: lib/index.tcl:463
 #, tcl-format
-msgid "remote prune %s"
-msgstr "fjärrborttagning %s"
+msgid "Reverting %s"
+msgstr "Återställer %s"
 
-#: lib/transport.tcl:19
-#, tcl-format
-msgid "Pruning tracking branches deleted from %s"
-msgstr "Tar bort spårande grenar som tagits bort från %s"
+#: lib/encoding.tcl:443
+msgid "Default"
+msgstr "Standard"
 
-#: lib/transport.tcl:26
+#: lib/encoding.tcl:448
 #, tcl-format
-msgid "Pushing changes to %s"
-msgstr "Sänder ändringar till %s"
+msgid "System (%s)"
+msgstr "Systemets (%s)"
 
-#: lib/transport.tcl:64
-#, tcl-format
-msgid "Mirroring to %s"
-msgstr "Speglar till %s"
+#: lib/encoding.tcl:459 lib/encoding.tcl:465
+msgid "Other"
+msgstr "Annan"
 
-#: lib/transport.tcl:82
+#: lib/date.tcl:25
 #, tcl-format
-msgid "Pushing %s %s to %s"
-msgstr "Sänder %s %s till %s"
+msgid "Invalid date from Git: %s"
+msgstr "Ogiltigt datum från Git: %s"
 
-#: lib/transport.tcl:102
-msgid "Push Branches"
-msgstr "Sänd grenar"
+#: lib/database.tcl:42
+msgid "Number of loose objects"
+msgstr "Antal lösa objekt"
 
-#: lib/transport.tcl:117
-msgid "Source Branches"
-msgstr "Källgrenar"
+#: lib/database.tcl:43
+msgid "Disk space used by loose objects"
+msgstr "Diskutrymme använt av lösa objekt"
 
-#: lib/transport.tcl:131
-msgid "Destination Repository"
-msgstr "Destinationsarkiv"
+#: lib/database.tcl:44
+msgid "Number of packed objects"
+msgstr "Antal packade objekt"
 
-#: lib/transport.tcl:172
-msgid "Transfer Options"
-msgstr "Överföringsalternativ"
+#: lib/database.tcl:45
+msgid "Number of packs"
+msgstr "Antal paket"
 
-#: lib/transport.tcl:174
-msgid "Force overwrite existing branch (may discard changes)"
-msgstr "Tvinga överskrivning av befintlig gren (kan kasta bort ändringar)"
+#: lib/database.tcl:46
+msgid "Disk space used by packed objects"
+msgstr "Diskutrymme använt av packade objekt"
 
-#: lib/transport.tcl:178
-msgid "Use thin pack (for slow network connections)"
-msgstr "Använd tunt paket (för långsamma nätverksanslutningar)"
+#: lib/database.tcl:47
+msgid "Packed objects waiting for pruning"
+msgstr "Packade objekt som väntar på städning"
 
-#: lib/transport.tcl:182
-msgid "Include tags"
-msgstr "Ta med taggar"
+#: lib/database.tcl:48
+msgid "Garbage files"
+msgstr "Skräpfiler"
+
+#: lib/database.tcl:72
+msgid "Compressing the object database"
+msgstr "Komprimerar objektdatabasen"
+
+#: lib/database.tcl:83
+msgid "Verifying the object database with fsck-objects"
+msgstr "Verifierar objektdatabasen med fsck-objects"
+
+#: lib/database.tcl:107
+#, tcl-format
+msgid ""
+"This repository currently has approximately %i loose objects.\n"
+"\n"
+"To maintain optimal performance it is strongly recommended that you compress "
+"the database.\n"
+"\n"
+"Compress the database now?"
+msgstr ""
+"Arkivet har för närvarande omkring %i lösa objekt.\n"
+"\n"
+"För att bibehålla optimal prestanda rekommenderas det å det bestämdaste att "
+"du komprimerar databasen.\n"
+"\n"
+"Komprimera databasen nu?"
+
+#: lib/error.tcl:20 lib/error.tcl:116
+msgid "error"
+msgstr "fel"
+
+#: lib/error.tcl:36
+msgid "warning"
+msgstr "varning"
+
+#: lib/error.tcl:96
+msgid "You must correct the above errors before committing."
+msgstr "Du måste rätta till felen ovan innan du checkar in."
+
+#~ msgid "Displaying only %s of %s files."
+#~ msgstr "Visar endast %s av %s filer."
+
+#~ msgid "Case-Sensitive"
+#~ msgstr "Skilj på VERSALER/gemener"
 
 #~ msgid "Cannot use funny .git directory:"
 #~ msgstr "Kan inte använda underlig .git-katalog:"
 
 #~ msgid "Preferences..."
 #~ msgstr "Inställningar..."
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/po: vi.msg
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/po: vi.po
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/version /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/version
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-gui/version	2015-10-03 06:42:29.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-gui/version	2015-05-01 03:12:03.000000000 +0800
@@ -1 +1 @@
-0.19.0.2.g3decb8e
+0.19.0.18.g4498b
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-hash-object and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-hash-object differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-help and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-help differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-http-backend and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-http-backend differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-imap-send and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-imap-send differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-index-pack and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-index-pack differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-init and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-init differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-init-db and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-init-db differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-instaweb /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-instaweb
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-instaweb	2017-10-10 12:31:42.170632149 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-instaweb	2017-10-10 13:04:11.778560697 +0800
@@ -17,12 +17,13 @@
  Action
 stop           stop the web server
 start          start the web server
 restart        restart the web server
 "
 
+SUBDIRECTORY_OK=Yes
 . git-sh-setup
 
 fqgitdir="$GIT_DIR"
 local="$(git config --bool --get instaweb.local)"
 httpd="$(git config --get instaweb.httpd)"
 root="$(git config --get instaweb.gitwebdir)"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-instaweb.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-instaweb.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-instaweb.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-instaweb.sh	2015-05-01 03:12:02.000000000 +0800
@@ -17,12 +17,13 @@
  Action
 stop           stop the web server
 start          start the web server
 restart        restart the web server
 "
 
+SUBDIRECTORY_OK=Yes
 . git-sh-setup
 
 fqgitdir="$GIT_DIR"
 local="$(git config --bool --get instaweb.local)"
 httpd="$(git config --get instaweb.httpd)"
 root="$(git config --get instaweb.gitwebdir)"
@@ -201,13 +202,13 @@
 webrick_conf () {
 	# webrick seems to have no way of passing arbitrary environment
 	# variables to the underlying CGI executable, so we wrap the
 	# actual gitweb.cgi using a shell script to force it
   wrapper="$fqgitdir/gitweb/$httpd/wrapper.sh"
 	cat > "$wrapper" <<EOF
-#!/bin/sh
+#!@SHELL_PATH@
 # we use this shell script wrapper around the real gitweb.cgi since
 # there appears to be no other way to pass arbitrary environment variables
 # into the CGI process
 GIT_EXEC_PATH=$GIT_EXEC_PATH GIT_DIR=$GIT_DIR GITWEB_CONFIG=$GITWEB_CONFIG
 export GIT_EXEC_PATH GIT_DIR GITWEB_CONFIG
 exec $root/gitweb.cgi
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-interpret-trailers and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-interpret-trailers differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/gitk /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/gitk
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/gitk	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/gitk	2015-05-01 03:12:02.000000000 +0800
@@ -2513,12 +2513,19 @@
     if {[tk windowingsystem] == "win32"} {
 	bind . <MouseWheel> { windows_mousewheel_redirector %W %X %Y %D }
 	bind $ctext <MouseWheel> { windows_mousewheel_redirector %W %X %Y %D ; break }
     } else {
 	bindall <ButtonRelease-4> "allcanvs yview scroll -5 units"
 	bindall <ButtonRelease-5> "allcanvs yview scroll 5 units"
+	bind $ctext <Button> {
+	    if {"%b" eq 6} {
+		$ctext xview scroll -5 units
+	    } elseif {"%b" eq 7} {
+		$ctext xview scroll 5 units
+	    }
+	}
         if {[tk windowingsystem] eq "aqua"} {
             bindall <MouseWheel> {
                 set delta [expr {- (%D)}]
                 allcanvs yview scroll $delta units
             }
             bindall <Shift-MouseWheel> {
@@ -2773,57 +2780,139 @@
 	set progupdatepending 0
 	set lastprogupdate [clock clicks -milliseconds]
 	update
     }
 }
 
+proc config_check_tmp_exists {tries_left} {
+    global config_file_tmp
+
+    if {[file exists $config_file_tmp]} {
+	incr tries_left -1
+	if {$tries_left > 0} {
+	    after 100 [list config_check_tmp_exists $tries_left]
+	} else {
+	    error_popup "There appears to be a stale $config_file_tmp\
+ file, which will prevent gitk from saving its configuration on exit.\
+ Please remove it if it is not being used by any existing gitk process."
+	}
+    }
+}
+
+proc config_init_trace {name} {
+    global config_variable_changed config_variable_original
+
+    upvar #0 $name var
+    set config_variable_changed($name) 0
+    set config_variable_original($name) $var
+}
+
+proc config_variable_change_cb {name name2 op} {
+    global config_variable_changed config_variable_original
+
+    upvar #0 $name var
+    if {$op eq "write" &&
+	(![info exists config_variable_original($name)] ||
+	 $config_variable_original($name) ne $var)} {
+	set config_variable_changed($name) 1
+    }
+}
+
 proc savestuff {w} {
-    global viewname viewfiles viewargs viewargscmd viewperm nextviewnum
-    global use_ttk
     global stuffsaved
     global config_file config_file_tmp
-    global config_variables
+    global config_variables config_variable_changed
+    global viewchanged
+
+    upvar #0 viewname current_viewname
+    upvar #0 viewfiles current_viewfiles
+    upvar #0 viewargs current_viewargs
+    upvar #0 viewargscmd current_viewargscmd
+    upvar #0 viewperm current_viewperm
+    upvar #0 nextviewnum current_nextviewnum
+    upvar #0 use_ttk current_use_ttk
 
     if {$stuffsaved} return
     if {![winfo viewable .]} return
-    catch {
-	if {[file exists $config_file_tmp]} {
-	    file delete -force $config_file_tmp
+    set remove_tmp 0
+    if {[catch {
+	set try_count 0
+	while {[catch {set f [open $config_file_tmp {WRONLY CREAT EXCL}]}]} {
+	    if {[incr try_count] > 50} {
+		error "Unable to write config file: $config_file_tmp exists"
+	    }
+	    after 100
 	}
-	set f [open $config_file_tmp w]
+	set remove_tmp 1
 	if {$::tcl_platform(platform) eq {windows}} {
 	    file attributes $config_file_tmp -hidden true
 	}
+	if {[file exists $config_file]} {
+	    source $config_file
+	}
 	foreach var_name $config_variables {
 	    upvar #0 $var_name var
-	    puts $f [list set $var_name $var]
+	    upvar 0 $var_name old_var
+	    if {!$config_variable_changed($var_name) && [info exists old_var]} {
+		puts $f [list set $var_name $old_var]
+	    } else {
+		puts $f [list set $var_name $var]
+	    }
 	}
 
 	puts $f "set geometry(main) [wm geometry .]"
 	puts $f "set geometry(state) [wm state .]"
 	puts $f "set geometry(topwidth) [winfo width .tf]"
 	puts $f "set geometry(topheight) [winfo height .tf]"
-	if {$use_ttk} {
+	if {$current_use_ttk} {
 	    puts $f "set geometry(pwsash0) \"[.tf.histframe.pwclist sashpos 0] 1\""
 	    puts $f "set geometry(pwsash1) \"[.tf.histframe.pwclist sashpos 1] 1\""
 	} else {
 	    puts $f "set geometry(pwsash0) \"[.tf.histframe.pwclist sash coord 0]\""
 	    puts $f "set geometry(pwsash1) \"[.tf.histframe.pwclist sash coord 1]\""
 	}
 	puts $f "set geometry(botwidth) [winfo width .bleft]"
 	puts $f "set geometry(botheight) [winfo height .bleft]"
 
+	array set view_save {}
+	array set views {}
+	if {![info exists permviews]} { set permviews {} }
+	foreach view $permviews {
+	    set view_save([lindex $view 0]) 1
+	    set views([lindex $view 0]) $view
+	}
 	puts -nonewline $f "set permviews {"
-	for {set v 0} {$v < $nextviewnum} {incr v} {
-	    if {$viewperm($v)} {
-		puts $f "{[list $viewname($v) $viewfiles($v) $viewargs($v) $viewargscmd($v)]}"
+	for {set v 1} {$v < $current_nextviewnum} {incr v} {
+	    if {$viewchanged($v)} {
+		if {$current_viewperm($v)} {
+		    set views($current_viewname($v)) [list $current_viewname($v) $current_viewfiles($v) $current_viewargs($v) $current_viewargscmd($v)]
+		} else {
+		    set view_save($current_viewname($v)) 0
+		}
+	    }
+	}
+	# write old and updated view to their places and append remaining to the end
+	foreach view $permviews {
+	    set view_name [lindex $view 0]
+	    if {$view_save($view_name)} {
+		puts $f "{$views($view_name)}"
 	    }
+	    unset views($view_name)
+	}
+	foreach view_name [array names views] {
+	    puts $f "{$views($view_name)}"
 	}
 	puts $f "}"
 	close $f
 	file rename -force $config_file_tmp $config_file
+	set remove_tmp 0
+    } err]} {
+        puts "Error saving config: $err"
+    }
+    if {$remove_tmp} {
+	file delete -force $config_file_tmp
     }
     set stuffsaved 1
 }
 
 proc resizeclistpanes {win w} {
     global oldwidth use_ttk
@@ -3974,12 +4063,13 @@
     {remotes   b    .  "--remotes"      {mc "All remote-tracking branches"}}
     {commitlbl l    +  {}               {mc "Commit Info (regular expressions):"}}
     {author    t15  .. "--author=*"     {mc "Author:"}}
     {committer t15  .  "--committer=*"  {mc "Committer:"}}
     {loginfo   t15  .. "--grep=*"       {mc "Commit Message:"}}
     {allmatch  b    .. "--all-match"    {mc "Matches all Commit Info criteria"}}
+    {igrep     b    .. "--invert-grep"  {mc "Matches none Commit Info criteria"}}
     {changes_l l    +  {}               {mc "Changes to Files:"}}
     {pickaxe_s r0   .  {}               {mc "Fixed String"}}
     {pickaxe_t r1   .  "--pickaxe-regex"  {mc "Regular Expression"}}
     {pickaxe   t15  .. "-S*"            {mc "Search string:"}}
     {datelabel l    +  {}               {mc "Commit Dates (\"2 weeks ago\", \"2009-03-17 15:27:38\", \"March 17, 2009 15:27:38\"):"}}
     {since     t15  ..  {"--since=*" "--after=*"}  {mc "Since:"}}
@@ -4235,13 +4325,13 @@
     doviewmenu .bar.view 5 [list showview $n] $op $args
     # doviewmenu $viewhlmenu 1 [list addvhighlight $n] $op $args
 }
 
 proc newviewok {top n {apply 0}} {
     global nextviewnum newviewperm newviewname newishighlight
-    global viewname viewfiles viewperm selectedview curview
+    global viewname viewfiles viewperm viewchanged selectedview curview
     global viewargs viewargscmd newviewopts viewhlmenu
 
     if {[catch {
 	set newargs [encode_view_opts $n]
     } err]} {
 	error_popup "[mc "Error in commit selection arguments:"] $err" $top
@@ -4256,24 +4346,26 @@
     }
     if {![info exists viewfiles($n)]} {
 	# creating a new view
 	incr nextviewnum
 	set viewname($n) $newviewname($n)
 	set viewperm($n) $newviewopts($n,perm)
+	set viewchanged($n) 1
 	set viewfiles($n) $files
 	set viewargs($n) $newargs
 	set viewargscmd($n) $newviewopts($n,cmd)
 	addviewmenu $n
 	if {!$newishighlight} {
 	    run showview $n
 	} else {
 	    run addvhighlight $n
 	}
     } else {
 	# editing an existing view
 	set viewperm($n) $newviewopts($n,perm)
+	set viewchanged($n) 1
 	if {$newviewname($n) ne $viewname($n)} {
 	    set viewname($n) $newviewname($n)
 	    doviewmenu .bar.view 5 [list showview $n] \
 		entryconf [list -label $viewname($n)]
 	    # doviewmenu $viewhlmenu 1 [list addvhighlight $n] \
 		# entryconf [list -label $viewname($n) -value $viewname($n)]
@@ -4290,21 +4382,22 @@
     }
     if {$apply} return
     catch {destroy $top}
 }
 
 proc delview {} {
-    global curview viewperm hlview selectedhlview
+    global curview viewperm hlview selectedhlview viewchanged
 
     if {$curview == 0} return
     if {[info exists hlview] && $hlview == $curview} {
 	set selectedhlview [mc "None"]
 	unset hlview
     }
     allviewmenus $curview delete
     set viewperm($curview) 0
+    set viewchanged($curview) 1
     showview 0
 }
 
 proc addviewmenu {n} {
     global viewname viewhlmenu
 
@@ -11234,12 +11327,13 @@
     ${NS}::label $page.ldisp -text [mc "Commit list display options"]
     grid $page.ldisp - -sticky w -pady 10
     ${NS}::label $page.spacer -text " "
     ${NS}::label $page.maxwidthl -text [mc "Maximum graph width (lines)"]
     spinbox $page.maxwidth -from 0 -to 100 -width 4 -textvariable maxwidth
     grid $page.spacer $page.maxwidthl $page.maxwidth -sticky w
+                                         #xgettext:no-tcl-format
     ${NS}::label $page.maxpctl -text [mc "Maximum graph width (% of pane)"]
     spinbox $page.maxpct -from 1 -to 100 -width 4 -textvariable maxgraphpct
     grid x $page.maxpctl $page.maxpct -sticky w
     ${NS}::checkbutton $page.showlocal -text [mc "Show local changes"] \
 	-variable showlocalchanges
     grid x $page.showlocal -sticky w
@@ -11933,13 +12027,13 @@
 # Unset GIT_TRACE var if set
 if { [info exists ::env(GIT_TRACE)] } {
     unset ::env(GIT_TRACE)
 }
 
 # defaults...
-set wrcomcmd "git diff-tree --stdin -p --pretty"
+set wrcomcmd "git diff-tree --stdin -p --pretty=email"
 
 set gitencoding {}
 catch {
     set gitencoding [exec git config --get i18n.commitencoding]
 }
 catch {
@@ -12106,12 +12200,13 @@
 	} elseif {![file exists [file dirname $config_file]]} {
 	    file mkdir [file dirname $config_file]
 	}
     }
     source $config_file
 }
+config_check_tmp_exists 50
 
 set config_variables {
     mainfont textfont uifont tabstop findmergefiles maxgraphpct maxwidth
     cmitmode wrapcomment autoselect autosellen showneartags maxrefs visiblerefs
     hideremotes showlocalchanges datetimeformat limitdiffs uicolor want_ttk
     bgcolor fgcolor uifgcolor uifgdisabledcolor colors diffcolors mergecolors
@@ -12119,12 +12214,16 @@
     extdifftool perfile_attrs headbgcolor headfgcolor headoutlinecolor
     remotebgcolor tagbgcolor tagfgcolor tagoutlinecolor reflinecolor
     filesepbgcolor filesepfgcolor linehoverbgcolor linehoverfgcolor
     linehoveroutlinecolor mainheadcirclecolor workingfilescirclecolor
     indexcirclecolor circlecolors linkfgcolor circleoutlinecolor
 }
+foreach var $config_variables {
+    config_init_trace $var
+    trace add variable $var write config_variable_change_cb
+}
 
 parsefont mainfont $mainfont
 eval font create mainfont [fontflags mainfont]
 eval font create mainfontbold [fontflags mainfont 1]
 
 parsefont textfont $textfont
@@ -12246,12 +12345,13 @@
 set selectedview 0
 set selectedhlview [mc "None"]
 set highlight_related [mc "None"]
 set highlight_files {}
 set viewfiles(0) {}
 set viewperm(0) 0
+set viewchanged(0) 0
 set viewargs(0) {}
 set viewargscmd(0) {}
 
 set selectedline {}
 set numcommits 0
 set loginstance 0
@@ -12304,12 +12404,13 @@
     set nextviewnum 2
     set viewname(1) [mc "Command line"]
     set viewfiles(1) $cmdline_files
     set viewargs(1) $revtreeargs
     set viewargscmd(1) $revtreeargscmd
     set viewperm(1) 0
+    set viewchanged(1) 0
     set vdatemode(1) 0
     addviewmenu 1
     .bar.view entryconf [mca "Edit view..."] -state normal
     .bar.view entryconf [mca "Delete view"] -state normal
 }
 
@@ -12319,12 +12420,13 @@
 	incr nextviewnum
 	set viewname($n) [lindex $v 0]
 	set viewfiles($n) [lindex $v 1]
 	set viewargs($n) [lindex $v 2]
 	set viewargscmd($n) [lindex $v 3]
 	set viewperm($n) 1
+	set viewchanged($n) 0
 	addviewmenu $n
     }
 }
 
 if {[tk windowingsystem] eq "win32"} {
     focus -force .
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/gitk-wish /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/gitk-wish
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/gitk-wish	2017-10-10 12:31:59.094631528 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/gitk-wish	2017-10-10 13:04:28.138560097 +0800
@@ -2513,12 +2513,19 @@
     if {[tk windowingsystem] == "win32"} {
 	bind . <MouseWheel> { windows_mousewheel_redirector %W %X %Y %D }
 	bind $ctext <MouseWheel> { windows_mousewheel_redirector %W %X %Y %D ; break }
     } else {
 	bindall <ButtonRelease-4> "allcanvs yview scroll -5 units"
 	bindall <ButtonRelease-5> "allcanvs yview scroll 5 units"
+	bind $ctext <Button> {
+	    if {"%b" eq 6} {
+		$ctext xview scroll -5 units
+	    } elseif {"%b" eq 7} {
+		$ctext xview scroll 5 units
+	    }
+	}
         if {[tk windowingsystem] eq "aqua"} {
             bindall <MouseWheel> {
                 set delta [expr {- (%D)}]
                 allcanvs yview scroll $delta units
             }
             bindall <Shift-MouseWheel> {
@@ -2773,57 +2780,139 @@
 	set progupdatepending 0
 	set lastprogupdate [clock clicks -milliseconds]
 	update
     }
 }
 
+proc config_check_tmp_exists {tries_left} {
+    global config_file_tmp
+
+    if {[file exists $config_file_tmp]} {
+	incr tries_left -1
+	if {$tries_left > 0} {
+	    after 100 [list config_check_tmp_exists $tries_left]
+	} else {
+	    error_popup "There appears to be a stale $config_file_tmp\
+ file, which will prevent gitk from saving its configuration on exit.\
+ Please remove it if it is not being used by any existing gitk process."
+	}
+    }
+}
+
+proc config_init_trace {name} {
+    global config_variable_changed config_variable_original
+
+    upvar #0 $name var
+    set config_variable_changed($name) 0
+    set config_variable_original($name) $var
+}
+
+proc config_variable_change_cb {name name2 op} {
+    global config_variable_changed config_variable_original
+
+    upvar #0 $name var
+    if {$op eq "write" &&
+	(![info exists config_variable_original($name)] ||
+	 $config_variable_original($name) ne $var)} {
+	set config_variable_changed($name) 1
+    }
+}
+
 proc savestuff {w} {
-    global viewname viewfiles viewargs viewargscmd viewperm nextviewnum
-    global use_ttk
     global stuffsaved
     global config_file config_file_tmp
-    global config_variables
+    global config_variables config_variable_changed
+    global viewchanged
+
+    upvar #0 viewname current_viewname
+    upvar #0 viewfiles current_viewfiles
+    upvar #0 viewargs current_viewargs
+    upvar #0 viewargscmd current_viewargscmd
+    upvar #0 viewperm current_viewperm
+    upvar #0 nextviewnum current_nextviewnum
+    upvar #0 use_ttk current_use_ttk
 
     if {$stuffsaved} return
     if {![winfo viewable .]} return
-    catch {
-	if {[file exists $config_file_tmp]} {
-	    file delete -force $config_file_tmp
+    set remove_tmp 0
+    if {[catch {
+	set try_count 0
+	while {[catch {set f [open $config_file_tmp {WRONLY CREAT EXCL}]}]} {
+	    if {[incr try_count] > 50} {
+		error "Unable to write config file: $config_file_tmp exists"
+	    }
+	    after 100
 	}
-	set f [open $config_file_tmp w]
+	set remove_tmp 1
 	if {$::tcl_platform(platform) eq {windows}} {
 	    file attributes $config_file_tmp -hidden true
 	}
+	if {[file exists $config_file]} {
+	    source $config_file
+	}
 	foreach var_name $config_variables {
 	    upvar #0 $var_name var
-	    puts $f [list set $var_name $var]
+	    upvar 0 $var_name old_var
+	    if {!$config_variable_changed($var_name) && [info exists old_var]} {
+		puts $f [list set $var_name $old_var]
+	    } else {
+		puts $f [list set $var_name $var]
+	    }
 	}
 
 	puts $f "set geometry(main) [wm geometry .]"
 	puts $f "set geometry(state) [wm state .]"
 	puts $f "set geometry(topwidth) [winfo width .tf]"
 	puts $f "set geometry(topheight) [winfo height .tf]"
-	if {$use_ttk} {
+	if {$current_use_ttk} {
 	    puts $f "set geometry(pwsash0) \"[.tf.histframe.pwclist sashpos 0] 1\""
 	    puts $f "set geometry(pwsash1) \"[.tf.histframe.pwclist sashpos 1] 1\""
 	} else {
 	    puts $f "set geometry(pwsash0) \"[.tf.histframe.pwclist sash coord 0]\""
 	    puts $f "set geometry(pwsash1) \"[.tf.histframe.pwclist sash coord 1]\""
 	}
 	puts $f "set geometry(botwidth) [winfo width .bleft]"
 	puts $f "set geometry(botheight) [winfo height .bleft]"
 
+	array set view_save {}
+	array set views {}
+	if {![info exists permviews]} { set permviews {} }
+	foreach view $permviews {
+	    set view_save([lindex $view 0]) 1
+	    set views([lindex $view 0]) $view
+	}
 	puts -nonewline $f "set permviews {"
-	for {set v 0} {$v < $nextviewnum} {incr v} {
-	    if {$viewperm($v)} {
-		puts $f "{[list $viewname($v) $viewfiles($v) $viewargs($v) $viewargscmd($v)]}"
+	for {set v 1} {$v < $current_nextviewnum} {incr v} {
+	    if {$viewchanged($v)} {
+		if {$current_viewperm($v)} {
+		    set views($current_viewname($v)) [list $current_viewname($v) $current_viewfiles($v) $current_viewargs($v) $current_viewargscmd($v)]
+		} else {
+		    set view_save($current_viewname($v)) 0
+		}
+	    }
+	}
+	# write old and updated view to their places and append remaining to the end
+	foreach view $permviews {
+	    set view_name [lindex $view 0]
+	    if {$view_save($view_name)} {
+		puts $f "{$views($view_name)}"
 	    }
+	    unset views($view_name)
+	}
+	foreach view_name [array names views] {
+	    puts $f "{$views($view_name)}"
 	}
 	puts $f "}"
 	close $f
 	file rename -force $config_file_tmp $config_file
+	set remove_tmp 0
+    } err]} {
+        puts "Error saving config: $err"
+    }
+    if {$remove_tmp} {
+	file delete -force $config_file_tmp
     }
     set stuffsaved 1
 }
 
 proc resizeclistpanes {win w} {
     global oldwidth use_ttk
@@ -3974,12 +4063,13 @@
     {remotes   b    .  "--remotes"      {mc "All remote-tracking branches"}}
     {commitlbl l    +  {}               {mc "Commit Info (regular expressions):"}}
     {author    t15  .. "--author=*"     {mc "Author:"}}
     {committer t15  .  "--committer=*"  {mc "Committer:"}}
     {loginfo   t15  .. "--grep=*"       {mc "Commit Message:"}}
     {allmatch  b    .. "--all-match"    {mc "Matches all Commit Info criteria"}}
+    {igrep     b    .. "--invert-grep"  {mc "Matches none Commit Info criteria"}}
     {changes_l l    +  {}               {mc "Changes to Files:"}}
     {pickaxe_s r0   .  {}               {mc "Fixed String"}}
     {pickaxe_t r1   .  "--pickaxe-regex"  {mc "Regular Expression"}}
     {pickaxe   t15  .. "-S*"            {mc "Search string:"}}
     {datelabel l    +  {}               {mc "Commit Dates (\"2 weeks ago\", \"2009-03-17 15:27:38\", \"March 17, 2009 15:27:38\"):"}}
     {since     t15  ..  {"--since=*" "--after=*"}  {mc "Since:"}}
@@ -4235,13 +4325,13 @@
     doviewmenu .bar.view 5 [list showview $n] $op $args
     # doviewmenu $viewhlmenu 1 [list addvhighlight $n] $op $args
 }
 
 proc newviewok {top n {apply 0}} {
     global nextviewnum newviewperm newviewname newishighlight
-    global viewname viewfiles viewperm selectedview curview
+    global viewname viewfiles viewperm viewchanged selectedview curview
     global viewargs viewargscmd newviewopts viewhlmenu
 
     if {[catch {
 	set newargs [encode_view_opts $n]
     } err]} {
 	error_popup "[mc "Error in commit selection arguments:"] $err" $top
@@ -4256,24 +4346,26 @@
     }
     if {![info exists viewfiles($n)]} {
 	# creating a new view
 	incr nextviewnum
 	set viewname($n) $newviewname($n)
 	set viewperm($n) $newviewopts($n,perm)
+	set viewchanged($n) 1
 	set viewfiles($n) $files
 	set viewargs($n) $newargs
 	set viewargscmd($n) $newviewopts($n,cmd)
 	addviewmenu $n
 	if {!$newishighlight} {
 	    run showview $n
 	} else {
 	    run addvhighlight $n
 	}
     } else {
 	# editing an existing view
 	set viewperm($n) $newviewopts($n,perm)
+	set viewchanged($n) 1
 	if {$newviewname($n) ne $viewname($n)} {
 	    set viewname($n) $newviewname($n)
 	    doviewmenu .bar.view 5 [list showview $n] \
 		entryconf [list -label $viewname($n)]
 	    # doviewmenu $viewhlmenu 1 [list addvhighlight $n] \
 		# entryconf [list -label $viewname($n) -value $viewname($n)]
@@ -4290,21 +4382,22 @@
     }
     if {$apply} return
     catch {destroy $top}
 }
 
 proc delview {} {
-    global curview viewperm hlview selectedhlview
+    global curview viewperm hlview selectedhlview viewchanged
 
     if {$curview == 0} return
     if {[info exists hlview] && $hlview == $curview} {
 	set selectedhlview [mc "None"]
 	unset hlview
     }
     allviewmenus $curview delete
     set viewperm($curview) 0
+    set viewchanged($curview) 1
     showview 0
 }
 
 proc addviewmenu {n} {
     global viewname viewhlmenu
 
@@ -11234,12 +11327,13 @@
     ${NS}::label $page.ldisp -text [mc "Commit list display options"]
     grid $page.ldisp - -sticky w -pady 10
     ${NS}::label $page.spacer -text " "
     ${NS}::label $page.maxwidthl -text [mc "Maximum graph width (lines)"]
     spinbox $page.maxwidth -from 0 -to 100 -width 4 -textvariable maxwidth
     grid $page.spacer $page.maxwidthl $page.maxwidth -sticky w
+                                         #xgettext:no-tcl-format
     ${NS}::label $page.maxpctl -text [mc "Maximum graph width (% of pane)"]
     spinbox $page.maxpct -from 1 -to 100 -width 4 -textvariable maxgraphpct
     grid x $page.maxpctl $page.maxpct -sticky w
     ${NS}::checkbutton $page.showlocal -text [mc "Show local changes"] \
 	-variable showlocalchanges
     grid x $page.showlocal -sticky w
@@ -11933,13 +12027,13 @@
 # Unset GIT_TRACE var if set
 if { [info exists ::env(GIT_TRACE)] } {
     unset ::env(GIT_TRACE)
 }
 
 # defaults...
-set wrcomcmd "git diff-tree --stdin -p --pretty"
+set wrcomcmd "git diff-tree --stdin -p --pretty=email"
 
 set gitencoding {}
 catch {
     set gitencoding [exec git config --get i18n.commitencoding]
 }
 catch {
@@ -12106,12 +12200,13 @@
 	} elseif {![file exists [file dirname $config_file]]} {
 	    file mkdir [file dirname $config_file]
 	}
     }
     source $config_file
 }
+config_check_tmp_exists 50
 
 set config_variables {
     mainfont textfont uifont tabstop findmergefiles maxgraphpct maxwidth
     cmitmode wrapcomment autoselect autosellen showneartags maxrefs visiblerefs
     hideremotes showlocalchanges datetimeformat limitdiffs uicolor want_ttk
     bgcolor fgcolor uifgcolor uifgdisabledcolor colors diffcolors mergecolors
@@ -12119,12 +12214,16 @@
     extdifftool perfile_attrs headbgcolor headfgcolor headoutlinecolor
     remotebgcolor tagbgcolor tagfgcolor tagoutlinecolor reflinecolor
     filesepbgcolor filesepfgcolor linehoverbgcolor linehoverfgcolor
     linehoveroutlinecolor mainheadcirclecolor workingfilescirclecolor
     indexcirclecolor circlecolors linkfgcolor circleoutlinecolor
 }
+foreach var $config_variables {
+    config_init_trace $var
+    trace add variable $var write config_variable_change_cb
+}
 
 parsefont mainfont $mainfont
 eval font create mainfont [fontflags mainfont]
 eval font create mainfontbold [fontflags mainfont 1]
 
 parsefont textfont $textfont
@@ -12246,12 +12345,13 @@
 set selectedview 0
 set selectedhlview [mc "None"]
 set highlight_related [mc "None"]
 set highlight_files {}
 set viewfiles(0) {}
 set viewperm(0) 0
+set viewchanged(0) 0
 set viewargs(0) {}
 set viewargscmd(0) {}
 
 set selectedline {}
 set numcommits 0
 set loginstance 0
@@ -12304,12 +12404,13 @@
     set nextviewnum 2
     set viewname(1) [mc "Command line"]
     set viewfiles(1) $cmdline_files
     set viewargs(1) $revtreeargs
     set viewargscmd(1) $revtreeargscmd
     set viewperm(1) 0
+    set viewchanged(1) 0
     set vdatemode(1) 0
     addviewmenu 1
     .bar.view entryconf [mca "Edit view..."] -state normal
     .bar.view entryconf [mca "Delete view"] -state normal
 }
 
@@ -12319,12 +12420,13 @@
 	incr nextviewnum
 	set viewname($n) [lindex $v 0]
 	set viewfiles($n) [lindex $v 1]
 	set viewargs($n) [lindex $v 2]
 	set viewargscmd($n) [lindex $v 3]
 	set viewperm($n) 1
+	set viewchanged($n) 0
 	addviewmenu $n
     }
 }
 
 if {[tk windowingsystem] eq "win32"} {
     focus -force .
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/bg.msg /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/bg.msg
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/bg.msg	2017-10-10 12:31:59.098631528 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/bg.msg	2017-10-10 13:04:28.146560097 +0800
@@ -1,7 +1,7 @@
-set ::msgcat::header "Project-Id-Version: gitk master\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2014-08-03 11:17+0300\nPO-Revision-Date: 2014-07-28 07:32+0300\nLast-Translator: Alexander Shopov <ash@kambanaria.org>\nLanguage-Team: Bulgarian <dict@fsa-bg.org>\nLanguage: bg\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\nPlural-Forms: nplurals=2; plural=(n != 1);\n"
+set ::msgcat::header "Project-Id-Version: gitk master\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2015-03-15 14:37+1100\nPO-Revision-Date: 2014-07-28 07:32+0300\nLast-Translator: Alexander Shopov <ash@kambanaria.org>\nLanguage-Team: Bulgarian <dict@fsa-bg.org>\nLanguage: bg\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\nPlural-Forms: nplurals=2; plural=(n != 1);\n"
 ::msgcat::mcset bg "Couldn't get list of unmerged files:" "\u0421\u043f\u0438\u0441\u044a\u043a\u044a\u0442 \u0441 \u043d\u0435\u0441\u043b\u0435\u0442\u0438 \u0444\u0430\u0439\u043b\u043e\u0432\u0435 \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d:"
 ::msgcat::mcset bg "Color words" "\u041e\u0446\u0432\u0435\u0442\u044f\u0432\u0430\u043d\u0435 \u043d\u0430 \u0434\u0443\u043c\u0438\u0442\u0435"
 ::msgcat::mcset bg "Markup words" "\u041e\u0442\u0431\u0435\u043b\u044f\u0437\u0432\u0430\u043d\u0435 \u043d\u0430 \u0434\u0443\u043c\u0438\u0442\u0435"
 ::msgcat::mcset bg "Error parsing revisions:" "\u0413\u0440\u0435\u0448\u043a\u0430 \u043f\u0440\u0438 \u0440\u0430\u0437\u0431\u043e\u0440 \u043d\u0430 \u0432\u0435\u0440\u0441\u0438\u0438\u0442\u0435:"
 ::msgcat::mcset bg "Error executing --argscmd command:" "\u0413\u0440\u0435\u0448\u043a\u0430 \u043f\u0440\u0438 \u0438\u0437\u043f\u044a\u043b\u043d\u0435\u043d\u0438\u0435 \u043d\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u0430\u0442\u0430 \u0441 \u201e--argscmd\u201c."
 ::msgcat::mcset bg "No files selected: --merge specified but no files are unmerged." "\u041d\u0435 \u0441\u0430 \u0438\u0437\u0431\u0440\u0430\u043d\u0438 \u0444\u0430\u0439\u043b\u043e\u0432\u0435 \u2014 \u0443\u043a\u0430\u0437\u0430\u043d\u0430 \u0435 \u043e\u043f\u0446\u0438\u044f\u0442\u0430 \u201e--merge\u201c, \u043d\u043e \u043d\u044f\u043c\u0430 \u043d\u0435\u0441\u043b\u0435\u0442\u0438 \u0444\u0430\u0439\u043b\u043e\u0432\u0435."
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/bg.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/bg.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/bg.po	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/bg.po	2015-05-01 03:12:02.000000000 +0800
@@ -5,13 +5,13 @@
 #
 #
 msgid ""
 msgstr ""
 "Project-Id-Version: gitk master\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2014-08-03 11:17+0300\n"
+"POT-Creation-Date: 2015-03-15 14:37+1100\n"
 "PO-Revision-Date: 2014-07-28 07:32+0300\n"
 "Last-Translator: Alexander Shopov <ash@kambanaria.org>\n"
 "Language-Team: Bulgarian <dict@fsa-bg.org>\n"
 "Language: bg\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
@@ -19,341 +19,341 @@
 "Plural-Forms: nplurals=2; plural=(n != 1);\n"
 
 #: gitk:140
 msgid "Couldn't get list of unmerged files:"
 msgstr "Списъкът с неслети файлове не може да бъде получен:"
 
-#: gitk:212 gitk:2379
+#: gitk:212 gitk:2381
 msgid "Color words"
 msgstr "Оцветяване на думите"
 
-#: gitk:217 gitk:2379 gitk:8155 gitk:8188
+#: gitk:217 gitk:2381 gitk:8201 gitk:8234
 msgid "Markup words"
 msgstr "Отбелязване на думите"
 
-#: gitk:322
+#: gitk:324
 msgid "Error parsing revisions:"
 msgstr "Грешка при разбор на версиите:"
 
-#: gitk:378
+#: gitk:380
 msgid "Error executing --argscmd command:"
 msgstr "Грешка при изпълнение на командата с „--argscmd“."
 
-#: gitk:391
+#: gitk:393
 msgid "No files selected: --merge specified but no files are unmerged."
 msgstr ""
 "Не са избрани файлове — указана е опцията „--merge“, но няма неслети файлове."
 
-#: gitk:394
+#: gitk:396
 msgid ""
 "No files selected: --merge specified but no unmerged files are within file "
 "limit."
 msgstr ""
 "Не са избрани файлове — указана е опцията „--merge“, но няма неслети файлове "
 "в ограниченията."
 
-#: gitk:416 gitk:564
+#: gitk:418 gitk:566
 msgid "Error executing git log:"
 msgstr "Грешка при изпълнение на „git log“:"
 
-#: gitk:434 gitk:580
+#: gitk:436 gitk:582
 msgid "Reading"
 msgstr "Прочитане"
 
-#: gitk:494 gitk:4470
+#: gitk:496 gitk:4508
 msgid "Reading commits..."
 msgstr "Прочитане на подаванията…"
 
-#: gitk:497 gitk:1635 gitk:4473
+#: gitk:499 gitk:1637 gitk:4511
 msgid "No commits selected"
 msgstr "Не са избрани подавания"
 
-#: gitk:1509
+#: gitk:1511
 msgid "Can't parse git log output:"
 msgstr "Изходът от „git log“ не може да се анализира:"
 
-#: gitk:1738
+#: gitk:1740
 msgid "No commit information available"
 msgstr "Липсва информация за подавания"
 
-#: gitk:1895
+#: gitk:1897
 msgid "mc"
 msgstr "mc"
 
-#: gitk:1930 gitk:4263 gitk:9604 gitk:11174 gitk:11453
+#: gitk:1932 gitk:4298 gitk:9650 gitk:11220 gitk:11500
 msgid "OK"
 msgstr "Добре"
 
-#: gitk:1932 gitk:4265 gitk:9131 gitk:9210 gitk:9326 gitk:9375 gitk:9606
-#: gitk:11175 gitk:11454
+#: gitk:1934 gitk:4300 gitk:9177 gitk:9256 gitk:9372 gitk:9421 gitk:9652
+#: gitk:11221 gitk:11501
 msgid "Cancel"
 msgstr "Отказ"
 
-#: gitk:2067
+#: gitk:2069
 msgid "Update"
 msgstr "Обновяване"
 
-#: gitk:2068
+#: gitk:2070
 msgid "Reload"
 msgstr "Презареждане"
 
-#: gitk:2069
+#: gitk:2071
 msgid "Reread references"
 msgstr "Наново прочитане на настройките"
 
-#: gitk:2070
+#: gitk:2072
 msgid "List references"
 msgstr "Изброяване на указателите"
 
-#: gitk:2072
+#: gitk:2074
 msgid "Start git gui"
 msgstr "Стартиране на „git gui“"
 
-#: gitk:2074
+#: gitk:2076
 msgid "Quit"
 msgstr "Спиране на програмата"
 
-#: gitk:2066
+#: gitk:2068
 msgid "File"
 msgstr "Файл"
 
-#: gitk:2078
+#: gitk:2080
 msgid "Preferences"
 msgstr "Настройки"
 
-#: gitk:2077
+#: gitk:2079
 msgid "Edit"
 msgstr "Редактиране"
 
-#: gitk:2082
+#: gitk:2084
 msgid "New view..."
 msgstr "Нов изглед…"
 
-#: gitk:2083
+#: gitk:2085
 msgid "Edit view..."
 msgstr "Редактиране на изгледа…"
 
-#: gitk:2084
+#: gitk:2086
 msgid "Delete view"
 msgstr "Изтриване на изгледа"
 
-#: gitk:2086
+#: gitk:2088
 msgid "All files"
 msgstr "Всички файлове"
 
-#: gitk:2081 gitk:4016
+#: gitk:2083 gitk:4050
 msgid "View"
 msgstr "Изглед"
 
-#: gitk:2091 gitk:2101 gitk:2976
+#: gitk:2093 gitk:2103 gitk:3009
 msgid "About gitk"
 msgstr "Относно gitk"
 
-#: gitk:2092 gitk:2106
+#: gitk:2094 gitk:2108
 msgid "Key bindings"
 msgstr "Клавишни комбинации"
 
-#: gitk:2090 gitk:2105
+#: gitk:2092 gitk:2107
 msgid "Help"
 msgstr "Помощ"
 
-#: gitk:2183 gitk:8587
+#: gitk:2185 gitk:8633
 msgid "SHA1 ID:"
 msgstr "SHA1:"
 
-#: gitk:2227
+#: gitk:2229
 msgid "Row"
 msgstr "Ред"
 
-#: gitk:2265
+#: gitk:2267
 msgid "Find"
 msgstr "Търсене"
 
-#: gitk:2293
+#: gitk:2295
 msgid "commit"
 msgstr "подаване"
 
-#: gitk:2297 gitk:2299 gitk:4631 gitk:4654 gitk:4678 gitk:6698 gitk:6770
-#: gitk:6855
+#: gitk:2299 gitk:2301 gitk:4669 gitk:4692 gitk:4716 gitk:6736 gitk:6808
+#: gitk:6893
 msgid "containing:"
 msgstr "съдържащо:"
 
-#: gitk:2300 gitk:3488 gitk:3493 gitk:4707
+#: gitk:2302 gitk:3522 gitk:3527 gitk:4745
 msgid "touching paths:"
 msgstr "засягащо пътищата:"
 
-#: gitk:2301 gitk:4721
+#: gitk:2303 gitk:4759
 msgid "adding/removing string:"
 msgstr "добавящо/премахващо низ"
 
-#: gitk:2302 gitk:4723
+#: gitk:2304 gitk:4761
 msgid "changing lines matching:"
 msgstr "променящо редове напасващи:"
 
-#: gitk:2311 gitk:2313 gitk:4710
+#: gitk:2313 gitk:2315 gitk:4748
 msgid "Exact"
 msgstr "Точно"
 
-#: gitk:2313 gitk:4798 gitk:6666
+#: gitk:2315 gitk:4836 gitk:6704
 msgid "IgnCase"
 msgstr "Без регистър"
 
-#: gitk:2313 gitk:4680 gitk:4796 gitk:6662
+#: gitk:2315 gitk:4718 gitk:4834 gitk:6700
 msgid "Regexp"
 msgstr "Рег. израз"
 
-#: gitk:2315 gitk:2316 gitk:4818 gitk:4848 gitk:4855 gitk:6791 gitk:6859
+#: gitk:2317 gitk:2318 gitk:4856 gitk:4886 gitk:4893 gitk:6829 gitk:6897
 msgid "All fields"
 msgstr "Всички полета"
 
-#: gitk:2316 gitk:4815 gitk:4848 gitk:6729
+#: gitk:2318 gitk:4853 gitk:4886 gitk:6767
 msgid "Headline"
 msgstr "Първи ред"
 
-#: gitk:2317 gitk:4815 gitk:6729 gitk:6859 gitk:7332
+#: gitk:2319 gitk:4853 gitk:6767 gitk:6897 gitk:7370
 msgid "Comments"
 msgstr "Коментари"
 
-#: gitk:2317 gitk:4815 gitk:4820 gitk:4855 gitk:6729 gitk:7267 gitk:8765
-#: gitk:8780
+#: gitk:2319 gitk:4853 gitk:4858 gitk:4893 gitk:6767 gitk:7305 gitk:8811
+#: gitk:8826
 msgid "Author"
 msgstr "Автор"
 
-#: gitk:2317 gitk:4815 gitk:6729 gitk:7269
+#: gitk:2319 gitk:4853 gitk:6767 gitk:7307
 msgid "Committer"
 msgstr "Подаващ"
 
-#: gitk:2348
+#: gitk:2350
 msgid "Search"
 msgstr "Търсене"
 
-#: gitk:2356
+#: gitk:2358
 msgid "Diff"
 msgstr "Разлики"
 
-#: gitk:2358
+#: gitk:2360
 msgid "Old version"
 msgstr "Стара версия"
 
-#: gitk:2360
+#: gitk:2362
 msgid "New version"
 msgstr "Нова версия"
 
-#: gitk:2362
+#: gitk:2364
 msgid "Lines of context"
 msgstr "Контекст в редове"
 
-#: gitk:2372
+#: gitk:2374
 msgid "Ignore space change"
 msgstr "Празните знаци без значение"
 
-#: gitk:2376 gitk:2378 gitk:7894 gitk:8141
+#: gitk:2378 gitk:2380 gitk:7940 gitk:8187
 msgid "Line diff"
 msgstr "Поредови разлики"
 
-#: gitk:2443
+#: gitk:2445
 msgid "Patch"
 msgstr "Кръпка"
 
-#: gitk:2445
+#: gitk:2447
 msgid "Tree"
 msgstr "Дърво"
 
-#: gitk:2604 gitk:2624
+#: gitk:2616 gitk:2636
 msgid "Diff this -> selected"
 msgstr "Разлики между това и избраното"
 
-#: gitk:2605 gitk:2625
+#: gitk:2617 gitk:2637
 msgid "Diff selected -> this"
 msgstr "Разлики между избраното и това"
 
-#: gitk:2606 gitk:2626
+#: gitk:2618 gitk:2638
 msgid "Make patch"
 msgstr "Създаване на кръпка"
 
-#: gitk:2607 gitk:9189
+#: gitk:2619 gitk:9235
 msgid "Create tag"
 msgstr "Създаване на етикет"
 
-#: gitk:2608 gitk:9306
+#: gitk:2620 gitk:9352
 msgid "Write commit to file"
 msgstr "Запазване на подаването във файл"
 
-#: gitk:2609 gitk:9363
+#: gitk:2621 gitk:9409
 msgid "Create new branch"
 msgstr "Създаване на нов клон"
 
-#: gitk:2610
+#: gitk:2622
 msgid "Cherry-pick this commit"
 msgstr "Отбиране на това подаване"
 
-#: gitk:2611
+#: gitk:2623
 msgid "Reset HEAD branch to here"
 msgstr "Привеждане на върха на клона към текущото подаване"
 
-#: gitk:2612
+#: gitk:2624
 msgid "Mark this commit"
 msgstr "Отбелязване на това подаване"
 
-#: gitk:2613
+#: gitk:2625
 msgid "Return to mark"
 msgstr "Връщане към отбелязаното подаване"
 
-#: gitk:2614
+#: gitk:2626
 msgid "Find descendant of this and mark"
 msgstr "Откриване и отбелязване на наследниците"
 
-#: gitk:2615
+#: gitk:2627
 msgid "Compare with marked commit"
 msgstr "Сравнение с отбелязаното подаване"
 
-#: gitk:2616 gitk:2627
+#: gitk:2628 gitk:2639
 msgid "Diff this -> marked commit"
 msgstr "Разлики между това и отбелязаното"
 
-#: gitk:2617 gitk:2628
+#: gitk:2629 gitk:2640
 msgid "Diff marked commit -> this"
 msgstr "Разлики между отбелязаното и това"
 
-#: gitk:2618
+#: gitk:2630
 msgid "Revert this commit"
 msgstr "Отмяна на това подаване"
 
-#: gitk:2634
+#: gitk:2646
 msgid "Check out this branch"
 msgstr "Изтегляне на този клон"
 
-#: gitk:2635
+#: gitk:2647
 msgid "Remove this branch"
 msgstr "Изтриване на този клон"
 
-#: gitk:2642
+#: gitk:2654
 msgid "Highlight this too"
 msgstr "Отбелязване и на това"
 
-#: gitk:2643
+#: gitk:2655
 msgid "Highlight this only"
 msgstr "Отбелязване само на това"
 
-#: gitk:2644
+#: gitk:2656
 msgid "External diff"
 msgstr "Външна програма за разлики"
 
-#: gitk:2645
+#: gitk:2657
 msgid "Blame parent commit"
 msgstr "Анотиране на родителското подаване"
 
-#: gitk:2652
+#: gitk:2664
 msgid "Show origin of this line"
 msgstr "Показване на произхода на този ред"
 
-#: gitk:2653
+#: gitk:2665
 msgid "Run git gui blame on this line"
 msgstr "Изпълнение на „git gui blame“ върху този ред"
 
-#: gitk:2978
+#: gitk:3011
 msgid ""
 "\n"
 "Gitk - a commit viewer for git\n"
 "\n"
 "Copyright © 2005-2014 Paul Mackerras\n"
 "\n"
@@ -363,978 +363,988 @@
 "Gitk — визуализация на подаванията в Git\n"
 "\n"
 "Авторски права: © 2005-2014 Paul Mackerras\n"
 "\n"
 "Използвайте и разпространявайте при условията на ОПЛ на ГНУ"
 
-#: gitk:2986 gitk:3051 gitk:9790
+#: gitk:3019 gitk:3085 gitk:9836
 msgid "Close"
 msgstr "Затваряне"
 
-#: gitk:3007
+#: gitk:3040
 msgid "Gitk key bindings"
 msgstr "Клавишни комбинации"
 
-#: gitk:3010
+#: gitk:3043
 msgid "Gitk key bindings:"
 msgstr "Клавишни комбинации:"
 
-#: gitk:3012
+#: gitk:3045
 #, tcl-format
 msgid "<%s-Q>\t\tQuit"
 msgstr "<%s-Q>\t\tСпиране на програмата"
 
-#: gitk:3013
+#: gitk:3046
 #, tcl-format
 msgid "<%s-W>\t\tClose window"
 msgstr "<%s-W>\t\tЗатваряне на прозореца"
 
-#: gitk:3014
+#: gitk:3047
 msgid "<Home>\t\tMove to first commit"
 msgstr "<Home>\t\tКъм първото подаване"
 
-#: gitk:3015
+#: gitk:3048
 msgid "<End>\t\tMove to last commit"
 msgstr "<End>\t\tКъм последното подаване"
 
-#: gitk:3016
+#: gitk:3049
 msgid "<Up>, p, k\tMove up one commit"
 msgstr "<Up>, p, k\tЕдно подаване нагоре"
 
-#: gitk:3017
+#: gitk:3050
 msgid "<Down>, n, j\tMove down one commit"
 msgstr "<Down>, n, j\tЕдно подаване надолу"
 
-#: gitk:3018
+#: gitk:3051
 msgid "<Left>, z, h\tGo back in history list"
 msgstr "<Left>, z, h\tНазад в историята"
 
-#: gitk:3019
+#: gitk:3052
 msgid "<Right>, x, l\tGo forward in history list"
 msgstr "<Right>, x, l\tНапред в историята"
 
-#: gitk:3020
+#: gitk:3053
+#, tcl-format
+msgid "<%s-n>\tGo to n-th parent of current commit in history list"
+msgstr ""
+
+#: gitk:3054
 msgid "<PageUp>\tMove up one page in commit list"
 msgstr "<PageUp>\tСтраница нагоре в списъка с подаванията"
 
-#: gitk:3021
+#: gitk:3055
 msgid "<PageDown>\tMove down one page in commit list"
 msgstr "<PageDown>\tСтраница надолу в списъка с подаванията"
 
-#: gitk:3022
+#: gitk:3056
 #, tcl-format
 msgid "<%s-Home>\tScroll to top of commit list"
 msgstr "<%s-Home>\tКъм началото на списъка с подаванията"
 
-#: gitk:3023
+#: gitk:3057
 #, tcl-format
 msgid "<%s-End>\tScroll to bottom of commit list"
 msgstr "<%s-End>\tКъм края на списъка с подаванията"
 
-#: gitk:3024
+#: gitk:3058
 #, tcl-format
 msgid "<%s-Up>\tScroll commit list up one line"
 msgstr "<%s-Up>\tРед нагоре в списъка с подавания"
 
-#: gitk:3025
+#: gitk:3059
 #, tcl-format
 msgid "<%s-Down>\tScroll commit list down one line"
 msgstr "<%s-Down>\tРед надолу в списъка с подавания"
 
-#: gitk:3026
+#: gitk:3060
 #, tcl-format
 msgid "<%s-PageUp>\tScroll commit list up one page"
 msgstr "<%s-PageUp>\tСтраница нагоре в списъка с подавания"
 
-#: gitk:3027
+#: gitk:3061
 #, tcl-format
 msgid "<%s-PageDown>\tScroll commit list down one page"
 msgstr "<%s-PageDown>\tСтраница надолу в списъка с подавания"
 
-#: gitk:3028
+#: gitk:3062
 msgid "<Shift-Up>\tFind backwards (upwards, later commits)"
 msgstr "<Shift-Up>\tТърсене назад (визуално нагоре, исторически — последващи)"
 
-#: gitk:3029
+#: gitk:3063
 msgid "<Shift-Down>\tFind forwards (downwards, earlier commits)"
 msgstr ""
 "<Shift-Down>\tТърсене напред (визуално надолу, исторически — предхождащи)"
 
-#: gitk:3030
+#: gitk:3064
 msgid "<Delete>, b\tScroll diff view up one page"
 msgstr "<Delete>, b\tСтраница нагоре в изгледа за разлики"
 
-#: gitk:3031
+#: gitk:3065
 msgid "<Backspace>\tScroll diff view up one page"
 msgstr "<Backspace>\tСтраница надолу в изгледа за разлики"
 
-#: gitk:3032
+#: gitk:3066
 msgid "<Space>\t\tScroll diff view down one page"
 msgstr "<Space>\t\tСтраница надолу в изгледа за разлики"
 
-#: gitk:3033
+#: gitk:3067
 msgid "u\t\tScroll diff view up 18 lines"
 msgstr "u\t\t18 реда нагоре в изгледа за разлики"
 
-#: gitk:3034
+#: gitk:3068
 msgid "d\t\tScroll diff view down 18 lines"
 msgstr "d\t\t18 реда надолу в изгледа за разлики"
 
-#: gitk:3035
+#: gitk:3069
 #, tcl-format
 msgid "<%s-F>\t\tFind"
 msgstr "<%s-F>\t\tТърсене"
 
-#: gitk:3036
+#: gitk:3070
 #, tcl-format
 msgid "<%s-G>\t\tMove to next find hit"
 msgstr "<%s-G>\t\tКъм следващата поява"
 
-#: gitk:3037
+#: gitk:3071
 msgid "<Return>\tMove to next find hit"
 msgstr "<Return>\tКъм следващата поява"
 
-#: gitk:3038
+#: gitk:3072
 msgid "/\t\tFocus the search box"
 msgstr "/\t\tФокус върху полето за търсене"
 
-#: gitk:3039
+#: gitk:3073
 msgid "?\t\tMove to previous find hit"
 msgstr "?\t\tКъм предишната поява"
 
-#: gitk:3040
+#: gitk:3074
 msgid "f\t\tScroll diff view to next file"
 msgstr "f\t\tСледващ файл в изгледа за разлики"
 
-#: gitk:3041
+#: gitk:3075
 #, tcl-format
 msgid "<%s-S>\t\tSearch for next hit in diff view"
 msgstr "<%s-S>\t\tТърсене на следващата поява в изгледа за разлики"
 
-#: gitk:3042
+#: gitk:3076
 #, tcl-format
 msgid "<%s-R>\t\tSearch for previous hit in diff view"
 msgstr "<%s-R>\t\tТърсене на предишната поява в изгледа за разлики"
 
-#: gitk:3043
+#: gitk:3077
 #, tcl-format
 msgid "<%s-KP+>\tIncrease font size"
 msgstr "<%s-KP+>\tПо-голям размер на шрифта"
 
-#: gitk:3044
+#: gitk:3078
 #, tcl-format
 msgid "<%s-plus>\tIncrease font size"
 msgstr "<%s-plus>\tПо-голям размер на шрифта"
 
-#: gitk:3045
+#: gitk:3079
 #, tcl-format
 msgid "<%s-KP->\tDecrease font size"
 msgstr "<%s-KP->\tПо-малък размер на шрифта"
 
-#: gitk:3046
+#: gitk:3080
 #, tcl-format
 msgid "<%s-minus>\tDecrease font size"
 msgstr "<%s-minus>\tПо-малък размер на шрифта"
 
-#: gitk:3047
+#: gitk:3081
 msgid "<F5>\t\tUpdate"
 msgstr "<F5>\t\tОбновяване"
 
-#: gitk:3512 gitk:3521
+#: gitk:3546 gitk:3555
 #, tcl-format
 msgid "Error creating temporary directory %s:"
 msgstr "Грешка при създаването на временната директория „%s“:"
 
-#: gitk:3534
+#: gitk:3568
 #, tcl-format
 msgid "Error getting \"%s\" from %s:"
 msgstr "Грешка при получаването на „%s“ от %s:"
 
-#: gitk:3597
+#: gitk:3631
 msgid "command failed:"
 msgstr "неуспешно изпълнение на команда:"
 
-#: gitk:3746
+#: gitk:3780
 msgid "No such commit"
 msgstr "Такова подаване няма"
 
-#: gitk:3760
+#: gitk:3794
 msgid "git gui blame: command failed:"
 msgstr "„git gui blame“: неуспешно изпълнение на команда:"
 
-#: gitk:3791
+#: gitk:3825
 #, tcl-format
 msgid "Couldn't read merge head: %s"
 msgstr "Върхът за сливане не може да бъде прочетен: %s"
 
-#: gitk:3799
+#: gitk:3833
 #, tcl-format
 msgid "Error reading index: %s"
 msgstr "Грешка при прочитане на индекса: %s"
 
-#: gitk:3824
+#: gitk:3858
 #, tcl-format
 msgid "Couldn't start git blame: %s"
 msgstr "Командата „git blame“ не може да бъде стартирана: %s"
 
-#: gitk:3827 gitk:6697
+#: gitk:3861 gitk:6735
 msgid "Searching"
 msgstr "Търсене"
 
-#: gitk:3859
+#: gitk:3893
 #, tcl-format
 msgid "Error running git blame: %s"
 msgstr "Грешка при изпълнението на „git blame“: %s"
 
-#: gitk:3887
+#: gitk:3921
 #, tcl-format
 msgid "That line comes from commit %s,  which is not in this view"
 msgstr "Този ред идва от подаването %s,  което не е в изгледа"
 
-#: gitk:3901
+#: gitk:3935
 msgid "External diff viewer failed:"
 msgstr "Неуспешно изпълнение на външната програма за разлики:"
 
-#: gitk:4019
+#: gitk:4053
 msgid "Gitk view definition"
 msgstr "Дефиниция на изглед в Gitk"
 
-#: gitk:4023
+#: gitk:4057
 msgid "Remember this view"
 msgstr "Запазване на този изглед"
 
-#: gitk:4024
+#: gitk:4058
 msgid "References (space separated list):"
 msgstr "Указатели (списък с разделител интервал):"
 
-#: gitk:4025
+#: gitk:4059
 msgid "Branches & tags:"
 msgstr "Клони и етикети:"
 
-#: gitk:4026
+#: gitk:4060
 msgid "All refs"
 msgstr "Всички указатели"
 
-#: gitk:4027
+#: gitk:4061
 msgid "All (local) branches"
 msgstr "Всички (локални) клони"
 
-#: gitk:4028
+#: gitk:4062
 msgid "All tags"
 msgstr "Всички етикети"
 
-#: gitk:4029
+#: gitk:4063
 msgid "All remote-tracking branches"
 msgstr "Всички следящи клони"
 
-#: gitk:4030
+#: gitk:4064
 msgid "Commit Info (regular expressions):"
 msgstr "Информация за подаване (рег. изр.):"
 
-#: gitk:4031
+#: gitk:4065
 msgid "Author:"
 msgstr "Автор:"
 
-#: gitk:4032
+#: gitk:4066
 msgid "Committer:"
 msgstr "Подал:"
 
-#: gitk:4033
+#: gitk:4067
 msgid "Commit Message:"
 msgstr "Съобщение при подаване:"
 
-#: gitk:4034
+#: gitk:4068
 msgid "Matches all Commit Info criteria"
 msgstr "Съвпадение по коя да е информация за подаването"
 
-#: gitk:4035
+#: gitk:4069
+#, fuzzy
+msgid "Matches none Commit Info criteria"
+msgstr "Съвпадение по коя да е информация за подаването"
+
+#: gitk:4070
 msgid "Changes to Files:"
 msgstr "Промени по файловете:"
 
-#: gitk:4036
+#: gitk:4071
 msgid "Fixed String"
 msgstr "Дословен низ"
 
-#: gitk:4037
+#: gitk:4072
 msgid "Regular Expression"
 msgstr "Регулярен израз"
 
-#: gitk:4038
+#: gitk:4073
 msgid "Search string:"
 msgstr "Низ за търсене:"
 
-#: gitk:4039
+#: gitk:4074
 msgid ""
 "Commit Dates (\"2 weeks ago\", \"2009-03-17 15:27:38\", \"March 17, 2009 "
 "15:27:38\"):"
 msgstr ""
 "Дата на подаване („2 weeks ago“ (преди 2 седмици), „2009-03-17 15:27:38“, "
 "„March 17, 2009 15:27:38“):"
 
-#: gitk:4040
+#: gitk:4075
 msgid "Since:"
 msgstr "От:"
 
-#: gitk:4041
+#: gitk:4076
 msgid "Until:"
 msgstr "До:"
 
-#: gitk:4042
+#: gitk:4077
 msgid "Limit and/or skip a number of revisions (positive integer):"
 msgstr ""
 "Ограничаване и/или прескачане на определен брой версии (неотрицателно цяло "
 "число):"
 
-#: gitk:4043
+#: gitk:4078
 msgid "Number to show:"
 msgstr "Брой показани:"
 
-#: gitk:4044
+#: gitk:4079
 msgid "Number to skip:"
 msgstr "Брой прескочени:"
 
-#: gitk:4045
+#: gitk:4080
 msgid "Miscellaneous options:"
 msgstr "Разни:"
 
-#: gitk:4046
+#: gitk:4081
 msgid "Strictly sort by date"
 msgstr "Подреждане по дата"
 
-#: gitk:4047
+#: gitk:4082
 msgid "Mark branch sides"
 msgstr "Отбелязване на страните по клона"
 
-#: gitk:4048
+#: gitk:4083
 msgid "Limit to first parent"
 msgstr "Само първия родител"
 
-#: gitk:4049
+#: gitk:4084
 msgid "Simple history"
 msgstr "Опростена история"
 
-#: gitk:4050
+#: gitk:4085
 msgid "Additional arguments to git log:"
 msgstr "Допълнителни аргументи към „git log“:"
 
-#: gitk:4051
+#: gitk:4086
 msgid "Enter files and directories to include, one per line:"
 msgstr "Въведете файловете и директориите за включване, по елемент на ред"
 
-#: gitk:4052
+#: gitk:4087
 msgid "Command to generate more commits to include:"
 msgstr ""
 "Команда за генерирането на допълнителни подавания, които да бъдат включени:"
 
-#: gitk:4176
+#: gitk:4211
 msgid "Gitk: edit view"
 msgstr "Gitk: редактиране на изглед"
 
-#: gitk:4184
+#: gitk:4219
 msgid "-- criteria for selecting revisions"
 msgstr "— критерии за избор на версии"
 
-#: gitk:4189
+#: gitk:4224
 msgid "View Name"
 msgstr "Име на изглед"
 
-#: gitk:4264
+#: gitk:4299
 msgid "Apply (F5)"
 msgstr "Прилагане (F5)"
 
-#: gitk:4302
+#: gitk:4337
 msgid "Error in commit selection arguments:"
 msgstr "Грешка в аргументите за избор на подавания:"
 
-#: gitk:4355 gitk:4407 gitk:4868 gitk:4882 gitk:6152 gitk:12281 gitk:12282
+#: gitk:4392 gitk:4445 gitk:4906 gitk:4920 gitk:6190 gitk:12346 gitk:12347
 msgid "None"
 msgstr "Няма"
 
-#: gitk:4965 gitk:4970
+#: gitk:5003 gitk:5008
 msgid "Descendant"
 msgstr "Наследник"
 
-#: gitk:4966
+#: gitk:5004
 msgid "Not descendant"
 msgstr "Не е наследник"
 
-#: gitk:4973 gitk:4978
+#: gitk:5011 gitk:5016
 msgid "Ancestor"
 msgstr "Предшественик"
 
-#: gitk:4974
+#: gitk:5012
 msgid "Not ancestor"
 msgstr "Не е предшественик"
 
-#: gitk:5268
+#: gitk:5306
 msgid "Local changes checked in to index but not committed"
 msgstr "Локални промени добавени към индекса, но неподадени"
 
-#: gitk:5304
+#: gitk:5342
 msgid "Local uncommitted changes, not checked in to index"
 msgstr "Локални промени извън индекса"
 
-#: gitk:7077
+#: gitk:7115
 msgid "and many more"
 msgstr "и още много"
 
-#: gitk:7080
+#: gitk:7118
 msgid "many"
 msgstr "много"
 
-#: gitk:7271
+#: gitk:7309
 msgid "Tags:"
 msgstr "Етикети:"
 
-#: gitk:7288 gitk:7294 gitk:8760
+#: gitk:7326 gitk:7332 gitk:8806
 msgid "Parent"
 msgstr "Родител"
 
-#: gitk:7299
+#: gitk:7337
 msgid "Child"
 msgstr "Дете"
 
-#: gitk:7308
+#: gitk:7346
 msgid "Branch"
 msgstr "Клон"
 
-#: gitk:7311
+#: gitk:7349
 msgid "Follows"
 msgstr "Следва"
 
-#: gitk:7314
+#: gitk:7352
 msgid "Precedes"
 msgstr "Предшества"
 
-#: gitk:7901
+#: gitk:7947
 #, tcl-format
 msgid "Error getting diffs: %s"
 msgstr "Грешка при получаването на разликите: %s"
 
-#: gitk:8585
+#: gitk:8631
 msgid "Goto:"
 msgstr "Към ред:"
 
-#: gitk:8606
+#: gitk:8652
 #, tcl-format
 msgid "Short SHA1 id %s is ambiguous"
 msgstr "Съкратената сума по SHA1 %s не е еднозначна"
 
-#: gitk:8613
+#: gitk:8659
 #, tcl-format
 msgid "Revision %s is not known"
 msgstr "Непозната версия %s"
 
-#: gitk:8623
+#: gitk:8669
 #, tcl-format
 msgid "SHA1 id %s is not known"
 msgstr "Непозната сума по SHA1 %s"
 
-#: gitk:8625
+#: gitk:8671
 #, tcl-format
 msgid "Revision %s is not in the current view"
 msgstr "Версия %s не е в текущия изглед"
 
-#: gitk:8767 gitk:8782
+#: gitk:8813 gitk:8828
 msgid "Date"
 msgstr "Дата"
 
-#: gitk:8770
+#: gitk:8816
 msgid "Children"
 msgstr "Деца"
 
-#: gitk:8833
+#: gitk:8879
 #, tcl-format
 msgid "Reset %s branch to here"
 msgstr "Зануляване на клона „%s“ към текущото подаване"
 
-#: gitk:8835
+#: gitk:8881
 msgid "Detached head: can't reset"
 msgstr "Несвързан връх: невъзможно зануляване"
 
-#: gitk:8940 gitk:8946
+#: gitk:8986 gitk:8992
 msgid "Skipping merge commit "
 msgstr "Пропускане на подаването на сливането"
 
-#: gitk:8955 gitk:8960
+#: gitk:9001 gitk:9006
 msgid "Error getting patch ID for "
 msgstr "Грешка при получаването на идентификатора на "
 
-#: gitk:8956 gitk:8961
+#: gitk:9002 gitk:9007
 msgid " - stopping\n"
 msgstr " — спиране\n"
 
-#: gitk:8966 gitk:8969 gitk:8977 gitk:8991 gitk:9000
+#: gitk:9012 gitk:9015 gitk:9023 gitk:9037 gitk:9046
 msgid "Commit "
 msgstr "Подаване"
 
-#: gitk:8970
+#: gitk:9016
 msgid ""
 " is the same patch as\n"
 "       "
 msgstr ""
 " е същата кръпка като\n"
 "       "
 
-#: gitk:8978
+#: gitk:9024
 msgid ""
 " differs from\n"
 "       "
 msgstr ""
 " се различава от\n"
 "       "
 
-#: gitk:8980
+#: gitk:9026
 msgid ""
 "Diff of commits:\n"
 "\n"
 msgstr ""
 "Разлика между подаванията:\n"
 "\n"
 
-#: gitk:8992 gitk:9001
+#: gitk:9038 gitk:9047
 #, tcl-format
 msgid " has %s children - stopping\n"
 msgstr " има %s деца — спиране\n"
 
-#: gitk:9020
+#: gitk:9066
 #, tcl-format
 msgid "Error writing commit to file: %s"
 msgstr "Грешка при запазването на подаването във файл: %s"
 
-#: gitk:9026
+#: gitk:9072
 #, tcl-format
 msgid "Error diffing commits: %s"
 msgstr "Грешка при изчисляването на разликите между подаванията: %s"
 
-#: gitk:9072
+#: gitk:9118
 msgid "Top"
 msgstr "Най-горе"
 
-#: gitk:9073
+#: gitk:9119
 msgid "From"
 msgstr "От"
 
-#: gitk:9078
+#: gitk:9124
 msgid "To"
 msgstr "До"
 
-#: gitk:9102
+#: gitk:9148
 msgid "Generate patch"
 msgstr "Генериране на кръпка"
 
-#: gitk:9104
+#: gitk:9150
 msgid "From:"
 msgstr "От:"
 
-#: gitk:9113
+#: gitk:9159
 msgid "To:"
 msgstr "До:"
 
-#: gitk:9122
+#: gitk:9168
 msgid "Reverse"
 msgstr "Обръщане"
 
-#: gitk:9124 gitk:9320
+#: gitk:9170 gitk:9366
 msgid "Output file:"
 msgstr "Запазване във файла:"
 
-#: gitk:9130
+#: gitk:9176
 msgid "Generate"
 msgstr "Генериране"
 
-#: gitk:9168
+#: gitk:9214
 msgid "Error creating patch:"
 msgstr "Грешка при създаването на кръпка:"
 
-#: gitk:9191 gitk:9308 gitk:9365
+#: gitk:9237 gitk:9354 gitk:9411
 msgid "ID:"
 msgstr "Идентификатор:"
 
-#: gitk:9200
+#: gitk:9246
 msgid "Tag name:"
 msgstr "Име на етикет:"
 
-#: gitk:9203
+#: gitk:9249
 msgid "Tag message is optional"
 msgstr "Съобщението за етикет е незадължително"
 
-#: gitk:9205
+#: gitk:9251
 msgid "Tag message:"
 msgstr "Съобщение за етикет:"
 
-#: gitk:9209 gitk:9374
+#: gitk:9255 gitk:9420
 msgid "Create"
 msgstr "Създаване"
 
-#: gitk:9227
+#: gitk:9273
 msgid "No tag name specified"
 msgstr "Липсва име на етикет"
 
-#: gitk:9231
+#: gitk:9277
 #, tcl-format
 msgid "Tag \"%s\" already exists"
 msgstr "Етикетът „%s“ вече съществува"
 
-#: gitk:9241
+#: gitk:9287
 msgid "Error creating tag:"
 msgstr "Грешка при създаването на етикет:"
 
-#: gitk:9317
+#: gitk:9363
 msgid "Command:"
 msgstr "Команда:"
 
-#: gitk:9325
+#: gitk:9371
 msgid "Write"
 msgstr "Запазване"
 
-#: gitk:9343
+#: gitk:9389
 msgid "Error writing commit:"
 msgstr "Грешка при запазването на подаването:"
 
-#: gitk:9370
+#: gitk:9416
 msgid "Name:"
 msgstr "Име:"
 
-#: gitk:9393
+#: gitk:9439
 msgid "Please specify a name for the new branch"
 msgstr "Укажете име за новия клон"
 
-#: gitk:9398
+#: gitk:9444
 #, tcl-format
 msgid "Branch '%s' already exists. Overwrite?"
 msgstr "Клонът „%s“ вече съществува. Да бъде ли презаписан?"
 
-#: gitk:9465
+#: gitk:9511
 #, tcl-format
 msgid "Commit %s is already included in branch %s -- really re-apply it?"
 msgstr ""
 "Подаването „%s“ вече е включено в клона „%s“ — да бъде ли приложено отново?"
 
-#: gitk:9470
+#: gitk:9516
 msgid "Cherry-picking"
 msgstr "Отбиране"
 
-#: gitk:9479
+#: gitk:9525
 #, tcl-format
 msgid ""
 "Cherry-pick failed because of local changes to file '%s'.\n"
 "Please commit, reset or stash your changes and try again."
 msgstr ""
 "Неуспешно отбиране, защото във файла „%s“ има локални промени.\n"
 "Подайте, занулете или ги скатайте и пробвайте отново."
 
-#: gitk:9485
+#: gitk:9531
 msgid ""
 "Cherry-pick failed because of merge conflict.\n"
 "Do you wish to run git citool to resolve it?"
 msgstr ""
 "Неуспешно отбиране поради конфликти при сливане.\n"
 "Искате ли да ги коригирате чрез „git citool“?"
 
-#: gitk:9501 gitk:9559
+#: gitk:9547 gitk:9605
 msgid "No changes committed"
 msgstr "Не са подадени промени"
 
-#: gitk:9528
+#: gitk:9574
 #, tcl-format
 msgid "Commit %s is not included in branch %s -- really revert it?"
 msgstr "Подаването „%s“ не е включено в клона „%s“. Да бъде ли отменено?"
 
-#: gitk:9533
+#: gitk:9579
 msgid "Reverting"
 msgstr "Отмяна"
 
-#: gitk:9541
+#: gitk:9587
 #, tcl-format
 msgid ""
 "Revert failed because of local changes to the following files:%s Please "
 "commit, reset or stash  your changes and try again."
 msgstr ""
 "Неуспешна отмяна, защото във файла „%s“ има локални промени.\n"
 "Подайте, занулете или ги скатайте и пробвайте отново.<"
 
-#: gitk:9545
+#: gitk:9591
 msgid ""
 "Revert failed because of merge conflict.\n"
 " Do you wish to run git citool to resolve it?"
 msgstr ""
 "Неуспешно отмяна поради конфликти при сливане.\n"
 "Искате ли да ги коригирате чрез „git citool“?"
 
-#: gitk:9588
+#: gitk:9634
 msgid "Confirm reset"
 msgstr "Потвърждаване на зануляването"
 
-#: gitk:9590
+#: gitk:9636
 #, tcl-format
 msgid "Reset branch %s to %s?"
 msgstr "Да се занули ли клонът „%s“ към „%s“?"
 
-#: gitk:9592
+#: gitk:9638
 msgid "Reset type:"
 msgstr "Вид зануляване:"
 
-#: gitk:9595
+#: gitk:9641
 msgid "Soft: Leave working tree and index untouched"
 msgstr "Слабо: работното дърво и индекса остават същите"
 
-#: gitk:9598
+#: gitk:9644
 msgid "Mixed: Leave working tree untouched, reset index"
 msgstr "Смесено: работното дърво остава същото, индексът се занулява"
 
-#: gitk:9601
+#: gitk:9647
 msgid ""
 "Hard: Reset working tree and index\n"
 "(discard ALL local changes)"
 msgstr ""
 "Силно: зануляване и на работното дърво, и на индекса\n"
 "(*ВСИЧКИ* локални промени ще бъдат безвъзвратно загубени)"
 
-#: gitk:9618
+#: gitk:9664
 msgid "Resetting"
 msgstr "Зануляване"
 
-#: gitk:9678
+#: gitk:9724
 msgid "Checking out"
 msgstr "Изтегляне"
 
-#: gitk:9731
+#: gitk:9777
 msgid "Cannot delete the currently checked-out branch"
 msgstr "Текущо изтегленият клон не може да бъде изтрит"
 
-#: gitk:9737
+#: gitk:9783
 #, tcl-format
 msgid ""
 "The commits on branch %s aren't on any other branch.\n"
 "Really delete branch %s?"
 msgstr ""
 "Подаванията на клона „%s“ не са на никой друг клон.\n"
 "Наистина ли да се изтрие клонът „%s“?"
 
-#: gitk:9768
+#: gitk:9814
 #, tcl-format
 msgid "Tags and heads: %s"
 msgstr "Етикети и върхове: %s"
 
-#: gitk:9783
+#: gitk:9829
 msgid "Filter"
 msgstr "Филтриране"
 
-#: gitk:10079
+#: gitk:10125
 msgid ""
 "Error reading commit topology information; branch and preceding/following "
 "tag information will be incomplete."
 msgstr ""
 "Грешка при прочитането на топологията на подаванията. Информацията за клона "
 "и предшестващите/следващите етикети ще е непълна."
 
-#: gitk:11056
+#: gitk:11102
 msgid "Tag"
 msgstr "Етикет"
 
-#: gitk:11060
+#: gitk:11106
 msgid "Id"
 msgstr "Идентификатор"
 
-#: gitk:11143
+#: gitk:11189
 msgid "Gitk font chooser"
 msgstr "Избор на шрифт за Gitk"
 
-#: gitk:11160
+#: gitk:11206
 msgid "B"
 msgstr "Ч"
 
-#: gitk:11163
+#: gitk:11209
 msgid "I"
 msgstr "К"
 
-#: gitk:11281
+#: gitk:11327
 msgid "Commit list display options"
 msgstr "Настройки на списъка с подавания"
 
-#: gitk:11284
+#: gitk:11330
 msgid "Maximum graph width (lines)"
 msgstr "Максимална широчина на графа (в редове)"
 
-#: gitk:11287
-#, tcl-format
+#: gitk:11334
+#, no-tcl-format
 msgid "Maximum graph width (% of pane)"
 msgstr "Максимална широчина на графа (% от панела)"
 
-#: gitk:11290
+#: gitk:11337
 msgid "Show local changes"
 msgstr "Показване на локалните промени"
 
-#: gitk:11293
+#: gitk:11340
 msgid "Auto-select SHA1 (length)"
 msgstr "Автоматично избиране на SHA1 (дължина)"
 
-#: gitk:11297
+#: gitk:11344
 msgid "Hide remote refs"
 msgstr "Скриване на отдалечените указатели"
 
-#: gitk:11301
+#: gitk:11348
 msgid "Diff display options"
 msgstr "Настройки на показването на разликите"
 
-#: gitk:11303
+#: gitk:11350
 msgid "Tab spacing"
 msgstr "Широчина на табулатора"
 
-#: gitk:11306
+#: gitk:11353
 msgid "Display nearby tags/heads"
 msgstr "Извеждане на близките етикети и върхове"
 
-#: gitk:11309
+#: gitk:11356
 msgid "Maximum # tags/heads to show"
 msgstr "Максимален брой етикети/върхове за показване"
 
-#: gitk:11312
+#: gitk:11359
 msgid "Limit diffs to listed paths"
 msgstr "Разлика само в избраните пътища"
 
-#: gitk:11315
+#: gitk:11362
 msgid "Support per-file encodings"
 msgstr "Поддръжка на различни кодирания за всеки файл"
 
-#: gitk:11321 gitk:11468
+#: gitk:11368 gitk:11515
 msgid "External diff tool"
 msgstr "Външен инструмент за разлики"
 
-#: gitk:11322
+#: gitk:11369
 msgid "Choose..."
 msgstr "Избор…"
 
-#: gitk:11327
+#: gitk:11374
 msgid "General options"
 msgstr "Общи настройки"
 
-#: gitk:11330
+#: gitk:11377
 msgid "Use themed widgets"
 msgstr "Използване на тема за графичните обекти"
 
-#: gitk:11332
+#: gitk:11379
 msgid "(change requires restart)"
 msgstr "(промяната изисква рестартиране на Gitk)"
 
-#: gitk:11334
+#: gitk:11381
 msgid "(currently unavailable)"
 msgstr "(в момента недостъпно)"
 
-#: gitk:11345
+#: gitk:11392
 msgid "Colors: press to choose"
 msgstr "Цветове: избира се с натискане"
 
-#: gitk:11348
+#: gitk:11395
 msgid "Interface"
 msgstr "Интерфейс"
 
-#: gitk:11349
+#: gitk:11396
 msgid "interface"
 msgstr "интерфейс"
 
-#: gitk:11352
+#: gitk:11399
 msgid "Background"
 msgstr "Фон"
 
-#: gitk:11353 gitk:11383
+#: gitk:11400 gitk:11430
 msgid "background"
 msgstr "фон"
 
-#: gitk:11356
+#: gitk:11403
 msgid "Foreground"
 msgstr "Знаци"
 
-#: gitk:11357
+#: gitk:11404
 msgid "foreground"
 msgstr "знаци"
 
-#: gitk:11360
+#: gitk:11407
 msgid "Diff: old lines"
 msgstr "Разлика: стари редове"
 
-#: gitk:11361
+#: gitk:11408
 msgid "diff old lines"
 msgstr "разлика, стари редове"
 
-#: gitk:11365
+#: gitk:11412
 msgid "Diff: new lines"
 msgstr "Разлика: нови редове"
 
-#: gitk:11366
+#: gitk:11413
 msgid "diff new lines"
 msgstr "разлика, нови редове"
 
-#: gitk:11370
+#: gitk:11417
 msgid "Diff: hunk header"
 msgstr "Разлика: начало на парче"
 
-#: gitk:11372
+#: gitk:11419
 msgid "diff hunk header"
 msgstr "разлика, начало на парче"
 
-#: gitk:11376
+#: gitk:11423
 msgid "Marked line bg"
 msgstr "Фон на отбелязан ред"
 
-#: gitk:11378
+#: gitk:11425
 msgid "marked line background"
 msgstr "фон на отбелязан ред"
 
-#: gitk:11382
+#: gitk:11429
 msgid "Select bg"
 msgstr "Избор на фон"
 
-#: gitk:11391
+#: gitk:11438
 msgid "Fonts: press to choose"
 msgstr "Шрифтове: избира се с натискане"
 
-#: gitk:11393
+#: gitk:11440
 msgid "Main font"
 msgstr "Основен шрифт"
 
-#: gitk:11394
+#: gitk:11441
 msgid "Diff display font"
 msgstr "Шрифт за разликите"
 
-#: gitk:11395
+#: gitk:11442
 msgid "User interface font"
 msgstr "Шрифт на интерфейса"
 
-#: gitk:11417
+#: gitk:11464
 msgid "Gitk preferences"
 msgstr "Настройки на Gitk"
 
-#: gitk:11426
+#: gitk:11473
 msgid "General"
 msgstr "Общи"
 
-#: gitk:11427
+#: gitk:11474
 msgid "Colors"
 msgstr "Цветове"
 
-#: gitk:11428
+#: gitk:11475
 msgid "Fonts"
 msgstr "Шрифтове"
 
-#: gitk:11478
+#: gitk:11525
 #, tcl-format
 msgid "Gitk: choose color for %s"
 msgstr "Gitk: избор на цвят на „%s“"
 
-#: gitk:12177
+#: gitk:12242
 msgid "Cannot find a git repository here."
 msgstr "Тук липсва хранилище на Git."
 
-#: gitk:12224
+#: gitk:12289
 #, tcl-format
 msgid "Ambiguous argument '%s': both revision and filename"
 msgstr "Нееднозначен аргумент „%s“: има и такава версия, и такъв файл"
 
-#: gitk:12236
+#: gitk:12301
 msgid "Bad arguments to gitk:"
 msgstr "Неправилни аргументи на gitk:"
 
-#: gitk:12339
+#: gitk:12405
 msgid "Command line"
 msgstr "Команден ред"
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po: ca.msg
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po: ca.po
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/de.msg /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/de.msg
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/de.msg	2017-10-10 12:31:59.102631528 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/de.msg	2017-10-10 13:04:28.154560096 +0800
@@ -1,7 +1,7 @@
-set ::msgcat::header "Project-Id-Version: git-gui\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2010-01-27 20:21+0100\nPO-Revision-Date: 2010-01-27 20:27+0100\nLast-Translator: Christian Stimming <stimming@tuhh.de>\nLanguage-Team: German\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"
+set ::msgcat::header "Project-Id-Version: git-gui\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2015-03-15 14:37+1100\nPO-Revision-Date: 2010-01-27 20:27+0100\nLast-Translator: Christian Stimming <stimming@tuhh.de>\nLanguage-Team: German\nLanguage: \nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"
 ::msgcat::mcset de "Couldn't get list of unmerged files:" "Liste der nicht zusammengef\u00fchrten Dateien nicht gefunden:"
 ::msgcat::mcset de "Error parsing revisions:" "Fehler beim Laden der Versionen:"
 ::msgcat::mcset de "Error executing --argscmd command:" "Fehler beim Ausf\u00fchren des --argscmd-Kommandos:"
 ::msgcat::mcset de "No files selected: --merge specified but no files are unmerged." "Keine Dateien ausgew\u00e4hlt: Es wurde --merge angegeben, aber es existieren keine nicht zusammengef\u00fchrten Dateien."
 ::msgcat::mcset de "No files selected: --merge specified but no unmerged files are within file limit." "Keine Dateien ausgew\u00e4hlt: Es wurde --merge angegeben, aber es sind keine nicht zusammengef\u00fchrten Dateien in der Dateiauswahl."
 ::msgcat::mcset de "Error executing git log:" "Fehler beim Ausf\u00fchren von \u00bbgit log\u00ab:"
@@ -30,14 +30,12 @@
 ::msgcat::mcset de "About gitk" "\u00dcber gitk"
 ::msgcat::mcset de "Key bindings" "Tastenk\u00fcrzel"
 ::msgcat::mcset de "Help" "Hilfe"
 ::msgcat::mcset de "SHA1 ID:" "SHA1 ID:"
 ::msgcat::mcset de "Row" "Zeile"
 ::msgcat::mcset de "Find" "Suche"
-::msgcat::mcset de "next" "n\u00e4chste"
-::msgcat::mcset de "prev" "vorige"
 ::msgcat::mcset de "commit" "Version nach"
 ::msgcat::mcset de "containing:" "Beschreibung:"
 ::msgcat::mcset de "touching paths:" "Dateien:"
 ::msgcat::mcset de "adding/removing string:" "\u00c4nderungen:"
 ::msgcat::mcset de "Exact" "Exakt"
 ::msgcat::mcset de "IgnCase" "Kein Gro\u00df/Klein"
@@ -72,22 +70,18 @@
 ::msgcat::mcset de "Highlight this too" "Diesen auch hervorheben"
 ::msgcat::mcset de "Highlight this only" "Nur diesen hervorheben"
 ::msgcat::mcset de "External diff" "Externes Diff-Programm"
 ::msgcat::mcset de "Blame parent commit" "Annotieren der Elternversion"
 ::msgcat::mcset de "Show origin of this line" "Herkunft dieser Zeile anzeigen"
 ::msgcat::mcset de "Run git gui blame on this line" "Diese Zeile annotieren (\u00bbgit gui blame\u00ab)"
-::msgcat::mcset de "\nGitk - a commit viewer for git\n\nCopyright \\u00a9 2005-2010 Paul Mackerras\n\nUse and redistribute under the terms of the GNU General Public License" "\nGitk - eine Visualisierung der Git-Historie\n\nCopyright \\u00a9 2005-2010 Paul Mackerras\n\nBenutzung und Weiterverbreitung gem\u00e4\u00df den Bedingungen der GNU General Public License"
 ::msgcat::mcset de "Close" "Schlie\u00dfen"
 ::msgcat::mcset de "Gitk key bindings" "Gitk-Tastaturbelegung"
 ::msgcat::mcset de "Gitk key bindings:" "Gitk-Tastaturbelegung:"
 ::msgcat::mcset de "<%s-Q>\u0009\u0009Quit" "<%s-Q>\u0009\u0009Beenden"
 ::msgcat::mcset de "<Home>\u0009\u0009Move to first commit" "<Pos1>\u0009\u0009Zur neuesten Version springen"
 ::msgcat::mcset de "<End>\u0009\u0009Move to last commit" "<Ende>\u0009\u0009Zur \u00e4ltesten Version springen"
-::msgcat::mcset de "<Up>, p, i\u0009Move up one commit" "<Hoch>, p, i\u0009N\u00e4chste neuere Version"
-::msgcat::mcset de "<Down>, n, k\u0009Move down one commit" "<Runter>, n, k\u0009N\u00e4chste \u00e4ltere Version"
-::msgcat::mcset de "<Left>, z, j\u0009Go back in history list" "<Links>, z, j\u0009Eine Version zur\u00fcckgehen"
 ::msgcat::mcset de "<Right>, x, l\u0009Go forward in history list" "<Rechts>, x, l\u0009Eine Version weitergehen"
 ::msgcat::mcset de "<PageUp>\u0009Move up one page in commit list" "<BildHoch>\u0009Eine Seite nach oben bl\u00e4ttern"
 ::msgcat::mcset de "<PageDown>\u0009Move down one page in commit list" "<BildRunter>\u0009Eine Seite nach unten bl\u00e4ttern"
 ::msgcat::mcset de "<%s-Home>\u0009Scroll to top of commit list" "<%s-Pos1>\u0009Zum oberen Ende der Versionsliste bl\u00e4ttern"
 ::msgcat::mcset de "<%s-End>\u0009Scroll to bottom of commit list" "<%s-Ende>\u0009Zum unteren Ende der Versionsliste bl\u00e4ttern"
 ::msgcat::mcset de "<%s-Up>\u0009Scroll commit list up one line" "<%s-Hoch>\u0009Versionsliste eine Zeile nach oben bl\u00e4ttern"
@@ -160,14 +154,12 @@
 ::msgcat::mcset de "Gitk: edit view" "Gitk: Ansicht bearbeiten"
 ::msgcat::mcset de "-- criteria for selecting revisions" "-- Auswahl der angezeigten Versionen"
 ::msgcat::mcset de "View Name" "Ansichtsname"
 ::msgcat::mcset de "Apply (F5)" "Anwenden (F5)"
 ::msgcat::mcset de "Error in commit selection arguments:" "Fehler in den ausgew\u00e4hlten Versionen:"
 ::msgcat::mcset de "None" "Keine"
-::msgcat::mcset de "Date" "Datum"
-::msgcat::mcset de "CDate" "Eintragedatum"
 ::msgcat::mcset de "Descendant" "Abk\u00f6mmling"
 ::msgcat::mcset de "Not descendant" "Kein Abk\u00f6mmling"
 ::msgcat::mcset de "Ancestor" "Vorg\u00e4nger"
 ::msgcat::mcset de "Not ancestor" "Kein Vorg\u00e4nger"
 ::msgcat::mcset de "Local changes checked in to index but not committed" "Lokale \u00c4nderungen bereitgestellt, aber nicht eingetragen"
 ::msgcat::mcset de "Local uncommitted changes, not checked in to index" "Lokale \u00c4nderungen, nicht bereitgestellt"
@@ -181,12 +173,13 @@
 ::msgcat::mcset de "Error getting diffs: %s" "Fehler beim Laden des Vergleichs: %s"
 ::msgcat::mcset de "Goto:" "Gehe zu:"
 ::msgcat::mcset de "Short SHA1 id %s is ambiguous" "Kurzer SHA1-Hashwert \u00bb%s\u00ab ist mehrdeutig"
 ::msgcat::mcset de "Revision %s is not known" "Version \u00bb%s\u00ab ist unbekannt"
 ::msgcat::mcset de "SHA1 id %s is not known" "SHA1-Hashwert \u00bb%s\u00ab ist unbekannt"
 ::msgcat::mcset de "Revision %s is not in the current view" "Version \u00bb%s\u00ab wird in der aktuellen Ansicht nicht angezeigt"
+::msgcat::mcset de "Date" "Datum"
 ::msgcat::mcset de "Children" "Kinder"
 ::msgcat::mcset de "Reset %s branch to here" "Zweig \u00bb%s\u00ab hierher zur\u00fccksetzen"
 ::msgcat::mcset de "Detached head: can't reset" "Zweigspitze ist abgetrennt: Zur\u00fccksetzen nicht m\u00f6glich"
 ::msgcat::mcset de "Skipping merge commit " "\u00dcberspringe Zusammenf\u00fchrungs-Version "
 ::msgcat::mcset de "Error getting patch ID for " "Fehler beim Holen der Patch-ID f\u00fcr "
 ::msgcat::mcset de " - stopping\n" " - Abbruch.\n"
@@ -241,22 +234,19 @@
 ::msgcat::mcset de "Error reading commit topology information; branch and preceding/following tag information will be incomplete." "Fehler beim Lesen der Strukturinformationen; Zweige und Informationen zu Vorg\u00e4nger/Nachfolger werden unvollst\u00e4ndig sein."
 ::msgcat::mcset de "Tag" "Markierung"
 ::msgcat::mcset de "Id" "Id"
 ::msgcat::mcset de "Gitk font chooser" "Gitk-Schriften w\u00e4hlen"
 ::msgcat::mcset de "B" "F"
 ::msgcat::mcset de "I" "K"
-::msgcat::mcset de "Gitk preferences" "Gitk-Einstellungen"
 ::msgcat::mcset de "Commit list display options" "Anzeige der Versionsliste"
 ::msgcat::mcset de "Maximum graph width (lines)" "Maximale Graphenbreite (Zeilen)"
 ::msgcat::mcset de "Maximum graph width (% of pane)" "Maximale Graphenbreite (% des Fensters)"
 ::msgcat::mcset de "Show local changes" "Lokale \u00c4nderungen anzeigen"
-::msgcat::mcset de "Auto-select SHA1" "SHA1-Hashwert automatisch ausw\u00e4hlen"
 ::msgcat::mcset de "Hide remote refs" "Entfernte Zweige/Markierungen ausblenden"
 ::msgcat::mcset de "Diff display options" "Anzeige des Vergleichs"
 ::msgcat::mcset de "Tab spacing" "Tabulatorbreite"
-::msgcat::mcset de "Display nearby tags" "Naheliegende Markierungen anzeigen"
 ::msgcat::mcset de "Limit diffs to listed paths" "Vergleich nur f\u00fcr angezeigte Pfade"
 ::msgcat::mcset de "Support per-file encodings" "Zeichenkodierung pro Datei ermitteln"
 ::msgcat::mcset de "External diff tool" "Externes Diff-Programm"
 ::msgcat::mcset de "Choose..." "W\u00e4hlen ..."
 ::msgcat::mcset de "General options" "Allgemeine Optionen"
 ::msgcat::mcset de "Use themed widgets" "Aussehen der Benutzeroberfl\u00e4che durch Thema bestimmen"
@@ -279,12 +269,12 @@
 ::msgcat::mcset de "marked line background" "Hintergrund f\u00fcr markierte Zeile"
 ::msgcat::mcset de "Select bg" "Hintergrundfarbe ausw\u00e4hlen"
 ::msgcat::mcset de "Fonts: press to choose" "Schriftart: Klicken zum W\u00e4hlen"
 ::msgcat::mcset de "Main font" "Programmschriftart"
 ::msgcat::mcset de "Diff display font" "Schriftart f\u00fcr Vergleich"
 ::msgcat::mcset de "User interface font" "Beschriftungen"
+::msgcat::mcset de "Gitk preferences" "Gitk-Einstellungen"
 ::msgcat::mcset de "Gitk: choose color for %s" "Gitk: Farbe w\u00e4hlen f\u00fcr %s"
 ::msgcat::mcset de "Cannot find a git repository here." "Kein Git-Projektarchiv gefunden."
-::msgcat::mcset de "Cannot find the git directory \"%s\"." "Git-Verzeichnis \u00bb%s\u00ab wurde nicht gefunden."
 ::msgcat::mcset de "Ambiguous argument '%s': both revision and filename" "Mehrdeutige Angabe \u00bb%s\u00ab: Sowohl Version als auch Dateiname existiert."
 ::msgcat::mcset de "Bad arguments to gitk:" "Falsche Kommandozeilen-Parameter f\u00fcr gitk:"
 ::msgcat::mcset de "Command line" "Kommandozeile"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/de.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/de.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/de.po	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/de.po	2015-05-01 03:12:02.000000000 +0800
@@ -5,1274 +5,1378 @@
 # Christian Stimming <stimming@tuhh.de>, 2007.
 # Frederik Schwarzer <schwarzerf@gmail.com>, 2008.
 msgid ""
 msgstr ""
 "Project-Id-Version: git-gui\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2010-01-27 20:21+0100\n"
+"POT-Creation-Date: 2015-03-15 14:37+1100\n"
 "PO-Revision-Date: 2010-01-27 20:27+0100\n"
 "Last-Translator: Christian Stimming <stimming@tuhh.de>\n"
 "Language-Team: German\n"
+"Language: \n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
 
-#: gitk:115
+#: gitk:140
 msgid "Couldn't get list of unmerged files:"
 msgstr "Liste der nicht zusammengeführten Dateien nicht gefunden:"
 
-#: gitk:274
+#: gitk:212 gitk:2381
+msgid "Color words"
+msgstr ""
+
+#: gitk:217 gitk:2381 gitk:8201 gitk:8234
+msgid "Markup words"
+msgstr ""
+
+#: gitk:324
 msgid "Error parsing revisions:"
 msgstr "Fehler beim Laden der Versionen:"
 
-#: gitk:329
+#: gitk:380
 msgid "Error executing --argscmd command:"
 msgstr "Fehler beim Ausführen des --argscmd-Kommandos:"
 
-#: gitk:342
+#: gitk:393
 msgid "No files selected: --merge specified but no files are unmerged."
 msgstr ""
 "Keine Dateien ausgewählt: Es wurde --merge angegeben, aber es existieren "
 "keine nicht zusammengeführten Dateien."
 
-#: gitk:345
+#: gitk:396
 msgid ""
 "No files selected: --merge specified but no unmerged files are within file "
 "limit."
 msgstr ""
 "Keine Dateien ausgewählt: Es wurde --merge angegeben, aber es sind keine "
 "nicht zusammengeführten Dateien in der Dateiauswahl."
 
-#: gitk:367 gitk:514
+#: gitk:418 gitk:566
 msgid "Error executing git log:"
 msgstr "Fehler beim Ausführen von »git log«:"
 
-#: gitk:385 gitk:530
+#: gitk:436 gitk:582
 msgid "Reading"
 msgstr "Lesen"
 
-#: gitk:445 gitk:4261
+#: gitk:496 gitk:4508
 msgid "Reading commits..."
 msgstr "Versionen werden gelesen ..."
 
-#: gitk:448 gitk:1578 gitk:4264
+#: gitk:499 gitk:1637 gitk:4511
 msgid "No commits selected"
 msgstr "Keine Versionen ausgewählt"
 
-#: gitk:1454
+#: gitk:1511
 msgid "Can't parse git log output:"
 msgstr "Ausgabe von »git log« kann nicht erkannt werden:"
 
-#: gitk:1674
+#: gitk:1740
 msgid "No commit information available"
 msgstr "Keine Versionsinformation verfügbar"
 
-#: gitk:1816
+#: gitk:1897
 msgid "mc"
 msgstr "mc"
 
-#: gitk:1851 gitk:4054 gitk:9044 gitk:10585 gitk:10804
+#: gitk:1932 gitk:4298 gitk:9650 gitk:11220 gitk:11500
 msgid "OK"
 msgstr "Ok"
 
-#: gitk:1853 gitk:4056 gitk:8634 gitk:8713 gitk:8828 gitk:8877 gitk:9046
-#: gitk:10586 gitk:10805
+#: gitk:1934 gitk:4300 gitk:9177 gitk:9256 gitk:9372 gitk:9421 gitk:9652
+#: gitk:11221 gitk:11501
 msgid "Cancel"
 msgstr "Abbrechen"
 
-#: gitk:1975
+#: gitk:2069
 msgid "Update"
 msgstr "Aktualisieren"
 
-#: gitk:1976
+#: gitk:2070
 msgid "Reload"
 msgstr "Neu laden"
 
-#: gitk:1977
+#: gitk:2071
 msgid "Reread references"
 msgstr "Zweige neu laden"
 
-#: gitk:1978
+#: gitk:2072
 msgid "List references"
 msgstr "Zweige/Markierungen auflisten"
 
-#: gitk:1980
+#: gitk:2074
 msgid "Start git gui"
 msgstr "»git gui« starten"
 
-#: gitk:1982
+#: gitk:2076
 msgid "Quit"
 msgstr "Beenden"
 
-#: gitk:1974
+#: gitk:2068
 msgid "File"
 msgstr "Datei"
 
-#: gitk:1986
+#: gitk:2080
 msgid "Preferences"
 msgstr "Einstellungen"
 
-#: gitk:1985
+#: gitk:2079
 msgid "Edit"
 msgstr "Bearbeiten"
 
-#: gitk:1990
+#: gitk:2084
 msgid "New view..."
 msgstr "Neue Ansicht ..."
 
-#: gitk:1991
+#: gitk:2085
 msgid "Edit view..."
 msgstr "Ansicht bearbeiten ..."
 
-#: gitk:1992
+#: gitk:2086
 msgid "Delete view"
 msgstr "Ansicht entfernen"
 
-#: gitk:1994
+#: gitk:2088
 msgid "All files"
 msgstr "Alle Dateien"
 
-#: gitk:1989 gitk:3808
+#: gitk:2083 gitk:4050
 msgid "View"
 msgstr "Ansicht"
 
-#: gitk:1999 gitk:2009 gitk:2780
+#: gitk:2093 gitk:2103 gitk:3009
 msgid "About gitk"
 msgstr "Über gitk"
 
-#: gitk:2000 gitk:2014
+#: gitk:2094 gitk:2108
 msgid "Key bindings"
 msgstr "Tastenkürzel"
 
-#: gitk:1998 gitk:2013
+#: gitk:2092 gitk:2107
 msgid "Help"
 msgstr "Hilfe"
 
-#: gitk:2091 gitk:8110
+#: gitk:2185 gitk:8633
 msgid "SHA1 ID:"
 msgstr "SHA1 ID:"
 
-#: gitk:2122
+#: gitk:2229
 msgid "Row"
 msgstr "Zeile"
 
-#: gitk:2160
+#: gitk:2267
 msgid "Find"
 msgstr "Suche"
 
-#: gitk:2161
-msgid "next"
-msgstr "nächste"
-
-#: gitk:2162
-msgid "prev"
-msgstr "vorige"
-
-#: gitk:2163
+#: gitk:2295
 msgid "commit"
 msgstr "Version nach"
 
-#: gitk:2166 gitk:2168 gitk:4422 gitk:4445 gitk:4469 gitk:6410 gitk:6482
-#: gitk:6566
+#: gitk:2299 gitk:2301 gitk:4669 gitk:4692 gitk:4716 gitk:6736 gitk:6808
+#: gitk:6893
 msgid "containing:"
 msgstr "Beschreibung:"
 
-#: gitk:2169 gitk:3290 gitk:3295 gitk:4497
+#: gitk:2302 gitk:3522 gitk:3527 gitk:4745
 msgid "touching paths:"
 msgstr "Dateien:"
 
-#: gitk:2170 gitk:4502
+#: gitk:2303 gitk:4759
 msgid "adding/removing string:"
 msgstr "Änderungen:"
 
-#: gitk:2179 gitk:2181
+#: gitk:2304 gitk:4761
+msgid "changing lines matching:"
+msgstr ""
+
+#: gitk:2313 gitk:2315 gitk:4748
 msgid "Exact"
 msgstr "Exakt"
 
-#: gitk:2181 gitk:4577 gitk:6378
+#: gitk:2315 gitk:4836 gitk:6704
 msgid "IgnCase"
 msgstr "Kein Groß/Klein"
 
-#: gitk:2181 gitk:4471 gitk:4575 gitk:6374
+#: gitk:2315 gitk:4718 gitk:4834 gitk:6700
 msgid "Regexp"
 msgstr "Regexp"
 
-#: gitk:2183 gitk:2184 gitk:4596 gitk:4626 gitk:4633 gitk:6502 gitk:6570
+#: gitk:2317 gitk:2318 gitk:4856 gitk:4886 gitk:4893 gitk:6829 gitk:6897
 msgid "All fields"
 msgstr "Alle Felder"
 
-#: gitk:2184 gitk:4594 gitk:4626 gitk:6441
+#: gitk:2318 gitk:4853 gitk:4886 gitk:6767
 msgid "Headline"
 msgstr "Überschrift"
 
-#: gitk:2185 gitk:4594 gitk:6441 gitk:6570 gitk:7003
+#: gitk:2319 gitk:4853 gitk:6767 gitk:6897 gitk:7370
 msgid "Comments"
 msgstr "Beschreibung"
 
-#: gitk:2185 gitk:4594 gitk:4598 gitk:4633 gitk:6441 gitk:6938 gitk:8285
-#: gitk:8300
+#: gitk:2319 gitk:4853 gitk:4858 gitk:4893 gitk:6767 gitk:7305 gitk:8811
+#: gitk:8826
 msgid "Author"
 msgstr "Autor"
 
-#: gitk:2185 gitk:4594 gitk:6441 gitk:6940
+#: gitk:2319 gitk:4853 gitk:6767 gitk:7307
 msgid "Committer"
 msgstr "Eintragender"
 
-#: gitk:2216
+#: gitk:2350
 msgid "Search"
 msgstr "Suchen"
 
-#: gitk:2224
+#: gitk:2358
 msgid "Diff"
 msgstr "Vergleich"
 
-#: gitk:2226
+#: gitk:2360
 msgid "Old version"
 msgstr "Alte Version"
 
-#: gitk:2228
+#: gitk:2362
 msgid "New version"
 msgstr "Neue Version"
 
-#: gitk:2230
+#: gitk:2364
 msgid "Lines of context"
 msgstr "Kontextzeilen"
 
-#: gitk:2240
+#: gitk:2374
 msgid "Ignore space change"
 msgstr "Leerzeichenänderungen ignorieren"
 
-#: gitk:2299
+#: gitk:2378 gitk:2380 gitk:7940 gitk:8187
+msgid "Line diff"
+msgstr ""
+
+#: gitk:2445
 msgid "Patch"
 msgstr "Patch"
 
-#: gitk:2301
+#: gitk:2447
 msgid "Tree"
 msgstr "Baum"
 
-#: gitk:2456 gitk:2473
+#: gitk:2616 gitk:2636
 msgid "Diff this -> selected"
 msgstr "Vergleich: diese -> gewählte"
 
-#: gitk:2457 gitk:2474
+#: gitk:2617 gitk:2637
 msgid "Diff selected -> this"
 msgstr "Vergleich: gewählte -> diese"
 
-#: gitk:2458 gitk:2475
+#: gitk:2618 gitk:2638
 msgid "Make patch"
 msgstr "Patch erstellen"
 
-#: gitk:2459 gitk:8692
+#: gitk:2619 gitk:9235
 msgid "Create tag"
 msgstr "Markierung erstellen"
 
-#: gitk:2460 gitk:8808
+#: gitk:2620 gitk:9352
 msgid "Write commit to file"
 msgstr "Version in Datei schreiben"
 
-#: gitk:2461 gitk:8865
+#: gitk:2621 gitk:9409
 msgid "Create new branch"
 msgstr "Neuen Zweig erstellen"
 
-#: gitk:2462
+#: gitk:2622
 msgid "Cherry-pick this commit"
 msgstr "Diese Version pflücken"
 
-#: gitk:2463
+#: gitk:2623
 msgid "Reset HEAD branch to here"
 msgstr "HEAD-Zweig auf diese Version zurücksetzen"
 
-#: gitk:2464
+#: gitk:2624
 msgid "Mark this commit"
 msgstr "Lesezeichen setzen"
 
-#: gitk:2465
+#: gitk:2625
 msgid "Return to mark"
 msgstr "Zum Lesezeichen"
 
-#: gitk:2466
+#: gitk:2626
 msgid "Find descendant of this and mark"
 msgstr "Abkömmling von Lesezeichen und dieser Version finden"
 
-#: gitk:2467
+#: gitk:2627
 msgid "Compare with marked commit"
 msgstr "Mit Lesezeichen vergleichen"
 
-#: gitk:2481
+#: gitk:2628 gitk:2639
+#, fuzzy
+msgid "Diff this -> marked commit"
+msgstr "Vergleich: diese -> gewählte"
+
+#: gitk:2629 gitk:2640
+#, fuzzy
+msgid "Diff marked commit -> this"
+msgstr "Vergleich: gewählte -> diese"
+
+#: gitk:2630
+#, fuzzy
+msgid "Revert this commit"
+msgstr "Lesezeichen setzen"
+
+#: gitk:2646
 msgid "Check out this branch"
 msgstr "Auf diesen Zweig umstellen"
 
-#: gitk:2482
+#: gitk:2647
 msgid "Remove this branch"
 msgstr "Zweig löschen"
 
-#: gitk:2489
+#: gitk:2654
 msgid "Highlight this too"
 msgstr "Diesen auch hervorheben"
 
-#: gitk:2490
+#: gitk:2655
 msgid "Highlight this only"
 msgstr "Nur diesen hervorheben"
 
-#: gitk:2491
+#: gitk:2656
 msgid "External diff"
 msgstr "Externes Diff-Programm"
 
-#: gitk:2492
+#: gitk:2657
 msgid "Blame parent commit"
 msgstr "Annotieren der Elternversion"
 
-#: gitk:2499
+#: gitk:2664
 msgid "Show origin of this line"
 msgstr "Herkunft dieser Zeile anzeigen"
 
-#: gitk:2500
+#: gitk:2665
 msgid "Run git gui blame on this line"
 msgstr "Diese Zeile annotieren (»git gui blame«)"
 
-#: gitk:2782
+#: gitk:3011
+#, fuzzy
 msgid ""
 "\n"
 "Gitk - a commit viewer for git\n"
 "\n"
-"Copyright \\u00a9 2005-2010 Paul Mackerras\n"
+"Copyright © 2005-2014 Paul Mackerras\n"
 "\n"
 "Use and redistribute under the terms of the GNU General Public License"
 msgstr ""
 "\n"
 "Gitk - eine Visualisierung der Git-Historie\n"
 "\n"
 "Copyright \\u00a9 2005-2010 Paul Mackerras\n"
 "\n"
-"Benutzung und Weiterverbreitung gemäß den Bedingungen der GNU General Public License"
+"Benutzung und Weiterverbreitung gemäß den Bedingungen der GNU General Public "
+"License"
 
-#: gitk:2790 gitk:2854 gitk:9230
+#: gitk:3019 gitk:3085 gitk:9836
 msgid "Close"
 msgstr "Schließen"
 
-#: gitk:2811
+#: gitk:3040
 msgid "Gitk key bindings"
 msgstr "Gitk-Tastaturbelegung"
 
-#: gitk:2814
+#: gitk:3043
 msgid "Gitk key bindings:"
 msgstr "Gitk-Tastaturbelegung:"
 
-#: gitk:2816
+#: gitk:3045
 #, tcl-format
 msgid "<%s-Q>\t\tQuit"
 msgstr "<%s-Q>\t\tBeenden"
 
-#: gitk:2817
+#: gitk:3046
+#, fuzzy, tcl-format
+msgid "<%s-W>\t\tClose window"
+msgstr "<%s-F>\t\tSuchen"
+
+#: gitk:3047
 msgid "<Home>\t\tMove to first commit"
 msgstr "<Pos1>\t\tZur neuesten Version springen"
 
-#: gitk:2818
+#: gitk:3048
 msgid "<End>\t\tMove to last commit"
 msgstr "<Ende>\t\tZur ältesten Version springen"
 
-#: gitk:2819
-msgid "<Up>, p, i\tMove up one commit"
+#: gitk:3049
+#, fuzzy
+msgid "<Up>, p, k\tMove up one commit"
 msgstr "<Hoch>, p, i\tNächste neuere Version"
 
-#: gitk:2820
-msgid "<Down>, n, k\tMove down one commit"
+#: gitk:3050
+#, fuzzy
+msgid "<Down>, n, j\tMove down one commit"
 msgstr "<Runter>, n, k\tNächste ältere Version"
 
-#: gitk:2821
-msgid "<Left>, z, j\tGo back in history list"
+#: gitk:3051
+#, fuzzy
+msgid "<Left>, z, h\tGo back in history list"
 msgstr "<Links>, z, j\tEine Version zurückgehen"
 
-#: gitk:2822
+#: gitk:3052
 msgid "<Right>, x, l\tGo forward in history list"
 msgstr "<Rechts>, x, l\tEine Version weitergehen"
 
-#: gitk:2823
+#: gitk:3053
+#, tcl-format
+msgid "<%s-n>\tGo to n-th parent of current commit in history list"
+msgstr ""
+
+#: gitk:3054
 msgid "<PageUp>\tMove up one page in commit list"
 msgstr "<BildHoch>\tEine Seite nach oben blättern"
 
-#: gitk:2824
+#: gitk:3055
 msgid "<PageDown>\tMove down one page in commit list"
 msgstr "<BildRunter>\tEine Seite nach unten blättern"
 
-#: gitk:2825
+#: gitk:3056
 #, tcl-format
 msgid "<%s-Home>\tScroll to top of commit list"
 msgstr "<%s-Pos1>\tZum oberen Ende der Versionsliste blättern"
 
-#: gitk:2826
+#: gitk:3057
 #, tcl-format
 msgid "<%s-End>\tScroll to bottom of commit list"
 msgstr "<%s-Ende>\tZum unteren Ende der Versionsliste blättern"
 
-#: gitk:2827
+#: gitk:3058
 #, tcl-format
 msgid "<%s-Up>\tScroll commit list up one line"
 msgstr "<%s-Hoch>\tVersionsliste eine Zeile nach oben blättern"
 
-#: gitk:2828
+#: gitk:3059
 #, tcl-format
 msgid "<%s-Down>\tScroll commit list down one line"
 msgstr "<%s-Runter>\tVersionsliste eine Zeile nach unten blättern"
 
-#: gitk:2829
+#: gitk:3060
 #, tcl-format
 msgid "<%s-PageUp>\tScroll commit list up one page"
 msgstr "<%s-BildHoch>\tVersionsliste eine Seite nach oben blättern"
 
-#: gitk:2830
+#: gitk:3061
 #, tcl-format
 msgid "<%s-PageDown>\tScroll commit list down one page"
 msgstr "<%s-BildRunter>\tVersionsliste eine Seite nach unten blättern"
 
-#: gitk:2831
+#: gitk:3062
 msgid "<Shift-Up>\tFind backwards (upwards, later commits)"
 msgstr "<Umschalt-Hoch>\tRückwärts suchen (nach oben; neuere Versionen)"
 
-#: gitk:2832
+#: gitk:3063
 msgid "<Shift-Down>\tFind forwards (downwards, earlier commits)"
 msgstr "<Umschalt-Runter> Suchen (nach unten; ältere Versionen)"
 
-#: gitk:2833
+#: gitk:3064
 msgid "<Delete>, b\tScroll diff view up one page"
 msgstr "<Entf>, b\t\tVergleich eine Seite nach oben blättern"
 
-#: gitk:2834
+#: gitk:3065
 msgid "<Backspace>\tScroll diff view up one page"
 msgstr "<Löschtaste>\tVergleich eine Seite nach oben blättern"
 
-#: gitk:2835
+#: gitk:3066
 msgid "<Space>\t\tScroll diff view down one page"
 msgstr "<Leertaste>\tVergleich eine Seite nach unten blättern"
 
-#: gitk:2836
+#: gitk:3067
 msgid "u\t\tScroll diff view up 18 lines"
 msgstr "u\t\tVergleich um 18 Zeilen nach oben blättern"
 
-#: gitk:2837
+#: gitk:3068
 msgid "d\t\tScroll diff view down 18 lines"
 msgstr "d\t\tVergleich um 18 Zeilen nach unten blättern"
 
-#: gitk:2838
+#: gitk:3069
 #, tcl-format
 msgid "<%s-F>\t\tFind"
 msgstr "<%s-F>\t\tSuchen"
 
-#: gitk:2839
+#: gitk:3070
 #, tcl-format
 msgid "<%s-G>\t\tMove to next find hit"
 msgstr "<%s-G>\t\tWeitersuchen"
 
-#: gitk:2840
+#: gitk:3071
 msgid "<Return>\tMove to next find hit"
 msgstr "<Eingabetaste>\tWeitersuchen"
 
-#: gitk:2841
+#: gitk:3072
 msgid "/\t\tFocus the search box"
 msgstr "/\t\tTastaturfokus ins Suchfeld"
 
-#: gitk:2842
+#: gitk:3073
 msgid "?\t\tMove to previous find hit"
 msgstr "?\t\tRückwärts weitersuchen"
 
-#: gitk:2843
+#: gitk:3074
 msgid "f\t\tScroll diff view to next file"
 msgstr "f\t\tVergleich zur nächsten Datei blättern"
 
-#: gitk:2844
+#: gitk:3075
 #, tcl-format
 msgid "<%s-S>\t\tSearch for next hit in diff view"
 msgstr "<%s-S>\t\tWeitersuchen im Vergleich"
 
-#: gitk:2845
+#: gitk:3076
 #, tcl-format
 msgid "<%s-R>\t\tSearch for previous hit in diff view"
 msgstr "<%s-R>\t\tRückwärts weitersuchen im Vergleich"
 
-#: gitk:2846
+#: gitk:3077
 #, tcl-format
 msgid "<%s-KP+>\tIncrease font size"
 msgstr "<%s-Nummerblock-Plus>\tSchrift vergrößern"
 
-#: gitk:2847
+#: gitk:3078
 #, tcl-format
 msgid "<%s-plus>\tIncrease font size"
 msgstr "<%s-Plus>\tSchrift vergrößern"
 
-#: gitk:2848
+#: gitk:3079
 #, tcl-format
 msgid "<%s-KP->\tDecrease font size"
 msgstr "<%s-Nummernblock-Minus> Schrift verkleinern"
 
-#: gitk:2849
+#: gitk:3080
 #, tcl-format
 msgid "<%s-minus>\tDecrease font size"
 msgstr "<%s-Minus>\tSchrift verkleinern"
 
-#: gitk:2850
+#: gitk:3081
 msgid "<F5>\t\tUpdate"
 msgstr "<F5>\t\tAktualisieren"
 
-#: gitk:3305 gitk:3314
+#: gitk:3546 gitk:3555
 #, tcl-format
 msgid "Error creating temporary directory %s:"
 msgstr "Fehler beim Erzeugen des temporären Verzeichnisses »%s«:"
 
-#: gitk:3327
+#: gitk:3568
 #, tcl-format
 msgid "Error getting \"%s\" from %s:"
 msgstr "Fehler beim Holen von »%s« von »%s«:"
 
-#: gitk:3390
+#: gitk:3631
 msgid "command failed:"
 msgstr "Kommando fehlgeschlagen:"
 
-#: gitk:3539
+#: gitk:3780
 msgid "No such commit"
 msgstr "Version nicht gefunden"
 
-#: gitk:3553
+#: gitk:3794
 msgid "git gui blame: command failed:"
 msgstr "git gui blame: Kommando fehlgeschlagen:"
 
-#: gitk:3584
+#: gitk:3825
 #, tcl-format
 msgid "Couldn't read merge head: %s"
 msgstr "Zusammenführungs-Spitze konnte nicht gelesen werden: %s"
 
-#: gitk:3592
+#: gitk:3833
 #, tcl-format
 msgid "Error reading index: %s"
 msgstr "Fehler beim Lesen der Bereitstellung (»index«): %s"
 
-#: gitk:3617
+#: gitk:3858
 #, tcl-format
 msgid "Couldn't start git blame: %s"
 msgstr "»git blame« konnte nicht gestartet werden: %s"
 
-#: gitk:3620 gitk:6409
+#: gitk:3861 gitk:6735
 msgid "Searching"
 msgstr "Suchen"
 
-#: gitk:3652
+#: gitk:3893
 #, tcl-format
 msgid "Error running git blame: %s"
 msgstr "Fehler beim Ausführen von »git blame«: %s"
 
-#: gitk:3680
+#: gitk:3921
 #, tcl-format
 msgid "That line comes from commit %s,  which is not in this view"
 msgstr ""
 "Diese Zeile stammt aus Version %s, die nicht in dieser Ansicht gezeigt wird"
 
-#: gitk:3694
+#: gitk:3935
 msgid "External diff viewer failed:"
 msgstr "Externes Diff-Programm fehlgeschlagen:"
 
-#: gitk:3812
+#: gitk:4053
 msgid "Gitk view definition"
 msgstr "Gitk-Ansichten"
 
-#: gitk:3816
+#: gitk:4057
 msgid "Remember this view"
 msgstr "Diese Ansicht speichern"
 
-#: gitk:3817
+#: gitk:4058
 msgid "References (space separated list):"
 msgstr "Zweige/Markierungen (durch Leerzeichen getrennte Liste):"
 
-#: gitk:3818
+#: gitk:4059
 msgid "Branches & tags:"
 msgstr "Zweige/Markierungen:"
 
-#: gitk:3819
+#: gitk:4060
 msgid "All refs"
 msgstr "Alle Markierungen und Zweige"
 
-#: gitk:3820
+#: gitk:4061
 msgid "All (local) branches"
 msgstr "Alle (lokalen) Zweige"
 
-#: gitk:3821
+#: gitk:4062
 msgid "All tags"
 msgstr "Alle Markierungen"
 
-#: gitk:3822
+#: gitk:4063
 msgid "All remote-tracking branches"
 msgstr "Alle Übernahmezweige"
 
-#: gitk:3823
+#: gitk:4064
 msgid "Commit Info (regular expressions):"
 msgstr "Versionsinformationen (reguläre Ausdrücke):"
 
-#: gitk:3824
+#: gitk:4065
 msgid "Author:"
 msgstr "Autor:"
 
-#: gitk:3825
+#: gitk:4066
 msgid "Committer:"
 msgstr "Eintragender:"
 
-#: gitk:3826
+#: gitk:4067
 msgid "Commit Message:"
 msgstr "Versionsbeschreibung:"
 
-#: gitk:3827
+#: gitk:4068
 msgid "Matches all Commit Info criteria"
 msgstr "Alle Versionsinformationen-Kriterien erfüllen"
 
-#: gitk:3828
+#: gitk:4069
+#, fuzzy
+msgid "Matches none Commit Info criteria"
+msgstr "Alle Versionsinformationen-Kriterien erfüllen"
+
+#: gitk:4070
 msgid "Changes to Files:"
 msgstr "Dateien:"
 
-#: gitk:3829
+#: gitk:4071
 msgid "Fixed String"
 msgstr "Zeichenkette"
 
-#: gitk:3830
+#: gitk:4072
 msgid "Regular Expression"
 msgstr "Regulärer Ausdruck"
 
-#: gitk:3831
+#: gitk:4073
 msgid "Search string:"
 msgstr "Suchausdruck:"
 
-#: gitk:3832
+#: gitk:4074
 msgid ""
 "Commit Dates (\"2 weeks ago\", \"2009-03-17 15:27:38\", \"March 17, 2009 "
 "15:27:38\"):"
-msgstr "Datum (»2 weeks ago«, »2009-03-17 15:27:38«, »March 17, 2009 15:27:38«)"
+msgstr ""
+"Datum (»2 weeks ago«, »2009-03-17 15:27:38«, »March 17, 2009 15:27:38«)"
 
-#: gitk:3833
+#: gitk:4075
 msgid "Since:"
 msgstr "Von:"
 
-#: gitk:3834
+#: gitk:4076
 msgid "Until:"
 msgstr "Bis:"
 
-#: gitk:3835
+#: gitk:4077
 msgid "Limit and/or skip a number of revisions (positive integer):"
 msgstr "Versionsanzahl begrenzen oder einige überspringen (ganzzahliger Wert):"
 
-#: gitk:3836
+#: gitk:4078
 msgid "Number to show:"
 msgstr "Anzeigen:"
 
-#: gitk:3837
+#: gitk:4079
 msgid "Number to skip:"
 msgstr "Überspringen:"
 
-#: gitk:3838
+#: gitk:4080
 msgid "Miscellaneous options:"
 msgstr "Sonstiges:"
 
-#: gitk:3839
+#: gitk:4081
 msgid "Strictly sort by date"
 msgstr "Streng nach Datum sortieren"
 
-#: gitk:3840
+#: gitk:4082
 msgid "Mark branch sides"
 msgstr "Zweig-Seiten markieren"
 
-#: gitk:3841
+#: gitk:4083
 msgid "Limit to first parent"
 msgstr "Auf erste Elternversion beschränken"
 
-#: gitk:3842
+#: gitk:4084
 msgid "Simple history"
 msgstr "Einfache Historie"
 
-#: gitk:3843
+#: gitk:4085
 msgid "Additional arguments to git log:"
 msgstr "Zusätzliche Argumente für »git log«:"
 
-#: gitk:3844
+#: gitk:4086
 msgid "Enter files and directories to include, one per line:"
 msgstr "Folgende Dateien und Verzeichnisse anzeigen (eine pro Zeile):"
 
-#: gitk:3845
+#: gitk:4087
 msgid "Command to generate more commits to include:"
 msgstr "Versionsliste durch folgendes Kommando erzeugen lassen:"
 
-#: gitk:3967
+#: gitk:4211
 msgid "Gitk: edit view"
 msgstr "Gitk: Ansicht bearbeiten"
 
-#: gitk:3975
+#: gitk:4219
 msgid "-- criteria for selecting revisions"
 msgstr "-- Auswahl der angezeigten Versionen"
 
-#: gitk:3980
+#: gitk:4224
 msgid "View Name"
 msgstr "Ansichtsname"
 
-#: gitk:4055
+#: gitk:4299
 msgid "Apply (F5)"
 msgstr "Anwenden (F5)"
 
-#: gitk:4093
+#: gitk:4337
 msgid "Error in commit selection arguments:"
 msgstr "Fehler in den ausgewählten Versionen:"
 
-#: gitk:4146 gitk:4198 gitk:4646 gitk:4660 gitk:5921 gitk:11534 gitk:11535
+#: gitk:4392 gitk:4445 gitk:4906 gitk:4920 gitk:6190 gitk:12346 gitk:12347
 msgid "None"
 msgstr "Keine"
 
-#: gitk:4594 gitk:6441 gitk:8287 gitk:8302
-msgid "Date"
-msgstr "Datum"
-
-#: gitk:4594 gitk:6441
-msgid "CDate"
-msgstr "Eintragedatum"
-
-#: gitk:4743 gitk:4748
+#: gitk:5003 gitk:5008
 msgid "Descendant"
 msgstr "Abkömmling"
 
-#: gitk:4744
+#: gitk:5004
 msgid "Not descendant"
 msgstr "Kein Abkömmling"
 
-#: gitk:4751 gitk:4756
+#: gitk:5011 gitk:5016
 msgid "Ancestor"
 msgstr "Vorgänger"
 
-#: gitk:4752
+#: gitk:5012
 msgid "Not ancestor"
 msgstr "Kein Vorgänger"
 
-#: gitk:5042
+#: gitk:5306
 msgid "Local changes checked in to index but not committed"
 msgstr "Lokale Änderungen bereitgestellt, aber nicht eingetragen"
 
-#: gitk:5078
+#: gitk:5342
 msgid "Local uncommitted changes, not checked in to index"
 msgstr "Lokale Änderungen, nicht bereitgestellt"
 
-#: gitk:6759
+#: gitk:7115
+msgid "and many more"
+msgstr ""
+
+#: gitk:7118
 msgid "many"
 msgstr "viele"
 
-#: gitk:6942
+#: gitk:7309
 msgid "Tags:"
 msgstr "Markierungen:"
 
-#: gitk:6959 gitk:6965 gitk:8280
+#: gitk:7326 gitk:7332 gitk:8806
 msgid "Parent"
 msgstr "Eltern"
 
-#: gitk:6970
+#: gitk:7337
 msgid "Child"
 msgstr "Kind"
 
-#: gitk:6979
+#: gitk:7346
 msgid "Branch"
 msgstr "Zweig"
 
-#: gitk:6982
+#: gitk:7349
 msgid "Follows"
 msgstr "Folgt auf"
 
-#: gitk:6985
+#: gitk:7352
 msgid "Precedes"
 msgstr "Vorgänger von"
 
-#: gitk:7522
+#: gitk:7947
 #, tcl-format
 msgid "Error getting diffs: %s"
 msgstr "Fehler beim Laden des Vergleichs: %s"
 
-#: gitk:8108
+#: gitk:8631
 msgid "Goto:"
 msgstr "Gehe zu:"
 
-#: gitk:8129
+#: gitk:8652
 #, tcl-format
 msgid "Short SHA1 id %s is ambiguous"
 msgstr "Kurzer SHA1-Hashwert »%s« ist mehrdeutig"
 
-#: gitk:8136
+#: gitk:8659
 #, tcl-format
 msgid "Revision %s is not known"
 msgstr "Version »%s« ist unbekannt"
 
-#: gitk:8146
+#: gitk:8669
 #, tcl-format
 msgid "SHA1 id %s is not known"
 msgstr "SHA1-Hashwert »%s« ist unbekannt"
 
-#: gitk:8148
+#: gitk:8671
 #, tcl-format
 msgid "Revision %s is not in the current view"
 msgstr "Version »%s« wird in der aktuellen Ansicht nicht angezeigt"
 
-#: gitk:8290
+#: gitk:8813 gitk:8828
+msgid "Date"
+msgstr "Datum"
+
+#: gitk:8816
 msgid "Children"
 msgstr "Kinder"
 
-#: gitk:8348
+#: gitk:8879
 #, tcl-format
 msgid "Reset %s branch to here"
 msgstr "Zweig »%s« hierher zurücksetzen"
 
-#: gitk:8350
+#: gitk:8881
 msgid "Detached head: can't reset"
 msgstr "Zweigspitze ist abgetrennt: Zurücksetzen nicht möglich"
 
-#: gitk:8459 gitk:8465
+#: gitk:8986 gitk:8992
 msgid "Skipping merge commit "
 msgstr "Überspringe Zusammenführungs-Version "
 
-#: gitk:8474 gitk:8479
+#: gitk:9001 gitk:9006
 msgid "Error getting patch ID for "
 msgstr "Fehler beim Holen der Patch-ID für "
 
-#: gitk:8475 gitk:8480
+#: gitk:9002 gitk:9007
 msgid " - stopping\n"
 msgstr " - Abbruch.\n"
 
-#: gitk:8485 gitk:8488 gitk:8496 gitk:8510 gitk:8519
+#: gitk:9012 gitk:9015 gitk:9023 gitk:9037 gitk:9046
 msgid "Commit "
 msgstr "Version "
 
-#: gitk:8489
+#: gitk:9016
 msgid ""
 " is the same patch as\n"
 "       "
 msgstr ""
 " ist das gleiche Patch wie\n"
 "       "
 
-#: gitk:8497
+#: gitk:9024
 msgid ""
 " differs from\n"
 "       "
 msgstr ""
 " ist unterschiedlich von\n"
 "       "
 
-#: gitk:8499
+#: gitk:9026
 msgid ""
 "Diff of commits:\n"
 "\n"
 msgstr ""
 "Vergleich der Versionen:\n"
 "\n"
 
-#: gitk:8511 gitk:8520
+#: gitk:9038 gitk:9047
 #, tcl-format
 msgid " has %s children - stopping\n"
 msgstr " hat %s Kinder. Abbruch\n"
 
-#: gitk:8539
+#: gitk:9066
 #, tcl-format
 msgid "Error writing commit to file: %s"
 msgstr "Fehler beim Schreiben der Version in Datei: %s"
 
-#: gitk:8545
+#: gitk:9072
 #, tcl-format
 msgid "Error diffing commits: %s"
 msgstr "Fehler beim Vergleichen der Versionen: %s"
 
-#: gitk:8575
+#: gitk:9118
 msgid "Top"
 msgstr "Oben"
 
-#: gitk:8576
+#: gitk:9119
 msgid "From"
 msgstr "Von"
 
-#: gitk:8581
+#: gitk:9124
 msgid "To"
 msgstr "bis"
 
-#: gitk:8605
+#: gitk:9148
 msgid "Generate patch"
 msgstr "Patch erstellen"
 
-#: gitk:8607
+#: gitk:9150
 msgid "From:"
 msgstr "Von:"
 
-#: gitk:8616
+#: gitk:9159
 msgid "To:"
 msgstr "bis:"
 
-#: gitk:8625
+#: gitk:9168
 msgid "Reverse"
 msgstr "Umgekehrt"
 
-#: gitk:8627 gitk:8822
+#: gitk:9170 gitk:9366
 msgid "Output file:"
 msgstr "Ausgabedatei:"
 
-#: gitk:8633
+#: gitk:9176
 msgid "Generate"
 msgstr "Erzeugen"
 
-#: gitk:8671
+#: gitk:9214
 msgid "Error creating patch:"
 msgstr "Fehler beim Erzeugen des Patches:"
 
-#: gitk:8694 gitk:8810 gitk:8867
+#: gitk:9237 gitk:9354 gitk:9411
 msgid "ID:"
 msgstr "ID:"
 
-#: gitk:8703
+#: gitk:9246
 msgid "Tag name:"
 msgstr "Markierungsname:"
 
-#: gitk:8706
+#: gitk:9249
 msgid "Tag message is optional"
 msgstr "Eine Markierungsbeschreibung ist optional"
 
-#: gitk:8708
+#: gitk:9251
 msgid "Tag message:"
 msgstr "Markierungsbeschreibung:"
 
-#: gitk:8712 gitk:8876
+#: gitk:9255 gitk:9420
 msgid "Create"
 msgstr "Erstellen"
 
-#: gitk:8730
+#: gitk:9273
 msgid "No tag name specified"
 msgstr "Kein Markierungsname angegeben"
 
-#: gitk:8734
+#: gitk:9277
 #, tcl-format
 msgid "Tag \"%s\" already exists"
 msgstr "Markierung »%s« existiert bereits."
 
-#: gitk:8744
+#: gitk:9287
 msgid "Error creating tag:"
 msgstr "Fehler beim Erstellen der Markierung:"
 
-#: gitk:8819
+#: gitk:9363
 msgid "Command:"
 msgstr "Kommando:"
 
-#: gitk:8827
+#: gitk:9371
 msgid "Write"
 msgstr "Schreiben"
 
-#: gitk:8845
+#: gitk:9389
 msgid "Error writing commit:"
 msgstr "Fehler beim Schreiben der Version:"
 
-#: gitk:8872
+#: gitk:9416
 msgid "Name:"
 msgstr "Name:"
 
-#: gitk:8895
+#: gitk:9439
 msgid "Please specify a name for the new branch"
 msgstr "Bitte geben Sie einen Namen für den neuen Zweig an."
 
-#: gitk:8900
+#: gitk:9444
 #, tcl-format
 msgid "Branch '%s' already exists. Overwrite?"
 msgstr "Zweig »%s« existiert bereits. Soll er überschrieben werden?"
 
-#: gitk:8966
+#: gitk:9511
 #, tcl-format
 msgid "Commit %s is already included in branch %s -- really re-apply it?"
 msgstr ""
-"Version »%s« ist bereits im Zweig »%s« enthalten -- trotzdem erneut eintragen?"
+"Version »%s« ist bereits im Zweig »%s« enthalten -- trotzdem erneut "
+"eintragen?"
 
-#: gitk:8971
+#: gitk:9516
 msgid "Cherry-picking"
 msgstr "Version pflücken"
 
-#: gitk:8980
+#: gitk:9525
 #, tcl-format
 msgid ""
 "Cherry-pick failed because of local changes to file '%s'.\n"
 "Please commit, reset or stash your changes and try again."
 msgstr ""
 "Pflücken fehlgeschlagen, da noch lokale Änderungen in Datei »%s«\n"
 "vorliegen. Bitte diese Änderungen eintragen, zurücksetzen oder\n"
 "zwischenspeichern (»git stash«) und dann erneut versuchen."
 
-#: gitk:8986
+#: gitk:9531
 msgid ""
 "Cherry-pick failed because of merge conflict.\n"
 "Do you wish to run git citool to resolve it?"
 msgstr ""
 "Pflücken fehlgeschlagen, da ein Zusammenführungs-Konflikt aufgetreten\n"
 "ist. Soll das Zusammenführungs-Werkzeug (»git citool«) aufgerufen\n"
 "werden, um diesen Konflikt aufzulösen?"
 
-#: gitk:9002
+#: gitk:9547 gitk:9605
 msgid "No changes committed"
 msgstr "Keine Änderungen eingetragen"
 
-#: gitk:9028
+#: gitk:9574
+#, fuzzy, tcl-format
+msgid "Commit %s is not included in branch %s -- really revert it?"
+msgstr ""
+"Version »%s« ist bereits im Zweig »%s« enthalten -- trotzdem erneut "
+"eintragen?"
+
+#: gitk:9579
+#, fuzzy
+msgid "Reverting"
+msgstr "Zurücksetzen"
+
+#: gitk:9587
+#, fuzzy, tcl-format
+msgid ""
+"Revert failed because of local changes to the following files:%s Please "
+"commit, reset or stash  your changes and try again."
+msgstr ""
+"Pflücken fehlgeschlagen, da noch lokale Änderungen in Datei »%s«\n"
+"vorliegen. Bitte diese Änderungen eintragen, zurücksetzen oder\n"
+"zwischenspeichern (»git stash«) und dann erneut versuchen."
+
+#: gitk:9591
+#, fuzzy
+msgid ""
+"Revert failed because of merge conflict.\n"
+" Do you wish to run git citool to resolve it?"
+msgstr ""
+"Pflücken fehlgeschlagen, da ein Zusammenführungs-Konflikt aufgetreten\n"
+"ist. Soll das Zusammenführungs-Werkzeug (»git citool«) aufgerufen\n"
+"werden, um diesen Konflikt aufzulösen?"
+
+#: gitk:9634
 msgid "Confirm reset"
 msgstr "Zurücksetzen bestätigen"
 
-#: gitk:9030
+#: gitk:9636
 #, tcl-format
 msgid "Reset branch %s to %s?"
 msgstr "Zweig »%s« auf »%s« zurücksetzen?"
 
-#: gitk:9032
+#: gitk:9638
 msgid "Reset type:"
 msgstr "Art des Zurücksetzens:"
 
-#: gitk:9035
+#: gitk:9641
 msgid "Soft: Leave working tree and index untouched"
 msgstr "Harmlos: Arbeitskopie und Bereitstellung unverändert"
 
-#: gitk:9038
+#: gitk:9644
 msgid "Mixed: Leave working tree untouched, reset index"
 msgstr ""
 "Gemischt: Arbeitskopie unverändert,\n"
 "Bereitstellung zurückgesetzt"
 
-#: gitk:9041
+#: gitk:9647
 msgid ""
 "Hard: Reset working tree and index\n"
 "(discard ALL local changes)"
 msgstr ""
 "Hart: Arbeitskopie und Bereitstellung\n"
 "(Alle lokalen Änderungen werden gelöscht)"
 
-#: gitk:9058
+#: gitk:9664
 msgid "Resetting"
 msgstr "Zurücksetzen"
 
-#: gitk:9118
+#: gitk:9724
 msgid "Checking out"
 msgstr "Umstellen"
 
-#: gitk:9171
+#: gitk:9777
 msgid "Cannot delete the currently checked-out branch"
 msgstr ""
 "Der Zweig, auf den die Arbeitskopie momentan umgestellt ist, kann nicht "
 "gelöscht werden."
 
-#: gitk:9177
+#: gitk:9783
 #, tcl-format
 msgid ""
 "The commits on branch %s aren't on any other branch.\n"
 "Really delete branch %s?"
 msgstr ""
 "Die Versionen auf Zweig »%s« existieren auf keinem anderen Zweig.\n"
 "Zweig »%s« trotzdem löschen?"
 
-#: gitk:9208
+#: gitk:9814
 #, tcl-format
 msgid "Tags and heads: %s"
 msgstr "Markierungen und Zweige: %s"
 
-#: gitk:9223
+#: gitk:9829
 msgid "Filter"
 msgstr "Filtern"
 
-#: gitk:9518
+#: gitk:10125
 msgid ""
 "Error reading commit topology information; branch and preceding/following "
 "tag information will be incomplete."
 msgstr ""
 "Fehler beim Lesen der Strukturinformationen; Zweige und Informationen zu "
 "Vorgänger/Nachfolger werden unvollständig sein."
 
-#: gitk:10504
+#: gitk:11102
 msgid "Tag"
 msgstr "Markierung"
 
-#: gitk:10504
+#: gitk:11106
 msgid "Id"
 msgstr "Id"
 
-#: gitk:10554
+#: gitk:11189
 msgid "Gitk font chooser"
 msgstr "Gitk-Schriften wählen"
 
-#: gitk:10571
+#: gitk:11206
 msgid "B"
 msgstr "F"
 
-#: gitk:10574
+#: gitk:11209
 msgid "I"
 msgstr "K"
 
-#: gitk:10692
-msgid "Gitk preferences"
-msgstr "Gitk-Einstellungen"
-
-#: gitk:10694
+#: gitk:11327
 msgid "Commit list display options"
 msgstr "Anzeige der Versionsliste"
 
-#: gitk:10697
+#: gitk:11330
 msgid "Maximum graph width (lines)"
 msgstr "Maximale Graphenbreite (Zeilen)"
 
-#: gitk:10700
-#, tcl-format
+#: gitk:11334
+#, no-tcl-format
 msgid "Maximum graph width (% of pane)"
 msgstr "Maximale Graphenbreite (% des Fensters)"
 
-#: gitk:10703
+#: gitk:11337
 msgid "Show local changes"
 msgstr "Lokale Änderungen anzeigen"
 
-#: gitk:10706
-msgid "Auto-select SHA1"
+#: gitk:11340
+#, fuzzy
+msgid "Auto-select SHA1 (length)"
 msgstr "SHA1-Hashwert automatisch auswählen"
 
-#: gitk:10709
+#: gitk:11344
 msgid "Hide remote refs"
 msgstr "Entfernte Zweige/Markierungen ausblenden"
 
-#: gitk:10713
+#: gitk:11348
 msgid "Diff display options"
 msgstr "Anzeige des Vergleichs"
 
-#: gitk:10715
+#: gitk:11350
 msgid "Tab spacing"
 msgstr "Tabulatorbreite"
 
-#: gitk:10718
-msgid "Display nearby tags"
+#: gitk:11353
+#, fuzzy
+msgid "Display nearby tags/heads"
 msgstr "Naheliegende Markierungen anzeigen"
 
-#: gitk:10721
+#: gitk:11356
+msgid "Maximum # tags/heads to show"
+msgstr ""
+
+#: gitk:11359
 msgid "Limit diffs to listed paths"
 msgstr "Vergleich nur für angezeigte Pfade"
 
-#: gitk:10724
+#: gitk:11362
 msgid "Support per-file encodings"
 msgstr "Zeichenkodierung pro Datei ermitteln"
 
-#: gitk:10730 gitk:10819
+#: gitk:11368 gitk:11515
 msgid "External diff tool"
 msgstr "Externes Diff-Programm"
 
-#: gitk:10731
+#: gitk:11369
 msgid "Choose..."
 msgstr "Wählen ..."
 
-#: gitk:10736
+#: gitk:11374
 msgid "General options"
 msgstr "Allgemeine Optionen"
 
-#: gitk:10739
+#: gitk:11377
 msgid "Use themed widgets"
 msgstr "Aussehen der Benutzeroberfläche durch Thema bestimmen"
 
-#: gitk:10741
+#: gitk:11379
 msgid "(change requires restart)"
 msgstr "(Änderungen werden erst nach Neustart wirksam)"
 
-#: gitk:10743
+#: gitk:11381
 msgid "(currently unavailable)"
 msgstr "(Momentan nicht verfügbar)"
 
-#: gitk:10747
+#: gitk:11392
 msgid "Colors: press to choose"
 msgstr "Farben: Klicken zum Wählen"
 
-#: gitk:10750
+#: gitk:11395
 msgid "Interface"
 msgstr "Benutzeroberfläche"
 
-#: gitk:10751
+#: gitk:11396
 msgid "interface"
 msgstr "Benutzeroberfläche"
 
-#: gitk:10754
+#: gitk:11399
 msgid "Background"
 msgstr "Hintergrund"
 
-#: gitk:10755 gitk:10785
+#: gitk:11400 gitk:11430
 msgid "background"
 msgstr "Hintergrund"
 
-#: gitk:10758
+#: gitk:11403
 msgid "Foreground"
 msgstr "Vordergrund"
 
-#: gitk:10759
+#: gitk:11404
 msgid "foreground"
 msgstr "Vordergrund"
 
-#: gitk:10762
+#: gitk:11407
 msgid "Diff: old lines"
 msgstr "Vergleich: Alte Zeilen"
 
-#: gitk:10763
+#: gitk:11408
 msgid "diff old lines"
 msgstr "Vergleich - Alte Zeilen"
 
-#: gitk:10767
+#: gitk:11412
 msgid "Diff: new lines"
 msgstr "Vergleich: Neue Zeilen"
 
-#: gitk:10768
+#: gitk:11413
 msgid "diff new lines"
 msgstr "Vergleich - Neue Zeilen"
 
-#: gitk:10772
+#: gitk:11417
 msgid "Diff: hunk header"
 msgstr "Vergleich: Änderungstitel"
 
-#: gitk:10774
+#: gitk:11419
 msgid "diff hunk header"
 msgstr "Vergleich - Änderungstitel"
 
-#: gitk:10778
+#: gitk:11423
 msgid "Marked line bg"
 msgstr "Hintergrund für markierte Zeile"
 
-#: gitk:10780
+#: gitk:11425
 msgid "marked line background"
 msgstr "Hintergrund für markierte Zeile"
 
-#: gitk:10784
+#: gitk:11429
 msgid "Select bg"
 msgstr "Hintergrundfarbe auswählen"
 
-#: gitk:10788
+#: gitk:11438
 msgid "Fonts: press to choose"
 msgstr "Schriftart: Klicken zum Wählen"
 
-#: gitk:10790
+#: gitk:11440
 msgid "Main font"
 msgstr "Programmschriftart"
 
-#: gitk:10791
+#: gitk:11441
 msgid "Diff display font"
 msgstr "Schriftart für Vergleich"
 
-#: gitk:10792
+#: gitk:11442
 msgid "User interface font"
 msgstr "Beschriftungen"
 
-#: gitk:10829
+#: gitk:11464
+msgid "Gitk preferences"
+msgstr "Gitk-Einstellungen"
+
+#: gitk:11473
+#, fuzzy
+msgid "General"
+msgstr "Erzeugen"
+
+#: gitk:11474
+msgid "Colors"
+msgstr ""
+
+#: gitk:11475
+msgid "Fonts"
+msgstr ""
+
+#: gitk:11525
 #, tcl-format
 msgid "Gitk: choose color for %s"
 msgstr "Gitk: Farbe wählen für %s"
 
-#: gitk:11433
+#: gitk:12242
 msgid "Cannot find a git repository here."
 msgstr "Kein Git-Projektarchiv gefunden."
 
-#: gitk:11437
-#, tcl-format
-msgid "Cannot find the git directory \"%s\"."
-msgstr "Git-Verzeichnis »%s« wurde nicht gefunden."
-
-#: gitk:11484
+#: gitk:12289
 #, tcl-format
 msgid "Ambiguous argument '%s': both revision and filename"
 msgstr "Mehrdeutige Angabe »%s«: Sowohl Version als auch Dateiname existiert."
 
-#: gitk:11496
+#: gitk:12301
 msgid "Bad arguments to gitk:"
 msgstr "Falsche Kommandozeilen-Parameter für gitk:"
 
-#: gitk:11587
+#: gitk:12405
 msgid "Command line"
 msgstr "Kommandozeile"
+
+#~ msgid "next"
+#~ msgstr "nächste"
+
+#~ msgid "prev"
+#~ msgstr "vorige"
+
+#~ msgid "CDate"
+#~ msgstr "Eintragedatum"
+
+#~ msgid "Cannot find the git directory \"%s\"."
+#~ msgstr "Git-Verzeichnis »%s« wurde nicht gefunden."
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/es.msg /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/es.msg
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/es.msg	2017-10-10 12:31:59.106631528 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/es.msg	2017-10-10 13:04:28.158560096 +0800
@@ -1,7 +1,7 @@
-set ::msgcat::header "Project-Id-Version: gitk\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2008-10-18 22:03+1100\nPO-Revision-Date: 2008-03-25 11:20+0100\nLast-Translator: Santiago Gala <santiago.gala@gmail.com>\nLanguage-Team: Spanish\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"
+set ::msgcat::header "Project-Id-Version: gitk\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2015-03-15 14:37+1100\nPO-Revision-Date: 2008-03-25 11:20+0100\nLast-Translator: Santiago Gala <santiago.gala@gmail.com>\nLanguage-Team: Spanish\nLanguage: \nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"
 ::msgcat::mcset es "Couldn't get list of unmerged files:" "Imposible obtener la lista de archivos pendientes de fusi\u00f3n:"
 ::msgcat::mcset es "No files selected: --merge specified but no files are unmerged." "No hay archivos seleccionados: se seleccion\u00f3 la opci\u00f3n --merge pero no hay archivos pendientes de fusi\u00f3n."
 ::msgcat::mcset es "No files selected: --merge specified but no unmerged files are within file limit." "No hay archivos seleccionados: se seleccion\u00f3 la opci\u00f3n --merge pero los archivos especificados no necesitan fusi\u00f3n."
 ::msgcat::mcset es "Reading" "Leyendo"
 ::msgcat::mcset es "Reading commits..." "Leyendo revisiones..."
 ::msgcat::mcset es "No commits selected" "No se seleccionaron revisiones"
@@ -21,16 +21,14 @@
 ::msgcat::mcset es "Delete view" "Eliminar vista"
 ::msgcat::mcset es "All files" "Todos los archivos"
 ::msgcat::mcset es "View" "Vista"
 ::msgcat::mcset es "About gitk" "Acerca de gitk"
 ::msgcat::mcset es "Key bindings" "Combinaciones de teclas"
 ::msgcat::mcset es "Help" "Ayuda"
-::msgcat::mcset es "SHA1 ID: " "SHA1 ID: "
+::msgcat::mcset es "SHA1 ID:" "SHA1 ID:"
 ::msgcat::mcset es "Find" "Buscar"
-::msgcat::mcset es "next" "<<"
-::msgcat::mcset es "prev" ">>"
 ::msgcat::mcset es "commit" "revisi\u00f3n"
 ::msgcat::mcset es "containing:" "que contiene:"
 ::msgcat::mcset es "touching paths:" "que modifica la ruta:"
 ::msgcat::mcset es "adding/removing string:" "que a\u00f1ade/elimina cadena:"
 ::msgcat::mcset es "Exact" "Exacto"
 ::msgcat::mcset es "IgnCase" "NoMay\u00fas"
@@ -56,22 +54,18 @@
 ::msgcat::mcset es "Cherry-pick this commit" "A\u00f1adir esta revisi\u00f3n a la rama actual (cherry-pick)"
 ::msgcat::mcset es "Reset HEAD branch to here" "Traer la rama HEAD aqu\u00ed"
 ::msgcat::mcset es "Check out this branch" "Cambiar a esta rama"
 ::msgcat::mcset es "Remove this branch" "Eliminar esta rama"
 ::msgcat::mcset es "Highlight this too" "Seleccionar tambi\u00e9n"
 ::msgcat::mcset es "Highlight this only" "Seleccionar s\u00f3lo"
-::msgcat::mcset es "\nGitk - a commit viewer for git\n\nCopyright \\u00a9 2005-2010 Paul Mackerras\n\nUse and redistribute under the terms of the GNU General Public License" "\nGitk - un visualizador de revisiones para git\n\nCopyright \\u00a9 2005-2010 Paul Mackerras\n\nUso y redistribuci\u00f3n permitidos seg\u00fan los t\u00e9rminos de la Licencia P\u00fablica General de GNU (GNU GPL)"
 ::msgcat::mcset es "Close" "Cerrar"
 ::msgcat::mcset es "Gitk key bindings" "Combinaciones de tecla de Gitk"
 ::msgcat::mcset es "Gitk key bindings:" "Combinaciones de tecla de Gitk:"
 ::msgcat::mcset es "<%s-Q>\u0009\u0009Quit" "<%s-Q>\u0009\u0009Salir"
 ::msgcat::mcset es "<Home>\u0009\u0009Move to first commit" "<Home>\u0009\u0009Ir a la primera revisi\u00f3n"
 ::msgcat::mcset es "<End>\u0009\u0009Move to last commit" "<End>\u0009\u0009Ir a la \u00faltima revisi\u00f3n"
-::msgcat::mcset es "<Up>, p, i\u0009Move up one commit" "<Up>, p, i\u0009Subir una revisi\u00f3n"
-::msgcat::mcset es "<Down>, n, k\u0009Move down one commit" "<Down>, n, k\u0009Bajar una revisi\u00f3n"
-::msgcat::mcset es "<Left>, z, j\u0009Go back in history list" "<Left>, z, j\u0009Retroceder en la historia"
 ::msgcat::mcset es "<Right>, x, l\u0009Go forward in history list" "<Right>, x, l\u0009Avanzar en la historia"
 ::msgcat::mcset es "<PageUp>\u0009Move up one page in commit list" "<PageUp>\u0009Subir una p\u00e1gina en la lista de revisiones"
 ::msgcat::mcset es "<PageDown>\u0009Move down one page in commit list" "<PageDown>\u0009Bajar una p\u00e1gina en la lista de revisiones"
 ::msgcat::mcset es "<%s-Home>\u0009Scroll to top of commit list" "<%s-Home>\u0009Desplazarse al inicio de la lista de revisiones"
 ::msgcat::mcset es "<%s-End>\u0009Scroll to bottom of commit list" "<%s-End>\u0009Desplazarse al final de la lista de revisiones"
 ::msgcat::mcset es "<%s-Up>\u0009Scroll commit list up one line" "<%s-Up>\u0009Desplazar una l\u00ednea hacia arriba la lista de revisiones"
@@ -85,51 +79,44 @@
 ::msgcat::mcset es "<Space>\u0009\u0009Scroll diff view down one page" "<Space>\u0009\u0009Desplaza hacia abajo una p\u00e1gina la vista de diferencias"
 ::msgcat::mcset es "u\u0009\u0009Scroll diff view up 18 lines" "u\u0009\u0009Desplaza hacia arriba 18 l\u00edneas la vista de diferencias"
 ::msgcat::mcset es "d\u0009\u0009Scroll diff view down 18 lines" "d\u0009\u0009Desplaza hacia abajo 18 l\u00edneas la vista de diferencias"
 ::msgcat::mcset es "<%s-F>\u0009\u0009Find" "<%s-F>\u0009\u0009Buscar"
 ::msgcat::mcset es "<%s-G>\u0009\u0009Move to next find hit" "<%s-G>\u0009\u0009Buscar el siguiente"
 ::msgcat::mcset es "<Return>\u0009Move to next find hit" "<Return>\u0009Buscar el siguiente"
-::msgcat::mcset es "/\u0009\u0009Move to next find hit, or redo find" "/\u0009\u0009Buscar el siguiente, o reiniciar la b\u00fasqueda"
 ::msgcat::mcset es "?\u0009\u0009Move to previous find hit" "?\u0009\u0009Buscar el anterior"
 ::msgcat::mcset es "f\u0009\u0009Scroll diff view to next file" "f\u0009\u0009Desplazar la vista de diferencias al archivo siguiente"
 ::msgcat::mcset es "<%s-S>\u0009\u0009Search for next hit in diff view" "<%s-S>\u0009\u0009Buscar siguiente en la vista de diferencias"
 ::msgcat::mcset es "<%s-R>\u0009\u0009Search for previous hit in diff view" "<%s-R>\u0009\u0009Buscar anterior en la vista de diferencias"
 ::msgcat::mcset es "<%s-KP+>\u0009Increase font size" "<%s-KP+>\u0009Aumentar tama\u00f1o del texto"
 ::msgcat::mcset es "<%s-plus>\u0009Increase font size" "<%s-plus>\u0009Aumentar tama\u00f1o del texto"
 ::msgcat::mcset es "<%s-KP->\u0009Decrease font size" "<%s-KP->\u0009Disminuir tama\u00f1o del texto"
 ::msgcat::mcset es "<%s-minus>\u0009Decrease font size" "<%s-minus>\u0009Disminuir tama\u00f1o del texto"
 ::msgcat::mcset es "<F5>\u0009\u0009Update" "<F5>\u0009\u0009Actualizar"
+::msgcat::mcset es "Searching" "Buscando"
 ::msgcat::mcset es "Gitk view definition" "Definici\u00f3n de vistas de Gitk"
-::msgcat::mcset es "Name" "Nombre"
 ::msgcat::mcset es "Remember this view" "Recordar esta vista"
-::msgcat::mcset es "Commits to include (arguments to git log):" "Revisiones a incluir (argumentos a git log):"
-::msgcat::mcset es "Command to generate more commits to include:" "Comando que genera m\u00e1s revisiones a incluir:"
 ::msgcat::mcset es "Enter files and directories to include, one per line:" "Introducir archivos y directorios a incluir, uno por l\u00ednea:"
+::msgcat::mcset es "Command to generate more commits to include:" "Comando que genera m\u00e1s revisiones a incluir:"
 ::msgcat::mcset es "Error in commit selection arguments:" "Error en los argumentos de selecci\u00f3n de las revisiones:"
 ::msgcat::mcset es "None" "Ninguno"
-::msgcat::mcset es "Date" "Fecha"
-::msgcat::mcset es "CDate" "Fecha de creaci\u00f3n"
 ::msgcat::mcset es "Descendant" "Descendiente"
 ::msgcat::mcset es "Not descendant" "No descendiente"
 ::msgcat::mcset es "Ancestor" "Antepasado"
 ::msgcat::mcset es "Not ancestor" "No antepasado"
 ::msgcat::mcset es "Local changes checked in to index but not committed" "Cambios locales a\u00f1adidos al \u00edndice pero sin completar revisi\u00f3n"
 ::msgcat::mcset es "Local uncommitted changes, not checked in to index" "Cambios locales sin a\u00f1adir al \u00edndice"
-::msgcat::mcset es "Searching" "Buscando"
 ::msgcat::mcset es "Tags:" "Etiquetas:"
 ::msgcat::mcset es "Parent" "Padre"
 ::msgcat::mcset es "Child" "Hija"
 ::msgcat::mcset es "Branch" "Rama"
 ::msgcat::mcset es "Follows" "Sigue-a"
 ::msgcat::mcset es "Precedes" "Precede-a"
-::msgcat::mcset es "Error getting merge diffs:" "Error al leer las diferencias de fusi\u00f3n:"
 ::msgcat::mcset es "Goto:" "Ir a:"
-::msgcat::mcset es "SHA1 ID:" "SHA1 ID:"
 ::msgcat::mcset es "Short SHA1 id %s is ambiguous" "La id SHA1 abreviada %s es ambigua"
 ::msgcat::mcset es "SHA1 id %s is not known" "La id SHA1 %s es desconocida"
-::msgcat::mcset es "Tag/Head %s is not known" "La etiqueta/rama %s es deconocida"
+::msgcat::mcset es "Date" "Fecha"
 ::msgcat::mcset es "Children" "Hijas"
 ::msgcat::mcset es "Reset %s branch to here" "Poner la rama %s en esta revisi\u00f3n"
 ::msgcat::mcset es "Top" "Origen"
 ::msgcat::mcset es "From" "De"
 ::msgcat::mcset es "To" "A"
 ::msgcat::mcset es "Generate patch" "Generar parche"
@@ -168,34 +155,30 @@
 ::msgcat::mcset es "Error reading commit topology information; branch and preceding/following tag information will be incomplete." "Error al leer la topolog\u00eda de revisiones: la informaci\u00f3n sobre las ramas y etiquetas precedentes y siguientes ser\u00e1 incompleta."
 ::msgcat::mcset es "Tag" "Etiqueta"
 ::msgcat::mcset es "Id" "Id"
 ::msgcat::mcset es "Gitk font chooser" "Selector de tipograf\u00edas gitk"
 ::msgcat::mcset es "B" "B"
 ::msgcat::mcset es "I" "I"
-::msgcat::mcset es "Gitk preferences" "Preferencias de gitk"
 ::msgcat::mcset es "Commit list display options" "Opciones de visualizaci\u00f3n de la lista de revisiones"
 ::msgcat::mcset es "Maximum graph width (lines)" "Ancho m\u00e1ximo del gr\u00e1fico (en l\u00edneas)"
 ::msgcat::mcset es "Maximum graph width (% of pane)" "Ancho m\u00e1ximo del gr\u00e1fico (en % del panel)"
 ::msgcat::mcset es "Show local changes" "Mostrar cambios locales"
-::msgcat::mcset es "Auto-select SHA1" "Seleccionar autom\u00e1ticamente SHA1 hash"
 ::msgcat::mcset es "Diff display options" "Opciones de visualizaci\u00f3n de diferencias"
 ::msgcat::mcset es "Tab spacing" "Espaciado de tabulador"
-::msgcat::mcset es "Display nearby tags" "Mostrar etiquetas cercanas"
 ::msgcat::mcset es "Limit diffs to listed paths" "Limitar las diferencias a las rutas seleccionadas"
 ::msgcat::mcset es "Colors: press to choose" "Colores: pulse para seleccionar"
 ::msgcat::mcset es "Background" "Fondo"
 ::msgcat::mcset es "Foreground" "Primer plano"
 ::msgcat::mcset es "Diff: old lines" "Diff: l\u00edneas viejas"
 ::msgcat::mcset es "Diff: new lines" "Diff: l\u00edneas nuevas"
 ::msgcat::mcset es "Diff: hunk header" "Diff: cabecera de fragmento"
 ::msgcat::mcset es "Select bg" "Color de fondo de la selecci\u00f3n"
 ::msgcat::mcset es "Fonts: press to choose" "Tipograf\u00edas: pulse para elegir"
 ::msgcat::mcset es "Main font" "Tipograf\u00eda principal"
 ::msgcat::mcset es "Diff display font" "Tipograf\u00eda para diferencias"
 ::msgcat::mcset es "User interface font" "Tipograf\u00eda para interfaz de usuario"
+::msgcat::mcset es "Gitk preferences" "Preferencias de gitk"
 ::msgcat::mcset es "Gitk: choose color for %s" "Gitk: elegir color para %s"
-::msgcat::mcset es "Sorry, gitk cannot run with this version of Tcl/Tk.\n Gitk requires at least Tcl/Tk 8.4." "Esta versi\u00f3n de Tcl/Tk es demasiado antigua.\n Gitk requiere Tcl/Tk versi\u00f3n 8.4 o superior."
 ::msgcat::mcset es "Cannot find a git repository here." "No hay un repositorio git aqu\u00ed."
-::msgcat::mcset es "Cannot find the git directory \"%s\"." "No hay directorio git \"%s\"."
 ::msgcat::mcset es "Ambiguous argument '%s': both revision and filename" "Argumento ambiguo: '%s' es tanto una revisi\u00f3n como un nombre de archivo"
 ::msgcat::mcset es "Bad arguments to gitk:" "Argumentos incorrectos a Gitk:"
 ::msgcat::mcset es "Command line" "L\u00ednea de comandos"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/es.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/es.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/es.po	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/es.po	2015-05-01 03:12:02.000000000 +0800
@@ -5,907 +5,1391 @@
 #
 #
 msgid ""
 msgstr ""
 "Project-Id-Version: gitk\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2008-10-18 22:03+1100\n"
+"POT-Creation-Date: 2015-03-15 14:37+1100\n"
 "PO-Revision-Date: 2008-03-25 11:20+0100\n"
 "Last-Translator: Santiago Gala <santiago.gala@gmail.com>\n"
 "Language-Team: Spanish\n"
+"Language: \n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
 
-#: gitk:113
+#: gitk:140
 msgid "Couldn't get list of unmerged files:"
 msgstr "Imposible obtener la lista de archivos pendientes de fusión:"
 
-#: gitk:340
+#: gitk:212 gitk:2381
+msgid "Color words"
+msgstr ""
+
+#: gitk:217 gitk:2381 gitk:8201 gitk:8234
+msgid "Markup words"
+msgstr ""
+
+#: gitk:324
+#, fuzzy
+msgid "Error parsing revisions:"
+msgstr "Error al leer las diferencias de fusión:"
+
+#: gitk:380
+msgid "Error executing --argscmd command:"
+msgstr ""
+
+#: gitk:393
 msgid "No files selected: --merge specified but no files are unmerged."
 msgstr ""
 "No hay archivos seleccionados: se seleccionó la opción --merge pero no hay "
 "archivos pendientes de fusión."
 
-#: gitk:343
+#: gitk:396
 msgid ""
 "No files selected: --merge specified but no unmerged files are within file "
 "limit."
 msgstr ""
 "No hay archivos seleccionados: se seleccionó la opción --merge pero los "
 "archivos especificados no necesitan fusión."
 
-#: gitk:378
+#: gitk:418 gitk:566
+#, fuzzy
+msgid "Error executing git log:"
+msgstr "Error al crear la etiqueta:"
+
+#: gitk:436 gitk:582
 msgid "Reading"
 msgstr "Leyendo"
 
-#: gitk:438 gitk:3462
+#: gitk:496 gitk:4508
 msgid "Reading commits..."
 msgstr "Leyendo revisiones..."
 
-#: gitk:441 gitk:1528 gitk:3465
+#: gitk:499 gitk:1637 gitk:4511
 msgid "No commits selected"
 msgstr "No se seleccionaron revisiones"
 
-#: gitk:1399
+#: gitk:1511
 msgid "Can't parse git log output:"
 msgstr "Error analizando la salida de git log:"
 
-#: gitk:1605
+#: gitk:1740
 msgid "No commit information available"
 msgstr "Falta información sobre las revisiones"
 
-#: gitk:1709 gitk:1731 gitk:3259 gitk:7764 gitk:9293 gitk:9466
+#: gitk:1897
+msgid "mc"
+msgstr ""
+
+#: gitk:1932 gitk:4298 gitk:9650 gitk:11220 gitk:11500
 msgid "OK"
 msgstr "Aceptar"
 
-#: gitk:1733 gitk:3260 gitk:7439 gitk:7510 gitk:7613 gitk:7660 gitk:7766
-#: gitk:9294 gitk:9467
+#: gitk:1934 gitk:4300 gitk:9177 gitk:9256 gitk:9372 gitk:9421 gitk:9652
+#: gitk:11221 gitk:11501
 msgid "Cancel"
 msgstr "Cancelar"
 
-#: gitk:1811
+#: gitk:2069
 msgid "Update"
 msgstr "Actualizar"
 
-#: gitk:1813
+#: gitk:2070
+msgid "Reload"
+msgstr ""
+
+#: gitk:2071
 msgid "Reread references"
 msgstr "Releer referencias"
 
-#: gitk:1814
+#: gitk:2072
 msgid "List references"
 msgstr "Lista de referencias"
 
-#: gitk:1815
+#: gitk:2074
+msgid "Start git gui"
+msgstr ""
+
+#: gitk:2076
 msgid "Quit"
 msgstr "Salir"
 
-#: gitk:1810
+#: gitk:2068
 msgid "File"
 msgstr "Archivo"
 
-#: gitk:1818
+#: gitk:2080
 msgid "Preferences"
 msgstr "Preferencias"
 
-#: gitk:1817
+#: gitk:2079
 msgid "Edit"
 msgstr "Editar"
 
-#: gitk:1821
+#: gitk:2084
 msgid "New view..."
 msgstr "Nueva vista..."
 
-#: gitk:1822
+#: gitk:2085
 msgid "Edit view..."
 msgstr "Modificar vista..."
 
-#: gitk:1823
+#: gitk:2086
 msgid "Delete view"
 msgstr "Eliminar vista"
 
-#: gitk:1825
+#: gitk:2088
 msgid "All files"
 msgstr "Todos los archivos"
 
-#: gitk:1820 gitk:3196
+#: gitk:2083 gitk:4050
 msgid "View"
 msgstr "Vista"
 
-#: gitk:1828 gitk:2487
+#: gitk:2093 gitk:2103 gitk:3009
 msgid "About gitk"
 msgstr "Acerca de gitk"
 
-#: gitk:1829
+#: gitk:2094 gitk:2108
 msgid "Key bindings"
 msgstr "Combinaciones de teclas"
 
-#: gitk:1827
+#: gitk:2092 gitk:2107
 msgid "Help"
 msgstr "Ayuda"
 
-#: gitk:1887
-msgid "SHA1 ID: "
-msgstr "SHA1 ID: "
+#: gitk:2185 gitk:8633
+msgid "SHA1 ID:"
+msgstr "SHA1 ID:"
 
-#: gitk:1918
+#: gitk:2229
 msgid "Row"
 msgstr ""
 
-#: gitk:1949
+#: gitk:2267
 msgid "Find"
 msgstr "Buscar"
 
-#: gitk:1950
-msgid "next"
-msgstr "<<"
-
-#: gitk:1951
-msgid "prev"
-msgstr ">>"
-
-#: gitk:1952
+#: gitk:2295
 msgid "commit"
 msgstr "revisión"
 
-#: gitk:1955 gitk:1957 gitk:3617 gitk:3640 gitk:3664 gitk:5550 gitk:5621
+#: gitk:2299 gitk:2301 gitk:4669 gitk:4692 gitk:4716 gitk:6736 gitk:6808
+#: gitk:6893
 msgid "containing:"
 msgstr "que contiene:"
 
-#: gitk:1958 gitk:2954 gitk:2959 gitk:3692
+#: gitk:2302 gitk:3522 gitk:3527 gitk:4745
 msgid "touching paths:"
 msgstr "que modifica la ruta:"
 
-#: gitk:1959 gitk:3697
+#: gitk:2303 gitk:4759
 msgid "adding/removing string:"
 msgstr "que añade/elimina cadena:"
 
-#: gitk:1968 gitk:1970
+#: gitk:2304 gitk:4761
+msgid "changing lines matching:"
+msgstr ""
+
+#: gitk:2313 gitk:2315 gitk:4748
 msgid "Exact"
 msgstr "Exacto"
 
-#: gitk:1970 gitk:3773 gitk:5518
+#: gitk:2315 gitk:4836 gitk:6704
 msgid "IgnCase"
 msgstr "NoMayús"
 
-#: gitk:1970 gitk:3666 gitk:3771 gitk:5514
+#: gitk:2315 gitk:4718 gitk:4834 gitk:6700
 msgid "Regexp"
 msgstr "Regex"
 
-#: gitk:1972 gitk:1973 gitk:3792 gitk:3822 gitk:3829 gitk:5641 gitk:5708
+#: gitk:2317 gitk:2318 gitk:4856 gitk:4886 gitk:4893 gitk:6829 gitk:6897
 msgid "All fields"
 msgstr "Todos los campos"
 
-#: gitk:1973 gitk:3790 gitk:3822 gitk:5580
+#: gitk:2318 gitk:4853 gitk:4886 gitk:6767
 msgid "Headline"
 msgstr "Título"
 
-#: gitk:1974 gitk:3790 gitk:5580 gitk:5708 gitk:6109
+#: gitk:2319 gitk:4853 gitk:6767 gitk:6897 gitk:7370
 msgid "Comments"
 msgstr "Comentarios"
 
-#: gitk:1974 gitk:3790 gitk:3794 gitk:3829 gitk:5580 gitk:6045 gitk:7285
-#: gitk:7300
+#: gitk:2319 gitk:4853 gitk:4858 gitk:4893 gitk:6767 gitk:7305 gitk:8811
+#: gitk:8826
 msgid "Author"
 msgstr "Autor"
 
-#: gitk:1974 gitk:3790 gitk:5580 gitk:6047
+#: gitk:2319 gitk:4853 gitk:6767 gitk:7307
 msgid "Committer"
 msgstr ""
 
-#: gitk:2003
+#: gitk:2350
 msgid "Search"
 msgstr "Buscar"
 
-#: gitk:2010
+#: gitk:2358
 msgid "Diff"
 msgstr "Diferencia"
 
-#: gitk:2012
+#: gitk:2360
 msgid "Old version"
 msgstr "Versión antigua"
 
-#: gitk:2014
+#: gitk:2362
 msgid "New version"
 msgstr "Versión nueva"
 
-#: gitk:2016
+#: gitk:2364
 msgid "Lines of context"
 msgstr "Líneas de contexto"
 
-#: gitk:2026
+#: gitk:2374
 msgid "Ignore space change"
 msgstr "Ignora cambios de espaciado"
 
-#: gitk:2084
+#: gitk:2378 gitk:2380 gitk:7940 gitk:8187
+msgid "Line diff"
+msgstr ""
+
+#: gitk:2445
 msgid "Patch"
 msgstr "Parche"
 
-#: gitk:2086
+#: gitk:2447
 msgid "Tree"
 msgstr "Árbol"
 
-#: gitk:2213 gitk:2226
+#: gitk:2616 gitk:2636
 msgid "Diff this -> selected"
 msgstr "Diferencia de esta -> seleccionada"
 
-#: gitk:2214 gitk:2227
+#: gitk:2617 gitk:2637
 msgid "Diff selected -> this"
 msgstr "Diferencia de seleccionada -> esta"
 
-#: gitk:2215 gitk:2228
+#: gitk:2618 gitk:2638
 msgid "Make patch"
 msgstr "Crear patch"
 
-#: gitk:2216 gitk:7494
+#: gitk:2619 gitk:9235
 msgid "Create tag"
 msgstr "Crear etiqueta"
 
-#: gitk:2217 gitk:7593
+#: gitk:2620 gitk:9352
 msgid "Write commit to file"
 msgstr "Escribir revisiones a archivo"
 
-#: gitk:2218 gitk:7647
+#: gitk:2621 gitk:9409
 msgid "Create new branch"
 msgstr "Crear nueva rama"
 
-#: gitk:2219
+#: gitk:2622
 msgid "Cherry-pick this commit"
 msgstr "Añadir esta revisión a la rama actual (cherry-pick)"
 
-#: gitk:2220
+#: gitk:2623
 msgid "Reset HEAD branch to here"
 msgstr "Traer la rama HEAD aquí"
 
-#: gitk:2234
+#: gitk:2624
+#, fuzzy
+msgid "Mark this commit"
+msgstr "Añadir esta revisión a la rama actual (cherry-pick)"
+
+#: gitk:2625
+msgid "Return to mark"
+msgstr ""
+
+#: gitk:2626
+msgid "Find descendant of this and mark"
+msgstr ""
+
+#: gitk:2627
+msgid "Compare with marked commit"
+msgstr ""
+
+#: gitk:2628 gitk:2639
+#, fuzzy
+msgid "Diff this -> marked commit"
+msgstr "Diferencia de esta -> seleccionada"
+
+#: gitk:2629 gitk:2640
+#, fuzzy
+msgid "Diff marked commit -> this"
+msgstr "Diferencia de seleccionada -> esta"
+
+#: gitk:2630
+#, fuzzy
+msgid "Revert this commit"
+msgstr "Añadir esta revisión a la rama actual (cherry-pick)"
+
+#: gitk:2646
 msgid "Check out this branch"
 msgstr "Cambiar a esta rama"
 
-#: gitk:2235
+#: gitk:2647
 msgid "Remove this branch"
 msgstr "Eliminar esta rama"
 
-#: gitk:2242
+#: gitk:2654
 msgid "Highlight this too"
 msgstr "Seleccionar también"
 
-#: gitk:2243
+#: gitk:2655
 msgid "Highlight this only"
 msgstr "Seleccionar sólo"
 
-#: gitk:2245
+#: gitk:2656
+msgid "External diff"
+msgstr ""
+
+#: gitk:2657
 msgid "Blame parent commit"
 msgstr ""
 
-#: gitk:2488
+#: gitk:2664
+msgid "Show origin of this line"
+msgstr ""
+
+#: gitk:2665
+msgid "Run git gui blame on this line"
+msgstr ""
+
+#: gitk:3011
+#, fuzzy
 msgid ""
 "\n"
 "Gitk - a commit viewer for git\n"
 "\n"
-"Copyright \\u00a9 2005-2010 Paul Mackerras\n"
+"Copyright © 2005-2014 Paul Mackerras\n"
 "\n"
 "Use and redistribute under the terms of the GNU General Public License"
 msgstr ""
 "\n"
 "Gitk - un visualizador de revisiones para git\n"
 "\n"
 "Copyright \\u00a9 2005-2010 Paul Mackerras\n"
 "\n"
 "Uso y redistribución permitidos según los términos de la Licencia Pública "
 "General de GNU (GNU GPL)"
 
-#: gitk:2496 gitk:2557 gitk:7943
+#: gitk:3019 gitk:3085 gitk:9836
 msgid "Close"
 msgstr "Cerrar"
 
-#: gitk:2515
+#: gitk:3040
 msgid "Gitk key bindings"
 msgstr "Combinaciones de tecla de Gitk"
 
-#: gitk:2517
+#: gitk:3043
 msgid "Gitk key bindings:"
 msgstr "Combinaciones de tecla de Gitk:"
 
-#: gitk:2519
+#: gitk:3045
 #, tcl-format
 msgid "<%s-Q>\t\tQuit"
 msgstr "<%s-Q>\t\tSalir"
 
-#: gitk:2520
+#: gitk:3046
+#, fuzzy, tcl-format
+msgid "<%s-W>\t\tClose window"
+msgstr "<%s-F>\t\tBuscar"
+
+#: gitk:3047
 msgid "<Home>\t\tMove to first commit"
 msgstr "<Home>\t\tIr a la primera revisión"
 
-#: gitk:2521
+#: gitk:3048
 msgid "<End>\t\tMove to last commit"
 msgstr "<End>\t\tIr a la última revisión"
 
-#: gitk:2522
-msgid "<Up>, p, i\tMove up one commit"
+#: gitk:3049
+#, fuzzy
+msgid "<Up>, p, k\tMove up one commit"
 msgstr "<Up>, p, i\tSubir una revisión"
 
-#: gitk:2523
-msgid "<Down>, n, k\tMove down one commit"
+#: gitk:3050
+#, fuzzy
+msgid "<Down>, n, j\tMove down one commit"
 msgstr "<Down>, n, k\tBajar una revisión"
 
-#: gitk:2524
-msgid "<Left>, z, j\tGo back in history list"
+#: gitk:3051
+#, fuzzy
+msgid "<Left>, z, h\tGo back in history list"
 msgstr "<Left>, z, j\tRetroceder en la historia"
 
-#: gitk:2525
+#: gitk:3052
 msgid "<Right>, x, l\tGo forward in history list"
 msgstr "<Right>, x, l\tAvanzar en la historia"
 
-#: gitk:2526
+#: gitk:3053
+#, tcl-format
+msgid "<%s-n>\tGo to n-th parent of current commit in history list"
+msgstr ""
+
+#: gitk:3054
 msgid "<PageUp>\tMove up one page in commit list"
 msgstr "<PageUp>\tSubir una página en la lista de revisiones"
 
-#: gitk:2527
+#: gitk:3055
 msgid "<PageDown>\tMove down one page in commit list"
 msgstr "<PageDown>\tBajar una página en la lista de revisiones"
 
-#: gitk:2528
+#: gitk:3056
 #, tcl-format
 msgid "<%s-Home>\tScroll to top of commit list"
 msgstr "<%s-Home>\tDesplazarse al inicio de la lista de revisiones"
 
-#: gitk:2529
+#: gitk:3057
 #, tcl-format
 msgid "<%s-End>\tScroll to bottom of commit list"
 msgstr "<%s-End>\tDesplazarse al final de la lista de revisiones"
 
-#: gitk:2530
+#: gitk:3058
 #, tcl-format
 msgid "<%s-Up>\tScroll commit list up one line"
 msgstr "<%s-Up>\tDesplazar una línea hacia arriba la lista de revisiones"
 
-#: gitk:2531
+#: gitk:3059
 #, tcl-format
 msgid "<%s-Down>\tScroll commit list down one line"
 msgstr "<%s-Down>\tDesplazar una línea hacia abajo la lista de revisiones"
 
-#: gitk:2532
+#: gitk:3060
 #, tcl-format
 msgid "<%s-PageUp>\tScroll commit list up one page"
 msgstr "<%s-PageUp>\tDesplazar una página hacia arriba la lista de revisiones"
 
-#: gitk:2533
+#: gitk:3061
 #, tcl-format
 msgid "<%s-PageDown>\tScroll commit list down one page"
 msgstr "<%s-PageDown>\tDesplazar una página hacia abajo la lista de revisiones"
 
-#: gitk:2534
+#: gitk:3062
 msgid "<Shift-Up>\tFind backwards (upwards, later commits)"
 msgstr "<Shift-Up>\tBuscar hacia atrás (arriba, revisiones siguientes)"
 
-#: gitk:2535
+#: gitk:3063
 msgid "<Shift-Down>\tFind forwards (downwards, earlier commits)"
 msgstr "<Shift-Down>\tBuscar hacia adelante (abajo, revisiones anteriores)"
 
-#: gitk:2536
+#: gitk:3064
 msgid "<Delete>, b\tScroll diff view up one page"
 msgstr "<Delete>, b\tDesplaza hacia arriba una página la vista de diferencias"
 
-#: gitk:2537
+#: gitk:3065
 msgid "<Backspace>\tScroll diff view up one page"
 msgstr "<Backspace>\tDesplaza hacia arriba una página la vista de diferencias"
 
-#: gitk:2538
+#: gitk:3066
 msgid "<Space>\t\tScroll diff view down one page"
 msgstr "<Space>\t\tDesplaza hacia abajo una página la vista de diferencias"
 
-#: gitk:2539
+#: gitk:3067
 msgid "u\t\tScroll diff view up 18 lines"
 msgstr "u\t\tDesplaza hacia arriba 18 líneas la vista de diferencias"
 
-#: gitk:2540
+#: gitk:3068
 msgid "d\t\tScroll diff view down 18 lines"
 msgstr "d\t\tDesplaza hacia abajo 18 líneas la vista de diferencias"
 
-#: gitk:2541
+#: gitk:3069
 #, tcl-format
 msgid "<%s-F>\t\tFind"
 msgstr "<%s-F>\t\tBuscar"
 
-#: gitk:2542
+#: gitk:3070
 #, tcl-format
 msgid "<%s-G>\t\tMove to next find hit"
 msgstr "<%s-G>\t\tBuscar el siguiente"
 
-#: gitk:2543
+#: gitk:3071
 msgid "<Return>\tMove to next find hit"
 msgstr "<Return>\tBuscar el siguiente"
 
-#: gitk:2544
-msgid "/\t\tMove to next find hit, or redo find"
-msgstr "/\t\tBuscar el siguiente, o reiniciar la búsqueda"
+#: gitk:3072
+msgid "/\t\tFocus the search box"
+msgstr ""
 
-#: gitk:2545
+#: gitk:3073
 msgid "?\t\tMove to previous find hit"
 msgstr "?\t\tBuscar el anterior"
 
-#: gitk:2546
+#: gitk:3074
 msgid "f\t\tScroll diff view to next file"
 msgstr "f\t\tDesplazar la vista de diferencias al archivo siguiente"
 
-#: gitk:2547
+#: gitk:3075
 #, tcl-format
 msgid "<%s-S>\t\tSearch for next hit in diff view"
 msgstr "<%s-S>\t\tBuscar siguiente en la vista de diferencias"
 
-#: gitk:2548
+#: gitk:3076
 #, tcl-format
 msgid "<%s-R>\t\tSearch for previous hit in diff view"
 msgstr "<%s-R>\t\tBuscar anterior en la vista de diferencias"
 
-#: gitk:2549
+#: gitk:3077
 #, tcl-format
 msgid "<%s-KP+>\tIncrease font size"
 msgstr "<%s-KP+>\tAumentar tamaño del texto"
 
-#: gitk:2550
+#: gitk:3078
 #, tcl-format
 msgid "<%s-plus>\tIncrease font size"
 msgstr "<%s-plus>\tAumentar tamaño del texto"
 
-#: gitk:2551
+#: gitk:3079
 #, tcl-format
 msgid "<%s-KP->\tDecrease font size"
 msgstr "<%s-KP->\tDisminuir tamaño del texto"
 
-#: gitk:2552
+#: gitk:3080
 #, tcl-format
 msgid "<%s-minus>\tDecrease font size"
 msgstr "<%s-minus>\tDisminuir tamaño del texto"
 
-#: gitk:2553
+#: gitk:3081
 msgid "<F5>\t\tUpdate"
 msgstr "<F5>\t\tActualizar"
 
-#: gitk:3200
+#: gitk:3546 gitk:3555
+#, fuzzy, tcl-format
+msgid "Error creating temporary directory %s:"
+msgstr "Error en la creación del parche:"
+
+#: gitk:3568
+#, fuzzy, tcl-format
+msgid "Error getting \"%s\" from %s:"
+msgstr "Error al leer las diferencias de fusión:"
+
+#: gitk:3631
+#, fuzzy
+msgid "command failed:"
+msgstr "Línea de comandos"
+
+#: gitk:3780
+#, fuzzy
+msgid "No such commit"
+msgstr "No se han guardado cambios"
+
+#: gitk:3794
+msgid "git gui blame: command failed:"
+msgstr ""
+
+#: gitk:3825
+#, tcl-format
+msgid "Couldn't read merge head: %s"
+msgstr ""
+
+#: gitk:3833
+#, fuzzy, tcl-format
+msgid "Error reading index: %s"
+msgstr "Error al crear la etiqueta:"
+
+#: gitk:3858
+#, tcl-format
+msgid "Couldn't start git blame: %s"
+msgstr ""
+
+#: gitk:3861 gitk:6735
+msgid "Searching"
+msgstr "Buscando"
+
+#: gitk:3893
+#, fuzzy, tcl-format
+msgid "Error running git blame: %s"
+msgstr "Error al crear la etiqueta:"
+
+#: gitk:3921
+#, tcl-format
+msgid "That line comes from commit %s,  which is not in this view"
+msgstr ""
+
+#: gitk:3935
+#, fuzzy
+msgid "External diff viewer failed:"
+msgstr "f\t\tDesplazar la vista de diferencias al archivo siguiente"
+
+#: gitk:4053
 msgid "Gitk view definition"
 msgstr "Definición de vistas de Gitk"
 
-#: gitk:3225
-msgid "Name"
-msgstr "Nombre"
-
-#: gitk:3228
+#: gitk:4057
 msgid "Remember this view"
 msgstr "Recordar esta vista"
 
-#: gitk:3232
-msgid "Commits to include (arguments to git log):"
+#: gitk:4058
+msgid "References (space separated list):"
+msgstr ""
+
+#: gitk:4059
+msgid "Branches & tags:"
+msgstr ""
+
+#: gitk:4060
+#, fuzzy
+msgid "All refs"
+msgstr "Todos los archivos"
+
+#: gitk:4061
+msgid "All (local) branches"
+msgstr ""
+
+#: gitk:4062
+msgid "All tags"
+msgstr ""
+
+#: gitk:4063
+msgid "All remote-tracking branches"
+msgstr ""
+
+#: gitk:4064
+msgid "Commit Info (regular expressions):"
+msgstr ""
+
+#: gitk:4065
+#, fuzzy
+msgid "Author:"
+msgstr "Autor"
+
+#: gitk:4066
+#, fuzzy
+msgid "Committer:"
+msgstr "revisión"
+
+#: gitk:4067
+msgid "Commit Message:"
+msgstr ""
+
+#: gitk:4068
+msgid "Matches all Commit Info criteria"
+msgstr ""
+
+#: gitk:4069
+msgid "Matches none Commit Info criteria"
+msgstr ""
+
+#: gitk:4070
+msgid "Changes to Files:"
+msgstr ""
+
+#: gitk:4071
+msgid "Fixed String"
+msgstr ""
+
+#: gitk:4072
+msgid "Regular Expression"
+msgstr ""
+
+#: gitk:4073
+#, fuzzy
+msgid "Search string:"
+msgstr "Buscando"
+
+#: gitk:4074
+msgid ""
+"Commit Dates (\"2 weeks ago\", \"2009-03-17 15:27:38\", \"March 17, 2009 "
+"15:27:38\"):"
+msgstr ""
+
+#: gitk:4075
+msgid "Since:"
+msgstr ""
+
+#: gitk:4076
+msgid "Until:"
+msgstr ""
+
+#: gitk:4077
+msgid "Limit and/or skip a number of revisions (positive integer):"
+msgstr ""
+
+#: gitk:4078
+msgid "Number to show:"
+msgstr ""
+
+#: gitk:4079
+msgid "Number to skip:"
+msgstr ""
+
+#: gitk:4080
+msgid "Miscellaneous options:"
+msgstr ""
+
+#: gitk:4081
+msgid "Strictly sort by date"
+msgstr ""
+
+#: gitk:4082
+msgid "Mark branch sides"
+msgstr ""
+
+#: gitk:4083
+#, fuzzy
+msgid "Limit to first parent"
+msgstr "Limitar las diferencias a las rutas seleccionadas"
+
+#: gitk:4084
+msgid "Simple history"
+msgstr ""
+
+#: gitk:4085
+#, fuzzy
+msgid "Additional arguments to git log:"
 msgstr "Revisiones a incluir (argumentos a git log):"
 
-#: gitk:3239
+#: gitk:4086
+msgid "Enter files and directories to include, one per line:"
+msgstr "Introducir archivos y directorios a incluir, uno por línea:"
+
+#: gitk:4087
 msgid "Command to generate more commits to include:"
 msgstr "Comando que genera más revisiones a incluir:"
 
-#: gitk:3246
-msgid "Enter files and directories to include, one per line:"
-msgstr "Introducir archivos y directorios a incluir, uno por línea:"
+#: gitk:4211
+msgid "Gitk: edit view"
+msgstr ""
+
+#: gitk:4219
+msgid "-- criteria for selecting revisions"
+msgstr ""
+
+#: gitk:4224
+#, fuzzy
+msgid "View Name"
+msgstr "Vista"
+
+#: gitk:4299
+msgid "Apply (F5)"
+msgstr ""
 
-#: gitk:3293
+#: gitk:4337
 msgid "Error in commit selection arguments:"
 msgstr "Error en los argumentos de selección de las revisiones:"
 
-#: gitk:3347 gitk:3399 gitk:3842 gitk:3856 gitk:5060 gitk:10141 gitk:10142
+#: gitk:4392 gitk:4445 gitk:4906 gitk:4920 gitk:6190 gitk:12346 gitk:12347
 msgid "None"
 msgstr "Ninguno"
 
-#: gitk:3790 gitk:5580 gitk:7287 gitk:7302
-msgid "Date"
-msgstr "Fecha"
-
-#: gitk:3790 gitk:5580
-msgid "CDate"
-msgstr "Fecha de creación"
-
-#: gitk:3939 gitk:3944
+#: gitk:5003 gitk:5008
 msgid "Descendant"
 msgstr "Descendiente"
 
-#: gitk:3940
+#: gitk:5004
 msgid "Not descendant"
 msgstr "No descendiente"
 
-#: gitk:3947 gitk:3952
+#: gitk:5011 gitk:5016
 msgid "Ancestor"
 msgstr "Antepasado"
 
-#: gitk:3948
+#: gitk:5012
 msgid "Not ancestor"
 msgstr "No antepasado"
 
-#: gitk:4187
+#: gitk:5306
 msgid "Local changes checked in to index but not committed"
 msgstr "Cambios locales añadidos al índice pero sin completar revisión"
 
-#: gitk:4220
+#: gitk:5342
 msgid "Local uncommitted changes, not checked in to index"
 msgstr "Cambios locales sin añadir al índice"
 
-#: gitk:5549
-msgid "Searching"
-msgstr "Buscando"
+#: gitk:7115
+msgid "and many more"
+msgstr ""
+
+#: gitk:7118
+msgid "many"
+msgstr ""
 
-#: gitk:6049
+#: gitk:7309
 msgid "Tags:"
 msgstr "Etiquetas:"
 
-#: gitk:6066 gitk:6072 gitk:7280
+#: gitk:7326 gitk:7332 gitk:8806
 msgid "Parent"
 msgstr "Padre"
 
-#: gitk:6077
+#: gitk:7337
 msgid "Child"
 msgstr "Hija"
 
-#: gitk:6086
+#: gitk:7346
 msgid "Branch"
 msgstr "Rama"
 
-#: gitk:6089
+#: gitk:7349
 msgid "Follows"
 msgstr "Sigue-a"
 
-#: gitk:6092
+#: gitk:7352
 msgid "Precedes"
 msgstr "Precede-a"
 
-#: gitk:6378
-msgid "Error getting merge diffs:"
+#: gitk:7947
+#, fuzzy, tcl-format
+msgid "Error getting diffs: %s"
 msgstr "Error al leer las diferencias de fusión:"
 
-#: gitk:7113
+#: gitk:8631
 msgid "Goto:"
 msgstr "Ir a:"
 
-#: gitk:7115
-msgid "SHA1 ID:"
-msgstr "SHA1 ID:"
-
-#: gitk:7134
+#: gitk:8652
 #, tcl-format
 msgid "Short SHA1 id %s is ambiguous"
 msgstr "La id SHA1 abreviada %s es ambigua"
 
-#: gitk:7146
+#: gitk:8659
+#, fuzzy, tcl-format
+msgid "Revision %s is not known"
+msgstr "La id SHA1 %s es desconocida"
+
+#: gitk:8669
 #, tcl-format
 msgid "SHA1 id %s is not known"
 msgstr "La id SHA1 %s es desconocida"
 
-#: gitk:7148
+#: gitk:8671
 #, tcl-format
-msgid "Tag/Head %s is not known"
-msgstr "La etiqueta/rama %s es deconocida"
+msgid "Revision %s is not in the current view"
+msgstr ""
 
-#: gitk:7290
+#: gitk:8813 gitk:8828
+msgid "Date"
+msgstr "Fecha"
+
+#: gitk:8816
 msgid "Children"
 msgstr "Hijas"
 
-#: gitk:7347
+#: gitk:8879
 #, tcl-format
 msgid "Reset %s branch to here"
 msgstr "Poner la rama %s en esta revisión"
 
-#: gitk:7349
+#: gitk:8881
 msgid "Detached head: can't reset"
 msgstr ""
 
-#: gitk:7381
+#: gitk:8986 gitk:8992
+msgid "Skipping merge commit "
+msgstr ""
+
+#: gitk:9001 gitk:9006
+#, fuzzy
+msgid "Error getting patch ID for "
+msgstr "Error en la creación del parche:"
+
+#: gitk:9002 gitk:9007
+msgid " - stopping\n"
+msgstr ""
+
+#: gitk:9012 gitk:9015 gitk:9023 gitk:9037 gitk:9046
+#, fuzzy
+msgid "Commit "
+msgstr "revisión"
+
+#: gitk:9016
+msgid ""
+" is the same patch as\n"
+"       "
+msgstr ""
+
+#: gitk:9024
+msgid ""
+" differs from\n"
+"       "
+msgstr ""
+
+#: gitk:9026
+msgid ""
+"Diff of commits:\n"
+"\n"
+msgstr ""
+
+#: gitk:9038 gitk:9047
+#, tcl-format
+msgid " has %s children - stopping\n"
+msgstr ""
+
+#: gitk:9066
+#, fuzzy, tcl-format
+msgid "Error writing commit to file: %s"
+msgstr "Error al escribir revisión:"
+
+#: gitk:9072
+#, fuzzy, tcl-format
+msgid "Error diffing commits: %s"
+msgstr "Error al escribir revisión:"
+
+#: gitk:9118
 msgid "Top"
 msgstr "Origen"
 
-#: gitk:7382
+#: gitk:9119
 msgid "From"
 msgstr "De"
 
-#: gitk:7387
+#: gitk:9124
 msgid "To"
 msgstr "A"
 
-#: gitk:7410
+#: gitk:9148
 msgid "Generate patch"
 msgstr "Generar parche"
 
-#: gitk:7412
+#: gitk:9150
 msgid "From:"
 msgstr "De:"
 
-#: gitk:7421
+#: gitk:9159
 msgid "To:"
 msgstr "Para:"
 
-#: gitk:7430
+#: gitk:9168
 msgid "Reverse"
 msgstr "Invertir"
 
-#: gitk:7432 gitk:7607
+#: gitk:9170 gitk:9366
 msgid "Output file:"
 msgstr "Escribir a archivo:"
 
-#: gitk:7438
+#: gitk:9176
 msgid "Generate"
 msgstr "Generar"
 
-#: gitk:7474
+#: gitk:9214
 msgid "Error creating patch:"
 msgstr "Error en la creación del parche:"
 
-#: gitk:7496 gitk:7595 gitk:7649
+#: gitk:9237 gitk:9354 gitk:9411
 msgid "ID:"
 msgstr "ID:"
 
-#: gitk:7505
+#: gitk:9246
 msgid "Tag name:"
 msgstr "Nombre de etiqueta:"
 
-#: gitk:7509 gitk:7659
+#: gitk:9249
+msgid "Tag message is optional"
+msgstr ""
+
+#: gitk:9251
+#, fuzzy
+msgid "Tag message:"
+msgstr "Nombre de etiqueta:"
+
+#: gitk:9255 gitk:9420
 msgid "Create"
 msgstr "Crear"
 
-#: gitk:7524
+#: gitk:9273
 msgid "No tag name specified"
 msgstr "No se ha especificado etiqueta"
 
-#: gitk:7528
+#: gitk:9277
 #, tcl-format
 msgid "Tag \"%s\" already exists"
 msgstr "La etiqueta \"%s\" ya existe"
 
-#: gitk:7534
+#: gitk:9287
 msgid "Error creating tag:"
 msgstr "Error al crear la etiqueta:"
 
-#: gitk:7604
+#: gitk:9363
 msgid "Command:"
 msgstr "Comando:"
 
-#: gitk:7612
+#: gitk:9371
 msgid "Write"
 msgstr "Escribir"
 
-#: gitk:7628
+#: gitk:9389
 msgid "Error writing commit:"
 msgstr "Error al escribir revisión:"
 
-#: gitk:7654
+#: gitk:9416
 msgid "Name:"
 msgstr "Nombre:"
 
-#: gitk:7674
+#: gitk:9439
 msgid "Please specify a name for the new branch"
 msgstr "Especifique un nombre para la nueva rama"
 
-#: gitk:7703
+#: gitk:9444
+#, fuzzy, tcl-format
+msgid "Branch '%s' already exists. Overwrite?"
+msgstr "La etiqueta \"%s\" ya existe"
+
+#: gitk:9511
 #, tcl-format
 msgid "Commit %s is already included in branch %s -- really re-apply it?"
 msgstr "La revisión %s ya está incluida en la rama %s -- ¿Volver a aplicarla?"
 
-#: gitk:7708
+#: gitk:9516
 msgid "Cherry-picking"
 msgstr "Eligiendo revisiones (cherry-picking)"
 
-#: gitk:7720
+#: gitk:9525
+#, tcl-format
+msgid ""
+"Cherry-pick failed because of local changes to file '%s'.\n"
+"Please commit, reset or stash your changes and try again."
+msgstr ""
+
+#: gitk:9531
+msgid ""
+"Cherry-pick failed because of merge conflict.\n"
+"Do you wish to run git citool to resolve it?"
+msgstr ""
+
+#: gitk:9547 gitk:9605
 msgid "No changes committed"
 msgstr "No se han guardado cambios"
 
-#: gitk:7745
+#: gitk:9574
+#, fuzzy, tcl-format
+msgid "Commit %s is not included in branch %s -- really revert it?"
+msgstr "La revisión %s ya está incluida en la rama %s -- ¿Volver a aplicarla?"
+
+#: gitk:9579
+#, fuzzy
+msgid "Reverting"
+msgstr "Reponiendo"
+
+#: gitk:9587
+#, tcl-format
+msgid ""
+"Revert failed because of local changes to the following files:%s Please "
+"commit, reset or stash  your changes and try again."
+msgstr ""
+
+#: gitk:9591
+msgid ""
+"Revert failed because of merge conflict.\n"
+" Do you wish to run git citool to resolve it?"
+msgstr ""
+
+#: gitk:9634
 msgid "Confirm reset"
 msgstr "Confirmar git reset"
 
-#: gitk:7747
+#: gitk:9636
 #, tcl-format
 msgid "Reset branch %s to %s?"
 msgstr "¿Reponer la rama %s a %s?"
 
-#: gitk:7751
+#: gitk:9638
 msgid "Reset type:"
 msgstr "Tipo de reposición:"
 
-#: gitk:7755
+#: gitk:9641
 msgid "Soft: Leave working tree and index untouched"
 msgstr "Suave: No altera la copia de trabajo ni el índice"
 
-#: gitk:7758
+#: gitk:9644
 msgid "Mixed: Leave working tree untouched, reset index"
 msgstr "Mixta: Actualiza el índice, no altera la copia de trabajo"
 
-#: gitk:7761
+#: gitk:9647
 msgid ""
 "Hard: Reset working tree and index\n"
 "(discard ALL local changes)"
 msgstr ""
 "Dura: Actualiza el índice y la copia de trabajo\n"
 "(abandona TODAS las modificaciones locales)"
 
-#: gitk:7777
+#: gitk:9664
 msgid "Resetting"
 msgstr "Reponiendo"
 
-#: gitk:7834
+#: gitk:9724
 msgid "Checking out"
 msgstr "Creando copia de trabajo"
 
-#: gitk:7885
+#: gitk:9777
 msgid "Cannot delete the currently checked-out branch"
 msgstr "No se puede borrar la rama actual"
 
-#: gitk:7891
+#: gitk:9783
 #, tcl-format
 msgid ""
 "The commits on branch %s aren't on any other branch.\n"
 "Really delete branch %s?"
 msgstr ""
 "Las revisiones de la rama %s no están presentes en otras ramas.\n"
 "¿Borrar la rama %s?"
 
-#: gitk:7922
+#: gitk:9814
 #, tcl-format
 msgid "Tags and heads: %s"
 msgstr "Etiquetas y ramas: %s"
 
-#: gitk:7936
+#: gitk:9829
 msgid "Filter"
 msgstr "Filtro"
 
-#: gitk:8230
+#: gitk:10125
 msgid ""
 "Error reading commit topology information; branch and preceding/following "
 "tag information will be incomplete."
 msgstr ""
 "Error al leer la topología de revisiones: la información sobre las ramas y "
 "etiquetas precedentes y siguientes será incompleta."
 
-#: gitk:9216
+#: gitk:11102
 msgid "Tag"
 msgstr "Etiqueta"
 
-#: gitk:9216
+#: gitk:11106
 msgid "Id"
 msgstr "Id"
 
-#: gitk:9262
+#: gitk:11189
 msgid "Gitk font chooser"
 msgstr "Selector de tipografías gitk"
 
-#: gitk:9279
+#: gitk:11206
 msgid "B"
 msgstr "B"
 
-#: gitk:9282
+#: gitk:11209
 msgid "I"
 msgstr "I"
 
-#: gitk:9375
-msgid "Gitk preferences"
-msgstr "Preferencias de gitk"
-
-#: gitk:9376
+#: gitk:11327
 msgid "Commit list display options"
 msgstr "Opciones de visualización de la lista de revisiones"
 
-#: gitk:9379
+#: gitk:11330
 msgid "Maximum graph width (lines)"
 msgstr "Ancho máximo del gráfico (en líneas)"
 
-#: gitk:9383
-#, tcl-format
+#: gitk:11334
+#, no-tcl-format
 msgid "Maximum graph width (% of pane)"
 msgstr "Ancho máximo del gráfico (en % del panel)"
 
-#: gitk:9388
+#: gitk:11337
 msgid "Show local changes"
 msgstr "Mostrar cambios locales"
 
-#: gitk:9393
-msgid "Auto-select SHA1"
+#: gitk:11340
+#, fuzzy
+msgid "Auto-select SHA1 (length)"
 msgstr "Seleccionar automáticamente SHA1 hash"
 
-#: gitk:9398
+#: gitk:11344
+msgid "Hide remote refs"
+msgstr ""
+
+#: gitk:11348
 msgid "Diff display options"
 msgstr "Opciones de visualización de diferencias"
 
-#: gitk:9400
+#: gitk:11350
 msgid "Tab spacing"
 msgstr "Espaciado de tabulador"
 
-#: gitk:9404
-msgid "Display nearby tags"
+#: gitk:11353
+#, fuzzy
+msgid "Display nearby tags/heads"
 msgstr "Mostrar etiquetas cercanas"
 
-#: gitk:9409
+#: gitk:11356
+msgid "Maximum # tags/heads to show"
+msgstr ""
+
+#: gitk:11359
 msgid "Limit diffs to listed paths"
 msgstr "Limitar las diferencias a las rutas seleccionadas"
 
-#: gitk:9414
+#: gitk:11362
 msgid "Support per-file encodings"
 msgstr ""
 
-#: gitk:9421
+#: gitk:11368 gitk:11515
 msgid "External diff tool"
 msgstr ""
 
-#: gitk:9423
+#: gitk:11369
 msgid "Choose..."
 msgstr ""
 
-#: gitk:9428
+#: gitk:11374
+#, fuzzy
+msgid "General options"
+msgstr "Generar parche"
+
+#: gitk:11377
+msgid "Use themed widgets"
+msgstr ""
+
+#: gitk:11379
+msgid "(change requires restart)"
+msgstr ""
+
+#: gitk:11381
+msgid "(currently unavailable)"
+msgstr ""
+
+#: gitk:11392
 msgid "Colors: press to choose"
 msgstr "Colores: pulse para seleccionar"
 
-#: gitk:9431
+#: gitk:11395
+msgid "Interface"
+msgstr ""
+
+#: gitk:11396
+#, fuzzy
+msgid "interface"
+msgstr "Tipografía para interfaz de usuario"
+
+#: gitk:11399
 msgid "Background"
 msgstr "Fondo"
 
-#: gitk:9435
+#: gitk:11400 gitk:11430
+#, fuzzy
+msgid "background"
+msgstr "Fondo"
+
+#: gitk:11403
 msgid "Foreground"
 msgstr "Primer plano"
 
-#: gitk:9439
+#: gitk:11404
+#, fuzzy
+msgid "foreground"
+msgstr "Primer plano"
+
+#: gitk:11407
 msgid "Diff: old lines"
 msgstr "Diff: líneas viejas"
 
-#: gitk:9444
+#: gitk:11408
+#, fuzzy
+msgid "diff old lines"
+msgstr "Diff: líneas viejas"
+
+#: gitk:11412
 msgid "Diff: new lines"
 msgstr "Diff: líneas nuevas"
 
-#: gitk:9449
+#: gitk:11413
+#, fuzzy
+msgid "diff new lines"
+msgstr "Diff: líneas nuevas"
+
+#: gitk:11417
 msgid "Diff: hunk header"
 msgstr "Diff: cabecera de fragmento"
 
-#: gitk:9455
+#: gitk:11419
+#, fuzzy
+msgid "diff hunk header"
+msgstr "Diff: cabecera de fragmento"
+
+#: gitk:11423
+msgid "Marked line bg"
+msgstr ""
+
+#: gitk:11425
+msgid "marked line background"
+msgstr ""
+
+#: gitk:11429
 msgid "Select bg"
 msgstr "Color de fondo de la selección"
 
-#: gitk:9459
+#: gitk:11438
 msgid "Fonts: press to choose"
 msgstr "Tipografías: pulse para elegir"
 
-#: gitk:9461
+#: gitk:11440
 msgid "Main font"
 msgstr "Tipografía principal"
 
-#: gitk:9462
+#: gitk:11441
 msgid "Diff display font"
 msgstr "Tipografía para diferencias"
 
-#: gitk:9463
+#: gitk:11442
 msgid "User interface font"
 msgstr "Tipografía para interfaz de usuario"
 
-#: gitk:9488
+#: gitk:11464
+msgid "Gitk preferences"
+msgstr "Preferencias de gitk"
+
+#: gitk:11473
+#, fuzzy
+msgid "General"
+msgstr "Generar"
+
+#: gitk:11474
+msgid "Colors"
+msgstr ""
+
+#: gitk:11475
+msgid "Fonts"
+msgstr ""
+
+#: gitk:11525
 #, tcl-format
 msgid "Gitk: choose color for %s"
 msgstr "Gitk: elegir color para %s"
 
-#: gitk:9934
-msgid ""
-"Sorry, gitk cannot run with this version of Tcl/Tk.\n"
-" Gitk requires at least Tcl/Tk 8.4."
-msgstr ""
-"Esta versión de Tcl/Tk es demasiado antigua.\n"
-" Gitk requiere Tcl/Tk versión 8.4 o superior."
-
-#: gitk:10047
+#: gitk:12242
 msgid "Cannot find a git repository here."
 msgstr "No hay un repositorio git aquí."
 
-#: gitk:10051
-#, tcl-format
-msgid "Cannot find the git directory \"%s\"."
-msgstr "No hay directorio git \"%s\"."
-
-#: gitk:10098
+#: gitk:12289
 #, tcl-format
 msgid "Ambiguous argument '%s': both revision and filename"
 msgstr ""
 "Argumento ambiguo: '%s' es tanto una revisión como un nombre de archivo"
 
-#: gitk:10110
+#: gitk:12301
 msgid "Bad arguments to gitk:"
 msgstr "Argumentos incorrectos a Gitk:"
 
-#: gitk:10170
+#: gitk:12405
 msgid "Command line"
 msgstr "Línea de comandos"
+
+#~ msgid "SHA1 ID: "
+#~ msgstr "SHA1 ID: "
+
+#~ msgid "next"
+#~ msgstr "<<"
+
+#~ msgid "prev"
+#~ msgstr ">>"
+
+#~ msgid "/\t\tMove to next find hit, or redo find"
+#~ msgstr "/\t\tBuscar el siguiente, o reiniciar la búsqueda"
+
+#~ msgid "Name"
+#~ msgstr "Nombre"
+
+#~ msgid "CDate"
+#~ msgstr "Fecha de creación"
+
+#~ msgid "Tag/Head %s is not known"
+#~ msgstr "La etiqueta/rama %s es deconocida"
+
+#~ msgid ""
+#~ "Sorry, gitk cannot run with this version of Tcl/Tk.\n"
+#~ " Gitk requires at least Tcl/Tk 8.4."
+#~ msgstr ""
+#~ "Esta versión de Tcl/Tk es demasiado antigua.\n"
+#~ " Gitk requiere Tcl/Tk versión 8.4 o superior."
+
+#~ msgid "Cannot find the git directory \"%s\"."
+#~ msgstr "No hay directorio git \"%s\"."
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/fr.msg /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/fr.msg
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/fr.msg	2017-10-10 12:31:59.110631528 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/fr.msg	2017-10-10 13:04:28.162560096 +0800
@@ -1,7 +1,7 @@
-set ::msgcat::header "Project-Id-Version: gitk\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2009-10-05 15:16+0200\nPO-Revision-Date: 2009-11-19 22:13+0100\nLast-Translator: Emmanuel Trillaud <etrillaud@gmail.com>\nLanguage-Team: git@vger.kernel.org\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\nX-Poedit-Language: French\nX-Poedit-Country: FRANCE\n"
+set ::msgcat::header "Project-Id-Version: gitk\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2015-03-15 14:37+1100\nPO-Revision-Date: 2009-11-19 22:13+0100\nLast-Translator: Emmanuel Trillaud <etrillaud@gmail.com>\nLanguage-Team: git@vger.kernel.org\nLanguage: \nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\nX-Poedit-Language: French\nX-Poedit-Country: FRANCE\n"
 ::msgcat::mcset fr "Couldn't get list of unmerged files:" "Impossible de r\u00e9cup\u00e9rer la liste des fichiers non fusionn\u00e9s :"
 ::msgcat::mcset fr "Error parsing revisions:" "Erreur lors du parcours des r\u00e9visions :"
 ::msgcat::mcset fr "Error executing --argscmd command:" "Erreur \u00e0 l'ex\u00e9cution de la commande --argscmd :"
 ::msgcat::mcset fr "No files selected: --merge specified but no files are unmerged." "Aucun fichier s\u00e9lectionn\u00e9 : --merge pr\u00e9cis\u00e9, mais tous les fichiers sont fusionn\u00e9s."
 ::msgcat::mcset fr "Error executing git log:" "Erreur \u00e0 l'ex\u00e9cution de git log :"
 ::msgcat::mcset fr "Reading" "Lecture en cours"
@@ -25,17 +25,15 @@
 ::msgcat::mcset fr "Delete view" "Supprimer la vue"
 ::msgcat::mcset fr "All files" "Tous les fichiers"
 ::msgcat::mcset fr "View" "Vue"
 ::msgcat::mcset fr "About gitk" "\u00c0 propos de gitk"
 ::msgcat::mcset fr "Key bindings" "Raccourcis clavier"
 ::msgcat::mcset fr "Help" "Aide"
-::msgcat::mcset fr "SHA1 ID: " "ID SHA1 :"
+::msgcat::mcset fr "SHA1 ID:" "Id SHA1 :"
 ::msgcat::mcset fr "Row" "Colonne"
 ::msgcat::mcset fr "Find" "Recherche"
-::msgcat::mcset fr "next" "suivant"
-::msgcat::mcset fr "prev" "pr\u00e9c\u00e9dent"
 ::msgcat::mcset fr "commit" "commit"
 ::msgcat::mcset fr "containing:" "contient :"
 ::msgcat::mcset fr "touching paths:" "chemins modifi\u00e9s :"
 ::msgcat::mcset fr "adding/removing string:" "ajoute/supprime la cha\u00eene :"
 ::msgcat::mcset fr "Exact" "Exact"
 ::msgcat::mcset fr "IgnCase" "Ignorer la casse"
@@ -70,22 +68,18 @@
 ::msgcat::mcset fr "Highlight this too" "Surligner \u00e9galement ceci"
 ::msgcat::mcset fr "Highlight this only" "Surligner seulement ceci"
 ::msgcat::mcset fr "External diff" "Diff externe"
 ::msgcat::mcset fr "Blame parent commit" "Bl\u00e2mer le commit parent"
 ::msgcat::mcset fr "Show origin of this line" "Montrer l'origine de cette ligne"
 ::msgcat::mcset fr "Run git gui blame on this line" "Ex\u00e9cuter git gui blame sur cette ligne"
-::msgcat::mcset fr "\nGitk - a commit viewer for git\n\nCopyright \\u00a9 2005-2010 Paul Mackerras\n\nUse and redistribute under the terms of the GNU General Public License" "\nGitk - visualisateur de commit pour git\n\nCopyright \\u00a9 2005-2010 Paul Mackerras\n\nUtilisation et redistribution soumises aux termes de la GNU General Public License"
 ::msgcat::mcset fr "Close" "Fermer"
 ::msgcat::mcset fr "Gitk key bindings" "Raccourcis clavier de Gitk"
 ::msgcat::mcset fr "Gitk key bindings:" "Raccourcis clavier de Gitk :"
 ::msgcat::mcset fr "<%s-Q>\u0009\u0009Quit" "<%s-Q>\u0009\u0009Quitter"
 ::msgcat::mcset fr "<Home>\u0009\u0009Move to first commit" "<D\u00e9but>\u0009\u0009Aller au premier commit"
 ::msgcat::mcset fr "<End>\u0009\u0009Move to last commit" "<Fin>\u0009\u0009Aller au dernier commit"
-::msgcat::mcset fr "<Up>, p, i\u0009Move up one commit" "<Haut>, p, i\u0009 Aller au commit suivant"
-::msgcat::mcset fr "<Down>, n, k\u0009Move down one commit" "<Bas>, n, k\u0009 Aller au commit pr\u00e9c\u00e9dent"
-::msgcat::mcset fr "<Left>, z, j\u0009Go back in history list" "<Gauche>, z, j\u0009Reculer dans l'historique"
 ::msgcat::mcset fr "<Right>, x, l\u0009Go forward in history list" "<Droite>, x, l\u0009Avancer dans l'historique"
 ::msgcat::mcset fr "<PageUp>\u0009Move up one page in commit list" "<PageUp>\u0009Monter d'une page dans la liste des commits"
 ::msgcat::mcset fr "<PageDown>\u0009Move down one page in commit list" "<PageDown>\u0009Descendre d'une page dans la liste des commits"
 ::msgcat::mcset fr "<%s-Home>\u0009Scroll to top of commit list" "<%s-D\u00e9but>\u0009Aller en haut de la liste des commits"
 ::msgcat::mcset fr "<%s-End>\u0009Scroll to bottom of commit list" "<%s-End>\u0009Aller en bas de la liste des commits"
 ::msgcat::mcset fr "<%s-Up>\u0009Scroll commit list up one line" "<%s-Up>\u0009Monter d'une ligne dans la liste des commits"
@@ -109,14 +103,14 @@
 ::msgcat::mcset fr "<%s-R>\u0009\u0009Search for previous hit in diff view" "<%s-R>\u0009\u0009Aller au r\u00e9sultat pr\u00e9c\u00e9dent dans la vue des diff"
 ::msgcat::mcset fr "<%s-KP+>\u0009Increase font size" "<%s-KP+>\u0009Augmenter la taille de la police"
 ::msgcat::mcset fr "<%s-plus>\u0009Increase font size" "<%s-plus>\u0009Augmenter la taille de la police"
 ::msgcat::mcset fr "<%s-KP->\u0009Decrease font size" "<%s-KP->\u0009Diminuer la taille de la police"
 ::msgcat::mcset fr "<%s-minus>\u0009Decrease font size" "<%s-minus>\u0009Diminuer la taille de la police"
 ::msgcat::mcset fr "<F5>\u0009\u0009Update" "<F5>\u0009\u0009Mise \u00e0 jour"
-::msgcat::mcset fr "Error getting \"%s\" from %s:" "Erreur en obtenant \"%s\" de %s:"
 ::msgcat::mcset fr "Error creating temporary directory %s:" "Erreur lors de la cr\u00e9ation du r\u00e9pertoire temporaire %s :"
+::msgcat::mcset fr "Error getting \"%s\" from %s:" "Erreur en obtenant \"%s\" de %s:"
 ::msgcat::mcset fr "command failed:" "\u00e9chec de la commande :"
 ::msgcat::mcset fr "No such commit" "Commit inexistant"
 ::msgcat::mcset fr "git gui blame: command failed:" "git gui blame : \u00e9chec de la commande :"
 ::msgcat::mcset fr "Couldn't read merge head: %s" "Impossible de lire le head de la fusion : %s"
 ::msgcat::mcset fr "Error reading index: %s" "Erreur \u00e0 la lecture de l'index : %s"
 ::msgcat::mcset fr "Couldn't start git blame: %s" "Impossible de d\u00e9marrer git blame : %s"
@@ -153,18 +147,15 @@
 ::msgcat::mcset fr "Simple history" "Historique simple"
 ::msgcat::mcset fr "Additional arguments to git log:" "Arguments suppl\u00e9mentaires de git log :"
 ::msgcat::mcset fr "Enter files and directories to include, one per line:" "Saisir les fichiers et r\u00e9pertoires \u00e0 inclure, un par ligne :"
 ::msgcat::mcset fr "Command to generate more commits to include:" "Commande pour g\u00e9n\u00e9rer plus de commits \u00e0 inclure :"
 ::msgcat::mcset fr "Gitk: edit view" "Gitk : \u00e9diter la vue"
 ::msgcat::mcset fr "-- criteria for selecting revisions" "-- crit\u00e8re pour la s\u00e9lection des r\u00e9visions"
-::msgcat::mcset fr "View Name:" "Nom de la vue :"
 ::msgcat::mcset fr "Apply (F5)" "Appliquer (F5)"
 ::msgcat::mcset fr "Error in commit selection arguments:" "Erreur dans les arguments de s\u00e9lection des commits :"
 ::msgcat::mcset fr "None" "Aucun"
-::msgcat::mcset fr "Date" "Date"
-::msgcat::mcset fr "CDate" "CDate"
 ::msgcat::mcset fr "Descendant" "Descendant"
 ::msgcat::mcset fr "Not descendant" "Pas un descendant"
 ::msgcat::mcset fr "Ancestor" "Anc\u00eatre"
 ::msgcat::mcset fr "Not ancestor" "Pas un anc\u00eatre"
 ::msgcat::mcset fr "Local changes checked in to index but not committed" "Modifications locales enregistr\u00e9es dans l'index mais non commit\u00e9es"
 ::msgcat::mcset fr "Local uncommitted changes, not checked in to index" "Modifications locales non enregistr\u00e9es dans l'index et non commit\u00e9es"
@@ -174,27 +165,26 @@
 ::msgcat::mcset fr "Child" "Enfant"
 ::msgcat::mcset fr "Branch" "Branche"
 ::msgcat::mcset fr "Follows" "Suit"
 ::msgcat::mcset fr "Precedes" "Pr\u00e9c\u00e8de"
 ::msgcat::mcset fr "Error getting diffs: %s" "Erreur lors de la r\u00e9cup\u00e9ration des diff : %s"
 ::msgcat::mcset fr "Goto:" "Aller \u00e0 :"
-::msgcat::mcset fr "SHA1 ID:" "Id SHA1 :"
 ::msgcat::mcset fr "Short SHA1 id %s is ambiguous" "Id SHA1 court %s est ambigu"
 ::msgcat::mcset fr "Revision %s is not known" "Id SHA1 %s est inconnu"
 ::msgcat::mcset fr "SHA1 id %s is not known" "Id SHA1 %s est inconnu"
 ::msgcat::mcset fr "Revision %s is not in the current view" "La r\u00e9vision %s n'est pas dans la vue courante"
+::msgcat::mcset fr "Date" "Date"
 ::msgcat::mcset fr "Children" "Enfants"
 ::msgcat::mcset fr "Reset %s branch to here" "R\u00e9initialiser la branche %s vers cet \u00e9tat"
 ::msgcat::mcset fr "Detached head: can't reset" "Head d\u00e9tach\u00e9 : impossible de r\u00e9initialiser"
 ::msgcat::mcset fr "Skipping merge commit " "\u00c9viter le commit de la fusion "
 ::msgcat::mcset fr "Error getting patch ID for " "Erreur \u00e0 l'obtention de l'ID du patch pour "
 ::msgcat::mcset fr " - stopping\n" " - arr\u00eat en cours\n"
 ::msgcat::mcset fr "Commit " "Commit "
 ::msgcat::mcset fr " is the same patch as\n       " "est le m\u00eame patch que \n       "
 ::msgcat::mcset fr " differs from\n       " " diff\u00e8re de\n       "
-::msgcat::mcset fr "- stopping\n" "- arr\u00eat en cours\n"
 ::msgcat::mcset fr " has %s children - stopping\n" "a %s enfants - arr\u00eat en cours\n"
 ::msgcat::mcset fr "Top" "Haut"
 ::msgcat::mcset fr "From" "De"
 ::msgcat::mcset fr "To" "\u00c0"
 ::msgcat::mcset fr "Generate patch" "G\u00e9n\u00e9rer le patch"
 ::msgcat::mcset fr "From:" "De :"
@@ -234,21 +224,18 @@
 ::msgcat::mcset fr "Error reading commit topology information; branch and preceding/following tag information will be incomplete." "Erreur \u00e0 la lecture des informations sur la topologie des commits, les informations sur les branches et les tags pr\u00e9c\u00e9dents/suivants seront incompl\u00e8tes."
 ::msgcat::mcset fr "Tag" "Tag"
 ::msgcat::mcset fr "Id" "Id"
 ::msgcat::mcset fr "Gitk font chooser" "S\u00e9lecteur de police de Gitk"
 ::msgcat::mcset fr "B" "B"
 ::msgcat::mcset fr "I" "I"
-::msgcat::mcset fr "Gitk preferences" "Pr\u00e9f\u00e9rences de Gitk"
 ::msgcat::mcset fr "Commit list display options" "Options d'affichage de la liste des commits"
 ::msgcat::mcset fr "Maximum graph width (lines)" "Longueur maximum du graphe (lignes)"
 ::msgcat::mcset fr "Show local changes" "Montrer les changements locaux"
-::msgcat::mcset fr "Auto-select SHA1" "S\u00e9lection auto. du SHA1"
+::msgcat::mcset fr "Hide remote refs" "Cacher les refs distantes"
 ::msgcat::mcset fr "Diff display options" "Options d'affichage des diff"
 ::msgcat::mcset fr "Tab spacing" "Taille des tabulations"
-::msgcat::mcset fr "Display nearby tags" "Afficher les tags les plus proches"
-::msgcat::mcset fr "Hide remote refs" "Cacher les refs distantes"
 ::msgcat::mcset fr "Limit diffs to listed paths" "Limiter les diff\u00e9rences aux chemins list\u00e9s"
 ::msgcat::mcset fr "Support per-file encodings" "Support pour un encodage des caract\u00e8res par fichier"
 ::msgcat::mcset fr "External diff tool" "Outil diff externe"
 ::msgcat::mcset fr "Choose..." "Choisir..."
 ::msgcat::mcset fr "Colors: press to choose" "Couleurs : cliquer pour choisir"
 ::msgcat::mcset fr "Background" "Arri\u00e8re-plan"
@@ -265,13 +252,12 @@
 ::msgcat::mcset fr "marked line background" "Arri\u00e8re-plan de la ligne marqu\u00e9e"
 ::msgcat::mcset fr "Select bg" "S\u00e9lectionner l'arri\u00e8re-plan"
 ::msgcat::mcset fr "Fonts: press to choose" "Polices : cliquer pour choisir"
 ::msgcat::mcset fr "Main font" "Police principale"
 ::msgcat::mcset fr "Diff display font" "Police d'affichage des diff"
 ::msgcat::mcset fr "User interface font" "Police de l'interface utilisateur"
+::msgcat::mcset fr "Gitk preferences" "Pr\u00e9f\u00e9rences de Gitk"
 ::msgcat::mcset fr "Gitk: choose color for %s" "Gitk : choisir la couleur de %s"
-::msgcat::mcset fr "Sorry, gitk cannot run with this version of Tcl/Tk.\n Gitk requires at least Tcl/Tk 8.4." "D\u00e9sol\u00e9, gitk ne peut \u00eatre ex\u00e9cut\u00e9 avec cette version de Tcl/Tk.\n Gitk requiert Tcl/Tk version 8.4 ou sup\u00e9rieur."
 ::msgcat::mcset fr "Cannot find a git repository here." "Impossible de trouver un d\u00e9p\u00f4t git ici."
-::msgcat::mcset fr "Cannot find the git directory \"%s\"." "Impossible de trouver le r\u00e9pertoire git \"%s\"."
 ::msgcat::mcset fr "Ambiguous argument '%s': both revision and filename" "Argument '%s' ambigu : \u00e0 la fois une r\u00e9vision et un nom de fichier"
 ::msgcat::mcset fr "Bad arguments to gitk:" "Arguments invalides pour gitk :"
 ::msgcat::mcset fr "Command line" "Ligne de commande"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/fr.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/fr.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/fr.po	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/fr.po	2015-05-01 03:12:02.000000000 +0800
@@ -5,1250 +5,1405 @@
 # Emmanuel Trillaud <etrillaud@gmail.com>
 #
 msgid ""
 msgstr ""
 "Project-Id-Version: gitk\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-10-05 15:16+0200\n"
+"POT-Creation-Date: 2015-03-15 14:37+1100\n"
 "PO-Revision-Date: 2009-11-19 22:13+0100\n"
 "Last-Translator: Emmanuel Trillaud <etrillaud@gmail.com>\n"
 "Language-Team: git@vger.kernel.org\n"
+"Language: \n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
 "X-Poedit-Language: French\n"
 "X-Poedit-Country: FRANCE\n"
 
-#: gitk:113
+#: gitk:140
 msgid "Couldn't get list of unmerged files:"
 msgstr "Impossible de récupérer la liste des fichiers non fusionnés :"
 
-#: gitk:269
+#: gitk:212 gitk:2381
+msgid "Color words"
+msgstr ""
+
+#: gitk:217 gitk:2381 gitk:8201 gitk:8234
+msgid "Markup words"
+msgstr ""
+
+#: gitk:324
 msgid "Error parsing revisions:"
 msgstr "Erreur lors du parcours des révisions :"
 
-#: gitk:324
+#: gitk:380
 msgid "Error executing --argscmd command:"
 msgstr "Erreur à l'exécution de la commande --argscmd :"
 
-#: gitk:337
+#: gitk:393
 msgid "No files selected: --merge specified but no files are unmerged."
 msgstr ""
 "Aucun fichier sélectionné : --merge précisé, mais tous les fichiers sont "
 "fusionnés."
 
 # FIXME : améliorer la traduction de 'file limite'
-#: gitk:340
+#: gitk:396
 #, fuzzy
 msgid ""
 "No files selected: --merge specified but no unmerged files are within file "
 "limit."
 msgstr ""
 "Aucun fichier sélectionné : --merge précisé mais aucun fichier non fusionné "
 "n'est dans la limite des fichiers."
 
-#: gitk:362 gitk:509
+#: gitk:418 gitk:566
 msgid "Error executing git log:"
 msgstr "Erreur à l'exécution de git log :"
 
-#: gitk:380 gitk:525
+#: gitk:436 gitk:582
 msgid "Reading"
 msgstr "Lecture en cours"
 
-#: gitk:440 gitk:4123
+#: gitk:496 gitk:4508
 msgid "Reading commits..."
 msgstr "Lecture des commits..."
 
-#: gitk:443 gitk:1561 gitk:4126
+#: gitk:499 gitk:1637 gitk:4511
 msgid "No commits selected"
 msgstr "Aucun commit sélectionné"
 
-#: gitk:1437
+#: gitk:1511
 msgid "Can't parse git log output:"
 msgstr "Impossible de lire la sortie de git log :"
 
-#: gitk:1657
+#: gitk:1740
 msgid "No commit information available"
 msgstr "Aucune information disponible sur le commit"
 
-#: gitk:1793 gitk:1817 gitk:3916 gitk:8786 gitk:10322 gitk:10498
+#: gitk:1897
+msgid "mc"
+msgstr ""
+
+#: gitk:1932 gitk:4298 gitk:9650 gitk:11220 gitk:11500
 msgid "OK"
 msgstr "OK"
 
-#: gitk:1819 gitk:3918 gitk:8383 gitk:8457 gitk:8567 gitk:8616 gitk:8788
-#: gitk:10323 gitk:10499
+#: gitk:1934 gitk:4300 gitk:9177 gitk:9256 gitk:9372 gitk:9421 gitk:9652
+#: gitk:11221 gitk:11501
 msgid "Cancel"
 msgstr "Annuler"
 
-#: gitk:1919
+#: gitk:2069
 msgid "Update"
 msgstr "Mise à jour"
 
-#: gitk:1920
+#: gitk:2070
 msgid "Reload"
 msgstr "Recharger"
 
-#: gitk:1921
+#: gitk:2071
 msgid "Reread references"
 msgstr "Relire les références"
 
-#: gitk:1922
+#: gitk:2072
 msgid "List references"
 msgstr "Lister les références"
 
-#: gitk:1924
+#: gitk:2074
 msgid "Start git gui"
 msgstr "Démarrer git gui"
 
-#: gitk:1926
+#: gitk:2076
 msgid "Quit"
 msgstr "Quitter"
 
-#: gitk:1918
+#: gitk:2068
 msgid "File"
 msgstr "Fichier"
 
-#: gitk:1930
+#: gitk:2080
 msgid "Preferences"
 msgstr "Préférences"
 
-#: gitk:1929
+#: gitk:2079
 msgid "Edit"
 msgstr "Éditer"
 
-#: gitk:1934
+#: gitk:2084
 msgid "New view..."
 msgstr "Nouvelle vue..."
 
-#: gitk:1935
+#: gitk:2085
 msgid "Edit view..."
 msgstr "Éditer la vue..."
 
-#: gitk:1936
+#: gitk:2086
 msgid "Delete view"
 msgstr "Supprimer la vue"
 
-#: gitk:1938
+#: gitk:2088
 msgid "All files"
 msgstr "Tous les fichiers"
 
-#: gitk:1933 gitk:3670
+#: gitk:2083 gitk:4050
 msgid "View"
 msgstr "Vue"
 
-#: gitk:1943 gitk:1953 gitk:2654
+#: gitk:2093 gitk:2103 gitk:3009
 msgid "About gitk"
 msgstr "À propos de gitk"
 
-#: gitk:1944 gitk:1958
+#: gitk:2094 gitk:2108
 msgid "Key bindings"
 msgstr "Raccourcis clavier"
 
-#: gitk:1942 gitk:1957
+#: gitk:2092 gitk:2107
 msgid "Help"
 msgstr "Aide"
 
-#: gitk:2018
-msgid "SHA1 ID: "
-msgstr "ID SHA1 :"
+#: gitk:2185 gitk:8633
+msgid "SHA1 ID:"
+msgstr "Id SHA1 :"
 
-#: gitk:2049
+#: gitk:2229
 msgid "Row"
 msgstr "Colonne"
 
-#: gitk:2080
+#: gitk:2267
 msgid "Find"
 msgstr "Recherche"
 
-#: gitk:2081
-msgid "next"
-msgstr "suivant"
-
-#: gitk:2082
-msgid "prev"
-msgstr "précédent"
-
-#: gitk:2083
+#: gitk:2295
 msgid "commit"
 msgstr "commit"
 
-#: gitk:2086 gitk:2088 gitk:4284 gitk:4307 gitk:4331 gitk:6272 gitk:6344
-#: gitk:6428
+#: gitk:2299 gitk:2301 gitk:4669 gitk:4692 gitk:4716 gitk:6736 gitk:6808
+#: gitk:6893
 msgid "containing:"
 msgstr "contient :"
 
-#: gitk:2089 gitk:3162 gitk:3167 gitk:4359
+#: gitk:2302 gitk:3522 gitk:3527 gitk:4745
 msgid "touching paths:"
 msgstr "chemins modifiés :"
 
-#: gitk:2090 gitk:4364
+#: gitk:2303 gitk:4759
 msgid "adding/removing string:"
 msgstr "ajoute/supprime la chaîne :"
 
-#: gitk:2099 gitk:2101
+#: gitk:2304 gitk:4761
+msgid "changing lines matching:"
+msgstr ""
+
+#: gitk:2313 gitk:2315 gitk:4748
 msgid "Exact"
 msgstr "Exact"
 
-#: gitk:2101 gitk:4439 gitk:6240
+#: gitk:2315 gitk:4836 gitk:6704
 msgid "IgnCase"
 msgstr "Ignorer la casse"
 
-#: gitk:2101 gitk:4333 gitk:4437 gitk:6236
+#: gitk:2315 gitk:4718 gitk:4834 gitk:6700
 msgid "Regexp"
 msgstr "Expression régulière"
 
-#: gitk:2103 gitk:2104 gitk:4458 gitk:4488 gitk:4495 gitk:6364 gitk:6432
+#: gitk:2317 gitk:2318 gitk:4856 gitk:4886 gitk:4893 gitk:6829 gitk:6897
 msgid "All fields"
 msgstr "Tous les champs"
 
-#: gitk:2104 gitk:4456 gitk:4488 gitk:6303
+#: gitk:2318 gitk:4853 gitk:4886 gitk:6767
 msgid "Headline"
 msgstr "Surligner"
 
-#: gitk:2105 gitk:4456 gitk:6303 gitk:6432 gitk:6866
+#: gitk:2319 gitk:4853 gitk:6767 gitk:6897 gitk:7370
 msgid "Comments"
 msgstr "Commentaires"
 
-#: gitk:2105 gitk:4456 gitk:4460 gitk:4495 gitk:6303 gitk:6801 gitk:8063
-#: gitk:8078
+#: gitk:2319 gitk:4853 gitk:4858 gitk:4893 gitk:6767 gitk:7305 gitk:8811
+#: gitk:8826
 msgid "Author"
 msgstr "Auteur"
 
-#: gitk:2105 gitk:4456 gitk:6303 gitk:6803
+#: gitk:2319 gitk:4853 gitk:6767 gitk:7307
 msgid "Committer"
 msgstr "Auteur du commit"
 
-#: gitk:2134
+#: gitk:2350
 msgid "Search"
 msgstr "Rechercher"
 
-#: gitk:2141
+#: gitk:2358
 msgid "Diff"
 msgstr "Diff"
 
-#: gitk:2143
+#: gitk:2360
 msgid "Old version"
 msgstr "Ancienne version"
 
-#: gitk:2145
+#: gitk:2362
 msgid "New version"
 msgstr "Nouvelle version"
 
-#: gitk:2147
+#: gitk:2364
 msgid "Lines of context"
 msgstr "Lignes de contexte"
 
-#: gitk:2157
+#: gitk:2374
 msgid "Ignore space change"
 msgstr "Ignorer les modifications d'espace"
 
-#: gitk:2215
+#: gitk:2378 gitk:2380 gitk:7940 gitk:8187
+msgid "Line diff"
+msgstr ""
+
+#: gitk:2445
 msgid "Patch"
 msgstr "Patch"
 
-#: gitk:2217
+#: gitk:2447
 msgid "Tree"
 msgstr "Arbre"
 
-#: gitk:2361 gitk:2378
+#: gitk:2616 gitk:2636
 msgid "Diff this -> selected"
 msgstr "Diff entre ceci et la sélection"
 
-#: gitk:2362 gitk:2379
+#: gitk:2617 gitk:2637
 msgid "Diff selected -> this"
 msgstr "Diff entre sélection et ceci"
 
-#: gitk:2363 gitk:2380
+#: gitk:2618 gitk:2638
 msgid "Make patch"
 msgstr "Créer patch"
 
-#: gitk:2364 gitk:8441
+#: gitk:2619 gitk:9235
 msgid "Create tag"
 msgstr "Créer tag"
 
-#: gitk:2365 gitk:8547
+#: gitk:2620 gitk:9352
 msgid "Write commit to file"
 msgstr "Écrire le commit dans un fichier"
 
-#: gitk:2366 gitk:8604
+#: gitk:2621 gitk:9409
 msgid "Create new branch"
 msgstr "Créer une nouvelle branche"
 
-#: gitk:2367
+#: gitk:2622
 msgid "Cherry-pick this commit"
 msgstr "Cueillir (cherry-pick) ce commit"
 
-#: gitk:2368
+#: gitk:2623
 msgid "Reset HEAD branch to here"
 msgstr "Réinitialiser la branche HEAD vers cet état"
 
-#: gitk:2369
+#: gitk:2624
 msgid "Mark this commit"
 msgstr "Marquer ce commit"
 
-#: gitk:2370
+#: gitk:2625
 msgid "Return to mark"
 msgstr "Retourner à la marque"
 
-#: gitk:2371
+#: gitk:2626
 msgid "Find descendant of this and mark"
 msgstr "Chercher le descendant de ceci et le marquer"
 
-#: gitk:2372
+#: gitk:2627
 msgid "Compare with marked commit"
 msgstr "Comparer avec le commit marqué"
 
-#: gitk:2386
+#: gitk:2628 gitk:2639
+#, fuzzy
+msgid "Diff this -> marked commit"
+msgstr "Diff entre ceci et la sélection"
+
+#: gitk:2629 gitk:2640
+#, fuzzy
+msgid "Diff marked commit -> this"
+msgstr "Diff entre sélection et ceci"
+
+#: gitk:2630
+#, fuzzy
+msgid "Revert this commit"
+msgstr "Marquer ce commit"
+
+#: gitk:2646
 msgid "Check out this branch"
 msgstr "Récupérer cette branche"
 
-#: gitk:2387
+#: gitk:2647
 msgid "Remove this branch"
 msgstr "Supprimer cette branche"
 
-#: gitk:2394
+#: gitk:2654
 msgid "Highlight this too"
 msgstr "Surligner également ceci"
 
-#: gitk:2395
+#: gitk:2655
 msgid "Highlight this only"
 msgstr "Surligner seulement ceci"
 
-#: gitk:2396
+#: gitk:2656
 msgid "External diff"
 msgstr "Diff externe"
 
-#: gitk:2397
+#: gitk:2657
 msgid "Blame parent commit"
 msgstr "Blâmer le commit parent"
 
-#: gitk:2404
+#: gitk:2664
 msgid "Show origin of this line"
 msgstr "Montrer l'origine de cette ligne"
 
-#: gitk:2405
+#: gitk:2665
 msgid "Run git gui blame on this line"
 msgstr "Exécuter git gui blame sur cette ligne"
 
-#: gitk:2656
+#: gitk:3011
+#, fuzzy
 msgid ""
 "\n"
 "Gitk - a commit viewer for git\n"
 "\n"
-"Copyright \\u00a9 2005-2010 Paul Mackerras\n"
+"Copyright © 2005-2014 Paul Mackerras\n"
 "\n"
 "Use and redistribute under the terms of the GNU General Public License"
 msgstr ""
 "\n"
 "Gitk - visualisateur de commit pour git\n"
 "\n"
 "Copyright \\u00a9 2005-2010 Paul Mackerras\n"
 "\n"
 "Utilisation et redistribution soumises aux termes de la GNU General Public "
 "License"
 
-#: gitk:2664 gitk:2726 gitk:8969
+#: gitk:3019 gitk:3085 gitk:9836
 msgid "Close"
 msgstr "Fermer"
 
-#: gitk:2683
+#: gitk:3040
 msgid "Gitk key bindings"
 msgstr "Raccourcis clavier de Gitk"
 
-#: gitk:2686
+#: gitk:3043
 msgid "Gitk key bindings:"
 msgstr "Raccourcis clavier de Gitk :"
 
-#: gitk:2688
+#: gitk:3045
 #, tcl-format
 msgid "<%s-Q>\t\tQuit"
 msgstr "<%s-Q>\t\tQuitter"
 
-#: gitk:2689
+#: gitk:3046
+#, fuzzy, tcl-format
+msgid "<%s-W>\t\tClose window"
+msgstr "<%s-F>\t\tRechercher"
+
+#: gitk:3047
 msgid "<Home>\t\tMove to first commit"
 msgstr "<Début>\t\tAller au premier commit"
 
-#: gitk:2690
+#: gitk:3048
 msgid "<End>\t\tMove to last commit"
 msgstr "<Fin>\t\tAller au dernier commit"
 
-#: gitk:2691
-msgid "<Up>, p, i\tMove up one commit"
+#: gitk:3049
+#, fuzzy
+msgid "<Up>, p, k\tMove up one commit"
 msgstr "<Haut>, p, i\t Aller au commit suivant"
 
-#: gitk:2692
-msgid "<Down>, n, k\tMove down one commit"
+#: gitk:3050
+#, fuzzy
+msgid "<Down>, n, j\tMove down one commit"
 msgstr "<Bas>, n, k\t Aller au commit précédent"
 
-#: gitk:2693
-msgid "<Left>, z, j\tGo back in history list"
+#: gitk:3051
+#, fuzzy
+msgid "<Left>, z, h\tGo back in history list"
 msgstr "<Gauche>, z, j\tReculer dans l'historique"
 
-#: gitk:2694
+#: gitk:3052
 msgid "<Right>, x, l\tGo forward in history list"
 msgstr "<Droite>, x, l\tAvancer dans l'historique"
 
-#: gitk:2695
+#: gitk:3053
+#, tcl-format
+msgid "<%s-n>\tGo to n-th parent of current commit in history list"
+msgstr ""
+
+#: gitk:3054
 msgid "<PageUp>\tMove up one page in commit list"
 msgstr "<PageUp>\tMonter d'une page dans la liste des commits"
 
-#: gitk:2696
+#: gitk:3055
 msgid "<PageDown>\tMove down one page in commit list"
 msgstr "<PageDown>\tDescendre d'une page dans la liste des commits"
 
-#: gitk:2697
+#: gitk:3056
 #, tcl-format
 msgid "<%s-Home>\tScroll to top of commit list"
 msgstr "<%s-Début>\tAller en haut de la liste des commits"
 
-#: gitk:2698
+#: gitk:3057
 #, tcl-format
 msgid "<%s-End>\tScroll to bottom of commit list"
 msgstr "<%s-End>\tAller en bas de la liste des commits"
 
-#: gitk:2699
+#: gitk:3058
 #, tcl-format
 msgid "<%s-Up>\tScroll commit list up one line"
 msgstr "<%s-Up>\tMonter d'une ligne dans la liste des commits"
 
-#: gitk:2700
+#: gitk:3059
 #, tcl-format
 msgid "<%s-Down>\tScroll commit list down one line"
 msgstr "<%s-Down>\tDescendre d'une ligne dans la liste des commits"
 
-#: gitk:2701
+#: gitk:3060
 #, tcl-format
 msgid "<%s-PageUp>\tScroll commit list up one page"
 msgstr "<%s-PageUp>\tMonter d'une page dans la liste des commits"
 
-#: gitk:2702
+#: gitk:3061
 #, tcl-format
 msgid "<%s-PageDown>\tScroll commit list down one page"
 msgstr "<%s-PageDown>\tDescendre d'une page dans la liste des commits"
 
-#: gitk:2703
+#: gitk:3062
 msgid "<Shift-Up>\tFind backwards (upwards, later commits)"
 msgstr ""
 "<Shift-Up>\tRecherche en arrière (vers l'avant, commits les plus anciens)"
 
-#: gitk:2704
+#: gitk:3063
 msgid "<Shift-Down>\tFind forwards (downwards, earlier commits)"
 msgstr ""
 "<Shift-Down>\tRecherche en avant (vers l'arrière, commit les plus récents)"
 
-#: gitk:2705
+#: gitk:3064
 msgid "<Delete>, b\tScroll diff view up one page"
 msgstr "<Supprimer>, b\tMonter d'une page dans la vue des diff"
 
-#: gitk:2706
+#: gitk:3065
 msgid "<Backspace>\tScroll diff view up one page"
 msgstr "<Backspace>\tMonter d'une page dans la vue des diff"
 
-#: gitk:2707
+#: gitk:3066
 msgid "<Space>\t\tScroll diff view down one page"
 msgstr "<Espace>\t\tDescendre d'une page dans la vue des diff"
 
-#: gitk:2708
+#: gitk:3067
 msgid "u\t\tScroll diff view up 18 lines"
 msgstr "u\t\tMonter de 18 lignes dans la vue des diff"
 
-#: gitk:2709
+#: gitk:3068
 msgid "d\t\tScroll diff view down 18 lines"
 msgstr "d\t\tDescendre de 18 lignes dans la vue des diff"
 
-#: gitk:2710
+#: gitk:3069
 #, tcl-format
 msgid "<%s-F>\t\tFind"
 msgstr "<%s-F>\t\tRechercher"
 
-#: gitk:2711
+#: gitk:3070
 #, tcl-format
 msgid "<%s-G>\t\tMove to next find hit"
 msgstr "<%s-G>\t\tAller au résultat de recherche suivant"
 
-#: gitk:2712
+#: gitk:3071
 msgid "<Return>\tMove to next find hit"
 msgstr "<Return>\t\tAller au résultat de recherche suivant"
 
-#: gitk:2713
+#: gitk:3072
 msgid "/\t\tFocus the search box"
 msgstr "/\t\tFocus sur la zone de recherche"
 
-#: gitk:2714
+#: gitk:3073
 msgid "?\t\tMove to previous find hit"
 msgstr "?\t\tAller au résultat de recherche précédent"
 
-#: gitk:2715
+#: gitk:3074
 msgid "f\t\tScroll diff view to next file"
 msgstr "f\t\tAller au prochain fichier dans la vue des diff"
 
-#: gitk:2716
+#: gitk:3075
 #, tcl-format
 msgid "<%s-S>\t\tSearch for next hit in diff view"
 msgstr "<%s-S>\t\tAller au résultat suivant dans la vue des diff"
 
-#: gitk:2717
+#: gitk:3076
 #, tcl-format
 msgid "<%s-R>\t\tSearch for previous hit in diff view"
 msgstr "<%s-R>\t\tAller au résultat précédent dans la vue des diff"
 
-#: gitk:2718
+#: gitk:3077
 #, tcl-format
 msgid "<%s-KP+>\tIncrease font size"
 msgstr "<%s-KP+>\tAugmenter la taille de la police"
 
-#: gitk:2719
+#: gitk:3078
 #, tcl-format
 msgid "<%s-plus>\tIncrease font size"
 msgstr "<%s-plus>\tAugmenter la taille de la police"
 
-#: gitk:2720
+#: gitk:3079
 #, tcl-format
 msgid "<%s-KP->\tDecrease font size"
 msgstr "<%s-KP->\tDiminuer la taille de la police"
 
-#: gitk:2721
+#: gitk:3080
 #, tcl-format
 msgid "<%s-minus>\tDecrease font size"
 msgstr "<%s-minus>\tDiminuer la taille de la police"
 
-#: gitk:2722
+#: gitk:3081
 msgid "<F5>\t\tUpdate"
 msgstr "<F5>\t\tMise à jour"
 
-#: gitk:3177
-#, tcl-format
-msgid "Error getting \"%s\" from %s:"
-msgstr "Erreur en obtenant \"%s\" de %s:"
-
-#: gitk:3234 gitk:3243
+#: gitk:3546 gitk:3555
 #, tcl-format
 msgid "Error creating temporary directory %s:"
 msgstr "Erreur lors de la création du répertoire temporaire %s :"
 
-#: gitk:3255
+#: gitk:3568
+#, tcl-format
+msgid "Error getting \"%s\" from %s:"
+msgstr "Erreur en obtenant \"%s\" de %s:"
+
+#: gitk:3631
 msgid "command failed:"
 msgstr "échec de la commande :"
 
-#: gitk:3401
+#: gitk:3780
 msgid "No such commit"
 msgstr "Commit inexistant"
 
-#: gitk:3415
+#: gitk:3794
 msgid "git gui blame: command failed:"
 msgstr "git gui blame : échec de la commande :"
 
-#: gitk:3446
+#: gitk:3825
 #, tcl-format
 msgid "Couldn't read merge head: %s"
 msgstr "Impossible de lire le head de la fusion : %s"
 
-#: gitk:3454
+#: gitk:3833
 #, tcl-format
 msgid "Error reading index: %s"
 msgstr "Erreur à la lecture de l'index : %s"
 
-#: gitk:3479
+#: gitk:3858
 #, tcl-format
 msgid "Couldn't start git blame: %s"
 msgstr "Impossible de démarrer git blame : %s"
 
-#: gitk:3482 gitk:6271
+#: gitk:3861 gitk:6735
 msgid "Searching"
 msgstr "Recherche en cours"
 
-#: gitk:3514
+#: gitk:3893
 #, tcl-format
 msgid "Error running git blame: %s"
 msgstr "Erreur à l'exécution de git blame : %s"
 
-#: gitk:3542
+#: gitk:3921
 #, tcl-format
 msgid "That line comes from commit %s,  which is not in this view"
 msgstr "Cette ligne est issue du commit %s, qui n'est pas dans cette vue"
 
-#: gitk:3556
+#: gitk:3935
 msgid "External diff viewer failed:"
 msgstr "Échec de l'outil externe de visualisation des diff"
 
-#: gitk:3674
+#: gitk:4053
 msgid "Gitk view definition"
 msgstr "Définition des vues de Gitk"
 
-#: gitk:3678
+#: gitk:4057
 msgid "Remember this view"
 msgstr "Se souvenir de cette vue"
 
-#: gitk:3679
+#: gitk:4058
 msgid "References (space separated list):"
 msgstr "Références (liste d'éléments séparés par des espaces) :"
 
-#: gitk:3680
+#: gitk:4059
 msgid "Branches & tags:"
 msgstr "Branches & tags :"
 
-#: gitk:3681
+#: gitk:4060
 msgid "All refs"
 msgstr "Toutes les références"
 
-#: gitk:3682
+#: gitk:4061
 msgid "All (local) branches"
 msgstr "Toutes les branches (locales)"
 
-#: gitk:3683
+#: gitk:4062
 msgid "All tags"
 msgstr "Tous les tags"
 
-#: gitk:3684
+#: gitk:4063
 msgid "All remote-tracking branches"
 msgstr "Toutes les branches de suivi à distance"
 
-#: gitk:3685
+#: gitk:4064
 msgid "Commit Info (regular expressions):"
 msgstr "Info sur les commits (expressions régulières) :"
 
-#: gitk:3686
+#: gitk:4065
 msgid "Author:"
 msgstr "Auteur :"
 
-#: gitk:3687
+#: gitk:4066
 msgid "Committer:"
 msgstr "Commiteur :"
 
-#: gitk:3688
+#: gitk:4067
 msgid "Commit Message:"
 msgstr "Message de commit :"
 
-#: gitk:3689
+#: gitk:4068
 msgid "Matches all Commit Info criteria"
 msgstr "Correspond à tous les critères d'Info sur les commits"
 
-#: gitk:3690
+#: gitk:4069
+#, fuzzy
+msgid "Matches none Commit Info criteria"
+msgstr "Correspond à tous les critères d'Info sur les commits"
+
+#: gitk:4070
 msgid "Changes to Files:"
 msgstr "Changements des fichiers :"
 
-#: gitk:3691
+#: gitk:4071
 msgid "Fixed String"
 msgstr "Chaîne Figée"
 
-#: gitk:3692
+#: gitk:4072
 msgid "Regular Expression"
 msgstr "Expression Régulière"
 
-#: gitk:3693
+#: gitk:4073
 msgid "Search string:"
 msgstr "Recherche de la chaîne :"
 
-#: gitk:3694
+#: gitk:4074
 msgid ""
 "Commit Dates (\"2 weeks ago\", \"2009-03-17 15:27:38\", \"March 17, 2009 "
 "15:27:38\"):"
 msgstr ""
 "Dates des commits (\"2 weeks ago\", \"2009-03-17 15:27:38\", \"March 17, "
 "2009 15:27:38\") :"
 
-#: gitk:3695
+#: gitk:4075
 msgid "Since:"
 msgstr "De :"
 
-#: gitk:3696
+#: gitk:4076
 msgid "Until:"
 msgstr "Jusqu'au :"
 
-#: gitk:3697
+#: gitk:4077
 msgid "Limit and/or skip a number of revisions (positive integer):"
 msgstr "Limiter et/ou sauter un certain nombre (entier positif) de révisions :"
 
-#: gitk:3698
+#: gitk:4078
 msgid "Number to show:"
 msgstr "Nombre à afficher :"
 
-#: gitk:3699
+#: gitk:4079
 msgid "Number to skip:"
 msgstr "Nombre à sauter :"
 
-#: gitk:3700
+#: gitk:4080
 msgid "Miscellaneous options:"
 msgstr "Options diverses :"
 
-#: gitk:3701
+#: gitk:4081
 msgid "Strictly sort by date"
 msgstr "Trier par date"
 
 # FIXME : traduction de "branch sides"
-#: gitk:3702
+#: gitk:4082
 #, fuzzy
 msgid "Mark branch sides"
 msgstr "Marquer les extrémités des branches"
 
-#: gitk:3703
+#: gitk:4083
 msgid "Limit to first parent"
 msgstr "Limiter au premier ancêtre"
 
-#: gitk:3704
+#: gitk:4084
 msgid "Simple history"
 msgstr "Historique simple"
 
-#: gitk:3705
+#: gitk:4085
 msgid "Additional arguments to git log:"
 msgstr "Arguments supplémentaires de git log :"
 
-#: gitk:3706
+#: gitk:4086
 msgid "Enter files and directories to include, one per line:"
 msgstr "Saisir les fichiers et répertoires à inclure, un par ligne :"
 
-#: gitk:3707
+#: gitk:4087
 msgid "Command to generate more commits to include:"
 msgstr "Commande pour générer plus de commits à inclure :"
 
-#: gitk:3829
+#: gitk:4211
 msgid "Gitk: edit view"
 msgstr "Gitk : éditer la vue"
 
-#: gitk:3837
+#: gitk:4219
 msgid "-- criteria for selecting revisions"
 msgstr "-- critère pour la sélection des révisions"
 
-#: gitk:3842
-msgid "View Name:"
+#: gitk:4224
+#, fuzzy
+msgid "View Name"
 msgstr "Nom de la vue :"
 
-#: gitk:3917
+#: gitk:4299
 msgid "Apply (F5)"
 msgstr "Appliquer (F5)"
 
-#: gitk:3955
+#: gitk:4337
 msgid "Error in commit selection arguments:"
 msgstr "Erreur dans les arguments de sélection des commits :"
 
-#: gitk:4008 gitk:4060 gitk:4508 gitk:4522 gitk:5783 gitk:11196 gitk:11197
+#: gitk:4392 gitk:4445 gitk:4906 gitk:4920 gitk:6190 gitk:12346 gitk:12347
 msgid "None"
 msgstr "Aucun"
 
-#: gitk:4456 gitk:6303 gitk:8065 gitk:8080
-msgid "Date"
-msgstr "Date"
-
-#: gitk:4456 gitk:6303
-msgid "CDate"
-msgstr "CDate"
-
-#: gitk:4605 gitk:4610
+#: gitk:5003 gitk:5008
 msgid "Descendant"
 msgstr "Descendant"
 
-#: gitk:4606
+#: gitk:5004
 msgid "Not descendant"
 msgstr "Pas un descendant"
 
-#: gitk:4613 gitk:4618
+#: gitk:5011 gitk:5016
 msgid "Ancestor"
 msgstr "Ancêtre"
 
-#: gitk:4614
+#: gitk:5012
 msgid "Not ancestor"
 msgstr "Pas un ancêtre"
 
-#: gitk:4904
+#: gitk:5306
 msgid "Local changes checked in to index but not committed"
 msgstr "Modifications locales enregistrées dans l'index mais non commitées"
 
-#: gitk:4940
+#: gitk:5342
 msgid "Local uncommitted changes, not checked in to index"
 msgstr "Modifications locales non enregistrées dans l'index et non commitées"
 
-#: gitk:6621
+#: gitk:7115
+msgid "and many more"
+msgstr ""
+
+#: gitk:7118
 msgid "many"
 msgstr "nombreux"
 
-#: gitk:6805
+#: gitk:7309
 msgid "Tags:"
 msgstr "Tags :"
 
-#: gitk:6822 gitk:6828 gitk:8058
+#: gitk:7326 gitk:7332 gitk:8806
 msgid "Parent"
 msgstr "Parent"
 
-#: gitk:6833
+#: gitk:7337
 msgid "Child"
 msgstr "Enfant"
 
-#: gitk:6842
+#: gitk:7346
 msgid "Branch"
 msgstr "Branche"
 
-#: gitk:6845
+#: gitk:7349
 msgid "Follows"
 msgstr "Suit"
 
-#: gitk:6848
+#: gitk:7352
 msgid "Precedes"
 msgstr "Précède"
 
-#: gitk:7346
+#: gitk:7947
 #, tcl-format
 msgid "Error getting diffs: %s"
 msgstr "Erreur lors de la récupération des diff : %s"
 
-#: gitk:7886
+#: gitk:8631
 msgid "Goto:"
 msgstr "Aller à :"
 
-#: gitk:7888
-msgid "SHA1 ID:"
-msgstr "Id SHA1 :"
-
-#: gitk:7907
+#: gitk:8652
 #, tcl-format
 msgid "Short SHA1 id %s is ambiguous"
 msgstr "Id SHA1 court %s est ambigu"
 
-#: gitk:7914
+#: gitk:8659
 #, tcl-format
 msgid "Revision %s is not known"
 msgstr "Id SHA1 %s est inconnu"
 
-#: gitk:7924
+#: gitk:8669
 #, tcl-format
 msgid "SHA1 id %s is not known"
 msgstr "Id SHA1 %s est inconnu"
 
-#: gitk:7926
+#: gitk:8671
 #, tcl-format
 msgid "Revision %s is not in the current view"
 msgstr "La révision %s n'est pas dans la vue courante"
 
-#: gitk:8068
+#: gitk:8813 gitk:8828
+msgid "Date"
+msgstr "Date"
+
+#: gitk:8816
 msgid "Children"
 msgstr "Enfants"
 
-#: gitk:8125
+#: gitk:8879
 #, tcl-format
 msgid "Reset %s branch to here"
 msgstr "Réinitialiser la branche %s vers cet état"
 
-#: gitk:8127
+#: gitk:8881
 msgid "Detached head: can't reset"
 msgstr "Head détaché : impossible de réinitialiser"
 
-#: gitk:8236 gitk:8242
+#: gitk:8986 gitk:8992
 msgid "Skipping merge commit "
 msgstr "Éviter le commit de la fusion "
 
-#: gitk:8251 gitk:8256
+#: gitk:9001 gitk:9006
 msgid "Error getting patch ID for "
 msgstr "Erreur à l'obtention de l'ID du patch pour "
 
-#: gitk:8252 gitk:8257
+#: gitk:9002 gitk:9007
 msgid " - stopping\n"
 msgstr " - arrêt en cours\n"
 
-#: gitk:8262 gitk:8265 gitk:8273 gitk:8283 gitk:8292
+#: gitk:9012 gitk:9015 gitk:9023 gitk:9037 gitk:9046
 msgid "Commit "
 msgstr "Commit "
 
-#: gitk:8266
+#: gitk:9016
 msgid ""
 " is the same patch as\n"
 "       "
 msgstr ""
 "est le même patch que \n"
 "       "
 
-#: gitk:8274
+#: gitk:9024
 msgid ""
 " differs from\n"
 "       "
 msgstr ""
 " diffère de\n"
 "       "
 
-#: gitk:8276
-msgid "- stopping\n"
-msgstr "- arrêt en cours\n"
+#: gitk:9026
+msgid ""
+"Diff of commits:\n"
+"\n"
+msgstr ""
 
-#: gitk:8284 gitk:8293
+#: gitk:9038 gitk:9047
 #, tcl-format
 msgid " has %s children - stopping\n"
 msgstr "a %s enfants - arrêt en cours\n"
 
-#: gitk:8324
+#: gitk:9066
+#, fuzzy, tcl-format
+msgid "Error writing commit to file: %s"
+msgstr "Erreur à l'ecriture du commit :"
+
+#: gitk:9072
+#, fuzzy, tcl-format
+msgid "Error diffing commits: %s"
+msgstr "Erreur à l'ecriture du commit :"
+
+#: gitk:9118
 msgid "Top"
 msgstr "Haut"
 
-#: gitk:8325
+#: gitk:9119
 msgid "From"
 msgstr "De"
 
-#: gitk:8330
+#: gitk:9124
 msgid "To"
 msgstr "À"
 
-#: gitk:8354
+#: gitk:9148
 msgid "Generate patch"
 msgstr "Générer le patch"
 
-#: gitk:8356
+#: gitk:9150
 msgid "From:"
 msgstr "De :"
 
-#: gitk:8365
+#: gitk:9159
 msgid "To:"
 msgstr "À :"
 
-#: gitk:8374
+#: gitk:9168
 msgid "Reverse"
 msgstr "Inverser"
 
-#: gitk:8376 gitk:8561
+#: gitk:9170 gitk:9366
 msgid "Output file:"
 msgstr "Fichier de sortie :"
 
-#: gitk:8382
+#: gitk:9176
 msgid "Generate"
 msgstr "Générer"
 
-#: gitk:8420
+#: gitk:9214
 msgid "Error creating patch:"
 msgstr "Erreur à la création du patch :"
 
-#: gitk:8443 gitk:8549 gitk:8606
+#: gitk:9237 gitk:9354 gitk:9411
 msgid "ID:"
 msgstr "ID :"
 
-#: gitk:8452
+#: gitk:9246
 msgid "Tag name:"
 msgstr "Nom du Tag :"
 
-#: gitk:8456 gitk:8615
+#: gitk:9249
+msgid "Tag message is optional"
+msgstr ""
+
+#: gitk:9251
+#, fuzzy
+msgid "Tag message:"
+msgstr "Nom du Tag :"
+
+#: gitk:9255 gitk:9420
 msgid "Create"
 msgstr "Créer"
 
-#: gitk:8473
+#: gitk:9273
 msgid "No tag name specified"
 msgstr "Aucun nom de tag spécifié"
 
-#: gitk:8477
+#: gitk:9277
 #, tcl-format
 msgid "Tag \"%s\" already exists"
 msgstr "Le tag \"%s\" existe déjà"
 
-#: gitk:8483
+#: gitk:9287
 msgid "Error creating tag:"
 msgstr "Erreur à la création du tag :"
 
-#: gitk:8558
+#: gitk:9363
 msgid "Command:"
 msgstr "Commande :"
 
-#: gitk:8566
+#: gitk:9371
 msgid "Write"
 msgstr "Écrire"
 
-#: gitk:8584
+#: gitk:9389
 msgid "Error writing commit:"
 msgstr "Erreur à l'ecriture du commit :"
 
-#: gitk:8611
+#: gitk:9416
 msgid "Name:"
 msgstr "Nom :"
 
-#: gitk:8634
+#: gitk:9439
 msgid "Please specify a name for the new branch"
 msgstr "Veuillez spécifier un nom pour la nouvelle branche"
 
-#: gitk:8639
+#: gitk:9444
 #, tcl-format
 msgid "Branch '%s' already exists. Overwrite?"
 msgstr "La branche '%s' existe déjà. Écraser?"
 
-#: gitk:8705
+#: gitk:9511
 #, tcl-format
 msgid "Commit %s is already included in branch %s -- really re-apply it?"
 msgstr ""
 "Le Commit %s est déjà inclus dans la branche %s -- le ré-appliquer malgré "
 "tout?"
 
-#: gitk:8710
+#: gitk:9516
 msgid "Cherry-picking"
 msgstr "Cueillir (Cherry-picking)"
 
-#: gitk:8719
+#: gitk:9525
 #, tcl-format
 msgid ""
 "Cherry-pick failed because of local changes to file '%s'.\n"
 "Please commit, reset or stash your changes and try again."
 msgstr ""
 "La cueillette (cherry-pick) a échouée à cause de modifications locales du "
 "fichier '%s'.\n"
 "Veuillez commiter, réinitialiser ou stasher vos changements et essayer de "
 "nouveau."
 
-#: gitk:8725
+#: gitk:9531
 msgid ""
 "Cherry-pick failed because of merge conflict.\n"
 "Do you wish to run git citool to resolve it?"
 msgstr ""
 "La cueillette (cherry-pick) a échouée à cause d'un conflit lors d'une "
 "fusion.\n"
 "Souhaitez-vous exécuter git citool pour le résoudre ?"
 
-#: gitk:8741
+#: gitk:9547 gitk:9605
 msgid "No changes committed"
 msgstr "Aucun changement commité"
 
-#: gitk:8767
+#: gitk:9574
+#, fuzzy, tcl-format
+msgid "Commit %s is not included in branch %s -- really revert it?"
+msgstr ""
+"Le Commit %s est déjà inclus dans la branche %s -- le ré-appliquer malgré "
+"tout?"
+
+#: gitk:9579
+#, fuzzy
+msgid "Reverting"
+msgstr "Réinitialisation"
+
+#: gitk:9587
+#, fuzzy, tcl-format
+msgid ""
+"Revert failed because of local changes to the following files:%s Please "
+"commit, reset or stash  your changes and try again."
+msgstr ""
+"La cueillette (cherry-pick) a échouée à cause de modifications locales du "
+"fichier '%s'.\n"
+"Veuillez commiter, réinitialiser ou stasher vos changements et essayer de "
+"nouveau."
+
+#: gitk:9591
+#, fuzzy
+msgid ""
+"Revert failed because of merge conflict.\n"
+" Do you wish to run git citool to resolve it?"
+msgstr ""
+"La cueillette (cherry-pick) a échouée à cause d'un conflit lors d'une "
+"fusion.\n"
+"Souhaitez-vous exécuter git citool pour le résoudre ?"
+
+#: gitk:9634
 msgid "Confirm reset"
 msgstr "Confirmer la réinitialisation"
 
-#: gitk:8769
+#: gitk:9636
 #, tcl-format
 msgid "Reset branch %s to %s?"
 msgstr "Réinitialiser la branche %s à %s?"
 
-#: gitk:8773
+#: gitk:9638
 msgid "Reset type:"
 msgstr "Type de réinitialisation :"
 
-#: gitk:8777
+#: gitk:9641
 msgid "Soft: Leave working tree and index untouched"
 msgstr "Douce : Laisse le répertoire de travail et l'index intacts"
 
-#: gitk:8780
+#: gitk:9644
 msgid "Mixed: Leave working tree untouched, reset index"
 msgstr ""
 "Hybride : Laisse le répertoire de travail dans son état courant, "
 "réinitialise l'index"
 
-#: gitk:8783
+#: gitk:9647
 msgid ""
 "Hard: Reset working tree and index\n"
 "(discard ALL local changes)"
 msgstr ""
 "Dure : Réinitialise le répertoire de travail et l'index\n"
 "(abandonne TOUS les changements locaux)"
 
-#: gitk:8800
+#: gitk:9664
 msgid "Resetting"
 msgstr "Réinitialisation"
 
 # Fixme: Récupération est-il vraiment une mauvaise traduction?
-#: gitk:8857
+#: gitk:9724
 #, fuzzy
 msgid "Checking out"
 msgstr "Récupération"
 
-#: gitk:8910
+#: gitk:9777
 msgid "Cannot delete the currently checked-out branch"
 msgstr "Impossible de supprimer la branche en cours"
 
-#: gitk:8916
+#: gitk:9783
 #, tcl-format
 msgid ""
 "The commits on branch %s aren't on any other branch.\n"
 "Really delete branch %s?"
 msgstr ""
 "Les commits de la branche %s ne sont dans aucune autre branche.\n"
 "Voulez-vous vraiment supprimer cette branche %s ?"
 
-#: gitk:8947
+#: gitk:9814
 #, tcl-format
 msgid "Tags and heads: %s"
 msgstr "Tags et heads : %s"
 
-#: gitk:8962
+#: gitk:9829
 msgid "Filter"
 msgstr "Filtrer"
 
-#: gitk:9257
+#: gitk:10125
 msgid ""
 "Error reading commit topology information; branch and preceding/following "
 "tag information will be incomplete."
 msgstr ""
 "Erreur à la lecture des informations sur la topologie des commits, les "
 "informations sur les branches et les tags précédents/suivants seront "
 "incomplètes."
 
-#: gitk:10243
+#: gitk:11102
 msgid "Tag"
 msgstr "Tag"
 
-#: gitk:10243
+#: gitk:11106
 msgid "Id"
 msgstr "Id"
 
-#: gitk:10291
+#: gitk:11189
 msgid "Gitk font chooser"
 msgstr "Sélecteur de police de Gitk"
 
-#: gitk:10308
+#: gitk:11206
 msgid "B"
 msgstr "B"
 
-#: gitk:10311
+#: gitk:11209
 msgid "I"
 msgstr "I"
 
-#: gitk:10407
-msgid "Gitk preferences"
-msgstr "Préférences de Gitk"
-
-#: gitk:10409
+#: gitk:11327
 msgid "Commit list display options"
 msgstr "Options d'affichage de la liste des commits"
 
-#: gitk:10412
+#: gitk:11330
 msgid "Maximum graph width (lines)"
 msgstr "Longueur maximum du graphe (lignes)"
 
 # FIXME : Traduction standard de "pane"?
-#: gitk:10416
-#, fuzzy, tcl-format
+#: gitk:11334
+#, fuzzy, no-tcl-format
 msgid "Maximum graph width (% of pane)"
 msgstr "Longueur maximum du graphe (% du panneau)"
 
-#: gitk:10420
+#: gitk:11337
 msgid "Show local changes"
 msgstr "Montrer les changements locaux"
 
-#: gitk:10423
-msgid "Auto-select SHA1"
+#: gitk:11340
+#, fuzzy
+msgid "Auto-select SHA1 (length)"
 msgstr "Sélection auto. du SHA1"
 
-#: gitk:10427
+#: gitk:11344
+msgid "Hide remote refs"
+msgstr "Cacher les refs distantes"
+
+#: gitk:11348
 msgid "Diff display options"
 msgstr "Options d'affichage des diff"
 
-#: gitk:10429
+#: gitk:11350
 msgid "Tab spacing"
 msgstr "Taille des tabulations"
 
-#: gitk:10432
-msgid "Display nearby tags"
+#: gitk:11353
+#, fuzzy
+msgid "Display nearby tags/heads"
 msgstr "Afficher les tags les plus proches"
 
-#: gitk:10435
-msgid "Hide remote refs"
-msgstr "Cacher les refs distantes"
+#: gitk:11356
+msgid "Maximum # tags/heads to show"
+msgstr ""
 
-#: gitk:10438
+#: gitk:11359
 msgid "Limit diffs to listed paths"
 msgstr "Limiter les différences aux chemins listés"
 
-#: gitk:10441
+#: gitk:11362
 msgid "Support per-file encodings"
 msgstr "Support pour un encodage des caractères par fichier"
 
-#: gitk:10447 gitk:10512
+#: gitk:11368 gitk:11515
 msgid "External diff tool"
 msgstr "Outil diff externe"
 
-#: gitk:10449
+#: gitk:11369
 msgid "Choose..."
 msgstr "Choisir..."
 
-#: gitk:10454
+#: gitk:11374
+#, fuzzy
+msgid "General options"
+msgstr "Générer le patch"
+
+#: gitk:11377
+msgid "Use themed widgets"
+msgstr ""
+
+#: gitk:11379
+msgid "(change requires restart)"
+msgstr ""
+
+#: gitk:11381
+msgid "(currently unavailable)"
+msgstr ""
+
+#: gitk:11392
 msgid "Colors: press to choose"
 msgstr "Couleurs : cliquer pour choisir"
 
-#: gitk:10457
+#: gitk:11395
+msgid "Interface"
+msgstr ""
+
+#: gitk:11396
+#, fuzzy
+msgid "interface"
+msgstr "Police de l'interface utilisateur"
+
+#: gitk:11399
 msgid "Background"
 msgstr "Arrière-plan"
 
-#: gitk:10458 gitk:10488
+#: gitk:11400 gitk:11430
 msgid "background"
 msgstr "arrière-plan"
 
-#: gitk:10461
+#: gitk:11403
 msgid "Foreground"
 msgstr "Premier plan"
 
-#: gitk:10462
+#: gitk:11404
 msgid "foreground"
 msgstr "premier plan"
 
-#: gitk:10465
+#: gitk:11407
 msgid "Diff: old lines"
 msgstr "Diff : anciennes lignes"
 
-#: gitk:10466
+#: gitk:11408
 msgid "diff old lines"
 msgstr "diff anciennes lignes"
 
-#: gitk:10470
+#: gitk:11412
 msgid "Diff: new lines"
 msgstr "Diff : nouvelles lignes"
 
-#: gitk:10471
+#: gitk:11413
 msgid "diff new lines"
 msgstr "diff nouvelles lignes"
 
-#: gitk:10475
+#: gitk:11417
 msgid "Diff: hunk header"
 msgstr "Diff : entête du hunk"
 
-#: gitk:10477
+#: gitk:11419
 msgid "diff hunk header"
 msgstr "diff : entête du hunk"
 
-#: gitk:10481
+#: gitk:11423
 msgid "Marked line bg"
 msgstr "Arrière-plan de la ligne marquée"
 
-#: gitk:10483
+#: gitk:11425
 msgid "marked line background"
 msgstr "Arrière-plan de la ligne marquée"
 
-#: gitk:10487
+#: gitk:11429
 msgid "Select bg"
 msgstr "Sélectionner l'arrière-plan"
 
-#: gitk:10491
+#: gitk:11438
 msgid "Fonts: press to choose"
 msgstr "Polices : cliquer pour choisir"
 
-#: gitk:10493
+#: gitk:11440
 msgid "Main font"
 msgstr "Police principale"
 
-#: gitk:10494
+#: gitk:11441
 msgid "Diff display font"
 msgstr "Police d'affichage des diff"
 
-#: gitk:10495
+#: gitk:11442
 msgid "User interface font"
 msgstr "Police de l'interface utilisateur"
 
-#: gitk:10522
+#: gitk:11464
+msgid "Gitk preferences"
+msgstr "Préférences de Gitk"
+
+#: gitk:11473
+#, fuzzy
+msgid "General"
+msgstr "Générer"
+
+#: gitk:11474
+msgid "Colors"
+msgstr ""
+
+#: gitk:11475
+msgid "Fonts"
+msgstr ""
+
+#: gitk:11525
 #, tcl-format
 msgid "Gitk: choose color for %s"
 msgstr "Gitk : choisir la couleur de %s"
 
-#: gitk:10973
-msgid ""
-"Sorry, gitk cannot run with this version of Tcl/Tk.\n"
-" Gitk requires at least Tcl/Tk 8.4."
-msgstr ""
-"Désolé, gitk ne peut être exécuté avec cette version de Tcl/Tk.\n"
-" Gitk requiert Tcl/Tk version 8.4 ou supérieur."
-
-#: gitk:11101
+#: gitk:12242
 msgid "Cannot find a git repository here."
 msgstr "Impossible de trouver un dépôt git ici."
 
-#: gitk:11105
-#, tcl-format
-msgid "Cannot find the git directory \"%s\"."
-msgstr "Impossible de trouver le répertoire git \"%s\"."
-
-#: gitk:11152
+#: gitk:12289
 #, tcl-format
 msgid "Ambiguous argument '%s': both revision and filename"
 msgstr "Argument '%s' ambigu : à la fois une révision et un nom de fichier"
 
-#: gitk:11164
+#: gitk:12301
 msgid "Bad arguments to gitk:"
 msgstr "Arguments invalides pour gitk :"
 
-#: gitk:11249
+#: gitk:12405
 msgid "Command line"
 msgstr "Ligne de commande"
+
+#~ msgid "SHA1 ID: "
+#~ msgstr "ID SHA1 :"
+
+#~ msgid "next"
+#~ msgstr "suivant"
+
+#~ msgid "prev"
+#~ msgstr "précédent"
+
+#~ msgid "CDate"
+#~ msgstr "CDate"
+
+#~ msgid "- stopping\n"
+#~ msgstr "- arrêt en cours\n"
+
+#~ msgid ""
+#~ "Sorry, gitk cannot run with this version of Tcl/Tk.\n"
+#~ " Gitk requires at least Tcl/Tk 8.4."
+#~ msgstr ""
+#~ "Désolé, gitk ne peut être exécuté avec cette version de Tcl/Tk.\n"
+#~ " Gitk requiert Tcl/Tk version 8.4 ou supérieur."
+
+#~ msgid "Cannot find the git directory \"%s\"."
+#~ msgstr "Impossible de trouver le répertoire git \"%s\"."
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/hu.msg /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/hu.msg
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/hu.msg	2017-10-10 12:31:59.114631528 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/hu.msg	2017-10-10 13:04:28.166560096 +0800
@@ -1,7 +1,7 @@
-set ::msgcat::header "Project-Id-Version: git-gui\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2009-12-14 13:33+0100\nPO-Revision-Date: 2009-12-14 14:04+0100\nLast-Translator: Laszlo Papp <djszapi@archlinux.us>\nLanguage-Team: Hungarian\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"
+set ::msgcat::header "Project-Id-Version: git-gui\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2015-03-15 14:37+1100\nPO-Revision-Date: 2009-12-14 14:04+0100\nLast-Translator: Laszlo Papp <djszapi@archlinux.us>\nLanguage-Team: Hungarian\nLanguage: \nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"
 ::msgcat::mcset hu "Couldn't get list of unmerged files:" "Nem siker\u00fclt let\u00f6lteni az unmerged f\u00e1jl list\u00e1t:"
 ::msgcat::mcset hu "Error parsing revisions:" "Hiba t\u00f6rt\u00e9nt \u00e9rtelmez\u00e9s k\u00f6zben:"
 ::msgcat::mcset hu "Error executing --argscmd command:" "Hiba t\u00f6rt\u00e9nt a v\u00e9grehajt\u00e1skor --argscmd parancs:"
 ::msgcat::mcset hu "No files selected: --merge specified but no files are unmerged." "Nincsen f\u00e1jl kiv\u00e1lasztva: --merge megadve, de egyetlen f\u00e1jl sem unmerged."
 ::msgcat::mcset hu "No files selected: --merge specified but no unmerged files are within file limit." "Nincsen f\u00e1jl kiv\u00e1lasztva: --merge megadva, de nincsenek unmerged f\u00e1jlok a f\u00e1jlon bel\u00fcl limit."
 ::msgcat::mcset hu "Error executing git log:" "Hiba t\u00f6rt\u00e9nt a git log v\u00e9grehajt\u00e1sa k\u00f6zben:"
@@ -27,17 +27,15 @@
 ::msgcat::mcset hu "Delete view" "N\u00e9zet t\u00f6rl\u00e9se"
 ::msgcat::mcset hu "All files" "Minden f\u00e1jl"
 ::msgcat::mcset hu "View" "N\u00e9zet"
 ::msgcat::mcset hu "About gitk" "Gitk n\u00e9vjegy"
 ::msgcat::mcset hu "Key bindings" "Billenty\u0171kombin\u00e1ci\u00f3"
 ::msgcat::mcset hu "Help" "Seg\u00edts\u00e9g"
-::msgcat::mcset hu "SHA1 ID: " "SHA1 ID: "
+::msgcat::mcset hu "SHA1 ID:" "SHA1 ID:"
 ::msgcat::mcset hu "Row" "Sor"
 ::msgcat::mcset hu "Find" "Keres\u00e9s"
-::msgcat::mcset hu "next" "k\u00f6vetkez\u0151"
-::msgcat::mcset hu "prev" "el\u0151z\u0151"
 ::msgcat::mcset hu "commit" "commit"
 ::msgcat::mcset hu "containing:" "tartalmaz\u00e1s:"
 ::msgcat::mcset hu "touching paths:" "\u00e9rintend\u0151 \u00fatvonalak:"
 ::msgcat::mcset hu "adding/removing string:" "string hozz\u00e1ad\u00e1sa/t\u00f6rl\u00e9se:"
 ::msgcat::mcset hu "Exact" "Pontos"
 ::msgcat::mcset hu "IgnCase" "Kis/nagy bet\u0171 nem sz\u00e1m\u00edt"
@@ -72,22 +70,18 @@
 ::msgcat::mcset hu "Highlight this too" "Emeld ki ezt is"
 ::msgcat::mcset hu "Highlight this only" "Csak ezt emeld ki"
 ::msgcat::mcset hu "External diff" "K\u00fcls\u0151 diff"
 ::msgcat::mcset hu "Blame parent commit" "Blame sz\u00fcl\u0151 kommitra"
 ::msgcat::mcset hu "Show origin of this line" "Mutasd meg ennek a sornak az eredet\u00e9t"
 ::msgcat::mcset hu "Run git gui blame on this line" "Futtasd a git gui blame-t ezen a soron"
-::msgcat::mcset hu "\nGitk - a commit viewer for git\n\nCopyright \\u00a9 2005-2010 Paul Mackerras\n\nUse and redistribute under the terms of the GNU General Public License" "\nGitk - commit n\u00e9zeget\u0151 a githez\n\nSzerz\u0151i jog \\u00a9 2005-2010 Paul Mackerras\n\nHaszn\u00e1ld \u00e9s terjeszd a GNU General Public License felt\u00e9telei mellett"
 ::msgcat::mcset hu "Close" "Bez\u00e1r\u00e1s"
 ::msgcat::mcset hu "Gitk key bindings" "Gitk-billenty\u0171 hozz\u00e1rendel\u00e9s"
 ::msgcat::mcset hu "Gitk key bindings:" "Gitk-billenty\u0171 hozza\u00e1rendel\u00e9s:"
 ::msgcat::mcset hu "<%s-Q>\u0009\u0009Quit" "<%s-Q>\u0009\u0009Kil\u00e9p\u00e9s"
 ::msgcat::mcset hu "<Home>\u0009\u0009Move to first commit" "<Pos1>\u0009\u0009Els\u0151 commithoz"
 ::msgcat::mcset hu "<End>\u0009\u0009Move to last commit" "<Ende>\u0009\u0009Utols\u00f3 commithoz"
-::msgcat::mcset hu "<Up>, p, i\u0009Move up one commit" "<Hoch>, p, i\u0009Egy committal feljebb"
-::msgcat::mcset hu "<Down>, n, k\u0009Move down one commit" "<Runter>, n, k\u0009Egy committal lejjebb"
-::msgcat::mcset hu "<Left>, z, j\u0009Go back in history list" "<Links>, z, j\u0009Vissza a history list\u00e1ba"
 ::msgcat::mcset hu "<Right>, x, l\u0009Go forward in history list" "<Rechts>, x, l\u0009El\u0151re a history list\u00e1ba"
 ::msgcat::mcset hu "<PageUp>\u0009Move up one page in commit list" "<BildHoch>\u0009Egy lappal feljebb a commit list\u00e1ba"
 ::msgcat::mcset hu "<PageDown>\u0009Move down one page in commit list" "<BildRunter>\u0009Egy lappal lejjebb a commit list\u00e1ba"
 ::msgcat::mcset hu "<%s-Home>\u0009Scroll to top of commit list" "<%s-Pos1>\u0009G\u00f6rget\u00e9s a commit lista tetej\u00e9hez"
 ::msgcat::mcset hu "<%s-End>\u0009Scroll to bottom of commit list" "<%s-Ende>\u0009G\u00f6rget\u00e9s a commit lista alj\u00e1hoz"
 ::msgcat::mcset hu "<%s-Up>\u0009Scroll commit list up one line" "<%s-Hoch>\u0009Egy sorral feljebb g\u00f6rget\u00e9s a commit list\u00e1ban"
@@ -160,14 +154,12 @@
 ::msgcat::mcset hu "Gitk: edit view" "Gitk: szerkeszt\u00e9s n\u00e9zet"
 ::msgcat::mcset hu "-- criteria for selecting revisions" "-- krit\u00e9riumok a rev\u00edzi\u00f3k kiv\u00e1laszt\u00e1s\u00e1hoz"
 ::msgcat::mcset hu "View Name" "N\u00e9zet neve"
 ::msgcat::mcset hu "Apply (F5)" "Alkalmaz (F5)"
 ::msgcat::mcset hu "Error in commit selection arguments:" "Hiba t\u00f6rt\u00e9nt a commit argumentumok kiv\u00e1laszt\u00e1sa k\u00f6zben:"
 ::msgcat::mcset hu "None" "Keine"
-::msgcat::mcset hu "Date" "D\u00e1tum"
-::msgcat::mcset hu "CDate" "D\u00e1tum"
 ::msgcat::mcset hu "Descendant" "Lesz\u00e1rmazott"
 ::msgcat::mcset hu "Not descendant" "Nem lesz\u00e1rmazott"
 ::msgcat::mcset hu "Ancestor" "El\u0151d"
 ::msgcat::mcset hu "Not ancestor" "Nem el\u0151d"
 ::msgcat::mcset hu "Local changes checked in to index but not committed" "Lok\u00e1lis v\u00e1ltoztat\u00e1sok, melyek be vannak t\u00e9ve az indexbe, de m\u00e9g nincsenek commitolva"
 ::msgcat::mcset hu "Local uncommitted changes, not checked in to index" "Lok\u00e1lis nem commitolt v\u00e1ltoz\u00e1sok, nincsenek bet\u00e9ve az indexbe"
@@ -177,17 +169,17 @@
 ::msgcat::mcset hu "Child" "Gyerek"
 ::msgcat::mcset hu "Branch" "\u00c1g"
 ::msgcat::mcset hu "Follows" "K\u00f6vetkez\u0151k"
 ::msgcat::mcset hu "Precedes" "Megel\u0151z\u0151k"
 ::msgcat::mcset hu "Error getting diffs: %s" "Hiba t\u00f6rt\u00e9nt a diff-ek let\u00f6lt\u00e9se k\u00f6zben: %s"
 ::msgcat::mcset hu "Goto:" "Menj:"
-::msgcat::mcset hu "SHA1 ID:" "SHA1 ID:"
 ::msgcat::mcset hu "Short SHA1 id %s is ambiguous" "R\u00f6vid SHA1 id %s f\u00e9lre\u00e9rthet\u0151"
 ::msgcat::mcset hu "Revision %s is not known" "A(z) %s rev\u00edzi\u00f3 nem ismert"
 ::msgcat::mcset hu "SHA1 id %s is not known" "SHA1 id %s nem ismert"
 ::msgcat::mcset hu "Revision %s is not in the current view" "A(z) %s rev\u00edzi\u00f3 nincs a jelenlegi n\u00e9zetben"
+::msgcat::mcset hu "Date" "D\u00e1tum"
 ::msgcat::mcset hu "Children" "Gyerekek"
 ::msgcat::mcset hu "Reset %s branch to here" "\u00c1ll\u00edtsd vissza a %s branch-ot ide"
 ::msgcat::mcset hu "Detached head: can't reset" "Elk\u00fcl\u00f6n\u00edtett head: nem lehet vissza\u00e1ll\u00edtani"
 ::msgcat::mcset hu "Skipping merge commit " "Merge commit kihagy\u00e1sa "
 ::msgcat::mcset hu "Error getting patch ID for " "Hiba t\u00f6rt\u00e9nt a patch ID megszerz\u00e9se k\u00f6zben a k\u00f6vetkez\u0151n\u00e9l "
 ::msgcat::mcset hu " - stopping\n" " - abbahagy\u00e1s\n"
@@ -240,22 +232,19 @@
 ::msgcat::mcset hu "Error reading commit topology information; branch and preceding/following tag information will be incomplete." "Hiba t\u00f6rt\u00e9nt a commit topol\u00f3giai inform\u00e1ci\u00f3 olvas\u00e1sa k\u00f6zben; branch \u00e9sa megel\u0151z\u0151/k\u00f6vetkez\u0151 inform\u00e1ci\u00f3 nem lesz teljes."
 ::msgcat::mcset hu "Tag" "Tag"
 ::msgcat::mcset hu "Id" "Id"
 ::msgcat::mcset hu "Gitk font chooser" "Gitk-bet\u0171 kiv\u00e1laszt\u00f3"
 ::msgcat::mcset hu "B" "F"
 ::msgcat::mcset hu "I" "K"
-::msgcat::mcset hu "Gitk preferences" "Gitk be\u00e1ll\u00edt\u00e1sok"
 ::msgcat::mcset hu "Commit list display options" "Commit lista kijelz\u00e9si opci\u00f3k"
 ::msgcat::mcset hu "Maximum graph width (lines)" "Maxim\u00e1lis grafikon sz\u00e9less\u00e9g (sorok)"
 ::msgcat::mcset hu "Maximum graph width (% of pane)" "Maxim\u00e1lis grafikon sz\u00e9less\u00e9g (t\u00e1ble %-je)"
 ::msgcat::mcset hu "Show local changes" "Mutasd a lok\u00e1lis v\u00e1ltoztat\u00e1sokat"
-::msgcat::mcset hu "Auto-select SHA1" "SHA1 Automatikus kiv\u00e1laszt\u00e1sa"
 ::msgcat::mcset hu "Hide remote refs" "A t\u00e1voli refek elrejt\u00e9se"
 ::msgcat::mcset hu "Diff display options" "Diff kijelz\u0151 opci\u00f3k"
 ::msgcat::mcset hu "Tab spacing" "Tab sork\u00f6z"
-::msgcat::mcset hu "Display nearby tags" "Szomsz\u00e9dos tagek kijelz\u00e9se"
 ::msgcat::mcset hu "Limit diffs to listed paths" "Korl\u00e1tozott diffek a kilist\u00e1zott \u00fatvonalakhoz"
 ::msgcat::mcset hu "Support per-file encodings" "F\u00e1jlonk\u00e9nti k\u00f3dol\u00e1s t\u00e1mgat\u00e1sa"
 ::msgcat::mcset hu "External diff tool" "K\u00fcls\u0151 diff alkalmaz\u00e1s"
 ::msgcat::mcset hu "Choose..." "V\u00e1laszd ..."
 ::msgcat::mcset hu "General options" "\u00c1ltal\u00e1nos opci\u00f3k"
 ::msgcat::mcset hu "Use themed widgets" "T\u00e9m\u00e1zott vez\u00e9rl\u0151k haszn\u00e1lata"
@@ -278,12 +267,12 @@
 ::msgcat::mcset hu "marked line background" "megjel\u00f6lt sor h\u00e1tt\u00e9r"
 ::msgcat::mcset hu "Select bg" "V\u00e1lasszon h\u00e1tteret"
 ::msgcat::mcset hu "Fonts: press to choose" "Bet\u0171: nyomja meg a kiv\u00e1laszt\u00e1shoz"
 ::msgcat::mcset hu "Main font" "F\u0151 bet\u0171"
 ::msgcat::mcset hu "Diff display font" "Diff kijelz\u0151 bet\u0171"
 ::msgcat::mcset hu "User interface font" "Felhaszn\u00e1l\u00f3i interf\u00e9sz bet\u0171"
+::msgcat::mcset hu "Gitk preferences" "Gitk be\u00e1ll\u00edt\u00e1sok"
 ::msgcat::mcset hu "Gitk: choose color for %s" "Gitk: v\u00e1lasszon sz\u00ednt a %s-ra"
 ::msgcat::mcset hu "Cannot find a git repository here." "Nem tal\u00e1lhat\u00fc git repository itt."
-::msgcat::mcset hu "Cannot find the git directory \"%s\"." "Nem tal\u00e1lhat\u00f3 a \"%s\" k\u00f6nyvt\u00e1r."
 ::msgcat::mcset hu "Ambiguous argument '%s': both revision and filename" "F\u00e9lre\u00e9rthet\u0151 argumentum '%s': rev\u00edzi\u00f3 \u00e9s f\u00e1jln\u00e9v is"
 ::msgcat::mcset hu "Bad arguments to gitk:" "Rossz gitk argumentumok:"
 ::msgcat::mcset hu "Command line" "Parancs sor"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/hu.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/hu.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/hu.po	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/hu.po	2015-05-01 03:12:02.000000000 +0800
@@ -5,1273 +5,1384 @@
 # Laszlo Papp <laszlo.papp@arhungary.hu>, 2009.
 #
 msgid ""
 msgstr ""
 "Project-Id-Version: git-gui\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-12-14 13:33+0100\n"
+"POT-Creation-Date: 2015-03-15 14:37+1100\n"
 "PO-Revision-Date: 2009-12-14 14:04+0100\n"
 "Last-Translator: Laszlo Papp <djszapi@archlinux.us>\n"
 "Language-Team: Hungarian\n"
+"Language: \n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
 
-#: gitk:115
+#: gitk:140
 msgid "Couldn't get list of unmerged files:"
 msgstr "Nem sikerült letölteni az unmerged fájl listát:"
 
-#: gitk:271
+#: gitk:212 gitk:2381
+msgid "Color words"
+msgstr ""
+
+#: gitk:217 gitk:2381 gitk:8201 gitk:8234
+msgid "Markup words"
+msgstr ""
+
+#: gitk:324
 msgid "Error parsing revisions:"
 msgstr "Hiba történt értelmezés közben:"
 
-#: gitk:326
+#: gitk:380
 msgid "Error executing --argscmd command:"
 msgstr "Hiba történt a végrehajtáskor --argscmd parancs:"
 
-#: gitk:339
+#: gitk:393
 msgid "No files selected: --merge specified but no files are unmerged."
 msgstr ""
 "Nincsen fájl kiválasztva: --merge megadve, de egyetlen fájl sem unmerged."
 
-#: gitk:342
+#: gitk:396
 msgid ""
 "No files selected: --merge specified but no unmerged files are within file "
 "limit."
 msgstr ""
 "Nincsen fájl kiválasztva: --merge megadva, de nincsenek unmerged fájlok a "
 "fájlon belül limit."
 
-#: gitk:364 gitk:511
+#: gitk:418 gitk:566
 msgid "Error executing git log:"
 msgstr "Hiba történt a git log végrehajtása közben:"
 
-#: gitk:382 gitk:527
+#: gitk:436 gitk:582
 msgid "Reading"
 msgstr "Olvasás"
 
-#: gitk:442 gitk:4258
+#: gitk:496 gitk:4508
 msgid "Reading commits..."
 msgstr "Commitok olvasása ..."
 
-#: gitk:445 gitk:1575 gitk:4261
+#: gitk:499 gitk:1637 gitk:4511
 msgid "No commits selected"
 msgstr "Nincsen commit kiválasztva"
 
-#: gitk:1451
+#: gitk:1511
 msgid "Can't parse git log output:"
 msgstr "Nem lehet értelmezni a git log kimenetét:"
 
-#: gitk:1671
+#: gitk:1740
 msgid "No commit information available"
 msgstr "Nincsen elérhető commit információ"
 
-#: gitk:1813
+#: gitk:1897
 msgid "mc"
 msgstr "mc"
 
-#: gitk:1848 gitk:4051 gitk:9029 gitk:10570 gitk:10789
+#: gitk:1932 gitk:4298 gitk:9650 gitk:11220 gitk:11500
 msgid "OK"
 msgstr "OK"
 
-#: gitk:1850 gitk:4053 gitk:8629 gitk:8703 gitk:8813 gitk:8862 gitk:9031
-#: gitk:10571 gitk:10790
+#: gitk:1934 gitk:4300 gitk:9177 gitk:9256 gitk:9372 gitk:9421 gitk:9652
+#: gitk:11221 gitk:11501
 msgid "Cancel"
 msgstr "Visszavonás"
 
-#: gitk:1972
+#: gitk:2069
 msgid "Update"
 msgstr "Frissités"
 
-#: gitk:1973
+#: gitk:2070
 msgid "Reload"
 msgstr "Újratöltés"
 
-#: gitk:1974
+#: gitk:2071
 msgid "Reread references"
 msgstr "Referenciák újraolvasása"
 
-#: gitk:1975
+#: gitk:2072
 msgid "List references"
 msgstr "Referenciák listázása"
 
-#: gitk:1977
+#: gitk:2074
 msgid "Start git gui"
 msgstr "Git gui indítása"
 
-#: gitk:1979
+#: gitk:2076
 msgid "Quit"
 msgstr "Kilépés"
 
-#: gitk:1971
+#: gitk:2068
 msgid "File"
 msgstr "Fájl"
 
-#: gitk:1983
+#: gitk:2080
 msgid "Preferences"
 msgstr "Beállítások"
 
-#: gitk:1982
+#: gitk:2079
 msgid "Edit"
 msgstr "Szerkesztés"
 
-#: gitk:1987
+#: gitk:2084
 msgid "New view..."
 msgstr "Új nézet ..."
 
-#: gitk:1988
+#: gitk:2085
 msgid "Edit view..."
 msgstr "Nézet szerkesztése ..."
 
-#: gitk:1989
+#: gitk:2086
 msgid "Delete view"
 msgstr "Nézet törlése"
 
-#: gitk:1991
+#: gitk:2088
 msgid "All files"
 msgstr "Minden fájl"
 
-#: gitk:1986 gitk:3805
+#: gitk:2083 gitk:4050
 msgid "View"
 msgstr "Nézet"
 
-#: gitk:1996 gitk:2006 gitk:2777
+#: gitk:2093 gitk:2103 gitk:3009
 msgid "About gitk"
 msgstr "Gitk névjegy"
 
-#: gitk:1997 gitk:2011
+#: gitk:2094 gitk:2108
 msgid "Key bindings"
 msgstr "Billentyűkombináció"
 
-#: gitk:1995 gitk:2010
+#: gitk:2092 gitk:2107
 msgid "Help"
 msgstr "Segítség"
 
-#: gitk:2088
-msgid "SHA1 ID: "
-msgstr "SHA1 ID: "
+#: gitk:2185 gitk:8633
+msgid "SHA1 ID:"
+msgstr "SHA1 ID:"
 
-#: gitk:2119
+#: gitk:2229
 msgid "Row"
 msgstr "Sor"
 
-#: gitk:2157
+#: gitk:2267
 msgid "Find"
 msgstr "Keresés"
 
-#: gitk:2158
-msgid "next"
-msgstr "következő"
-
-#: gitk:2159
-msgid "prev"
-msgstr "előző"
-
-#: gitk:2160
+#: gitk:2295
 msgid "commit"
 msgstr "commit"
 
-#: gitk:2163 gitk:2165 gitk:4419 gitk:4442 gitk:4466 gitk:6407 gitk:6479
-#: gitk:6563
+#: gitk:2299 gitk:2301 gitk:4669 gitk:4692 gitk:4716 gitk:6736 gitk:6808
+#: gitk:6893
 msgid "containing:"
 msgstr "tartalmazás:"
 
-#: gitk:2166 gitk:3287 gitk:3292 gitk:4494
+#: gitk:2302 gitk:3522 gitk:3527 gitk:4745
 msgid "touching paths:"
 msgstr "érintendő útvonalak:"
 
-#: gitk:2167 gitk:4499
+#: gitk:2303 gitk:4759
 msgid "adding/removing string:"
 msgstr "string hozzáadása/törlése:"
 
-#: gitk:2176 gitk:2178
+#: gitk:2304 gitk:4761
+msgid "changing lines matching:"
+msgstr ""
+
+#: gitk:2313 gitk:2315 gitk:4748
 msgid "Exact"
 msgstr "Pontos"
 
-#: gitk:2178 gitk:4574 gitk:6375
+#: gitk:2315 gitk:4836 gitk:6704
 msgid "IgnCase"
 msgstr "Kis/nagy betű nem számít"
 
-#: gitk:2178 gitk:4468 gitk:4572 gitk:6371
+#: gitk:2315 gitk:4718 gitk:4834 gitk:6700
 msgid "Regexp"
 msgstr "Regexp"
 
-#: gitk:2180 gitk:2181 gitk:4593 gitk:4623 gitk:4630 gitk:6499 gitk:6567
+#: gitk:2317 gitk:2318 gitk:4856 gitk:4886 gitk:4893 gitk:6829 gitk:6897
 msgid "All fields"
 msgstr "Minden mező"
 
-#: gitk:2181 gitk:4591 gitk:4623 gitk:6438
+#: gitk:2318 gitk:4853 gitk:4886 gitk:6767
 msgid "Headline"
 msgstr "Főcím"
 
-#: gitk:2182 gitk:4591 gitk:6438 gitk:6567 gitk:7000
+#: gitk:2319 gitk:4853 gitk:6767 gitk:6897 gitk:7370
 msgid "Comments"
 msgstr "Megjegyzések"
 
-#: gitk:2182 gitk:4591 gitk:4595 gitk:4630 gitk:6438 gitk:6935 gitk:8280
-#: gitk:8295
+#: gitk:2319 gitk:4853 gitk:4858 gitk:4893 gitk:6767 gitk:7305 gitk:8811
+#: gitk:8826
 msgid "Author"
 msgstr "Szerző"
 
-#: gitk:2182 gitk:4591 gitk:6438 gitk:6937
+#: gitk:2319 gitk:4853 gitk:6767 gitk:7307
 msgid "Committer"
 msgstr "Commitoló"
 
-#: gitk:2213
+#: gitk:2350
 msgid "Search"
 msgstr "Keresés"
 
-#: gitk:2221
+#: gitk:2358
 msgid "Diff"
 msgstr "Diff"
 
-#: gitk:2223
+#: gitk:2360
 msgid "Old version"
 msgstr "Régi verzió"
 
-#: gitk:2225
+#: gitk:2362
 msgid "New version"
 msgstr "Új verzió"
 
-#: gitk:2227
+#: gitk:2364
 msgid "Lines of context"
 msgstr "Tartalmi sorok"
 
-#: gitk:2237
+#: gitk:2374
 msgid "Ignore space change"
 msgstr "Space váltás mellőzése"
 
-#: gitk:2296
+#: gitk:2378 gitk:2380 gitk:7940 gitk:8187
+msgid "Line diff"
+msgstr ""
+
+#: gitk:2445
 msgid "Patch"
 msgstr "Patch"
 
-#: gitk:2298
+#: gitk:2447
 msgid "Tree"
 msgstr "Tree"
 
-#: gitk:2453 gitk:2470
+#: gitk:2616 gitk:2636
 msgid "Diff this -> selected"
 msgstr "Diff ezeket -> kiválasztott"
 
-#: gitk:2454 gitk:2471
+#: gitk:2617 gitk:2637
 msgid "Diff selected -> this"
 msgstr "Diff kiválasztottakat -> ezt"
 
-#: gitk:2455 gitk:2472
+#: gitk:2618 gitk:2638
 msgid "Make patch"
 msgstr "Patch készítése"
 
-#: gitk:2456 gitk:8687
+#: gitk:2619 gitk:9235
 msgid "Create tag"
 msgstr "Tag készítése"
 
-#: gitk:2457 gitk:8793
+#: gitk:2620 gitk:9352
 msgid "Write commit to file"
 msgstr "Commit fáljba írása"
 
-#: gitk:2458 gitk:8850
+#: gitk:2621 gitk:9409
 msgid "Create new branch"
 msgstr "Új branch készítése"
 
-#: gitk:2459
+#: gitk:2622
 msgid "Cherry-pick this commit"
 msgstr "Cherry-pick erre a commitra"
 
-#: gitk:2460
+#: gitk:2623
 msgid "Reset HEAD branch to here"
 msgstr "HEAD branch újraindítása ide"
 
-#: gitk:2461
+#: gitk:2624
 msgid "Mark this commit"
 msgstr "Ezen commit megjelölése"
 
-#: gitk:2462
+#: gitk:2625
 msgid "Return to mark"
 msgstr "Visszatérés a megjelöléshez"
 
-#: gitk:2463
+#: gitk:2626
 msgid "Find descendant of this and mark"
 msgstr "Találd meg ezen utódokat és jelöld meg"
 
-#: gitk:2464
+#: gitk:2627
 msgid "Compare with marked commit"
 msgstr "Összehasonlítás a megjelölt commit-tal"
 
-#: gitk:2478
+#: gitk:2628 gitk:2639
+#, fuzzy
+msgid "Diff this -> marked commit"
+msgstr "Diff ezeket -> kiválasztott"
+
+#: gitk:2629 gitk:2640
+#, fuzzy
+msgid "Diff marked commit -> this"
+msgstr "Diff kiválasztottakat -> ezt"
+
+#: gitk:2630
+#, fuzzy
+msgid "Revert this commit"
+msgstr "Ezen commit megjelölése"
+
+#: gitk:2646
 msgid "Check out this branch"
 msgstr "Check out ezt a branchot"
 
-#: gitk:2479
+#: gitk:2647
 msgid "Remove this branch"
 msgstr "Töröld ezt a branch-ot"
 
-#: gitk:2486
+#: gitk:2654
 msgid "Highlight this too"
 msgstr "Emeld ki ezt is"
 
-#: gitk:2487
+#: gitk:2655
 msgid "Highlight this only"
 msgstr "Csak ezt emeld ki"
 
-#: gitk:2488
+#: gitk:2656
 msgid "External diff"
 msgstr "Külső diff"
 
-#: gitk:2489
+#: gitk:2657
 msgid "Blame parent commit"
 msgstr "Blame szülő kommitra"
 
-#: gitk:2496
+#: gitk:2664
 msgid "Show origin of this line"
 msgstr "Mutasd meg ennek a sornak az eredetét"
 
-#: gitk:2497
+#: gitk:2665
 msgid "Run git gui blame on this line"
 msgstr "Futtasd a git gui blame-t ezen a soron"
 
-#: gitk:2779
+#: gitk:3011
+#, fuzzy
 msgid ""
 "\n"
 "Gitk - a commit viewer for git\n"
 "\n"
-"Copyright \\u00a9 2005-2010 Paul Mackerras\n"
+"Copyright © 2005-2014 Paul Mackerras\n"
 "\n"
 "Use and redistribute under the terms of the GNU General Public License"
 msgstr ""
 "\n"
 "Gitk - commit nézegető a githez\n"
 "\n"
 "Szerzői jog \\u00a9 2005-2010 Paul Mackerras\n"
 "\n"
 "Használd és terjeszd a GNU General Public License feltételei mellett"
 
-#: gitk:2787 gitk:2851 gitk:9215
+#: gitk:3019 gitk:3085 gitk:9836
 msgid "Close"
 msgstr "Bezárás"
 
-#: gitk:2808
+#: gitk:3040
 msgid "Gitk key bindings"
 msgstr "Gitk-billentyű hozzárendelés"
 
-#: gitk:2811
+#: gitk:3043
 msgid "Gitk key bindings:"
 msgstr "Gitk-billentyű hozzaárendelés:"
 
-#: gitk:2813
+#: gitk:3045
 #, tcl-format
 msgid "<%s-Q>\t\tQuit"
 msgstr "<%s-Q>\t\tKilépés"
 
-#: gitk:2814
+#: gitk:3046
+#, fuzzy, tcl-format
+msgid "<%s-W>\t\tClose window"
+msgstr "<%s-F>\t\tKeresés"
+
+#: gitk:3047
 msgid "<Home>\t\tMove to first commit"
 msgstr "<Pos1>\t\tElső commithoz"
 
-#: gitk:2815
+#: gitk:3048
 msgid "<End>\t\tMove to last commit"
 msgstr "<Ende>\t\tUtolsó commithoz"
 
-#: gitk:2816
-msgid "<Up>, p, i\tMove up one commit"
+#: gitk:3049
+#, fuzzy
+msgid "<Up>, p, k\tMove up one commit"
 msgstr "<Hoch>, p, i\tEgy committal feljebb"
 
-#: gitk:2817
-msgid "<Down>, n, k\tMove down one commit"
+#: gitk:3050
+#, fuzzy
+msgid "<Down>, n, j\tMove down one commit"
 msgstr "<Runter>, n, k\tEgy committal lejjebb"
 
-#: gitk:2818
-msgid "<Left>, z, j\tGo back in history list"
+#: gitk:3051
+#, fuzzy
+msgid "<Left>, z, h\tGo back in history list"
 msgstr "<Links>, z, j\tVissza a history listába"
 
-#: gitk:2819
+#: gitk:3052
 msgid "<Right>, x, l\tGo forward in history list"
 msgstr "<Rechts>, x, l\tElőre a history listába"
 
-#: gitk:2820
+#: gitk:3053
+#, tcl-format
+msgid "<%s-n>\tGo to n-th parent of current commit in history list"
+msgstr ""
+
+#: gitk:3054
 msgid "<PageUp>\tMove up one page in commit list"
 msgstr "<BildHoch>\tEgy lappal feljebb a commit listába"
 
-#: gitk:2821
+#: gitk:3055
 msgid "<PageDown>\tMove down one page in commit list"
 msgstr "<BildRunter>\tEgy lappal lejjebb a commit listába"
 
-#: gitk:2822
+#: gitk:3056
 #, tcl-format
 msgid "<%s-Home>\tScroll to top of commit list"
 msgstr "<%s-Pos1>\tGörgetés a commit lista tetejéhez"
 
-#: gitk:2823
+#: gitk:3057
 #, tcl-format
 msgid "<%s-End>\tScroll to bottom of commit list"
 msgstr "<%s-Ende>\tGörgetés a commit lista aljához"
 
-#: gitk:2824
+#: gitk:3058
 #, tcl-format
 msgid "<%s-Up>\tScroll commit list up one line"
 msgstr "<%s-Hoch>\tEgy sorral feljebb görgetés a commit listában"
 
-#: gitk:2825
+#: gitk:3059
 #, tcl-format
 msgid "<%s-Down>\tScroll commit list down one line"
 msgstr "<%s-Runter>\tEgy sorral lejjebb görgetés a commit listában"
 
-#: gitk:2826
+#: gitk:3060
 #, tcl-format
 msgid "<%s-PageUp>\tScroll commit list up one page"
 msgstr "<%s-BildHoch>\tEgy lappal feljebb görgetés a commit listában"
 
-#: gitk:2827
+#: gitk:3061
 #, tcl-format
 msgid "<%s-PageDown>\tScroll commit list down one page"
 msgstr "<%s-BildRunter>\tEgy sorral lejjebb görgetés a commit listában"
 
-#: gitk:2828
+#: gitk:3062
 msgid "<Shift-Up>\tFind backwards (upwards, later commits)"
 msgstr "<Umschalt-Hoch>\tKeresés visszafele (felfele, utolsó commitok)"
 
-#: gitk:2829
+#: gitk:3063
 msgid "<Shift-Down>\tFind forwards (downwards, earlier commits)"
 msgstr "<Umschalt-Runter>\tKeresés előre (lefelé; korábbi commitok)"
 
-#: gitk:2830
+#: gitk:3064
 msgid "<Delete>, b\tScroll diff view up one page"
 msgstr "<Entf>, b\t\tEgy lappal feljebb görgetés a diff nézetben"
 
-#: gitk:2831
+#: gitk:3065
 msgid "<Backspace>\tScroll diff view up one page"
 msgstr "<Löschtaste>\tEgy lappal feljebb görgetés a diff nézetben"
 
-#: gitk:2832
+#: gitk:3066
 msgid "<Space>\t\tScroll diff view down one page"
 msgstr "<Leertaste>\tEgy lappal lejjebb görgetés a diff nézetben"
 
-#: gitk:2833
+#: gitk:3067
 msgid "u\t\tScroll diff view up 18 lines"
 msgstr "u\t\t18 sorral felfelé görgetés diff nézetben"
 
-#: gitk:2834
+#: gitk:3068
 msgid "d\t\tScroll diff view down 18 lines"
 msgstr "d\t\t18 sorral lejjebb görgetés a diff nézetben"
 
-#: gitk:2835
+#: gitk:3069
 #, tcl-format
 msgid "<%s-F>\t\tFind"
 msgstr "<%s-F>\t\tKeresés"
 
-#: gitk:2836
+#: gitk:3070
 #, tcl-format
 msgid "<%s-G>\t\tMove to next find hit"
 msgstr "<%s-G>\t\tKövetkező találathoz"
 
-#: gitk:2837
+#: gitk:3071
 msgid "<Return>\tMove to next find hit"
 msgstr "<Eingabetaste>\tKövetkező találathoz"
 
-#: gitk:2838
+#: gitk:3072
 msgid "/\t\tFocus the search box"
 msgstr "/\t\tLépj a keresési mezőre"
 
-#: gitk:2839
+#: gitk:3073
 msgid "?\t\tMove to previous find hit"
 msgstr "?\t\tElőző találathoz"
 
-#: gitk:2840
+#: gitk:3074
 msgid "f\t\tScroll diff view to next file"
 msgstr "f\t\tKövetkező fájlra görgetés diff nézetben"
 
-#: gitk:2841
+#: gitk:3075
 #, tcl-format
 msgid "<%s-S>\t\tSearch for next hit in diff view"
 msgstr "<%s-S>\t\tKövetkező találatra keresés diff nézetben"
 
-#: gitk:2842
+#: gitk:3076
 #, tcl-format
 msgid "<%s-R>\t\tSearch for previous hit in diff view"
 msgstr "<%s-R>\t\tElőző találatra keresés diff nézetben"
 
-#: gitk:2843
+#: gitk:3077
 #, tcl-format
 msgid "<%s-KP+>\tIncrease font size"
 msgstr "<%s-Nummerblock-Plus>\tBetűméret növelése"
 
-#: gitk:2844
+#: gitk:3078
 #, tcl-format
 msgid "<%s-plus>\tIncrease font size"
 msgstr "<%s-Plus>\tBetűméret növelése"
 
-#: gitk:2845
+#: gitk:3079
 #, tcl-format
 msgid "<%s-KP->\tDecrease font size"
 msgstr "<%s-Nummernblock-Minus> Betűméret csökkentése"
 
-#: gitk:2846
+#: gitk:3080
 #, tcl-format
 msgid "<%s-minus>\tDecrease font size"
 msgstr "<%s-Minus>\tBetűméret csökkentése"
 
-#: gitk:2847
+#: gitk:3081
 msgid "<F5>\t\tUpdate"
 msgstr "<F5>\t\tFrissítés"
 
-#: gitk:3302 gitk:3311
+#: gitk:3546 gitk:3555
 #, tcl-format
 msgid "Error creating temporary directory %s:"
 msgstr "Hiba történt az ideiglenes könyvtár létrehozása közben %s:"
 
-#: gitk:3324
+#: gitk:3568
 #, tcl-format
 msgid "Error getting \"%s\" from %s:"
 msgstr "Hiba történt \"%s\" letöltése közben %s-ről:"
 
-#: gitk:3387
+#: gitk:3631
 msgid "command failed:"
 msgstr "parancs hiba:"
 
-#: gitk:3536
+#: gitk:3780
 msgid "No such commit"
 msgstr "Nincs ilyen commit"
 
-#: gitk:3550
+#: gitk:3794
 msgid "git gui blame: command failed:"
 msgstr "git gui blame: parancs hiba:"
 
-#: gitk:3581
+#: gitk:3825
 #, tcl-format
 msgid "Couldn't read merge head: %s"
 msgstr "Nem sikerült a Merge head olvasása: %s"
 
-#: gitk:3589
+#: gitk:3833
 #, tcl-format
 msgid "Error reading index: %s"
 msgstr "Hiba történt az index olvasása közben: %s"
 
-#: gitk:3614
+#: gitk:3858
 #, tcl-format
 msgid "Couldn't start git blame: %s"
 msgstr "Nem sikerült a git blame indítása: %s"
 
-#: gitk:3617 gitk:6406
+#: gitk:3861 gitk:6735
 msgid "Searching"
 msgstr "Keresés"
 
-#: gitk:3649
+#: gitk:3893
 #, tcl-format
 msgid "Error running git blame: %s"
 msgstr "Hiba történt a git blame futtatása közben: %s"
 
-#: gitk:3677
+#: gitk:3921
 #, tcl-format
 msgid "That line comes from commit %s,  which is not in this view"
 msgstr ""
 "A %s commitból származik az a sor, amelyik nem található ebben a nézetben"
 
-#: gitk:3691
+#: gitk:3935
 msgid "External diff viewer failed:"
 msgstr "Külső diff nézegető hiba:"
 
-#: gitk:3809
+#: gitk:4053
 msgid "Gitk view definition"
 msgstr "Gitk nézet meghatározása"
 
-#: gitk:3813
+#: gitk:4057
 msgid "Remember this view"
 msgstr "Maradj ennél a nézetnél"
 
-#: gitk:3814
+#: gitk:4058
 msgid "References (space separated list):"
 msgstr "Referenciák (szóközzel tagolt lista"
 
-#: gitk:3815
+#: gitk:4059
 msgid "Branches & tags:"
 msgstr "Branch-ek & tagek:"
 
-#: gitk:3816
+#: gitk:4060
 msgid "All refs"
 msgstr "Minden ref"
 
-#: gitk:3817
+#: gitk:4061
 msgid "All (local) branches"
 msgstr "Minden (helyi) branch"
 
-#: gitk:3818
+#: gitk:4062
 msgid "All tags"
 msgstr "Minden tag"
 
-#: gitk:3819
+#: gitk:4063
 msgid "All remote-tracking branches"
 msgstr "Minden távoli követő branch"
 
-#: gitk:3820
+#: gitk:4064
 msgid "Commit Info (regular expressions):"
 msgstr "Commit Infó (reguláris kifejezés):"
 
-#: gitk:3821
+#: gitk:4065
 msgid "Author:"
 msgstr "Szerző:"
 
-#: gitk:3822
+#: gitk:4066
 msgid "Committer:"
 msgstr "Commitoló:"
 
-#: gitk:3823
+#: gitk:4067
 msgid "Commit Message:"
 msgstr "Commit üzenet:"
 
-#: gitk:3824
+#: gitk:4068
 msgid "Matches all Commit Info criteria"
 msgstr "Egyezik minen Commit Infó feltétellel"
 
-#: gitk:3825
+#: gitk:4069
+#, fuzzy
+msgid "Matches none Commit Info criteria"
+msgstr "Egyezik minen Commit Infó feltétellel"
+
+#: gitk:4070
 msgid "Changes to Files:"
 msgstr "Fájl változások:"
 
-#: gitk:3826
+#: gitk:4071
 msgid "Fixed String"
 msgstr "Fix String"
 
-#: gitk:3827
+#: gitk:4072
 msgid "Regular Expression"
 msgstr "Reguláris kifejezés"
 
-#: gitk:3828
+#: gitk:4073
 msgid "Search string:"
 msgstr "Keresés szöveg:"
 
-#: gitk:3829
+#: gitk:4074
 msgid ""
 "Commit Dates (\"2 weeks ago\", \"2009-03-17 15:27:38\", \"March 17, 2009 "
 "15:27:38\"):"
 msgstr ""
 "Commit Dátumok (\"2 weeks ago\", \"2009-03-17 15:27:38\", \"March 17, 2009 "
 "15:27:38\"):"
 
-#: gitk:3830
+#: gitk:4075
 msgid "Since:"
 msgstr "Ettől:"
 
-#: gitk:3831
+#: gitk:4076
 msgid "Until:"
 msgstr "Eddig:"
 
-#: gitk:3832
+#: gitk:4077
 msgid "Limit and/or skip a number of revisions (positive integer):"
 msgstr "Limitálva és/vagy kihagyva egy adott számú revíziót (pozitív egész):"
 
-#: gitk:3833
+#: gitk:4078
 msgid "Number to show:"
 msgstr "Mutatandó szám:"
 
-#: gitk:3834
+#: gitk:4079
 msgid "Number to skip:"
 msgstr "Kihagyandó szám:"
 
-#: gitk:3835
+#: gitk:4080
 msgid "Miscellaneous options:"
 msgstr "Különféle opciók:"
 
-#: gitk:3836
+#: gitk:4081
 msgid "Strictly sort by date"
 msgstr "Szigorú rendezás dátum alapján"
 
-#: gitk:3837
+#: gitk:4082
 msgid "Mark branch sides"
 msgstr "Jelölje meg az ágakat"
 
-#: gitk:3838
+#: gitk:4083
 msgid "Limit to first parent"
 msgstr "Korlátozás az első szülőre"
 
-#: gitk:3839
+#: gitk:4084
 msgid "Simple history"
 msgstr "Egyszerű history"
 
-#: gitk:3840
+#: gitk:4085
 msgid "Additional arguments to git log:"
 msgstr "További argumentok a git log-hoz:"
 
-#: gitk:3841
+#: gitk:4086
 msgid "Enter files and directories to include, one per line:"
 msgstr "Fájlok és könyvtárak bejegyzése amiket tartalmaz, soronként:"
 
-#: gitk:3842
+#: gitk:4087
 msgid "Command to generate more commits to include:"
 msgstr "Parancs több tartalmazó commit generálására:"
 
-#: gitk:3964
+#: gitk:4211
 msgid "Gitk: edit view"
 msgstr "Gitk: szerkesztés nézet"
 
-#: gitk:3972
+#: gitk:4219
 msgid "-- criteria for selecting revisions"
 msgstr "-- kritériumok a revíziók kiválasztásához"
 
-#: gitk:3977
+#: gitk:4224
 msgid "View Name"
 msgstr "Nézet neve"
 
-#: gitk:4052
+#: gitk:4299
 msgid "Apply (F5)"
 msgstr "Alkalmaz (F5)"
 
-#: gitk:4090
+#: gitk:4337
 msgid "Error in commit selection arguments:"
 msgstr "Hiba történt a commit argumentumok kiválasztása közben:"
 
-#: gitk:4143 gitk:4195 gitk:4643 gitk:4657 gitk:5918 gitk:11519 gitk:11520
+#: gitk:4392 gitk:4445 gitk:4906 gitk:4920 gitk:6190 gitk:12346 gitk:12347
 msgid "None"
 msgstr "Keine"
 
-#: gitk:4591 gitk:6438 gitk:8282 gitk:8297
-msgid "Date"
-msgstr "Dátum"
-
-#: gitk:4591 gitk:6438
-msgid "CDate"
-msgstr "Dátum"
-
-#: gitk:4740 gitk:4745
+#: gitk:5003 gitk:5008
 msgid "Descendant"
 msgstr "Leszármazott"
 
-#: gitk:4741
+#: gitk:5004
 msgid "Not descendant"
 msgstr "Nem leszármazott"
 
-#: gitk:4748 gitk:4753
+#: gitk:5011 gitk:5016
 msgid "Ancestor"
 msgstr "Előd"
 
-#: gitk:4749
+#: gitk:5012
 msgid "Not ancestor"
 msgstr "Nem előd"
 
-#: gitk:5039
+#: gitk:5306
 msgid "Local changes checked in to index but not committed"
 msgstr ""
 "Lokális változtatások, melyek be vannak téve az indexbe, de még nincsenek "
 "commitolva"
 
-#: gitk:5075
+#: gitk:5342
 msgid "Local uncommitted changes, not checked in to index"
 msgstr "Lokális nem commitolt változások, nincsenek betéve az indexbe"
 
-#: gitk:6756
+#: gitk:7115
+msgid "and many more"
+msgstr ""
+
+#: gitk:7118
 msgid "many"
 msgstr "sok"
 
-#: gitk:6939
+#: gitk:7309
 msgid "Tags:"
 msgstr "Tagek:"
 
-#: gitk:6956 gitk:6962 gitk:8275
+#: gitk:7326 gitk:7332 gitk:8806
 msgid "Parent"
 msgstr "Eltern"
 
-#: gitk:6967
+#: gitk:7337
 msgid "Child"
 msgstr "Gyerek"
 
-#: gitk:6976
+#: gitk:7346
 msgid "Branch"
 msgstr "Ág"
 
-#: gitk:6979
+#: gitk:7349
 msgid "Follows"
 msgstr "Következők"
 
-#: gitk:6982
+#: gitk:7352
 msgid "Precedes"
 msgstr "Megelőzők"
 
-#: gitk:7519
+#: gitk:7947
 #, tcl-format
 msgid "Error getting diffs: %s"
 msgstr "Hiba történt a diff-ek letöltése közben: %s"
 
-#: gitk:8103
+#: gitk:8631
 msgid "Goto:"
 msgstr "Menj:"
 
-#: gitk:8105
-msgid "SHA1 ID:"
-msgstr "SHA1 ID:"
-
-#: gitk:8124
+#: gitk:8652
 #, tcl-format
 msgid "Short SHA1 id %s is ambiguous"
 msgstr "Rövid SHA1 id %s félreérthető"
 
-#: gitk:8131
+#: gitk:8659
+#, tcl-format
 msgid "Revision %s is not known"
 msgstr "A(z) %s revízió nem ismert"
 
-#: gitk:8141
+#: gitk:8669
 #, tcl-format
 msgid "SHA1 id %s is not known"
 msgstr "SHA1 id %s nem ismert"
 
-#: gitk:8143
+#: gitk:8671
 #, tcl-format
 msgid "Revision %s is not in the current view"
 msgstr "A(z) %s revízió nincs a jelenlegi nézetben"
 
-#: gitk:8285
+#: gitk:8813 gitk:8828
+msgid "Date"
+msgstr "Dátum"
+
+#: gitk:8816
 msgid "Children"
 msgstr "Gyerekek"
 
-#: gitk:8343
+#: gitk:8879
 #, tcl-format
 msgid "Reset %s branch to here"
 msgstr "Állítsd vissza a %s branch-ot ide"
 
-#: gitk:8345
+#: gitk:8881
 msgid "Detached head: can't reset"
 msgstr "Elkülönített head: nem lehet visszaállítani"
 
-#: gitk:8454 gitk:8460
+#: gitk:8986 gitk:8992
 msgid "Skipping merge commit "
 msgstr "Merge commit kihagyása "
 
-#: gitk:8469 gitk:8474
+#: gitk:9001 gitk:9006
 msgid "Error getting patch ID for "
 msgstr "Hiba történt a patch ID megszerzése közben a következőnél "
 
-#: gitk:8470 gitk:8475
+#: gitk:9002 gitk:9007
 msgid " - stopping\n"
 msgstr " - abbahagyás\n"
 
-#: gitk:8480 gitk:8483 gitk:8491 gitk:8505 gitk:8514
+#: gitk:9012 gitk:9015 gitk:9023 gitk:9037 gitk:9046
 msgid "Commit "
 msgstr "Commit "
 
-#: gitk:8484
+#: gitk:9016
 msgid ""
 " is the same patch as\n"
 "       "
 msgstr ""
 " Ugyanaz a patch mint\n"
 "       "
 
-#: gitk:8492
+#: gitk:9024
 msgid ""
 " differs from\n"
 "       "
 msgstr ""
 " különbözik innentől\n"
 "       "
 
-#: gitk:8494
+#: gitk:9026
 msgid ""
 "Diff of commits:\n"
 "\n"
 msgstr ""
 "A commitok diffje:\n"
 "\n"
 
-#: gitk:8506 gitk:8515
+#: gitk:9038 gitk:9047
 #, tcl-format
 msgid " has %s children - stopping\n"
 msgstr " %s gyereke van. abbahagyás\n"
 
-#: gitk:8534
+#: gitk:9066
+#, tcl-format
 msgid "Error writing commit to file: %s"
 msgstr "Hiba történt a commit fájlba írása közben: %s"
 
-#: gitk:8540
+#: gitk:9072
+#, tcl-format
 msgid "Error diffing commits: %s"
 msgstr "Hiba történt a commitok diffelése közben: %s"
 
-#: gitk:8570
+#: gitk:9118
 msgid "Top"
 msgstr "Teteje"
 
-#: gitk:8571
+#: gitk:9119
 msgid "From"
 msgstr "Innen"
 
-#: gitk:8576
+#: gitk:9124
 msgid "To"
 msgstr "Ide"
 
-#: gitk:8600
+#: gitk:9148
 msgid "Generate patch"
 msgstr "Patch generálása"
 
-#: gitk:8602
+#: gitk:9150
 msgid "From:"
 msgstr "Innen:"
 
-#: gitk:8611
+#: gitk:9159
 msgid "To:"
 msgstr "Ide:"
 
-#: gitk:8620
+#: gitk:9168
 msgid "Reverse"
 msgstr "Visszafele"
 
-#: gitk:8622 gitk:8807
+#: gitk:9170 gitk:9366
 msgid "Output file:"
 msgstr "Kimeneti fájl:"
 
-#: gitk:8628
+#: gitk:9176
 msgid "Generate"
 msgstr "Generálás"
 
-#: gitk:8666
+#: gitk:9214
 msgid "Error creating patch:"
 msgstr "Hiba törtét a patch készítése közben:"
 
-#: gitk:8689 gitk:8795 gitk:8852
+#: gitk:9237 gitk:9354 gitk:9411
 msgid "ID:"
 msgstr "ID:"
 
-#: gitk:8698
+#: gitk:9246
 msgid "Tag name:"
 msgstr "Tag név:"
 
-#: gitk:8702 gitk:8861
+#: gitk:9249
+msgid "Tag message is optional"
+msgstr ""
+
+#: gitk:9251
+#, fuzzy
+msgid "Tag message:"
+msgstr "Tag név:"
+
+#: gitk:9255 gitk:9420
 msgid "Create"
 msgstr "Létrehozás"
 
-#: gitk:8719
+#: gitk:9273
 msgid "No tag name specified"
 msgstr "A tag neve nincsen megadva"
 
-#: gitk:8723
+#: gitk:9277
 #, tcl-format
 msgid "Tag \"%s\" already exists"
 msgstr "%s Tag már létezik"
 
-#: gitk:8729
+#: gitk:9287
 msgid "Error creating tag:"
 msgstr "Hiba történt a tag létrehozása közben:"
 
-#: gitk:8804
+#: gitk:9363
 msgid "Command:"
 msgstr "Parancs:"
 
-#: gitk:8812
+#: gitk:9371
 msgid "Write"
 msgstr "Írás"
 
-#: gitk:8830
+#: gitk:9389
 msgid "Error writing commit:"
 msgstr "Hiba történt a commit írása közben:"
 
-#: gitk:8857
+#: gitk:9416
 msgid "Name:"
 msgstr "Név:"
 
-#: gitk:8880
+#: gitk:9439
 msgid "Please specify a name for the new branch"
 msgstr "Kérem adja meg a nevét az új branchhoz"
 
-#: gitk:8885
+#: gitk:9444
 #, tcl-format
 msgid "Branch '%s' already exists. Overwrite?"
 msgstr "%s branch már létezik. Felülírja?"
 
-#: gitk:8951
+#: gitk:9511
 #, tcl-format
 msgid "Commit %s is already included in branch %s -- really re-apply it?"
 msgstr ""
 "%s commit már benne van a %s branchban -- biztos hogy újra csinálja ?"
 "eintragen?"
 
-#: gitk:8956
+#: gitk:9516
 msgid "Cherry-picking"
 msgstr "Cherry-picking"
 
-#: gitk:8965
+#: gitk:9525
 #, tcl-format
 msgid ""
 "Cherry-pick failed because of local changes to file '%s'.\n"
 "Please commit, reset or stash your changes and try again."
 msgstr ""
 "Cherry-pick hiba történt lokális váltotások miatt a '%s' fájlban.\n"
 "Kérem commitolja, indítsa újra vagy rejtse el a változtatásait és próbálja "
 "újra."
 
-#: gitk:8971
+#: gitk:9531
 msgid ""
 "Cherry-pick failed because of merge conflict.\n"
 "Do you wish to run git citool to resolve it?"
 msgstr ""
 "Cherry-pick hiba történt merge konfliktus miatt.\n"
 "Kívánja futtatni a git citool-t a probléma megoldásához?"
 
-#: gitk:8987
+#: gitk:9547 gitk:9605
 msgid "No changes committed"
 msgstr "Nincsen változás commitolva"
 
-#: gitk:9013
+#: gitk:9574
+#, fuzzy, tcl-format
+msgid "Commit %s is not included in branch %s -- really revert it?"
+msgstr ""
+"%s commit már benne van a %s branchban -- biztos hogy újra csinálja ?"
+"eintragen?"
+
+#: gitk:9579
+#, fuzzy
+msgid "Reverting"
+msgstr "Újraindítás"
+
+#: gitk:9587
+#, fuzzy, tcl-format
+msgid ""
+"Revert failed because of local changes to the following files:%s Please "
+"commit, reset or stash  your changes and try again."
+msgstr ""
+"Cherry-pick hiba történt lokális váltotások miatt a '%s' fájlban.\n"
+"Kérem commitolja, indítsa újra vagy rejtse el a változtatásait és próbálja "
+"újra."
+
+#: gitk:9591
+#, fuzzy
+msgid ""
+"Revert failed because of merge conflict.\n"
+" Do you wish to run git citool to resolve it?"
+msgstr ""
+"Cherry-pick hiba történt merge konfliktus miatt.\n"
+"Kívánja futtatni a git citool-t a probléma megoldásához?"
+
+#: gitk:9634
 msgid "Confirm reset"
 msgstr "Újraindítás megerősítése"
 
-#: gitk:9015
+#: gitk:9636
 #, tcl-format
 msgid "Reset branch %s to %s?"
 msgstr "Újraindítja a %s branchot %s-ig?"
 
-#: gitk:9017
+#: gitk:9638
 msgid "Reset type:"
 msgstr "Újraindítás típusa:"
 
-#: gitk:9020
+#: gitk:9641
 msgid "Soft: Leave working tree and index untouched"
 msgstr "Soft: Hagyd a working tree-t és az indexet érintetlenül"
 
-#: gitk:9023
+#: gitk:9644
 msgid "Mixed: Leave working tree untouched, reset index"
 msgstr "Kevert: Hagyd a working tree-t érintetlenül, töröld az indexet"
 
-#: gitk:9026
+#: gitk:9647
 msgid ""
 "Hard: Reset working tree and index\n"
 "(discard ALL local changes)"
 msgstr ""
 "Hard: Indítsd újra a working tree-t és az indexet\n"
 "(MINDEN lokális változás eldobása)"
 
-#: gitk:9043
+#: gitk:9664
 msgid "Resetting"
 msgstr "Újraindítás"
 
-#: gitk:9103
+#: gitk:9724
 msgid "Checking out"
 msgstr "Kivesz"
 
-#: gitk:9156
+#: gitk:9777
 msgid "Cannot delete the currently checked-out branch"
 msgstr "Nem lehet a jelenleg kivett branch-ot törölni"
 
-#: gitk:9162
+#: gitk:9783
 #, tcl-format
 msgid ""
 "The commits on branch %s aren't on any other branch.\n"
 "Really delete branch %s?"
 msgstr ""
 "A %s branchon található commit nem található meg semelyik másik branchon.\n"
 "Tényleg törli a %s branchot?"
 
-#: gitk:9193
+#: gitk:9814
 #, tcl-format
 msgid "Tags and heads: %s"
 msgstr "Tagek és headek: %s"
 
-#: gitk:9208
+#: gitk:9829
 msgid "Filter"
 msgstr "Szűrő"
 
-#: gitk:9503
+#: gitk:10125
 msgid ""
 "Error reading commit topology information; branch and preceding/following "
 "tag information will be incomplete."
 msgstr ""
 "Hiba történt a commit topológiai információ olvasása közben; branch ésa "
 "megelőző/következő információ nem lesz teljes."
 
-#: gitk:10489
+#: gitk:11102
 msgid "Tag"
 msgstr "Tag"
 
-#: gitk:10489
+#: gitk:11106
 msgid "Id"
 msgstr "Id"
 
-#: gitk:10539
+#: gitk:11189
 msgid "Gitk font chooser"
 msgstr "Gitk-betű kiválasztó"
 
-#: gitk:10556
+#: gitk:11206
 msgid "B"
 msgstr "F"
 
-#: gitk:10559
+#: gitk:11209
 msgid "I"
 msgstr "K"
 
-#: gitk:10677
-msgid "Gitk preferences"
-msgstr "Gitk beállítások"
-
-#: gitk:10679
+#: gitk:11327
 msgid "Commit list display options"
 msgstr "Commit lista kijelzési opciók"
 
-#: gitk:10682
+#: gitk:11330
 msgid "Maximum graph width (lines)"
 msgstr "Maximális grafikon szélesség (sorok)"
 
-#: gitk:10685
-#, tcl-format
+#: gitk:11334
+#, no-tcl-format
 msgid "Maximum graph width (% of pane)"
 msgstr "Maximális grafikon szélesség (táble %-je)"
 
-#: gitk:10688
+#: gitk:11337
 msgid "Show local changes"
 msgstr "Mutasd a lokális változtatásokat"
 
-#: gitk:10691
-msgid "Auto-select SHA1"
+#: gitk:11340
+#, fuzzy
+msgid "Auto-select SHA1 (length)"
 msgstr "SHA1 Automatikus kiválasztása"
 
-#: gitk:10694
+#: gitk:11344
 msgid "Hide remote refs"
 msgstr "A távoli refek elrejtése"
 
-#: gitk:10698
+#: gitk:11348
 msgid "Diff display options"
 msgstr "Diff kijelző opciók"
 
-#: gitk:10700
+#: gitk:11350
 msgid "Tab spacing"
 msgstr "Tab sorköz"
 
-#: gitk:10703
-msgid "Display nearby tags"
+#: gitk:11353
+#, fuzzy
+msgid "Display nearby tags/heads"
 msgstr "Szomszédos tagek kijelzése"
 
-#: gitk:10706
+#: gitk:11356
+msgid "Maximum # tags/heads to show"
+msgstr ""
+
+#: gitk:11359
 msgid "Limit diffs to listed paths"
 msgstr "Korlátozott diffek a kilistázott útvonalakhoz"
 
-#: gitk:10709
+#: gitk:11362
 msgid "Support per-file encodings"
 msgstr "Fájlonkénti kódolás támgatása"
 
-#: gitk:10715 gitk:10804
+#: gitk:11368 gitk:11515
 msgid "External diff tool"
 msgstr "Külső diff alkalmazás"
 
-#: gitk:10716
+#: gitk:11369
 msgid "Choose..."
 msgstr "Válaszd ..."
 
-#: gitk:10721
+#: gitk:11374
 msgid "General options"
 msgstr "Általános opciók"
 
-#: gitk:10724
+#: gitk:11377
 msgid "Use themed widgets"
 msgstr "Témázott vezérlők használata"
 
-#: gitk:10726
+#: gitk:11379
 msgid "(change requires restart)"
 msgstr "(a változás újraindítást igényel)"
 
-#: gitk:10728
+#: gitk:11381
 msgid "(currently unavailable)"
 msgstr "(jelenleg nem elérhető)"
 
-#: gitk:10732
+#: gitk:11392
 msgid "Colors: press to choose"
 msgstr "Színek: nyomja meg a kiválasztáshoz"
 
-#: gitk:10735
+#: gitk:11395
 msgid "Interface"
 msgstr "Interfész"
 
-#: gitk:10736
+#: gitk:11396
 msgid "interface"
 msgstr "interfész"
 
-#: gitk:10739
+#: gitk:11399
 msgid "Background"
 msgstr "Háttér"
 
-#: gitk:10740 gitk:10770
+#: gitk:11400 gitk:11430
 msgid "background"
 msgstr "háttér"
 
-#: gitk:10743
+#: gitk:11403
 msgid "Foreground"
 msgstr "Előtér"
 
-#: gitk:10744
+#: gitk:11404
 msgid "foreground"
 msgstr "előtér"
 
-#: gitk:10747
+#: gitk:11407
 msgid "Diff: old lines"
 msgstr "Diff: régi sorok"
 
-#: gitk:10748
+#: gitk:11408
 msgid "diff old lines"
 msgstr "diff régi sorok"
 
-#: gitk:10752
+#: gitk:11412
 msgid "Diff: new lines"
 msgstr "Diff: új sorok"
 
-#: gitk:10753
+#: gitk:11413
 msgid "diff new lines"
 msgstr "diff - új sorok"
 
-#: gitk:10757
+#: gitk:11417
 msgid "Diff: hunk header"
 msgstr "Diff: nagy headerök"
 
-#: gitk:10759
+#: gitk:11419
 msgid "diff hunk header"
 msgstr "diff - nagy headerök"
 
-#: gitk:10763
+#: gitk:11423
 msgid "Marked line bg"
 msgstr "Megjelölt sor háttér"
 
-#: gitk:10765
+#: gitk:11425
 msgid "marked line background"
 msgstr "megjelölt sor háttér"
 
-#: gitk:10769
+#: gitk:11429
 msgid "Select bg"
 msgstr "Válasszon hátteret"
 
-#: gitk:10773
+#: gitk:11438
 msgid "Fonts: press to choose"
 msgstr "Betű: nyomja meg a kiválasztáshoz"
 
-#: gitk:10775
+#: gitk:11440
 msgid "Main font"
 msgstr "Fő betű"
 
-#: gitk:10776
+#: gitk:11441
 msgid "Diff display font"
 msgstr "Diff kijelző betű"
 
-#: gitk:10777
+#: gitk:11442
 msgid "User interface font"
 msgstr "Felhasználói interfész betű"
 
-#: gitk:10814
+#: gitk:11464
+msgid "Gitk preferences"
+msgstr "Gitk beállítások"
+
+#: gitk:11473
+#, fuzzy
+msgid "General"
+msgstr "Generálás"
+
+#: gitk:11474
+msgid "Colors"
+msgstr ""
+
+#: gitk:11475
+msgid "Fonts"
+msgstr ""
+
+#: gitk:11525
 #, tcl-format
 msgid "Gitk: choose color for %s"
 msgstr "Gitk: válasszon színt a %s-ra"
 
-#: gitk:11418
+#: gitk:12242
 msgid "Cannot find a git repository here."
 msgstr "Nem találhatü git repository itt."
 
-#: gitk:11422
-#, tcl-format
-msgid "Cannot find the git directory \"%s\"."
-msgstr "Nem található a \"%s\" könyvtár."
-
-#: gitk:11469
+#: gitk:12289
 #, tcl-format
 msgid "Ambiguous argument '%s': both revision and filename"
 msgstr "Félreérthető argumentum '%s': revízió és fájlnév is"
 
-#: gitk:11481
+#: gitk:12301
 msgid "Bad arguments to gitk:"
 msgstr "Rossz gitk argumentumok:"
 
-#: gitk:11572
+#: gitk:12405
 msgid "Command line"
 msgstr "Parancs sor"
 
+#~ msgid "SHA1 ID: "
+#~ msgstr "SHA1 ID: "
+
+#~ msgid "next"
+#~ msgstr "következő"
+
+#~ msgid "prev"
+#~ msgstr "előző"
+
+#~ msgid "CDate"
+#~ msgstr "Dátum"
+
+#~ msgid "Cannot find the git directory \"%s\"."
+#~ msgstr "Nem található a \"%s\" könyvtár."
+
 #~ msgid "Use all refs"
 #~ msgstr "Használd az összes referenciát"
 
 #~ msgid "Max count:"
 #~ msgstr "Max. szám:"
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/it.msg /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/it.msg
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/it.msg	2017-10-10 12:31:59.118631527 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/it.msg	2017-10-10 13:04:28.170560096 +0800
@@ -1,7 +1,7 @@
-set ::msgcat::header "Project-Id-Version: gitk\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2010-01-28 18:40+0100\nPO-Revision-Date: 2010-01-28 18:41+0100\nLast-Translator: Michele Ballabio <barra_cuda@katamail.com>\nLanguage-Team: Italian\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"
+set ::msgcat::header "Project-Id-Version: gitk\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2015-03-15 14:37+1100\nPO-Revision-Date: 2010-01-28 18:41+0100\nLast-Translator: Michele Ballabio <barra_cuda@katamail.com>\nLanguage-Team: Italian\nLanguage: \nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"
 ::msgcat::mcset it "Couldn't get list of unmerged files:" "Impossibile ottenere l'elenco dei file in attesa di fusione:"
 ::msgcat::mcset it "Error parsing revisions:" "Errore nella lettura delle revisioni:"
 ::msgcat::mcset it "Error executing --argscmd command:" "Errore nell'esecuzione del comando specificato con --argscmd:"
 ::msgcat::mcset it "No files selected: --merge specified but no files are unmerged." "Nessun file selezionato: \u00e8 stata specificata l'opzione --merge ma non ci sono file in attesa di fusione."
 ::msgcat::mcset it "No files selected: --merge specified but no unmerged files are within file limit." "Nessun file selezionato: \u00e8 stata specificata l'opzione --merge ma i file specificati non sono in attesa di fusione."
 ::msgcat::mcset it "Error executing git log:" "Errore nell'esecuzione di git log:"
@@ -29,14 +29,12 @@
 ::msgcat::mcset it "About gitk" "Informazioni su gitk"
 ::msgcat::mcset it "Key bindings" "Scorciatoie da tastiera"
 ::msgcat::mcset it "Help" "Aiuto"
 ::msgcat::mcset it "SHA1 ID:" "SHA1 ID:"
 ::msgcat::mcset it "Row" "Riga"
 ::msgcat::mcset it "Find" "Trova"
-::msgcat::mcset it "next" "succ"
-::msgcat::mcset it "prev" "prec"
 ::msgcat::mcset it "commit" "revisione"
 ::msgcat::mcset it "containing:" "contenente:"
 ::msgcat::mcset it "touching paths:" "che riguarda i percorsi:"
 ::msgcat::mcset it "adding/removing string:" "che aggiunge/rimuove la stringa:"
 ::msgcat::mcset it "Exact" "Esatto"
 ::msgcat::mcset it "All fields" "Tutti i campi"
@@ -68,22 +66,18 @@
 ::msgcat::mcset it "Highlight this too" "Evidenzia anche questo"
 ::msgcat::mcset it "Highlight this only" "Evidenzia solo questo"
 ::msgcat::mcset it "External diff" "Visualizza differenze in un altro programma"
 ::msgcat::mcset it "Blame parent commit" "Annota la revisione precedente"
 ::msgcat::mcset it "Show origin of this line" "Mostra la provenienza di questa riga"
 ::msgcat::mcset it "Run git gui blame on this line" "Esegui git gui blame su questa riga"
-::msgcat::mcset it "\nGitk - a commit viewer for git\n\nCopyright \\u00a9 2005-2010 Paul Mackerras\n\nUse and redistribute under the terms of the GNU General Public License" "\nGitk - un visualizzatore di revisioni per git\n\nCopyright \\u00a9 2005-2010 Paul Mackerras\n\nUtilizzo e redistribuzione permessi sotto i termini della GNU General Public License"
 ::msgcat::mcset it "Close" "Chiudi"
 ::msgcat::mcset it "Gitk key bindings" "Scorciatoie da tastiera di Gitk"
 ::msgcat::mcset it "Gitk key bindings:" "Scorciatoie da tastiera di Gitk:"
 ::msgcat::mcset it "<%s-Q>\u0009\u0009Quit" "<%s-Q>\u0009\u0009Esci"
 ::msgcat::mcset it "<Home>\u0009\u0009Move to first commit" "<Home>\u0009\u0009Vai alla prima revisione"
 ::msgcat::mcset it "<End>\u0009\u0009Move to last commit" "<End>\u0009\u0009Vai all'ultima revisione"
-::msgcat::mcset it "<Up>, p, i\u0009Move up one commit" "<Su>, p, i\u0009Vai pi\u00f9 in alto di una revisione"
-::msgcat::mcset it "<Down>, n, k\u0009Move down one commit" "<Gi\u00f9>, n, k\u0009Vai pi\u00f9 in basso di una revisione"
-::msgcat::mcset it "<Left>, z, j\u0009Go back in history list" "<Sinistra>, z, j\u0009Torna indietro nella cronologia"
 ::msgcat::mcset it "<Right>, x, l\u0009Go forward in history list" "<Destra>, x, l\u0009Vai avanti nella cronologia"
 ::msgcat::mcset it "<PageUp>\u0009Move up one page in commit list" "<PaginaSu>\u0009Vai pi\u00f9 in alto di una pagina nella lista delle revisioni"
 ::msgcat::mcset it "<PageDown>\u0009Move down one page in commit list" "<PaginaGi\u00f9>\u0009Vai pi\u00f9 in basso di una pagina nella lista delle revisioni"
 ::msgcat::mcset it "<%s-Home>\u0009Scroll to top of commit list" "<%s-Home>\u0009Scorri alla cima della lista delle revisioni"
 ::msgcat::mcset it "<%s-End>\u0009Scroll to bottom of commit list" "<%s-End>\u0009Scorri alla fine della lista delle revisioni"
 ::msgcat::mcset it "<%s-Up>\u0009Scroll commit list up one line" "<%s-Su>\u0009Scorri la lista delle revisioni in alto di una riga"
@@ -156,13 +150,12 @@
 ::msgcat::mcset it "Gitk: edit view" "Gitk: modifica vista"
 ::msgcat::mcset it "-- criteria for selecting revisions" "-- criteri per la scelta delle revisioni"
 ::msgcat::mcset it "View Name" "Nome vista"
 ::msgcat::mcset it "Apply (F5)" "Applica (F5)"
 ::msgcat::mcset it "Error in commit selection arguments:" "Errore negli argomenti di selezione delle revisioni:"
 ::msgcat::mcset it "None" "Nessuno"
-::msgcat::mcset it "Date" "Data"
 ::msgcat::mcset it "Descendant" "Discendente"
 ::msgcat::mcset it "Not descendant" "Non discendente"
 ::msgcat::mcset it "Ancestor" "Ascendente"
 ::msgcat::mcset it "Not ancestor" "Non ascendente"
 ::msgcat::mcset it "Local changes checked in to index but not committed" "Modifiche locali presenti nell'indice ma non nell'archivio"
 ::msgcat::mcset it "Local uncommitted changes, not checked in to index" "Modifiche locali non presenti n\u00e9 nell'archivio n\u00e9 nell'indice"
@@ -176,12 +169,13 @@
 ::msgcat::mcset it "Error getting diffs: %s" "Errore nella lettura delle differenze:"
 ::msgcat::mcset it "Goto:" "Vai a:"
 ::msgcat::mcset it "Short SHA1 id %s is ambiguous" "La SHA1 id abbreviata %s \u00e8 ambigua"
 ::msgcat::mcset it "Revision %s is not known" "La revisione %s \u00e8 sconosciuta"
 ::msgcat::mcset it "SHA1 id %s is not known" "La SHA1 id %s \u00e8 sconosciuta"
 ::msgcat::mcset it "Revision %s is not in the current view" "La revisione %s non \u00e8 presente nella vista attuale"
+::msgcat::mcset it "Date" "Data"
 ::msgcat::mcset it "Children" "Figli"
 ::msgcat::mcset it "Reset %s branch to here" "Aggiorna il ramo %s a questa revisione"
 ::msgcat::mcset it "Detached head: can't reset" "Nessun ramo attivo: reset impossibile"
 ::msgcat::mcset it "Skipping merge commit " "Salto la revisione di fusione "
 ::msgcat::mcset it "Error getting patch ID for " "Errore nella identificazione della patch per "
 ::msgcat::mcset it " - stopping\n" " - fine\n"
@@ -235,22 +229,19 @@
 ::msgcat::mcset it "Error reading commit topology information; branch and preceding/following tag information will be incomplete." "Errore nella lettura della topologia delle revisioni: le informazioni sul ramo e le etichette precedenti e seguenti saranno incomplete."
 ::msgcat::mcset it "Tag" "Etichetta"
 ::msgcat::mcset it "Id" "Id"
 ::msgcat::mcset it "Gitk font chooser" "Scelta caratteri gitk"
 ::msgcat::mcset it "B" "B"
 ::msgcat::mcset it "I" "I"
-::msgcat::mcset it "Gitk preferences" "Preferenze gitk"
 ::msgcat::mcset it "Commit list display options" "Opzioni visualizzazione dell'elenco revisioni"
 ::msgcat::mcset it "Maximum graph width (lines)" "Larghezza massima del grafico (in linee)"
 ::msgcat::mcset it "Maximum graph width (% of pane)" "Larghezza massima del grafico (% del pannello)"
 ::msgcat::mcset it "Show local changes" "Mostra modifiche locali"
-::msgcat::mcset it "Auto-select SHA1" "Seleziona automaticamente SHA1 hash"
 ::msgcat::mcset it "Hide remote refs" "Nascondi i riferimenti remoti"
 ::msgcat::mcset it "Diff display options" "Opzioni di visualizzazione delle differenze"
 ::msgcat::mcset it "Tab spacing" "Spaziatura tabulazioni"
-::msgcat::mcset it "Display nearby tags" "Mostra etichette vicine"
 ::msgcat::mcset it "Limit diffs to listed paths" "Limita le differenze ai percorsi elencati"
 ::msgcat::mcset it "Support per-file encodings" "Attiva codifica file per file"
 ::msgcat::mcset it "External diff tool" "Visualizzatore di differenze"
 ::msgcat::mcset it "Choose..." "Scegli..."
 ::msgcat::mcset it "General options" "Opzioni generali"
 ::msgcat::mcset it "Use themed widgets" "Utilizza interfaccia a tema"
@@ -273,12 +264,12 @@
 ::msgcat::mcset it "marked line background" "sfondo riga selezionata"
 ::msgcat::mcset it "Select bg" "Sfondo"
 ::msgcat::mcset it "Fonts: press to choose" "Carattere: premere per scegliere"
 ::msgcat::mcset it "Main font" "Carattere principale"
 ::msgcat::mcset it "Diff display font" "Carattere per differenze"
 ::msgcat::mcset it "User interface font" "Carattere per interfaccia utente"
+::msgcat::mcset it "Gitk preferences" "Preferenze gitk"
 ::msgcat::mcset it "Gitk: choose color for %s" "Gitk: scegliere un colore per %s"
 ::msgcat::mcset it "Cannot find a git repository here." "Archivio git non trovato."
-::msgcat::mcset it "Cannot find the git directory \"%s\"." "Directory git \"%s\" non trovata."
 ::msgcat::mcset it "Ambiguous argument '%s': both revision and filename" "Argomento ambiguo: '%s' \u00e8 sia revisione che nome di file"
 ::msgcat::mcset it "Bad arguments to gitk:" "Gitk: argomenti errati:"
 ::msgcat::mcset it "Command line" "Linea di comando"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/it.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/it.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/it.po	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/it.po	2015-05-01 03:12:02.000000000 +0800
@@ -5,1272 +5,1368 @@
 #
 #
 msgid ""
 msgstr ""
 "Project-Id-Version: gitk\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2010-01-28 18:40+0100\n"
+"POT-Creation-Date: 2015-03-15 14:37+1100\n"
 "PO-Revision-Date: 2010-01-28 18:41+0100\n"
 "Last-Translator: Michele Ballabio <barra_cuda@katamail.com>\n"
 "Language-Team: Italian\n"
+"Language: \n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
 
-#: gitk:115
+#: gitk:140
 msgid "Couldn't get list of unmerged files:"
 msgstr "Impossibile ottenere l'elenco dei file in attesa di fusione:"
 
-#: gitk:274
+#: gitk:212 gitk:2381
+msgid "Color words"
+msgstr ""
+
+#: gitk:217 gitk:2381 gitk:8201 gitk:8234
+msgid "Markup words"
+msgstr ""
+
+#: gitk:324
 msgid "Error parsing revisions:"
 msgstr "Errore nella lettura delle revisioni:"
 
-#: gitk:329
+#: gitk:380
 msgid "Error executing --argscmd command:"
 msgstr "Errore nell'esecuzione del comando specificato con --argscmd:"
 
-#: gitk:342
+#: gitk:393
 msgid "No files selected: --merge specified but no files are unmerged."
 msgstr ""
 "Nessun file selezionato: è stata specificata l'opzione --merge ma non ci "
 "sono file in attesa di fusione."
 
-#: gitk:345
+#: gitk:396
 msgid ""
 "No files selected: --merge specified but no unmerged files are within file "
 "limit."
 msgstr ""
 "Nessun file selezionato: è stata specificata l'opzione --merge ma i file "
 "specificati non sono in attesa di fusione."
 
-#: gitk:367 gitk:514
+#: gitk:418 gitk:566
 msgid "Error executing git log:"
 msgstr "Errore nell'esecuzione di git log:"
 
-#: gitk:385 gitk:530
+#: gitk:436 gitk:582
 msgid "Reading"
 msgstr "Lettura in corso"
 
-#: gitk:445 gitk:4261
+#: gitk:496 gitk:4508
 msgid "Reading commits..."
 msgstr "Lettura delle revisioni in corso..."
 
-#: gitk:448 gitk:1578 gitk:4264
+#: gitk:499 gitk:1637 gitk:4511
 msgid "No commits selected"
 msgstr "Nessuna revisione selezionata"
 
-#: gitk:1454
+#: gitk:1511
 msgid "Can't parse git log output:"
 msgstr "Impossibile elaborare i dati di git log:"
 
-#: gitk:1674
+#: gitk:1740
 msgid "No commit information available"
 msgstr "Nessuna informazione disponibile sulle revisioni"
 
-#: gitk:1816
+#: gitk:1897
 msgid "mc"
 msgstr ""
 
-#: gitk:1851 gitk:4054 gitk:9044 gitk:10585 gitk:10804
+#: gitk:1932 gitk:4298 gitk:9650 gitk:11220 gitk:11500
 msgid "OK"
 msgstr "OK"
 
-#: gitk:1853 gitk:4056 gitk:8634 gitk:8713 gitk:8828 gitk:8877 gitk:9046
-#: gitk:10586 gitk:10805
+#: gitk:1934 gitk:4300 gitk:9177 gitk:9256 gitk:9372 gitk:9421 gitk:9652
+#: gitk:11221 gitk:11501
 msgid "Cancel"
 msgstr "Annulla"
 
-#: gitk:1975
+#: gitk:2069
 msgid "Update"
 msgstr "Aggiorna"
 
-#: gitk:1976
+#: gitk:2070
 msgid "Reload"
 msgstr "Ricarica"
 
-#: gitk:1977
+#: gitk:2071
 msgid "Reread references"
 msgstr "Rileggi riferimenti"
 
-#: gitk:1978
+#: gitk:2072
 msgid "List references"
 msgstr "Elenca riferimenti"
 
-#: gitk:1980
+#: gitk:2074
 msgid "Start git gui"
 msgstr "Avvia git gui"
 
-#: gitk:1982
+#: gitk:2076
 msgid "Quit"
 msgstr "Esci"
 
-#: gitk:1974
+#: gitk:2068
 msgid "File"
 msgstr "File"
 
-#: gitk:1986
+#: gitk:2080
 msgid "Preferences"
 msgstr "Preferenze"
 
-#: gitk:1985
+#: gitk:2079
 msgid "Edit"
 msgstr "Modifica"
 
-#: gitk:1990
+#: gitk:2084
 msgid "New view..."
 msgstr "Nuova vista..."
 
-#: gitk:1991
+#: gitk:2085
 msgid "Edit view..."
 msgstr "Modifica vista..."
 
-#: gitk:1992
+#: gitk:2086
 msgid "Delete view"
 msgstr "Elimina vista"
 
-#: gitk:1994
+#: gitk:2088
 msgid "All files"
 msgstr "Tutti i file"
 
-#: gitk:1989 gitk:3808
+#: gitk:2083 gitk:4050
 msgid "View"
 msgstr "Vista"
 
-#: gitk:1999 gitk:2009 gitk:2780
+#: gitk:2093 gitk:2103 gitk:3009
 msgid "About gitk"
 msgstr "Informazioni su gitk"
 
-#: gitk:2000 gitk:2014
+#: gitk:2094 gitk:2108
 msgid "Key bindings"
 msgstr "Scorciatoie da tastiera"
 
-#: gitk:1998 gitk:2013
+#: gitk:2092 gitk:2107
 msgid "Help"
 msgstr "Aiuto"
 
-#: gitk:2091 gitk:8110
+#: gitk:2185 gitk:8633
 msgid "SHA1 ID:"
 msgstr "SHA1 ID:"
 
-#: gitk:2122
+#: gitk:2229
 msgid "Row"
 msgstr "Riga"
 
-#: gitk:2160
+#: gitk:2267
 msgid "Find"
 msgstr "Trova"
 
-#: gitk:2161
-msgid "next"
-msgstr "succ"
-
-#: gitk:2162
-msgid "prev"
-msgstr "prec"
-
-#: gitk:2163
+#: gitk:2295
 msgid "commit"
 msgstr "revisione"
 
-#: gitk:2166 gitk:2168 gitk:4422 gitk:4445 gitk:4469 gitk:6410 gitk:6482
-#: gitk:6566
+#: gitk:2299 gitk:2301 gitk:4669 gitk:4692 gitk:4716 gitk:6736 gitk:6808
+#: gitk:6893
 msgid "containing:"
 msgstr "contenente:"
 
-#: gitk:2169 gitk:3290 gitk:3295 gitk:4497
+#: gitk:2302 gitk:3522 gitk:3527 gitk:4745
 msgid "touching paths:"
 msgstr "che riguarda i percorsi:"
 
-#: gitk:2170 gitk:4502
+#: gitk:2303 gitk:4759
 msgid "adding/removing string:"
 msgstr "che aggiunge/rimuove la stringa:"
 
-#: gitk:2179 gitk:2181
+#: gitk:2304 gitk:4761
+msgid "changing lines matching:"
+msgstr ""
+
+#: gitk:2313 gitk:2315 gitk:4748
 msgid "Exact"
 msgstr "Esatto"
 
-#: gitk:2181 gitk:4577 gitk:6378
+#: gitk:2315 gitk:4836 gitk:6704
 msgid "IgnCase"
 msgstr ""
 
-#: gitk:2181 gitk:4471 gitk:4575 gitk:6374
+#: gitk:2315 gitk:4718 gitk:4834 gitk:6700
 msgid "Regexp"
 msgstr ""
 
-#: gitk:2183 gitk:2184 gitk:4596 gitk:4626 gitk:4633 gitk:6502 gitk:6570
+#: gitk:2317 gitk:2318 gitk:4856 gitk:4886 gitk:4893 gitk:6829 gitk:6897
 msgid "All fields"
 msgstr "Tutti i campi"
 
-#: gitk:2184 gitk:4594 gitk:4626 gitk:6441
+#: gitk:2318 gitk:4853 gitk:4886 gitk:6767
 msgid "Headline"
 msgstr "Titolo"
 
-#: gitk:2185 gitk:4594 gitk:6441 gitk:6570 gitk:7003
+#: gitk:2319 gitk:4853 gitk:6767 gitk:6897 gitk:7370
 msgid "Comments"
 msgstr "Commenti"
 
-#: gitk:2185 gitk:4594 gitk:4598 gitk:4633 gitk:6441 gitk:6938 gitk:8285
-#: gitk:8300
+#: gitk:2319 gitk:4853 gitk:4858 gitk:4893 gitk:6767 gitk:7305 gitk:8811
+#: gitk:8826
 msgid "Author"
 msgstr "Autore"
 
-#: gitk:2185 gitk:4594 gitk:6441 gitk:6940
+#: gitk:2319 gitk:4853 gitk:6767 gitk:7307
 msgid "Committer"
 msgstr "Revisione creata da"
 
-#: gitk:2216
+#: gitk:2350
 msgid "Search"
 msgstr "Cerca"
 
-#: gitk:2224
+#: gitk:2358
 msgid "Diff"
 msgstr ""
 
-#: gitk:2226
+#: gitk:2360
 msgid "Old version"
 msgstr "Vecchia versione"
 
-#: gitk:2228
+#: gitk:2362
 msgid "New version"
 msgstr "Nuova versione"
 
-#: gitk:2230
+#: gitk:2364
 msgid "Lines of context"
 msgstr "Linee di contesto"
 
-#: gitk:2240
+#: gitk:2374
 msgid "Ignore space change"
 msgstr "Ignora modifiche agli spazi"
 
-#: gitk:2299
+#: gitk:2378 gitk:2380 gitk:7940 gitk:8187
+msgid "Line diff"
+msgstr ""
+
+#: gitk:2445
 msgid "Patch"
 msgstr "Modifiche"
 
-#: gitk:2301
+#: gitk:2447
 msgid "Tree"
 msgstr "Directory"
 
-#: gitk:2456 gitk:2473
+#: gitk:2616 gitk:2636
 msgid "Diff this -> selected"
 msgstr "Diff questo -> selezionato"
 
-#: gitk:2457 gitk:2474
+#: gitk:2617 gitk:2637
 msgid "Diff selected -> this"
 msgstr "Diff selezionato -> questo"
 
-#: gitk:2458 gitk:2475
+#: gitk:2618 gitk:2638
 msgid "Make patch"
 msgstr "Crea patch"
 
-#: gitk:2459 gitk:8692
+#: gitk:2619 gitk:9235
 msgid "Create tag"
 msgstr "Crea etichetta"
 
-#: gitk:2460 gitk:8808
+#: gitk:2620 gitk:9352
 msgid "Write commit to file"
 msgstr "Scrivi revisione in un file"
 
-#: gitk:2461 gitk:8865
+#: gitk:2621 gitk:9409
 msgid "Create new branch"
 msgstr "Crea un nuovo ramo"
 
-#: gitk:2462
+#: gitk:2622
 msgid "Cherry-pick this commit"
 msgstr "Porta questa revisione in cima al ramo attuale"
 
-#: gitk:2463
+#: gitk:2623
 msgid "Reset HEAD branch to here"
 msgstr "Aggiorna il ramo HEAD a questa revisione"
 
-#: gitk:2464
+#: gitk:2624
 msgid "Mark this commit"
 msgstr "Segna questa revisione"
 
-#: gitk:2465
+#: gitk:2625
 msgid "Return to mark"
 msgstr "Torna alla revisione segnata"
 
-#: gitk:2466
+#: gitk:2626
 msgid "Find descendant of this and mark"
 msgstr "Trova il discendente di questa revisione e di quella segnata"
 
-#: gitk:2467
+#: gitk:2627
 msgid "Compare with marked commit"
 msgstr "Confronta con la revisione segnata"
 
-#: gitk:2481
+#: gitk:2628 gitk:2639
+#, fuzzy
+msgid "Diff this -> marked commit"
+msgstr "Diff questo -> selezionato"
+
+#: gitk:2629 gitk:2640
+#, fuzzy
+msgid "Diff marked commit -> this"
+msgstr "Diff selezionato -> questo"
+
+#: gitk:2630
+#, fuzzy
+msgid "Revert this commit"
+msgstr "Segna questa revisione"
+
+#: gitk:2646
 msgid "Check out this branch"
 msgstr "Attiva questo ramo"
 
-#: gitk:2482
+#: gitk:2647
 msgid "Remove this branch"
 msgstr "Elimina questo ramo"
 
-#: gitk:2489
+#: gitk:2654
 msgid "Highlight this too"
 msgstr "Evidenzia anche questo"
 
-#: gitk:2490
+#: gitk:2655
 msgid "Highlight this only"
 msgstr "Evidenzia solo questo"
 
-#: gitk:2491
+#: gitk:2656
 msgid "External diff"
 msgstr "Visualizza differenze in un altro programma"
 
-#: gitk:2492
+#: gitk:2657
 msgid "Blame parent commit"
 msgstr "Annota la revisione precedente"
 
-#: gitk:2499
+#: gitk:2664
 msgid "Show origin of this line"
 msgstr "Mostra la provenienza di questa riga"
 
-#: gitk:2500
+#: gitk:2665
 msgid "Run git gui blame on this line"
 msgstr "Esegui git gui blame su questa riga"
 
-#: gitk:2782
+#: gitk:3011
+#, fuzzy
 msgid ""
 "\n"
 "Gitk - a commit viewer for git\n"
 "\n"
-"Copyright \\u00a9 2005-2010 Paul Mackerras\n"
+"Copyright © 2005-2014 Paul Mackerras\n"
 "\n"
 "Use and redistribute under the terms of the GNU General Public License"
 msgstr ""
 "\n"
 "Gitk - un visualizzatore di revisioni per git\n"
 "\n"
 "Copyright \\u00a9 2005-2010 Paul Mackerras\n"
 "\n"
 "Utilizzo e redistribuzione permessi sotto i termini della GNU General Public "
 "License"
 
-#: gitk:2790 gitk:2854 gitk:9230
+#: gitk:3019 gitk:3085 gitk:9836
 msgid "Close"
 msgstr "Chiudi"
 
-#: gitk:2811
+#: gitk:3040
 msgid "Gitk key bindings"
 msgstr "Scorciatoie da tastiera di Gitk"
 
-#: gitk:2814
+#: gitk:3043
 msgid "Gitk key bindings:"
 msgstr "Scorciatoie da tastiera di Gitk:"
 
-#: gitk:2816
+#: gitk:3045
 #, tcl-format
 msgid "<%s-Q>\t\tQuit"
 msgstr "<%s-Q>\t\tEsci"
 
-#: gitk:2817
+#: gitk:3046
+#, fuzzy, tcl-format
+msgid "<%s-W>\t\tClose window"
+msgstr "<%s-F>\t\tTrova"
+
+#: gitk:3047
 msgid "<Home>\t\tMove to first commit"
 msgstr "<Home>\t\tVai alla prima revisione"
 
-#: gitk:2818
+#: gitk:3048
 msgid "<End>\t\tMove to last commit"
 msgstr "<End>\t\tVai all'ultima revisione"
 
-#: gitk:2819
-msgid "<Up>, p, i\tMove up one commit"
+#: gitk:3049
+#, fuzzy
+msgid "<Up>, p, k\tMove up one commit"
 msgstr "<Su>, p, i\tVai più in alto di una revisione"
 
-#: gitk:2820
-msgid "<Down>, n, k\tMove down one commit"
+#: gitk:3050
+#, fuzzy
+msgid "<Down>, n, j\tMove down one commit"
 msgstr "<Giù>, n, k\tVai più in basso di una revisione"
 
-#: gitk:2821
-msgid "<Left>, z, j\tGo back in history list"
+#: gitk:3051
+#, fuzzy
+msgid "<Left>, z, h\tGo back in history list"
 msgstr "<Sinistra>, z, j\tTorna indietro nella cronologia"
 
-#: gitk:2822
+#: gitk:3052
 msgid "<Right>, x, l\tGo forward in history list"
 msgstr "<Destra>, x, l\tVai avanti nella cronologia"
 
-#: gitk:2823
+#: gitk:3053
+#, tcl-format
+msgid "<%s-n>\tGo to n-th parent of current commit in history list"
+msgstr ""
+
+#: gitk:3054
 msgid "<PageUp>\tMove up one page in commit list"
 msgstr "<PaginaSu>\tVai più in alto di una pagina nella lista delle revisioni"
 
-#: gitk:2824
+#: gitk:3055
 msgid "<PageDown>\tMove down one page in commit list"
 msgstr ""
 "<PaginaGiù>\tVai più in basso di una pagina nella lista delle revisioni"
 
-#: gitk:2825
+#: gitk:3056
 #, tcl-format
 msgid "<%s-Home>\tScroll to top of commit list"
 msgstr "<%s-Home>\tScorri alla cima della lista delle revisioni"
 
-#: gitk:2826
+#: gitk:3057
 #, tcl-format
 msgid "<%s-End>\tScroll to bottom of commit list"
 msgstr "<%s-End>\tScorri alla fine della lista delle revisioni"
 
-#: gitk:2827
+#: gitk:3058
 #, tcl-format
 msgid "<%s-Up>\tScroll commit list up one line"
 msgstr "<%s-Su>\tScorri la lista delle revisioni in alto di una riga"
 
-#: gitk:2828
+#: gitk:3059
 #, tcl-format
 msgid "<%s-Down>\tScroll commit list down one line"
 msgstr "<%s-Giù>\tScorri la lista delle revisioni in basso di una riga"
 
-#: gitk:2829
+#: gitk:3060
 #, tcl-format
 msgid "<%s-PageUp>\tScroll commit list up one page"
 msgstr "<%s-PaginaSu>\tScorri la lista delle revisioni in alto di una pagina"
 
-#: gitk:2830
+#: gitk:3061
 #, tcl-format
 msgid "<%s-PageDown>\tScroll commit list down one page"
 msgstr "<%s-PaginaGiù>\tScorri la lista delle revisioni in basso di una pagina"
 
-#: gitk:2831
+#: gitk:3062
 msgid "<Shift-Up>\tFind backwards (upwards, later commits)"
 msgstr "<Shift-Su>\tTrova all'indietro (verso l'alto, revisioni successive)"
 
-#: gitk:2832
+#: gitk:3063
 msgid "<Shift-Down>\tFind forwards (downwards, earlier commits)"
 msgstr "<Shift-Giù>\tTrova in avanti (verso il basso, revisioni precedenti)"
 
-#: gitk:2833
+#: gitk:3064
 msgid "<Delete>, b\tScroll diff view up one page"
 msgstr "<Delete>, b\tScorri la vista delle differenze in alto di una pagina"
 
-#: gitk:2834
+#: gitk:3065
 msgid "<Backspace>\tScroll diff view up one page"
 msgstr "<Backspace>\tScorri la vista delle differenze in alto di una pagina"
 
-#: gitk:2835
+#: gitk:3066
 msgid "<Space>\t\tScroll diff view down one page"
 msgstr "<Spazio>\t\tScorri la vista delle differenze in basso di una pagina"
 
-#: gitk:2836
+#: gitk:3067
 msgid "u\t\tScroll diff view up 18 lines"
 msgstr "u\t\tScorri la vista delle differenze in alto di 18 linee"
 
-#: gitk:2837
+#: gitk:3068
 msgid "d\t\tScroll diff view down 18 lines"
 msgstr "d\t\tScorri la vista delle differenze in basso di 18 linee"
 
-#: gitk:2838
+#: gitk:3069
 #, tcl-format
 msgid "<%s-F>\t\tFind"
 msgstr "<%s-F>\t\tTrova"
 
-#: gitk:2839
+#: gitk:3070
 #, tcl-format
 msgid "<%s-G>\t\tMove to next find hit"
 msgstr "<%s-G>\t\tTrova in avanti"
 
-#: gitk:2840
+#: gitk:3071
 msgid "<Return>\tMove to next find hit"
 msgstr "<Invio>\tTrova in avanti"
 
-#: gitk:2841
+#: gitk:3072
 msgid "/\t\tFocus the search box"
 msgstr "/\t\tCursore nel box di ricerca"
 
-#: gitk:2842
+#: gitk:3073
 msgid "?\t\tMove to previous find hit"
 msgstr "?\t\tTrova all'indietro"
 
-#: gitk:2843
+#: gitk:3074
 msgid "f\t\tScroll diff view to next file"
 msgstr "f\t\tScorri la vista delle differenze al file successivo"
 
-#: gitk:2844
+#: gitk:3075
 #, tcl-format
 msgid "<%s-S>\t\tSearch for next hit in diff view"
 msgstr "<%s-S>\t\tCerca in avanti nella vista delle differenze"
 
-#: gitk:2845
+#: gitk:3076
 #, tcl-format
 msgid "<%s-R>\t\tSearch for previous hit in diff view"
 msgstr "<%s-R>\t\tCerca all'indietro nella vista delle differenze"
 
-#: gitk:2846
+#: gitk:3077
 #, tcl-format
 msgid "<%s-KP+>\tIncrease font size"
 msgstr "<%s-KP+>\tAumenta dimensione carattere"
 
-#: gitk:2847
+#: gitk:3078
 #, tcl-format
 msgid "<%s-plus>\tIncrease font size"
 msgstr "<%s-più>\tAumenta dimensione carattere"
 
-#: gitk:2848
+#: gitk:3079
 #, tcl-format
 msgid "<%s-KP->\tDecrease font size"
 msgstr "<%s-KP->\tDiminuisci dimensione carattere"
 
-#: gitk:2849
+#: gitk:3080
 #, tcl-format
 msgid "<%s-minus>\tDecrease font size"
 msgstr "<%s-meno>\tDiminuisci dimensione carattere"
 
-#: gitk:2850
+#: gitk:3081
 msgid "<F5>\t\tUpdate"
 msgstr "<F5>\t\tAggiorna"
 
-#: gitk:3305 gitk:3314
+#: gitk:3546 gitk:3555
 #, tcl-format
 msgid "Error creating temporary directory %s:"
 msgstr "Errore durante la creazione della directory temporanea %s:"
 
-#: gitk:3327
+#: gitk:3568
 #, tcl-format
 msgid "Error getting \"%s\" from %s:"
 msgstr "Errore nella lettura di \"%s\" da %s:"
 
-#: gitk:3390
+#: gitk:3631
 msgid "command failed:"
 msgstr "impossibile eseguire il comando:"
 
-#: gitk:3539
+#: gitk:3780
 msgid "No such commit"
 msgstr "Revisione inesistente"
 
-#: gitk:3553
+#: gitk:3794
 msgid "git gui blame: command failed:"
 msgstr "git gui blame: impossibile eseguire il comando:"
 
-#: gitk:3584
+#: gitk:3825
 #, tcl-format
 msgid "Couldn't read merge head: %s"
 msgstr "Impossibile leggere merge head: %s"
 
-#: gitk:3592
+#: gitk:3833
 #, tcl-format
 msgid "Error reading index: %s"
 msgstr "Errore nella lettura dell'indice: %s"
 
-#: gitk:3617
+#: gitk:3858
 #, tcl-format
 msgid "Couldn't start git blame: %s"
 msgstr "Impossibile eseguire git blame: %s"
 
-#: gitk:3620 gitk:6409
+#: gitk:3861 gitk:6735
 msgid "Searching"
 msgstr "Ricerca in corso"
 
-#: gitk:3652
+#: gitk:3893
 #, tcl-format
 msgid "Error running git blame: %s"
 msgstr "Errore nell'esecuzione di git blame: %s"
 
-#: gitk:3680
+#: gitk:3921
 #, tcl-format
 msgid "That line comes from commit %s,  which is not in this view"
 msgstr "Quella riga proviene dalla revisione %s, non presente in questa vista"
 
-#: gitk:3694
+#: gitk:3935
 msgid "External diff viewer failed:"
 msgstr "Impossibile eseguire il visualizzatore di differenze:"
 
-#: gitk:3812
+#: gitk:4053
 msgid "Gitk view definition"
 msgstr "Scelta vista Gitk"
 
-#: gitk:3816
+#: gitk:4057
 msgid "Remember this view"
 msgstr "Ricorda questa vista"
 
-#: gitk:3817
+#: gitk:4058
 msgid "References (space separated list):"
 msgstr "Riferimenti (lista di elementi separati da spazi)"
 
-#: gitk:3818
+#: gitk:4059
 msgid "Branches & tags:"
 msgstr "Rami ed etichette"
 
-#: gitk:3819
+#: gitk:4060
 msgid "All refs"
 msgstr "Tutti i riferimenti"
 
-#: gitk:3820
+#: gitk:4061
 msgid "All (local) branches"
 msgstr "Tutti i rami (locali)"
 
-#: gitk:3821
+#: gitk:4062
 msgid "All tags"
 msgstr "Tutte le etichette"
 
-#: gitk:3822
+#: gitk:4063
 msgid "All remote-tracking branches"
 msgstr "Tutti i rami remoti"
 
-#: gitk:3823
+#: gitk:4064
 msgid "Commit Info (regular expressions):"
 msgstr "Informazioni sulla revisione (espressioni regolari):"
 
-#: gitk:3824
+#: gitk:4065
 msgid "Author:"
 msgstr "Autore:"
 
-#: gitk:3825
+#: gitk:4066
 msgid "Committer:"
 msgstr "Revisione creata da:"
 
-#: gitk:3826
+#: gitk:4067
 msgid "Commit Message:"
 msgstr "Messaggio di revisione:"
 
-#: gitk:3827
+#: gitk:4068
 msgid "Matches all Commit Info criteria"
 msgstr "Risponde a tutti i criteri di ricerca sulle revisioni"
 
-#: gitk:3828
+#: gitk:4069
+#, fuzzy
+msgid "Matches none Commit Info criteria"
+msgstr "Risponde a tutti i criteri di ricerca sulle revisioni"
+
+#: gitk:4070
 msgid "Changes to Files:"
 msgstr "Modifiche ai file:"
 
-#: gitk:3829
+#: gitk:4071
 msgid "Fixed String"
 msgstr "Stringa fissa"
 
-#: gitk:3830
+#: gitk:4072
 msgid "Regular Expression"
 msgstr "Espressione regolare"
 
-#: gitk:3831
+#: gitk:4073
 msgid "Search string:"
 msgstr "Cerca stringa:"
 
-#: gitk:3832
+#: gitk:4074
 msgid ""
 "Commit Dates (\"2 weeks ago\", \"2009-03-17 15:27:38\", \"March 17, 2009 "
 "15:27:38\"):"
 msgstr ""
 "Date di revisione (\"2 weeks ago\", \"2009-03-17 15:27:38\", \"March 17, "
 "2009 15:27:38\"):"
 
-#: gitk:3833
+#: gitk:4075
 msgid "Since:"
 msgstr "Da:"
 
-#: gitk:3834
+#: gitk:4076
 msgid "Until:"
 msgstr "A:"
 
-#: gitk:3835
+#: gitk:4077
 msgid "Limit and/or skip a number of revisions (positive integer):"
 msgstr "Limita e/o salta N revisioni (intero positivo):"
 
-#: gitk:3836
+#: gitk:4078
 msgid "Number to show:"
 msgstr "Numero di revisioni da mostrare:"
 
-#: gitk:3837
+#: gitk:4079
 msgid "Number to skip:"
 msgstr "Numero di revisioni da saltare:"
 
-#: gitk:3838
+#: gitk:4080
 msgid "Miscellaneous options:"
 msgstr "Altre opzioni:"
 
-#: gitk:3839
+#: gitk:4081
 msgid "Strictly sort by date"
 msgstr "Ordina solo per data"
 
-#: gitk:3840
+#: gitk:4082
 msgid "Mark branch sides"
 msgstr "Segna i lati del ramo"
 
-#: gitk:3841
+#: gitk:4083
 msgid "Limit to first parent"
 msgstr "Limita al primo genitore"
 
-#: gitk:3842
+#: gitk:4084
 msgid "Simple history"
 msgstr "Cronologia semplificata"
 
-#: gitk:3843
+#: gitk:4085
 msgid "Additional arguments to git log:"
 msgstr "Ulteriori argomenti da passare a git log:"
 
-#: gitk:3844
+#: gitk:4086
 msgid "Enter files and directories to include, one per line:"
 msgstr "Inserire file e directory da includere, uno per riga:"
 
-#: gitk:3845
+#: gitk:4087
 msgid "Command to generate more commits to include:"
 msgstr "Comando che genera altre revisioni da visualizzare:"
 
-#: gitk:3967
+#: gitk:4211
 msgid "Gitk: edit view"
 msgstr "Gitk: modifica vista"
 
-#: gitk:3975
+#: gitk:4219
 msgid "-- criteria for selecting revisions"
 msgstr "-- criteri per la scelta delle revisioni"
 
-#: gitk:3980
+#: gitk:4224
 msgid "View Name"
 msgstr "Nome vista"
 
-#: gitk:4055
+#: gitk:4299
 msgid "Apply (F5)"
 msgstr "Applica (F5)"
 
-#: gitk:4093
+#: gitk:4337
 msgid "Error in commit selection arguments:"
 msgstr "Errore negli argomenti di selezione delle revisioni:"
 
-#: gitk:4146 gitk:4198 gitk:4646 gitk:4660 gitk:5921 gitk:11534 gitk:11535
+#: gitk:4392 gitk:4445 gitk:4906 gitk:4920 gitk:6190 gitk:12346 gitk:12347
 msgid "None"
 msgstr "Nessuno"
 
-#: gitk:4594 gitk:6441 gitk:8287 gitk:8302
-msgid "Date"
-msgstr "Data"
-
-#: gitk:4594 gitk:6441
-msgid "CDate"
-msgstr ""
-
-#: gitk:4743 gitk:4748
+#: gitk:5003 gitk:5008
 msgid "Descendant"
 msgstr "Discendente"
 
-#: gitk:4744
+#: gitk:5004
 msgid "Not descendant"
 msgstr "Non discendente"
 
-#: gitk:4751 gitk:4756
+#: gitk:5011 gitk:5016
 msgid "Ancestor"
 msgstr "Ascendente"
 
-#: gitk:4752
+#: gitk:5012
 msgid "Not ancestor"
 msgstr "Non ascendente"
 
-#: gitk:5042
+#: gitk:5306
 msgid "Local changes checked in to index but not committed"
 msgstr "Modifiche locali presenti nell'indice ma non nell'archivio"
 
-#: gitk:5078
+#: gitk:5342
 msgid "Local uncommitted changes, not checked in to index"
 msgstr "Modifiche locali non presenti né nell'archivio né nell'indice"
 
-#: gitk:6759
+#: gitk:7115
+msgid "and many more"
+msgstr ""
+
+#: gitk:7118
 msgid "many"
 msgstr "molti"
 
-#: gitk:6942
+#: gitk:7309
 msgid "Tags:"
 msgstr "Etichette:"
 
-#: gitk:6959 gitk:6965 gitk:8280
+#: gitk:7326 gitk:7332 gitk:8806
 msgid "Parent"
 msgstr "Genitore"
 
-#: gitk:6970
+#: gitk:7337
 msgid "Child"
 msgstr "Figlio"
 
-#: gitk:6979
+#: gitk:7346
 msgid "Branch"
 msgstr "Ramo"
 
-#: gitk:6982
+#: gitk:7349
 msgid "Follows"
 msgstr "Segue"
 
-#: gitk:6985
+#: gitk:7352
 msgid "Precedes"
 msgstr "Precede"
 
-#: gitk:7522
+#: gitk:7947
 #, tcl-format
 msgid "Error getting diffs: %s"
 msgstr "Errore nella lettura delle differenze:"
 
-#: gitk:8108
+#: gitk:8631
 msgid "Goto:"
 msgstr "Vai a:"
 
-#: gitk:8129
+#: gitk:8652
 #, tcl-format
 msgid "Short SHA1 id %s is ambiguous"
 msgstr "La SHA1 id abbreviata %s è ambigua"
 
-#: gitk:8136
+#: gitk:8659
 #, tcl-format
 msgid "Revision %s is not known"
 msgstr "La revisione %s è sconosciuta"
 
-#: gitk:8146
+#: gitk:8669
 #, tcl-format
 msgid "SHA1 id %s is not known"
 msgstr "La SHA1 id %s è sconosciuta"
 
-#: gitk:8148
+#: gitk:8671
 #, tcl-format
 msgid "Revision %s is not in the current view"
 msgstr "La revisione %s non è presente nella vista attuale"
 
-#: gitk:8290
+#: gitk:8813 gitk:8828
+msgid "Date"
+msgstr "Data"
+
+#: gitk:8816
 msgid "Children"
 msgstr "Figli"
 
-#: gitk:8348
+#: gitk:8879
 #, tcl-format
 msgid "Reset %s branch to here"
 msgstr "Aggiorna il ramo %s a questa revisione"
 
-#: gitk:8350
+#: gitk:8881
 msgid "Detached head: can't reset"
 msgstr "Nessun ramo attivo: reset impossibile"
 
-#: gitk:8459 gitk:8465
+#: gitk:8986 gitk:8992
 msgid "Skipping merge commit "
 msgstr "Salto la revisione di fusione "
 
-#: gitk:8474 gitk:8479
+#: gitk:9001 gitk:9006
 msgid "Error getting patch ID for "
 msgstr "Errore nella identificazione della patch per "
 
-#: gitk:8475 gitk:8480
+#: gitk:9002 gitk:9007
 msgid " - stopping\n"
 msgstr " - fine\n"
 
-#: gitk:8485 gitk:8488 gitk:8496 gitk:8510 gitk:8519
+#: gitk:9012 gitk:9015 gitk:9023 gitk:9037 gitk:9046
 msgid "Commit "
 msgstr "La revisione "
 
-#: gitk:8489
+#: gitk:9016
 msgid ""
 " is the same patch as\n"
 "       "
 msgstr ""
 " ha le stesse differenze di\n"
 "       "
 
-#: gitk:8497
+#: gitk:9024
 msgid ""
 " differs from\n"
 "       "
 msgstr ""
 " è diversa da\n"
 "       "
 
-#: gitk:8499
+#: gitk:9026
 msgid ""
 "Diff of commits:\n"
 "\n"
 msgstr ""
 "Differenze tra le revisioni:\n"
 "\n"
 
-#: gitk:8511 gitk:8520
+#: gitk:9038 gitk:9047
 #, tcl-format
 msgid " has %s children - stopping\n"
 msgstr " ha %s figli - fine\n"
 
-#: gitk:8539
+#: gitk:9066
 #, tcl-format
 msgid "Error writing commit to file: %s"
 msgstr "Errore nella scrittura della revisione nel file: %s"
 
-#: gitk:8545
+#: gitk:9072
 #, tcl-format
 msgid "Error diffing commits: %s"
 msgstr "Errore nelle differenze tra le revisioni: %s"
 
-#: gitk:8575
+#: gitk:9118
 msgid "Top"
 msgstr "Inizio"
 
-#: gitk:8576
+#: gitk:9119
 msgid "From"
 msgstr "Da"
 
-#: gitk:8581
+#: gitk:9124
 msgid "To"
 msgstr "A"
 
-#: gitk:8605
+#: gitk:9148
 msgid "Generate patch"
 msgstr "Genera patch"
 
-#: gitk:8607
+#: gitk:9150
 msgid "From:"
 msgstr "Da:"
 
-#: gitk:8616
+#: gitk:9159
 msgid "To:"
 msgstr "A:"
 
-#: gitk:8625
+#: gitk:9168
 msgid "Reverse"
 msgstr "Inverti"
 
-#: gitk:8627 gitk:8822
+#: gitk:9170 gitk:9366
 msgid "Output file:"
 msgstr "Scrivi sul file:"
 
-#: gitk:8633
+#: gitk:9176
 msgid "Generate"
 msgstr "Genera"
 
-#: gitk:8671
+#: gitk:9214
 msgid "Error creating patch:"
 msgstr "Errore nella creazione della patch:"
 
-#: gitk:8694 gitk:8810 gitk:8867
+#: gitk:9237 gitk:9354 gitk:9411
 msgid "ID:"
 msgstr "ID:"
 
-#: gitk:8703
+#: gitk:9246
 msgid "Tag name:"
 msgstr "Nome etichetta:"
 
-#: gitk:8706
+#: gitk:9249
 msgid "Tag message is optional"
 msgstr "Il messaggio dell'etichetta è opzionale"
 
-#: gitk:8708
+#: gitk:9251
 msgid "Tag message:"
 msgstr "Messaggio dell'etichetta:"
 
-#: gitk:8712 gitk:8876
+#: gitk:9255 gitk:9420
 msgid "Create"
 msgstr "Crea"
 
-#: gitk:8730
+#: gitk:9273
 msgid "No tag name specified"
 msgstr "Nessuna etichetta specificata"
 
-#: gitk:8734
+#: gitk:9277
 #, tcl-format
 msgid "Tag \"%s\" already exists"
 msgstr "L'etichetta \"%s\" esiste già"
 
-#: gitk:8744
+#: gitk:9287
 msgid "Error creating tag:"
 msgstr "Errore nella creazione dell'etichetta:"
 
-#: gitk:8819
+#: gitk:9363
 msgid "Command:"
 msgstr "Comando:"
 
-#: gitk:8827
+#: gitk:9371
 msgid "Write"
 msgstr "Scrivi"
 
-#: gitk:8845
+#: gitk:9389
 msgid "Error writing commit:"
 msgstr "Errore nella scrittura della revisione:"
 
-#: gitk:8872
+#: gitk:9416
 msgid "Name:"
 msgstr "Nome:"
 
-#: gitk:8895
+#: gitk:9439
 msgid "Please specify a name for the new branch"
 msgstr "Specificare un nome per il nuovo ramo"
 
-#: gitk:8900
+#: gitk:9444
 #, tcl-format
 msgid "Branch '%s' already exists. Overwrite?"
 msgstr "Il ramo '%s' esiste già. Sovrascrivere?"
 
-#: gitk:8966
+#: gitk:9511
 #, tcl-format
 msgid "Commit %s is already included in branch %s -- really re-apply it?"
 msgstr "La revisione %s è già inclusa nel ramo %s -- applicarla di nuovo?"
 
-#: gitk:8971
+#: gitk:9516
 msgid "Cherry-picking"
 msgstr ""
 
-#: gitk:8980
+#: gitk:9525
 #, tcl-format
 msgid ""
 "Cherry-pick failed because of local changes to file '%s'.\n"
 "Please commit, reset or stash your changes and try again."
 msgstr ""
 "Impossibile eseguire cherry-pick perché il file '%s' è stato modificato "
 "nella directory di lavoro.\n"
 "Prima di riprovare, bisogna creare una nuova revisione, annullare le "
 "modifiche o usare 'git stash'."
 
-#: gitk:8986
+#: gitk:9531
 msgid ""
 "Cherry-pick failed because of merge conflict.\n"
 "Do you wish to run git citool to resolve it?"
 msgstr ""
 "Impossibile eseguire cherry-pick a causa di un conflitto nella fusione.\n"
 "Vuoi avviare git citool per risolverlo?"
 
-#: gitk:9002
+#: gitk:9547 gitk:9605
 msgid "No changes committed"
 msgstr "Nessuna modifica archiviata"
 
-#: gitk:9028
+#: gitk:9574
+#, fuzzy, tcl-format
+msgid "Commit %s is not included in branch %s -- really revert it?"
+msgstr "La revisione %s è già inclusa nel ramo %s -- applicarla di nuovo?"
+
+#: gitk:9579
+#, fuzzy
+msgid "Reverting"
+msgstr "git reset in corso"
+
+#: gitk:9587
+#, fuzzy, tcl-format
+msgid ""
+"Revert failed because of local changes to the following files:%s Please "
+"commit, reset or stash  your changes and try again."
+msgstr ""
+"Impossibile eseguire cherry-pick perché il file '%s' è stato modificato "
+"nella directory di lavoro.\n"
+"Prima di riprovare, bisogna creare una nuova revisione, annullare le "
+"modifiche o usare 'git stash'."
+
+#: gitk:9591
+#, fuzzy
+msgid ""
+"Revert failed because of merge conflict.\n"
+" Do you wish to run git citool to resolve it?"
+msgstr ""
+"Impossibile eseguire cherry-pick a causa di un conflitto nella fusione.\n"
+"Vuoi avviare git citool per risolverlo?"
+
+#: gitk:9634
 msgid "Confirm reset"
 msgstr "Conferma git reset"
 
-#: gitk:9030
+#: gitk:9636
 #, tcl-format
 msgid "Reset branch %s to %s?"
 msgstr "Aggiornare il ramo %s a %s?"
 
-#: gitk:9032
+#: gitk:9638
 msgid "Reset type:"
 msgstr "Tipo di aggiornamento:"
 
-#: gitk:9035
+#: gitk:9641
 msgid "Soft: Leave working tree and index untouched"
 msgstr "Soft: Lascia la direcory di lavoro e l'indice come sono"
 
-#: gitk:9038
+#: gitk:9644
 msgid "Mixed: Leave working tree untouched, reset index"
 msgstr "Mixed: Lascia la directory di lavoro come è, aggiorna l'indice"
 
-#: gitk:9041
+#: gitk:9647
 msgid ""
 "Hard: Reset working tree and index\n"
 "(discard ALL local changes)"
 msgstr ""
 "Hard: Aggiorna la directory di lavoro e l'indice\n"
 "(abbandona TUTTE le modifiche locali)"
 
-#: gitk:9058
+#: gitk:9664
 msgid "Resetting"
 msgstr "git reset in corso"
 
-#: gitk:9118
+#: gitk:9724
 msgid "Checking out"
 msgstr "Attivazione in corso"
 
-#: gitk:9171
+#: gitk:9777
 msgid "Cannot delete the currently checked-out branch"
 msgstr "Impossibile cancellare il ramo attualmente attivo"
 
-#: gitk:9177
+#: gitk:9783
 #, tcl-format
 msgid ""
 "The commits on branch %s aren't on any other branch.\n"
 "Really delete branch %s?"
 msgstr ""
 "Le revisioni nel ramo %s non sono presenti su altri rami.\n"
 "Cancellare il ramo %s?"
 
-#: gitk:9208
+#: gitk:9814
 #, tcl-format
 msgid "Tags and heads: %s"
 msgstr "Etichette e rami: %s"
 
-#: gitk:9223
+#: gitk:9829
 msgid "Filter"
 msgstr "Filtro"
 
-#: gitk:9518
+#: gitk:10125
 msgid ""
 "Error reading commit topology information; branch and preceding/following "
 "tag information will be incomplete."
 msgstr ""
 "Errore nella lettura della topologia delle revisioni: le informazioni sul "
 "ramo e le etichette precedenti e seguenti saranno incomplete."
 
-#: gitk:10504
+#: gitk:11102
 msgid "Tag"
 msgstr "Etichetta"
 
-#: gitk:10504
+#: gitk:11106
 msgid "Id"
 msgstr "Id"
 
-#: gitk:10554
+#: gitk:11189
 msgid "Gitk font chooser"
 msgstr "Scelta caratteri gitk"
 
-#: gitk:10571
+#: gitk:11206
 msgid "B"
 msgstr "B"
 
-#: gitk:10574
+#: gitk:11209
 msgid "I"
 msgstr "I"
 
-#: gitk:10692
-msgid "Gitk preferences"
-msgstr "Preferenze gitk"
-
-#: gitk:10694
+#: gitk:11327
 msgid "Commit list display options"
 msgstr "Opzioni visualizzazione dell'elenco revisioni"
 
-#: gitk:10697
+#: gitk:11330
 msgid "Maximum graph width (lines)"
 msgstr "Larghezza massima del grafico (in linee)"
 
-#: gitk:10700
-#, tcl-format
+#: gitk:11334
+#, no-tcl-format
 msgid "Maximum graph width (% of pane)"
 msgstr "Larghezza massima del grafico (% del pannello)"
 
-#: gitk:10703
+#: gitk:11337
 msgid "Show local changes"
 msgstr "Mostra modifiche locali"
 
-#: gitk:10706
-msgid "Auto-select SHA1"
+#: gitk:11340
+#, fuzzy
+msgid "Auto-select SHA1 (length)"
 msgstr "Seleziona automaticamente SHA1 hash"
 
-#: gitk:10709
+#: gitk:11344
 msgid "Hide remote refs"
 msgstr "Nascondi i riferimenti remoti"
 
-#: gitk:10713
+#: gitk:11348
 msgid "Diff display options"
 msgstr "Opzioni di visualizzazione delle differenze"
 
-#: gitk:10715
+#: gitk:11350
 msgid "Tab spacing"
 msgstr "Spaziatura tabulazioni"
 
-#: gitk:10718
-msgid "Display nearby tags"
+#: gitk:11353
+#, fuzzy
+msgid "Display nearby tags/heads"
 msgstr "Mostra etichette vicine"
 
-#: gitk:10721
+#: gitk:11356
+msgid "Maximum # tags/heads to show"
+msgstr ""
+
+#: gitk:11359
 msgid "Limit diffs to listed paths"
 msgstr "Limita le differenze ai percorsi elencati"
 
-#: gitk:10724
+#: gitk:11362
 msgid "Support per-file encodings"
 msgstr "Attiva codifica file per file"
 
-#: gitk:10730 gitk:10819
+#: gitk:11368 gitk:11515
 msgid "External diff tool"
 msgstr "Visualizzatore di differenze"
 
-#: gitk:10731
+#: gitk:11369
 msgid "Choose..."
 msgstr "Scegli..."
 
-#: gitk:10736
+#: gitk:11374
 msgid "General options"
 msgstr "Opzioni generali"
 
-#: gitk:10739
+#: gitk:11377
 msgid "Use themed widgets"
 msgstr "Utilizza interfaccia a tema"
 
-#: gitk:10741
+#: gitk:11379
 msgid "(change requires restart)"
 msgstr "(una modifica richiede il riavvio)"
 
-#: gitk:10743
+#: gitk:11381
 msgid "(currently unavailable)"
 msgstr "(momentaneamente non disponibile)"
 
-#: gitk:10747
+#: gitk:11392
 msgid "Colors: press to choose"
 msgstr "Colori: premere per scegliere"
 
-#: gitk:10750
+#: gitk:11395
 msgid "Interface"
 msgstr "Interfaccia"
 
-#: gitk:10751
+#: gitk:11396
 msgid "interface"
 msgstr "interfaccia"
 
-#: gitk:10754
+#: gitk:11399
 msgid "Background"
 msgstr "Sfondo"
 
-#: gitk:10755 gitk:10785
+#: gitk:11400 gitk:11430
 msgid "background"
 msgstr "sfondo"
 
-#: gitk:10758
+#: gitk:11403
 msgid "Foreground"
 msgstr "Primo piano"
 
-#: gitk:10759
+#: gitk:11404
 msgid "foreground"
 msgstr "primo piano"
 
-#: gitk:10762
+#: gitk:11407
 msgid "Diff: old lines"
 msgstr "Diff: vecchie linee"
 
-#: gitk:10763
+#: gitk:11408
 msgid "diff old lines"
 msgstr "vecchie linee"
 
-#: gitk:10767
+#: gitk:11412
 msgid "Diff: new lines"
 msgstr "Diff: nuove linee"
 
-#: gitk:10768
+#: gitk:11413
 msgid "diff new lines"
 msgstr "nuove linee"
 
-#: gitk:10772
+#: gitk:11417
 msgid "Diff: hunk header"
 msgstr "Diff: intestazione della sezione"
 
-#: gitk:10774
+#: gitk:11419
 msgid "diff hunk header"
 msgstr "intestazione della sezione"
 
-#: gitk:10778
+#: gitk:11423
 msgid "Marked line bg"
 msgstr "Sfondo riga selezionata"
 
-#: gitk:10780
+#: gitk:11425
 msgid "marked line background"
 msgstr "sfondo riga selezionata"
 
-#: gitk:10784
+#: gitk:11429
 msgid "Select bg"
 msgstr "Sfondo"
 
-#: gitk:10788
+#: gitk:11438
 msgid "Fonts: press to choose"
 msgstr "Carattere: premere per scegliere"
 
-#: gitk:10790
+#: gitk:11440
 msgid "Main font"
 msgstr "Carattere principale"
 
-#: gitk:10791
+#: gitk:11441
 msgid "Diff display font"
 msgstr "Carattere per differenze"
 
-#: gitk:10792
+#: gitk:11442
 msgid "User interface font"
 msgstr "Carattere per interfaccia utente"
 
-#: gitk:10829
+#: gitk:11464
+msgid "Gitk preferences"
+msgstr "Preferenze gitk"
+
+#: gitk:11473
+#, fuzzy
+msgid "General"
+msgstr "Genera"
+
+#: gitk:11474
+msgid "Colors"
+msgstr ""
+
+#: gitk:11475
+msgid "Fonts"
+msgstr ""
+
+#: gitk:11525
 #, tcl-format
 msgid "Gitk: choose color for %s"
 msgstr "Gitk: scegliere un colore per %s"
 
-#: gitk:11433
+#: gitk:12242
 msgid "Cannot find a git repository here."
 msgstr "Archivio git non trovato."
 
-#: gitk:11437
-#, tcl-format
-msgid "Cannot find the git directory \"%s\"."
-msgstr "Directory git \"%s\" non trovata."
-
-#: gitk:11484
+#: gitk:12289
 #, tcl-format
 msgid "Ambiguous argument '%s': both revision and filename"
 msgstr "Argomento ambiguo: '%s' è sia revisione che nome di file"
 
-#: gitk:11496
+#: gitk:12301
 msgid "Bad arguments to gitk:"
 msgstr "Gitk: argomenti errati:"
 
-#: gitk:11587
+#: gitk:12405
 msgid "Command line"
 msgstr "Linea di comando"
+
+#~ msgid "next"
+#~ msgstr "succ"
+
+#~ msgid "prev"
+#~ msgstr "prec"
+
+#~ msgid "Cannot find the git directory \"%s\"."
+#~ msgstr "Directory git \"%s\" non trovata."
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/ja.msg /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/ja.msg
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/ja.msg	2017-10-10 12:31:59.122631527 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/ja.msg	2017-10-10 13:04:28.174560096 +0800
@@ -1,7 +1,7 @@
-set ::msgcat::header "Project-Id-Version: gitk\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2009-11-04 00:08+0900\nPO-Revision-Date: 2009-11-06 01:45+0900\nLast-Translator: Mizar <mizar.jp@gmail.com>\nLanguage-Team: Japanese\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\nPlural-Forms: nplurals=1; plural=0;\n"
+set ::msgcat::header "Project-Id-Version: gitk\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2015-03-15 14:37+1100\nPO-Revision-Date: 2009-11-06 01:45+0900\nLast-Translator: Mizar <mizar.jp@gmail.com>\nLanguage-Team: Japanese\nLanguage: \nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\nPlural-Forms: nplurals=1; plural=0;\n"
 ::msgcat::mcset ja "Couldn't get list of unmerged files:" "\u30de\u30fc\u30b8\u3055\u308c\u3066\u3044\u306a\u3044\u30d5\u30a1\u30a4\u30eb\u306e\u30ea\u30b9\u30c8\u3092\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093:"
 ::msgcat::mcset ja "Error parsing revisions:" "\u30ea\u30d3\u30b8\u30e7\u30f3\u89e3\u6790\u30a8\u30e9\u30fc:"
 ::msgcat::mcset ja "Error executing --argscmd command:" "--argscmd \u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u30a8\u30e9\u30fc:"
 ::msgcat::mcset ja "No files selected: --merge specified but no files are unmerged." "\u30d5\u30a1\u30a4\u30eb\u672a\u9078\u629e: --merge \u304c\u6307\u5b9a\u3055\u308c\u307e\u3057\u305f\u304c\u3001\u30de\u30fc\u30b8\u3055\u308c\u3066\u3044\u306a\u3044\u30d5\u30a1\u30a4\u30eb\u306f\u3042\u308a\u307e\u305b\u3093\u3002"
 ::msgcat::mcset ja "No files selected: --merge specified but no unmerged files are within file limit." "\u30d5\u30a1\u30a4\u30eb\u672a\u9078\u629e: --merge \u304c\u6307\u5b9a\u3055\u308c\u307e\u3057\u305f\u304c\u3001\u30d5\u30a1\u30a4\u30eb\u5236\u9650\u5185\u306b\u30de\u30fc\u30b8\u3055\u308c\u3066\u3044\u306a\u3044\u30d5\u30a1\u30a4\u30eb\u306f\u3042\u308a\u307e\u305b\u3093\u3002"
 ::msgcat::mcset ja "Error executing git log:" "git log \u5b9f\u884c\u30a8\u30e9\u30fc:"
@@ -27,17 +27,15 @@
 ::msgcat::mcset ja "Delete view" "\u30d3\u30e5\u30fc\u524a\u9664"
 ::msgcat::mcset ja "All files" "\u5168\u3066\u306e\u30d5\u30a1\u30a4\u30eb"
 ::msgcat::mcset ja "View" "\u30d3\u30e5\u30fc"
 ::msgcat::mcset ja "About gitk" "gitk \u306b\u3064\u3044\u3066"
 ::msgcat::mcset ja "Key bindings" "\u30ad\u30fc\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0"
 ::msgcat::mcset ja "Help" "\u30d8\u30eb\u30d7"
-::msgcat::mcset ja "SHA1 ID: " "SHA1 ID: "
+::msgcat::mcset ja "SHA1 ID:" "SHA1 ID:"
 ::msgcat::mcset ja "Row" "\u884c"
 ::msgcat::mcset ja "Find" "\u691c\u7d22"
-::msgcat::mcset ja "next" "\u6b21"
-::msgcat::mcset ja "prev" "\u524d"
 ::msgcat::mcset ja "commit" "\u30b3\u30df\u30c3\u30c8"
 ::msgcat::mcset ja "containing:" "\u542b\u3080:"
 ::msgcat::mcset ja "touching paths:" "\u30d1\u30b9\u306e\u4e00\u90e8:"
 ::msgcat::mcset ja "adding/removing string:" "\u8ffd\u52a0/\u9664\u53bb\u3059\u308b\u6587\u5b57\u5217:"
 ::msgcat::mcset ja "Exact" "\u82f1\u5b57\u306e\u5927\u5c0f\u3092\u533a\u5225\u3059\u308b"
 ::msgcat::mcset ja "IgnCase" "\u82f1\u5b57\u306e\u5927\u5c0f\u3092\u533a\u5225\u3057\u306a\u3044"
@@ -72,22 +70,18 @@
 ::msgcat::mcset ja "Highlight this too" "\u3053\u308c\u3082\u30cf\u30a4\u30e9\u30a4\u30c8\u3055\u305b\u308b"
 ::msgcat::mcset ja "Highlight this only" "\u3053\u308c\u3060\u3051\u3092\u30cf\u30a4\u30e9\u30a4\u30c8\u3055\u305b\u308b"
 ::msgcat::mcset ja "External diff" "\u5916\u90e8diff\u30c4\u30fc\u30eb"
 ::msgcat::mcset ja "Blame parent commit" "\u89aa\u30b3\u30df\u30c3\u30c8\u304b\u3089 blame \u3092\u304b\u3051\u308b"
 ::msgcat::mcset ja "Show origin of this line" "\u3053\u306e\u884c\u306e\u51fa\u81ea\u3092\u8868\u793a\u3059\u308b"
 ::msgcat::mcset ja "Run git gui blame on this line" "\u3053\u306e\u884c\u306b git gui \u3067 blame \u3092\u304b\u3051\u308b"
-::msgcat::mcset ja "\nGitk - a commit viewer for git\n\nCopyright \\u00a9 2005-2010 Paul Mackerras\n\nUse and redistribute under the terms of the GNU General Public License" "\nGitk - git\u30b3\u30df\u30c3\u30c8\u30d3\u30e5\u30fc\u30a2\n\nCopyright \\u00a9 2005-2010 Paul Mackerras\n\n\u4f7f\u7528\u304a\u3088\u3073\u518d\u914d\u5e03\u306f GNU General Public License \u306b\u5f93\u3063\u3066\u304f\u3060\u3055\u3044"
 ::msgcat::mcset ja "Close" "\u9589\u3058\u308b"
 ::msgcat::mcset ja "Gitk key bindings" "Gitk \u30ad\u30fc\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0"
 ::msgcat::mcset ja "Gitk key bindings:" "Gitk \u30ad\u30fc\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0:"
 ::msgcat::mcset ja "<%s-Q>\u0009\u0009Quit" "<%s-Q>\u0009\u0009\u7d42\u4e86"
 ::msgcat::mcset ja "<Home>\u0009\u0009Move to first commit" "<Home>\u0009\u0009\u6700\u521d\u306e\u30b3\u30df\u30c3\u30c8\u306b\u79fb\u52d5"
 ::msgcat::mcset ja "<End>\u0009\u0009Move to last commit" "<End>\u0009\u0009\u6700\u5f8c\u306e\u30b3\u30df\u30c3\u30c8\u306b\u79fb\u52d5"
-::msgcat::mcset ja "<Up>, p, i\u0009Move up one commit" "<Up>, p, i\u0009\u4e00\u3064\u4e0a\u306e\u30b3\u30df\u30c3\u30c8\u306b\u79fb\u52d5"
-::msgcat::mcset ja "<Down>, n, k\u0009Move down one commit" "<Down>, n, k\u0009\u4e00\u3064\u4e0b\u306e\u30b3\u30df\u30c3\u30c8\u306b\u79fb\u52d5"
-::msgcat::mcset ja "<Left>, z, j\u0009Go back in history list" "<Left>, z, j\u0009\u5c65\u6b74\u306e\u524d\u306b\u623b\u308b"
 ::msgcat::mcset ja "<Right>, x, l\u0009Go forward in history list" "<Right>, x, l\u0009\u5c65\u6b74\u306e\u6b21\u3078\u9032\u3080"
 ::msgcat::mcset ja "<PageUp>\u0009Move up one page in commit list" "<PageUp>\u0009\u30b3\u30df\u30c3\u30c8\u30ea\u30b9\u30c8\u306e\u4e00\u3064\u4e0a\u306e\u30da\u30fc\u30b8\u306b\u79fb\u52d5"
 ::msgcat::mcset ja "<PageDown>\u0009Move down one page in commit list" "<PageDown>\u0009\u30b3\u30df\u30c3\u30c8\u30ea\u30b9\u30c8\u306e\u4e00\u3064\u4e0b\u306e\u30da\u30fc\u30b8\u306b\u79fb\u52d5"
 ::msgcat::mcset ja "<%s-Home>\u0009Scroll to top of commit list" "<%s-Home>\u0009\u30b3\u30df\u30c3\u30c8\u30ea\u30b9\u30c8\u306e\u4e00\u756a\u4e0a\u306b\u30b9\u30af\u30ed\u30fc\u30eb\u3059\u308b"
 ::msgcat::mcset ja "<%s-End>\u0009Scroll to bottom of commit list" "<%s-End>\u0009\u30b3\u30df\u30c3\u30c8\u30ea\u30b9\u30c8\u306e\u4e00\u756a\u4e0b\u306b\u30b9\u30af\u30ed\u30fc\u30eb\u3059\u308b"
 ::msgcat::mcset ja "<%s-Up>\u0009Scroll commit list up one line" "<%s-Up>\u0009\u30b3\u30df\u30c3\u30c8\u30ea\u30b9\u30c8\u306e\u4e00\u3064\u4e0b\u306e\u884c\u306b\u30b9\u30af\u30ed\u30fc\u30eb\u3059\u308b"
@@ -156,18 +150,15 @@
 ::msgcat::mcset ja "Simple history" "\u7c21\u6613\u306a\u5c65\u6b74"
 ::msgcat::mcset ja "Additional arguments to git log:" "git log \u3078\u306e\u8ffd\u52a0\u306e\u5f15\u6570:"
 ::msgcat::mcset ja "Enter files and directories to include, one per line:" "\u542b\u307e\u308c\u308b\u30d5\u30a1\u30a4\u30eb\u30fb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4e00\u884c\u3054\u3068\u306b\u5165\u529b:"
 ::msgcat::mcset ja "Command to generate more commits to include:" "\u30b3\u30df\u30c3\u30c8\u8ffd\u52a0\u30b3\u30de\u30f3\u30c9:"
 ::msgcat::mcset ja "Gitk: edit view" "Gitk: \u30d3\u30e5\u30fc\u7de8\u96c6"
 ::msgcat::mcset ja "-- criteria for selecting revisions" "\u2015 \u30ea\u30d3\u30b8\u30e7\u30f3\u306e\u9078\u629e\u6761\u4ef6"
-::msgcat::mcset ja "View Name:" "\u30d3\u30e5\u30fc\u540d:"
 ::msgcat::mcset ja "Apply (F5)" "\u9069\u7528 (F5)"
 ::msgcat::mcset ja "Error in commit selection arguments:" "\u30b3\u30df\u30c3\u30c8\u9078\u629e\u5f15\u6570\u306e\u30a8\u30e9\u30fc:"
 ::msgcat::mcset ja "None" "\u7121\u3057"
-::msgcat::mcset ja "Date" "\u65e5\u4ed8"
-::msgcat::mcset ja "CDate" "\u4f5c\u6210\u65e5"
 ::msgcat::mcset ja "Descendant" "\u5b50\u5b6b"
 ::msgcat::mcset ja "Not descendant" "\u975e\u5b50\u5b6b"
 ::msgcat::mcset ja "Ancestor" "\u7956\u5148"
 ::msgcat::mcset ja "Not ancestor" "\u975e\u7956\u5148"
 ::msgcat::mcset ja "Local changes checked in to index but not committed" "\u30b9\u30c6\u30fc\u30b8\u3055\u308c\u305f\u3001\u30b3\u30df\u30c3\u30c8\u524d\u306e\u30ed\u30fc\u30ab\u30eb\u306a\u5909\u66f4"
 ::msgcat::mcset ja "Local uncommitted changes, not checked in to index" "\u30b9\u30c6\u30fc\u30b8\u3055\u308c\u3066\u3044\u306a\u3044\u3001\u30b3\u30df\u30c3\u30c8\u524d\u306e\u30ed\u30fc\u30ab\u30eb\u306a\u5909\u66f4"
@@ -177,17 +168,17 @@
 ::msgcat::mcset ja "Child" "\u5b50"
 ::msgcat::mcset ja "Branch" "\u30d6\u30e9\u30f3\u30c1"
 ::msgcat::mcset ja "Follows" "\u4e0b\u4f4d"
 ::msgcat::mcset ja "Precedes" "\u4e0a\u4f4d"
 ::msgcat::mcset ja "Error getting diffs: %s" "diff\u53d6\u5f97\u30a8\u30e9\u30fc: %s"
 ::msgcat::mcset ja "Goto:" "Goto:"
-::msgcat::mcset ja "SHA1 ID:" "SHA1 ID:"
 ::msgcat::mcset ja "Short SHA1 id %s is ambiguous" "%s \u3092\u542b\u3080 SHA1 ID \u306f\u8907\u6570\u5b58\u5728\u3057\u307e\u3059"
 ::msgcat::mcset ja "Revision %s is not known" "\u30ea\u30d3\u30b8\u30e7\u30f3 %s \u306f\u4e0d\u660e\u3067\u3059"
 ::msgcat::mcset ja "SHA1 id %s is not known" "SHA1 id %s \u306f\u4e0d\u660e\u3067\u3059"
 ::msgcat::mcset ja "Revision %s is not in the current view" "\u30ea\u30d3\u30b8\u30e7\u30f3 %s \u306f\u73fe\u5728\u306e\u30d3\u30e5\u30fc\u306b\u306f\u3042\u308a\u307e\u305b\u3093"
+::msgcat::mcset ja "Date" "\u65e5\u4ed8"
 ::msgcat::mcset ja "Children" "\u5b50"
 ::msgcat::mcset ja "Reset %s branch to here" "%s \u30d6\u30e9\u30f3\u30c1\u3092\u3053\u3053\u306b\u30ea\u30bb\u30c3\u30c8\u3059\u308b"
 ::msgcat::mcset ja "Detached head: can't reset" "\u5207\u308a\u96e2\u3055\u308c\u305fHEAD: \u30ea\u30bb\u30c3\u30c8\u3067\u304d\u307e\u305b\u3093"
 ::msgcat::mcset ja "Skipping merge commit " "\u30b3\u30df\u30c3\u30c8\u30de\u30fc\u30b8\u3092\u30b9\u30ad\u30c3\u30d7: "
 ::msgcat::mcset ja "Error getting patch ID for " "\u30d1\u30c3\u30c1\u53d6\u5f97\u30a8\u30e9\u30fc: ID "
 ::msgcat::mcset ja " - stopping\n" " - \u505c\u6b62\n"
@@ -240,22 +231,19 @@
 ::msgcat::mcset ja "Error reading commit topology information; branch and preceding/following tag information will be incomplete." "\u30b3\u30df\u30c3\u30c8\u69cb\u9020\u60c5\u5831\u8aad\u307f\u8fbc\u307f\u30a8\u30e9\u30fc; \u30d6\u30e9\u30f3\u30c1\u53ca\u3073\u4e0a\u4f4d/\u4e0b\u4f4d\u306e\u30bf\u30b0\u60c5\u5831\u304c\u4e0d\u5b8c\u5168\u3067\u3042\u308b\u3088\u3046\u3067\u3059\u3002"
 ::msgcat::mcset ja "Tag" "\u30bf\u30b0"
 ::msgcat::mcset ja "Id" "ID"
 ::msgcat::mcset ja "Gitk font chooser" "Gitk \u30d5\u30a9\u30f3\u30c8\u9078\u629e"
 ::msgcat::mcset ja "B" "B"
 ::msgcat::mcset ja "I" "I"
-::msgcat::mcset ja "Gitk preferences" "Gitk \u8a2d\u5b9a"
 ::msgcat::mcset ja "Commit list display options" "\u30b3\u30df\u30c3\u30c8\u30ea\u30b9\u30c8\u8868\u793a\u30aa\u30d7\u30b7\u30e7\u30f3"
 ::msgcat::mcset ja "Maximum graph width (lines)" "\u6700\u5927\u30b0\u30e9\u30d5\u5e45\uff08\u7dda\u306e\u672c\u6570\uff09"
 ::msgcat::mcset ja "Maximum graph width (% of pane)" "\u6700\u5927\u30b0\u30e9\u30d5\u5e45\uff08\u30da\u30a4\u30f3\u306b\u5bfe\u3059\u308b\uff05\uff09"
 ::msgcat::mcset ja "Show local changes" "\u30ed\u30fc\u30ab\u30eb\u306a\u5909\u66f4\u3092\u8868\u793a"
-::msgcat::mcset ja "Auto-select SHA1" "SHA1 \u306e\u81ea\u52d5\u9078\u629e"
+::msgcat::mcset ja "Hide remote refs" "\u30ea\u30e2\u30fc\u30c8\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3092\u96a0\u3059"
 ::msgcat::mcset ja "Diff display options" "diff\u8868\u793a\u30aa\u30d7\u30b7\u30e7\u30f3"
 ::msgcat::mcset ja "Tab spacing" "\u30bf\u30d6\u7a7a\u767d\u5e45"
-::msgcat::mcset ja "Display nearby tags" "\u8fd1\u304f\u306e\u30bf\u30b0\u3092\u8868\u793a\u3059\u308b"
-::msgcat::mcset ja "Hide remote refs" "\u30ea\u30e2\u30fc\u30c8\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3092\u96a0\u3059"
 ::msgcat::mcset ja "Limit diffs to listed paths" "diff \u3092\u30ea\u30b9\u30c8\u306e\u30d1\u30b9\u306b\u5236\u9650"
 ::msgcat::mcset ja "Support per-file encodings" "\u30d5\u30a1\u30a4\u30eb\u3054\u3068\u306e\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u30b5\u30dd\u30fc\u30c8"
 ::msgcat::mcset ja "External diff tool" "\u5916\u90e8diff\u30c4\u30fc\u30eb"
 ::msgcat::mcset ja "Choose..." "\u9078\u629e..."
 ::msgcat::mcset ja "Colors: press to choose" "\u8272: \u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u9078\u629e"
 ::msgcat::mcset ja "Interface" "\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9"
@@ -274,12 +262,12 @@
 ::msgcat::mcset ja "marked line background" "\u30de\u30fc\u30af\u884c\u306e\u80cc\u666f"
 ::msgcat::mcset ja "Select bg" "\u9078\u629e\u306e\u80cc\u666f"
 ::msgcat::mcset ja "Fonts: press to choose" "\u30d5\u30a9\u30f3\u30c8: \u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u9078\u629e"
 ::msgcat::mcset ja "Main font" "\u4e3b\u30d5\u30a9\u30f3\u30c8"
 ::msgcat::mcset ja "Diff display font" "Diff\u8868\u793a\u7528\u30d5\u30a9\u30f3\u30c8"
 ::msgcat::mcset ja "User interface font" "UI\u7528\u30d5\u30a9\u30f3\u30c8"
+::msgcat::mcset ja "Gitk preferences" "Gitk \u8a2d\u5b9a"
 ::msgcat::mcset ja "Gitk: choose color for %s" "Gitk: \u300c%s\u300d \u306e\u8272\u3092\u9078\u629e"
 ::msgcat::mcset ja "Cannot find a git repository here." "\u3053\u3053\u306b\u306fgit\u30ea\u30dd\u30b8\u30c8\u30ea\u304c\u3042\u308a\u307e\u305b\u3093\u3002"
-::msgcat::mcset ja "Cannot find the git directory \"%s\"." "git\u30c7\u30a3\u30ec\u30af\u30c8\u30ea \"%s\" \u3092\u898b\u3064\u3051\u3089\u308c\u307e\u305b\u3093\u3002"
 ::msgcat::mcset ja "Ambiguous argument '%s': both revision and filename" "\u3042\u3044\u307e\u3044\u306a\u5f15\u6570 '%s': \u30ea\u30d3\u30b8\u30e7\u30f3\u3068\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u4e21\u65b9\u306b\u89e3\u91c8\u3067\u304d\u307e\u3059"
 ::msgcat::mcset ja "Bad arguments to gitk:" "gitk\u3078\u306e\u4e0d\u6b63\u306a\u5f15\u6570:"
 ::msgcat::mcset ja "Command line" "\u30b3\u30de\u30f3\u30c9\u884c"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/ja.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/ja.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/ja.po	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/ja.po	2015-05-01 03:12:02.000000000 +0800
@@ -5,1251 +5,1376 @@
 # Mizar <mizar.jp@gmail.com>, 2009.
 # Junio C Hamano <gitster@pobox.com>, 2009.
 msgid ""
 msgstr ""
 "Project-Id-Version: gitk\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-11-04 00:08+0900\n"
+"POT-Creation-Date: 2015-03-15 14:37+1100\n"
 "PO-Revision-Date: 2009-11-06 01:45+0900\n"
 "Last-Translator: Mizar <mizar.jp@gmail.com>\n"
 "Language-Team: Japanese\n"
+"Language: \n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
 "Plural-Forms: nplurals=1; plural=0;\n"
 
-#: gitk:113
+#: gitk:140
 msgid "Couldn't get list of unmerged files:"
 msgstr "マージされていないファイルのリストを取得できません:"
 
-#: gitk:269
+#: gitk:212 gitk:2381
+msgid "Color words"
+msgstr ""
+
+#: gitk:217 gitk:2381 gitk:8201 gitk:8234
+msgid "Markup words"
+msgstr ""
+
+#: gitk:324
 msgid "Error parsing revisions:"
 msgstr "リビジョン解析エラー:"
 
-#: gitk:324
+#: gitk:380
 msgid "Error executing --argscmd command:"
 msgstr "--argscmd コマンド実行エラー:"
 
-#: gitk:337
+#: gitk:393
 msgid "No files selected: --merge specified but no files are unmerged."
 msgstr ""
 "ファイル未選択: --merge が指定されましたが、マージされていないファイルはあり"
 "ません。"
 
-#: gitk:340
+#: gitk:396
 msgid ""
 "No files selected: --merge specified but no unmerged files are within file "
 "limit."
 msgstr ""
 "ファイル未選択: --merge が指定されましたが、ファイル制限内にマージされていな"
 "いファイルはありません。"
 
-#: gitk:362 gitk:509
+#: gitk:418 gitk:566
 msgid "Error executing git log:"
 msgstr "git log 実行エラー:"
 
-#: gitk:380 gitk:525
+#: gitk:436 gitk:582
 msgid "Reading"
 msgstr "読み込み中"
 
-#: gitk:440 gitk:4132
+#: gitk:496 gitk:4508
 msgid "Reading commits..."
 msgstr "コミット読み込み中..."
 
-#: gitk:443 gitk:1561 gitk:4135
+#: gitk:499 gitk:1637 gitk:4511
 msgid "No commits selected"
 msgstr "コミットが選択されていません"
 
-#: gitk:1437
+#: gitk:1511
 msgid "Can't parse git log output:"
 msgstr "git log の出力を解析できません:"
 
-#: gitk:1657
+#: gitk:1740
 msgid "No commit information available"
 msgstr "有効なコミットの情報がありません"
 
-#: gitk:1790
+#: gitk:1897
 msgid "mc"
 msgstr "mc"
 
-#: gitk:1817 gitk:3925 gitk:8842 gitk:10378 gitk:10558
+#: gitk:1932 gitk:4298 gitk:9650 gitk:11220 gitk:11500
 msgid "OK"
 msgstr "OK"
 
-#: gitk:1819 gitk:3927 gitk:8439 gitk:8513 gitk:8623 gitk:8672 gitk:8844
-#: gitk:10379 gitk:10559
+#: gitk:1934 gitk:4300 gitk:9177 gitk:9256 gitk:9372 gitk:9421 gitk:9652
+#: gitk:11221 gitk:11501
 msgid "Cancel"
 msgstr "キャンセル"
 
-#: gitk:1919
+#: gitk:2069
 msgid "Update"
 msgstr "更新"
 
-#: gitk:1920
+#: gitk:2070
 msgid "Reload"
 msgstr "リロード"
 
-#: gitk:1921
+#: gitk:2071
 msgid "Reread references"
 msgstr "リファレンスを再読み込み"
 
-#: gitk:1922
+#: gitk:2072
 msgid "List references"
 msgstr "リファレンスリストを表示"
 
-#: gitk:1924
+#: gitk:2074
 msgid "Start git gui"
 msgstr "git gui の開始"
 
-#: gitk:1926
+#: gitk:2076
 msgid "Quit"
 msgstr "終了"
 
-#: gitk:1918
+#: gitk:2068
 msgid "File"
 msgstr "ファイル"
 
-#: gitk:1930
+#: gitk:2080
 msgid "Preferences"
 msgstr "設定"
 
-#: gitk:1929
+#: gitk:2079
 msgid "Edit"
 msgstr "編集"
 
-#: gitk:1934
+#: gitk:2084
 msgid "New view..."
 msgstr "新規ビュー..."
 
-#: gitk:1935
+#: gitk:2085
 msgid "Edit view..."
 msgstr "ビュー編集..."
 
-#: gitk:1936
+#: gitk:2086
 msgid "Delete view"
 msgstr "ビュー削除"
 
-#: gitk:1938
+#: gitk:2088
 msgid "All files"
 msgstr "全てのファイル"
 
-#: gitk:1933 gitk:3679
+#: gitk:2083 gitk:4050
 msgid "View"
 msgstr "ビュー"
 
-#: gitk:1943 gitk:1953 gitk:2656
+#: gitk:2093 gitk:2103 gitk:3009
 msgid "About gitk"
 msgstr "gitk について"
 
-#: gitk:1944 gitk:1958
+#: gitk:2094 gitk:2108
 msgid "Key bindings"
 msgstr "キーバインディング"
 
-#: gitk:1942 gitk:1957
+#: gitk:2092 gitk:2107
 msgid "Help"
 msgstr "ヘルプ"
 
-#: gitk:2018
-msgid "SHA1 ID: "
-msgstr "SHA1 ID: "
+#: gitk:2185 gitk:8633
+msgid "SHA1 ID:"
+msgstr "SHA1 ID:"
 
-#: gitk:2049
+#: gitk:2229
 msgid "Row"
 msgstr "行"
 
-#: gitk:2080
+#: gitk:2267
 msgid "Find"
 msgstr "検索"
 
-#: gitk:2081
-msgid "next"
-msgstr "次"
-
-#: gitk:2082
-msgid "prev"
-msgstr "前"
-
-#: gitk:2083
+#: gitk:2295
 msgid "commit"
 msgstr "コミット"
 
-#: gitk:2086 gitk:2088 gitk:4293 gitk:4316 gitk:4340 gitk:6281 gitk:6353
-#: gitk:6437
+#: gitk:2299 gitk:2301 gitk:4669 gitk:4692 gitk:4716 gitk:6736 gitk:6808
+#: gitk:6893
 msgid "containing:"
 msgstr "含む:"
 
-#: gitk:2089 gitk:3164 gitk:3169 gitk:4368
+#: gitk:2302 gitk:3522 gitk:3527 gitk:4745
 msgid "touching paths:"
 msgstr "パスの一部:"
 
-#: gitk:2090 gitk:4373
+#: gitk:2303 gitk:4759
 msgid "adding/removing string:"
 msgstr "追加/除去する文字列:"
 
-#: gitk:2099 gitk:2101
+#: gitk:2304 gitk:4761
+msgid "changing lines matching:"
+msgstr ""
+
+#: gitk:2313 gitk:2315 gitk:4748
 msgid "Exact"
 msgstr "英字の大小を区別する"
 
-#: gitk:2101 gitk:4448 gitk:6249
+#: gitk:2315 gitk:4836 gitk:6704
 msgid "IgnCase"
 msgstr "英字の大小を区別しない"
 
-#: gitk:2101 gitk:4342 gitk:4446 gitk:6245
+#: gitk:2315 gitk:4718 gitk:4834 gitk:6700
 msgid "Regexp"
 msgstr "正規表現"
 
-#: gitk:2103 gitk:2104 gitk:4467 gitk:4497 gitk:4504 gitk:6373 gitk:6441
+#: gitk:2317 gitk:2318 gitk:4856 gitk:4886 gitk:4893 gitk:6829 gitk:6897
 msgid "All fields"
 msgstr "全ての項目"
 
-#: gitk:2104 gitk:4465 gitk:4497 gitk:6312
+#: gitk:2318 gitk:4853 gitk:4886 gitk:6767
 msgid "Headline"
 msgstr "ヘッドライン"
 
-#: gitk:2105 gitk:4465 gitk:6312 gitk:6441 gitk:6875
+#: gitk:2319 gitk:4853 gitk:6767 gitk:6897 gitk:7370
 msgid "Comments"
 msgstr "コメント"
 
-#: gitk:2105 gitk:4465 gitk:4469 gitk:4504 gitk:6312 gitk:6810 gitk:8091
-#: gitk:8106
+#: gitk:2319 gitk:4853 gitk:4858 gitk:4893 gitk:6767 gitk:7305 gitk:8811
+#: gitk:8826
 msgid "Author"
 msgstr "作者"
 
-#: gitk:2105 gitk:4465 gitk:6312 gitk:6812
+#: gitk:2319 gitk:4853 gitk:6767 gitk:7307
 msgid "Committer"
 msgstr "コミット者"
 
-#: gitk:2134
+#: gitk:2350
 msgid "Search"
 msgstr "検索"
 
-#: gitk:2141
+#: gitk:2358
 msgid "Diff"
 msgstr "Diff"
 
-#: gitk:2143
+#: gitk:2360
 msgid "Old version"
 msgstr "旧バージョン"
 
-#: gitk:2145
+#: gitk:2362
 msgid "New version"
 msgstr "新バージョン"
 
-#: gitk:2147
+#: gitk:2364
 msgid "Lines of context"
 msgstr "文脈行数"
 
-#: gitk:2157
+#: gitk:2374
 msgid "Ignore space change"
 msgstr "空白の違いを無視"
 
-#: gitk:2215
+#: gitk:2378 gitk:2380 gitk:7940 gitk:8187
+msgid "Line diff"
+msgstr ""
+
+#: gitk:2445
 msgid "Patch"
 msgstr "パッチ"
 
-#: gitk:2217
+#: gitk:2447
 msgid "Tree"
 msgstr "ツリー"
 
-#: gitk:2361 gitk:2378
+#: gitk:2616 gitk:2636
 msgid "Diff this -> selected"
 msgstr "これと選択したコミットのdiffを見る"
 
-#: gitk:2362 gitk:2379
+#: gitk:2617 gitk:2637
 msgid "Diff selected -> this"
 msgstr "選択したコミットとこれのdiffを見る"
 
-#: gitk:2363 gitk:2380
+#: gitk:2618 gitk:2638
 msgid "Make patch"
 msgstr "パッチ作成"
 
-#: gitk:2364 gitk:8497
+#: gitk:2619 gitk:9235
 msgid "Create tag"
 msgstr "タグ生成"
 
-#: gitk:2365 gitk:8603
+#: gitk:2620 gitk:9352
 msgid "Write commit to file"
 msgstr "コミットをファイルに書き出す"
 
-#: gitk:2366 gitk:8660
+#: gitk:2621 gitk:9409
 msgid "Create new branch"
 msgstr "新規ブランチ生成"
 
-#: gitk:2367
+#: gitk:2622
 msgid "Cherry-pick this commit"
 msgstr "このコミットをチェリーピックする"
 
-#: gitk:2368
+#: gitk:2623
 msgid "Reset HEAD branch to here"
 msgstr "ブランチのHEADをここにリセットする"
 
-#: gitk:2369
+#: gitk:2624
 msgid "Mark this commit"
 msgstr "このコミットにマークをつける"
 
-#: gitk:2370
+#: gitk:2625
 msgid "Return to mark"
 msgstr "マークを付けた所に戻る"
 
-#: gitk:2371
+#: gitk:2626
 msgid "Find descendant of this and mark"
 msgstr "これとマークをつけた所との子孫を見つける"
 
-#: gitk:2372
+#: gitk:2627
 msgid "Compare with marked commit"
 msgstr "マークを付けたコミットと比較する"
 
-#: gitk:2386
+#: gitk:2628 gitk:2639
+#, fuzzy
+msgid "Diff this -> marked commit"
+msgstr "これと選択したコミットのdiffを見る"
+
+#: gitk:2629 gitk:2640
+#, fuzzy
+msgid "Diff marked commit -> this"
+msgstr "選択したコミットとこれのdiffを見る"
+
+#: gitk:2630
+#, fuzzy
+msgid "Revert this commit"
+msgstr "このコミットにマークをつける"
+
+#: gitk:2646
 msgid "Check out this branch"
 msgstr "このブランチをチェックアウトする"
 
-#: gitk:2387
+#: gitk:2647
 msgid "Remove this branch"
 msgstr "このブランチを除去する"
 
-#: gitk:2394
+#: gitk:2654
 msgid "Highlight this too"
 msgstr "これもハイライトさせる"
 
-#: gitk:2395
+#: gitk:2655
 msgid "Highlight this only"
 msgstr "これだけをハイライトさせる"
 
-#: gitk:2396
+#: gitk:2656
 msgid "External diff"
 msgstr "外部diffツール"
 
-#: gitk:2397
+#: gitk:2657
 msgid "Blame parent commit"
 msgstr "親コミットから blame をかける"
 
-#: gitk:2404
+#: gitk:2664
 msgid "Show origin of this line"
 msgstr "この行の出自を表示する"
 
-#: gitk:2405
+#: gitk:2665
 msgid "Run git gui blame on this line"
 msgstr "この行に git gui で blame をかける"
 
-#: gitk:2658
+#: gitk:3011
+#, fuzzy
 msgid ""
 "\n"
 "Gitk - a commit viewer for git\n"
 "\n"
-"Copyright \\u00a9 2005-2010 Paul Mackerras\n"
+"Copyright © 2005-2014 Paul Mackerras\n"
 "\n"
 "Use and redistribute under the terms of the GNU General Public License"
 msgstr ""
 "\n"
 "Gitk - gitコミットビューア\n"
 "\n"
 "Copyright \\u00a9 2005-2010 Paul Mackerras\n"
 "\n"
 "使用および再配布は GNU General Public License に従ってください"
 
-#: gitk:2666 gitk:2728 gitk:9025
+#: gitk:3019 gitk:3085 gitk:9836
 msgid "Close"
 msgstr "閉じる"
 
-#: gitk:2685
+#: gitk:3040
 msgid "Gitk key bindings"
 msgstr "Gitk キーバインディング"
 
-#: gitk:2688
+#: gitk:3043
 msgid "Gitk key bindings:"
 msgstr "Gitk キーバインディング:"
 
-#: gitk:2690
+#: gitk:3045
 #, tcl-format
 msgid "<%s-Q>\t\tQuit"
 msgstr "<%s-Q>\t\t終了"
 
-#: gitk:2691
+#: gitk:3046
+#, fuzzy, tcl-format
+msgid "<%s-W>\t\tClose window"
+msgstr "<%s-F>\t\t検索"
+
+#: gitk:3047
 msgid "<Home>\t\tMove to first commit"
 msgstr "<Home>\t\t最初のコミットに移動"
 
-#: gitk:2692
+#: gitk:3048
 msgid "<End>\t\tMove to last commit"
 msgstr "<End>\t\t最後のコミットに移動"
 
-#: gitk:2693
-msgid "<Up>, p, i\tMove up one commit"
+#: gitk:3049
+#, fuzzy
+msgid "<Up>, p, k\tMove up one commit"
 msgstr "<Up>, p, i\t一つ上のコミットに移動"
 
-#: gitk:2694
-msgid "<Down>, n, k\tMove down one commit"
+#: gitk:3050
+#, fuzzy
+msgid "<Down>, n, j\tMove down one commit"
 msgstr "<Down>, n, k\t一つ下のコミットに移動"
 
-#: gitk:2695
-msgid "<Left>, z, j\tGo back in history list"
+#: gitk:3051
+#, fuzzy
+msgid "<Left>, z, h\tGo back in history list"
 msgstr "<Left>, z, j\t履歴の前に戻る"
 
-#: gitk:2696
+#: gitk:3052
 msgid "<Right>, x, l\tGo forward in history list"
 msgstr "<Right>, x, l\t履歴の次へ進む"
 
-#: gitk:2697
+#: gitk:3053
+#, tcl-format
+msgid "<%s-n>\tGo to n-th parent of current commit in history list"
+msgstr ""
+
+#: gitk:3054
 msgid "<PageUp>\tMove up one page in commit list"
 msgstr "<PageUp>\tコミットリストの一つ上のページに移動"
 
-#: gitk:2698
+#: gitk:3055
 msgid "<PageDown>\tMove down one page in commit list"
 msgstr "<PageDown>\tコミットリストの一つ下のページに移動"
 
-#: gitk:2699
+#: gitk:3056
 #, tcl-format
 msgid "<%s-Home>\tScroll to top of commit list"
 msgstr "<%s-Home>\tコミットリストの一番上にスクロールする"
 
-#: gitk:2700
+#: gitk:3057
 #, tcl-format
 msgid "<%s-End>\tScroll to bottom of commit list"
 msgstr "<%s-End>\tコミットリストの一番下にスクロールする"
 
-#: gitk:2701
+#: gitk:3058
 #, tcl-format
 msgid "<%s-Up>\tScroll commit list up one line"
 msgstr "<%s-Up>\tコミットリストの一つ下の行にスクロールする"
 
-#: gitk:2702
+#: gitk:3059
 #, tcl-format
 msgid "<%s-Down>\tScroll commit list down one line"
 msgstr "<%s-Down>\tコミットリストの一つ下の行にスクロールする"
 
-#: gitk:2703
+#: gitk:3060
 #, tcl-format
 msgid "<%s-PageUp>\tScroll commit list up one page"
 msgstr "<%s-PageUp>\tコミットリストの上のページにスクロールする"
 
-#: gitk:2704
+#: gitk:3061
 #, tcl-format
 msgid "<%s-PageDown>\tScroll commit list down one page"
 msgstr "<%s-PageDown>\tコミットリストの下のページにスクロールする"
 
-#: gitk:2705
+#: gitk:3062
 msgid "<Shift-Up>\tFind backwards (upwards, later commits)"
 msgstr "<Shift-Up>\t後方を検索 (上方の・新しいコミット)"
 
-#: gitk:2706
+#: gitk:3063
 msgid "<Shift-Down>\tFind forwards (downwards, earlier commits)"
 msgstr "<Shift-Down>\t前方を検索（下方の・古いコミット）"
 
-#: gitk:2707
+#: gitk:3064
 msgid "<Delete>, b\tScroll diff view up one page"
 msgstr "<Delete>, b\tdiff画面を上のページにスクロールする"
 
-#: gitk:2708
+#: gitk:3065
 msgid "<Backspace>\tScroll diff view up one page"
 msgstr "<Backspace>\tdiff画面を上のページにスクロールする"
 
-#: gitk:2709
+#: gitk:3066
 msgid "<Space>\t\tScroll diff view down one page"
 msgstr "<Space>\t\tdiff画面を下のページにスクロールする"
 
-#: gitk:2710
+#: gitk:3067
 msgid "u\t\tScroll diff view up 18 lines"
 msgstr "u\t\tdiff画面を上に18行スクロールする"
 
-#: gitk:2711
+#: gitk:3068
 msgid "d\t\tScroll diff view down 18 lines"
 msgstr "d\t\tdiff画面を下に18行スクロールする"
 
-#: gitk:2712
+#: gitk:3069
 #, tcl-format
 msgid "<%s-F>\t\tFind"
 msgstr "<%s-F>\t\t検索"
 
-#: gitk:2713
+#: gitk:3070
 #, tcl-format
 msgid "<%s-G>\t\tMove to next find hit"
 msgstr "<%s-G>\t\t次を検索して移動"
 
-#: gitk:2714
+#: gitk:3071
 msgid "<Return>\tMove to next find hit"
 msgstr "<Return>\t次を検索して移動"
 
-#: gitk:2715
+#: gitk:3072
 msgid "/\t\tFocus the search box"
 msgstr "/\t\t検索ボックスにフォーカス"
 
-#: gitk:2716
+#: gitk:3073
 msgid "?\t\tMove to previous find hit"
 msgstr "?\t\t前を検索して移動"
 
-#: gitk:2717
+#: gitk:3074
 msgid "f\t\tScroll diff view to next file"
 msgstr "f\t\t次のファイルにdiff画面をスクロールする"
 
-#: gitk:2718
+#: gitk:3075
 #, tcl-format
 msgid "<%s-S>\t\tSearch for next hit in diff view"
 msgstr "<%s-S>\t\tdiff画面の次を検索"
 
-#: gitk:2719
+#: gitk:3076
 #, tcl-format
 msgid "<%s-R>\t\tSearch for previous hit in diff view"
 msgstr "<%s-R>\t\tdiff画面の前を検索"
 
-#: gitk:2720
+#: gitk:3077
 #, tcl-format
 msgid "<%s-KP+>\tIncrease font size"
 msgstr "<%s-KP+>\t文字サイズを拡大"
 
-#: gitk:2721
+#: gitk:3078
 #, tcl-format
 msgid "<%s-plus>\tIncrease font size"
 msgstr "<%s-plus>\t文字サイズを拡大"
 
-#: gitk:2722
+#: gitk:3079
 #, tcl-format
 msgid "<%s-KP->\tDecrease font size"
 msgstr "<%s-KP->\t文字サイズを縮小"
 
-#: gitk:2723
+#: gitk:3080
 #, tcl-format
 msgid "<%s-minus>\tDecrease font size"
 msgstr "<%s-minus>\t文字サイズを縮小"
 
-#: gitk:2724
+#: gitk:3081
 msgid "<F5>\t\tUpdate"
 msgstr "<F5>\t\t更新"
 
-#: gitk:3179 gitk:3188
+#: gitk:3546 gitk:3555
 #, tcl-format
 msgid "Error creating temporary directory %s:"
 msgstr "一時ディレクトリ %s 生成時エラー:"
 
-#: gitk:3201
+#: gitk:3568
 #, tcl-format
 msgid "Error getting \"%s\" from %s:"
 msgstr "\"%s\" のエラーが %s に発生:"
 
-#: gitk:3264
+#: gitk:3631
 msgid "command failed:"
 msgstr "コマンド失敗:"
 
-#: gitk:3410
+#: gitk:3780
 msgid "No such commit"
 msgstr "そのようなコミットはありません"
 
-#: gitk:3424
+#: gitk:3794
 msgid "git gui blame: command failed:"
 msgstr "git gui blame: コマンド失敗:"
 
-#: gitk:3455
+#: gitk:3825
 #, tcl-format
 msgid "Couldn't read merge head: %s"
 msgstr "マージする HEAD を読み込めません: %s"
 
-#: gitk:3463
+#: gitk:3833
 #, tcl-format
 msgid "Error reading index: %s"
 msgstr "インデックス読み込みエラー: %s"
 
-#: gitk:3488
+#: gitk:3858
 #, tcl-format
 msgid "Couldn't start git blame: %s"
 msgstr "git blame を始められません: %s"
 
-#: gitk:3491 gitk:6280
+#: gitk:3861 gitk:6735
 msgid "Searching"
 msgstr "検索中"
 
-#: gitk:3523
+#: gitk:3893
 #, tcl-format
 msgid "Error running git blame: %s"
 msgstr "git blame 実行エラー: %s"
 
-#: gitk:3551
+#: gitk:3921
 #, tcl-format
 msgid "That line comes from commit %s,  which is not in this view"
 msgstr "コミット %s に由来するその行は、このビューに表示されていません"
 
-#: gitk:3565
+#: gitk:3935
 msgid "External diff viewer failed:"
 msgstr "外部diffビューアが失敗:"
 
-#: gitk:3683
+#: gitk:4053
 msgid "Gitk view definition"
 msgstr "Gitk ビュー定義"
 
-#: gitk:3687
+#: gitk:4057
 msgid "Remember this view"
 msgstr "このビューを記憶する"
 
-#: gitk:3688
+#: gitk:4058
 msgid "References (space separated list):"
 msgstr "リファレンス（スペース区切りのリスト）:"
 
-#: gitk:3689
+#: gitk:4059
 msgid "Branches & tags:"
 msgstr "ブランチ＆タグ:"
 
-#: gitk:3690
+#: gitk:4060
 msgid "All refs"
 msgstr "全てのリファレンス"
 
-#: gitk:3691
+#: gitk:4061
 msgid "All (local) branches"
 msgstr "全ての（ローカルな）ブランチ"
 
-#: gitk:3692
+#: gitk:4062
 msgid "All tags"
 msgstr "全てのタグ"
 
-#: gitk:3693
+#: gitk:4063
 msgid "All remote-tracking branches"
 msgstr "全てのリモート追跡ブランチ"
 
-#: gitk:3694
+#: gitk:4064
 msgid "Commit Info (regular expressions):"
 msgstr "コミット情報（正規表現）:"
 
-#: gitk:3695
+#: gitk:4065
 msgid "Author:"
 msgstr "作者:"
 
-#: gitk:3696
+#: gitk:4066
 msgid "Committer:"
 msgstr "コミット者:"
 
-#: gitk:3697
+#: gitk:4067
 msgid "Commit Message:"
 msgstr "コミットメッセージ:"
 
-#: gitk:3698
+#: gitk:4068
 msgid "Matches all Commit Info criteria"
 msgstr "コミット情報の全ての条件に一致"
 
-#: gitk:3699
+#: gitk:4069
+#, fuzzy
+msgid "Matches none Commit Info criteria"
+msgstr "コミット情報の全ての条件に一致"
+
+#: gitk:4070
 msgid "Changes to Files:"
 msgstr "変更したファイル:"
 
-#: gitk:3700
+#: gitk:4071
 msgid "Fixed String"
 msgstr "固定文字列"
 
-#: gitk:3701
+#: gitk:4072
 msgid "Regular Expression"
 msgstr "正規表現"
 
-#: gitk:3702
+#: gitk:4073
 msgid "Search string:"
 msgstr "検索文字列:"
 
-#: gitk:3703
+#: gitk:4074
 msgid ""
 "Commit Dates (\"2 weeks ago\", \"2009-03-17 15:27:38\", \"March 17, 2009 "
 "15:27:38\"):"
 msgstr ""
 "コミット日時 (\"2 weeks ago\", \"2009-03-17 15:27:38\", \"March 17, 2009 "
 "15:27:38\"):"
 
-#: gitk:3704
+#: gitk:4075
 msgid "Since:"
 msgstr "期間の始め:"
 
-#: gitk:3705
+#: gitk:4076
 msgid "Until:"
 msgstr "期間の終わり:"
 
-#: gitk:3706
+#: gitk:4077
 msgid "Limit and/or skip a number of revisions (positive integer):"
 msgstr "制限・省略するリビジョンの数（正の整数）:"
 
-#: gitk:3707
+#: gitk:4078
 msgid "Number to show:"
 msgstr "表示する数:"
 
-#: gitk:3708
+#: gitk:4079
 msgid "Number to skip:"
 msgstr "省略する数:"
 
-#: gitk:3709
+#: gitk:4080
 msgid "Miscellaneous options:"
 msgstr "その他のオプション:"
 
-#: gitk:3710
+#: gitk:4081
 msgid "Strictly sort by date"
 msgstr "厳密に日付順で並び替え"
 
-#: gitk:3711
+#: gitk:4082
 msgid "Mark branch sides"
 msgstr "側枝マーク"
 
-#: gitk:3712
+#: gitk:4083
 msgid "Limit to first parent"
 msgstr "最初の親に制限"
 
-#: gitk:3713
+#: gitk:4084
 msgid "Simple history"
 msgstr "簡易な履歴"
 
-#: gitk:3714
+#: gitk:4085
 msgid "Additional arguments to git log:"
 msgstr "git log への追加の引数:"
 
-#: gitk:3715
+#: gitk:4086
 msgid "Enter files and directories to include, one per line:"
 msgstr "含まれるファイル・ディレクトリを一行ごとに入力:"
 
-#: gitk:3716
+#: gitk:4087
 msgid "Command to generate more commits to include:"
 msgstr "コミット追加コマンド:"
 
-#: gitk:3838
+#: gitk:4211
 msgid "Gitk: edit view"
 msgstr "Gitk: ビュー編集"
 
-#: gitk:3846
+#: gitk:4219
 msgid "-- criteria for selecting revisions"
 msgstr "― リビジョンの選択条件"
 
-#: gitk:3851
-msgid "View Name:"
+#: gitk:4224
+#, fuzzy
+msgid "View Name"
 msgstr "ビュー名:"
 
-#: gitk:3926
+#: gitk:4299
 msgid "Apply (F5)"
 msgstr "適用 (F5)"
 
-#: gitk:3964
+#: gitk:4337
 msgid "Error in commit selection arguments:"
 msgstr "コミット選択引数のエラー:"
 
-#: gitk:4017 gitk:4069 gitk:4517 gitk:4531 gitk:5792 gitk:11263 gitk:11264
+#: gitk:4392 gitk:4445 gitk:4906 gitk:4920 gitk:6190 gitk:12346 gitk:12347
 msgid "None"
 msgstr "無し"
 
-#: gitk:4465 gitk:6312 gitk:8093 gitk:8108
-msgid "Date"
-msgstr "日付"
-
-#: gitk:4465 gitk:6312
-msgid "CDate"
-msgstr "作成日"
-
-#: gitk:4614 gitk:4619
+#: gitk:5003 gitk:5008
 msgid "Descendant"
 msgstr "子孫"
 
-#: gitk:4615
+#: gitk:5004
 msgid "Not descendant"
 msgstr "非子孫"
 
-#: gitk:4622 gitk:4627
+#: gitk:5011 gitk:5016
 msgid "Ancestor"
 msgstr "祖先"
 
-#: gitk:4623
+#: gitk:5012
 msgid "Not ancestor"
 msgstr "非祖先"
 
-#: gitk:4913
+#: gitk:5306
 msgid "Local changes checked in to index but not committed"
 msgstr "ステージされた、コミット前のローカルな変更"
 
-#: gitk:4949
+#: gitk:5342
 msgid "Local uncommitted changes, not checked in to index"
 msgstr "ステージされていない、コミット前のローカルな変更"
 
-#: gitk:6630
+#: gitk:7115
+msgid "and many more"
+msgstr ""
+
+#: gitk:7118
 msgid "many"
 msgstr "多数"
 
-#: gitk:6814
+#: gitk:7309
 msgid "Tags:"
 msgstr "タグ:"
 
-#: gitk:6831 gitk:6837 gitk:8086
+#: gitk:7326 gitk:7332 gitk:8806
 msgid "Parent"
 msgstr "親"
 
-#: gitk:6842
+#: gitk:7337
 msgid "Child"
 msgstr "子"
 
-#: gitk:6851
+#: gitk:7346
 msgid "Branch"
 msgstr "ブランチ"
 
-#: gitk:6854
+#: gitk:7349
 msgid "Follows"
 msgstr "下位"
 
-#: gitk:6857
+#: gitk:7352
 msgid "Precedes"
 msgstr "上位"
 
-#: gitk:7359
+#: gitk:7947
 #, tcl-format
 msgid "Error getting diffs: %s"
 msgstr "diff取得エラー: %s"
 
-#: gitk:7914
+#: gitk:8631
 msgid "Goto:"
 msgstr "Goto:"
 
-#: gitk:7916
-msgid "SHA1 ID:"
-msgstr "SHA1 ID:"
-
-#: gitk:7935
+#: gitk:8652
 #, tcl-format
 msgid "Short SHA1 id %s is ambiguous"
 msgstr "%s を含む SHA1 ID は複数存在します"
 
-#: gitk:7942
+#: gitk:8659
 #, tcl-format
 msgid "Revision %s is not known"
 msgstr "リビジョン %s は不明です"
 
-#: gitk:7952
+#: gitk:8669
 #, tcl-format
 msgid "SHA1 id %s is not known"
 msgstr "SHA1 id %s は不明です"
 
-#: gitk:7954
+#: gitk:8671
 #, tcl-format
 msgid "Revision %s is not in the current view"
 msgstr "リビジョン %s は現在のビューにはありません"
 
-#: gitk:8096
+#: gitk:8813 gitk:8828
+msgid "Date"
+msgstr "日付"
+
+#: gitk:8816
 msgid "Children"
 msgstr "子"
 
-#: gitk:8153
+#: gitk:8879
 #, tcl-format
 msgid "Reset %s branch to here"
 msgstr "%s ブランチをここにリセットする"
 
-#: gitk:8155
+#: gitk:8881
 msgid "Detached head: can't reset"
 msgstr "切り離されたHEAD: リセットできません"
 
-#: gitk:8264 gitk:8270
+#: gitk:8986 gitk:8992
 msgid "Skipping merge commit "
 msgstr "コミットマージをスキップ: "
 
-#: gitk:8279 gitk:8284
+#: gitk:9001 gitk:9006
 msgid "Error getting patch ID for "
 msgstr "パッチ取得エラー: ID "
 
-#: gitk:8280 gitk:8285
+#: gitk:9002 gitk:9007
 msgid " - stopping\n"
 msgstr " - 停止\n"
 
-#: gitk:8290 gitk:8293 gitk:8301 gitk:8314 gitk:8323
+#: gitk:9012 gitk:9015 gitk:9023 gitk:9037 gitk:9046
 msgid "Commit "
 msgstr "コミット "
 
-#: gitk:8294
+#: gitk:9016
 msgid ""
 " is the same patch as\n"
 "       "
 msgstr ""
 " は下記のパッチと同等\n"
 "       "
 
-#: gitk:8302
+#: gitk:9024
 msgid ""
 " differs from\n"
 "       "
 msgstr ""
 " 下記からのdiff\n"
 "       "
 
-#: gitk:8304
+#: gitk:9026
 msgid ""
 "Diff of commits:\n"
 "\n"
 msgstr ""
 "コミットのdiff:\n"
 "\n"
 
-#: gitk:8315 gitk:8324
+#: gitk:9038 gitk:9047
 #, tcl-format
 msgid " has %s children - stopping\n"
 msgstr " には %s の子があります - 停止\n"
 
-#: gitk:8344
+#: gitk:9066
 #, tcl-format
 msgid "Error writing commit to file: %s"
 msgstr "ファイルへのコミット書き出しエラー: %s"
 
-#: gitk:8350
+#: gitk:9072
 #, tcl-format
 msgid "Error diffing commits: %s"
 msgstr "コミットのdiff実行エラー: %s"
 
-#: gitk:8380
+#: gitk:9118
 msgid "Top"
 msgstr "Top"
 
-#: gitk:8381
+#: gitk:9119
 msgid "From"
 msgstr "From"
 
-#: gitk:8386
+#: gitk:9124
 msgid "To"
 msgstr "To"
 
-#: gitk:8410
+#: gitk:9148
 msgid "Generate patch"
 msgstr "パッチ生成"
 
-#: gitk:8412
+#: gitk:9150
 msgid "From:"
 msgstr "From:"
 
-#: gitk:8421
+#: gitk:9159
 msgid "To:"
 msgstr "To:"
 
-#: gitk:8430
+#: gitk:9168
 msgid "Reverse"
 msgstr "逆"
 
-#: gitk:8432 gitk:8617
+#: gitk:9170 gitk:9366
 msgid "Output file:"
 msgstr "出力ファイル:"
 
-#: gitk:8438
+#: gitk:9176
 msgid "Generate"
 msgstr "生成"
 
-#: gitk:8476
+#: gitk:9214
 msgid "Error creating patch:"
 msgstr "パッチ生成エラー:"
 
-#: gitk:8499 gitk:8605 gitk:8662
+#: gitk:9237 gitk:9354 gitk:9411
 msgid "ID:"
 msgstr "ID:"
 
-#: gitk:8508
+#: gitk:9246
 msgid "Tag name:"
 msgstr "タグ名:"
 
-#: gitk:8512 gitk:8671
+#: gitk:9249
+msgid "Tag message is optional"
+msgstr ""
+
+#: gitk:9251
+#, fuzzy
+msgid "Tag message:"
+msgstr "タグ名:"
+
+#: gitk:9255 gitk:9420
 msgid "Create"
 msgstr "生成"
 
-#: gitk:8529
+#: gitk:9273
 msgid "No tag name specified"
 msgstr "タグの名称が指定されていません"
 
-#: gitk:8533
+#: gitk:9277
 #, tcl-format
 msgid "Tag \"%s\" already exists"
 msgstr "タグ \"%s\" は既に存在します"
 
-#: gitk:8539
+#: gitk:9287
 msgid "Error creating tag:"
 msgstr "タグ生成エラー:"
 
-#: gitk:8614
+#: gitk:9363
 msgid "Command:"
 msgstr "コマンド:"
 
-#: gitk:8622
+#: gitk:9371
 msgid "Write"
 msgstr "書き出し"
 
-#: gitk:8640
+#: gitk:9389
 msgid "Error writing commit:"
 msgstr "コミット書き出しエラー:"
 
-#: gitk:8667
+#: gitk:9416
 msgid "Name:"
 msgstr "名前:"
 
-#: gitk:8690
+#: gitk:9439
 msgid "Please specify a name for the new branch"
 msgstr "新しいブランチの名前を指定してください"
 
-#: gitk:8695
+#: gitk:9444
 #, tcl-format
 msgid "Branch '%s' already exists. Overwrite?"
 msgstr "ブランチ '%s' は既に存在します。上書きしますか？"
 
-#: gitk:8761
+#: gitk:9511
 #, tcl-format
 msgid "Commit %s is already included in branch %s -- really re-apply it?"
 msgstr ""
 "コミット %s は既にブランチ %s に含まれています ― 本当にこれを再適用しますか？"
 
-#: gitk:8766
+#: gitk:9516
 msgid "Cherry-picking"
 msgstr "チェリーピック中"
 
-#: gitk:8775
+#: gitk:9525
 #, tcl-format
 msgid ""
 "Cherry-pick failed because of local changes to file '%s'.\n"
 "Please commit, reset or stash your changes and try again."
 msgstr ""
 "ファイル '%s' のローカルな変更のためにチェリーピックは失敗しました。\n"
 "あなたの変更に commit, reset, stash のいずれかを行ってからやり直してくださ"
 "い。"
 
-#: gitk:8781
+#: gitk:9531
 msgid ""
 "Cherry-pick failed because of merge conflict.\n"
 "Do you wish to run git citool to resolve it?"
 msgstr ""
 "マージの衝突によってチェリーピックは失敗しました。\n"
 "この解決のために git citool を実行したいですか？"
 
-#: gitk:8797
+#: gitk:9547 gitk:9605
 msgid "No changes committed"
 msgstr "何の変更もコミットされていません"
 
-#: gitk:8823
+#: gitk:9574
+#, fuzzy, tcl-format
+msgid "Commit %s is not included in branch %s -- really revert it?"
+msgstr ""
+"コミット %s は既にブランチ %s に含まれています ― 本当にこれを再適用しますか？"
+
+#: gitk:9579
+#, fuzzy
+msgid "Reverting"
+msgstr "リセット中"
+
+#: gitk:9587
+#, fuzzy, tcl-format
+msgid ""
+"Revert failed because of local changes to the following files:%s Please "
+"commit, reset or stash  your changes and try again."
+msgstr ""
+"ファイル '%s' のローカルな変更のためにチェリーピックは失敗しました。\n"
+"あなたの変更に commit, reset, stash のいずれかを行ってからやり直してくださ"
+"い。"
+
+#: gitk:9591
+#, fuzzy
+msgid ""
+"Revert failed because of merge conflict.\n"
+" Do you wish to run git citool to resolve it?"
+msgstr ""
+"マージの衝突によってチェリーピックは失敗しました。\n"
+"この解決のために git citool を実行したいですか？"
+
+#: gitk:9634
 msgid "Confirm reset"
 msgstr "確認を取り消す"
 
-#: gitk:8825
+#: gitk:9636
 #, tcl-format
 msgid "Reset branch %s to %s?"
 msgstr "ブランチ %s を %s にリセットしますか？"
 
-#: gitk:8829
+#: gitk:9638
 msgid "Reset type:"
 msgstr "Reset タイプ:"
 
-#: gitk:8833
+#: gitk:9641
 msgid "Soft: Leave working tree and index untouched"
 msgstr "Soft: 作業ツリーもインデックスもそのままにする"
 
-#: gitk:8836
+#: gitk:9644
 msgid "Mixed: Leave working tree untouched, reset index"
 msgstr "Mixed: 作業ツリーをそのままにして、インデックスをリセット"
 
-#: gitk:8839
+#: gitk:9647
 msgid ""
 "Hard: Reset working tree and index\n"
 "(discard ALL local changes)"
 msgstr ""
 "Hard: 作業ツリーやインデックスをリセット\n"
 "（「全ての」ローカルな変更を破棄）"
 
-#: gitk:8856
+#: gitk:9664
 msgid "Resetting"
 msgstr "リセット中"
 
-#: gitk:8913
+#: gitk:9724
 msgid "Checking out"
 msgstr "チェックアウト"
 
-#: gitk:8966
+#: gitk:9777
 msgid "Cannot delete the currently checked-out branch"
 msgstr "現在チェックアウトされているブランチを削除することはできません"
 
-#: gitk:8972
+#: gitk:9783
 #, tcl-format
 msgid ""
 "The commits on branch %s aren't on any other branch.\n"
 "Really delete branch %s?"
 msgstr ""
 "ブランチ %s には他のブランチに存在しないコミットがあります。\n"
 "本当にブランチ %s を削除しますか？"
 
-#: gitk:9003
+#: gitk:9814
 #, tcl-format
 msgid "Tags and heads: %s"
 msgstr "タグとHEAD: %s"
 
-#: gitk:9018
+#: gitk:9829
 msgid "Filter"
 msgstr "フィルター"
 
-#: gitk:9313
+#: gitk:10125
 msgid ""
 "Error reading commit topology information; branch and preceding/following "
 "tag information will be incomplete."
 msgstr ""
 "コミット構造情報読み込みエラー; ブランチ及び上位/下位のタグ情報が不完全である"
 "ようです。"
 
-#: gitk:10299
+#: gitk:11102
 msgid "Tag"
 msgstr "タグ"
 
-#: gitk:10299
+#: gitk:11106
 msgid "Id"
 msgstr "ID"
 
-#: gitk:10347
+#: gitk:11189
 msgid "Gitk font chooser"
 msgstr "Gitk フォント選択"
 
-#: gitk:10364
+#: gitk:11206
 msgid "B"
 msgstr "B"
 
-#: gitk:10367
+#: gitk:11209
 msgid "I"
 msgstr "I"
 
-#: gitk:10463
-msgid "Gitk preferences"
-msgstr "Gitk 設定"
-
-#: gitk:10465
+#: gitk:11327
 msgid "Commit list display options"
 msgstr "コミットリスト表示オプション"
 
-#: gitk:10468
+#: gitk:11330
 msgid "Maximum graph width (lines)"
 msgstr "最大グラフ幅（線の本数）"
 
-#: gitk:10472
-#, tcl-format
+#: gitk:11334
+#, no-tcl-format
 msgid "Maximum graph width (% of pane)"
 msgstr "最大グラフ幅（ペインに対する％）"
 
-#: gitk:10476
+#: gitk:11337
 msgid "Show local changes"
 msgstr "ローカルな変更を表示"
 
-#: gitk:10479
-msgid "Auto-select SHA1"
+#: gitk:11340
+#, fuzzy
+msgid "Auto-select SHA1 (length)"
 msgstr "SHA1 の自動選択"
 
-#: gitk:10483
+#: gitk:11344
+msgid "Hide remote refs"
+msgstr "リモートリファレンスを隠す"
+
+#: gitk:11348
 msgid "Diff display options"
 msgstr "diff表示オプション"
 
-#: gitk:10485
+#: gitk:11350
 msgid "Tab spacing"
 msgstr "タブ空白幅"
 
-#: gitk:10488
-msgid "Display nearby tags"
+#: gitk:11353
+#, fuzzy
+msgid "Display nearby tags/heads"
 msgstr "近くのタグを表示する"
 
-#: gitk:10491
-msgid "Hide remote refs"
-msgstr "リモートリファレンスを隠す"
+#: gitk:11356
+msgid "Maximum # tags/heads to show"
+msgstr ""
 
-#: gitk:10494
+#: gitk:11359
 msgid "Limit diffs to listed paths"
 msgstr "diff をリストのパスに制限"
 
-#: gitk:10497
+#: gitk:11362
 msgid "Support per-file encodings"
 msgstr "ファイルごとのエンコーディングのサポート"
 
-#: gitk:10503 gitk:10572
+#: gitk:11368 gitk:11515
 msgid "External diff tool"
 msgstr "外部diffツール"
 
-#: gitk:10505
+#: gitk:11369
 msgid "Choose..."
 msgstr "選択..."
 
-#: gitk:10510
+#: gitk:11374
+#, fuzzy
+msgid "General options"
+msgstr "パッチ生成"
+
+#: gitk:11377
+msgid "Use themed widgets"
+msgstr ""
+
+#: gitk:11379
+msgid "(change requires restart)"
+msgstr ""
+
+#: gitk:11381
+msgid "(currently unavailable)"
+msgstr ""
+
+#: gitk:11392
 msgid "Colors: press to choose"
 msgstr "色: ボタンを押して選択"
 
-#: gitk:10513
+#: gitk:11395
 msgid "Interface"
 msgstr "インターフェイス"
 
-#: gitk:10514
+#: gitk:11396
 msgid "interface"
 msgstr "インターフェイス"
 
-#: gitk:10517
+#: gitk:11399
 msgid "Background"
 msgstr "背景"
 
-#: gitk:10518 gitk:10548
+#: gitk:11400 gitk:11430
 msgid "background"
 msgstr "背景"
 
-#: gitk:10521
+#: gitk:11403
 msgid "Foreground"
 msgstr "前景"
 
-#: gitk:10522
+#: gitk:11404
 msgid "foreground"
 msgstr "前景"
 
-#: gitk:10525
+#: gitk:11407
 msgid "Diff: old lines"
 msgstr "Diff: 旧バージョン"
 
-#: gitk:10526
+#: gitk:11408
 msgid "diff old lines"
 msgstr "diff 旧バージョン"
 
-#: gitk:10530
+#: gitk:11412
 msgid "Diff: new lines"
 msgstr "Diff: 新バージョン"
 
-#: gitk:10531
+#: gitk:11413
 msgid "diff new lines"
 msgstr "diff 新バージョン"
 
-#: gitk:10535
+#: gitk:11417
 msgid "Diff: hunk header"
 msgstr "Diff: hunkヘッダ"
 
-#: gitk:10537
+#: gitk:11419
 msgid "diff hunk header"
 msgstr "diff hunkヘッダ"
 
-#: gitk:10541
+#: gitk:11423
 msgid "Marked line bg"
 msgstr "マーク行の背景"
 
-#: gitk:10543
+#: gitk:11425
 msgid "marked line background"
 msgstr "マーク行の背景"
 
-#: gitk:10547
+#: gitk:11429
 msgid "Select bg"
 msgstr "選択の背景"
 
-#: gitk:10551
+#: gitk:11438
 msgid "Fonts: press to choose"
 msgstr "フォント: ボタンを押して選択"
 
-#: gitk:10553
+#: gitk:11440
 msgid "Main font"
 msgstr "主フォント"
 
-#: gitk:10554
+#: gitk:11441
 msgid "Diff display font"
 msgstr "Diff表示用フォント"
 
-#: gitk:10555
+#: gitk:11442
 msgid "User interface font"
 msgstr "UI用フォント"
 
-#: gitk:10582
+#: gitk:11464
+msgid "Gitk preferences"
+msgstr "Gitk 設定"
+
+#: gitk:11473
+#, fuzzy
+msgid "General"
+msgstr "生成"
+
+#: gitk:11474
+msgid "Colors"
+msgstr ""
+
+#: gitk:11475
+msgid "Fonts"
+msgstr ""
+
+#: gitk:11525
 #, tcl-format
 msgid "Gitk: choose color for %s"
 msgstr "Gitk: 「%s」 の色を選択"
 
-#: gitk:11168
+#: gitk:12242
 msgid "Cannot find a git repository here."
 msgstr "ここにはgitリポジトリがありません。"
 
-#: gitk:11172
-#, tcl-format
-msgid "Cannot find the git directory \"%s\"."
-msgstr "gitディレクトリ \"%s\" を見つけられません。"
-
-#: gitk:11219
+#: gitk:12289
 #, tcl-format
 msgid "Ambiguous argument '%s': both revision and filename"
 msgstr "あいまいな引数 '%s': リビジョンとファイル名の両方に解釈できます"
 
-#: gitk:11231
+#: gitk:12301
 msgid "Bad arguments to gitk:"
 msgstr "gitkへの不正な引数:"
 
-#: gitk:11316
+#: gitk:12405
 msgid "Command line"
 msgstr "コマンド行"
+
+#~ msgid "SHA1 ID: "
+#~ msgstr "SHA1 ID: "
+
+#~ msgid "next"
+#~ msgstr "次"
+
+#~ msgid "prev"
+#~ msgstr "前"
+
+#~ msgid "CDate"
+#~ msgstr "作成日"
+
+#~ msgid "Cannot find the git directory \"%s\"."
+#~ msgstr "gitディレクトリ \"%s\" を見つけられません。"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/pt_br.msg /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/pt_br.msg
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/pt_br.msg	2017-10-10 12:31:59.126631527 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/pt_br.msg	2017-10-10 13:04:28.178560096 +0800
@@ -1,7 +1,7 @@
-set ::msgcat::header "Project-Id-Version: gitk\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2010-01-26 15:47-0800\nPO-Revision-Date: 2010-12-06 23:39-0200\nLast-Translator: Alexandre Erwin Ittner <alexandre@ittner.com.br>\nLanguage-Team: Brazilian Portuguese <>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"
+set ::msgcat::header "Project-Id-Version: gitk\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2015-03-15 14:37+1100\nPO-Revision-Date: 2010-12-06 23:39-0200\nLast-Translator: Alexandre Erwin Ittner <alexandre@ittner.com.br>\nLanguage-Team: Brazilian Portuguese <>\nLanguage: pt_BR\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"
 ::msgcat::mcset pt_br "Couldn't get list of unmerged files:" "N\u00e3o foi poss\u00edvel obter a lista dos arquivos n\u00e3o mesclados:"
 ::msgcat::mcset pt_br "Error parsing revisions:" "Erro ao interpretar revis\u00f5es:"
 ::msgcat::mcset pt_br "Error executing --argscmd command:" "Erro ao executar o comando--argscmd:"
 ::msgcat::mcset pt_br "No files selected: --merge specified but no files are unmerged." "Nenhum arquivo foi selecionado: --merge especificado mas n\u00e3o h\u00e1 arquivos n\u00e3o-mesclados."
 ::msgcat::mcset pt_br "No files selected: --merge specified but no unmerged files are within file limit." "Nenhum arquivo foi selecionado: --merge especificado mas n\u00e3o h\u00e1 arquivos n\u00e3o-mesclados dentro dos limites."
 ::msgcat::mcset pt_br "Error executing git log:" "Erro ao executar git log:"
@@ -30,14 +30,12 @@
 ::msgcat::mcset pt_br "About gitk" "Sobre o gitk"
 ::msgcat::mcset pt_br "Key bindings" "Atalhos de teclado"
 ::msgcat::mcset pt_br "Help" "Ajuda"
 ::msgcat::mcset pt_br "SHA1 ID:" "SHA1 ID:"
 ::msgcat::mcset pt_br "Row" "Linha"
 ::msgcat::mcset pt_br "Find" "Encontrar"
-::msgcat::mcset pt_br "next" "Pr\u00f3ximo"
-::msgcat::mcset pt_br "prev" "Anterior"
 ::msgcat::mcset pt_br "commit" "Revis\u00e3o"
 ::msgcat::mcset pt_br "containing:" "contendo:"
 ::msgcat::mcset pt_br "touching paths:" "envolvendo os caminhos:"
 ::msgcat::mcset pt_br "adding/removing string:" "Adicionando/removendo texto:"
 ::msgcat::mcset pt_br "Exact" "Exatamente"
 ::msgcat::mcset pt_br "IgnCase" "Ignorar mai\u00fasculas/min\u00fasculas"
@@ -72,23 +70,19 @@
 ::msgcat::mcset pt_br "Highlight this too" "Marcar este tamb\u00e9m"
 ::msgcat::mcset pt_br "Highlight this only" "Marcar apenas este"
 ::msgcat::mcset pt_br "External diff" "Diff externo"
 ::msgcat::mcset pt_br "Blame parent commit" "Anotar revis\u00e3o anterior"
 ::msgcat::mcset pt_br "Show origin of this line" "Exibir origem desta linha"
 ::msgcat::mcset pt_br "Run git gui blame on this line" "Executar 'git blame' nesta linha"
-::msgcat::mcset pt_br "\nGitk - a commit viewer for git\n\nCopyright \u00a99 2005-2010 Paul Mackerras\n\nUse and redistribute under the terms of the GNU General Public License" "\nGitk - um visualizador de revis\u00f5es para o git \n\nCopyright \u00a99 2005-2010 Paul Mackerras\n\nUso e distribui\u00e7\u00e3o segundo os termos da Licen\u00e7a P\u00fablica Geral GNU"
 ::msgcat::mcset pt_br "Close" "Fechar"
 ::msgcat::mcset pt_br "Gitk key bindings" "Atalhos de teclado"
 ::msgcat::mcset pt_br "Gitk key bindings:" "Atalhos de teclado:"
 ::msgcat::mcset pt_br "<%s-Q>\u0009\u0009Quit" "<%s-Q>\u0009\u0009Sair"
 ::msgcat::mcset pt_br "<%s-W>\u0009\u0009Close window" "<%s-W>\u0009\u0009Fechar janela"
 ::msgcat::mcset pt_br "<Home>\u0009\u0009Move to first commit" "<Home>\u0009\u0009Ir para a primeira revis\u00e3o"
 ::msgcat::mcset pt_br "<End>\u0009\u0009Move to last commit" "<End>\u0009\u0009Ir para a \u00faltima revis\u00e3o"
-::msgcat::mcset pt_br "<Up>, p, i\u0009Move up one commit" "<Up>, p, i\u0009Ir para uma revis\u00e3o acima"
-::msgcat::mcset pt_br "<Down>, n, k\u0009Move down one commit" "<Down>, n, k\u0009Ir para uma revis\u00e3o abaixo"
-::msgcat::mcset pt_br "<Left>, z, j\u0009Go back in history list" "<Left>, z, j\u0009Voltar no hist\u00f3rico"
 ::msgcat::mcset pt_br "<Right>, x, l\u0009Go forward in history list" "<Right>, x, l\u0009Avan\u00e7ar no hist\u00f3rico"
 ::msgcat::mcset pt_br "<PageUp>\u0009Move up one page in commit list" "<PageUp>\u0009Subir uma p\u00e1gina na lista de revis\u00f5es"
 ::msgcat::mcset pt_br "<PageDown>\u0009Move down one page in commit list" "<PageDown>\u0009Descer uma p\u00e1gina na lista de revis\u00f5es"
 ::msgcat::mcset pt_br "<%s-Home>\u0009Scroll to top of commit list" "<%s-Home>\u0009Rolar para o in\u00edcio da lista de revis\u00f5es"
 ::msgcat::mcset pt_br "<%s-End>\u0009Scroll to bottom of commit list" "<%s-End>\u0009Rolar para o final da lista de revis\u00f5es"
 ::msgcat::mcset pt_br "<%s-Up>\u0009Scroll commit list up one line" "<%s-Up>\u0009Rolar uma linha acima na lista de revis\u00f5es"
@@ -161,14 +155,12 @@
 ::msgcat::mcset pt_br "Gitk: edit view" "Gitk: editar vista"
 ::msgcat::mcset pt_br "-- criteria for selecting revisions" "-- crit\u00e9rios para selecionar revis\u00f5es"
 ::msgcat::mcset pt_br "View Name" "Nome da vista"
 ::msgcat::mcset pt_br "Apply (F5)" "Aplicar (F5)"
 ::msgcat::mcset pt_br "Error in commit selection arguments:" "Erro nos argumentos de sele\u00e7\u00e3o de revis\u00f5es:"
 ::msgcat::mcset pt_br "None" "Nenhum"
-::msgcat::mcset pt_br "Date" "Data"
-::msgcat::mcset pt_br "CDate" "DataR"
 ::msgcat::mcset pt_br "Descendant" "Descendente de"
 ::msgcat::mcset pt_br "Not descendant" "N\u00e3o descendente de"
 ::msgcat::mcset pt_br "Ancestor" "Antecessor de"
 ::msgcat::mcset pt_br "Not ancestor" "N\u00e3o antecessor de"
 ::msgcat::mcset pt_br "Local changes checked in to index but not committed" "Mudan\u00e7as locais marcadas, por\u00e9m n\u00e3o salvas"
 ::msgcat::mcset pt_br "Local uncommitted changes, not checked in to index" "Mudan\u00e7as locais n\u00e3o marcadas"
@@ -182,12 +174,13 @@
 ::msgcat::mcset pt_br "Error getting diffs: %s" "Erro ao obter diferen\u00e7as: %s"
 ::msgcat::mcset pt_br "Goto:" "Ir para:"
 ::msgcat::mcset pt_br "Short SHA1 id %s is ambiguous" "O id SHA1 %s \u00e9 amb\u00edguo"
 ::msgcat::mcset pt_br "Revision %s is not known" "Revis\u00e3o %s desconhecida"
 ::msgcat::mcset pt_br "SHA1 id %s is not known" "Id SHA1 %s desconhecido"
 ::msgcat::mcset pt_br "Revision %s is not in the current view" "A revis\u00e3o %s n\u00e3o est\u00e1 na vista atual"
+::msgcat::mcset pt_br "Date" "Data"
 ::msgcat::mcset pt_br "Children" "Descendentes"
 ::msgcat::mcset pt_br "Reset %s branch to here" "Redefinir ramo %s para este ponto"
 ::msgcat::mcset pt_br "Detached head: can't reset" "Detached head: imposs\u00edvel redefinir"
 ::msgcat::mcset pt_br "Skipping merge commit " "Saltando revis\u00e3o de mesclagem"
 ::msgcat::mcset pt_br "Error getting patch ID for " "Erro ao obter patch ID para"
 ::msgcat::mcset pt_br " - stopping\n" "- parando\n"
@@ -242,22 +235,19 @@
 ::msgcat::mcset pt_br "Error reading commit topology information; branch and preceding/following tag information will be incomplete." "Erro ao ler a topologia das revis\u00f5es; as informa\u00e7\u00f5es dos ramos e etiquetas antecessoras/sucessoras estar\u00e3o incompletas"
 ::msgcat::mcset pt_br "Tag" "Etiqueta"
 ::msgcat::mcset pt_br "Id" "Id"
 ::msgcat::mcset pt_br "Gitk font chooser" "Selecionar fontes do Gitk"
 ::msgcat::mcset pt_br "B" "B"
 ::msgcat::mcset pt_br "I" "I"
-::msgcat::mcset pt_br "Gitk preferences" "Prefer\u00eancias do Gitk"
 ::msgcat::mcset pt_br "Commit list display options" "Op\u00e7\u00f5es da lista de revis\u00f5es"
 ::msgcat::mcset pt_br "Maximum graph width (lines)" "Largura m\u00e1xima do grafo (linhas)"
 ::msgcat::mcset pt_br "Maximum graph width (% of pane)" "Largura m\u00e1xima do grafo (% do painel)"
 ::msgcat::mcset pt_br "Show local changes" "Exibir mudan\u00e7as locais"
-::msgcat::mcset pt_br "Auto-select SHA1" "Selecionar o SHA1 automaticamente"
 ::msgcat::mcset pt_br "Hide remote refs" "Ocultar refer\u00eancias remotas"
 ::msgcat::mcset pt_br "Diff display options" "Op\u00e7\u00f5es de exibi\u00e7\u00e3o das altera\u00e7\u00f5es"
 ::msgcat::mcset pt_br "Tab spacing" "Espa\u00e7os por tabula\u00e7\u00e3o"
-::msgcat::mcset pt_br "Display nearby tags" "Exibir etiquetas pr\u00f3ximas"
 ::msgcat::mcset pt_br "Limit diffs to listed paths" "Limitar diferen\u00e7as aos caminhos listados"
 ::msgcat::mcset pt_br "Support per-file encodings" "Usar codifica\u00e7\u00f5es distintas por arquivo"
 ::msgcat::mcset pt_br "External diff tool" "Ferramenta 'diff' externa"
 ::msgcat::mcset pt_br "Choose..." "Selecionar..."
 ::msgcat::mcset pt_br "General options" "Op\u00e7\u00f5es gerais"
 ::msgcat::mcset pt_br "Use themed widgets" "Usar temas para as janelas"
@@ -280,12 +270,12 @@
 ::msgcat::mcset pt_br "marked line background" "segundo plano da linha marcada"
 ::msgcat::mcset pt_br "Select bg" "2\u00ba plano da sele\u00e7\u00e3o"
 ::msgcat::mcset pt_br "Fonts: press to choose" "Fontes: clique para escolher"
 ::msgcat::mcset pt_br "Main font" "Fonte principal"
 ::msgcat::mcset pt_br "Diff display font" "Fonte da lista de mudan\u00e7as"
 ::msgcat::mcset pt_br "User interface font" "Fonte da interface"
+::msgcat::mcset pt_br "Gitk preferences" "Prefer\u00eancias do Gitk"
 ::msgcat::mcset pt_br "Gitk: choose color for %s" "Gitk: selecionar cor para %s"
 ::msgcat::mcset pt_br "Cannot find a git repository here." "N\u00e3o h\u00e1 nenhum reposit\u00f3rio git aqui."
-::msgcat::mcset pt_br "Cannot find the git directory \"%s\"." "Imposs\u00edvel encontrar o diret\u00f3rio git \"%s\"."
 ::msgcat::mcset pt_br "Ambiguous argument '%s': both revision and filename" "O argumento \"%s\" \u00e9 amb\u00edguo (especifica tanto uma revis\u00e3o e um nome de arquivo)"
 ::msgcat::mcset pt_br "Bad arguments to gitk:" "Argumentos incorretos para o gitk:"
 ::msgcat::mcset pt_br "Command line" "Linha de comando"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/pt_br.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/pt_br.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/pt_br.po	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/pt_br.po	2015-05-01 03:12:02.000000000 +0800
@@ -6,1272 +6,1367 @@
 #
 #, fuzzy
 msgid ""
 msgstr ""
 "Project-Id-Version: gitk\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2010-01-26 15:47-0800\n"
+"POT-Creation-Date: 2015-03-15 14:37+1100\n"
 "PO-Revision-Date: 2010-12-06 23:39-0200\n"
 "Last-Translator: Alexandre Erwin Ittner <alexandre@ittner.com.br>\n"
 "Language-Team: Brazilian Portuguese <>\n"
+"Language: pt_BR\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
 
-#: gitk:115
+#: gitk:140
 msgid "Couldn't get list of unmerged files:"
 msgstr "Não foi possível obter a lista dos arquivos não mesclados:"
 
-#: gitk:274
+#: gitk:212 gitk:2381
+msgid "Color words"
+msgstr ""
+
+#: gitk:217 gitk:2381 gitk:8201 gitk:8234
+msgid "Markup words"
+msgstr ""
+
+#: gitk:324
 msgid "Error parsing revisions:"
 msgstr "Erro ao interpretar revisões:"
 
-#: gitk:330
+#: gitk:380
 msgid "Error executing --argscmd command:"
 msgstr "Erro ao executar o comando--argscmd:"
 
-#: gitk:343
+#: gitk:393
 msgid "No files selected: --merge specified but no files are unmerged."
 msgstr ""
 "Nenhum arquivo foi selecionado: --merge especificado mas não há arquivos não-"
 "mesclados."
 
-#: gitk:346
+#: gitk:396
 msgid ""
 "No files selected: --merge specified but no unmerged files are within file "
 "limit."
 msgstr ""
 "Nenhum arquivo foi selecionado: --merge especificado mas não há arquivos não-"
 "mesclados dentro dos limites."
 
-#: gitk:368 gitk:516
+#: gitk:418 gitk:566
 msgid "Error executing git log:"
 msgstr "Erro ao executar git log:"
 
-#: gitk:386 gitk:532
+#: gitk:436 gitk:582
 msgid "Reading"
 msgstr "Lendo"
 
-#: gitk:446 gitk:4271
+#: gitk:496 gitk:4508
 msgid "Reading commits..."
 msgstr "Lendo revisões..."
 
-#: gitk:449 gitk:1580 gitk:4274
+#: gitk:499 gitk:1637 gitk:4511
 msgid "No commits selected"
 msgstr "Nenhuma revisão foi selecionada"
 
-#: gitk:1456
+#: gitk:1511
 msgid "Can't parse git log output:"
 msgstr "Não foi possível interpretar a saída do \"git log\":"
 
-#: gitk:1676
+#: gitk:1740
 msgid "No commit information available"
 msgstr "Não há informações disponíveis sobre a revisão"
 
-#: gitk:1818
+#: gitk:1897
 msgid "mc"
 msgstr "mc"
 
-#: gitk:1853 gitk:4064 gitk:9067 gitk:10607 gitk:10817
+#: gitk:1932 gitk:4298 gitk:9650 gitk:11220 gitk:11500
 msgid "OK"
 msgstr "Ok"
 
-#: gitk:1855 gitk:4066 gitk:8657 gitk:8736 gitk:8851 gitk:8900 gitk:9069
-#: gitk:10608 gitk:10818
+#: gitk:1934 gitk:4300 gitk:9177 gitk:9256 gitk:9372 gitk:9421 gitk:9652
+#: gitk:11221 gitk:11501
 msgid "Cancel"
 msgstr "Cancelar"
 
-#: gitk:1980
+#: gitk:2069
 msgid "Update"
 msgstr "Atualizar"
 
-#: gitk:1981
+#: gitk:2070
 msgid "Reload"
 msgstr "Recarregar"
 
-#: gitk:1982
+#: gitk:2071
 msgid "Reread references"
 msgstr "Ler as referências novamente"
 
-#: gitk:1983
+#: gitk:2072
 msgid "List references"
 msgstr "Listar referências"
 
-#: gitk:1985
+#: gitk:2074
 msgid "Start git gui"
 msgstr "Iniciar Git GUI"
 
-#: gitk:1987
+#: gitk:2076
 msgid "Quit"
 msgstr "Sair"
 
-#: gitk:1979
+#: gitk:2068
 msgid "File"
 msgstr "Arquivo"
 
-#: gitk:1991
+#: gitk:2080
 msgid "Preferences"
 msgstr "Preferências"
 
-#: gitk:1990
+#: gitk:2079
 msgid "Edit"
 msgstr "Editar"
 
-#: gitk:1995
+#: gitk:2084
 msgid "New view..."
 msgstr "Nova vista..."
 
-#: gitk:1996
+#: gitk:2085
 msgid "Edit view..."
 msgstr "Editar vista..."
 
-#: gitk:1997
+#: gitk:2086
 msgid "Delete view"
 msgstr "Apagar vista"
 
-#: gitk:1999
+#: gitk:2088
 msgid "All files"
 msgstr "Todos os arquivos"
 
-#: gitk:1994 gitk:3817
+#: gitk:2083 gitk:4050
 msgid "View"
 msgstr "Exibir"
 
-#: gitk:2004 gitk:2014 gitk:2787
+#: gitk:2093 gitk:2103 gitk:3009
 msgid "About gitk"
 msgstr "Sobre o gitk"
 
-#: gitk:2005 gitk:2019
+#: gitk:2094 gitk:2108
 msgid "Key bindings"
 msgstr "Atalhos de teclado"
 
-#: gitk:2003 gitk:2018
+#: gitk:2092 gitk:2107
 msgid "Help"
 msgstr "Ajuda"
 
-#: gitk:2096 gitk:8132
+#: gitk:2185 gitk:8633
 msgid "SHA1 ID:"
 msgstr "SHA1 ID:"
 
-#: gitk:2127
+#: gitk:2229
 msgid "Row"
 msgstr "Linha"
 
-#: gitk:2165
+#: gitk:2267
 msgid "Find"
 msgstr "Encontrar"
 
-#: gitk:2166
-msgid "next"
-msgstr "Próximo"
-
-#: gitk:2167
-msgid "prev"
-msgstr "Anterior"
-
-#: gitk:2168
+#: gitk:2295
 msgid "commit"
 msgstr "Revisão"
 
-#: gitk:2171 gitk:2173 gitk:4432 gitk:4455 gitk:4479 gitk:6420 gitk:6492
-#: gitk:6576
+#: gitk:2299 gitk:2301 gitk:4669 gitk:4692 gitk:4716 gitk:6736 gitk:6808
+#: gitk:6893
 msgid "containing:"
 msgstr "contendo:"
 
-#: gitk:2174 gitk:3298 gitk:3303 gitk:4507
+#: gitk:2302 gitk:3522 gitk:3527 gitk:4745
 msgid "touching paths:"
 msgstr "envolvendo os caminhos:"
 
-#: gitk:2175 gitk:4512
+#: gitk:2303 gitk:4759
 msgid "adding/removing string:"
 msgstr "Adicionando/removendo texto:"
 
-#: gitk:2184 gitk:2186
+#: gitk:2304 gitk:4761
+msgid "changing lines matching:"
+msgstr ""
+
+#: gitk:2313 gitk:2315 gitk:4748
 msgid "Exact"
 msgstr "Exatamente"
 
-#: gitk:2186 gitk:4587 gitk:6388
+#: gitk:2315 gitk:4836 gitk:6704
 msgid "IgnCase"
 msgstr "Ignorar maiúsculas/minúsculas"
 
-#: gitk:2186 gitk:4481 gitk:4585 gitk:6384
+#: gitk:2315 gitk:4718 gitk:4834 gitk:6700
 msgid "Regexp"
 msgstr "Expressão regular"
 
-#: gitk:2188 gitk:2189 gitk:4606 gitk:4636 gitk:4643 gitk:6512 gitk:6580
+#: gitk:2317 gitk:2318 gitk:4856 gitk:4886 gitk:4893 gitk:6829 gitk:6897
 msgid "All fields"
 msgstr "Todos os campos"
 
-#: gitk:2189 gitk:4604 gitk:4636 gitk:6451
+#: gitk:2318 gitk:4853 gitk:4886 gitk:6767
 msgid "Headline"
 msgstr "Assunto"
 
-#: gitk:2190 gitk:4604 gitk:6451 gitk:6580 gitk:7013
+#: gitk:2319 gitk:4853 gitk:6767 gitk:6897 gitk:7370
 msgid "Comments"
 msgstr "Descrição da revisão"
 
-#: gitk:2190 gitk:4604 gitk:4608 gitk:4643 gitk:6451 gitk:6948 gitk:8307
-#: gitk:8322
+#: gitk:2319 gitk:4853 gitk:4858 gitk:4893 gitk:6767 gitk:7305 gitk:8811
+#: gitk:8826
 msgid "Author"
 msgstr "Autor"
 
-#: gitk:2190 gitk:4604 gitk:6451 gitk:6950
+#: gitk:2319 gitk:4853 gitk:6767 gitk:7307
 msgid "Committer"
 msgstr "Revisor"
 
-#: gitk:2221
+#: gitk:2350
 msgid "Search"
 msgstr "Buscar"
 
-#: gitk:2229
+#: gitk:2358
 msgid "Diff"
 msgstr "Diferenças"
 
-#: gitk:2231
+#: gitk:2360
 msgid "Old version"
 msgstr "Versão antiga"
 
-#: gitk:2233
+#: gitk:2362
 msgid "New version"
 msgstr "Versão nova"
 
-#: gitk:2235
+#: gitk:2364
 msgid "Lines of context"
 msgstr "Número de linhas de contexto"
 
-#: gitk:2245
+#: gitk:2374
 msgid "Ignore space change"
 msgstr "Ignorar mudanças de caixa"
 
-#: gitk:2304
+#: gitk:2378 gitk:2380 gitk:7940 gitk:8187
+msgid "Line diff"
+msgstr ""
+
+#: gitk:2445
 msgid "Patch"
 msgstr "Diferenças"
 
-#: gitk:2306
+#: gitk:2447
 msgid "Tree"
 msgstr "Árvore"
 
-#: gitk:2463 gitk:2480
+#: gitk:2616 gitk:2636
 msgid "Diff this -> selected"
 msgstr "Comparar esta revisão com a selecionada"
 
-#: gitk:2464 gitk:2481
+#: gitk:2617 gitk:2637
 msgid "Diff selected -> this"
 msgstr "Comparar a revisão selecionada com esta"
 
-#: gitk:2465 gitk:2482
+#: gitk:2618 gitk:2638
 msgid "Make patch"
 msgstr "Criar patch"
 
-#: gitk:2466 gitk:8715
+#: gitk:2619 gitk:9235
 msgid "Create tag"
 msgstr "Criar etiqueta"
 
-#: gitk:2467 gitk:8831
+#: gitk:2620 gitk:9352
 msgid "Write commit to file"
 msgstr "Salvar revisão para um arquivo"
 
-#: gitk:2468 gitk:8888
+#: gitk:2621 gitk:9409
 msgid "Create new branch"
 msgstr "Criar novo ramo"
 
-#: gitk:2469
+#: gitk:2622
 msgid "Cherry-pick this commit"
 msgstr "Fazer cherry-pick desta revisão"
 
-#: gitk:2470
+#: gitk:2623
 msgid "Reset HEAD branch to here"
 msgstr "Redefinir HEAD para cá"
 
-#: gitk:2471
+#: gitk:2624
 msgid "Mark this commit"
 msgstr "Marcar esta revisão"
 
-#: gitk:2472
+#: gitk:2625
 msgid "Return to mark"
 msgstr "Voltar à marca"
 
-#: gitk:2473
+#: gitk:2626
 msgid "Find descendant of this and mark"
 msgstr "Encontrar descendente e marcar"
 
-#: gitk:2474
+#: gitk:2627
 msgid "Compare with marked commit"
 msgstr "Comparar com a revisão marcada"
 
-#: gitk:2488
+#: gitk:2628 gitk:2639
+#, fuzzy
+msgid "Diff this -> marked commit"
+msgstr "Comparar esta revisão com a selecionada"
+
+#: gitk:2629 gitk:2640
+#, fuzzy
+msgid "Diff marked commit -> this"
+msgstr "Comparar a revisão selecionada com esta"
+
+#: gitk:2630
+#, fuzzy
+msgid "Revert this commit"
+msgstr "Marcar esta revisão"
+
+#: gitk:2646
 msgid "Check out this branch"
 msgstr "Efetuar checkout deste ramo"
 
-#: gitk:2489
+#: gitk:2647
 msgid "Remove this branch"
 msgstr "Excluir este ramo"
 
-#: gitk:2496
+#: gitk:2654
 msgid "Highlight this too"
 msgstr "Marcar este também"
 
-#: gitk:2497
+#: gitk:2655
 msgid "Highlight this only"
 msgstr "Marcar apenas este"
 
-#: gitk:2498
+#: gitk:2656
 msgid "External diff"
 msgstr "Diff externo"
 
-#: gitk:2499
+#: gitk:2657
 msgid "Blame parent commit"
 msgstr "Anotar revisão anterior"
 
-#: gitk:2506
+#: gitk:2664
 msgid "Show origin of this line"
 msgstr "Exibir origem desta linha"
 
-#: gitk:2507
+#: gitk:2665
 msgid "Run git gui blame on this line"
 msgstr "Executar 'git blame' nesta linha"
 
-#: gitk:2789
-msgid "\n"
+#: gitk:3011
+#, fuzzy
+msgid ""
+"\n"
 "Gitk - a commit viewer for git\n"
 "\n"
-"Copyright ©9 2005-2010 Paul Mackerras\n"
+"Copyright © 2005-2014 Paul Mackerras\n"
 "\n"
 "Use and redistribute under the terms of the GNU General Public License"
-msgstr "\n"
+msgstr ""
+"\n"
 "Gitk - um visualizador de revisões para o git \n"
 "\n"
 "Copyright ©9 2005-2010 Paul Mackerras\n"
 "\n"
 "Uso e distribuição segundo os termos da Licença Pública Geral GNU"
 
-#: gitk:2797 gitk:2862 gitk:9253
+#: gitk:3019 gitk:3085 gitk:9836
 msgid "Close"
 msgstr "Fechar"
 
-#: gitk:2818
+#: gitk:3040
 msgid "Gitk key bindings"
 msgstr "Atalhos de teclado"
 
-#: gitk:2821
+#: gitk:3043
 msgid "Gitk key bindings:"
 msgstr "Atalhos de teclado:"
 
-#: gitk:2823
+#: gitk:3045
 #, tcl-format
 msgid "<%s-Q>\t\tQuit"
 msgstr "<%s-Q>\t\tSair"
 
-#: gitk:2824
+#: gitk:3046
 #, tcl-format
 msgid "<%s-W>\t\tClose window"
 msgstr "<%s-W>\t\tFechar janela"
 
-#: gitk:2825
+#: gitk:3047
 msgid "<Home>\t\tMove to first commit"
 msgstr "<Home>\t\tIr para a primeira revisão"
 
-#: gitk:2826
+#: gitk:3048
 msgid "<End>\t\tMove to last commit"
 msgstr "<End>\t\tIr para a última revisão"
 
-#: gitk:2827
-msgid "<Up>, p, i\tMove up one commit"
+#: gitk:3049
+#, fuzzy
+msgid "<Up>, p, k\tMove up one commit"
 msgstr "<Up>, p, i\tIr para uma revisão acima"
 
-#: gitk:2828
-msgid "<Down>, n, k\tMove down one commit"
+#: gitk:3050
+#, fuzzy
+msgid "<Down>, n, j\tMove down one commit"
 msgstr "<Down>, n, k\tIr para uma revisão abaixo"
 
-#: gitk:2829
-msgid "<Left>, z, j\tGo back in history list"
+#: gitk:3051
+#, fuzzy
+msgid "<Left>, z, h\tGo back in history list"
 msgstr "<Left>, z, j\tVoltar no histórico"
 
-#: gitk:2830
+#: gitk:3052
 msgid "<Right>, x, l\tGo forward in history list"
 msgstr "<Right>, x, l\tAvançar no histórico"
 
-#: gitk:2831
+#: gitk:3053
+#, tcl-format
+msgid "<%s-n>\tGo to n-th parent of current commit in history list"
+msgstr ""
+
+#: gitk:3054
 msgid "<PageUp>\tMove up one page in commit list"
 msgstr "<PageUp>\tSubir uma página na lista de revisões"
 
-#: gitk:2832
+#: gitk:3055
 msgid "<PageDown>\tMove down one page in commit list"
 msgstr "<PageDown>\tDescer uma página na lista de revisões"
 
-#: gitk:2833
+#: gitk:3056
 #, tcl-format
 msgid "<%s-Home>\tScroll to top of commit list"
 msgstr "<%s-Home>\tRolar para o início da lista de revisões"
 
-#: gitk:2834
+#: gitk:3057
 #, tcl-format
 msgid "<%s-End>\tScroll to bottom of commit list"
 msgstr "<%s-End>\tRolar para o final da lista de revisões"
 
-#: gitk:2835
+#: gitk:3058
 #, tcl-format
 msgid "<%s-Up>\tScroll commit list up one line"
 msgstr "<%s-Up>\tRolar uma linha acima na lista de revisões"
 
-#: gitk:2836
+#: gitk:3059
 #, tcl-format
 msgid "<%s-Down>\tScroll commit list down one line"
 msgstr "<%s-Down>\tRolar uma linha abaixo na lista de revisões"
 
-#: gitk:2837
+#: gitk:3060
 #, tcl-format
 msgid "<%s-PageUp>\tScroll commit list up one page"
 msgstr "<%s-PageUp>\tRolar uma página acima na lista de revisões"
 
-#: gitk:2838
+#: gitk:3061
 #, tcl-format
 msgid "<%s-PageDown>\tScroll commit list down one page"
 msgstr "<%s-PageDown>\tRolar uma página abaixo na lista de revisões"
 
-#: gitk:2839
+#: gitk:3062
 msgid "<Shift-Up>\tFind backwards (upwards, later commits)"
 msgstr "<Shift-Up>\tProcurar próxima (revisões mas recentes)"
 
-#: gitk:2840
+#: gitk:3063
 msgid "<Shift-Down>\tFind forwards (downwards, earlier commits)"
 msgstr "<Shift-Down>\tProcurar anterior (revisões mais antigas)"
 
-#: gitk:2841
+#: gitk:3064
 msgid "<Delete>, b\tScroll diff view up one page"
 msgstr "<Delete>, b\tRola alterações uma página acima"
 
-#: gitk:2842
+#: gitk:3065
 msgid "<Backspace>\tScroll diff view up one page"
 msgstr "<Backspace>\tRolar alterações uma página abaixo"
 
-#: gitk:2843
+#: gitk:3066
 msgid "<Space>\t\tScroll diff view down one page"
 msgstr "<Space>\t\tRolar alterações uma página abaixo"
 
-#: gitk:2844
+#: gitk:3067
 msgid "u\t\tScroll diff view up 18 lines"
 msgstr "u\t\tRolar alterações 18 linhas acima"
 
-#: gitk:2845
+#: gitk:3068
 msgid "d\t\tScroll diff view down 18 lines"
 msgstr "d\t\tRolar alterações 18 linhas abaixo"
 
-#: gitk:2846
+#: gitk:3069
 #, tcl-format
 msgid "<%s-F>\t\tFind"
 msgstr "<%s-F>\t\tProcurar"
 
-#: gitk:2847
+#: gitk:3070
 #, tcl-format
 msgid "<%s-G>\t\tMove to next find hit"
 msgstr "<%s-G>\t\tIr para a próxima ocorrência"
 
-#: gitk:2848
+#: gitk:3071
 msgid "<Return>\tMove to next find hit"
 msgstr "<Return>\tIr para a próxima ocorrência"
 
-#: gitk:2849
+#: gitk:3072
 msgid "/\t\tFocus the search box"
 msgstr "/\t\tPor foco na caixa de busca"
 
-#: gitk:2850
+#: gitk:3073
 msgid "?\t\tMove to previous find hit"
 msgstr "?\t\tIr para a ocorrência anterior"
 
-#: gitk:2851
+#: gitk:3074
 msgid "f\t\tScroll diff view to next file"
 msgstr "f\t\tRolar alterações para o próximo arquivo"
 
-#: gitk:2852
+#: gitk:3075
 #, tcl-format
 msgid "<%s-S>\t\tSearch for next hit in diff view"
 msgstr "<%s-S>\t\tProcurar a próxima ocorrência na lista de alterações"
 
-#: gitk:2853
+#: gitk:3076
 #, tcl-format
 msgid "<%s-R>\t\tSearch for previous hit in diff view"
 msgstr "<%s-R>\t\tProcurar ocorrência anterior na lista de alterações"
 
-#: gitk:2854
+#: gitk:3077
 #, tcl-format
 msgid "<%s-KP+>\tIncrease font size"
 msgstr "<%s-KP+>\tAumentar tamanho da fonte"
 
-#: gitk:2855
+#: gitk:3078
 #, tcl-format
 msgid "<%s-plus>\tIncrease font size"
 msgstr "<%s-plus>\tAumentar tamanho da fonte"
 
-#: gitk:2856
+#: gitk:3079
 #, tcl-format
 msgid "<%s-KP->\tDecrease font size"
 msgstr "<%s-KP->\tReduzir tamanho da fonte"
 
-#: gitk:2857
+#: gitk:3080
 #, tcl-format
 msgid "<%s-minus>\tDecrease font size"
 msgstr "<%s-minus>\tReduzir tamanho da fonte"
 
-#: gitk:2858
+#: gitk:3081
 msgid "<F5>\t\tUpdate"
 msgstr "<F5>\t\tAtualizar"
 
-#: gitk:3313 gitk:3322
+#: gitk:3546 gitk:3555
 #, tcl-format
 msgid "Error creating temporary directory %s:"
 msgstr "Erro ao criar o diretório temporário %s:"
 
-#: gitk:3335
+#: gitk:3568
 #, tcl-format
 msgid "Error getting \"%s\" from %s:"
 msgstr "Erro ao ler \"%s\" de %s:"
 
-#: gitk:3398
+#: gitk:3631
 msgid "command failed:"
 msgstr "O comando falhou:"
 
-#: gitk:3547
+#: gitk:3780
 msgid "No such commit"
 msgstr "Revisão não encontrada"
 
-#: gitk:3561
+#: gitk:3794
 msgid "git gui blame: command failed:"
 msgstr "Comando 'git gui blame' falhou:"
 
-#: gitk:3592
+#: gitk:3825
 #, tcl-format
 msgid "Couldn't read merge head: %s"
 msgstr "Impossível ler merge head: %s"
 
-#: gitk:3600
+#: gitk:3833
 #, tcl-format
 msgid "Error reading index: %s"
 msgstr "Erro ao ler o índice: %s"
 
-#: gitk:3625
+#: gitk:3858
 #, tcl-format
 msgid "Couldn't start git blame: %s"
 msgstr "Não foi possível inciar o 'git blame': %s"
 
-#: gitk:3628 gitk:6419
+#: gitk:3861 gitk:6735
 msgid "Searching"
 msgstr "Procurando"
 
-#: gitk:3660
+#: gitk:3893
 #, tcl-format
 msgid "Error running git blame: %s"
 msgstr "Erro ao executar 'git blame': %s"
 
-#: gitk:3688
+#: gitk:3921
 #, tcl-format
 msgid "That line comes from commit %s,  which is not in this view"
 msgstr "Esta linha vem da revisão %s, que não está nesta vista"
 
-#: gitk:3702
+#: gitk:3935
 msgid "External diff viewer failed:"
 msgstr "Erro do visualizador de alterações externo:"
 
-#: gitk:3820
+#: gitk:4053
 msgid "Gitk view definition"
 msgstr "Definir vista"
 
-#: gitk:3824
+#: gitk:4057
 msgid "Remember this view"
 msgstr "Lembrar esta vista"
 
-#: gitk:3825
+#: gitk:4058
 msgid "References (space separated list):"
 msgstr "Referências (separar a lista com um espaço):"
 
-#: gitk:3826
+#: gitk:4059
 msgid "Branches & tags:"
 msgstr "Ramos & etiquetas:"
 
-#: gitk:3827
+#: gitk:4060
 msgid "All refs"
 msgstr "Todas as referências"
 
-#: gitk:3828
+#: gitk:4061
 msgid "All (local) branches"
 msgstr "Todos os ramos locais"
 
-#: gitk:3829
+#: gitk:4062
 msgid "All tags"
 msgstr "Todas as etiquetas"
 
-#: gitk:3830
+#: gitk:4063
 msgid "All remote-tracking branches"
 msgstr "Todos os ramos de rastreio"
 
-#: gitk:3831
+#: gitk:4064
 msgid "Commit Info (regular expressions):"
 msgstr "Informações da revisão (expressões regulares):"
 
-#: gitk:3832
+#: gitk:4065
 msgid "Author:"
 msgstr "Autor:"
 
-#: gitk:3833
+#: gitk:4066
 msgid "Committer:"
 msgstr "Revisor:"
 
-#: gitk:3834
+#: gitk:4067
 msgid "Commit Message:"
 msgstr "Descrição da revisão:"
 
-#: gitk:3835
+#: gitk:4068
 msgid "Matches all Commit Info criteria"
 msgstr "Coincidir todos os critérios de informações da revisão"
 
-#: gitk:3836
+#: gitk:4069
+#, fuzzy
+msgid "Matches none Commit Info criteria"
+msgstr "Coincidir todos os critérios de informações da revisão"
+
+#: gitk:4070
 msgid "Changes to Files:"
 msgstr "Mudanças para os arquivos:"
 
-#: gitk:3837
+#: gitk:4071
 msgid "Fixed String"
 msgstr "Texto fixo"
 
-#: gitk:3838
+#: gitk:4072
 msgid "Regular Expression"
 msgstr "Expressão regular"
 
-#: gitk:3839
+#: gitk:4073
 msgid "Search string:"
 msgstr "Texto de busca"
 
-#: gitk:3840
+#: gitk:4074
 msgid ""
 "Commit Dates (\"2 weeks ago\", \"2009-03-17 15:27:38\", \"March 17, 2009 "
 "15:27:38\"):"
 msgstr ""
 "Datas de revisão (\"2 weeks ago\", \"2009-03-17 15:27:38\", \"March 17, 2009 "
 "15:27:38\"):"
 
-#: gitk:3841
+#: gitk:4075
 msgid "Since:"
 msgstr "Desde:"
 
-#: gitk:3842
+#: gitk:4076
 msgid "Until:"
 msgstr "Até:"
 
-#: gitk:3843
+#: gitk:4077
 msgid "Limit and/or skip a number of revisions (positive integer):"
 msgstr "Limitar e/ou ignorar um número de revisões (inteiro positivo):"
 
-#: gitk:3844
+#: gitk:4078
 msgid "Number to show:"
 msgstr "Número para mostrar:"
 
-#: gitk:3845
+#: gitk:4079
 msgid "Number to skip:"
 msgstr "Número para ignorar:"
 
-#: gitk:3846
+#: gitk:4080
 msgid "Miscellaneous options:"
 msgstr "Opções diversas:"
 
-#: gitk:3847
+#: gitk:4081
 msgid "Strictly sort by date"
 msgstr "Ordenar estritamente pela data"
 
-#: gitk:3848
+#: gitk:4082
 msgid "Mark branch sides"
 msgstr "Marcar os dois lados do ramo"
 
-#: gitk:3849
+#: gitk:4083
 msgid "Limit to first parent"
 msgstr "Limitar ao primeiro antecessor"
 
-#: gitk:3850
+#: gitk:4084
 msgid "Simple history"
 msgstr "Histórico simplificado"
 
-#: gitk:3851
+#: gitk:4085
 msgid "Additional arguments to git log:"
 msgstr "Argumentos adicionais para o 'git log':"
 
-#: gitk:3852
+#: gitk:4086
 msgid "Enter files and directories to include, one per line:"
 msgstr "Arquivos e diretórios para incluir, um por linha"
 
-#: gitk:3853
+#: gitk:4087
 msgid "Command to generate more commits to include:"
 msgstr "Comando para gerar mais revisões para incluir:"
 
-#: gitk:3977
+#: gitk:4211
 msgid "Gitk: edit view"
 msgstr "Gitk: editar vista"
 
-#: gitk:3985
+#: gitk:4219
 msgid "-- criteria for selecting revisions"
 msgstr "-- critérios para selecionar revisões"
 
-#: gitk:3990
+#: gitk:4224
 msgid "View Name"
 msgstr "Nome da vista"
 
-#: gitk:4065
+#: gitk:4299
 msgid "Apply (F5)"
 msgstr "Aplicar (F5)"
 
-#: gitk:4103
+#: gitk:4337
 msgid "Error in commit selection arguments:"
 msgstr "Erro nos argumentos de seleção de revisões:"
 
-#: gitk:4156 gitk:4208 gitk:4656 gitk:4670 gitk:5931 gitk:11551 gitk:11552
+#: gitk:4392 gitk:4445 gitk:4906 gitk:4920 gitk:6190 gitk:12346 gitk:12347
 msgid "None"
 msgstr "Nenhum"
 
-#: gitk:4604 gitk:6451 gitk:8309 gitk:8324
-msgid "Date"
-msgstr "Data"
-
-#: gitk:4604 gitk:6451
-msgid "CDate"
-msgstr "DataR"
-
-#: gitk:4753 gitk:4758
+#: gitk:5003 gitk:5008
 msgid "Descendant"
 msgstr "Descendente de"
 
-#: gitk:4754
+#: gitk:5004
 msgid "Not descendant"
 msgstr "Não descendente de"
 
-#: gitk:4761 gitk:4766
+#: gitk:5011 gitk:5016
 msgid "Ancestor"
 msgstr "Antecessor de"
 
-#: gitk:4762
+#: gitk:5012
 msgid "Not ancestor"
 msgstr "Não antecessor de"
 
-#: gitk:5052
+#: gitk:5306
 msgid "Local changes checked in to index but not committed"
 msgstr "Mudanças locais marcadas, porém não salvas"
 
-#: gitk:5088
+#: gitk:5342
 msgid "Local uncommitted changes, not checked in to index"
 msgstr "Mudanças locais não marcadas"
 
-#: gitk:6769
+#: gitk:7115
+msgid "and many more"
+msgstr ""
+
+#: gitk:7118
 msgid "many"
 msgstr "muitas"
 
-#: gitk:6952
+#: gitk:7309
 msgid "Tags:"
 msgstr "Etiquetas:"
 
-#: gitk:6969 gitk:6975 gitk:8302
+#: gitk:7326 gitk:7332 gitk:8806
 msgid "Parent"
 msgstr "Antecessor"
 
-#: gitk:6980
+#: gitk:7337
 msgid "Child"
 msgstr "Descendente"
 
-#: gitk:6989
+#: gitk:7346
 msgid "Branch"
 msgstr "Ramo"
 
-#: gitk:6992
+#: gitk:7349
 msgid "Follows"
 msgstr "Segue"
 
-#: gitk:6995
+#: gitk:7352
 msgid "Precedes"
 msgstr "Precede"
 
-#: gitk:7532
+#: gitk:7947
 #, tcl-format
 msgid "Error getting diffs: %s"
 msgstr "Erro ao obter diferenças: %s"
 
-#: gitk:8130
+#: gitk:8631
 msgid "Goto:"
 msgstr "Ir para:"
 
-#: gitk:8151
+#: gitk:8652
 #, tcl-format
 msgid "Short SHA1 id %s is ambiguous"
 msgstr "O id SHA1 %s é ambíguo"
 
-#: gitk:8158
+#: gitk:8659
 #, tcl-format
 msgid "Revision %s is not known"
 msgstr "Revisão %s desconhecida"
 
-#: gitk:8168
+#: gitk:8669
 #, tcl-format
 msgid "SHA1 id %s is not known"
 msgstr "Id SHA1 %s desconhecido"
 
-#: gitk:8170
+#: gitk:8671
 #, tcl-format
 msgid "Revision %s is not in the current view"
 msgstr "A revisão %s não está na vista atual"
 
-#: gitk:8312
+#: gitk:8813 gitk:8828
+msgid "Date"
+msgstr "Data"
+
+#: gitk:8816
 msgid "Children"
 msgstr "Descendentes"
 
-#: gitk:8370
+#: gitk:8879
 #, tcl-format
 msgid "Reset %s branch to here"
 msgstr "Redefinir ramo %s para este ponto"
 
-#: gitk:8372
+#: gitk:8881
 msgid "Detached head: can't reset"
 msgstr "Detached head: impossível redefinir"
 
-#: gitk:8481 gitk:8487
+#: gitk:8986 gitk:8992
 msgid "Skipping merge commit "
 msgstr "Saltando revisão de mesclagem"
 
-#: gitk:8496 gitk:8501
+#: gitk:9001 gitk:9006
 msgid "Error getting patch ID for "
 msgstr "Erro ao obter patch ID para"
 
-#: gitk:8497 gitk:8502
+#: gitk:9002 gitk:9007
 msgid " - stopping\n"
 msgstr "- parando\n"
 
-#: gitk:8507 gitk:8510 gitk:8518 gitk:8532 gitk:8541
+#: gitk:9012 gitk:9015 gitk:9023 gitk:9037 gitk:9046
 msgid "Commit "
 msgstr "Revisão"
 
-#: gitk:8511
+#: gitk:9016
 msgid ""
 " is the same patch as\n"
 "       "
 msgstr ""
 "é o mesmo patch que\n"
 "       "
 
-#: gitk:8519
+#: gitk:9024
 msgid ""
 " differs from\n"
 "       "
 msgstr "difere de"
 
-#: gitk:8521
+#: gitk:9026
 msgid ""
 "Diff of commits:\n"
 "\n"
 msgstr ""
 "Diferença de revisões:\n"
 "\n"
 
-#: gitk:8533 gitk:8542
+#: gitk:9038 gitk:9047
 #, tcl-format
 msgid " has %s children - stopping\n"
 msgstr "possui %s descendentes - parando\n"
 
-#: gitk:8561
+#: gitk:9066
 #, tcl-format
 msgid "Error writing commit to file: %s"
 msgstr "Erro ao salvar revisão para o arquivo: %s"
 
-#: gitk:8567
+#: gitk:9072
 #, tcl-format
 msgid "Error diffing commits: %s"
 msgstr "Erro ao comparar revisões: %s"
 
-#: gitk:8598
+#: gitk:9118
 msgid "Top"
 msgstr "Início"
 
-#: gitk:8599
+#: gitk:9119
 msgid "From"
 msgstr "De"
 
-#: gitk:8604
+#: gitk:9124
 msgid "To"
 msgstr "Para"
 
-#: gitk:8628
+#: gitk:9148
 msgid "Generate patch"
 msgstr "Gerar patch"
 
-#: gitk:8630
+#: gitk:9150
 msgid "From:"
 msgstr "De:"
 
-#: gitk:8639
+#: gitk:9159
 msgid "To:"
 msgstr "Para:"
 
-#: gitk:8648
+#: gitk:9168
 msgid "Reverse"
 msgstr "Inverter"
 
-#: gitk:8650 gitk:8845
+#: gitk:9170 gitk:9366
 msgid "Output file:"
 msgstr "Arquivo de saída:"
 
-#: gitk:8656
+#: gitk:9176
 msgid "Generate"
 msgstr "Gerar"
 
-#: gitk:8694
+#: gitk:9214
 msgid "Error creating patch:"
 msgstr "Erro ao criar patch:"
 
-#: gitk:8717 gitk:8833 gitk:8890
+#: gitk:9237 gitk:9354 gitk:9411
 msgid "ID:"
 msgstr "ID:"
 
-#: gitk:8726
+#: gitk:9246
 msgid "Tag name:"
 msgstr "Nome da etiqueta:"
 
-#: gitk:8729
+#: gitk:9249
 msgid "Tag message is optional"
 msgstr "A descrição da etiqueta é opcional"
 
-#: gitk:8731
+#: gitk:9251
 msgid "Tag message:"
 msgstr "Descrição da etiqueta"
 
-#: gitk:8735 gitk:8899
+#: gitk:9255 gitk:9420
 msgid "Create"
 msgstr "Criar"
 
-#: gitk:8753
+#: gitk:9273
 msgid "No tag name specified"
 msgstr "Nome da etiqueta não indicado"
 
-#: gitk:8757
+#: gitk:9277
 #, tcl-format
 msgid "Tag \"%s\" already exists"
 msgstr "Etiqueta \"%s\" já existe"
 
-#: gitk:8767
+#: gitk:9287
 msgid "Error creating tag:"
 msgstr "Erro ao criar etiqueta:"
 
-#: gitk:8842
+#: gitk:9363
 msgid "Command:"
 msgstr "Comando:"
 
-#: gitk:8850
+#: gitk:9371
 msgid "Write"
 msgstr "Exportar"
 
-#: gitk:8868
+#: gitk:9389
 msgid "Error writing commit:"
 msgstr "Erro ao exportar revisão"
 
-#: gitk:8895
+#: gitk:9416
 msgid "Name:"
 msgstr "Nome:"
 
-#: gitk:8918
+#: gitk:9439
 msgid "Please specify a name for the new branch"
 msgstr "Indique um nome para o novo ramo"
 
-#: gitk:8923
+#: gitk:9444
 #, tcl-format
 msgid "Branch '%s' already exists. Overwrite?"
 msgstr "O ramo \"%s\" já existe. Sobrescrever?"
 
-#: gitk:8989
+#: gitk:9511
 #, tcl-format
 msgid "Commit %s is already included in branch %s -- really re-apply it?"
 msgstr "Revisão %s já inclusa no ramo %s -- você realmente deseja reaplicá-la?"
 
-#: gitk:8994
+#: gitk:9516
 msgid "Cherry-picking"
 msgstr "Cherry-picking"
 
-#: gitk:9003
+#: gitk:9525
 #, tcl-format
 msgid ""
 "Cherry-pick failed because of local changes to file '%s'.\n"
 "Please commit, reset or stash your changes and try again."
 msgstr ""
 "O cherry-pick falhou porque o arquivo \"%s\" possui mudanças locais.\n"
 "Salve a uma revisão, redefina ou armazene (stash) suas mudanças e tente "
 "novamente."
 
-#: gitk:9009
+#: gitk:9531
 msgid ""
 "Cherry-pick failed because of merge conflict.\n"
 "Do you wish to run git citool to resolve it?"
 msgstr ""
 "O cherry-pick falhou porque houve um conflito na mesclagem.\n"
 "Executar o 'git citool' para resolvê-lo?"
 
-#: gitk:9025
+#: gitk:9547 gitk:9605
 msgid "No changes committed"
 msgstr "Nenhuma revisão foi salva"
 
-#: gitk:9051
+#: gitk:9574
+#, fuzzy, tcl-format
+msgid "Commit %s is not included in branch %s -- really revert it?"
+msgstr "Revisão %s já inclusa no ramo %s -- você realmente deseja reaplicá-la?"
+
+#: gitk:9579
+#, fuzzy
+msgid "Reverting"
+msgstr "Redefinindo"
+
+#: gitk:9587
+#, fuzzy, tcl-format
+msgid ""
+"Revert failed because of local changes to the following files:%s Please "
+"commit, reset or stash  your changes and try again."
+msgstr ""
+"O cherry-pick falhou porque o arquivo \"%s\" possui mudanças locais.\n"
+"Salve a uma revisão, redefina ou armazene (stash) suas mudanças e tente "
+"novamente."
+
+#: gitk:9591
+#, fuzzy
+msgid ""
+"Revert failed because of merge conflict.\n"
+" Do you wish to run git citool to resolve it?"
+msgstr ""
+"O cherry-pick falhou porque houve um conflito na mesclagem.\n"
+"Executar o 'git citool' para resolvê-lo?"
+
+#: gitk:9634
 msgid "Confirm reset"
 msgstr "Confirmar redefinição"
 
-#: gitk:9053
+#: gitk:9636
 #, tcl-format
 msgid "Reset branch %s to %s?"
 msgstr "Você realmente deseja redefinir o ramo %s para %s?"
 
-#: gitk:9055
+#: gitk:9638
 msgid "Reset type:"
 msgstr "Tipo de redefinição"
 
-#: gitk:9058
+#: gitk:9641
 msgid "Soft: Leave working tree and index untouched"
 msgstr "Soft: deixa a árvore de trabalho e o índice intocados"
 
-#: gitk:9061
+#: gitk:9644
 msgid "Mixed: Leave working tree untouched, reset index"
 msgstr "Misto: Deixa a árvore de trabalho intocada, redefine o índice"
 
-#: gitk:9064
+#: gitk:9647
 msgid ""
 "Hard: Reset working tree and index\n"
 "(discard ALL local changes)"
 msgstr ""
 "Hard: Redefine a árvore de trabalho e o índice\n"
 "(descarta TODAS as mudanças locais)"
 
-#: gitk:9081
+#: gitk:9664
 msgid "Resetting"
 msgstr "Redefinindo"
 
-#: gitk:9141
+#: gitk:9724
 msgid "Checking out"
 msgstr "Abrindo"
 
-#: gitk:9194
+#: gitk:9777
 msgid "Cannot delete the currently checked-out branch"
 msgstr "Impossível excluir o ramo atualmente aberto"
 
-#: gitk:9200
+#: gitk:9783
 #, tcl-format
 msgid ""
 "The commits on branch %s aren't on any other branch.\n"
 "Really delete branch %s?"
 msgstr ""
 "As revisões do ramo \"%s\" não existem em nenhum outro ramo.\n"
 "Você realmente deseja excluir ramo \"%s\"?"
 
-#: gitk:9231
+#: gitk:9814
 #, tcl-format
 msgid "Tags and heads: %s"
 msgstr "Referências: %s"
 
-#: gitk:9246
+#: gitk:9829
 msgid "Filter"
 msgstr "Filtro"
 
-#: gitk:9541
+#: gitk:10125
 msgid ""
 "Error reading commit topology information; branch and preceding/following "
 "tag information will be incomplete."
 msgstr ""
 "Erro ao ler a topologia das revisões; as informações dos ramos e etiquetas "
 "antecessoras/sucessoras estarão incompletas"
 
-#: gitk:10527
+#: gitk:11102
 msgid "Tag"
 msgstr "Etiqueta"
 
-#: gitk:10527
+#: gitk:11106
 msgid "Id"
 msgstr "Id"
 
-#: gitk:10576
+#: gitk:11189
 msgid "Gitk font chooser"
 msgstr "Selecionar fontes do Gitk"
 
-#: gitk:10593
+#: gitk:11206
 msgid "B"
 msgstr "B"
 
-#: gitk:10596
+#: gitk:11209
 msgid "I"
 msgstr "I"
 
-#: gitk:10714
-msgid "Gitk preferences"
-msgstr "Preferências do Gitk"
-
-#: gitk:10716
+#: gitk:11327
 msgid "Commit list display options"
 msgstr "Opções da lista de revisões"
 
-#: gitk:10719
+#: gitk:11330
 msgid "Maximum graph width (lines)"
 msgstr "Largura máxima do grafo (linhas)"
 
-#: gitk:10722
-#, tcl-format
+#: gitk:11334
+#, no-tcl-format
 msgid "Maximum graph width (% of pane)"
 msgstr "Largura máxima do grafo (% do painel)"
 
-#: gitk:10725
+#: gitk:11337
 msgid "Show local changes"
 msgstr "Exibir mudanças locais"
 
-#: gitk:10728
-msgid "Auto-select SHA1"
+#: gitk:11340
+#, fuzzy
+msgid "Auto-select SHA1 (length)"
 msgstr "Selecionar o SHA1 automaticamente"
 
-#: gitk:10731
+#: gitk:11344
 msgid "Hide remote refs"
 msgstr "Ocultar referências remotas"
 
-#: gitk:10735
+#: gitk:11348
 msgid "Diff display options"
 msgstr "Opções de exibição das alterações"
 
-#: gitk:10737
+#: gitk:11350
 msgid "Tab spacing"
 msgstr "Espaços por tabulação"
 
-#: gitk:10740
-msgid "Display nearby tags"
+#: gitk:11353
+#, fuzzy
+msgid "Display nearby tags/heads"
 msgstr "Exibir etiquetas próximas"
 
-#: gitk:10743
+#: gitk:11356
+msgid "Maximum # tags/heads to show"
+msgstr ""
+
+#: gitk:11359
 msgid "Limit diffs to listed paths"
 msgstr "Limitar diferenças aos caminhos listados"
 
-#: gitk:10746
+#: gitk:11362
 msgid "Support per-file encodings"
 msgstr "Usar codificações distintas por arquivo"
 
-#: gitk:10752 gitk:10832
+#: gitk:11368 gitk:11515
 msgid "External diff tool"
 msgstr "Ferramenta 'diff' externa"
 
-#: gitk:10753
+#: gitk:11369
 msgid "Choose..."
 msgstr "Selecionar..."
 
-#: gitk:10758
+#: gitk:11374
 msgid "General options"
 msgstr "Opções gerais"
 
-#: gitk:10761
+#: gitk:11377
 msgid "Use themed widgets"
 msgstr "Usar temas para as janelas"
 
-#: gitk:10763
+#: gitk:11379
 msgid "(change requires restart)"
 msgstr "(exige reinicialização)"
 
-#: gitk:10765
+#: gitk:11381
 msgid "(currently unavailable)"
 msgstr "(atualmente indisponível)"
 
-#: gitk:10769
+#: gitk:11392
 msgid "Colors: press to choose"
 msgstr "Cores: clique para escolher"
 
-#: gitk:10772
+#: gitk:11395
 msgid "Interface"
 msgstr "Interface"
 
-#: gitk:10773
+#: gitk:11396
 msgid "interface"
 msgstr "interface"
 
-#: gitk:10776
+#: gitk:11399
 msgid "Background"
 msgstr "Segundo plano"
 
-#: gitk:10777 gitk:10807
+#: gitk:11400 gitk:11430
 msgid "background"
 msgstr "segundo plano"
 
-#: gitk:10780
+#: gitk:11403
 msgid "Foreground"
 msgstr "Primeiro plano"
 
-#: gitk:10781
+#: gitk:11404
 msgid "foreground"
 msgstr "primeiro plano"
 
-#: gitk:10784
+#: gitk:11407
 msgid "Diff: old lines"
 msgstr "Diff: linhas excluídas"
 
-#: gitk:10785
+#: gitk:11408
 msgid "diff old lines"
 msgstr "linhas excluídas"
 
-#: gitk:10789
+#: gitk:11412
 msgid "Diff: new lines"
 msgstr "Diff: linhas adicionadas"
 
-#: gitk:10790
+#: gitk:11413
 msgid "diff new lines"
 msgstr "linhas adicionadas"
 
-#: gitk:10794
+#: gitk:11417
 msgid "Diff: hunk header"
 msgstr "Diff: cabeçalho do bloco"
 
-#: gitk:10796
+#: gitk:11419
 msgid "diff hunk header"
 msgstr "cabeçalho do bloco"
 
-#: gitk:10800
+#: gitk:11423
 msgid "Marked line bg"
 msgstr "2º plano da linha marcada"
 
-#: gitk:10802
+#: gitk:11425
 msgid "marked line background"
 msgstr "segundo plano da linha marcada"
 
-#: gitk:10806
+#: gitk:11429
 msgid "Select bg"
 msgstr "2º plano da seleção"
 
-#: gitk:10810
+#: gitk:11438
 msgid "Fonts: press to choose"
 msgstr "Fontes: clique para escolher"
 
-#: gitk:10812
+#: gitk:11440
 msgid "Main font"
 msgstr "Fonte principal"
 
-#: gitk:10813
+#: gitk:11441
 msgid "Diff display font"
 msgstr "Fonte da lista de mudanças"
 
-#: gitk:10814
+#: gitk:11442
 msgid "User interface font"
 msgstr "Fonte da interface"
 
-#: gitk:10842
+#: gitk:11464
+msgid "Gitk preferences"
+msgstr "Preferências do Gitk"
+
+#: gitk:11473
+#, fuzzy
+msgid "General"
+msgstr "Gerar"
+
+#: gitk:11474
+msgid "Colors"
+msgstr ""
+
+#: gitk:11475
+msgid "Fonts"
+msgstr ""
+
+#: gitk:11525
 #, tcl-format
 msgid "Gitk: choose color for %s"
 msgstr "Gitk: selecionar cor para %s"
 
-#: gitk:11445
+#: gitk:12242
 msgid "Cannot find a git repository here."
 msgstr "Não há nenhum repositório git aqui."
 
-#: gitk:11449
-#, tcl-format
-msgid "Cannot find the git directory \"%s\"."
-msgstr "Impossível encontrar o diretório git \"%s\"."
-
-#: gitk:11496
+#: gitk:12289
 #, tcl-format
 msgid "Ambiguous argument '%s': both revision and filename"
 msgstr ""
 "O argumento \"%s\" é ambíguo (especifica tanto uma revisão e um nome de "
 "arquivo)"
 
-#: gitk:11508
+#: gitk:12301
 msgid "Bad arguments to gitk:"
 msgstr "Argumentos incorretos para o gitk:"
 
-#: gitk:11604
+#: gitk:12405
 msgid "Command line"
 msgstr "Linha de comando"
+
+#~ msgid "next"
+#~ msgstr "Próximo"
+
+#~ msgid "prev"
+#~ msgstr "Anterior"
+
+#~ msgid "CDate"
+#~ msgstr "DataR"
+
+#~ msgid "Cannot find the git directory \"%s\"."
+#~ msgstr "Impossível encontrar o diretório git \"%s\"."
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/ru.msg /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/ru.msg
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/ru.msg	2017-10-10 12:31:59.130631527 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/ru.msg	2017-10-10 13:04:28.182560095 +0800
@@ -1,7 +1,7 @@
-set ::msgcat::header "Project-Id-Version: gitk\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2009-04-24 16:00+0200\nPO-Revision-Date: 2009-04-24 16:00+0200\nLast-Translator: Alex Riesen <raa.lkml@gmail.com>\nLanguage-Team: Russian\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"
+set ::msgcat::header "Project-Id-Version: gitk\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2015-03-15 14:37+1100\nPO-Revision-Date: 2009-04-24 16:00+0200\nLast-Translator: Alex Riesen <raa.lkml@gmail.com>\nLanguage-Team: Russian\nLanguage: \nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"
 ::msgcat::mcset ru "Couldn't get list of unmerged files:" "\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0444\u0430\u0439\u043b\u043e\u0432 \u043d\u0435\u0437\u0430\u0432\u0435\u0440\u0448\u0451\u043d\u043d\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0441\u043b\u0438\u044f\u043d\u0438\u044f:"
 ::msgcat::mcset ru "Error parsing revisions:" "\u041e\u0448\u0438\u0431\u043a\u0430 \u0432 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0435 \u0432\u0435\u0440\u0441\u0438\u0438:"
 ::msgcat::mcset ru "Error executing --argscmd command:" "\u041e\u0448\u0438\u0431\u043a\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 --argscmd:"
 ::msgcat::mcset ru "No files selected: --merge specified but no files are unmerged." "\u0424\u0430\u0439\u043b\u044b \u043d\u0435 \u0432\u044b\u0431\u0440\u0430\u043d\u044b: \u0443\u043a\u0430\u0437\u0430\u043d --merge, \u043d\u043e \u043d\u0435 \u0431\u044b\u043b\u043e \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043d\u0438 \u043e\u0434\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0433\u0434\u0435 \u044d\u0442\u0430 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0430."
 ::msgcat::mcset ru "No files selected: --merge specified but no unmerged files are within file limit." "\u0424\u0430\u0439\u043b\u044b \u043d\u0435 \u0432\u044b\u0431\u0440\u0430\u043d\u044b: \u0443\u043a\u0430\u0437\u0430\u043d --merge, \u043d\u043e \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f \u043d\u0430 \u0438\u043c\u0435\u043d\u0430 \u0444\u0430\u0439\u043b\u043e\u0432 \u043d\u0435\u0442 \u043d\u0438 \u043e\u0434\u043d\u043e\u0433\u043e \u0433\u0434\u0435 \u044d\u0442\u0430 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0430."
 ::msgcat::mcset ru "Error executing git log:" "\u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 git log:"
@@ -26,17 +26,15 @@
 ::msgcat::mcset ru "Delete view" "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435"
 ::msgcat::mcset ru "All files" "\u0412\u0441\u0435 \u0444\u0430\u0439\u043b\u044b"
 ::msgcat::mcset ru "View" "\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435"
 ::msgcat::mcset ru "About gitk" "\u041e gitk"
 ::msgcat::mcset ru "Key bindings" "\u041d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b"
 ::msgcat::mcset ru "Help" "\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430"
-::msgcat::mcset ru "SHA1 ID: " "SHA1:"
+::msgcat::mcset ru "SHA1 ID:" "SHA1 ID:"
 ::msgcat::mcset ru "Row" "\u0421\u0442\u0440\u043e\u043a\u0430"
 ::msgcat::mcset ru "Find" "\u041f\u043e\u0438\u0441\u043a"
-::msgcat::mcset ru "next" "\u0421\u043b\u0435\u0434."
-::msgcat::mcset ru "prev" "\u041f\u0440\u0435\u0434."
 ::msgcat::mcset ru "commit" "\u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435"
 ::msgcat::mcset ru "containing:" "\u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435:"
 ::msgcat::mcset ru "touching paths:" "\u043a\u0430\u0441\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0444\u0430\u0439\u043b\u043e\u0432:"
 ::msgcat::mcset ru "adding/removing string:" "\u0434\u043e\u0431\u0430\u0432\u0438\u0432/\u0443\u0434\u0430\u043b\u0438\u0432 \u0441\u0442\u0440\u043e\u043a\u0443:"
 ::msgcat::mcset ru "Exact" "\u0422\u043e\u0447\u043d\u043e"
 ::msgcat::mcset ru "IgnCase" "\u0418\u0433\u043d\u043e\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0438\u0435/\u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0438\u0435"
@@ -67,22 +65,18 @@
 ::msgcat::mcset ru "Highlight this too" "\u041f\u043e\u0434\u0441\u0432\u0435\u0442\u0438\u0442\u044c \u044d\u0442\u043e\u0442 \u0442\u043e\u0436\u0435"
 ::msgcat::mcset ru "Highlight this only" "\u041f\u043e\u0434\u0441\u0432\u0435\u0442\u0438\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u044d\u0442\u043e\u0442"
 ::msgcat::mcset ru "External diff" "\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f"
 ::msgcat::mcset ru "Blame parent commit" "\u0410\u043d\u043d\u043e\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435"
 ::msgcat::mcset ru "Show origin of this line" "\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a \u044d\u0442\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438"
 ::msgcat::mcset ru "Run git gui blame on this line" "\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c git gui blame \u0434\u043b\u044f \u044d\u0442\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438"
-::msgcat::mcset ru "\nGitk - a commit viewer for git\n\nCopyright \\u00a9 2005-2010 Paul Mackerras\n\nUse and redistribute under the terms of the GNU General Public License" "\nGitk - \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u0438\u0441\u0442\u043e\u0440\u0438\u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0435\u0432 Git\n\nCopyright \\u00a9 2005-2010 Paul Mackerras\n\n\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0438 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0441\u043e\u0433\u043b\u0430\u0441\u043d\u043e \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c GNU General Public License"
 ::msgcat::mcset ru "Close" "\u0417\u0430\u043a\u0440\u044b\u0442\u044c"
 ::msgcat::mcset ru "Gitk key bindings" "\u041d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b \u0432 Gitk"
 ::msgcat::mcset ru "Gitk key bindings:" "\u041d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b \u0432 Gitk:"
 ::msgcat::mcset ru "<%s-Q>\u0009\u0009Quit" "<%s-Q>\u0009\u0009\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c"
 ::msgcat::mcset ru "<Home>\u0009\u0009Move to first commit" "<Home>\u0009\u0009\u041f\u0435\u0440\u0435\u0439\u0442\u0438 \u043a \u043f\u0435\u0440\u0432\u043e\u043c\u0443 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044e"
 ::msgcat::mcset ru "<End>\u0009\u0009Move to last commit" "<End>\u0009\u0009\u041f\u0435\u0440\u0435\u0439\u0442\u0438 \u043a \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u043c\u0443 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044e"
-::msgcat::mcset ru "<Up>, p, i\u0009Move up one commit" "<Up>, p, i\u0009\u041f\u0435\u0440\u0435\u0439\u0442\u0438 \u043a \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c\u0443 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044e"
-::msgcat::mcset ru "<Down>, n, k\u0009Move down one commit" "<Down>, n, k\u0009\u041f\u0435\u0440\u0435\u0439\u0442\u0438 \u043a \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c\u0443 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044e"
-::msgcat::mcset ru "<Left>, z, j\u0009Go back in history list" "<Left>, z, j\u0009\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0440\u0430\u043d\u0435\u0435 \u043f\u043e\u0441\u0435\u0449\u0451\u043d\u043d\u043e\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435"
 ::msgcat::mcset ru "<Right>, x, l\u0009Go forward in history list" "<Right>, x, l\u0009\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0435 \u043f\u043e\u0441\u0435\u0449\u0451\u043d\u043d\u043e\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435"
 ::msgcat::mcset ru "<PageUp>\u0009Move up one page in commit list" "<PageUp>\u0009\u041f\u0435\u0440\u0435\u0439\u0442\u0438 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0432\u044b\u0448\u0435 \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0439"
 ::msgcat::mcset ru "<PageDown>\u0009Move down one page in commit list" "<PageDown>\u0009\u041f\u0435\u0440\u0435\u0439\u0442\u0438 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043d\u0438\u0436\u0435 \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0439"
 ::msgcat::mcset ru "<%s-Home>\u0009Scroll to top of commit list" "<%s-Home>\u0009\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u043d\u0430\u0447\u0430\u043b\u043e \u0441\u043f\u0438\u0441\u043a\u0430 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0439"
 ::msgcat::mcset ru "<%s-End>\u0009Scroll to bottom of commit list" "<%s-End>\u0009\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u043a\u043e\u043d\u0435\u0446 \u0441\u043f\u0438\u0441\u043a\u0430 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0439"
 ::msgcat::mcset ru "<%s-Up>\u0009Scroll commit list up one line" "<%s-Up>\u0009\u041f\u0440\u043e\u0432\u0435\u0440\u043d\u0443\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0439 \u0432\u0432\u0435\u0440\u0445"
@@ -106,43 +100,34 @@
 ::msgcat::mcset ru "<%s-R>\u0009\u0009Search for previous hit in diff view" "<%s-R>\u0009\u0009\u041f\u0435\u0440\u0435\u0439\u0442\u0438 \u043a \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c\u0443 \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u043e\u043c\u0443 \u0442\u0435\u043a\u0441\u0442\u0443 \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439"
 ::msgcat::mcset ru "<%s-KP+>\u0009Increase font size" "<%s-KP+>\u0009\u0423\u0432\u0435\u043b\u0438\u0447\u0438\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440 \u0448\u0440\u0438\u0444\u0442\u0430"
 ::msgcat::mcset ru "<%s-plus>\u0009Increase font size" "<%s-plus>\u0009\u0423\u0432\u0435\u043b\u0438\u0447\u0438\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440 \u0448\u0440\u0438\u0444\u0442\u0430"
 ::msgcat::mcset ru "<%s-KP->\u0009Decrease font size" "<%s-KP->\u0009\u0423\u043c\u0435\u043d\u044c\u0448\u0438\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440 \u0448\u0440\u0438\u0444\u0442\u0430"
 ::msgcat::mcset ru "<%s-minus>\u0009Decrease font size" "<%s-minus>\u0009\u0423\u043c\u0435\u043d\u044c\u0448\u0438\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440 \u0448\u0440\u0438\u0444\u0442\u0430"
 ::msgcat::mcset ru "<F5>\u0009\u0009Update" "<F5>\u0009\u0009\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c"
-::msgcat::mcset ru "Error getting \"%s\" from %s:" "\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \"%s\" \u0438\u0437 %s:"
 ::msgcat::mcset ru "Error creating temporary directory %s:" "\u041e\u0448\u0438\u0431\u043a\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0433\u043e \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430 %s:"
+::msgcat::mcset ru "Error getting \"%s\" from %s:" "\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \"%s\" \u0438\u0437 %s:"
 ::msgcat::mcset ru "command failed:" "\u043e\u0448\u0438\u0431\u043a\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u044b:"
 ::msgcat::mcset ru "No such commit" "\u0421\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e"
 ::msgcat::mcset ru "git gui blame: command failed:" "git gui blame: \u043e\u0448\u0438\u0431\u043a\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u044b:"
 ::msgcat::mcset ru "Couldn't read merge head: %s" "\u041e\u0448\u0438\u0431\u043a\u0430 \u0447\u0442\u0435\u043d\u0438\u044f MERGE_HEAD: %s"
 ::msgcat::mcset ru "Error reading index: %s" "\u041e\u0448\u0438\u0431\u043a\u0430 \u0447\u0442\u0435\u043d\u0438\u044f \u0438\u043d\u0434\u0435\u043a\u0441\u0430: %s"
 ::msgcat::mcset ru "Couldn't start git blame: %s" "\u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 git blame: %s"
 ::msgcat::mcset ru "Searching" "\u041f\u043e\u0438\u0441\u043a"
 ::msgcat::mcset ru "Error running git blame: %s" "\u041e\u0448\u0438\u0431\u043a\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f git blame: %s"
 ::msgcat::mcset ru "That line comes from commit %s,  which is not in this view" "\u042d\u0442\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0438\u0442 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044e %s, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043d\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043e \u0432 \u044d\u0442\u043e\u043c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0438"
 ::msgcat::mcset ru "External diff viewer failed:" "\u041e\u0448\u0438\u0431\u043a\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f:"
 ::msgcat::mcset ru "Gitk view definition" "Gitk \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439"
 ::msgcat::mcset ru "Remember this view" "\u0417\u0430\u043f\u043e\u043c\u043d\u0438\u0442\u044c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435"
-::msgcat::mcset ru "Commits to include (arguments to git log):" "\u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f (\u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0434\u043b\u044f git-log):"
-::msgcat::mcset ru "Use all refs" "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u0441\u0435 \u0432\u0435\u0442\u0432\u0438"
 ::msgcat::mcset ru "Strictly sort by date" "\u0421\u0442\u0440\u043e\u0433\u0430\u044f \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e \u0434\u0430\u0442\u0435"
 ::msgcat::mcset ru "Mark branch sides" "\u041e\u0442\u043c\u0435\u0442\u0438\u0442\u044c \u0441\u0442\u043e\u0440\u043e\u043d\u044b \u0432\u0435\u0442\u0432\u0435\u0439"
-::msgcat::mcset ru "Since date:" "\u0421 \u0434\u0430\u0442\u044b:"
-::msgcat::mcset ru "Until date:" "\u041f\u043e \u0434\u0430\u0442\u0443:"
-::msgcat::mcset ru "Max count:" "\u041c\u0430\u043a\u0441. \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e:"
-::msgcat::mcset ru "Skip:" "\u041f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u0442\u044c:"
 ::msgcat::mcset ru "Limit to first parent" "\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0438\u0442\u044c \u043f\u0435\u0440\u0432\u044b\u043c \u043f\u0440\u0435\u0434\u043a\u043e\u043c"
-::msgcat::mcset ru "Command to generate more commits to include:" "\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u0430 \u0434\u043b\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0439:"
-::msgcat::mcset ru "Name" "\u0418\u043c\u044f"
 ::msgcat::mcset ru "Enter files and directories to include, one per line:" "\u0424\u0430\u0439\u043b\u044b \u0438 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0438 \u0434\u043b\u044f \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f \u0438\u0441\u0442\u043e\u0440\u0438\u0438, \u043f\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0443:"
+::msgcat::mcset ru "Command to generate more commits to include:" "\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u0430 \u0434\u043b\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0439:"
 ::msgcat::mcset ru "Apply (F5)" "\u041f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c (F5)"
 ::msgcat::mcset ru "Error in commit selection arguments:" "\u041e\u0448\u0438\u0431\u043a\u0430 \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u0445 \u0432\u044b\u0431\u043e\u0440\u0430 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0439:"
 ::msgcat::mcset ru "None" "\u041d\u0438 \u043e\u0434\u043d\u043e\u0433\u043e"
-::msgcat::mcset ru "Date" "\u0414\u0430\u0442\u0430"
-::msgcat::mcset ru "CDate" "\u0414\u0430\u0442\u0430 \u0432\u0432\u043e\u0434\u0430"
 ::msgcat::mcset ru "Descendant" "\u041f\u043e\u0440\u043e\u0436\u0434\u0451\u043d\u043d\u043e\u0435"
 ::msgcat::mcset ru "Not descendant" "\u041d\u0435 \u043f\u043e\u0440\u043e\u0436\u0434\u0451\u043d\u043d\u043e\u0435"
 ::msgcat::mcset ru "Ancestor" "\u041f\u0440\u0435\u0434\u043e\u043a"
 ::msgcat::mcset ru "Not ancestor" "\u041d\u0435 \u043f\u0440\u0435\u0434\u043e\u043a"
 ::msgcat::mcset ru "Local changes checked in to index but not committed" "\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0432 \u0438\u043d\u0434\u0435\u043a\u0441\u0435, \u043d\u043e \u043d\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u0451\u043d\u043d\u044b\u0435"
 ::msgcat::mcset ru "Local uncommitted changes, not checked in to index" "\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0432 \u0440\u0430\u0431\u043e\u0447\u0435\u043c \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0435, \u043d\u0435 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0432 \u0438\u043d\u0434\u0435\u043a\u0441\u0435"
@@ -151,16 +136,15 @@
 ::msgcat::mcset ru "Child" "\u041f\u043e\u0442\u043e\u043c\u043e\u043a"
 ::msgcat::mcset ru "Branch" "\u0412\u0435\u0442\u0432\u044c"
 ::msgcat::mcset ru "Follows" "\u0421\u043b\u0435\u0434\u0443\u0435\u0442 \u0437\u0430"
 ::msgcat::mcset ru "Precedes" "\u041f\u0440\u0435\u0434\u0448\u0435\u0441\u0442\u0432\u0443\u0435\u0442"
 ::msgcat::mcset ru "Error getting diffs: %s" "\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439: %s"
 ::msgcat::mcset ru "Goto:" "\u041f\u0435\u0440\u0435\u0439\u0442\u0438 \u043a:"
-::msgcat::mcset ru "SHA1 ID:" "SHA1 ID:"
 ::msgcat::mcset ru "Short SHA1 id %s is ambiguous" "\u0421\u043e\u043a\u0440\u0430\u0449\u0451\u043d\u043d\u044b\u0439 SHA1 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 %s \u043d\u0435\u043e\u0434\u043d\u043e\u0437\u043d\u0430\u0447\u0435\u043d"
 ::msgcat::mcset ru "SHA1 id %s is not known" "SHA1 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 %s \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d"
-::msgcat::mcset ru "Tag/Head %s is not known" "\u041c\u0435\u0442\u043a\u0430 \u0438\u043b\u0438 \u0432\u0435\u0442\u0432\u044c %s \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u0430"
+::msgcat::mcset ru "Date" "\u0414\u0430\u0442\u0430"
 ::msgcat::mcset ru "Children" "\u041f\u043e\u0442\u043e\u043c\u043a\u0438"
 ::msgcat::mcset ru "Reset %s branch to here" "\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432\u0435\u0442\u0432\u044c %s \u043d\u0430 \u044d\u0442\u043e \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435"
 ::msgcat::mcset ru "Detached head: can't reset" "\u0421\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043d\u0435 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0438\u0442 \u043d\u0438 \u043e\u0434\u043d\u043e\u0439 \u0432\u0435\u0442\u0432\u0438, \u043f\u0435\u0440\u0435\u0445\u043e\u0434 \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u0435\u043d"
 ::msgcat::mcset ru "Top" "\u0412\u0435\u0440\u0445"
 ::msgcat::mcset ru "From" "\u041e\u0442"
 ::msgcat::mcset ru "To" "\u0414\u043e"
@@ -190,34 +174,31 @@
 ::msgcat::mcset ru "No changes committed" "\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043d\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u044b"
 ::msgcat::mcset ru "Confirm reset" "\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0430"
 ::msgcat::mcset ru "Reset branch %s to %s?" "\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432\u0435\u0442\u0432\u044c %s \u043d\u0430 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 %s?"
 ::msgcat::mcset ru "Reset type:" "\u0422\u0438\u043f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0430:"
 ::msgcat::mcset ru "Soft: Leave working tree and index untouched" "\u041b\u0451\u0433\u043a\u0438\u0439: \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0440\u0430\u0431\u043e\u0447\u0438\u0439 \u043a\u0430\u0442\u0430\u043b\u043e\u0433 \u0438 \u0438\u043d\u0434\u0435\u043a\u0441 \u043d\u0435\u0438\u0437\u043c\u0435\u043d\u043d\u044b\u043c\u0438"
 ::msgcat::mcset ru "Mixed: Leave working tree untouched, reset index" "\u0421\u043c\u0435\u0448\u0430\u043d\u043d\u044b\u0439: \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0440\u0430\u0431\u043e\u0447\u0438\u0439 \u043a\u0430\u0442\u0430\u043b\u043e\u0433 \u043d\u0435\u0438\u0437\u043c\u0435\u043d\u043d\u044b\u043c, \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0438\u043d\u0434\u0435\u043a\u0441"
-::msgcat::mcset ru "Hard: Reset working tree and index\n(discard ALL local changes)" "\u0416\u0435\u0441\u0442\u043a\u0438\u0439: \u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u043d\u0434\u0435\u043a\u0441 \u0438 \u0440\u0430\u0431\u043e\u0447\u0438\u0439 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\n(\u0432\u0441\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0432 \u0440\u0430\u0431\u043e\u0447\u0435\u043c \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0438 \u0431\u0443\u0434\u0443\u0442 \u043f\u043e\u0442\u0435\u0440\u044f\u043d\u044b)"
+::msgcat::mcset ru "Hard: Reset working tree and index\n(discard ALL local changes)" "\u0416\u0435\u0441\u0442\u043a\u0438\u0439: \u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u043d\u0434\u0435\u043a\u0441 \u0438 \u0440\u0430\u0431\u043e\u0447\u0438\u0439 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\n(\u0432\u0441\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0432 \u0440\u0430\u0431\u043e\u0447\u0435\u043c \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0435 \u0431\u0443\u0434\u0443\u0442 \u043f\u043e\u0442\u0435\u0440\u044f\u043d\u044b)"
 ::msgcat::mcset ru "Resetting" "\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430"
 ::msgcat::mcset ru "Checking out" "\u041f\u0435\u0440\u0435\u0445\u043e\u0434"
 ::msgcat::mcset ru "Cannot delete the currently checked-out branch" "\u0410\u043a\u0442\u0438\u0432\u043d\u0430\u044f \u0432\u0435\u0442\u0432\u044c \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0443\u0434\u0430\u043b\u0435\u043d\u0430"
 ::msgcat::mcset ru "The commits on branch %s aren't on any other branch.\nReally delete branch %s?" "\u0421\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0432\u0435\u0442\u0432\u0438 %s \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0430\u0442 \u043d\u0438\u043a\u0430\u043a\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u0432\u0435\u0442\u0432\u0438.\n\u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0432\u0435\u0442\u0432\u044c %s?"
 ::msgcat::mcset ru "Tags and heads: %s" "\u041c\u0435\u0442\u043a\u0438 \u0438 \u0432\u0435\u0442\u0432\u0438: %s"
 ::msgcat::mcset ru "Filter" "\u0424\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u0442\u044c"
 ::msgcat::mcset ru "Error reading commit topology information; branch and preceding/following tag information will be incomplete." "\u041e\u0448\u0438\u0431\u043a\u0430 \u0447\u0442\u0435\u043d\u0438\u044f \u0438\u0441\u0442\u043e\u0440\u0438\u0438 \u043f\u0440\u043e\u0435\u043a\u0442\u0430; \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0442\u0432\u044f\u0445 \u0438 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f\u0445 \u0432\u043e\u043a\u0440\u0443\u0433 \u043c\u0435\u0442\u043e\u043a (\u0434\u043e/\u043f\u043e\u0441\u043b\u0435) \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043d\u0435\u043f\u043e\u043b\u043d\u043e\u0439."
 ::msgcat::mcset ru "Tag" "\u041c\u0435\u0442\u043a\u0430"
 ::msgcat::mcset ru "Id" "Id"
 ::msgcat::mcset ru "Gitk font chooser" "\u0428\u0440\u0438\u0444\u0442 Gitk"
 ::msgcat::mcset ru "B" "\u0416"
 ::msgcat::mcset ru "I" "\u041a"
-::msgcat::mcset ru "Gitk preferences" "\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 Gitk"
 ::msgcat::mcset ru "Commit list display options" "\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043f\u043e\u043a\u0430\u0437\u0430 \u0441\u043f\u0438\u0441\u043a\u0430 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0439"
 ::msgcat::mcset ru "Maximum graph width (lines)" "\u041c\u0430\u043a\u0441. \u0448\u0438\u0440\u0438\u043d\u0430 \u0433\u0440\u0430\u0444\u0430 (\u0441\u0442\u0440\u043e\u043a)"
 ::msgcat::mcset ru "Maximum graph width (% of pane)" "\u041c\u0430\u043a\u0441. \u0448\u0438\u0440\u0438\u043d\u0430 \u0433\u0440\u0430\u0444\u0430 (% \u0448\u0438\u0440\u0438\u043d\u044b \u043f\u0430\u043d\u0435\u043b\u0438)"
 ::msgcat::mcset ru "Show local changes" "\u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0432 \u0440\u0430\u0431\u043e\u0447\u0435\u043c \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0435"
-::msgcat::mcset ru "Auto-select SHA1" "\u0412\u044b\u0434\u0435\u043b\u0438\u0442\u044c SHA1"
 ::msgcat::mcset ru "Diff display options" "\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043f\u043e\u043a\u0430\u0437\u0430 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439"
 ::msgcat::mcset ru "Tab spacing" "\u0428\u0438\u0440\u0438\u043d\u0430 \u0442\u0430\u0431\u0443\u043b\u044f\u0446\u0438\u0438"
-::msgcat::mcset ru "Display nearby tags" "\u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0431\u043b\u0438\u0437\u043a\u0438\u0435 \u043c\u0435\u0442\u043a\u0438"
 ::msgcat::mcset ru "Limit diffs to listed paths" "\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0438\u0442\u044c \u043f\u043e\u043a\u0430\u0437 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u043c\u0438 \u0444\u0430\u0439\u043b\u0430\u043c\u0438"
 ::msgcat::mcset ru "Support per-file encodings" "\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043e\u043a \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0445 \u0444\u0430\u0439\u043b\u0430\u0445"
 ::msgcat::mcset ru "External diff tool" "\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0434\u043b\u044f \u043f\u043e\u043a\u0430\u0437\u0430 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439"
 ::msgcat::mcset ru "Choose..." "\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435..."
 ::msgcat::mcset ru "Colors: press to choose" "\u0426\u0432\u0435\u0442\u0430: \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u0434\u043b\u044f \u0432\u044b\u0431\u043e\u0440\u0430"
 ::msgcat::mcset ru "Background" "\u0424\u043e\u043d"
@@ -234,13 +215,12 @@
 ::msgcat::mcset ru "marked line background" "\u0444\u043e\u043d \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438"
 ::msgcat::mcset ru "Select bg" "\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0444\u043e\u043d"
 ::msgcat::mcset ru "Fonts: press to choose" "\u0428\u0440\u0438\u0444\u0442: \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u0434\u043b\u044f \u0432\u044b\u0431\u043e\u0440\u0430"
 ::msgcat::mcset ru "Main font" "\u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0448\u0440\u0438\u0444\u0442"
 ::msgcat::mcset ru "Diff display font" "\u0428\u0440\u0438\u0444\u0442 \u043f\u043e\u043a\u0430\u0437\u0430 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439"
 ::msgcat::mcset ru "User interface font" "\u0428\u0440\u0438\u0444\u0442 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430"
+::msgcat::mcset ru "Gitk preferences" "\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 Gitk"
 ::msgcat::mcset ru "Gitk: choose color for %s" "Gitk: \u0432\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0446\u0432\u0435\u0442 \u0434\u043b\u044f %s"
-::msgcat::mcset ru "Sorry, gitk cannot run with this version of Tcl/Tk.\n Gitk requires at least Tcl/Tk 8.4." "\u041a \u0441\u043e\u0436\u0430\u043b\u0435\u043d\u0438\u044e gitk \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u044d\u0442\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0439 Tcl/Tk.\n\u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043a\u0430\u043a \u043c\u0438\u043d\u0438\u043c\u0443\u043c Tcl/Tk 8.4."
 ::msgcat::mcset ru "Cannot find a git repository here." "Git-\u0440\u0435\u043f\u043e\u0437\u0438\u0442\u0430\u0440\u0438\u0439 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u0432 \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0435."
-::msgcat::mcset ru "Cannot find the git directory \"%s\"." "Git-\u0440\u0435\u043f\u043e\u0437\u0438\u0442\u0430\u0440\u0438\u0439 \"%s\" \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d."
 ::msgcat::mcset ru "Ambiguous argument '%s': both revision and filename" "\u041d\u0435\u043e\u0434\u043d\u043e\u0437\u043d\u0430\u0447\u043d\u044b\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 '%s': \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u043a\u0430\u043a \u0432\u0435\u0440\u0441\u0438\u044f \u0438 \u0438\u043c\u044f \u0444\u0430\u0439\u043b\u0430"
 ::msgcat::mcset ru "Bad arguments to gitk:" "\u041d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0434\u043b\u044f gitk:"
 ::msgcat::mcset ru "Command line" "\u041a\u043e\u043c\u0430\u043d\u0434\u043d\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/ru.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/ru.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/ru.po	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/ru.po	2015-05-01 03:12:02.000000000 +0800
@@ -2,1084 +2,1397 @@
 # Translation of gitk to Russian.
 #
 msgid ""
 msgstr ""
 "Project-Id-Version: gitk\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-04-24 16:00+0200\n"
+"POT-Creation-Date: 2015-03-15 14:37+1100\n"
 "PO-Revision-Date: 2009-04-24 16:00+0200\n"
 "Last-Translator: Alex Riesen <raa.lkml@gmail.com>\n"
 "Language-Team: Russian\n"
+"Language: \n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
 
-#: gitk:113
+#: gitk:140
 msgid "Couldn't get list of unmerged files:"
+msgstr "Невозможно получить список файлов незавершённой операции слияния:"
+
+#: gitk:212 gitk:2381
+msgid "Color words"
+msgstr ""
+
+#: gitk:217 gitk:2381 gitk:8201 gitk:8234
+msgid "Markup words"
 msgstr ""
-"Невозможно получить список файлов незавершённой операции слияния:"
 
-#: gitk:268
+#: gitk:324
 msgid "Error parsing revisions:"
 msgstr "Ошибка в идентификаторе версии:"
 
-#: gitk:323
+#: gitk:380
 msgid "Error executing --argscmd command:"
 msgstr "Ошибка выполнения команды заданной --argscmd:"
 
-#: gitk:336
+#: gitk:393
 msgid "No files selected: --merge specified but no files are unmerged."
 msgstr ""
-"Файлы не выбраны: указан --merge, но не было найдено ни одного файла "
-"где эта операция должна быть завершена."
+"Файлы не выбраны: указан --merge, но не было найдено ни одного файла где эта "
+"операция должна быть завершена."
 
-#: gitk:339
+#: gitk:396
 msgid ""
 "No files selected: --merge specified but no unmerged files are within file "
 "limit."
 msgstr ""
-"Файлы не выбраны: указан --merge, но в рамках указанного "
-"ограничения на имена файлов нет ни одного "
-"где эта операция должна быть завершена."
+"Файлы не выбраны: указан --merge, но в рамках указанного ограничения на "
+"имена файлов нет ни одного где эта операция должна быть завершена."
 
-#: gitk:361 gitk:508
+#: gitk:418 gitk:566
 msgid "Error executing git log:"
 msgstr "Ошибка запуска git log:"
 
-#: gitk:379
+#: gitk:436 gitk:582
 msgid "Reading"
 msgstr "Чтение"
 
-#: gitk:439 gitk:4021
+#: gitk:496 gitk:4508
 msgid "Reading commits..."
 msgstr "Чтение версий..."
 
-#: gitk:442 gitk:1560 gitk:4024
+#: gitk:499 gitk:1637 gitk:4511
 msgid "No commits selected"
 msgstr "Ничего не выбрано"
 
-#: gitk:1436
+#: gitk:1511
 msgid "Can't parse git log output:"
 msgstr "Ошибка обработки вывода команды git log:"
 
-#: gitk:1656
+#: gitk:1740
 msgid "No commit information available"
 msgstr "Нет информации о состоянии"
 
-#: gitk:1791 gitk:1815 gitk:3814 gitk:8478 gitk:10014 gitk:10186
+#: gitk:1897
+msgid "mc"
+msgstr ""
+
+#: gitk:1932 gitk:4298 gitk:9650 gitk:11220 gitk:11500
 msgid "OK"
 msgstr "Ok"
 
-#: gitk:1817 gitk:3816 gitk:8078 gitk:8152 gitk:8259 gitk:8308 gitk:8480
-#: gitk:10015 gitk:10187
+#: gitk:1934 gitk:4300 gitk:9177 gitk:9256 gitk:9372 gitk:9421 gitk:9652
+#: gitk:11221 gitk:11501
 msgid "Cancel"
 msgstr "Отмена"
 
-#: gitk:1915
+#: gitk:2069
 msgid "Update"
 msgstr "Обновить"
 
-#: gitk:1916
+#: gitk:2070
 msgid "Reload"
 msgstr "Перечитать"
 
-#: gitk:1917
+#: gitk:2071
 msgid "Reread references"
 msgstr "Обновить список ссылок"
 
-#: gitk:1918
+#: gitk:2072
 msgid "List references"
 msgstr "Список ссылок"
 
-#: gitk:1920
+#: gitk:2074
 msgid "Start git gui"
 msgstr "Запустить git gui"
 
-#: gitk:1922
+#: gitk:2076
 msgid "Quit"
 msgstr "Завершить"
 
-#: gitk:1914
+#: gitk:2068
 msgid "File"
 msgstr "Файл"
 
-#: gitk:1925
+#: gitk:2080
 msgid "Preferences"
 msgstr "Настройки"
 
-#: gitk:1924
+#: gitk:2079
 msgid "Edit"
 msgstr "Редактировать"
 
-#: gitk:1928
+#: gitk:2084
 msgid "New view..."
 msgstr "Новое представление..."
 
-#: gitk:1929
+#: gitk:2085
 msgid "Edit view..."
 msgstr "Редактировать представление..."
 
-#: gitk:1930
+#: gitk:2086
 msgid "Delete view"
 msgstr "Удалить представление"
 
-#: gitk:1932
+#: gitk:2088
 msgid "All files"
 msgstr "Все файлы"
 
-#: gitk:1927 gitk:3626
+#: gitk:2083 gitk:4050
 msgid "View"
 msgstr "Представление"
 
-#: gitk:1935 gitk:2609
+#: gitk:2093 gitk:2103 gitk:3009
 msgid "About gitk"
 msgstr "О gitk"
 
-#: gitk:1936
+#: gitk:2094 gitk:2108
 msgid "Key bindings"
 msgstr "Назначения клавиатуры"
 
-#: gitk:1934
+#: gitk:2092 gitk:2107
 msgid "Help"
 msgstr "Подсказка"
 
-#: gitk:1994
-msgid "SHA1 ID: "
-msgstr "SHA1:"
+#: gitk:2185 gitk:8633
+msgid "SHA1 ID:"
+msgstr "SHA1 ID:"
 
-#: gitk:2025
+#: gitk:2229
 msgid "Row"
 msgstr "Строка"
 
-#: gitk:2056
+#: gitk:2267
 msgid "Find"
 msgstr "Поиск"
 
-#: gitk:2057
-msgid "next"
-msgstr "След."
-
-#: gitk:2058
-msgid "prev"
-msgstr "Пред."
-
-#: gitk:2059
+#: gitk:2295
 msgid "commit"
 msgstr "состояние"
 
-#: gitk:2062 gitk:2064 gitk:4179 gitk:4202 gitk:4226 gitk:6164 gitk:6236
-#: gitk:6320
+#: gitk:2299 gitk:2301 gitk:4669 gitk:4692 gitk:4716 gitk:6736 gitk:6808
+#: gitk:6893
 msgid "containing:"
 msgstr "содержащее:"
 
-#: gitk:2065 gitk:3117 gitk:3122 gitk:4254
+#: gitk:2302 gitk:3522 gitk:3527 gitk:4745
 msgid "touching paths:"
 msgstr "касательно файлов:"
 
-#: gitk:2066 gitk:4259
+#: gitk:2303 gitk:4759
 msgid "adding/removing string:"
 msgstr "добавив/удалив строку:"
 
-#: gitk:2075 gitk:2077
+#: gitk:2304 gitk:4761
+msgid "changing lines matching:"
+msgstr ""
+
+#: gitk:2313 gitk:2315 gitk:4748
 msgid "Exact"
 msgstr "Точно"
 
-#: gitk:2077 gitk:4334 gitk:6132
+#: gitk:2315 gitk:4836 gitk:6704
 msgid "IgnCase"
 msgstr "Игнорировать большие/маленькие"
 
-#: gitk:2077 gitk:4228 gitk:4332 gitk:6128
+#: gitk:2315 gitk:4718 gitk:4834 gitk:6700
 msgid "Regexp"
 msgstr "Регулярные выражения"
 
-#: gitk:2079 gitk:2080 gitk:4353 gitk:4383 gitk:4390 gitk:6256 gitk:6324
+#: gitk:2317 gitk:2318 gitk:4856 gitk:4886 gitk:4893 gitk:6829 gitk:6897
 msgid "All fields"
 msgstr "Во всех полях"
 
-#: gitk:2080 gitk:4351 gitk:4383 gitk:6195
+#: gitk:2318 gitk:4853 gitk:4886 gitk:6767
 msgid "Headline"
 msgstr "Заголовок"
 
-#: gitk:2081 gitk:4351 gitk:6195 gitk:6324 gitk:6737
+#: gitk:2319 gitk:4853 gitk:6767 gitk:6897 gitk:7370
 msgid "Comments"
 msgstr "Комментарии"
 
-#: gitk:2081 gitk:4351 gitk:4355 gitk:4390 gitk:6195 gitk:6672 gitk:7923
-#: gitk:7938
+#: gitk:2319 gitk:4853 gitk:4858 gitk:4893 gitk:6767 gitk:7305 gitk:8811
+#: gitk:8826
 msgid "Author"
 msgstr "Автор"
 
-#: gitk:2081 gitk:4351 gitk:6195 gitk:6674
+#: gitk:2319 gitk:4853 gitk:6767 gitk:7307
 msgid "Committer"
 msgstr "Сохранивший состояние"
 
-#: gitk:2110
+#: gitk:2350
 msgid "Search"
 msgstr "Найти"
 
-#: gitk:2117
+#: gitk:2358
 msgid "Diff"
 msgstr "Сравнить"
 
-#: gitk:2119
+#: gitk:2360
 msgid "Old version"
 msgstr "Старая версия"
 
-#: gitk:2121
+#: gitk:2362
 msgid "New version"
 msgstr "Новая версия"
 
-#: gitk:2123
+#: gitk:2364
 msgid "Lines of context"
 msgstr "Строк контекста"
 
-#: gitk:2133
+#: gitk:2374
 msgid "Ignore space change"
 msgstr "Игнорировать пробелы"
 
-#: gitk:2191
+#: gitk:2378 gitk:2380 gitk:7940 gitk:8187
+msgid "Line diff"
+msgstr ""
+
+#: gitk:2445
 msgid "Patch"
 msgstr "Патч"
 
-#: gitk:2193
+#: gitk:2447
 msgid "Tree"
 msgstr "Файлы"
 
-#: gitk:2326 gitk:2339
+#: gitk:2616 gitk:2636
 msgid "Diff this -> selected"
 msgstr "Сравнить это состояние с выделенным"
 
-#: gitk:2327 gitk:2340
+#: gitk:2617 gitk:2637
 msgid "Diff selected -> this"
 msgstr "Сравнить выделенное с этим состоянием"
 
-#: gitk:2328 gitk:2341
+#: gitk:2618 gitk:2638
 msgid "Make patch"
 msgstr "Создать патч"
 
-#: gitk:2329 gitk:8136
+#: gitk:2619 gitk:9235
 msgid "Create tag"
 msgstr "Создать метку"
 
-#: gitk:2330 gitk:8239
+#: gitk:2620 gitk:9352
 msgid "Write commit to file"
 msgstr "Сохранить изменения в файл"
 
-#: gitk:2331 gitk:8296
+#: gitk:2621 gitk:9409
 msgid "Create new branch"
 msgstr "Создать ветвь"
 
-#: gitk:2332
+#: gitk:2622
 msgid "Cherry-pick this commit"
 msgstr "Скопировать это состояние"
 
-#: gitk:2333
+#: gitk:2623
 msgid "Reset HEAD branch to here"
 msgstr "Установить HEAD на это состояние"
 
-#: gitk:2347
+#: gitk:2624
+#, fuzzy
+msgid "Mark this commit"
+msgstr "Скопировать это состояние"
+
+#: gitk:2625
+msgid "Return to mark"
+msgstr ""
+
+#: gitk:2626
+msgid "Find descendant of this and mark"
+msgstr ""
+
+#: gitk:2627
+msgid "Compare with marked commit"
+msgstr ""
+
+#: gitk:2628 gitk:2639
+#, fuzzy
+msgid "Diff this -> marked commit"
+msgstr "Сравнить это состояние с выделенным"
+
+#: gitk:2629 gitk:2640
+#, fuzzy
+msgid "Diff marked commit -> this"
+msgstr "Сравнить выделенное с этим состоянием"
+
+#: gitk:2630
+#, fuzzy
+msgid "Revert this commit"
+msgstr "Скопировать это состояние"
+
+#: gitk:2646
 msgid "Check out this branch"
 msgstr "Перейти на эту ветвь"
 
-#: gitk:2348
+#: gitk:2647
 msgid "Remove this branch"
 msgstr "Удалить эту ветвь"
 
-#: gitk:2355
+#: gitk:2654
 msgid "Highlight this too"
 msgstr "Подсветить этот тоже"
 
-#: gitk:2356
+#: gitk:2655
 msgid "Highlight this only"
 msgstr "Подсветить только этот"
 
-#: gitk:2357
+#: gitk:2656
 msgid "External diff"
 msgstr "Программа сравнения"
 
-#: gitk:2358
+#: gitk:2657
 msgid "Blame parent commit"
 msgstr "Аннотировать родительское состояние"
 
-#: gitk:2365
+#: gitk:2664
 msgid "Show origin of this line"
 msgstr "Показать источник этой строки"
 
-#: gitk:2366
+#: gitk:2665
 msgid "Run git gui blame on this line"
 msgstr "Запустить git gui blame для этой строки"
 
-#: gitk:2611
+#: gitk:3011
+#, fuzzy
 msgid ""
 "\n"
 "Gitk - a commit viewer for git\n"
 "\n"
-"Copyright \\u00a9 2005-2010 Paul Mackerras\n"
+"Copyright © 2005-2014 Paul Mackerras\n"
 "\n"
 "Use and redistribute under the terms of the GNU General Public License"
 msgstr ""
 "\n"
 "Gitk - программа просмотра истории репозиториев Git\n"
 "\n"
 "Copyright \\u00a9 2005-2010 Paul Mackerras\n"
 "\n"
 "Использование и распространение согласно условиям GNU General Public License"
 
-#: gitk:2619 gitk:2681 gitk:8661
+#: gitk:3019 gitk:3085 gitk:9836
 msgid "Close"
 msgstr "Закрыть"
 
-#: gitk:2638
+#: gitk:3040
 msgid "Gitk key bindings"
 msgstr "Назначения клавиатуры в Gitk"
 
-#: gitk:2641
+#: gitk:3043
 msgid "Gitk key bindings:"
 msgstr "Назначения клавиатуры в Gitk:"
 
-#: gitk:2643
+#: gitk:3045
 #, tcl-format
 msgid "<%s-Q>\t\tQuit"
 msgstr "<%s-Q>\t\tЗавершить"
 
-#: gitk:2644
+#: gitk:3046
+#, fuzzy, tcl-format
+msgid "<%s-W>\t\tClose window"
+msgstr "<%s-F>\t\tПоиск"
+
+#: gitk:3047
 msgid "<Home>\t\tMove to first commit"
 msgstr "<Home>\t\tПерейти к первому состоянию"
 
-#: gitk:2645
+#: gitk:3048
 msgid "<End>\t\tMove to last commit"
 msgstr "<End>\t\tПерейти к последнему состоянию"
 
-#: gitk:2646
-msgid "<Up>, p, i\tMove up one commit"
+#: gitk:3049
+#, fuzzy
+msgid "<Up>, p, k\tMove up one commit"
 msgstr "<Up>, p, i\tПерейти к следующему состоянию"
 
-#: gitk:2647
-msgid "<Down>, n, k\tMove down one commit"
+#: gitk:3050
+#, fuzzy
+msgid "<Down>, n, j\tMove down one commit"
 msgstr "<Down>, n, k\tПерейти к предыдущему состоянию"
 
-#: gitk:2648
-msgid "<Left>, z, j\tGo back in history list"
+#: gitk:3051
+#, fuzzy
+msgid "<Left>, z, h\tGo back in history list"
 msgstr "<Left>, z, j\tПоказать ранее посещённое состояние"
 
-#: gitk:2649
+#: gitk:3052
 msgid "<Right>, x, l\tGo forward in history list"
 msgstr "<Right>, x, l\tПоказать следующее посещённое состояние"
 
-#: gitk:2650
+#: gitk:3053
+#, tcl-format
+msgid "<%s-n>\tGo to n-th parent of current commit in history list"
+msgstr ""
+
+#: gitk:3054
 msgid "<PageUp>\tMove up one page in commit list"
 msgstr "<PageUp>\tПерейти на страницу выше в списке состояний"
 
-#: gitk:2651
+#: gitk:3055
 msgid "<PageDown>\tMove down one page in commit list"
 msgstr "<PageDown>\tПерейти на страницу ниже в списке состояний"
 
-#: gitk:2652
+#: gitk:3056
 #, tcl-format
 msgid "<%s-Home>\tScroll to top of commit list"
 msgstr "<%s-Home>\tПоказать начало списка состояний"
 
-#: gitk:2653
+#: gitk:3057
 #, tcl-format
 msgid "<%s-End>\tScroll to bottom of commit list"
 msgstr "<%s-End>\tПоказать конец списка состояний"
 
-#: gitk:2654
+#: gitk:3058
 #, tcl-format
 msgid "<%s-Up>\tScroll commit list up one line"
 msgstr "<%s-Up>\tПровернуть список состояний вверх"
 
-#: gitk:2655
+#: gitk:3059
 #, tcl-format
 msgid "<%s-Down>\tScroll commit list down one line"
 msgstr "<%s-Down>\tПровернуть список состояний вниз"
 
-#: gitk:2656
+#: gitk:3060
 #, tcl-format
 msgid "<%s-PageUp>\tScroll commit list up one page"
 msgstr "<%s-PageUp>\tПровернуть список состояний на страницу вверх"
 
-#: gitk:2657
+#: gitk:3061
 #, tcl-format
 msgid "<%s-PageDown>\tScroll commit list down one page"
 msgstr "<%s-PageDown>\tПровернуть список состояний на страницу вниз"
 
-#: gitk:2658
+#: gitk:3062
 msgid "<Shift-Up>\tFind backwards (upwards, later commits)"
-msgstr ""
-"<Shift-Up>\tПоиск в обратном порядке (вверх, среди новых состояний)"
+msgstr "<Shift-Up>\tПоиск в обратном порядке (вверх, среди новых состояний)"
 
-#: gitk:2659
+#: gitk:3063
 msgid "<Shift-Down>\tFind forwards (downwards, earlier commits)"
 msgstr "<Shift-Down>\tПоиск (вниз, среди старых состояний)"
 
-#: gitk:2660
+#: gitk:3064
 msgid "<Delete>, b\tScroll diff view up one page"
 msgstr "<Delete>, b\tПрокрутить список изменений на страницу выше"
 
-#: gitk:2661
+#: gitk:3065
 msgid "<Backspace>\tScroll diff view up one page"
 msgstr "<Backspace>\tПрокрутить список изменений на страницу выше"
 
-#: gitk:2662
+#: gitk:3066
 msgid "<Space>\t\tScroll diff view down one page"
 msgstr "<Leertaste>\t\tПрокрутить список изменений на страницу ниже"
 
-#: gitk:2663
+#: gitk:3067
 msgid "u\t\tScroll diff view up 18 lines"
 msgstr "u\t\tПрокрутить список изменений на 18 строк вверх"
 
-#: gitk:2664
+#: gitk:3068
 msgid "d\t\tScroll diff view down 18 lines"
 msgstr "d\t\tПрокрутить список изменений на 18 строк вниз"
 
-#: gitk:2665
+#: gitk:3069
 #, tcl-format
 msgid "<%s-F>\t\tFind"
 msgstr "<%s-F>\t\tПоиск"
 
-#: gitk:2666
+#: gitk:3070
 #, tcl-format
 msgid "<%s-G>\t\tMove to next find hit"
 msgstr "<%s-G>\t\tПерейти к следующему найденному состоянию"
 
-#: gitk:2667
+#: gitk:3071
 msgid "<Return>\tMove to next find hit"
 msgstr "<Return>\tПерейти к следующему найденному состоянию"
 
-#: gitk:2668
+#: gitk:3072
 msgid "/\t\tFocus the search box"
 msgstr "/\t\tПерейти к полю поиска"
 
-#: gitk:2669
+#: gitk:3073
 msgid "?\t\tMove to previous find hit"
 msgstr "?\t\tПерейти к предыдущему найденному состоянию"
 
-#: gitk:2670
+#: gitk:3074
 msgid "f\t\tScroll diff view to next file"
 msgstr "f\t\tПрокрутить список изменений к следующему файлу"
 
-#: gitk:2671
+#: gitk:3075
 #, tcl-format
 msgid "<%s-S>\t\tSearch for next hit in diff view"
 msgstr "<%s-S>\t\tПродолжить поиск в списке изменений"
 
-#: gitk:2672
+#: gitk:3076
 #, tcl-format
 msgid "<%s-R>\t\tSearch for previous hit in diff view"
 msgstr "<%s-R>\t\tПерейти к предыдущему найденному тексту в списке изменений"
 
-#: gitk:2673
+#: gitk:3077
 #, tcl-format
 msgid "<%s-KP+>\tIncrease font size"
 msgstr "<%s-KP+>\tУвеличить размер шрифта"
 
-#: gitk:2674
+#: gitk:3078
 #, tcl-format
 msgid "<%s-plus>\tIncrease font size"
 msgstr "<%s-plus>\tУвеличить размер шрифта"
 
-#: gitk:2675
+#: gitk:3079
 #, tcl-format
 msgid "<%s-KP->\tDecrease font size"
 msgstr "<%s-KP->\tУменьшить размер шрифта"
 
-#: gitk:2676
+#: gitk:3080
 #, tcl-format
 msgid "<%s-minus>\tDecrease font size"
 msgstr "<%s-minus>\tУменьшить размер шрифта"
 
-#: gitk:2677
+#: gitk:3081
 msgid "<F5>\t\tUpdate"
 msgstr "<F5>\t\tОбновить"
 
-#: gitk:3132
-#, tcl-format
-msgid "Error getting \"%s\" from %s:"
-msgstr "Ошибка получения \"%s\" из %s:"
-
-#: gitk:3189 gitk:3198
+#: gitk:3546 gitk:3555
 #, tcl-format
 msgid "Error creating temporary directory %s:"
 msgstr "Ошибка создания временного каталога %s:"
 
-#: gitk:3211
+#: gitk:3568
+#, tcl-format
+msgid "Error getting \"%s\" from %s:"
+msgstr "Ошибка получения \"%s\" из %s:"
+
+#: gitk:3631
 msgid "command failed:"
 msgstr "ошибка выполнения команды:"
 
-#: gitk:3357
+#: gitk:3780
 msgid "No such commit"
 msgstr "Состояние не найдено"
 
-#: gitk:3371
+#: gitk:3794
 msgid "git gui blame: command failed:"
 msgstr "git gui blame: ошибка выполнения команды:"
 
-#: gitk:3402
+#: gitk:3825
 #, tcl-format
 msgid "Couldn't read merge head: %s"
 msgstr "Ошибка чтения MERGE_HEAD: %s"
 
-#: gitk:3410
+#: gitk:3833
 #, tcl-format
 msgid "Error reading index: %s"
 msgstr "Ошибка чтения индекса: %s"
 
-#: gitk:3435
+#: gitk:3858
 #, tcl-format
 msgid "Couldn't start git blame: %s"
 msgstr "Ошибка запуска git blame: %s"
 
-#: gitk:3438 gitk:6163
+#: gitk:3861 gitk:6735
 msgid "Searching"
 msgstr "Поиск"
 
-#: gitk:3470
+#: gitk:3893
 #, tcl-format
 msgid "Error running git blame: %s"
 msgstr "Ошибка выполнения git blame: %s"
 
-#: gitk:3498
+#: gitk:3921
 #, tcl-format
 msgid "That line comes from commit %s,  which is not in this view"
 msgstr ""
-"Эта строка принадлежит состоянию %s, которое не показано в этом "
-"представлении"
+"Эта строка принадлежит состоянию %s, которое не показано в этом представлении"
 
-#: gitk:3512
+#: gitk:3935
 msgid "External diff viewer failed:"
 msgstr "Ошибка выполнения программы сравнения:"
 
-#: gitk:3630
+#: gitk:4053
 msgid "Gitk view definition"
 msgstr "Gitk определение представлений"
 
-#: gitk:3634
+#: gitk:4057
 msgid "Remember this view"
 msgstr "Запомнить представление"
 
-#: gitk:3635
-msgid "Commits to include (arguments to git log):"
-msgstr "Включить состояния (аргументы для git-log):"
+#: gitk:4058
+msgid "References (space separated list):"
+msgstr ""
 
-#: gitk:3636
-msgid "Use all refs"
-msgstr "Использовать все ветви"
+#: gitk:4059
+msgid "Branches & tags:"
+msgstr ""
 
-#: gitk:3637
-msgid "Strictly sort by date"
-msgstr "Строгая сортировка по дате"
+#: gitk:4060
+#, fuzzy
+msgid "All refs"
+msgstr "Все файлы"
 
-#: gitk:3638
-msgid "Mark branch sides"
-msgstr "Отметить стороны ветвей"
+#: gitk:4061
+msgid "All (local) branches"
+msgstr ""
+
+#: gitk:4062
+msgid "All tags"
+msgstr ""
+
+#: gitk:4063
+msgid "All remote-tracking branches"
+msgstr ""
+
+#: gitk:4064
+msgid "Commit Info (regular expressions):"
+msgstr ""
+
+#: gitk:4065
+#, fuzzy
+msgid "Author:"
+msgstr "Автор"
+
+#: gitk:4066
+#, fuzzy
+msgid "Committer:"
+msgstr "Сохранивший состояние"
+
+#: gitk:4067
+msgid "Commit Message:"
+msgstr ""
+
+#: gitk:4068
+msgid "Matches all Commit Info criteria"
+msgstr ""
+
+#: gitk:4069
+msgid "Matches none Commit Info criteria"
+msgstr ""
 
-#: gitk:3639
-msgid "Since date:"
+#: gitk:4070
+msgid "Changes to Files:"
+msgstr ""
+
+#: gitk:4071
+msgid "Fixed String"
+msgstr ""
+
+#: gitk:4072
+msgid "Regular Expression"
+msgstr ""
+
+#: gitk:4073
+#, fuzzy
+msgid "Search string:"
+msgstr "Поиск"
+
+#: gitk:4074
+msgid ""
+"Commit Dates (\"2 weeks ago\", \"2009-03-17 15:27:38\", \"March 17, 2009 "
+"15:27:38\"):"
+msgstr ""
+
+#: gitk:4075
+#, fuzzy
+msgid "Since:"
 msgstr "С даты:"
 
-#: gitk:3640
-msgid "Until date:"
+#: gitk:4076
+#, fuzzy
+msgid "Until:"
 msgstr "По дату:"
 
-#: gitk:3641
-msgid "Max count:"
-msgstr "Макс. количество:"
-
-#: gitk:3642
-msgid "Skip:"
-msgstr "Пропустить:"
+#: gitk:4077
+msgid "Limit and/or skip a number of revisions (positive integer):"
+msgstr ""
+
+#: gitk:4078
+msgid "Number to show:"
+msgstr ""
+
+#: gitk:4079
+msgid "Number to skip:"
+msgstr ""
+
+#: gitk:4080
+msgid "Miscellaneous options:"
+msgstr ""
+
+#: gitk:4081
+msgid "Strictly sort by date"
+msgstr "Строгая сортировка по дате"
+
+#: gitk:4082
+msgid "Mark branch sides"
+msgstr "Отметить стороны ветвей"
 
-#: gitk:3643
+#: gitk:4083
 msgid "Limit to first parent"
 msgstr "Ограничить первым предком"
 
-#: gitk:3644
-msgid "Command to generate more commits to include:"
-msgstr "Дополнительная команда для списка состояний:"
+#: gitk:4084
+msgid "Simple history"
+msgstr ""
 
-#: gitk:3753
-msgid "Name"
-msgstr "Имя"
+#: gitk:4085
+#, fuzzy
+msgid "Additional arguments to git log:"
+msgstr "Включить состояния (аргументы для git-log):"
 
-#: gitk:3801
+#: gitk:4086
 msgid "Enter files and directories to include, one per line:"
 msgstr "Файлы и каталоги для ограничения истории, по одному на строку:"
 
-#: gitk:3815
+#: gitk:4087
+msgid "Command to generate more commits to include:"
+msgstr "Дополнительная команда для списка состояний:"
+
+#: gitk:4211
+msgid "Gitk: edit view"
+msgstr ""
+
+#: gitk:4219
+#, fuzzy
+msgid "-- criteria for selecting revisions"
+msgstr "Ошибка в идентификаторе версии:"
+
+#: gitk:4224
+#, fuzzy
+msgid "View Name"
+msgstr "Представление"
+
+#: gitk:4299
 msgid "Apply (F5)"
 msgstr "Применить (F5)"
 
-#: gitk:3853
+#: gitk:4337
 msgid "Error in commit selection arguments:"
 msgstr "Ошибка в параметрах выбора состояний:"
 
-#: gitk:3906 gitk:3958 gitk:4403 gitk:4417 gitk:5675 gitk:10867 gitk:10868
+#: gitk:4392 gitk:4445 gitk:4906 gitk:4920 gitk:6190 gitk:12346 gitk:12347
 msgid "None"
 msgstr "Ни одного"
 
-#: gitk:4351 gitk:6195 gitk:7925 gitk:7940
-msgid "Date"
-msgstr "Дата"
-
-#: gitk:4351 gitk:6195
-msgid "CDate"
-msgstr "Дата ввода"
-
-#: gitk:4500 gitk:4505
+#: gitk:5003 gitk:5008
 msgid "Descendant"
 msgstr "Порождённое"
 
-#: gitk:4501
+#: gitk:5004
 msgid "Not descendant"
 msgstr "Не порождённое"
 
-#: gitk:4508 gitk:4513
+#: gitk:5011 gitk:5016
 msgid "Ancestor"
 msgstr "Предок"
 
-#: gitk:4509
+#: gitk:5012
 msgid "Not ancestor"
 msgstr "Не предок"
 
-#: gitk:4799
+#: gitk:5306
 msgid "Local changes checked in to index but not committed"
 msgstr "Изменения зарегистрированные в индексе, но не сохранённые"
 
-#: gitk:4835
+#: gitk:5342
 msgid "Local uncommitted changes, not checked in to index"
 msgstr "Изменения в рабочем каталоге, не зарегистрированные в индексе"
 
-#: gitk:6676
+#: gitk:7115
+msgid "and many more"
+msgstr ""
+
+#: gitk:7118
+msgid "many"
+msgstr ""
+
+#: gitk:7309
 msgid "Tags:"
 msgstr "Таги:"
 
-#: gitk:6693 gitk:6699 gitk:7918
+#: gitk:7326 gitk:7332 gitk:8806
 msgid "Parent"
 msgstr "Предок"
 
-#: gitk:6704
+#: gitk:7337
 msgid "Child"
 msgstr "Потомок"
 
-#: gitk:6713
+#: gitk:7346
 msgid "Branch"
 msgstr "Ветвь"
 
-#: gitk:6716
+#: gitk:7349
 msgid "Follows"
 msgstr "Следует за"
 
-#: gitk:6719
+#: gitk:7352
 msgid "Precedes"
 msgstr "Предшествует"
 
-#: gitk:7212
+#: gitk:7947
 #, tcl-format
 msgid "Error getting diffs: %s"
 msgstr "Ошибка получения изменений: %s"
 
-#: gitk:7751
+#: gitk:8631
 msgid "Goto:"
 msgstr "Перейти к:"
 
-#: gitk:7753
-msgid "SHA1 ID:"
-msgstr "SHA1 ID:"
-
-#: gitk:7772
+#: gitk:8652
 #, tcl-format
 msgid "Short SHA1 id %s is ambiguous"
 msgstr "Сокращённый SHA1 идентификатор %s неоднозначен"
 
-#: gitk:7784
+#: gitk:8659
+#, fuzzy, tcl-format
+msgid "Revision %s is not known"
+msgstr "SHA1 идентификатор %s не найден"
+
+#: gitk:8669
 #, tcl-format
 msgid "SHA1 id %s is not known"
 msgstr "SHA1 идентификатор %s не найден"
 
-#: gitk:7786
+#: gitk:8671
 #, tcl-format
-msgid "Tag/Head %s is not known"
-msgstr "Метка или ветвь %s не найдена"
+msgid "Revision %s is not in the current view"
+msgstr ""
 
-#: gitk:7928
+#: gitk:8813 gitk:8828
+msgid "Date"
+msgstr "Дата"
+
+#: gitk:8816
 msgid "Children"
 msgstr "Потомки"
 
-#: gitk:7985
+#: gitk:8879
 #, tcl-format
 msgid "Reset %s branch to here"
 msgstr "Установить ветвь %s на это состояние"
 
-#: gitk:7987
+#: gitk:8881
 msgid "Detached head: can't reset"
 msgstr "Состояние не принадлежит ни одной ветви, переход невозможен"
 
-#: gitk:8019
+#: gitk:8986 gitk:8992
+msgid "Skipping merge commit "
+msgstr ""
+
+#: gitk:9001 gitk:9006
+#, fuzzy
+msgid "Error getting patch ID for "
+msgstr "Ошибка создания патча:"
+
+#: gitk:9002 gitk:9007
+msgid " - stopping\n"
+msgstr ""
+
+#: gitk:9012 gitk:9015 gitk:9023 gitk:9037 gitk:9046
+#, fuzzy
+msgid "Commit "
+msgstr "состояние"
+
+#: gitk:9016
+msgid ""
+" is the same patch as\n"
+"       "
+msgstr ""
+
+#: gitk:9024
+msgid ""
+" differs from\n"
+"       "
+msgstr ""
+
+#: gitk:9026
+msgid ""
+"Diff of commits:\n"
+"\n"
+msgstr ""
+
+#: gitk:9038 gitk:9047
+#, tcl-format
+msgid " has %s children - stopping\n"
+msgstr ""
+
+#: gitk:9066
+#, fuzzy, tcl-format
+msgid "Error writing commit to file: %s"
+msgstr "Ошибка сохранения состояния:"
+
+#: gitk:9072
+#, fuzzy, tcl-format
+msgid "Error diffing commits: %s"
+msgstr "Ошибка сохранения состояния:"
+
+#: gitk:9118
 msgid "Top"
 msgstr "Верх"
 
-#: gitk:8020
+#: gitk:9119
 msgid "From"
 msgstr "От"
 
-#: gitk:8025
+#: gitk:9124
 msgid "To"
 msgstr "До"
 
-#: gitk:8049
+#: gitk:9148
 msgid "Generate patch"
 msgstr "Создать патч"
 
-#: gitk:8051
+#: gitk:9150
 msgid "From:"
 msgstr "От:"
 
-#: gitk:8060
+#: gitk:9159
 msgid "To:"
 msgstr "До:"
 
-#: gitk:8069
+#: gitk:9168
 msgid "Reverse"
 msgstr "В обратном порядке"
 
-#: gitk:8071 gitk:8253
+#: gitk:9170 gitk:9366
 msgid "Output file:"
 msgstr "Файл для сохранения:"
 
-#: gitk:8077
+#: gitk:9176
 msgid "Generate"
 msgstr "Создать"
 
-#: gitk:8115
+#: gitk:9214
 msgid "Error creating patch:"
 msgstr "Ошибка создания патча:"
 
-#: gitk:8138 gitk:8241 gitk:8298
+#: gitk:9237 gitk:9354 gitk:9411
 msgid "ID:"
 msgstr "ID:"
 
-#: gitk:8147
+#: gitk:9246
 msgid "Tag name:"
 msgstr "Имя метки:"
 
-#: gitk:8151 gitk:8307
+#: gitk:9249
+msgid "Tag message is optional"
+msgstr ""
+
+#: gitk:9251
+#, fuzzy
+msgid "Tag message:"
+msgstr "Имя метки:"
+
+#: gitk:9255 gitk:9420
 msgid "Create"
 msgstr "Создать"
 
-#: gitk:8168
+#: gitk:9273
 msgid "No tag name specified"
 msgstr "Не задано имя метки"
 
-#: gitk:8172
+#: gitk:9277
 #, tcl-format
 msgid "Tag \"%s\" already exists"
 msgstr "Метка \"%s\" уже существует"
 
-#: gitk:8178
+#: gitk:9287
 msgid "Error creating tag:"
 msgstr "Ошибка создания метки:"
 
-#: gitk:8250
+#: gitk:9363
 msgid "Command:"
 msgstr "Команда:"
 
-#: gitk:8258
+#: gitk:9371
 msgid "Write"
 msgstr "Запись"
 
-#: gitk:8276
+#: gitk:9389
 msgid "Error writing commit:"
 msgstr "Ошибка сохранения состояния:"
 
-#: gitk:8303
+#: gitk:9416
 msgid "Name:"
 msgstr "Имя:"
 
-#: gitk:8326
+#: gitk:9439
 msgid "Please specify a name for the new branch"
 msgstr "Укажите имя для новой ветви"
 
-#: gitk:8331
+#: gitk:9444
 #, tcl-format
 msgid "Branch '%s' already exists. Overwrite?"
 msgstr "Ветвь '%s' уже существует. Переписать?"
 
-#: gitk:8397
+#: gitk:9511
 #, tcl-format
 msgid "Commit %s is already included in branch %s -- really re-apply it?"
-msgstr ""
-"Состояние %s уже принадлежит ветви %s. Продолжить операцию?"
+msgstr "Состояние %s уже принадлежит ветви %s. Продолжить операцию?"
 
-#: gitk:8402
+#: gitk:9516
 msgid "Cherry-picking"
 msgstr "Копирование изменений"
 
-#: gitk:8411
+#: gitk:9525
 #, tcl-format
 msgid ""
 "Cherry-pick failed because of local changes to file '%s'.\n"
 "Please commit, reset or stash your changes and try again."
 msgstr ""
 "Копирование невозможно из-за изменений в файле '%s'.\n"
 "Сохраните или отмените изменения и повторите операцию."
 
-#: gitk:8417
+#: gitk:9531
 msgid ""
 "Cherry-pick failed because of merge conflict.\n"
 "Do you wish to run git citool to resolve it?"
 msgstr ""
-"Копирование изменений невозможно из-за незавершённой операции "
-"слияния.\nЗапустить git citool для завершения этой операции?"
+"Копирование изменений невозможно из-за незавершённой операции слияния.\n"
+"Запустить git citool для завершения этой операции?"
 
-#: gitk:8433
+#: gitk:9547 gitk:9605
 msgid "No changes committed"
 msgstr "Изменения не сохранены"
 
-#: gitk:8459
+#: gitk:9574
+#, fuzzy, tcl-format
+msgid "Commit %s is not included in branch %s -- really revert it?"
+msgstr "Состояние %s уже принадлежит ветви %s. Продолжить операцию?"
+
+#: gitk:9579
+#, fuzzy
+msgid "Reverting"
+msgstr "Установка"
+
+#: gitk:9587
+#, fuzzy, tcl-format
+msgid ""
+"Revert failed because of local changes to the following files:%s Please "
+"commit, reset or stash  your changes and try again."
+msgstr ""
+"Копирование невозможно из-за изменений в файле '%s'.\n"
+"Сохраните или отмените изменения и повторите операцию."
+
+#: gitk:9591
+#, fuzzy
+msgid ""
+"Revert failed because of merge conflict.\n"
+" Do you wish to run git citool to resolve it?"
+msgstr ""
+"Копирование изменений невозможно из-за незавершённой операции слияния.\n"
+"Запустить git citool для завершения этой операции?"
+
+#: gitk:9634
 msgid "Confirm reset"
 msgstr "Подтвердите операцию перехода"
 
-#: gitk:8461
+#: gitk:9636
 #, tcl-format
 msgid "Reset branch %s to %s?"
 msgstr "Установить ветвь %s на состояние %s?"
 
-#: gitk:8465
+#: gitk:9638
 msgid "Reset type:"
 msgstr "Тип операции перехода:"
 
-#: gitk:8469
+#: gitk:9641
 msgid "Soft: Leave working tree and index untouched"
 msgstr "Лёгкий: оставить рабочий каталог и индекс неизменными"
 
-#: gitk:8472
+#: gitk:9644
 msgid "Mixed: Leave working tree untouched, reset index"
-msgstr ""
-"Смешанный: оставить рабочий каталог неизменным, установить индекс"
+msgstr "Смешанный: оставить рабочий каталог неизменным, установить индекс"
 
-#: gitk:8475
+#: gitk:9647
 msgid ""
 "Hard: Reset working tree and index\n"
 "(discard ALL local changes)"
 msgstr ""
 "Жесткий: переписать индекс и рабочий каталог\n"
-"(все изменения в рабочем каталоги будут потеряны)"
+"(все изменения в рабочем каталоге будут потеряны)"
 
-#: gitk:8492
+#: gitk:9664
 msgid "Resetting"
 msgstr "Установка"
 
-#: gitk:8549
+#: gitk:9724
 msgid "Checking out"
 msgstr "Переход"
 
-#: gitk:8602
+#: gitk:9777
 msgid "Cannot delete the currently checked-out branch"
 msgstr "Активная ветвь не может быть удалена"
 
-#: gitk:8608
+#: gitk:9783
 #, tcl-format
 msgid ""
 "The commits on branch %s aren't on any other branch.\n"
 "Really delete branch %s?"
 msgstr ""
 "Состояния ветви %s больше не принадлежат никакой другой ветви.\n"
 "Действительно удалить ветвь %s?"
 
-#: gitk:8639
+#: gitk:9814
 #, tcl-format
 msgid "Tags and heads: %s"
 msgstr "Метки и ветви: %s"
 
-#: gitk:8654
+#: gitk:9829
 msgid "Filter"
 msgstr "Фильтровать"
 
-#: gitk:8949
+#: gitk:10125
 msgid ""
 "Error reading commit topology information; branch and preceding/following "
 "tag information will be incomplete."
 msgstr ""
-"Ошибка чтения истории проекта; информация о ветвях и состояниях "
-"вокруг меток (до/после) может быть неполной."
+"Ошибка чтения истории проекта; информация о ветвях и состояниях вокруг меток "
+"(до/после) может быть неполной."
 
-#: gitk:9935
+#: gitk:11102
 msgid "Tag"
 msgstr "Метка"
 
-#: gitk:9935
+#: gitk:11106
 msgid "Id"
 msgstr "Id"
 
-#: gitk:9983
+#: gitk:11189
 msgid "Gitk font chooser"
 msgstr "Шрифт Gitk"
 
-#: gitk:10000
+#: gitk:11206
 msgid "B"
 msgstr "Ж"
 
-#: gitk:10003
+#: gitk:11209
 msgid "I"
 msgstr "К"
 
-#: gitk:10098
-msgid "Gitk preferences"
-msgstr "Настройки Gitk"
-
-#: gitk:10100
+#: gitk:11327
 msgid "Commit list display options"
 msgstr "Параметры показа списка состояний"
 
-#: gitk:10103
+#: gitk:11330
 msgid "Maximum graph width (lines)"
 msgstr "Макс. ширина графа (строк)"
 
-#: gitk:10107
-#, tcl-format
+#: gitk:11334
+#, no-tcl-format
 msgid "Maximum graph width (% of pane)"
 msgstr "Макс. ширина графа (% ширины панели)"
 
-#: gitk:10111
+#: gitk:11337
 msgid "Show local changes"
 msgstr "Показывать изменения в рабочем каталоге"
 
-#: gitk:10114
-msgid "Auto-select SHA1"
+#: gitk:11340
+#, fuzzy
+msgid "Auto-select SHA1 (length)"
 msgstr "Выделить SHA1"
 
-#: gitk:10118
+#: gitk:11344
+msgid "Hide remote refs"
+msgstr ""
+
+#: gitk:11348
 msgid "Diff display options"
 msgstr "Параметры показа изменений"
 
-#: gitk:10120
+#: gitk:11350
 msgid "Tab spacing"
 msgstr "Ширина табуляции"
 
-#: gitk:10123
-msgid "Display nearby tags"
+#: gitk:11353
+#, fuzzy
+msgid "Display nearby tags/heads"
 msgstr "Показывать близкие метки"
 
-#: gitk:10126
+#: gitk:11356
+msgid "Maximum # tags/heads to show"
+msgstr ""
+
+#: gitk:11359
 msgid "Limit diffs to listed paths"
 msgstr "Ограничить показ изменений выбранными файлами"
 
-#: gitk:10129
+#: gitk:11362
 msgid "Support per-file encodings"
 msgstr "Поддержка кодировок в отдельных файлах"
 
-#: gitk:10135
+#: gitk:11368 gitk:11515
 msgid "External diff tool"
 msgstr "Программа для показа изменений"
 
-#: gitk:10137
+#: gitk:11369
 msgid "Choose..."
 msgstr "Выберите..."
 
-#: gitk:10142
+#: gitk:11374
+#, fuzzy
+msgid "General options"
+msgstr "Создать патч"
+
+#: gitk:11377
+msgid "Use themed widgets"
+msgstr ""
+
+#: gitk:11379
+msgid "(change requires restart)"
+msgstr ""
+
+#: gitk:11381
+msgid "(currently unavailable)"
+msgstr ""
+
+#: gitk:11392
 msgid "Colors: press to choose"
 msgstr "Цвета: нажмите для выбора"
 
-#: gitk:10145
+#: gitk:11395
+msgid "Interface"
+msgstr ""
+
+#: gitk:11396
+#, fuzzy
+msgid "interface"
+msgstr "Шрифт интерфейса"
+
+#: gitk:11399
 msgid "Background"
 msgstr "Фон"
 
-#: gitk:10146 gitk:10176
+#: gitk:11400 gitk:11430
 msgid "background"
 msgstr "фон"
 
-#: gitk:10149
+#: gitk:11403
 msgid "Foreground"
 msgstr "Передний план"
 
-#: gitk:10150
+#: gitk:11404
 msgid "foreground"
 msgstr "передний план"
 
-#: gitk:10153
+#: gitk:11407
 msgid "Diff: old lines"
 msgstr "Изменения: старый текст"
 
-#: gitk:10154
+#: gitk:11408
 msgid "diff old lines"
 msgstr "старый текст изменения"
 
-#: gitk:10158
+#: gitk:11412
 msgid "Diff: new lines"
 msgstr "Изменения: новый текст"
 
-#: gitk:10159
+#: gitk:11413
 msgid "diff new lines"
 msgstr "новый текст изменения"
 
-#: gitk:10163
+#: gitk:11417
 msgid "Diff: hunk header"
 msgstr "Изменения: заголовок блока"
 
-#: gitk:10165
+#: gitk:11419
 msgid "diff hunk header"
 msgstr "заголовок блока изменений"
 
-#: gitk:10169
+#: gitk:11423
 msgid "Marked line bg"
 msgstr "Фон выбранной строки"
 
-#: gitk:10171
+#: gitk:11425
 msgid "marked line background"
 msgstr "фон выбранной строки"
 
-#: gitk:10175
+#: gitk:11429
 msgid "Select bg"
 msgstr "Выберите фон"
 
-#: gitk:10179
+#: gitk:11438
 msgid "Fonts: press to choose"
 msgstr "Шрифт: нажмите для выбора"
 
-#: gitk:10181
+#: gitk:11440
 msgid "Main font"
 msgstr "Основной шрифт"
 
-#: gitk:10182
+#: gitk:11441
 msgid "Diff display font"
 msgstr "Шрифт показа изменений"
 
-#: gitk:10183
+#: gitk:11442
 msgid "User interface font"
 msgstr "Шрифт интерфейса"
 
-#: gitk:10210
+#: gitk:11464
+msgid "Gitk preferences"
+msgstr "Настройки Gitk"
+
+#: gitk:11473
+#, fuzzy
+msgid "General"
+msgstr "Создать"
+
+#: gitk:11474
+msgid "Colors"
+msgstr ""
+
+#: gitk:11475
+msgid "Fonts"
+msgstr ""
+
+#: gitk:11525
 #, tcl-format
 msgid "Gitk: choose color for %s"
 msgstr "Gitk: выберите цвет для %s"
 
-#: gitk:10656
-msgid ""
-"Sorry, gitk cannot run with this version of Tcl/Tk.\n"
-" Gitk requires at least Tcl/Tk 8.4."
-msgstr ""
-"К сожалению gitk не может работать с этой версий Tcl/Tk.\n"
-"Требуется как минимум Tcl/Tk 8.4."
-
-#: gitk:10773
+#: gitk:12242
 msgid "Cannot find a git repository here."
 msgstr "Git-репозитарий не найден в текущем каталоге."
 
-#: gitk:10777
-#, tcl-format
-msgid "Cannot find the git directory \"%s\"."
-msgstr "Git-репозитарий \"%s\" не найден."
-
-#: gitk:10824
+#: gitk:12289
 #, tcl-format
 msgid "Ambiguous argument '%s': both revision and filename"
 msgstr "Неоднозначный аргумент '%s': существует как версия и имя файла"
 
-#: gitk:10836
+#: gitk:12301
 msgid "Bad arguments to gitk:"
 msgstr "Неправильные аргументы для gitk:"
 
-#: gitk:10896
+#: gitk:12405
 msgid "Command line"
 msgstr "Командная строка"
 
+#~ msgid "SHA1 ID: "
+#~ msgstr "SHA1:"
+
+#~ msgid "next"
+#~ msgstr "След."
+
+#~ msgid "prev"
+#~ msgstr "Пред."
+
+#~ msgid "Use all refs"
+#~ msgstr "Использовать все ветви"
+
+#~ msgid "Max count:"
+#~ msgstr "Макс. количество:"
+
+#~ msgid "Skip:"
+#~ msgstr "Пропустить:"
+
+#~ msgid "Name"
+#~ msgstr "Имя"
+
+#~ msgid "CDate"
+#~ msgstr "Дата ввода"
+
+#~ msgid "Tag/Head %s is not known"
+#~ msgstr "Метка или ветвь %s не найдена"
+
+#~ msgid ""
+#~ "Sorry, gitk cannot run with this version of Tcl/Tk.\n"
+#~ " Gitk requires at least Tcl/Tk 8.4."
+#~ msgstr ""
+#~ "К сожалению gitk не может работать с этой версий Tcl/Tk.\n"
+#~ "Требуется как минимум Tcl/Tk 8.4."
+
+#~ msgid "Cannot find the git directory \"%s\"."
+#~ msgstr "Git-репозитарий \"%s\" не найден."
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/sv.msg /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/sv.msg
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/sv.msg	2017-10-10 12:31:59.134631527 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/sv.msg	2017-10-10 13:04:28.186560095 +0800
@@ -1,7 +1,7 @@
-set ::msgcat::header "Project-Id-Version: sv\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2013-05-16 08:06+0100\nPO-Revision-Date: 2013-05-16 08:12+0100\nLast-Translator: Peter Krefting <peter@softwolves.pp.se>\nLanguage-Team: Swedish <tp-sv@listor.tp-sv.se>\nLanguage: sv\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"
+set ::msgcat::header "Project-Id-Version: sv\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2015-03-15 14:37+1100\nPO-Revision-Date: 2013-05-16 08:12+0100\nLast-Translator: Peter Krefting <peter@softwolves.pp.se>\nLanguage-Team: Swedish <tp-sv@listor.tp-sv.se>\nLanguage: sv\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"
 ::msgcat::mcset sv "Couldn't get list of unmerged files:" "Kunde inte h\u00e4mta lista \u00f6ver ej sammanslagna filer:"
 ::msgcat::mcset sv "Color words" "F\u00e4rga ord"
 ::msgcat::mcset sv "Markup words" "M\u00e4rk upp ord"
 ::msgcat::mcset sv "Error parsing revisions:" "Fel vid tolkning av revisioner:"
 ::msgcat::mcset sv "Error executing --argscmd command:" "Fel vid k\u00f6rning av --argscmd-kommando:"
 ::msgcat::mcset sv "No files selected: --merge specified but no files are unmerged." "Inga filer valdes: --merge angavs men det finns inga filer som inte har slagits samman."
@@ -32,14 +32,12 @@
 ::msgcat::mcset sv "About gitk" "Om gitk"
 ::msgcat::mcset sv "Key bindings" "Tangentbordsbindningar"
 ::msgcat::mcset sv "Help" "Hj\u00e4lp"
 ::msgcat::mcset sv "SHA1 ID:" "SHA1-id:"
 ::msgcat::mcset sv "Row" "Rad"
 ::msgcat::mcset sv "Find" "S\u00f6k"
-::msgcat::mcset sv "next" "n\u00e4sta"
-::msgcat::mcset sv "prev" "f\u00f6reg"
 ::msgcat::mcset sv "commit" "incheckning"
 ::msgcat::mcset sv "containing:" "som inneh\u00e5ller:"
 ::msgcat::mcset sv "touching paths:" "som r\u00f6r s\u00f6kv\u00e4g:"
 ::msgcat::mcset sv "adding/removing string:" "som l\u00e4gger/till tar bort str\u00e4ng:"
 ::msgcat::mcset sv "changing lines matching:" "\u00e4ndrar rader som matchar:"
 ::msgcat::mcset sv "Exact" "Exakt"
@@ -79,13 +77,12 @@
 ::msgcat::mcset sv "Highlight this too" "Markera \u00e4ven detta"
 ::msgcat::mcset sv "Highlight this only" "Markera bara detta"
 ::msgcat::mcset sv "External diff" "Extern diff"
 ::msgcat::mcset sv "Blame parent commit" "Klandra f\u00f6r\u00e4ldraincheckning"
 ::msgcat::mcset sv "Show origin of this line" "Visa ursprunget f\u00f6r den h\u00e4r raden"
 ::msgcat::mcset sv "Run git gui blame on this line" "K\u00f6r git gui blame p\u00e5 den h\u00e4r raden"
-::msgcat::mcset sv "\nGitk - a commit viewer for git\n\nCopyright \u00a99 2005-2011 Paul Mackerras\n\nUse and redistribute under the terms of the GNU General Public License" "\nGitk - en incheckningsvisare f\u00f6r git\n\nCopyright \u00a99 2005-2011 Paul Mackerras\n\nAnv\u00e4nd och vidaref\u00f6rmedla enligt villkoren i GNU General Public License"
 ::msgcat::mcset sv "Close" "St\u00e4ng"
 ::msgcat::mcset sv "Gitk key bindings" "Tangentbordsbindningar f\u00f6r Gitk"
 ::msgcat::mcset sv "Gitk key bindings:" "Tangentbordsbindningar f\u00f6r Gitk:"
 ::msgcat::mcset sv "<%s-Q>\u0009\u0009Quit" "<%s-Q>\u0009\u0009Avsluta"
 ::msgcat::mcset sv "<%s-W>\u0009\u0009Close window" "<%s-W>\u0009\u0009St\u00e4ng f\u00f6nster"
 ::msgcat::mcset sv "<Home>\u0009\u0009Move to first commit" "<Home>\u0009\u0009G\u00e5 till f\u00f6rsta incheckning"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/sv.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/sv.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/sv.po	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/sv.po	2015-05-01 03:12:02.000000000 +0800
@@ -6,1350 +6,1359 @@
 # Peter Krefting <peter@softwolves.pp.se>, 2008, 2009, 2010, 2012, 2013.
 #
 msgid ""
 msgstr ""
 "Project-Id-Version: sv\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2013-05-16 08:06+0100\n"
+"POT-Creation-Date: 2015-03-15 14:37+1100\n"
 "PO-Revision-Date: 2013-05-16 08:12+0100\n"
 "Last-Translator: Peter Krefting <peter@softwolves.pp.se>\n"
 "Language-Team: Swedish <tp-sv@listor.tp-sv.se>\n"
 "Language: sv\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
 
 #: gitk:140
 msgid "Couldn't get list of unmerged files:"
 msgstr "Kunde inte hämta lista över ej sammanslagna filer:"
 
-#: gitk:210 gitk:2334
+#: gitk:212 gitk:2381
 msgid "Color words"
 msgstr "Färga ord"
 
-#: gitk:215 gitk:2334 gitk:7977 gitk:8010
+#: gitk:217 gitk:2381 gitk:8201 gitk:8234
 msgid "Markup words"
 msgstr "Märk upp ord"
 
-#: gitk:312
+#: gitk:324
 msgid "Error parsing revisions:"
 msgstr "Fel vid tolkning av revisioner:"
 
-#: gitk:368
+#: gitk:380
 msgid "Error executing --argscmd command:"
 msgstr "Fel vid körning av --argscmd-kommando:"
 
-#: gitk:381
+#: gitk:393
 msgid "No files selected: --merge specified but no files are unmerged."
 msgstr ""
 "Inga filer valdes: --merge angavs men det finns inga filer som inte har "
 "slagits samman."
 
-#: gitk:384
+#: gitk:396
 msgid ""
 "No files selected: --merge specified but no unmerged files are within file "
 "limit."
 msgstr ""
 "Inga filer valdes: --merge angavs men det finns inga filer inom "
 "filbegränsningen."
 
-#: gitk:406 gitk:554
+#: gitk:418 gitk:566
 msgid "Error executing git log:"
 msgstr "Fel vid körning av git log:"
 
-#: gitk:424 gitk:570
+#: gitk:436 gitk:582
 msgid "Reading"
 msgstr "Läser"
 
-#: gitk:484 gitk:4409
+#: gitk:496 gitk:4508
 msgid "Reading commits..."
 msgstr "Läser incheckningar..."
 
-#: gitk:487 gitk:1625 gitk:4412
+#: gitk:499 gitk:1637 gitk:4511
 msgid "No commits selected"
 msgstr "Inga incheckningar markerade"
 
-#: gitk:1499
+#: gitk:1511
 msgid "Can't parse git log output:"
 msgstr "Kan inte tolka utdata från git log:"
 
-#: gitk:1719
+#: gitk:1740
 msgid "No commit information available"
 msgstr "Ingen incheckningsinformation är tillgänglig"
 
-#: gitk:1876
+#: gitk:1897
 msgid "mc"
 msgstr "mc"
 
-#: gitk:1911 gitk:4202 gitk:9437 gitk:10979 gitk:11258
+#: gitk:1932 gitk:4298 gitk:9650 gitk:11220 gitk:11500
 msgid "OK"
 msgstr "OK"
 
-#: gitk:1913 gitk:4204 gitk:8964 gitk:9043 gitk:9159 gitk:9208 gitk:9439
-#: gitk:10980 gitk:11259
+#: gitk:1934 gitk:4300 gitk:9177 gitk:9256 gitk:9372 gitk:9421 gitk:9652
+#: gitk:11221 gitk:11501
 msgid "Cancel"
 msgstr "Avbryt"
 
-#: gitk:2048
+#: gitk:2069
 msgid "Update"
 msgstr "Uppdatera"
 
-#: gitk:2049
+#: gitk:2070
 msgid "Reload"
 msgstr "Ladda om"
 
-#: gitk:2050
+#: gitk:2071
 msgid "Reread references"
 msgstr "Läs om referenser"
 
-#: gitk:2051
+#: gitk:2072
 msgid "List references"
 msgstr "Visa referenser"
 
-#: gitk:2053
+#: gitk:2074
 msgid "Start git gui"
 msgstr "Starta git gui"
 
-#: gitk:2055
+#: gitk:2076
 msgid "Quit"
 msgstr "Avsluta"
 
-#: gitk:2047
+#: gitk:2068
 msgid "File"
 msgstr "Arkiv"
 
-#: gitk:2059
+#: gitk:2080
 msgid "Preferences"
 msgstr "Inställningar"
 
-#: gitk:2058
+#: gitk:2079
 msgid "Edit"
 msgstr "Redigera"
 
-#: gitk:2063
+#: gitk:2084
 msgid "New view..."
 msgstr "Ny vy..."
 
-#: gitk:2064
+#: gitk:2085
 msgid "Edit view..."
 msgstr "Ändra vy..."
 
-#: gitk:2065
+#: gitk:2086
 msgid "Delete view"
 msgstr "Ta bort vy"
 
-#: gitk:2067
+#: gitk:2088
 msgid "All files"
 msgstr "Alla filer"
 
-#: gitk:2062 gitk:3955
+#: gitk:2083 gitk:4050
 msgid "View"
 msgstr "Visa"
 
-#: gitk:2072 gitk:2082 gitk:2925
+#: gitk:2093 gitk:2103 gitk:3009
 msgid "About gitk"
 msgstr "Om gitk"
 
-#: gitk:2073 gitk:2087
+#: gitk:2094 gitk:2108
 msgid "Key bindings"
 msgstr "Tangentbordsbindningar"
 
-#: gitk:2071 gitk:2086
+#: gitk:2092 gitk:2107
 msgid "Help"
 msgstr "Hjälp"
 
-#: gitk:2164 gitk:8420
+#: gitk:2185 gitk:8633
 msgid "SHA1 ID:"
 msgstr "SHA1-id:"
 
-#: gitk:2208
+#: gitk:2229
 msgid "Row"
 msgstr "Rad"
 
-#: gitk:2246
+#: gitk:2267
 msgid "Find"
 msgstr "Sök"
 
-#: gitk:2247
-msgid "next"
-msgstr "nästa"
-
-#: gitk:2248
-msgid "prev"
-msgstr "föreg"
-
-#: gitk:2249
+#: gitk:2295
 msgid "commit"
 msgstr "incheckning"
 
-#: gitk:2252 gitk:2254 gitk:4570 gitk:4593 gitk:4617 gitk:6592 gitk:6664
-#: gitk:6749
+#: gitk:2299 gitk:2301 gitk:4669 gitk:4692 gitk:4716 gitk:6736 gitk:6808
+#: gitk:6893
 msgid "containing:"
 msgstr "som innehåller:"
 
-#: gitk:2255 gitk:3437 gitk:3442 gitk:4646
+#: gitk:2302 gitk:3522 gitk:3527 gitk:4745
 msgid "touching paths:"
 msgstr "som rör sökväg:"
 
-#: gitk:2256 gitk:4660
+#: gitk:2303 gitk:4759
 msgid "adding/removing string:"
 msgstr "som lägger/till tar bort sträng:"
 
-#: gitk:2257 gitk:4662
+#: gitk:2304 gitk:4761
 msgid "changing lines matching:"
 msgstr "ändrar rader som matchar:"
 
-#: gitk:2266 gitk:2268 gitk:4649
+#: gitk:2313 gitk:2315 gitk:4748
 msgid "Exact"
 msgstr "Exakt"
 
-#: gitk:2268 gitk:4737 gitk:6560
+#: gitk:2315 gitk:4836 gitk:6704
 msgid "IgnCase"
 msgstr "IgnVersaler"
 
-#: gitk:2268 gitk:4619 gitk:4735 gitk:6556
+#: gitk:2315 gitk:4718 gitk:4834 gitk:6700
 msgid "Regexp"
 msgstr "Reg.uttr."
 
-#: gitk:2270 gitk:2271 gitk:4757 gitk:4787 gitk:4794 gitk:6685 gitk:6753
+#: gitk:2317 gitk:2318 gitk:4856 gitk:4886 gitk:4893 gitk:6829 gitk:6897
 msgid "All fields"
 msgstr "Alla fält"
 
-#: gitk:2271 gitk:4754 gitk:4787 gitk:6623
+#: gitk:2318 gitk:4853 gitk:4886 gitk:6767
 msgid "Headline"
 msgstr "Rubrik"
 
-#: gitk:2272 gitk:4754 gitk:6623 gitk:6753 gitk:7221
+#: gitk:2319 gitk:4853 gitk:6767 gitk:6897 gitk:7370
 msgid "Comments"
 msgstr "Kommentarer"
 
-#: gitk:2272 gitk:4754 gitk:4759 gitk:4794 gitk:6623 gitk:7156 gitk:8598
-#: gitk:8613
+#: gitk:2319 gitk:4853 gitk:4858 gitk:4893 gitk:6767 gitk:7305 gitk:8811
+#: gitk:8826
 msgid "Author"
 msgstr "Författare"
 
-#: gitk:2272 gitk:4754 gitk:6623 gitk:7158
+#: gitk:2319 gitk:4853 gitk:6767 gitk:7307
 msgid "Committer"
 msgstr "Incheckare"
 
-#: gitk:2303
+#: gitk:2350
 msgid "Search"
 msgstr "Sök"
 
-#: gitk:2311
+#: gitk:2358
 msgid "Diff"
 msgstr "Diff"
 
-#: gitk:2313
+#: gitk:2360
 msgid "Old version"
 msgstr "Gammal version"
 
-#: gitk:2315
+#: gitk:2362
 msgid "New version"
 msgstr "Ny version"
 
-#: gitk:2317
+#: gitk:2364
 msgid "Lines of context"
 msgstr "Rader sammanhang"
 
-#: gitk:2327
+#: gitk:2374
 msgid "Ignore space change"
 msgstr "Ignorera ändringar i blanksteg"
 
-#: gitk:2331 gitk:2333 gitk:7735 gitk:7963
+#: gitk:2378 gitk:2380 gitk:7940 gitk:8187
 msgid "Line diff"
 msgstr "Rad-diff"
 
-#: gitk:2397
+#: gitk:2445
 msgid "Patch"
 msgstr "Patch"
 
-#: gitk:2399
+#: gitk:2447
 msgid "Tree"
 msgstr "Träd"
 
-#: gitk:2557 gitk:2577
+#: gitk:2616 gitk:2636
 msgid "Diff this -> selected"
 msgstr "Diff denna -> markerad"
 
-#: gitk:2558 gitk:2578
+#: gitk:2617 gitk:2637
 msgid "Diff selected -> this"
 msgstr "Diff markerad -> denna"
 
-#: gitk:2559 gitk:2579
+#: gitk:2618 gitk:2638
 msgid "Make patch"
 msgstr "Skapa patch"
 
-#: gitk:2560 gitk:9022
+#: gitk:2619 gitk:9235
 msgid "Create tag"
 msgstr "Skapa tagg"
 
-#: gitk:2561 gitk:9139
+#: gitk:2620 gitk:9352
 msgid "Write commit to file"
 msgstr "Skriv incheckning till fil"
 
-#: gitk:2562 gitk:9196
+#: gitk:2621 gitk:9409
 msgid "Create new branch"
 msgstr "Skapa ny gren"
 
-#: gitk:2563
+#: gitk:2622
 msgid "Cherry-pick this commit"
 msgstr "Plocka denna incheckning"
 
-#: gitk:2564
+#: gitk:2623
 msgid "Reset HEAD branch to here"
 msgstr "Återställ HEAD-grenen hit"
 
-#: gitk:2565
+#: gitk:2624
 msgid "Mark this commit"
 msgstr "Markera denna incheckning"
 
-#: gitk:2566
+#: gitk:2625
 msgid "Return to mark"
 msgstr "Återgå till markering"
 
-#: gitk:2567
+#: gitk:2626
 msgid "Find descendant of this and mark"
 msgstr "Hitta efterföljare till denna och markera"
 
-#: gitk:2568
+#: gitk:2627
 msgid "Compare with marked commit"
 msgstr "Jämför med markerad incheckning"
 
-#: gitk:2569 gitk:2580
+#: gitk:2628 gitk:2639
 msgid "Diff this -> marked commit"
 msgstr "Diff denna -> markerad incheckning"
 
-#: gitk:2570 gitk:2581
+#: gitk:2629 gitk:2640
 msgid "Diff marked commit -> this"
 msgstr "Diff markerad incheckning -> denna"
 
-#: gitk:2571
+#: gitk:2630
 msgid "Revert this commit"
 msgstr "Ångra denna incheckning"
 
-#: gitk:2587
+#: gitk:2646
 msgid "Check out this branch"
 msgstr "Checka ut denna gren"
 
-#: gitk:2588
+#: gitk:2647
 msgid "Remove this branch"
 msgstr "Ta bort denna gren"
 
-#: gitk:2595
+#: gitk:2654
 msgid "Highlight this too"
 msgstr "Markera även detta"
 
-#: gitk:2596
+#: gitk:2655
 msgid "Highlight this only"
 msgstr "Markera bara detta"
 
-#: gitk:2597
+#: gitk:2656
 msgid "External diff"
 msgstr "Extern diff"
 
-#: gitk:2598
+#: gitk:2657
 msgid "Blame parent commit"
 msgstr "Klandra föräldraincheckning"
 
-#: gitk:2605
+#: gitk:2664
 msgid "Show origin of this line"
 msgstr "Visa ursprunget för den här raden"
 
-#: gitk:2606
+#: gitk:2665
 msgid "Run git gui blame on this line"
 msgstr "Kör git gui blame på den här raden"
 
-#: gitk:2927
+#: gitk:3011
+#, fuzzy
 msgid ""
 "\n"
 "Gitk - a commit viewer for git\n"
 "\n"
-"Copyright ©9 2005-2011 Paul Mackerras\n"
+"Copyright © 2005-2014 Paul Mackerras\n"
 "\n"
 "Use and redistribute under the terms of the GNU General Public License"
 msgstr ""
 "\n"
 "Gitk - en incheckningsvisare för git\n"
 "\n"
 "Copyright ©9 2005-2011 Paul Mackerras\n"
 "\n"
 "Använd och vidareförmedla enligt villkoren i GNU General Public License"
 
-#: gitk:2935 gitk:3000 gitk:9623
+#: gitk:3019 gitk:3085 gitk:9836
 msgid "Close"
 msgstr "Stäng"
 
-#: gitk:2956
+#: gitk:3040
 msgid "Gitk key bindings"
 msgstr "Tangentbordsbindningar för Gitk"
 
-#: gitk:2959
+#: gitk:3043
 msgid "Gitk key bindings:"
 msgstr "Tangentbordsbindningar för Gitk:"
 
-#: gitk:2961
+#: gitk:3045
 #, tcl-format
 msgid "<%s-Q>\t\tQuit"
 msgstr "<%s-Q>\t\tAvsluta"
 
-#: gitk:2962
+#: gitk:3046
 #, tcl-format
 msgid "<%s-W>\t\tClose window"
 msgstr "<%s-W>\t\tStäng fönster"
 
-#: gitk:2963
+#: gitk:3047
 msgid "<Home>\t\tMove to first commit"
 msgstr "<Home>\t\tGå till första incheckning"
 
-#: gitk:2964
+#: gitk:3048
 msgid "<End>\t\tMove to last commit"
 msgstr "<End>\t\tGå till sista incheckning"
 
-#: gitk:2965
+#: gitk:3049
 msgid "<Up>, p, k\tMove up one commit"
 msgstr "<Upp>, p, k\tGå en incheckning upp"
 
-#: gitk:2966
+#: gitk:3050
 msgid "<Down>, n, j\tMove down one commit"
 msgstr "<Ned>, n, j\tGå en incheckning ned"
 
-#: gitk:2967
+#: gitk:3051
 msgid "<Left>, z, h\tGo back in history list"
 msgstr "<Vänster>, z, h\tGå bakåt i historiken"
 
-#: gitk:2968
+#: gitk:3052
 msgid "<Right>, x, l\tGo forward in history list"
 msgstr "<Höger>, x, l\tGå framåt i historiken"
 
-#: gitk:2969
+#: gitk:3053
+#, tcl-format
+msgid "<%s-n>\tGo to n-th parent of current commit in history list"
+msgstr ""
+
+#: gitk:3054
 msgid "<PageUp>\tMove up one page in commit list"
 msgstr "<PageUp>\tGå upp en sida i incheckningslistan"
 
-#: gitk:2970
+#: gitk:3055
 msgid "<PageDown>\tMove down one page in commit list"
 msgstr "<PageDown>\tGå ned en sida i incheckningslistan"
 
-#: gitk:2971
+#: gitk:3056
 #, tcl-format
 msgid "<%s-Home>\tScroll to top of commit list"
 msgstr "<%s-Home>\tRulla till början av incheckningslistan"
 
-#: gitk:2972
+#: gitk:3057
 #, tcl-format
 msgid "<%s-End>\tScroll to bottom of commit list"
 msgstr "<%s-End>\tRulla till slutet av incheckningslistan"
 
-#: gitk:2973
+#: gitk:3058
 #, tcl-format
 msgid "<%s-Up>\tScroll commit list up one line"
 msgstr "<%s-Upp>\tRulla incheckningslistan upp ett steg"
 
-#: gitk:2974
+#: gitk:3059
 #, tcl-format
 msgid "<%s-Down>\tScroll commit list down one line"
 msgstr "<%s-Ned>\tRulla incheckningslistan ned ett steg"
 
-#: gitk:2975
+#: gitk:3060
 #, tcl-format
 msgid "<%s-PageUp>\tScroll commit list up one page"
 msgstr "<%s-PageUp>\tRulla incheckningslistan upp en sida"
 
-#: gitk:2976
+#: gitk:3061
 #, tcl-format
 msgid "<%s-PageDown>\tScroll commit list down one page"
 msgstr "<%s-PageDown>\tRulla incheckningslistan ned en sida"
 
-#: gitk:2977
+#: gitk:3062
 msgid "<Shift-Up>\tFind backwards (upwards, later commits)"
 msgstr "<Skift-Upp>\tSök bakåt (uppåt, senare incheckningar)"
 
-#: gitk:2978
+#: gitk:3063
 msgid "<Shift-Down>\tFind forwards (downwards, earlier commits)"
 msgstr "<Skift-Ned>\tSök framåt (nedåt, tidigare incheckningar)"
 
-#: gitk:2979
+#: gitk:3064
 msgid "<Delete>, b\tScroll diff view up one page"
 msgstr "<Delete>, b\tRulla diffvisningen upp en sida"
 
-#: gitk:2980
+#: gitk:3065
 msgid "<Backspace>\tScroll diff view up one page"
 msgstr "<Baksteg>\tRulla diffvisningen upp en sida"
 
-#: gitk:2981
+#: gitk:3066
 msgid "<Space>\t\tScroll diff view down one page"
 msgstr "<Blanksteg>\tRulla diffvisningen ned en sida"
 
-#: gitk:2982
+#: gitk:3067
 msgid "u\t\tScroll diff view up 18 lines"
 msgstr "u\t\tRulla diffvisningen upp 18 rader"
 
-#: gitk:2983
+#: gitk:3068
 msgid "d\t\tScroll diff view down 18 lines"
 msgstr "d\t\tRulla diffvisningen ned 18 rader"
 
-#: gitk:2984
+#: gitk:3069
 #, tcl-format
 msgid "<%s-F>\t\tFind"
 msgstr "<%s-F>\t\tSök"
 
-#: gitk:2985
+#: gitk:3070
 #, tcl-format
 msgid "<%s-G>\t\tMove to next find hit"
 msgstr "<%s-G>\t\tGå till nästa sökträff"
 
-#: gitk:2986
+#: gitk:3071
 msgid "<Return>\tMove to next find hit"
 msgstr "<Return>\t\tGå till nästa sökträff"
 
-#: gitk:2987
+#: gitk:3072
 msgid "/\t\tFocus the search box"
 msgstr "/\t\tFokusera sökrutan"
 
-#: gitk:2988
+#: gitk:3073
 msgid "?\t\tMove to previous find hit"
 msgstr "?\t\tGå till föregående sökträff"
 
-#: gitk:2989
+#: gitk:3074
 msgid "f\t\tScroll diff view to next file"
 msgstr "f\t\tRulla diffvisningen till nästa fil"
 
-#: gitk:2990
+#: gitk:3075
 #, tcl-format
 msgid "<%s-S>\t\tSearch for next hit in diff view"
 msgstr "<%s-S>\t\tGå till nästa sökträff i diffvisningen"
 
-#: gitk:2991
+#: gitk:3076
 #, tcl-format
 msgid "<%s-R>\t\tSearch for previous hit in diff view"
 msgstr "<%s-R>\t\tGå till föregående sökträff i diffvisningen"
 
-#: gitk:2992
+#: gitk:3077
 #, tcl-format
 msgid "<%s-KP+>\tIncrease font size"
 msgstr "<%s-Num+>\tÖka teckenstorlek"
 
-#: gitk:2993
+#: gitk:3078
 #, tcl-format
 msgid "<%s-plus>\tIncrease font size"
 msgstr "<%s-plus>\tÖka teckenstorlek"
 
-#: gitk:2994
+#: gitk:3079
 #, tcl-format
 msgid "<%s-KP->\tDecrease font size"
 msgstr "<%s-Num->\tMinska teckenstorlek"
 
-#: gitk:2995
+#: gitk:3080
 #, tcl-format
 msgid "<%s-minus>\tDecrease font size"
 msgstr "<%s-minus>\tMinska teckenstorlek"
 
-#: gitk:2996
+#: gitk:3081
 msgid "<F5>\t\tUpdate"
 msgstr "<F5>\t\tUppdatera"
 
-#: gitk:3451 gitk:3460
+#: gitk:3546 gitk:3555
 #, tcl-format
 msgid "Error creating temporary directory %s:"
 msgstr "Fel vid skapande av temporär katalog %s:"
 
-#: gitk:3473
+#: gitk:3568
 #, tcl-format
 msgid "Error getting \"%s\" from %s:"
 msgstr "Fel vid hämtning av  \"%s\" från %s:"
 
-#: gitk:3536
+#: gitk:3631
 msgid "command failed:"
 msgstr "kommando misslyckades:"
 
-#: gitk:3685
+#: gitk:3780
 msgid "No such commit"
 msgstr "Incheckning saknas"
 
-#: gitk:3699
+#: gitk:3794
 msgid "git gui blame: command failed:"
 msgstr "git gui blame: kommando misslyckades:"
 
-#: gitk:3730
+#: gitk:3825
 #, tcl-format
 msgid "Couldn't read merge head: %s"
 msgstr "Kunde inte läsa sammanslagningshuvud: %s"
 
-#: gitk:3738
+#: gitk:3833
 #, tcl-format
 msgid "Error reading index: %s"
 msgstr "Fel vid läsning av index: %s"
 
-#: gitk:3763
+#: gitk:3858
 #, tcl-format
 msgid "Couldn't start git blame: %s"
 msgstr "Kunde inte starta git blame: %s"
 
-#: gitk:3766 gitk:6591
+#: gitk:3861 gitk:6735
 msgid "Searching"
 msgstr "Söker"
 
-#: gitk:3798
+#: gitk:3893
 #, tcl-format
 msgid "Error running git blame: %s"
 msgstr "Fel vid körning av git blame: %s"
 
-#: gitk:3826
+#: gitk:3921
 #, tcl-format
 msgid "That line comes from commit %s,  which is not in this view"
 msgstr "Raden kommer från incheckningen %s, som inte finns i denna vy"
 
-#: gitk:3840
+#: gitk:3935
 msgid "External diff viewer failed:"
 msgstr "Externt diff-verktyg misslyckades:"
 
-#: gitk:3958
+#: gitk:4053
 msgid "Gitk view definition"
 msgstr "Definition av Gitk-vy"
 
-#: gitk:3962
+#: gitk:4057
 msgid "Remember this view"
 msgstr "Spara denna vy"
 
-#: gitk:3963
+#: gitk:4058
 msgid "References (space separated list):"
 msgstr "Referenser (blankstegsavdelad lista):"
 
-#: gitk:3964
+#: gitk:4059
 msgid "Branches & tags:"
 msgstr "Grenar & taggar:"
 
-#: gitk:3965
+#: gitk:4060
 msgid "All refs"
 msgstr "Alla referenser"
 
-#: gitk:3966
+#: gitk:4061
 msgid "All (local) branches"
 msgstr "Alla (lokala) grenar"
 
-#: gitk:3967
+#: gitk:4062
 msgid "All tags"
 msgstr "Alla taggar"
 
-#: gitk:3968
+#: gitk:4063
 msgid "All remote-tracking branches"
 msgstr "Alla fjärrspårande grenar"
 
-#: gitk:3969
+#: gitk:4064
 msgid "Commit Info (regular expressions):"
 msgstr "Incheckningsinfo (reguljära uttryck):"
 
-#: gitk:3970
+#: gitk:4065
 msgid "Author:"
 msgstr "Författare:"
 
-#: gitk:3971
+#: gitk:4066
 msgid "Committer:"
 msgstr "Incheckare:"
 
-#: gitk:3972
+#: gitk:4067
 msgid "Commit Message:"
 msgstr "Incheckningsmeddelande:"
 
-#: gitk:3973
+#: gitk:4068
 msgid "Matches all Commit Info criteria"
 msgstr "Motsvarar alla kriterier för incheckningsinfo"
 
-#: gitk:3974
+#: gitk:4069
+#, fuzzy
+msgid "Matches none Commit Info criteria"
+msgstr "Motsvarar alla kriterier för incheckningsinfo"
+
+#: gitk:4070
 msgid "Changes to Files:"
 msgstr "Ändringar av filer:"
 
-#: gitk:3975
+#: gitk:4071
 msgid "Fixed String"
 msgstr "Fast sträng"
 
-#: gitk:3976
+#: gitk:4072
 msgid "Regular Expression"
 msgstr "Reguljärt uttryck"
 
-#: gitk:3977
+#: gitk:4073
 msgid "Search string:"
 msgstr "Söksträng:"
 
-#: gitk:3978
+#: gitk:4074
 msgid ""
 "Commit Dates (\"2 weeks ago\", \"2009-03-17 15:27:38\", \"March 17, 2009 "
 "15:27:38\"):"
 msgstr ""
 "Incheckingsdatum (\"2 weeks ago\", \"2009-03-17 15:27:38\", \"March 17, 2009 "
 "15:27:38\"):"
 
-#: gitk:3979
+#: gitk:4075
 msgid "Since:"
 msgstr "Från:"
 
-#: gitk:3980
+#: gitk:4076
 msgid "Until:"
 msgstr "Till:"
 
-#: gitk:3981
+#: gitk:4077
 msgid "Limit and/or skip a number of revisions (positive integer):"
 msgstr "Begränsa och/eller hoppa över ett antal revisioner (positivt heltal):"
 
-#: gitk:3982
+#: gitk:4078
 msgid "Number to show:"
 msgstr "Antal att visa:"
 
-#: gitk:3983
+#: gitk:4079
 msgid "Number to skip:"
 msgstr "Antal att hoppa över:"
 
-#: gitk:3984
+#: gitk:4080
 msgid "Miscellaneous options:"
 msgstr "Diverse alternativ:"
 
-#: gitk:3985
+#: gitk:4081
 msgid "Strictly sort by date"
 msgstr "Strikt datumsortering"
 
-#: gitk:3986
+#: gitk:4082
 msgid "Mark branch sides"
 msgstr "Markera sidogrenar"
 
-#: gitk:3987
+#: gitk:4083
 msgid "Limit to first parent"
 msgstr "Begränsa till första förälder"
 
-#: gitk:3988
+#: gitk:4084
 msgid "Simple history"
 msgstr "Enkel historik"
 
-#: gitk:3989
+#: gitk:4085
 msgid "Additional arguments to git log:"
 msgstr "Ytterligare argument till git log:"
 
-#: gitk:3990
+#: gitk:4086
 msgid "Enter files and directories to include, one per line:"
 msgstr "Ange filer och kataloger att ta med, en per rad:"
 
-#: gitk:3991
+#: gitk:4087
 msgid "Command to generate more commits to include:"
 msgstr "Kommando för att generera fler incheckningar att ta med:"
 
-#: gitk:4115
+#: gitk:4211
 msgid "Gitk: edit view"
 msgstr "Gitk: redigera vy"
 
-#: gitk:4123
+#: gitk:4219
 msgid "-- criteria for selecting revisions"
 msgstr " - kriterier för val av revisioner"
 
-#: gitk:4128
+#: gitk:4224
 msgid "View Name"
 msgstr "Namn på vy"
 
-#: gitk:4203
+#: gitk:4299
 msgid "Apply (F5)"
 msgstr "Använd (F5)"
 
-#: gitk:4241
+#: gitk:4337
 msgid "Error in commit selection arguments:"
 msgstr "Fel i argument för val av incheckningar:"
 
-#: gitk:4294 gitk:4346 gitk:4807 gitk:4821 gitk:6087 gitk:12041 gitk:12042
+#: gitk:4392 gitk:4445 gitk:4906 gitk:4920 gitk:6190 gitk:12346 gitk:12347
 msgid "None"
 msgstr "Inget"
 
-#: gitk:4904 gitk:4909
+#: gitk:5003 gitk:5008
 msgid "Descendant"
 msgstr "Avkomling"
 
-#: gitk:4905
+#: gitk:5004
 msgid "Not descendant"
 msgstr "Inte avkomling"
 
-#: gitk:4912 gitk:4917
+#: gitk:5011 gitk:5016
 msgid "Ancestor"
 msgstr "Förfader"
 
-#: gitk:4913
+#: gitk:5012
 msgid "Not ancestor"
 msgstr "Inte förfader"
 
-#: gitk:5203
+#: gitk:5306
 msgid "Local changes checked in to index but not committed"
 msgstr "Lokala ändringar sparade i indexet men inte incheckade"
 
-#: gitk:5239
+#: gitk:5342
 msgid "Local uncommitted changes, not checked in to index"
 msgstr "Lokala ändringar, ej sparade i indexet"
 
-#: gitk:6971
+#: gitk:7115
 msgid "and many more"
 msgstr "med många flera"
 
-#: gitk:6974
+#: gitk:7118
 msgid "many"
 msgstr "många"
 
-#: gitk:7160
+#: gitk:7309
 msgid "Tags:"
 msgstr "Taggar:"
 
-#: gitk:7177 gitk:7183 gitk:8593
+#: gitk:7326 gitk:7332 gitk:8806
 msgid "Parent"
 msgstr "Förälder"
 
-#: gitk:7188
+#: gitk:7337
 msgid "Child"
 msgstr "Barn"
 
-#: gitk:7197
+#: gitk:7346
 msgid "Branch"
 msgstr "Gren"
 
-#: gitk:7200
+#: gitk:7349
 msgid "Follows"
 msgstr "Följer"
 
-#: gitk:7203
+#: gitk:7352
 msgid "Precedes"
 msgstr "Föregår"
 
-#: gitk:7742
+#: gitk:7947
 #, tcl-format
 msgid "Error getting diffs: %s"
 msgstr "Fel vid hämtning av diff: %s"
 
-#: gitk:8418
+#: gitk:8631
 msgid "Goto:"
 msgstr "Gå till:"
 
-#: gitk:8439
+#: gitk:8652
 #, tcl-format
 msgid "Short SHA1 id %s is ambiguous"
 msgstr "Förkortat SHA1-id %s är tvetydigt"
 
-#: gitk:8446
+#: gitk:8659
 #, tcl-format
 msgid "Revision %s is not known"
 msgstr "Revisionen %s är inte känd"
 
-#: gitk:8456
+#: gitk:8669
 #, tcl-format
 msgid "SHA1 id %s is not known"
 msgstr "SHA-id:t %s är inte känt"
 
-#: gitk:8458
+#: gitk:8671
 #, tcl-format
 msgid "Revision %s is not in the current view"
 msgstr "Revisionen %s finns inte i den nuvarande vyn"
 
-#: gitk:8600 gitk:8615
+#: gitk:8813 gitk:8828
 msgid "Date"
 msgstr "Datum"
 
-#: gitk:8603
+#: gitk:8816
 msgid "Children"
 msgstr "Barn"
 
-#: gitk:8666
+#: gitk:8879
 #, tcl-format
 msgid "Reset %s branch to here"
 msgstr "Återställ grenen %s hit"
 
-#: gitk:8668
+#: gitk:8881
 msgid "Detached head: can't reset"
 msgstr "Frånkopplad head: kan inte återställa"
 
-#: gitk:8773 gitk:8779
+#: gitk:8986 gitk:8992
 msgid "Skipping merge commit "
 msgstr "Hoppar över sammanslagningsincheckning "
 
-#: gitk:8788 gitk:8793
+#: gitk:9001 gitk:9006
 msgid "Error getting patch ID for "
 msgstr "Fel vid hämtning av patch-id för "
 
-#: gitk:8789 gitk:8794
+#: gitk:9002 gitk:9007
 msgid " - stopping\n"
 msgstr " - stannar\n"
 
-#: gitk:8799 gitk:8802 gitk:8810 gitk:8824 gitk:8833
+#: gitk:9012 gitk:9015 gitk:9023 gitk:9037 gitk:9046
 msgid "Commit "
 msgstr "Incheckning "
 
-#: gitk:8803
+#: gitk:9016
 msgid ""
 " is the same patch as\n"
 "       "
 msgstr ""
 " är samma patch som\n"
 "       "
 
-#: gitk:8811
+#: gitk:9024
 msgid ""
 " differs from\n"
 "       "
 msgstr ""
 " skiljer sig från\n"
 "       "
 
-#: gitk:8813
+#: gitk:9026
 msgid ""
 "Diff of commits:\n"
 "\n"
 msgstr ""
 "Skillnad mellan incheckningar:\n"
 "\n"
 
-#: gitk:8825 gitk:8834
+#: gitk:9038 gitk:9047
 #, tcl-format
 msgid " has %s children - stopping\n"
 msgstr " har %s barn - stannar\n"
 
-#: gitk:8853
+#: gitk:9066
 #, tcl-format
 msgid "Error writing commit to file: %s"
 msgstr "Fel vid skrivning av incheckning till fil: %s"
 
-#: gitk:8859
+#: gitk:9072
 #, tcl-format
 msgid "Error diffing commits: %s"
 msgstr "Fel vid jämförelse av incheckningar: %s"
 
-#: gitk:8905
+#: gitk:9118
 msgid "Top"
 msgstr "Topp"
 
-#: gitk:8906
+#: gitk:9119
 msgid "From"
 msgstr "Från"
 
-#: gitk:8911
+#: gitk:9124
 msgid "To"
 msgstr "Till"
 
-#: gitk:8935
+#: gitk:9148
 msgid "Generate patch"
 msgstr "Generera patch"
 
-#: gitk:8937
+#: gitk:9150
 msgid "From:"
 msgstr "Från:"
 
-#: gitk:8946
+#: gitk:9159
 msgid "To:"
 msgstr "Till:"
 
-#: gitk:8955
+#: gitk:9168
 msgid "Reverse"
 msgstr "Vänd"
 
-#: gitk:8957 gitk:9153
+#: gitk:9170 gitk:9366
 msgid "Output file:"
 msgstr "Utdatafil:"
 
-#: gitk:8963
+#: gitk:9176
 msgid "Generate"
 msgstr "Generera"
 
-#: gitk:9001
+#: gitk:9214
 msgid "Error creating patch:"
 msgstr "Fel vid generering av patch:"
 
-#: gitk:9024 gitk:9141 gitk:9198
+#: gitk:9237 gitk:9354 gitk:9411
 msgid "ID:"
 msgstr "Id:"
 
-#: gitk:9033
+#: gitk:9246
 msgid "Tag name:"
 msgstr "Taggnamn:"
 
-#: gitk:9036
+#: gitk:9249
 msgid "Tag message is optional"
 msgstr "Taggmeddelandet är valfritt"
 
-#: gitk:9038
+#: gitk:9251
 msgid "Tag message:"
 msgstr "Taggmeddelande:"
 
-#: gitk:9042 gitk:9207
+#: gitk:9255 gitk:9420
 msgid "Create"
 msgstr "Skapa"
 
-#: gitk:9060
+#: gitk:9273
 msgid "No tag name specified"
 msgstr "Inget taggnamn angavs"
 
-#: gitk:9064
+#: gitk:9277
 #, tcl-format
 msgid "Tag \"%s\" already exists"
 msgstr "Taggen \"%s\" finns redan"
 
-#: gitk:9074
+#: gitk:9287
 msgid "Error creating tag:"
 msgstr "Fel vid skapande av tagg:"
 
-#: gitk:9150
+#: gitk:9363
 msgid "Command:"
 msgstr "Kommando:"
 
-#: gitk:9158
+#: gitk:9371
 msgid "Write"
 msgstr "Skriv"
 
-#: gitk:9176
+#: gitk:9389
 msgid "Error writing commit:"
 msgstr "Fel vid skrivning av incheckning:"
 
-#: gitk:9203
+#: gitk:9416
 msgid "Name:"
 msgstr "Namn:"
 
-#: gitk:9226
+#: gitk:9439
 msgid "Please specify a name for the new branch"
 msgstr "Ange ett namn för den nya grenen"
 
-#: gitk:9231
+#: gitk:9444
 #, tcl-format
 msgid "Branch '%s' already exists. Overwrite?"
 msgstr "Grenen \"%s\" finns redan. Skriva över?"
 
-#: gitk:9298
+#: gitk:9511
 #, tcl-format
 msgid "Commit %s is already included in branch %s -- really re-apply it?"
 msgstr ""
 "Incheckningen %s finns redan på grenen %s -- skall den verkligen appliceras "
 "på nytt?"
 
-#: gitk:9303
+#: gitk:9516
 msgid "Cherry-picking"
 msgstr "Plockar"
 
-#: gitk:9312
+#: gitk:9525
 #, tcl-format
 msgid ""
 "Cherry-pick failed because of local changes to file '%s'.\n"
 "Please commit, reset or stash your changes and try again."
 msgstr ""
 "Cherry-pick misslyckades på grund av lokala ändringar i filen \"%s\".\n"
 "Checka in, återställ eller spara undan (stash) dina ändringar och försök "
 "igen."
 
-#: gitk:9318
+#: gitk:9531
 msgid ""
 "Cherry-pick failed because of merge conflict.\n"
 "Do you wish to run git citool to resolve it?"
 msgstr ""
 "Cherry-pick misslyckades på grund av en sammanslagningskonflikt.\n"
 "Vill du köra git citool för att lösa den?"
 
-#: gitk:9334 gitk:9392
+#: gitk:9547 gitk:9605
 msgid "No changes committed"
 msgstr "Inga ändringar incheckade"
 
-#: gitk:9361
+#: gitk:9574
 #, tcl-format
 msgid "Commit %s is not included in branch %s -- really revert it?"
 msgstr "Incheckningen %s finns inte på grenen %s -- vill du verkligen ångra?"
 
-#: gitk:9366
+#: gitk:9579
 msgid "Reverting"
 msgstr "Ångrar"
 
-#: gitk:9374
+#: gitk:9587
 #, tcl-format
 msgid ""
 "Revert failed because of local changes to the following files:%s Please "
 "commit, reset or stash  your changes and try again."
 msgstr ""
 "Misslyckades med att ångra på grund av lokala ändringar i följande filer:%s. "
 "Checka in, återställ eller spara undan (stash) dina ändringar och försök "
 "igen."
 
-#: gitk:9378
+#: gitk:9591
 msgid ""
 "Revert failed because of merge conflict.\n"
 " Do you wish to run git citool to resolve it?"
 msgstr ""
 "Misslyckades med att ångra på grund av en sammanslagningskonflikt.\n"
 " Vill du köra git citool för att lösa den?"
 
-#: gitk:9421
+#: gitk:9634
 msgid "Confirm reset"
 msgstr "Bekräfta återställning"
 
-#: gitk:9423
+#: gitk:9636
 #, tcl-format
 msgid "Reset branch %s to %s?"
 msgstr "Återställa grenen %s till %s?"
 
-#: gitk:9425
+#: gitk:9638
 msgid "Reset type:"
 msgstr "Typ av återställning:"
 
-#: gitk:9428
+#: gitk:9641
 msgid "Soft: Leave working tree and index untouched"
 msgstr "Mjuk: Rör inte utcheckning och index"
 
-#: gitk:9431
+#: gitk:9644
 msgid "Mixed: Leave working tree untouched, reset index"
 msgstr "Blandad: Rör inte utcheckning, återställ index"
 
-#: gitk:9434
+#: gitk:9647
 msgid ""
 "Hard: Reset working tree and index\n"
 "(discard ALL local changes)"
 msgstr ""
 "Hård: Återställ utcheckning och index\n"
 "(förkastar ALLA lokala ändringar)"
 
-#: gitk:9451
+#: gitk:9664
 msgid "Resetting"
 msgstr "Återställer"
 
-#: gitk:9511
+#: gitk:9724
 msgid "Checking out"
 msgstr "Checkar ut"
 
-#: gitk:9564
+#: gitk:9777
 msgid "Cannot delete the currently checked-out branch"
 msgstr "Kan inte ta bort den just nu utcheckade grenen"
 
-#: gitk:9570
+#: gitk:9783
 #, tcl-format
 msgid ""
 "The commits on branch %s aren't on any other branch.\n"
 "Really delete branch %s?"
 msgstr ""
 "Incheckningarna på grenen %s existerar inte på någon annan gren.\n"
 "Vill du verkligen ta bort grenen %s?"
 
-#: gitk:9601
+#: gitk:9814
 #, tcl-format
 msgid "Tags and heads: %s"
 msgstr "Taggar och huvuden: %s"
 
-#: gitk:9616
+#: gitk:9829
 msgid "Filter"
 msgstr "Filter"
 
-#: gitk:9912
+#: gitk:10125
 msgid ""
 "Error reading commit topology information; branch and preceding/following "
 "tag information will be incomplete."
 msgstr ""
 "Fel vid läsning av information om incheckningstopologi; information om "
 "grenar och föregående/senare taggar kommer inte vara komplett."
 
-#: gitk:10899
+#: gitk:11102
 msgid "Tag"
 msgstr "Tagg"
 
-#: gitk:10899
+#: gitk:11106
 msgid "Id"
 msgstr "Id"
 
-#: gitk:10948
+#: gitk:11189
 msgid "Gitk font chooser"
 msgstr "Teckensnittsväljare för Gitk"
 
-#: gitk:10965
+#: gitk:11206
 msgid "B"
 msgstr "F"
 
-#: gitk:10968
+#: gitk:11209
 msgid "I"
 msgstr "K"
 
-#: gitk:11086
+#: gitk:11327
 msgid "Commit list display options"
 msgstr "Alternativ för incheckningslistvy"
 
-#: gitk:11089
+#: gitk:11330
 msgid "Maximum graph width (lines)"
 msgstr "Maximal grafbredd (rader)"
 
-#: gitk:11092
-#, tcl-format
+#: gitk:11334
+#, no-tcl-format
 msgid "Maximum graph width (% of pane)"
 msgstr "Maximal grafbredd (% av ruta)"
 
-#: gitk:11095
+#: gitk:11337
 msgid "Show local changes"
 msgstr "Visa lokala ändringar"
 
-#: gitk:11098
+#: gitk:11340
 msgid "Auto-select SHA1 (length)"
 msgstr "Välj SHA1 (längd) automatiskt"
 
-#: gitk:11102
+#: gitk:11344
 msgid "Hide remote refs"
 msgstr "Dölj fjärr-referenser"
 
-#: gitk:11106
+#: gitk:11348
 msgid "Diff display options"
 msgstr "Alternativ för diffvy"
 
-#: gitk:11108
+#: gitk:11350
 msgid "Tab spacing"
 msgstr "Blanksteg för tabulatortecken"
 
-#: gitk:11111
+#: gitk:11353
 msgid "Display nearby tags/heads"
 msgstr "Visa närliggande taggar/huvuden"
 
-#: gitk:11114
+#: gitk:11356
 msgid "Maximum # tags/heads to show"
 msgstr "Maximalt antal taggar/huvuden att visa"
 
-#: gitk:11117
+#: gitk:11359
 msgid "Limit diffs to listed paths"
 msgstr "Begränsa diff till listade sökvägar"
 
-#: gitk:11120
+#: gitk:11362
 msgid "Support per-file encodings"
 msgstr "Stöd för filspecifika teckenkodningar"
 
-#: gitk:11126 gitk:11273
+#: gitk:11368 gitk:11515
 msgid "External diff tool"
 msgstr "Externt diff-verktyg"
 
-#: gitk:11127
+#: gitk:11369
 msgid "Choose..."
 msgstr "Välj..."
 
-#: gitk:11132
+#: gitk:11374
 msgid "General options"
 msgstr "Allmänna inställningar"
 
-#: gitk:11135
+#: gitk:11377
 msgid "Use themed widgets"
 msgstr "Använd tema på fönsterelement"
 
-#: gitk:11137
+#: gitk:11379
 msgid "(change requires restart)"
 msgstr "(ändringen kräver omstart)"
 
-#: gitk:11139
+#: gitk:11381
 msgid "(currently unavailable)"
 msgstr "(för närvarande inte tillgängligt)"
 
-#: gitk:11150
+#: gitk:11392
 msgid "Colors: press to choose"
 msgstr "Färger: tryck för att välja"
 
-#: gitk:11153
+#: gitk:11395
 msgid "Interface"
 msgstr "Gränssnitt"
 
-#: gitk:11154
+#: gitk:11396
 msgid "interface"
 msgstr "gränssnitt"
 
-#: gitk:11157
+#: gitk:11399
 msgid "Background"
 msgstr "Bakgrund"
 
-#: gitk:11158 gitk:11188
+#: gitk:11400 gitk:11430
 msgid "background"
 msgstr "bakgrund"
 
-#: gitk:11161
+#: gitk:11403
 msgid "Foreground"
 msgstr "Förgrund"
 
-#: gitk:11162
+#: gitk:11404
 msgid "foreground"
 msgstr "förgrund"
 
-#: gitk:11165
+#: gitk:11407
 msgid "Diff: old lines"
 msgstr "Diff: gamla rader"
 
-#: gitk:11166
+#: gitk:11408
 msgid "diff old lines"
 msgstr "diff gamla rader"
 
-#: gitk:11170
+#: gitk:11412
 msgid "Diff: new lines"
 msgstr "Diff: nya rader"
 
-#: gitk:11171
+#: gitk:11413
 msgid "diff new lines"
 msgstr "diff nya rader"
 
-#: gitk:11175
+#: gitk:11417
 msgid "Diff: hunk header"
 msgstr "Diff: delhuvud"
 
-#: gitk:11177
+#: gitk:11419
 msgid "diff hunk header"
 msgstr "diff delhuvud"
 
-#: gitk:11181
+#: gitk:11423
 msgid "Marked line bg"
 msgstr "Markerad rad bakgrund"
 
-#: gitk:11183
+#: gitk:11425
 msgid "marked line background"
 msgstr "markerad rad bakgrund"
 
-#: gitk:11187
+#: gitk:11429
 msgid "Select bg"
 msgstr "Markerad bakgrund"
 
-#: gitk:11196
+#: gitk:11438
 msgid "Fonts: press to choose"
 msgstr "Teckensnitt: tryck för att välja"
 
-#: gitk:11198
+#: gitk:11440
 msgid "Main font"
 msgstr "Huvudteckensnitt"
 
-#: gitk:11199
+#: gitk:11441
 msgid "Diff display font"
 msgstr "Teckensnitt för diffvisning"
 
-#: gitk:11200
+#: gitk:11442
 msgid "User interface font"
 msgstr "Teckensnitt för användargränssnitt"
 
-#: gitk:11222
+#: gitk:11464
 msgid "Gitk preferences"
 msgstr "Inställningar för Gitk"
 
-#: gitk:11231
+#: gitk:11473
 msgid "General"
 msgstr "Allmänt"
 
-#: gitk:11232
+#: gitk:11474
 msgid "Colors"
 msgstr "Färger"
 
-#: gitk:11233
+#: gitk:11475
 msgid "Fonts"
 msgstr "Teckensnitt"
 
-#: gitk:11283
+#: gitk:11525
 #, tcl-format
 msgid "Gitk: choose color for %s"
 msgstr "Gitk: välj färg för %s"
 
-#: gitk:11937
+#: gitk:12242
 msgid "Cannot find a git repository here."
 msgstr "Hittar inget git-arkiv här."
 
-#: gitk:11984
+#: gitk:12289
 #, tcl-format
 msgid "Ambiguous argument '%s': both revision and filename"
 msgstr "Tvetydigt argument \"%s\": både revision och filnamn"
 
-#: gitk:11996
+#: gitk:12301
 msgid "Bad arguments to gitk:"
 msgstr "Felaktiga argument till gitk:"
 
-#: gitk:12099
+#: gitk:12405
 msgid "Command line"
 msgstr "Kommandorad"
 
+#~ msgid "next"
+#~ msgstr "nästa"
+
+#~ msgid "prev"
+#~ msgstr "föreg"
+
 #~ msgid "CDate"
 #~ msgstr "Skapat datum"
 
 #~ msgid "Cannot find the git directory \"%s\"."
 #~ msgstr "Hittar inte git-katalogen \"%s\"."
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/vi.msg /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/vi.msg
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/vi.msg	2017-10-10 12:31:59.138631527 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/vi.msg	2017-10-10 13:04:28.190560095 +0800
@@ -1,7 +1,7 @@
-set ::msgcat::header "Project-Id-Version: gitk @@GIT_VERSION@@\nReport-Msgid-Bugs-To: Paul Mackerras <paulus@samba.org>\nPOT-Creation-Date: 2013-12-14 09:24+0700\nPO-Revision-Date: 2013-12-14 14:40+0700\nLast-Translator: Tr\u1ea7n Ng\u1ecdc Qu\u00e2n <vnwildman@gmail.com>\nLanguage-Team: Vietnamese <translation-team-vi@lists.sourceforge.net>\nLanguage: vi\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\nPlural-Forms: nplurals=1; plural=0;\n"
+set ::msgcat::header "Project-Id-Version: gitk @@GIT_VERSION@@\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2015-03-15 14:37+1100\nPO-Revision-Date: 2013-12-14 14:40+0700\nLast-Translator: Tr\u1ea7n Ng\u1ecdc Qu\u00e2n <vnwildman@gmail.com>\nLanguage-Team: Vietnamese <translation-team-vi@lists.sourceforge.net>\nLanguage: vi\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\nPlural-Forms: nplurals=1; plural=0;\n"
 ::msgcat::mcset vi "Couldn't get list of unmerged files:" "Kh\u00f4ng th\u1ec3 l\u1ea5y danh s\u00e1ch c\u00e1c t\u1eadp-tin ch\u01b0a \u0111\u01b0\u1ee3c h\u00f2a tr\u1ed9n:"
 ::msgcat::mcset vi "Color words" "T\u00f4 m\u00e0u ch\u1eef"
 ::msgcat::mcset vi "Markup words" "\u0110\u00e1nh d\u1ea5u ch\u1eef"
 ::msgcat::mcset vi "Error parsing revisions:" "G\u1eb7p l\u1ed7i khi ph\u00e2n t\u00edch \u0111i\u1ec3m x\u00e9t duy\u1ec7t:"
 ::msgcat::mcset vi "Error executing --argscmd command:" "G\u1eb7p l\u1ed7i khi th\u1ef1c hi\u1ec7n l\u1ec7nh --argscmd:"
 ::msgcat::mcset vi "No files selected: --merge specified but no files are unmerged." "Ch\u01b0a ch\u1ecdn t\u1eadp tin: --merge \u0111\u00e3 ch\u1ec9 \u0111\u1ecbnh nh\u01b0ng kh\u00f4ng c\u00f3 t\u1eadp tin ch\u01b0a h\u00f2a tr\u1ed9n."
@@ -32,14 +32,12 @@
 ::msgcat::mcset vi "About gitk" "Gi\u1edbi thi\u1ec7u v\u1ec1 gitk"
 ::msgcat::mcset vi "Key bindings" "T\u1ed5 h\u1ee3p ph\u00edm"
 ::msgcat::mcset vi "Help" "Tr\u1ee3 gi\u00fap"
 ::msgcat::mcset vi "SHA1 ID:" "SHA1 ID:"
 ::msgcat::mcset vi "Row" "H\u00e0ng"
 ::msgcat::mcset vi "Find" "T\u00ecm"
-::msgcat::mcset vi "next" "ti\u1ebfp"
-::msgcat::mcset vi "prev" "tr\u01b0\u1edbc"
 ::msgcat::mcset vi "commit" "l\u1ea7n chuy\u1ec3n giao"
 ::msgcat::mcset vi "containing:" "c\u00f3 ch\u1ee9a:"
 ::msgcat::mcset vi "touching paths:" "\u0111ang ch\u1ea1m \u0111\u01b0\u1eddng d\u1eabn:"
 ::msgcat::mcset vi "adding/removing string:" "th\u00eam/g\u1ee1 b\u1ecf chu\u1ed7i:"
 ::msgcat::mcset vi "changing lines matching:" "nh\u1eefng d\u00f2ng thay \u0111\u1ed5i kh\u1edbp m\u1eabu:"
 ::msgcat::mcset vi "Exact" "Ch\u00ednh x\u00e1c"
@@ -79,13 +77,12 @@
 ::msgcat::mcset vi "Highlight this too" "C\u0169ng t\u00f4 s\u00e1ng n\u00f3"
 ::msgcat::mcset vi "Highlight this only" "Ch\u1ec9 t\u00f4 s\u00e1ng c\u00e1i n\u00e0y"
 ::msgcat::mcset vi "External diff" "diff t\u1eeb b\u00ean ngo\u00e0i"
 ::msgcat::mcset vi "Blame parent commit" "Xem c\u00f4ng tr\u1ea1ng l\u1ea7n chuy\u1ec3n giao cha m\u1eb9"
 ::msgcat::mcset vi "Show origin of this line" "Hi\u1ec3n th\u1ecb nguy\u00ean g\u1ed1c c\u1ee7a d\u00f2ng n\u00e0y"
 ::msgcat::mcset vi "Run git gui blame on this line" "Ch\u1ea1y l\u1ec7nh git gui blame cho d\u00f2ng n\u00e0y"
-::msgcat::mcset vi "\nGitk - a commit viewer for git\n\nCopyright \u00a9 2005-2011 Paul Mackerras\n\nUse and redistribute under the terms of the GNU General Public License" "\nGitk - ph\u1ea7n m\u1ec1m xem c\u00e1c l\u1ea7n chuy\u1ec3n giao d\u00e0nh cho git\n\nB\u1ea3n quy\u1ec1n \u00a9 2005-2011 Paul Mackerras\n\nD\u00f9ng v\u00e0 ph\u00e2n ph\u1ed1i l\u1ea1i ph\u1ea7n m\u1ec1m n\u00e0y theo c\u00e1c \u0111i\u1ec1u kho\u1ea3n c\u1ee7a Gi\u1ea5y Ph\u00e9p C\u00f4ng GNU"
 ::msgcat::mcset vi "Close" "\u0110\u00f3ng"
 ::msgcat::mcset vi "Gitk key bindings" "T\u1ed5 h\u1ee3p ph\u00edm gitk"
 ::msgcat::mcset vi "Gitk key bindings:" "T\u1ed5 h\u1ee3p ph\u00edm gitk:"
 ::msgcat::mcset vi "<%s-Q>\u0009\u0009Quit" "<%s-Q>\u0009\u0009Tho\u00e1t"
 ::msgcat::mcset vi "<%s-W>\u0009\u0009Close window" "<%s-W>\u0009\u0009\u0110\u00f3ng c\u1eeda s\u1ed5"
 ::msgcat::mcset vi "<Home>\u0009\u0009Move to first commit" "<Home>\u0009\u0009Chuy\u1ec3n \u0111\u1ebfn l\u1ea7n chuy\u1ec3n giao \u0111\u1ea7u ti\u00ean"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/vi.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/vi.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitk-git/po/vi.po	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitk-git/po/vi.po	2015-05-01 03:12:02.000000000 +0800
@@ -3,14 +3,14 @@
 # This file is distributed under the same license as the gitk package.
 # Trần Ngọc Quân <vnwildman@gmail.com>, 2013.
 #
 msgid ""
 msgstr ""
 "Project-Id-Version: gitk @@GIT_VERSION@@\n"
-"Report-Msgid-Bugs-To: Paul Mackerras <paulus@samba.org>\n"
-"POT-Creation-Date: 2013-12-14 09:24+0700\n"
+"Report-Msgid-Bugs-To: \n"
+"POT-Creation-Date: 2015-03-15 14:37+1100\n"
 "PO-Revision-Date: 2013-12-14 14:40+0700\n"
 "Last-Translator: Trần Ngọc Quân <vnwildman@gmail.com>\n"
 "Language-Team: Vietnamese <translation-team-vi@lists.sourceforge.net>\n"
 "Language: vi\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
@@ -18,1334 +18,1343 @@
 "Plural-Forms: nplurals=1; plural=0;\n"
 
 #: gitk:140
 msgid "Couldn't get list of unmerged files:"
 msgstr "Không thể lấy danh sách các tập-tin chưa được hòa trộn:"
 
-#: gitk:212 gitk:2353
+#: gitk:212 gitk:2381
 msgid "Color words"
 msgstr "Tô màu chữ"
 
-#: gitk:217 gitk:2353 gitk:8103 gitk:8136
+#: gitk:217 gitk:2381 gitk:8201 gitk:8234
 msgid "Markup words"
 msgstr "Đánh dấu chữ"
 
-#: gitk:322
+#: gitk:324
 msgid "Error parsing revisions:"
 msgstr "Gặp lỗi khi phân tích điểm xét duyệt:"
 
-#: gitk:378
+#: gitk:380
 msgid "Error executing --argscmd command:"
 msgstr "Gặp lỗi khi thực hiện lệnh --argscmd:"
 
-#: gitk:391
+#: gitk:393
 msgid "No files selected: --merge specified but no files are unmerged."
 msgstr ""
 "Chưa chọn tập tin: --merge đã chỉ định nhưng không có tập tin chưa hòa trộn."
 
-#: gitk:394
+#: gitk:396
 msgid ""
 "No files selected: --merge specified but no unmerged files are within file "
 "limit."
 msgstr ""
 "Chưa chọn tập tin: --merge đã chỉ định nhưng không có tập tin chưa hòa trộn "
 "trong giới hạn tập tin."
 
-#: gitk:416 gitk:564
+#: gitk:418 gitk:566
 msgid "Error executing git log:"
 msgstr "Gặp lỗi khi thực hiện lệnh git log:"
 
-#: gitk:434 gitk:580
+#: gitk:436 gitk:582
 msgid "Reading"
 msgstr "Đang đọc"
 
-#: gitk:494 gitk:4429
+#: gitk:496 gitk:4508
 msgid "Reading commits..."
 msgstr "Đang đọc các lần chuyển giao..."
 
-#: gitk:497 gitk:1635 gitk:4432
+#: gitk:499 gitk:1637 gitk:4511
 msgid "No commits selected"
 msgstr "Chưa chọn các lần chuyển giao"
 
-#: gitk:1509
+#: gitk:1511
 msgid "Can't parse git log output:"
 msgstr "Không thể phân tích kết xuất từ lệnh git log:"
 
-#: gitk:1738
+#: gitk:1740
 msgid "No commit information available"
 msgstr "Không có thông tin về lần chuyển giao nào"
 
-#: gitk:1895
+#: gitk:1897
 msgid "mc"
 msgstr "mc"
 
-#: gitk:1930 gitk:4222 gitk:9552 gitk:11122 gitk:11401
+#: gitk:1932 gitk:4298 gitk:9650 gitk:11220 gitk:11500
 msgid "OK"
 msgstr "Đồng ý"
 
-#: gitk:1932 gitk:4224 gitk:9079 gitk:9158 gitk:9274 gitk:9323 gitk:9554
-#: gitk:11123 gitk:11402
+#: gitk:1934 gitk:4300 gitk:9177 gitk:9256 gitk:9372 gitk:9421 gitk:9652
+#: gitk:11221 gitk:11501
 msgid "Cancel"
 msgstr "Thôi"
 
-#: gitk:2067
+#: gitk:2069
 msgid "Update"
 msgstr "Cập nhật"
 
-#: gitk:2068
+#: gitk:2070
 msgid "Reload"
 msgstr "Tải lại"
 
-#: gitk:2069
+#: gitk:2071
 msgid "Reread references"
 msgstr "Đọc lại tham chiếu"
 
-#: gitk:2070
+#: gitk:2072
 msgid "List references"
 msgstr "Liệt kê các tham chiếu"
 
-#: gitk:2072
+#: gitk:2074
 msgid "Start git gui"
 msgstr "Khởi chạy git gui"
 
-#: gitk:2074
+#: gitk:2076
 msgid "Quit"
 msgstr "Thoát"
 
-#: gitk:2066
+#: gitk:2068
 msgid "File"
 msgstr "Chính"
 
-#: gitk:2078
+#: gitk:2080
 msgid "Preferences"
 msgstr "Cá nhân hóa"
 
-#: gitk:2077
+#: gitk:2079
 msgid "Edit"
 msgstr "Chỉnh sửa"
 
-#: gitk:2082
+#: gitk:2084
 msgid "New view..."
 msgstr "Thêm trình bày mới..."
 
-#: gitk:2083
+#: gitk:2085
 msgid "Edit view..."
 msgstr "Sửa cách trình bày..."
 
-#: gitk:2084
+#: gitk:2086
 msgid "Delete view"
 msgstr "Xóa cách trình bày"
 
-#: gitk:2086
+#: gitk:2088
 msgid "All files"
 msgstr "Mọi tập tin"
 
-#: gitk:2081 gitk:3975
+#: gitk:2083 gitk:4050
 msgid "View"
 msgstr "Trình bày"
 
-#: gitk:2091 gitk:2101 gitk:2945
+#: gitk:2093 gitk:2103 gitk:3009
 msgid "About gitk"
 msgstr "Giới thiệu về gitk"
 
-#: gitk:2092 gitk:2106
+#: gitk:2094 gitk:2108
 msgid "Key bindings"
 msgstr "Tổ hợp phím"
 
-#: gitk:2090 gitk:2105
+#: gitk:2092 gitk:2107
 msgid "Help"
 msgstr "Trợ giúp"
 
-#: gitk:2183 gitk:8535
+#: gitk:2185 gitk:8633
 msgid "SHA1 ID:"
 msgstr "SHA1 ID:"
 
-#: gitk:2227
+#: gitk:2229
 msgid "Row"
 msgstr "Hàng"
 
-#: gitk:2265
+#: gitk:2267
 msgid "Find"
 msgstr "Tìm"
 
-#: gitk:2266
-msgid "next"
-msgstr "tiếp"
-
-#: gitk:2267
-msgid "prev"
-msgstr "trước"
-
-#: gitk:2268
+#: gitk:2295
 msgid "commit"
 msgstr "lần chuyển giao"
 
-#: gitk:2271 gitk:2273 gitk:4590 gitk:4613 gitk:4637 gitk:6653 gitk:6725
-#: gitk:6810
+#: gitk:2299 gitk:2301 gitk:4669 gitk:4692 gitk:4716 gitk:6736 gitk:6808
+#: gitk:6893
 msgid "containing:"
 msgstr "có chứa:"
 
-#: gitk:2274 gitk:3457 gitk:3462 gitk:4666
+#: gitk:2302 gitk:3522 gitk:3527 gitk:4745
 msgid "touching paths:"
 msgstr "đang chạm đường dẫn:"
 
-#: gitk:2275 gitk:4680
+#: gitk:2303 gitk:4759
 msgid "adding/removing string:"
 msgstr "thêm/gỡ bỏ chuỗi:"
 
-#: gitk:2276 gitk:4682
+#: gitk:2304 gitk:4761
 msgid "changing lines matching:"
 msgstr "những dòng thay đổi khớp mẫu:"
 
-#: gitk:2285 gitk:2287 gitk:4669
+#: gitk:2313 gitk:2315 gitk:4748
 msgid "Exact"
 msgstr "Chính xác"
 
-#: gitk:2287 gitk:4757 gitk:6621
+#: gitk:2315 gitk:4836 gitk:6704
 msgid "IgnCase"
 msgstr "BquaHt"
 
-#: gitk:2287 gitk:4639 gitk:4755 gitk:6617
+#: gitk:2315 gitk:4718 gitk:4834 gitk:6700
 msgid "Regexp"
 msgstr "BTCQ"
 
-#: gitk:2289 gitk:2290 gitk:4777 gitk:4807 gitk:4814 gitk:6746 gitk:6814
+#: gitk:2317 gitk:2318 gitk:4856 gitk:4886 gitk:4893 gitk:6829 gitk:6897
 msgid "All fields"
 msgstr "Mọi trường"
 
-#: gitk:2290 gitk:4774 gitk:4807 gitk:6684
+#: gitk:2318 gitk:4853 gitk:4886 gitk:6767
 msgid "Headline"
 msgstr "Nội dung chính"
 
-#: gitk:2291 gitk:4774 gitk:6684 gitk:6814 gitk:7283
+#: gitk:2319 gitk:4853 gitk:6767 gitk:6897 gitk:7370
 msgid "Comments"
 msgstr "Ghi chú"
 
-#: gitk:2291 gitk:4774 gitk:4779 gitk:4814 gitk:6684 gitk:7218 gitk:8713
-#: gitk:8728
+#: gitk:2319 gitk:4853 gitk:4858 gitk:4893 gitk:6767 gitk:7305 gitk:8811
+#: gitk:8826
 msgid "Author"
 msgstr "Tác giả"
 
-#: gitk:2291 gitk:4774 gitk:6684 gitk:7220
+#: gitk:2319 gitk:4853 gitk:6767 gitk:7307
 msgid "Committer"
 msgstr "Người chuyển giao"
 
-#: gitk:2322
+#: gitk:2350
 msgid "Search"
 msgstr "Tìm kiếm"
 
-#: gitk:2330
+#: gitk:2358
 msgid "Diff"
 msgstr "So sánh"
 
-#: gitk:2332
+#: gitk:2360
 msgid "Old version"
 msgstr "Phiên bản cũ"
 
-#: gitk:2334
+#: gitk:2362
 msgid "New version"
 msgstr "Phiên bản mới"
 
-#: gitk:2336
+#: gitk:2364
 msgid "Lines of context"
 msgstr "Các dòng của nội dung"
 
-#: gitk:2346
+#: gitk:2374
 msgid "Ignore space change"
 msgstr "Không xét đến thay đổi do khoảng trắng"
 
-#: gitk:2350 gitk:2352 gitk:7842 gitk:8089
+#: gitk:2378 gitk:2380 gitk:7940 gitk:8187
 msgid "Line diff"
 msgstr "Khác biệt theo dòng"
 
-#: gitk:2417
+#: gitk:2445
 msgid "Patch"
 msgstr "Vá"
 
-#: gitk:2419
+#: gitk:2447
 msgid "Tree"
 msgstr "Cây"
 
-#: gitk:2577 gitk:2597
+#: gitk:2616 gitk:2636
 msgid "Diff this -> selected"
 msgstr "So sánh cái này -> cái đã chọn"
 
-#: gitk:2578 gitk:2598
+#: gitk:2617 gitk:2637
 msgid "Diff selected -> this"
 msgstr "So sánh cái đã chọn -> cái này"
 
-#: gitk:2579 gitk:2599
+#: gitk:2618 gitk:2638
 msgid "Make patch"
 msgstr "Tạo miếng vá"
 
-#: gitk:2580 gitk:9137
+#: gitk:2619 gitk:9235
 msgid "Create tag"
 msgstr "Tạo thẻ"
 
-#: gitk:2581 gitk:9254
+#: gitk:2620 gitk:9352
 msgid "Write commit to file"
 msgstr "Ghi lần chuyển giao ra tập tin"
 
-#: gitk:2582 gitk:9311
+#: gitk:2621 gitk:9409
 msgid "Create new branch"
 msgstr "Tạo nhánh mới"
 
-#: gitk:2583
+#: gitk:2622
 msgid "Cherry-pick this commit"
 msgstr "Cherry-pick lần chuyển giao này"
 
-#: gitk:2584
+#: gitk:2623
 msgid "Reset HEAD branch to here"
 msgstr "Đặt lại HEAD của nhánh vào đây"
 
-#: gitk:2585
+#: gitk:2624
 msgid "Mark this commit"
 msgstr "Đánh dấu lần chuyển giao này"
 
-#: gitk:2586
+#: gitk:2625
 msgid "Return to mark"
 msgstr "Quay lại vị trí dấu"
 
-#: gitk:2587
+#: gitk:2626
 msgid "Find descendant of this and mark"
 msgstr "Tìm con cháu của cái này và cái đã đánh dấu"
 
-#: gitk:2588
+#: gitk:2627
 msgid "Compare with marked commit"
 msgstr "So sánh với lần chuyển giao đã đánh dấu"
 
-#: gitk:2589 gitk:2600
+#: gitk:2628 gitk:2639
 msgid "Diff this -> marked commit"
 msgstr "So sánh cái này -> lần chuyển giao đã đánh dấu"
 
-#: gitk:2590 gitk:2601
+#: gitk:2629 gitk:2640
 msgid "Diff marked commit -> this"
 msgstr "So sánh lần chuyển giao đã đánh dấu -> cái này"
 
-#: gitk:2591
+#: gitk:2630
 msgid "Revert this commit"
 msgstr "Hoàn lại lần chuyển giao này"
 
-#: gitk:2607
+#: gitk:2646
 msgid "Check out this branch"
 msgstr "Checkout nhánh này"
 
-#: gitk:2608
+#: gitk:2647
 msgid "Remove this branch"
 msgstr "Gỡ bỏ nhánh này"
 
-#: gitk:2615
+#: gitk:2654
 msgid "Highlight this too"
 msgstr "Cũng tô sáng nó"
 
-#: gitk:2616
+#: gitk:2655
 msgid "Highlight this only"
 msgstr "Chỉ tô sáng cái này"
 
-#: gitk:2617
+#: gitk:2656
 msgid "External diff"
 msgstr "diff từ bên ngoài"
 
-#: gitk:2618
+#: gitk:2657
 msgid "Blame parent commit"
 msgstr "Xem công trạng lần chuyển giao cha mẹ"
 
-#: gitk:2625
+#: gitk:2664
 msgid "Show origin of this line"
 msgstr "Hiển thị nguyên gốc của dòng này"
 
-#: gitk:2626
+#: gitk:2665
 msgid "Run git gui blame on this line"
 msgstr "Chạy lệnh git gui blame cho dòng này"
 
-#: gitk:2947
+#: gitk:3011
+#, fuzzy
 msgid ""
 "\n"
 "Gitk - a commit viewer for git\n"
 "\n"
-"Copyright © 2005-2011 Paul Mackerras\n"
+"Copyright © 2005-2014 Paul Mackerras\n"
 "\n"
 "Use and redistribute under the terms of the GNU General Public License"
 msgstr ""
 "\n"
 "Gitk - phần mềm xem các lần chuyển giao dành cho git\n"
 "\n"
 "Bản quyền © 2005-2011 Paul Mackerras\n"
 "\n"
 "Dùng và phân phối lại phần mềm này theo các điều khoản của Giấy Phép Công GNU"
 
-#: gitk:2955 gitk:3020 gitk:9738
+#: gitk:3019 gitk:3085 gitk:9836
 msgid "Close"
 msgstr "Đóng"
 
-#: gitk:2976
+#: gitk:3040
 msgid "Gitk key bindings"
 msgstr "Tổ hợp phím gitk"
 
-#: gitk:2979
+#: gitk:3043
 msgid "Gitk key bindings:"
 msgstr "Tổ hợp phím gitk:"
 
-#: gitk:2981
+#: gitk:3045
 #, tcl-format
 msgid "<%s-Q>\t\tQuit"
 msgstr "<%s-Q>\t\tThoát"
 
-#: gitk:2982
+#: gitk:3046
 #, tcl-format
 msgid "<%s-W>\t\tClose window"
 msgstr "<%s-W>\t\tĐóng cửa sổ"
 
-#: gitk:2983
+#: gitk:3047
 msgid "<Home>\t\tMove to first commit"
 msgstr "<Home>\t\tChuyển đến lần chuyển giao đầu tiên"
 
-#: gitk:2984
+#: gitk:3048
 msgid "<End>\t\tMove to last commit"
 msgstr "<End>\t\tChuyển đến lần chuyển giao cuối"
 
-#: gitk:2985
+#: gitk:3049
 msgid "<Up>, p, k\tMove up one commit"
 msgstr "<Up>, p, k\tDi chuyển lên một lần chuyển giao"
 
-#: gitk:2986
+#: gitk:3050
 msgid "<Down>, n, j\tMove down one commit"
 msgstr "<Down>, n, j\tDi chuyển xuống một lần chuyển giao"
 
-#: gitk:2987
+#: gitk:3051
 msgid "<Left>, z, h\tGo back in history list"
 msgstr "<Left>, z, h\tQuay trở lại danh sách lịch sử"
 
-#: gitk:2988
+#: gitk:3052
 msgid "<Right>, x, l\tGo forward in history list"
 msgstr "<Right>, x, l\tDi chuyển tiếp trong danh sách lịch sử"
 
-#: gitk:2989
+#: gitk:3053
+#, tcl-format
+msgid "<%s-n>\tGo to n-th parent of current commit in history list"
+msgstr ""
+
+#: gitk:3054
 msgid "<PageUp>\tMove up one page in commit list"
 msgstr "<PageUp>\tDi chuyển lên một trang trong danh sách lần chuyển giao"
 
-#: gitk:2990
+#: gitk:3055
 msgid "<PageDown>\tMove down one page in commit list"
 msgstr "<PageDown>\tDi chuyển xuống một trang trong danh sách lần chuyển giao"
 
-#: gitk:2991
+#: gitk:3056
 #, tcl-format
 msgid "<%s-Home>\tScroll to top of commit list"
 msgstr "<%s-Home>\tCuộn lên trên cùng của danh sách lần chuyển giao"
 
-#: gitk:2992
+#: gitk:3057
 #, tcl-format
 msgid "<%s-End>\tScroll to bottom of commit list"
 msgstr "<%s-End>\tCuộn xuống dưới cùng của danh sách lần chuyển giao"
 
-#: gitk:2993
+#: gitk:3058
 #, tcl-format
 msgid "<%s-Up>\tScroll commit list up one line"
 msgstr "<%s-Up>\tCuộn danh sách lần chuyển giao lên một dòng"
 
-#: gitk:2994
+#: gitk:3059
 #, tcl-format
 msgid "<%s-Down>\tScroll commit list down one line"
 msgstr "<%s-Down>\tCuộn danh sách lần chuyển giao xuống một dòng"
 
-#: gitk:2995
+#: gitk:3060
 #, tcl-format
 msgid "<%s-PageUp>\tScroll commit list up one page"
 msgstr "<%s-PageUp>\tCuộn danh sách lần chuyển giao lên một trang"
 
-#: gitk:2996
+#: gitk:3061
 #, tcl-format
 msgid "<%s-PageDown>\tScroll commit list down one page"
 msgstr "<%s-PageDown>\tCuộn danh sách lần chuyển giao xuống một trang"
 
-#: gitk:2997
+#: gitk:3062
 msgid "<Shift-Up>\tFind backwards (upwards, later commits)"
 msgstr "<Shift-Up>\tTìm về phía sau (hướng lên trên, lần chuyển giao sau này)"
 
-#: gitk:2998
+#: gitk:3063
 msgid "<Shift-Down>\tFind forwards (downwards, earlier commits)"
 msgstr ""
 "<Shift-Down>\tTìm về phía trước (hướng xuống dưới, lần chuyển giao trước đây)"
 
-#: gitk:2999
+#: gitk:3064
 msgid "<Delete>, b\tScroll diff view up one page"
 msgstr "<Delete>, b\tCuộn phần trình bày diff lên một trang"
 
-#: gitk:3000
+#: gitk:3065
 msgid "<Backspace>\tScroll diff view up one page"
 msgstr "<Backspace>\tCuộn phần trình bày diff lên một trang"
 
-#: gitk:3001
+#: gitk:3066
 msgid "<Space>\t\tScroll diff view down one page"
 msgstr "<Space>\t\tCuộn phần trình bày diff xuống một trang"
 
-#: gitk:3002
+#: gitk:3067
 msgid "u\t\tScroll diff view up 18 lines"
 msgstr "u\t\tCuộn phần trình bày diff lên 18 dòng"
 
-#: gitk:3003
+#: gitk:3068
 msgid "d\t\tScroll diff view down 18 lines"
 msgstr "d\t\tCuộn phần trình bày diff xuống 18 dòng"
 
-#: gitk:3004
+#: gitk:3069
 #, tcl-format
 msgid "<%s-F>\t\tFind"
 msgstr "<%s-F>\t\tTìm kiếm"
 
-#: gitk:3005
+#: gitk:3070
 #, tcl-format
 msgid "<%s-G>\t\tMove to next find hit"
 msgstr "<%s-G>\t\tDi chuyển đến chỗ gặp kế tiếp"
 
-#: gitk:3006
+#: gitk:3071
 msgid "<Return>\tMove to next find hit"
 msgstr "<Return>\t\tDi chuyển đến chỗ gặp kế tiếp"
 
-#: gitk:3007
+#: gitk:3072
 msgid "/\t\tFocus the search box"
 msgstr "/\t\tĐưa con trỏ chuột vào ô tìm kiếm"
 
-#: gitk:3008
+#: gitk:3073
 msgid "?\t\tMove to previous find hit"
 msgstr "?\t\tDi chuyển đến chỗ gặp kế trước"
 
-#: gitk:3009
+#: gitk:3074
 msgid "f\t\tScroll diff view to next file"
 msgstr "f\t\tCuộn phần trình bày diff sang tập-tin kế"
 
-#: gitk:3010
+#: gitk:3075
 #, tcl-format
 msgid "<%s-S>\t\tSearch for next hit in diff view"
 msgstr "<%s-S>\t\tTìm đến chỗ khác biệt kế tiếp"
 
-#: gitk:3011
+#: gitk:3076
 #, tcl-format
 msgid "<%s-R>\t\tSearch for previous hit in diff view"
 msgstr "<%s-R>\t\tTìm đến chỗ khác biệt kế trước"
 
-#: gitk:3012
+#: gitk:3077
 #, tcl-format
 msgid "<%s-KP+>\tIncrease font size"
 msgstr "<%s-KP+>\tTăng cỡ chữ"
 
-#: gitk:3013
+#: gitk:3078
 #, tcl-format
 msgid "<%s-plus>\tIncrease font size"
 msgstr "<%s-plus>\tTăng cỡ chữ"
 
-#: gitk:3014
+#: gitk:3079
 #, tcl-format
 msgid "<%s-KP->\tDecrease font size"
 msgstr "<%s-KP->\tGiảm cỡ chữ"
 
-#: gitk:3015
+#: gitk:3080
 #, tcl-format
 msgid "<%s-minus>\tDecrease font size"
 msgstr "<%s-minus>\tGiảm cỡ chữ"
 
-#: gitk:3016
+#: gitk:3081
 msgid "<F5>\t\tUpdate"
 msgstr "<F5>\t\tCập nhật"
 
-#: gitk:3471 gitk:3480
+#: gitk:3546 gitk:3555
 #, tcl-format
 msgid "Error creating temporary directory %s:"
 msgstr "Gặp lỗi khi tạo thư mục tạm %s:"
 
-#: gitk:3493
+#: gitk:3568
 #, tcl-format
 msgid "Error getting \"%s\" from %s:"
 msgstr "Lỗi chào hỏi \"%s\" từ %s:"
 
-#: gitk:3556
+#: gitk:3631
 msgid "command failed:"
 msgstr "lệnh gặp lỗi:"
 
-#: gitk:3705
+#: gitk:3780
 msgid "No such commit"
 msgstr "Không có lần chuyển giao như vậy"
 
-#: gitk:3719
+#: gitk:3794
 msgid "git gui blame: command failed:"
 msgstr "git gui blame: lệnh gặp lỗi:"
 
-#: gitk:3750
+#: gitk:3825
 #, tcl-format
 msgid "Couldn't read merge head: %s"
 msgstr "Không thể độc đầu của hòa trộn: %s"
 
 # tcl-format
-#: gitk:3758
+#: gitk:3833
 #, tcl-format
 msgid "Error reading index: %s"
 msgstr "Gặp lỗi khi đọc chỉ mục: %s"
 
-#: gitk:3783
+#: gitk:3858
 #, tcl-format
 msgid "Couldn't start git blame: %s"
 msgstr "Không thể khởi chạy git blame: %s"
 
-#: gitk:3786 gitk:6652
+#: gitk:3861 gitk:6735
 msgid "Searching"
 msgstr "Đang tìm kiếm"
 
-#: gitk:3818
+#: gitk:3893
 #, tcl-format
 msgid "Error running git blame: %s"
 msgstr "Gặp lỗi khi chạy git blame: %s"
 
-#: gitk:3846
+#: gitk:3921
 #, tcl-format
 msgid "That line comes from commit %s,  which is not in this view"
 msgstr "Dòng đến từ lần chuyển giao %s, cái mà không trong trình bày này"
 
-#: gitk:3860
+#: gitk:3935
 msgid "External diff viewer failed:"
 msgstr "Bộ trình bày diff từ bên ngoài gặp lỗi:"
 
-#: gitk:3978
+#: gitk:4053
 msgid "Gitk view definition"
 msgstr "Định nghĩa cách trình bày gitk"
 
-#: gitk:3982
+#: gitk:4057
 msgid "Remember this view"
 msgstr "Nhớ cách trình bày này"
 
-#: gitk:3983
+#: gitk:4058
 msgid "References (space separated list):"
 msgstr "Tham chiếu (danh sách ngăn cách bằng dấu cách):"
 
-#: gitk:3984
+#: gitk:4059
 msgid "Branches & tags:"
 msgstr "Nhánh & thẻ:"
 
-#: gitk:3985
+#: gitk:4060
 msgid "All refs"
 msgstr "Mọi tham chiếu"
 
-#: gitk:3986
+#: gitk:4061
 msgid "All (local) branches"
 msgstr "Mọi nhánh (nội bộ)"
 
-#: gitk:3987
+#: gitk:4062
 msgid "All tags"
 msgstr "Mọi thẻ"
 
-#: gitk:3988
+#: gitk:4063
 msgid "All remote-tracking branches"
 msgstr "Mọi nhánh remote-tracking"
 
-#: gitk:3989
+#: gitk:4064
 msgid "Commit Info (regular expressions):"
 msgstr "Thông tin chuyển giao (biểu thức chính quy):"
 
-#: gitk:3990
+#: gitk:4065
 msgid "Author:"
 msgstr "Tác giả:"
 
-#: gitk:3991
+#: gitk:4066
 msgid "Committer:"
 msgstr "Người chuyển giao:"
 
-#: gitk:3992
+#: gitk:4067
 msgid "Commit Message:"
 msgstr "Chú thích của lần chuyển giao:"
 
-#: gitk:3993
+#: gitk:4068
 msgid "Matches all Commit Info criteria"
 msgstr "Khớp mọi điều kiện Thông tin Chuyển giao"
 
-#: gitk:3994
+#: gitk:4069
+#, fuzzy
+msgid "Matches none Commit Info criteria"
+msgstr "Khớp mọi điều kiện Thông tin Chuyển giao"
+
+#: gitk:4070
 msgid "Changes to Files:"
 msgstr "Đổi thành Tập tin:"
 
-#: gitk:3995
+#: gitk:4071
 msgid "Fixed String"
 msgstr "Chuỗi cố định"
 
-#: gitk:3996
+#: gitk:4072
 msgid "Regular Expression"
 msgstr "Biểu thức chính quy"
 
-#: gitk:3997
+#: gitk:4073
 msgid "Search string:"
 msgstr "Chuỗi tìm kiếm:"
 
-#: gitk:3998
+#: gitk:4074
 msgid ""
 "Commit Dates (\"2 weeks ago\", \"2009-03-17 15:27:38\", \"March 17, 2009 "
 "15:27:38\"):"
 msgstr ""
 "Ngày chuyển giao (\"2 weeks ago\", \"2009-03-17 15:27:38\", \"March 17, 2009 "
 "15:27:38\"):"
 
-#: gitk:3999
+#: gitk:4075
 msgid "Since:"
 msgstr "Kể từ:"
 
-#: gitk:4000
+#: gitk:4076
 msgid "Until:"
 msgstr "Đến:"
 
-#: gitk:4001
+#: gitk:4077
 msgid "Limit and/or skip a number of revisions (positive integer):"
 msgstr "Giới hạn và/hoặc bỏ số của điểm xét (số nguyên âm):"
 
-#: gitk:4002
+#: gitk:4078
 msgid "Number to show:"
 msgstr "Số lượng hiển thị:"
 
-#: gitk:4003
+#: gitk:4079
 msgid "Number to skip:"
 msgstr "Số lượng sẽ bỏ qua:"
 
-#: gitk:4004
+#: gitk:4080
 msgid "Miscellaneous options:"
 msgstr "Tuỳ chọn hỗn hợp:"
 
-#: gitk:4005
+#: gitk:4081
 msgid "Strictly sort by date"
 msgstr "Sắp xếp chặt chẽ theo ngày"
 
-#: gitk:4006
+#: gitk:4082
 msgid "Mark branch sides"
 msgstr "Đánh dấu các cạnh nhánh"
 
-#: gitk:4007
+#: gitk:4083
 msgid "Limit to first parent"
 msgstr "Giới hạn thành cha mẹ đầu tiên"
 
-#: gitk:4008
+#: gitk:4084
 msgid "Simple history"
 msgstr "Lịch sử dạng đơn giản"
 
-#: gitk:4009
+#: gitk:4085
 msgid "Additional arguments to git log:"
 msgstr "Đối số bổ xung cho lệnh git log:"
 
-#: gitk:4010
+#: gitk:4086
 msgid "Enter files and directories to include, one per line:"
 msgstr "Nhập vào các tập tin và thư mục bao gồm, mỗi dòng một cái:"
 
-#: gitk:4011
+#: gitk:4087
 msgid "Command to generate more commits to include:"
 msgstr "Lệnh tạo ra nhiều lần chuyển giao hơn bao gồm:"
 
-#: gitk:4135
+#: gitk:4211
 msgid "Gitk: edit view"
 msgstr "Gitk: sửa cách trình bày"
 
-#: gitk:4143
+#: gitk:4219
 msgid "-- criteria for selecting revisions"
 msgstr "-- tiêu chuẩn chọn điểm xét duyệt"
 
-#: gitk:4148
+#: gitk:4224
 msgid "View Name"
 msgstr "Tên cách trình bày"
 
-#: gitk:4223
+#: gitk:4299
 msgid "Apply (F5)"
 msgstr "Áp dụng (F5)"
 
-#: gitk:4261
+#: gitk:4337
 msgid "Error in commit selection arguments:"
 msgstr "Lỗi trong các đối số chọn chuyển giao:"
 
-#: gitk:4314 gitk:4366 gitk:4827 gitk:4841 gitk:6107 gitk:12184 gitk:12185
+#: gitk:4392 gitk:4445 gitk:4906 gitk:4920 gitk:6190 gitk:12346 gitk:12347
 msgid "None"
 msgstr "Không"
 
-#: gitk:4924 gitk:4929
+#: gitk:5003 gitk:5008
 msgid "Descendant"
 msgstr "Con cháu"
 
-#: gitk:4925
+#: gitk:5004
 msgid "Not descendant"
 msgstr "Không có con cháu"
 
-#: gitk:4932 gitk:4937
+#: gitk:5011 gitk:5016
 msgid "Ancestor"
 msgstr "Tổ tiên chung"
 
-#: gitk:4933
+#: gitk:5012
 msgid "Not ancestor"
 msgstr "Không có chung tổ tiên"
 
-#: gitk:5223
+#: gitk:5306
 msgid "Local changes checked in to index but not committed"
 msgstr ""
 "Có thay đổi nội bộ đã được đưa vào bảng mục lục, nhưng chưa được chuyển giao"
 
-#: gitk:5259
+#: gitk:5342
 msgid "Local uncommitted changes, not checked in to index"
 msgstr "Có thay đổi nội bộ, nhưng chưa được đưa vào bảng mục lục"
 
-#: gitk:7032
+#: gitk:7115
 msgid "and many more"
 msgstr "và nhiều nữa"
 
-#: gitk:7035
+#: gitk:7118
 msgid "many"
 msgstr "nhiều"
 
-#: gitk:7222
+#: gitk:7309
 msgid "Tags:"
 msgstr "Thẻ:"
 
-#: gitk:7239 gitk:7245 gitk:8708
+#: gitk:7326 gitk:7332 gitk:8806
 msgid "Parent"
 msgstr "Cha"
 
-#: gitk:7250
+#: gitk:7337
 msgid "Child"
 msgstr "Con"
 
-#: gitk:7259
+#: gitk:7346
 msgid "Branch"
 msgstr "Nhánh"
 
-#: gitk:7262
+#: gitk:7349
 msgid "Follows"
 msgstr "Đứng sau"
 
-#: gitk:7265
+#: gitk:7352
 msgid "Precedes"
 msgstr "Đứng trước"
 
 # tcl-format
-#: gitk:7849
+#: gitk:7947
 #, tcl-format
 msgid "Error getting diffs: %s"
 msgstr "Lỗi lấy diff: %s"
 
-#: gitk:8533
+#: gitk:8631
 msgid "Goto:"
 msgstr "Nhảy tới:"
 
-#: gitk:8554
+#: gitk:8652
 #, tcl-format
 msgid "Short SHA1 id %s is ambiguous"
 msgstr "Định danh SHA1 dạng ngắn %s là chưa đủ rõ ràng"
 
-#: gitk:8561
+#: gitk:8659
 #, tcl-format
 msgid "Revision %s is not known"
 msgstr "Không hiểu điểm xét duyệt %s"
 
-#: gitk:8571
+#: gitk:8669
 #, tcl-format
 msgid "SHA1 id %s is not known"
 msgstr "Không hiểu định danh SHA1 %s"
 
-#: gitk:8573
+#: gitk:8671
 #, tcl-format
 msgid "Revision %s is not in the current view"
 msgstr "Điểm %s không ở trong phần hiển thị hiện tại"
 
-#: gitk:8715 gitk:8730
+#: gitk:8813 gitk:8828
 msgid "Date"
 msgstr "Ngày"
 
-#: gitk:8718
+#: gitk:8816
 msgid "Children"
 msgstr "Con cháu"
 
-#: gitk:8781
+#: gitk:8879
 #, tcl-format
 msgid "Reset %s branch to here"
 msgstr "Đặt lại nhánh %s tại đây"
 
-#: gitk:8783
+#: gitk:8881
 msgid "Detached head: can't reset"
 msgstr "Head đã bị tách rời: không thể đặt lại"
 
-#: gitk:8888 gitk:8894
+#: gitk:8986 gitk:8992
 msgid "Skipping merge commit "
 msgstr "Bỏ qua lần chuyển giao hòa trộn "
 
-#: gitk:8903 gitk:8908
+#: gitk:9001 gitk:9006
 msgid "Error getting patch ID for "
 msgstr "Gặp lỗi khi lấy ID miếng vá cho "
 
-#: gitk:8904 gitk:8909
+#: gitk:9002 gitk:9007
 msgid " - stopping\n"
 msgstr " - dừng\n"
 
-#: gitk:8914 gitk:8917 gitk:8925 gitk:8939 gitk:8948
+#: gitk:9012 gitk:9015 gitk:9023 gitk:9037 gitk:9046
 msgid "Commit "
 msgstr "Commit "
 
-#: gitk:8918
+#: gitk:9016
 msgid ""
 " is the same patch as\n"
 "       "
 msgstr ""
 " là cùng một miếng vá với\n"
 "       "
 
-#: gitk:8926
+#: gitk:9024
 msgid ""
 " differs from\n"
 "       "
 msgstr ""
 " khác biệt từ\n"
 "       "
 
-#: gitk:8928
+#: gitk:9026
 msgid ""
 "Diff of commits:\n"
 "\n"
 msgstr ""
 "Khác biệt của lần chuyển giao (commit):\n"
 "\n"
 
-#: gitk:8940 gitk:8949
+#: gitk:9038 gitk:9047
 #, tcl-format
 msgid " has %s children - stopping\n"
 msgstr " có %s con - dừng\n"
 
-#: gitk:8968
+#: gitk:9066
 #, tcl-format
 msgid "Error writing commit to file: %s"
 msgstr "Gặp lỗi trong quá trình ghi lần chuyển giao vào tập tin: %s"
 
-#: gitk:8974
+#: gitk:9072
 #, tcl-format
 msgid "Error diffing commits: %s"
 msgstr "Gặp lỗi khi so sánh sự khác biệt giữa các lần chuyển giao: %s"
 
-#: gitk:9020
+#: gitk:9118
 msgid "Top"
 msgstr "Đỉnh"
 
-#: gitk:9021
+#: gitk:9119
 msgid "From"
 msgstr "Từ"
 
-#: gitk:9026
+#: gitk:9124
 msgid "To"
 msgstr "Đến"
 
-#: gitk:9050
+#: gitk:9148
 msgid "Generate patch"
 msgstr "Tạo miếng vá"
 
-#: gitk:9052
+#: gitk:9150
 msgid "From:"
 msgstr "Từ:"
 
-#: gitk:9061
+#: gitk:9159
 msgid "To:"
 msgstr "Đến:"
 
-#: gitk:9070
+#: gitk:9168
 msgid "Reverse"
 msgstr "Đảo ngược"
 
-#: gitk:9072 gitk:9268
+#: gitk:9170 gitk:9366
 msgid "Output file:"
 msgstr "Tập tin kết xuất:"
 
-#: gitk:9078
+#: gitk:9176
 msgid "Generate"
 msgstr "Tạo"
 
-#: gitk:9116
+#: gitk:9214
 msgid "Error creating patch:"
 msgstr "Gặp lỗi khi tạo miếng vá:"
 
-#: gitk:9139 gitk:9256 gitk:9313
+#: gitk:9237 gitk:9354 gitk:9411
 msgid "ID:"
 msgstr "ID:"
 
-#: gitk:9148
+#: gitk:9246
 msgid "Tag name:"
 msgstr "Tên thẻ:"
 
-#: gitk:9151
+#: gitk:9249
 msgid "Tag message is optional"
 msgstr "Ghi chú thẻ chỉ là tùy chọn"
 
-#: gitk:9153
+#: gitk:9251
 msgid "Tag message:"
 msgstr "Ghi chú cho thẻ:"
 
-#: gitk:9157 gitk:9322
+#: gitk:9255 gitk:9420
 msgid "Create"
 msgstr "Tạo"
 
-#: gitk:9175
+#: gitk:9273
 msgid "No tag name specified"
 msgstr "Chưa chỉ ra tên của thẻ"
 
-#: gitk:9179
+#: gitk:9277
 #, tcl-format
 msgid "Tag \"%s\" already exists"
 msgstr "Thẻ “%s” đã có sẵn rồi"
 
-#: gitk:9189
+#: gitk:9287
 msgid "Error creating tag:"
 msgstr "Gặp lỗi khi tạo thẻ:"
 
-#: gitk:9265
+#: gitk:9363
 msgid "Command:"
 msgstr "Lệnh:"
 
-#: gitk:9273
+#: gitk:9371
 msgid "Write"
 msgstr "Ghi"
 
-#: gitk:9291
+#: gitk:9389
 msgid "Error writing commit:"
 msgstr "Gặp lỗi trong quá trình ghi chuyển giao:"
 
-#: gitk:9318
+#: gitk:9416
 msgid "Name:"
 msgstr "Tên:"
 
-#: gitk:9341
+#: gitk:9439
 msgid "Please specify a name for the new branch"
 msgstr "Vui lòng chỉ định tên cho nhánh mới"
 
-#: gitk:9346
+#: gitk:9444
 #, tcl-format
 msgid "Branch '%s' already exists. Overwrite?"
 msgstr "Nhánh “%s” đã có từ trước rồi. Ghi đè?"
 
-#: gitk:9413
+#: gitk:9511
 #, tcl-format
 msgid "Commit %s is already included in branch %s -- really re-apply it?"
 msgstr ""
 "Lần chuyển giao %s đã sẵn được bao gồm trong nhánh %s -- bạn có thực sự muốn "
 "áp dụng lại nó không?"
 
-#: gitk:9418
+#: gitk:9516
 msgid "Cherry-picking"
 msgstr "Đang cherry-pick"
 
-#: gitk:9427
+#: gitk:9525
 #, tcl-format
 msgid ""
 "Cherry-pick failed because of local changes to file '%s'.\n"
 "Please commit, reset or stash your changes and try again."
 msgstr ""
 "Cherry-pick gặp lỗi bởi vì các thay đổi nội bộ tập tin “%s”.\n"
 "Xin hãy chuyển giao, reset hay stash các thay đổi của bạn sau đó thử lại."
 
-#: gitk:9433
+#: gitk:9531
 msgid ""
 "Cherry-pick failed because of merge conflict.\n"
 "Do you wish to run git citool to resolve it?"
 msgstr ""
 "Cherry-pick gặp lỗi bởi vì xung đột trong hòa trộn.\n"
 "Bạn có muốn chạy lệnh “git citool” để giải quyết vấn đề này không?"
 
-#: gitk:9449 gitk:9507
+#: gitk:9547 gitk:9605
 msgid "No changes committed"
 msgstr "Không có thay đổi nào cần chuyển giao"
 
-#: gitk:9476
+#: gitk:9574
 #, tcl-format
 msgid "Commit %s is not included in branch %s -- really revert it?"
 msgstr ""
 "Lần chuyển giao %s không được bao gồm trong nhánh %s -- bạn có thực sự muốn "
 "“revert” nó không?"
 
-#: gitk:9481
+#: gitk:9579
 msgid "Reverting"
 msgstr "Đang hoàn tác"
 
-#: gitk:9489
+#: gitk:9587
 #, tcl-format
 msgid ""
 "Revert failed because of local changes to the following files:%s Please "
 "commit, reset or stash  your changes and try again."
 msgstr ""
 "Revert gặp lỗi bởi vì tập tin sau đã được thay đổi nội bộ:%s\n"
 "Xin hãy chạy lệnh “commit”, “reset” hoặc “stash” rồi thử lại."
 
-#: gitk:9493
+#: gitk:9591
 msgid ""
 "Revert failed because of merge conflict.\n"
 " Do you wish to run git citool to resolve it?"
 msgstr ""
 "Revert gặp lỗi bởi vì xung đột hòa trộn.\n"
 " Bạn có muốn chạy lệnh “git citool” để phân giải nó không?"
 
-#: gitk:9536
+#: gitk:9634
 msgid "Confirm reset"
 msgstr "Xác nhật đặt lại"
 
-#: gitk:9538
+#: gitk:9636
 #, tcl-format
 msgid "Reset branch %s to %s?"
 msgstr "Đặt lại nhánh “%s” thành “%s”?"
 
-#: gitk:9540
+#: gitk:9638
 msgid "Reset type:"
 msgstr "Kiểu đặt lại:"
 
-#: gitk:9543
+#: gitk:9641
 msgid "Soft: Leave working tree and index untouched"
 msgstr "Mềm: Không động đến thư mục làm việc và bảng mục lục"
 
-#: gitk:9546
+#: gitk:9644
 msgid "Mixed: Leave working tree untouched, reset index"
 msgstr ""
 "Pha trộn: Không động chạm đến thư mục làm việc nhưng đặt lại bảng mục lục"
 
-#: gitk:9549
+#: gitk:9647
 msgid ""
 "Hard: Reset working tree and index\n"
 "(discard ALL local changes)"
 msgstr ""
 "Hard: Đặt lại cây làm việc và mục lục\n"
 "(hủy bỏ MỌI thay đổi nội bộ)"
 
-#: gitk:9566
+#: gitk:9664
 msgid "Resetting"
 msgstr "Đang đặt lại"
 
-#: gitk:9626
+#: gitk:9724
 msgid "Checking out"
 msgstr "Đang checkout"
 
-#: gitk:9679
+#: gitk:9777
 msgid "Cannot delete the currently checked-out branch"
 msgstr "Không thể xóa nhánh hiện tại đang được lấy ra"
 
-#: gitk:9685
+#: gitk:9783
 #, tcl-format
 msgid ""
 "The commits on branch %s aren't on any other branch.\n"
 "Really delete branch %s?"
 msgstr ""
 "Các lần chuyển giao trên nhánh %s không ở trên nhánh khác.\n"
 "Thực sự muốn xóa nhánh %s?"
 
-#: gitk:9716
+#: gitk:9814
 #, tcl-format
 msgid "Tags and heads: %s"
 msgstr "Thẻ và Đầu: %s"
 
-#: gitk:9731
+#: gitk:9829
 msgid "Filter"
 msgstr "Bộ lọc"
 
-#: gitk:10027
+#: gitk:10125
 msgid ""
 "Error reading commit topology information; branch and preceding/following "
 "tag information will be incomplete."
 msgstr ""
 "Gặp lỗi khi đọc thông tin hình học lần chuyển giao; thông tin nhánh và thẻ "
 "trước/sau sẽ không hoàn thiện."
 
-#: gitk:11004
+#: gitk:11102
 msgid "Tag"
 msgstr "Thẻ"
 
-#: gitk:11008
+#: gitk:11106
 msgid "Id"
 msgstr "Id"
 
-#: gitk:11091
+#: gitk:11189
 msgid "Gitk font chooser"
 msgstr "Hộp thoại chọn phông Gitk"
 
-#: gitk:11108
+#: gitk:11206
 msgid "B"
 msgstr "B"
 
-#: gitk:11111
+#: gitk:11209
 msgid "I"
 msgstr "I"
 
-#: gitk:11229
+#: gitk:11327
 msgid "Commit list display options"
 msgstr "Các tùy chọn về hiển thị danh sách lần chuyển giao"
 
-#: gitk:11232
+#: gitk:11330
 msgid "Maximum graph width (lines)"
 msgstr "Độ rộng biểu đồ tối đa (dòng)"
 
-#: gitk:11235
-#, tcl-format
+#: gitk:11334
+#, no-tcl-format
 msgid "Maximum graph width (% of pane)"
 msgstr "Độ rộng biểu đồ tối đa (% của bảng)"
 
-#: gitk:11238
+#: gitk:11337
 msgid "Show local changes"
 msgstr "Hiển thị các thay đổi nội bộ"
 
-#: gitk:11241
+#: gitk:11340
 msgid "Auto-select SHA1 (length)"
 msgstr "Tự chọn SHA1 (độ dài)"
 
-#: gitk:11245
+#: gitk:11344
 msgid "Hide remote refs"
 msgstr "Ẩn tham chiếu đến máy chủ"
 
-#: gitk:11249
+#: gitk:11348
 msgid "Diff display options"
 msgstr "Các tùy chọn trình bày các khác biệt"
 
-#: gitk:11251
+#: gitk:11350
 msgid "Tab spacing"
 msgstr "Khoảng cách tab"
 
-#: gitk:11254
+#: gitk:11353
 msgid "Display nearby tags/heads"
 msgstr "Hiển thị các thẻ/đầu xung quanh"
 
-#: gitk:11257
+#: gitk:11356
 msgid "Maximum # tags/heads to show"
 msgstr "Số lượng thẻ/đầu tối đa sẽ hiển thị"
 
-#: gitk:11260
+#: gitk:11359
 msgid "Limit diffs to listed paths"
 msgstr "Giới hạn các khác biệt cho đường dẫn đã liệt kê"
 
-#: gitk:11263
+#: gitk:11362
 msgid "Support per-file encodings"
 msgstr "Hỗ trợ mã hóa mỗi-dòng"
 
-#: gitk:11269 gitk:11416
+#: gitk:11368 gitk:11515
 msgid "External diff tool"
 msgstr "Công cụ so sánh từ bên ngoài"
 
-#: gitk:11270
+#: gitk:11369
 msgid "Choose..."
 msgstr "Chọn..."
 
-#: gitk:11275
+#: gitk:11374
 msgid "General options"
 msgstr "Các tùy chọn chung"
 
-#: gitk:11278
+#: gitk:11377
 msgid "Use themed widgets"
 msgstr "Dùng các widget chủ đề"
 
-#: gitk:11280
+#: gitk:11379
 msgid "(change requires restart)"
 msgstr "(để thay đổi cần khởi động lại)"
 
-#: gitk:11282
+#: gitk:11381
 msgid "(currently unavailable)"
 msgstr "(hiện tại không sẵn sàng)"
 
-#: gitk:11293
+#: gitk:11392
 msgid "Colors: press to choose"
 msgstr "Màu sắc: bấm vào nút phía dưới để chọn màu"
 
-#: gitk:11296
+#: gitk:11395
 msgid "Interface"
 msgstr "Giao diện"
 
-#: gitk:11297
+#: gitk:11396
 msgid "interface"
 msgstr "giao diện"
 
-#: gitk:11300
+#: gitk:11399
 msgid "Background"
 msgstr "Nền"
 
-#: gitk:11301 gitk:11331
+#: gitk:11400 gitk:11430
 msgid "background"
 msgstr "nền"
 
-#: gitk:11304
+#: gitk:11403
 msgid "Foreground"
 msgstr "Tiền cảnh"
 
-#: gitk:11305
+#: gitk:11404
 msgid "foreground"
 msgstr "tiền cảnh"
 
-#: gitk:11308
+#: gitk:11407
 msgid "Diff: old lines"
 msgstr "So sánh: dòng cũ"
 
-#: gitk:11309
+#: gitk:11408
 msgid "diff old lines"
 msgstr "diff dòng cũ"
 
-#: gitk:11313
+#: gitk:11412
 msgid "Diff: new lines"
 msgstr "So sánh: dòng mới"
 
-#: gitk:11314
+#: gitk:11413
 msgid "diff new lines"
 msgstr "màu dòng mới"
 
-#: gitk:11318
+#: gitk:11417
 msgid "Diff: hunk header"
 msgstr "So sánh: phần đầu của đoạn"
 
-#: gitk:11320
+#: gitk:11419
 msgid "diff hunk header"
 msgstr "màu của phần đầu của đoạn khi so sánh"
 
-#: gitk:11324
+#: gitk:11423
 msgid "Marked line bg"
 msgstr "Nền dòng đánh dấu"
 
-#: gitk:11326
+#: gitk:11425
 msgid "marked line background"
 msgstr "nền dòng được đánh dấu"
 
-#: gitk:11330
+#: gitk:11429
 msgid "Select bg"
 msgstr "Màu nền"
 
-#: gitk:11339
+#: gitk:11438
 msgid "Fonts: press to choose"
 msgstr "Phông chữ: bấm vào các nút ở dưới để chọn"
 
-#: gitk:11341
+#: gitk:11440
 msgid "Main font"
 msgstr "Phông chữ chính"
 
-#: gitk:11342
+#: gitk:11441
 msgid "Diff display font"
 msgstr "Phông chữ dùng khi so sánh"
 
-#: gitk:11343
+#: gitk:11442
 msgid "User interface font"
 msgstr "Phông chữ giao diện"
 
-#: gitk:11365
+#: gitk:11464
 msgid "Gitk preferences"
 msgstr "Cá nhân hóa các cài đặt cho Gitk"
 
-#: gitk:11374
+#: gitk:11473
 msgid "General"
 msgstr "Chung"
 
-#: gitk:11375
+#: gitk:11474
 msgid "Colors"
 msgstr "Màu sắc"
 
-#: gitk:11376
+#: gitk:11475
 msgid "Fonts"
 msgstr "Phông chữ"
 
-#: gitk:11426
+#: gitk:11525
 #, tcl-format
 msgid "Gitk: choose color for %s"
 msgstr "Gitk: chọn màu cho %s"
 
-#: gitk:12080
+#: gitk:12242
 msgid "Cannot find a git repository here."
 msgstr "Không thể tìm thấy kho git ở đây."
 
-#: gitk:12127
+#: gitk:12289
 #, tcl-format
 msgid "Ambiguous argument '%s': both revision and filename"
 msgstr "Đối số “%s” chưa rõ ràng: vừa là điểm xét duyệt vừa là tên tập tin"
 
-#: gitk:12139
+#: gitk:12301
 msgid "Bad arguments to gitk:"
 msgstr "Đối số không hợp lệ cho gitk:"
 
-#: gitk:12242
+#: gitk:12405
 msgid "Command line"
 msgstr "Dòng lệnh"
+
+#~ msgid "next"
+#~ msgstr "tiếp"
+
+#~ msgid "prev"
+#~ msgstr "trước"
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-log and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-log differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-ls-files and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-ls-files differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-ls-remote and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-ls-remote differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-ls-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-ls-tree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-mailinfo and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-mailinfo differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-mailsplit and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-mailsplit differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-merge and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-merge differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-merge-base and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-merge-base differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-merge-file and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-merge-file differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-merge-index and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-merge-index differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-merge-ours and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-merge-ours differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-merge-recursive and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-merge-recursive differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-merge-subtree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-merge-subtree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-merge-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-merge-tree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-mktag and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-mktag differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-mktree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-mktree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-mv and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-mv differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-name-rev and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-name-rev differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-notes and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-notes differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-p4 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-p4
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-p4	2017-10-10 12:31:42.102632151 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-p4	2017-10-10 13:04:11.694560700 +0800
@@ -1439,13 +1439,13 @@
             print
             print "P4 workspace prepared for submission."
             print "To submit or revert, go to client workspace"
             print "  " + self.clientPath
             print
             print "To submit, use \"p4 submit\" to write a new description,"
-            print "or \"p4 submit -i %s\" to use the one prepared by" \
+            print "or \"p4 submit -i <%s\" to use the one prepared by" \
                   " \"git p4\"." % fileName
             print "You can delete the file \"%s\" when finished." % fileName
 
             if self.preserveUser and p4User and not self.p4UserIsMe(p4User):
                 print "To preserve change ownership by user %s, you must\n" \
                       "do \"p4 change -f <change>\" after submitting and\n" \
@@ -1912,13 +1912,16 @@
                 optparse.make_option("--import-local", dest="importIntoRemotes", action="store_false",
                                      help="Import into refs/heads/ , not refs/remotes"),
                 optparse.make_option("--max-changes", dest="maxChanges"),
                 optparse.make_option("--keep-path", dest="keepRepoPath", action='store_true',
                                      help="Keep entire BRANCH/DIR/SUBDIR prefix during import"),
                 optparse.make_option("--use-client-spec", dest="useClientSpec", action='store_true',
-                                     help="Only sync files that are included in the Perforce Client Spec")
+                                     help="Only sync files that are included in the Perforce Client Spec"),
+                optparse.make_option("-/", dest="cloneExclude",
+                                     action="append", type="string",
+                                     help="exclude depot path"),
         ]
         self.description = """Imports from Perforce into a git repository.\n
     example:
     //depot/my/project/ -- to import the current head
     //depot/my/project/@all -- to import everything
     //depot/my/project/@1,6 -- to import only from revision 1 to 6
@@ -1947,12 +1950,18 @@
         self.tempBranches = []
         self.tempBranchLocation = "git-p4-tmp"
 
         if gitConfig("git-p4.syncFromOrigin") == "false":
             self.syncWithOrigin = False
 
+    # This is required for the "append" cloneExclude action
+    def ensure_value(self, attr, value):
+        if not hasattr(self, attr) or getattr(self, attr) is None:
+            setattr(self, attr, value)
+        return getattr(self, attr)
+
     # Force a checkpoint in fast-import and wait for it to finish
     def checkpoint(self):
         self.gitStream.write("checkpoint\n\n")
         self.gitStream.write("progress checkpoint\n\n")
         out = self.gitOutput.readline()
         if self.verbose:
@@ -3098,28 +3107,19 @@
         self.description = "Creates a new git repository and imports from Perforce into it"
         self.usage = "usage: %prog [options] //depot/path[@revRange]"
         self.options += [
             optparse.make_option("--destination", dest="cloneDestination",
                                  action='store', default=None,
                                  help="where to leave result of the clone"),
-            optparse.make_option("-/", dest="cloneExclude",
-                                 action="append", type="string",
-                                 help="exclude depot path"),
             optparse.make_option("--bare", dest="cloneBare",
                                  action="store_true", default=False),
         ]
         self.cloneDestination = None
         self.needsGit = False
         self.cloneBare = False
 
-    # This is required for the "append" cloneExclude action
-    def ensure_value(self, attr, value):
-        if not hasattr(self, attr) or getattr(self, attr) is None:
-            setattr(self, attr, value)
-        return getattr(self, attr)
-
     def defaultDestination(self, args):
         ## TODO: use common prefix of args?
         depotPath = args[0]
         depotDir = re.sub("(@[^@]*)$", "", depotPath)
         depotDir = re.sub("(#[^#]*)$", "", depotDir)
         depotDir = re.sub(r"\.\.\.$", "", depotDir)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-p4.py /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-p4.py
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-p4.py	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-p4.py	2015-05-01 03:12:02.000000000 +0800
@@ -1439,13 +1439,13 @@
             print
             print "P4 workspace prepared for submission."
             print "To submit or revert, go to client workspace"
             print "  " + self.clientPath
             print
             print "To submit, use \"p4 submit\" to write a new description,"
-            print "or \"p4 submit -i %s\" to use the one prepared by" \
+            print "or \"p4 submit -i <%s\" to use the one prepared by" \
                   " \"git p4\"." % fileName
             print "You can delete the file \"%s\" when finished." % fileName
 
             if self.preserveUser and p4User and not self.p4UserIsMe(p4User):
                 print "To preserve change ownership by user %s, you must\n" \
                       "do \"p4 change -f <change>\" after submitting and\n" \
@@ -1912,13 +1912,16 @@
                 optparse.make_option("--import-local", dest="importIntoRemotes", action="store_false",
                                      help="Import into refs/heads/ , not refs/remotes"),
                 optparse.make_option("--max-changes", dest="maxChanges"),
                 optparse.make_option("--keep-path", dest="keepRepoPath", action='store_true',
                                      help="Keep entire BRANCH/DIR/SUBDIR prefix during import"),
                 optparse.make_option("--use-client-spec", dest="useClientSpec", action='store_true',
-                                     help="Only sync files that are included in the Perforce Client Spec")
+                                     help="Only sync files that are included in the Perforce Client Spec"),
+                optparse.make_option("-/", dest="cloneExclude",
+                                     action="append", type="string",
+                                     help="exclude depot path"),
         ]
         self.description = """Imports from Perforce into a git repository.\n
     example:
     //depot/my/project/ -- to import the current head
     //depot/my/project/@all -- to import everything
     //depot/my/project/@1,6 -- to import only from revision 1 to 6
@@ -1947,12 +1950,18 @@
         self.tempBranches = []
         self.tempBranchLocation = "git-p4-tmp"
 
         if gitConfig("git-p4.syncFromOrigin") == "false":
             self.syncWithOrigin = False
 
+    # This is required for the "append" cloneExclude action
+    def ensure_value(self, attr, value):
+        if not hasattr(self, attr) or getattr(self, attr) is None:
+            setattr(self, attr, value)
+        return getattr(self, attr)
+
     # Force a checkpoint in fast-import and wait for it to finish
     def checkpoint(self):
         self.gitStream.write("checkpoint\n\n")
         self.gitStream.write("progress checkpoint\n\n")
         out = self.gitOutput.readline()
         if self.verbose:
@@ -3098,28 +3107,19 @@
         self.description = "Creates a new git repository and imports from Perforce into it"
         self.usage = "usage: %prog [options] //depot/path[@revRange]"
         self.options += [
             optparse.make_option("--destination", dest="cloneDestination",
                                  action='store', default=None,
                                  help="where to leave result of the clone"),
-            optparse.make_option("-/", dest="cloneExclude",
-                                 action="append", type="string",
-                                 help="exclude depot path"),
             optparse.make_option("--bare", dest="cloneBare",
                                  action="store_true", default=False),
         ]
         self.cloneDestination = None
         self.needsGit = False
         self.cloneBare = False
 
-    # This is required for the "append" cloneExclude action
-    def ensure_value(self, attr, value):
-        if not hasattr(self, attr) or getattr(self, attr) is None:
-            setattr(self, attr, value)
-        return getattr(self, attr)
-
     def defaultDestination(self, args):
         ## TODO: use common prefix of args?
         depotPath = args[0]
         depotDir = re.sub("(@[^@]*)$", "", depotPath)
         depotDir = re.sub("(#[^#]*)$", "", depotDir)
         depotDir = re.sub(r"\.\.\.$", "", depotDir)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-pack-objects and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-pack-objects differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-pack-redundant and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-pack-redundant differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-pack-refs and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-pack-refs differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-patch-id and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-patch-id differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-prune and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-prune differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-prune-packed and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-prune-packed differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-push and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-push differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-read-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-read-tree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-receive-pack and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-receive-pack differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-reflog and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-reflog differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-remote and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-remote differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-remote-ext and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-remote-ext differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-remote-fd and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-remote-fd differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-remote-testsvn and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-remote-testsvn differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-repack and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-repack differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-replace and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-replace differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-rerere and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-rerere differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-reset and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-reset differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-revert and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-revert differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-rev-list and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-rev-list differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-rev-parse and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-rev-parse differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-rm and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-rm differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/GIT-SCRIPT-DEFINES /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/GIT-SCRIPT-DEFINES
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/GIT-SCRIPT-DEFINES	2017-10-10 12:31:41.850632160 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/GIT-SCRIPT-DEFINES	2017-10-10 13:04:11.446560709 +0800
@@ -1 +1 @@
-/bin/sh:diff:2.3.10: /usr/local/share/locale:YesPlease::: /usr/local/share/gitweb:/usr/bin/perl
+/bin/sh:diff:2.4.0: /usr/local/share/locale:YesPlease::: /usr/local/share/gitweb:/usr/bin/perl
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-send-email /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-send-email
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-send-email	2017-10-10 12:31:42.090632151 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-send-email	2017-10-10 13:04:11.682560700 +0800
@@ -760,12 +760,13 @@
 	print "The following files are 8bit, but do not declare " .
 		"a Content-Transfer-Encoding.\n";
 	foreach my $f (sort keys %broken_encoding) {
 		print "    $f\n";
 	}
 	$auto_8bit_encoding = ask("Which 8bit encoding should I declare [UTF-8]? ",
+				  valid_re => qr/.{4}/, confirm_only => 1,
 				  default => "UTF-8");
 }
 
 if (!$force) {
 	for my $f (@files) {
 		if (get_patch_subject($f) =~ /\Q*** SUBJECT HERE ***\E/) {
@@ -1175,13 +1176,13 @@
 		    }
 	       @cc);
 	my $to = join (",\n\t", @recipients);
 	@recipients = unique_email_list(@recipients,@cc,@bcclist);
 	@recipients = (map { extract_valid_address_or_die($_) } @recipients);
 	my $date = format_2822_time($time++);
-	my $gitversion = '2.3.10';
+	my $gitversion = '2.4.0';
 	if ($gitversion =~ m/..GIT_VERSION../) {
 	    $gitversion = Git::version();
 	}
 
 	my $cc = join(",\n\t", unique_email_list(@cc));
 	my $ccline = "";
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-send-email.perl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-send-email.perl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-send-email.perl	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-send-email.perl	2015-05-01 03:12:02.000000000 +0800
@@ -759,12 +759,13 @@
 	print "The following files are 8bit, but do not declare " .
 		"a Content-Transfer-Encoding.\n";
 	foreach my $f (sort keys %broken_encoding) {
 		print "    $f\n";
 	}
 	$auto_8bit_encoding = ask("Which 8bit encoding should I declare [UTF-8]? ",
+				  valid_re => qr/.{4}/, confirm_only => 1,
 				  default => "UTF-8");
 }
 
 if (!$force) {
 	for my $f (@files) {
 		if (get_patch_subject($f) =~ /\Q*** SUBJECT HERE ***\E/) {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-send-pack and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-send-pack differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-shell and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-shell differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-sh-i18n--envsubst and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-sh-i18n--envsubst differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-shortlog and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-shortlog differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-show and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-show differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-show-branch and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-show-branch differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-show-index and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-show-index differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-show-ref and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-show-ref differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-stage and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-stage differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-status and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-status differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-stripspace and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-stripspace differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-submodule /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-submodule
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-submodule	2017-10-10 12:31:41.914632158 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-submodule	2017-10-10 13:04:11.510560706 +0800
@@ -19,21 +19,12 @@
 . git-sh-i18n
 . git-parse-remote
 require_work_tree
 wt_prefix=$(git rev-parse --show-prefix)
 cd_to_toplevel
 
-# Restrict ourselves to a vanilla subset of protocols; the URLs
-# we get are under control of a remote repository, and we do not
-# want them kicking off arbitrary git-remote-* programs.
-#
-# If the user has already specified a set of allowed protocols,
-# we assume they know what they're doing and use that instead.
-: ${GIT_ALLOW_PROTOCOL=file:git:http:https:ssh}
-export GIT_ALLOW_PROTOCOL
-
 command=
 branch=
 force=
 reference=
 cached=
 recursive=
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-submodule.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-submodule.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-submodule.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-submodule.sh	2015-05-01 03:12:02.000000000 +0800
@@ -19,21 +19,12 @@
 . git-sh-i18n
 . git-parse-remote
 require_work_tree
 wt_prefix=$(git rev-parse --show-prefix)
 cd_to_toplevel
 
-# Restrict ourselves to a vanilla subset of protocols; the URLs
-# we get are under control of a remote repository, and we do not
-# want them kicking off arbitrary git-remote-* programs.
-#
-# If the user has already specified a set of allowed protocols,
-# we assume they know what they're doing and use that instead.
-: ${GIT_ALLOW_PROTOCOL=file:git:http:https:ssh}
-export GIT_ALLOW_PROTOCOL
-
 command=
 branch=
 force=
 reference=
 cached=
 recursive=
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-svn /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-svn
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-svn	2017-10-10 12:31:42.094632151 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-svn	2017-10-10 13:04:11.690560700 +0800
@@ -6,23 +6,19 @@
 use warnings;
 use strict;
 use vars qw/	$AUTHOR $VERSION
 		$sha1 $sha1_short $_revision $_repository
 		$_q $_authors $_authors_prog %users/;
 $AUTHOR = 'Eric Wong <normalperson@yhbt.net>';
-$VERSION = '2.3.10';
+$VERSION = '2.4.0';
 
 use Carp qw/croak/;
-use Digest::MD5;
-use IO::File qw//;
 use File::Basename qw/dirname basename/;
 use File::Path qw/mkpath/;
 use File::Spec;
-use File::Find;
 use Getopt::Long qw/:config gnu_getopt no_ignore_case auto_abbrev/;
-use IPC::Open3;
 use Memoize;
 
 use Git::SVN;
 use Git::SVN::Editor;
 use Git::SVN::Fetcher;
 use Git::SVN::Ra;
@@ -296,13 +292,12 @@
 	'gc' => [ \&cmd_gc,
 		  "Compress unhandled.log files in .git/svn and remove " .
 		  "index files in .git/svn",
 		{} ],
 );
 
-use Term::ReadLine;
 package FakeTerm;
 sub new {
 	my ($class, $reason) = @_;
 	return bless \$reason, shift;
 }
 sub readline {
@@ -311,12 +306,13 @@
 }
 package main;
 
 my $term;
 sub term_init {
 	$term = eval {
+		require Term::ReadLine;
 		$ENV{"GIT_SVN_NOTTY"}
 			? new Term::ReadLine 'git-svn', \*STDIN, \*STDOUT
 			: new Term::ReadLine 'git-svn';
 	};
 	if ($@) {
 		$term = new FakeTerm "$@: going non-interactive";
@@ -1171,12 +1167,13 @@
 
 	if ($dst =~ /^https:/ && $src =~ /^http:/) {
 		$src=~s/^http:/https:/;
 	}
 
 	::_req_svn();
+	require SVN::Client;
 
 	my $ctx = SVN::Client->new(
 		config => SVN::Core::config_get_config(
 			$Git::SVN::Ra::config_dir
 		),
 		log_msg => sub {
@@ -1691,17 +1688,19 @@
 	die "Cannot find SVN revision $target\n" unless defined($c);
 	$gs->rev_map_set($r, $c, 'reset', $uuid);
 	print "r$r = $c ($gs->{ref_id})\n";
 }
 
 sub cmd_gc {
+	require File::Find;
 	if (!can_compress()) {
 		warn "Compress::Zlib could not be found; unhandled.log " .
 		     "files will not be compressed.\n";
 	}
-	find({ wanted => \&gc_directory, no_chdir => 1}, "$ENV{GIT_DIR}/svn");
+	File::Find::find({ wanted => \&gc_directory, no_chdir => 1},
+			 "$ENV{GIT_DIR}/svn");
 }
 
 ########################### utility functions #########################
 
 sub rebase_cmd {
 	my @cmd = qw/rebase/;
@@ -2120,12 +2119,13 @@
 	return ("file", $diff_status);
 }
 
 sub md5sum {
 	my $arg = shift;
 	my $ref = ref $arg;
+	require Digest::MD5;
 	my $md5 = Digest::MD5->new();
         if ($ref eq 'GLOB' || $ref eq 'IO::File' || $ref eq 'File::Temp') {
 		$md5->addfile($arg) or croak $!;
 	} elsif ($ref eq 'SCALAR') {
 		$md5->add($$arg) or croak $!;
 	} elsif (!$ref) {
@@ -2146,12 +2146,13 @@
 
 		my $res;
 		while ($res = sysread($in_fh, my $str, 1024)) {
 			$gz->gzwrite($str) or
 				die "Unable to write: ".$gz->gzerror()."!\n";
 		}
+		no warnings 'once'; # $File::Find::name would warn
 		unlink $_ or die "unlink $File::Find::name: $!\n";
 	} elsif (-f $_ && basename($_) eq "index") {
 		unlink $_ or die "unlink $_: $!\n";
 	}
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-svn.perl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-svn.perl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-svn.perl	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-svn.perl	2015-05-01 03:12:02.000000000 +0800
@@ -8,20 +8,16 @@
 		$sha1 $sha1_short $_revision $_repository
 		$_q $_authors $_authors_prog %users/;
 $AUTHOR = 'Eric Wong <normalperson@yhbt.net>';
 $VERSION = '@@GIT_VERSION@@';
 
 use Carp qw/croak/;
-use Digest::MD5;
-use IO::File qw//;
 use File::Basename qw/dirname basename/;
 use File::Path qw/mkpath/;
 use File::Spec;
-use File::Find;
 use Getopt::Long qw/:config gnu_getopt no_ignore_case auto_abbrev/;
-use IPC::Open3;
 use Memoize;
 
 use Git::SVN;
 use Git::SVN::Editor;
 use Git::SVN::Fetcher;
 use Git::SVN::Ra;
@@ -295,13 +291,12 @@
 	'gc' => [ \&cmd_gc,
 		  "Compress unhandled.log files in .git/svn and remove " .
 		  "index files in .git/svn",
 		{} ],
 );
 
-use Term::ReadLine;
 package FakeTerm;
 sub new {
 	my ($class, $reason) = @_;
 	return bless \$reason, shift;
 }
 sub readline {
@@ -310,12 +305,13 @@
 }
 package main;
 
 my $term;
 sub term_init {
 	$term = eval {
+		require Term::ReadLine;
 		$ENV{"GIT_SVN_NOTTY"}
 			? new Term::ReadLine 'git-svn', \*STDIN, \*STDOUT
 			: new Term::ReadLine 'git-svn';
 	};
 	if ($@) {
 		$term = new FakeTerm "$@: going non-interactive";
@@ -1170,12 +1166,13 @@
 
 	if ($dst =~ /^https:/ && $src =~ /^http:/) {
 		$src=~s/^http:/https:/;
 	}
 
 	::_req_svn();
+	require SVN::Client;
 
 	my $ctx = SVN::Client->new(
 		config => SVN::Core::config_get_config(
 			$Git::SVN::Ra::config_dir
 		),
 		log_msg => sub {
@@ -1690,17 +1687,19 @@
 	die "Cannot find SVN revision $target\n" unless defined($c);
 	$gs->rev_map_set($r, $c, 'reset', $uuid);
 	print "r$r = $c ($gs->{ref_id})\n";
 }
 
 sub cmd_gc {
+	require File::Find;
 	if (!can_compress()) {
 		warn "Compress::Zlib could not be found; unhandled.log " .
 		     "files will not be compressed.\n";
 	}
-	find({ wanted => \&gc_directory, no_chdir => 1}, "$ENV{GIT_DIR}/svn");
+	File::Find::find({ wanted => \&gc_directory, no_chdir => 1},
+			 "$ENV{GIT_DIR}/svn");
 }
 
 ########################### utility functions #########################
 
 sub rebase_cmd {
 	my @cmd = qw/rebase/;
@@ -2119,12 +2118,13 @@
 	return ("file", $diff_status);
 }
 
 sub md5sum {
 	my $arg = shift;
 	my $ref = ref $arg;
+	require Digest::MD5;
 	my $md5 = Digest::MD5->new();
         if ($ref eq 'GLOB' || $ref eq 'IO::File' || $ref eq 'File::Temp') {
 		$md5->addfile($arg) or croak $!;
 	} elsif ($ref eq 'SCALAR') {
 		$md5->add($$arg) or croak $!;
 	} elsif (!$ref) {
@@ -2145,12 +2145,13 @@
 
 		my $res;
 		while ($res = sysread($in_fh, my $str, 1024)) {
 			$gz->gzwrite($str) or
 				die "Unable to write: ".$gz->gzerror()."!\n";
 		}
+		no warnings 'once'; # $File::Find::name would warn
 		unlink $_ or die "unlink $File::Find::name: $!\n";
 	} elsif (-f $_ && basename($_) eq "index") {
 		unlink $_ or die "unlink $_: $!\n";
 	}
 }
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-symbolic-ref and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-symbolic-ref differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-tag and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-tag differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-unpack-file and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-unpack-file differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-unpack-objects and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-unpack-objects differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-update-index and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-update-index differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-update-ref and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-update-ref differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-update-server-info and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-update-server-info differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-upload-archive and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-upload-archive differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-upload-pack and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-upload-pack differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/GIT-USER-AGENT /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/GIT-USER-AGENT
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/GIT-USER-AGENT	2017-10-10 12:31:35.786632383 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/GIT-USER-AGENT	2017-10-10 13:04:05.494560927 +0800
@@ -1 +1 @@
-git/2.3.10
+git/2.4.0
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-var and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-var differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-verify-commit and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-verify-commit differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-verify-pack and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-verify-pack differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-verify-tag and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-verify-tag differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/GIT-VERSION-FILE /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/GIT-VERSION-FILE
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/GIT-VERSION-FILE	2017-10-10 12:31:12.302633243 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/GIT-VERSION-FILE	2017-10-10 13:03:41.986561788 +0800
@@ -1 +1 @@
-GIT_VERSION = 2.3.10
+GIT_VERSION = 2.4.0
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/GIT-VERSION-GEN /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/GIT-VERSION-GEN
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/GIT-VERSION-GEN	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/GIT-VERSION-GEN	2015-05-01 03:12:02.000000000 +0800
@@ -1,10 +1,10 @@
 #!/bin/sh
 
 GVF=GIT-VERSION-FILE
-DEF_VER=v2.3.10
+DEF_VER=v2.4.0
 
 LF='
 '
 
 # First see if there is a version file (included in release tarballs),
 # then try git-describe, then default.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitweb/GITWEB-BUILD-OPTIONS /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitweb/GITWEB-BUILD-OPTIONS
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitweb/GITWEB-BUILD-OPTIONS	2017-10-10 12:31:42.138632150 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitweb/GITWEB-BUILD-OPTIONS	2017-10-10 13:04:11.730560698 +0800
@@ -1 +1 @@
-x /usr/bin/perl -e s|++GIT_VERSION++|2.3.10|g -e s|++GIT_BINDIR++|/usr/local/bin|g -e s|++GITWEB_CONFIG++|gitweb_config.perl|g -e s|++GITWEB_CONFIG_SYSTEM++|/etc/gitweb.conf|g -e s|++GITWEB_CONFIG_COMMON++|/etc/gitweb-common.conf|g -e s|++GITWEB_HOME_LINK_STR++|projects|g -e s|++GITWEB_SITENAME++||g -e s|++GITWEB_PROJECTROOT++|/pub/git|g -e s|"++GITWEB_PROJECT_MAXDEPTH++"|2007|g -e s|++GITWEB_EXPORT_OK++||g -e s|++GITWEB_STRICT_EXPORT++||g -e s|++GITWEB_BASE_URL++||g -e s|++GITWEB_LIST++||g -e s|++GITWEB_HOMETEXT++|indextext.html|g -e s|++GITWEB_CSS++|static/gitweb.css|g -e s|++GITWEB_LOGO++|static/git-logo.png|g -e s|++GITWEB_FAVICON++|static/git-favicon.png|g -e s|++GITWEB_JS++|static/gitweb.js|g -e s|++GITWEB_SITE_HTML_HEAD_STRING++||g -e s|++GITWEB_SITE_HEADER++||g -e s|++GITWEB_SITE_FOOTER++||g -e s|++HIGHLIGHT_BIN++|highlight|g |
+x /usr/bin/perl -e s|++GIT_VERSION++|2.4.0|g -e s|++GIT_BINDIR++|/usr/local/bin|g -e s|++GITWEB_CONFIG++|gitweb_config.perl|g -e s|++GITWEB_CONFIG_SYSTEM++|/etc/gitweb.conf|g -e s|++GITWEB_CONFIG_COMMON++|/etc/gitweb-common.conf|g -e s|++GITWEB_HOME_LINK_STR++|projects|g -e s|++GITWEB_SITENAME++||g -e s|++GITWEB_PROJECTROOT++|/pub/git|g -e s|"++GITWEB_PROJECT_MAXDEPTH++"|2007|g -e s|++GITWEB_EXPORT_OK++||g -e s|++GITWEB_STRICT_EXPORT++||g -e s|++GITWEB_BASE_URL++||g -e s|++GITWEB_LIST++||g -e s|++GITWEB_HOMETEXT++|indextext.html|g -e s|++GITWEB_CSS++|static/gitweb.css|g -e s|++GITWEB_LOGO++|static/git-logo.png|g -e s|++GITWEB_FAVICON++|static/git-favicon.png|g -e s|++GITWEB_JS++|static/gitweb.js|g -e s|++GITWEB_SITE_HTML_HEAD_STRING++||g -e s|++GITWEB_SITE_HEADER++||g -e s|++GITWEB_SITE_FOOTER++||g -e s|++HIGHLIGHT_BIN++|highlight|g |
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitweb/gitweb.cgi /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitweb/gitweb.cgi
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gitweb/gitweb.cgi	2017-10-10 12:31:42.158632149 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gitweb/gitweb.cgi	2017-10-10 13:04:11.754560697 +0800
@@ -28,13 +28,13 @@
 our $number_of_git_cmds = 0;
 
 BEGIN {
 	CGI->compile() if $ENV{'MOD_PERL'};
 }
 
-our $version = "2.3.10";
+our $version = "2.4.0";
 
 our ($my_url, $my_uri, $base_url, $path_info, $home_link);
 sub evaluate_uri {
 	our $cgi;
 
 	our $my_url = $cgi->url();
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-whatchanged and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-whatchanged differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/git-write-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/git-write-tree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gpg-interface.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gpg-interface.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/gpg-interface.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/gpg-interface.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/graph.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/graph.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/graph.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/graph.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/grep.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/grep.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/grep.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/grep.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/hashmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/hashmap.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/hashmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/hashmap.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/help.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/help.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/help.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/help.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/hex.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/hex.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/hex.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/hex.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/http-backend.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/http-backend.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/http-backend.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/http-backend.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/http.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/http.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/http.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/http.c	2015-05-01 03:12:02.000000000 +0800
@@ -5,13 +5,13 @@
 #include "run-command.h"
 #include "url.h"
 #include "urlmatch.h"
 #include "credential.h"
 #include "version.h"
 #include "pkt-line.h"
-#include "transport.h"
+#include "gettext.h"
 
 int active_requests;
 int http_is_verbose;
 size_t http_post_buffer = 16 * LARGE_PACKET_MAX;
 
 #if LIBCURL_VERSION_NUM >= 0x070a06
@@ -69,12 +69,14 @@
 
 static struct curl_slist *pragma_header;
 static struct curl_slist *no_pragma_header;
 
 static struct active_request_slot *active_queue_head;
 
+static char *cached_accept_language;
+
 size_t fread_buffer(char *ptr, size_t eltsize, size_t nmemb, void *buffer_)
 {
 	size_t size = eltsize * nmemb;
 	struct buffer *buffer = buffer_;
 
 	if (size > buffer->buf.len - buffer->posn)
@@ -115,12 +117,43 @@
 
 size_t fwrite_null(char *ptr, size_t eltsize, size_t nmemb, void *strbuf)
 {
 	return eltsize * nmemb;
 }
 
+static void closedown_active_slot(struct active_request_slot *slot)
+{
+	active_requests--;
+	slot->in_use = 0;
+}
+
+static void finish_active_slot(struct active_request_slot *slot)
+{
+	closedown_active_slot(slot);
+	curl_easy_getinfo(slot->curl, CURLINFO_HTTP_CODE, &slot->http_code);
+
+	if (slot->finished != NULL)
+		(*slot->finished) = 1;
+
+	/* Store slot results so they can be read after the slot is reused */
+	if (slot->results != NULL) {
+		slot->results->curl_result = slot->curl_result;
+		slot->results->http_code = slot->http_code;
+#if LIBCURL_VERSION_NUM >= 0x070a08
+		curl_easy_getinfo(slot->curl, CURLINFO_HTTPAUTH_AVAIL,
+				  &slot->results->auth_avail);
+#else
+		slot->results->auth_avail = 0;
+#endif
+	}
+
+	/* Run callback if appropriate */
+	if (slot->callback_func != NULL)
+		slot->callback_func(slot->callback_data);
+}
+
 #ifdef USE_CURL_MULTI
 static void process_curl_messages(void)
 {
 	int num_messages;
 	struct active_request_slot *slot;
 	CURLMsg *curl_message = curl_multi_info_read(curlm, &num_messages);
@@ -301,13 +334,12 @@
 }
 #endif
 
 static CURL *get_curl_handle(void)
 {
 	CURL *result = curl_easy_init();
-	long allowed_protocols = 0;
 
 	if (!result)
 		die("curl_easy_init failed");
 
 	if (!curl_ssl_verify) {
 		curl_easy_setopt(result, CURLOPT_SSL_VERIFYPEER, 0);
@@ -349,33 +381,17 @@
 				 curl_low_speed_limit);
 		curl_easy_setopt(result, CURLOPT_LOW_SPEED_TIME,
 				 curl_low_speed_time);
 	}
 
 	curl_easy_setopt(result, CURLOPT_FOLLOWLOCATION, 1);
-	curl_easy_setopt(result, CURLOPT_MAXREDIRS, 20);
 #if LIBCURL_VERSION_NUM >= 0x071301
 	curl_easy_setopt(result, CURLOPT_POSTREDIR, CURL_REDIR_POST_ALL);
 #elif LIBCURL_VERSION_NUM >= 0x071101
 	curl_easy_setopt(result, CURLOPT_POST301, 1);
 #endif
-#if LIBCURL_VERSION_NUM >= 0x071304
-	if (is_transport_allowed("http"))
-		allowed_protocols |= CURLPROTO_HTTP;
-	if (is_transport_allowed("https"))
-		allowed_protocols |= CURLPROTO_HTTPS;
-	if (is_transport_allowed("ftp"))
-		allowed_protocols |= CURLPROTO_FTP;
-	if (is_transport_allowed("ftps"))
-		allowed_protocols |= CURLPROTO_FTPS;
-	curl_easy_setopt(result, CURLOPT_REDIR_PROTOCOLS, allowed_protocols);
-#else
-	if (transport_restrict_protocols())
-		warning("protocol restrictions not applied to curl redirects because\n"
-			"your curl version is too old (>= 7.19.4)");
-#endif
 
 	if (getenv("GIT_CURL_VERBOSE"))
 		curl_easy_setopt(result, CURLOPT_VERBOSE, 1);
 
 	curl_easy_setopt(result, CURLOPT_USERAGENT,
 		user_agent ? user_agent : git_user_agent());
@@ -387,13 +403,15 @@
 	if (curl_ssl_try)
 		curl_easy_setopt(result, CURLOPT_USE_SSL, CURLUSESSL_TRY);
 #endif
 
 	if (curl_http_proxy) {
 		curl_easy_setopt(result, CURLOPT_PROXY, curl_http_proxy);
+#if LIBCURL_VERSION_NUM >= 0x070a07
 		curl_easy_setopt(result, CURLOPT_PROXYAUTH, CURLAUTH_ANY);
+#endif
 	}
 
 	set_curl_keepalive(result);
 
 	return result;
 }
@@ -533,12 +551,15 @@
 	if (cert_auth.password != NULL) {
 		memset(cert_auth.password, 0, strlen(cert_auth.password));
 		free(cert_auth.password);
 		cert_auth.password = NULL;
 	}
 	ssl_cert_password_required = 0;
+
+	free(cached_accept_language);
+	cached_accept_language = NULL;
 }
 
 struct active_request_slot *get_active_slot(void)
 {
 	struct active_request_slot *slot = active_queue_head;
 	struct active_request_slot *newslot;
@@ -751,18 +772,12 @@
 		slot->curl_result = curl_easy_perform(slot->curl);
 		finish_active_slot(slot);
 	}
 #endif
 }
 
-static void closedown_active_slot(struct active_request_slot *slot)
-{
-	active_requests--;
-	slot->in_use = 0;
-}
-
 static void release_active_slot(struct active_request_slot *slot)
 {
 	closedown_active_slot(slot);
 	if (slot->curl && curl_session_count > min_curl_sessions) {
 #ifdef USE_CURL_MULTI
 		curl_multi_remove_handle(curlm, slot->curl);
@@ -773,37 +788,12 @@
 	}
 #ifdef USE_CURL_MULTI
 	fill_active_slots();
 #endif
 }
 
-void finish_active_slot(struct active_request_slot *slot)
-{
-	closedown_active_slot(slot);
-	curl_easy_getinfo(slot->curl, CURLINFO_HTTP_CODE, &slot->http_code);
-
-	if (slot->finished != NULL)
-		(*slot->finished) = 1;
-
-	/* Store slot results so they can be read after the slot is reused */
-	if (slot->results != NULL) {
-		slot->results->curl_result = slot->curl_result;
-		slot->results->http_code = slot->http_code;
-#if LIBCURL_VERSION_NUM >= 0x070a08
-		curl_easy_getinfo(slot->curl, CURLINFO_HTTPAUTH_AVAIL,
-				  &slot->results->auth_avail);
-#else
-		slot->results->auth_avail = 0;
-#endif
-	}
-
-	/* Run callback if appropriate */
-	if (slot->callback_func != NULL)
-		slot->callback_func(slot->callback_data);
-}
-
 void finish_all_active_slots(void)
 {
 	struct active_request_slot *slot = active_queue_head;
 
 	while (slot != NULL)
 		if (slot->in_use) {
@@ -860,13 +850,13 @@
 {
 	struct strbuf buf = STRBUF_INIT;
 	append_remote_object_url(&buf, url, hex, only_two_digit_prefix);
 	return strbuf_detach(&buf, NULL);
 }
 
-int handle_curl_result(struct slot_results *results)
+static int handle_curl_result(struct slot_results *results)
 {
 	/*
 	 * If we see a failing http code with CURLE_OK, we have turned off
 	 * FAILONERROR (to keep the server's custom error response), and should
 	 * translate the code into failure here.
 	 */
@@ -1010,12 +1000,122 @@
 	}
 
 	if (!charset->len && starts_with(type->buf, "text/"))
 		strbuf_addstr(charset, "ISO-8859-1");
 }
 
+static void write_accept_language(struct strbuf *buf)
+{
+	/*
+	 * MAX_DECIMAL_PLACES must not be larger than 3. If it is larger than
+	 * that, q-value will be smaller than 0.001, the minimum q-value the
+	 * HTTP specification allows. See
+	 * http://tools.ietf.org/html/rfc7231#section-5.3.1 for q-value.
+	 */
+	const int MAX_DECIMAL_PLACES = 3;
+	const int MAX_LANGUAGE_TAGS = 1000;
+	const int MAX_ACCEPT_LANGUAGE_HEADER_SIZE = 4000;
+	char **language_tags = NULL;
+	int num_langs = 0;
+	const char *s = get_preferred_languages();
+	int i;
+	struct strbuf tag = STRBUF_INIT;
+
+	/* Don't add Accept-Language header if no language is preferred. */
+	if (!s)
+		return;
+
+	/*
+	 * Split the colon-separated string of preferred languages into
+	 * language_tags array.
+	 */
+	do {
+		/* collect language tag */
+		for (; *s && (isalnum(*s) || *s == '_'); s++)
+			strbuf_addch(&tag, *s == '_' ? '-' : *s);
+
+		/* skip .codeset, @modifier and any other unnecessary parts */
+		while (*s && *s != ':')
+			s++;
+
+		if (tag.len) {
+			num_langs++;
+			REALLOC_ARRAY(language_tags, num_langs);
+			language_tags[num_langs - 1] = strbuf_detach(&tag, NULL);
+			if (num_langs >= MAX_LANGUAGE_TAGS - 1) /* -1 for '*' */
+				break;
+		}
+	} while (*s++);
+
+	/* write Accept-Language header into buf */
+	if (num_langs) {
+		int last_buf_len = 0;
+		int max_q;
+		int decimal_places;
+		char q_format[32];
+
+		/* add '*' */
+		REALLOC_ARRAY(language_tags, num_langs + 1);
+		language_tags[num_langs++] = "*"; /* it's OK; this won't be freed */
+
+		/* compute decimal_places */
+		for (max_q = 1, decimal_places = 0;
+		     max_q < num_langs && decimal_places <= MAX_DECIMAL_PLACES;
+		     decimal_places++, max_q *= 10)
+			;
+
+		sprintf(q_format, ";q=0.%%0%dd", decimal_places);
+
+		strbuf_addstr(buf, "Accept-Language: ");
+
+		for (i = 0; i < num_langs; i++) {
+			if (i > 0)
+				strbuf_addstr(buf, ", ");
+
+			strbuf_addstr(buf, language_tags[i]);
+
+			if (i > 0)
+				strbuf_addf(buf, q_format, max_q - i);
+
+			if (buf->len > MAX_ACCEPT_LANGUAGE_HEADER_SIZE) {
+				strbuf_remove(buf, last_buf_len, buf->len - last_buf_len);
+				break;
+			}
+
+			last_buf_len = buf->len;
+		}
+	}
+
+	/* free language tags -- last one is a static '*' */
+	for (i = 0; i < num_langs - 1; i++)
+		free(language_tags[i]);
+	free(language_tags);
+}
+
+/*
+ * Get an Accept-Language header which indicates user's preferred languages.
+ *
+ * Examples:
+ *   LANGUAGE= -> ""
+ *   LANGUAGE=ko:en -> "Accept-Language: ko, en; q=0.9, *; q=0.1"
+ *   LANGUAGE=ko_KR.UTF-8:sr@latin -> "Accept-Language: ko-KR, sr; q=0.9, *; q=0.1"
+ *   LANGUAGE=ko LANG=en_US.UTF-8 -> "Accept-Language: ko, *; q=0.1"
+ *   LANGUAGE= LANG=en_US.UTF-8 -> "Accept-Language: en-US, *; q=0.1"
+ *   LANGUAGE= LANG=C -> ""
+ */
+static const char *get_accept_language(void)
+{
+	if (!cached_accept_language) {
+		struct strbuf buf = STRBUF_INIT;
+		write_accept_language(&buf);
+		if (buf.len > 0)
+			cached_accept_language = strbuf_detach(&buf, NULL);
+	}
+
+	return cached_accept_language;
+}
 
 /* http_request() targets */
 #define HTTP_REQUEST_STRBUF	0
 #define HTTP_REQUEST_FILE	1
 
 static int http_request(const char *url,
@@ -1023,12 +1123,13 @@
 			const struct http_get_options *options)
 {
 	struct active_request_slot *slot;
 	struct slot_results results;
 	struct curl_slist *headers = NULL;
 	struct strbuf buf = STRBUF_INIT;
+	const char *accept_language;
 	int ret;
 
 	slot = get_active_slot();
 	curl_easy_setopt(slot->curl, CURLOPT_HTTPGET, 1);
 
 	if (result == NULL) {
@@ -1048,12 +1149,17 @@
 			}
 		} else
 			curl_easy_setopt(slot->curl, CURLOPT_WRITEFUNCTION,
 					 fwrite_buffer);
 	}
 
+	accept_language = get_accept_language();
+
+	if (accept_language)
+		headers = curl_slist_append(headers, accept_language);
+
 	strbuf_addstr(&buf, "Pragma:");
 	if (options && options->no_cache)
 		strbuf_addstr(&buf, " no-cache");
 	if (options && options->keep_error)
 		curl_easy_setopt(slot->curl, CURLOPT_FAILONERROR, 0);
 
@@ -1353,12 +1459,13 @@
 	if (preq->range_header != NULL) {
 		curl_slist_free_all(preq->range_header);
 		preq->range_header = NULL;
 	}
 	preq->slot = NULL;
 	free(preq->url);
+	free(preq);
 }
 
 int finish_http_pack_request(struct http_pack_request *preq)
 {
 	struct packed_git **lst;
 	struct packed_git *p = preq->target;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/http.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/http.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/http.h	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/http.h	2015-05-01 03:12:02.000000000 +0800
@@ -82,15 +82,13 @@
 #endif
 
 /* Slot lifecycle functions */
 extern struct active_request_slot *get_active_slot(void);
 extern int start_active_slot(struct active_request_slot *slot);
 extern void run_active_slot(struct active_request_slot *slot);
-extern void finish_active_slot(struct active_request_slot *slot);
 extern void finish_all_active_slots(void);
-extern int handle_curl_result(struct slot_results *results);
 
 /*
  * This will run one slot to completion in a blocking manner, similar to how
  * curl_easy_perform would work (but we don't want to use that, because
  * we do not want to intermingle calls to curl_multi and curl_easy).
  *
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/http-push.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/http-push.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/http-push.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/http-push.c	2015-05-01 03:12:02.000000000 +0800
@@ -313,13 +313,12 @@
 
 	fprintf(stderr,	"Fetching pack %s\n", sha1_to_hex(target->sha1));
 	fprintf(stderr, " which contains %s\n", sha1_to_hex(request->obj->sha1));
 
 	preq = new_http_pack_request(target, repo->url);
 	if (preq == NULL) {
-		release_http_pack_request(preq);
 		repo->can_update_info_refs = 0;
 		return;
 	}
 	preq->lst = &repo->packs;
 
 	/* Make sure there isn't another open request for this pack */
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ident.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ident.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ident.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ident.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/imap-send.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/imap-send.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/imap-send.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/imap-send.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/kwset.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/kwset.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/kwset.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/kwset.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/levenshtein.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/levenshtein.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/levenshtein.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/levenshtein.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/libgit.a and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/libgit.a differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/line-log.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/line-log.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/line-log.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/line-log.c	2015-05-01 03:12:02.000000000 +0800
@@ -234,13 +234,13 @@
 static void diff_ranges_release(struct diff_ranges *diff)
 {
 	range_set_release(&diff->parent);
 	range_set_release(&diff->target);
 }
 
-void line_log_data_init(struct line_log_data *r)
+static void line_log_data_init(struct line_log_data *r)
 {
 	memset(r, 0, sizeof(struct line_log_data));
 	range_set_init(&r->ranges, 0);
 }
 
 static void line_log_data_clear(struct line_log_data *r)
@@ -322,13 +322,13 @@
 	if (count_b >= 0)
 		range_set_append(&d->diff->target, start_b, start_b + count_b);
 
 	return 0;
 }
 
-static int collect_diff(mmfile_t *parent, mmfile_t *target, struct diff_ranges *out)
+static void collect_diff(mmfile_t *parent, mmfile_t *target, struct diff_ranges *out)
 {
 	struct collect_diff_cbdata cbdata = {NULL};
 	xpparam_t xpp;
 	xdemitconf_t xecfg;
 	xdemitcb_t ecb;
 
@@ -337,13 +337,13 @@
 	xecfg.ctxlen = xecfg.interhunkctxlen = 0;
 
 	cbdata.diff = out;
 	xecfg.hunk_func = collect_diff_cb;
 	memset(&ecb, 0, sizeof(ecb));
 	ecb.priv = &cbdata;
-	return xdi_diff(parent, target, &xpp, &xecfg, &ecb);
+	xdi_diff(parent, target, &xpp, &xecfg, &ecb);
 }
 
 /*
  * These are handy for debugging.  Removing them with #if 0 silences
  * the "unused function" warning.
  */
@@ -572,13 +572,13 @@
 		struct diff_filespec *spec;
 		long begin = 0, end = 0;
 		long anchor;
 
 		name_part = skip_range_arg(item->string);
 		if (!name_part || *name_part != ':' || !name_part[1])
-			die("-L argument not 'start,end:file' or ':funcname:file': %s",
+			die("-L argument '%s' not of the form start,end:file",
 			    item->string);
 		range_part = xstrndup(item->string, name_part - item->string);
 		name_part++;
 
 		full_name = prefix_path(prefix, prefix ? strlen(prefix) : 0,
 					name_part);
@@ -1027,14 +1027,13 @@
 	} else {
 		file_parent.ptr = "";
 		file_parent.size = 0;
 	}
 
 	diff_ranges_init(&diff);
-	if (collect_diff(&file_parent, &file_target, &diff))
-		die("unable to generate diff for %s", pair->one->path);
+	collect_diff(&file_parent, &file_target, &diff);
 
 	/* NEEDSWORK should apply some heuristics to prevent mismatches */
 	free(rg->path);
 	rg->path = xstrdup(pair->one->path);
 
 	range_set_init(&tmp, 0);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/line-log.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/line-log.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/line-log.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/line-log.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/line-log.h	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/line-log.h	2015-05-01 03:12:02.000000000 +0800
@@ -51,14 +51,12 @@
 	int arg_alloc, arg_nr;
 	const char **args;
 	struct diff_filepair *pair;
 	struct diff_ranges diff;
 };
 
-extern void line_log_data_init(struct line_log_data *r);
-
 extern void line_log_init(struct rev_info *rev, const char *prefix, struct string_list *args);
 
 extern int line_log_filter(struct rev_info *rev);
 
 extern int line_log_print(struct rev_info *rev, struct commit *commit);
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/line-log.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/line-log.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/line-range.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/line-range.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/line-range.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/line-range.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/list-objects.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/list-objects.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/list-objects.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/list-objects.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ll-merge.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ll-merge.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ll-merge.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ll-merge.c	2015-05-01 03:12:02.000000000 +0800
@@ -85,16 +85,13 @@
 			const struct ll_merge_options *opts,
 			int marker_size)
 {
 	xmparam_t xmp;
 	assert(opts);
 
-	if (orig->size > MAX_XDIFF_SIZE ||
-	    src1->size > MAX_XDIFF_SIZE ||
-	    src2->size > MAX_XDIFF_SIZE ||
-	    buffer_is_binary(orig->ptr, orig->size) ||
+	if (buffer_is_binary(orig->ptr, orig->size) ||
 	    buffer_is_binary(src1->ptr, src1->size) ||
 	    buffer_is_binary(src2->ptr, src2->size)) {
 		return ll_binary_merge(drv_unused, result,
 				       path,
 				       orig, orig_name,
 				       src1, name1,
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ll-merge.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ll-merge.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ll-merge.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ll-merge.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/lockfile.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/lockfile.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/lockfile.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/lockfile.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/log-tree.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/log-tree.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/log-tree.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/log-tree.c	2015-05-01 03:12:02.000000000 +0800
@@ -170,41 +170,100 @@
 	for ( ; p; p = p->next) {
 		printf(" %s", find_unique_abbrev(p->item->object.sha1, abbrev));
 	}
 }
 
 /*
+ * Do we have HEAD in the output, and also the branch it points at?
+ * If so, find that decoration entry for that current branch.
+ */
+static const struct name_decoration *current_pointed_by_HEAD(const struct name_decoration *decoration)
+{
+	const struct name_decoration *list, *head = NULL;
+	const char *branch_name = NULL;
+	unsigned char unused[20];
+	int rru_flags;
+
+	/* First find HEAD */
+	for (list = decoration; list; list = list->next)
+		if (list->type == DECORATION_REF_HEAD) {
+			head = list;
+			break;
+		}
+	if (!head)
+		return NULL;
+
+	/* Now resolve and find the matching current branch */
+	branch_name = resolve_ref_unsafe("HEAD", 0, unused, &rru_flags);
+	if (!(rru_flags & REF_ISSYMREF))
+		return NULL;
+	if (!skip_prefix(branch_name, "refs/heads/", &branch_name))
+		return NULL;
+
+	/* OK, do we have that ref in the list? */
+	for (list = decoration; list; list = list->next)
+		if ((list->type == DECORATION_REF_LOCAL) &&
+		    !strcmp(branch_name, list->name)) {
+			return list;
+		}
+
+	return NULL;
+}
+
+/*
  * The caller makes sure there is no funny color before calling.
  * format_decorations_extended makes sure the same after return.
  */
 void format_decorations_extended(struct strbuf *sb,
 			const struct commit *commit,
 			int use_color,
 			const char *prefix,
 			const char *separator,
 			const char *suffix)
 {
 	const struct name_decoration *decoration;
+	const struct name_decoration *current_and_HEAD;
 	const char *color_commit =
 		diff_get_color(use_color, DIFF_COMMIT);
 	const char *color_reset =
 		decorate_get_color(use_color, DECORATION_NONE);
 
 	decoration = get_name_decoration(&commit->object);
 	if (!decoration)
 		return;
+
+	current_and_HEAD = current_pointed_by_HEAD(decoration);
 	while (decoration) {
-		strbuf_addstr(sb, color_commit);
-		strbuf_addstr(sb, prefix);
-		strbuf_addstr(sb, color_reset);
-		strbuf_addstr(sb, decorate_get_color(use_color, decoration->type));
-		if (decoration->type == DECORATION_REF_TAG)
-			strbuf_addstr(sb, "tag: ");
-		strbuf_addstr(sb, decoration->name);
-		strbuf_addstr(sb, color_reset);
-		prefix = separator;
+		/*
+		 * When both current and HEAD are there, only
+		 * show HEAD->current where HEAD would have
+		 * appeared, skipping the entry for current.
+		 */
+		if (decoration != current_and_HEAD) {
+			strbuf_addstr(sb, color_commit);
+			strbuf_addstr(sb, prefix);
+			strbuf_addstr(sb, color_reset);
+			strbuf_addstr(sb, decorate_get_color(use_color, decoration->type));
+			if (decoration->type == DECORATION_REF_TAG)
+				strbuf_addstr(sb, "tag: ");
+
+			strbuf_addstr(sb, decoration->name);
+
+			if (current_and_HEAD &&
+			    decoration->type == DECORATION_REF_HEAD) {
+				strbuf_addstr(sb, color_reset);
+				strbuf_addstr(sb, color_commit);
+				strbuf_addstr(sb, " -> ");
+				strbuf_addstr(sb, color_reset);
+				strbuf_addstr(sb, decorate_get_color(use_color, current_and_HEAD->type));
+				strbuf_addstr(sb, current_and_HEAD->name);
+			}
+			strbuf_addstr(sb, color_reset);
+
+			prefix = separator;
+		}
 		decoration = decoration->next;
 	}
 	strbuf_addstr(sb, color_commit);
 	strbuf_addstr(sb, suffix);
 	strbuf_addstr(sb, color_reset);
 }
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/log-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/log-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/log-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/log-tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/mailmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/mailmap.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/mailmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/mailmap.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Makefile /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Makefile
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/Makefile	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/Makefile	2015-05-01 03:12:02.000000000 +0800
@@ -345,12 +345,23 @@
 # Define HAVE_CLOCK_GETTIME if your platform has clock_gettime in librt.
 #
 # Define HAVE_CLOCK_MONOTONIC if your platform has CLOCK_MONOTONIC in librt.
 #
 # Define NO_HMAC_CTX_CLEANUP if your OpenSSL is version 0.9.6b or earlier to
 # cleanup the HMAC context with the older HMAC_cleanup function.
+#
+# Define USE_PARENS_AROUND_GETTEXT_N to "yes" if your compiler happily
+# compiles the following initialization:
+#
+#   static const char s[] = ("FOO");
+#
+# and define it to "no" if you need to remove the parentheses () around the
+# constant.  The default is "auto", which means to use parentheses if your
+# compiler is detected to support it.
+#
+# Define HAVE_BSD_SYSCTL if your platform has a BSD-compatible sysctl function.
 
 GIT-VERSION-FILE: FORCE
 	@$(SHELL_PATH) ./GIT-VERSION-GEN
 -include GIT-VERSION-FILE
 
 # CFLAGS and LDFLAGS are for the users to override from the command line.
@@ -952,12 +963,20 @@
 endif
 
 ifneq (,$(SOCKLEN_T))
 	BASIC_CFLAGS += -Dsocklen_t=$(SOCKLEN_T)
 endif
 
+ifeq (yes,$(USE_PARENS_AROUND_GETTEXT_N))
+	BASIC_CFLAGS += -DUSE_PARENS_AROUND_GETTEXT_N=1
+else
+ifeq (no,$(USE_PARENS_AROUND_GETTEXT_N))
+	BASIC_CFLAGS += -DUSE_PARENS_AROUND_GETTEXT_N=0
+endif
+endif
+
 ifeq ($(uname_S),Darwin)
 	ifndef NO_FINK
 		ifeq ($(shell test -d /sw/lib && echo y),y)
 			BASIC_CFLAGS += -I/sw/include
 			BASIC_LDFLAGS += -L/sw/lib
 		endif
@@ -1411,12 +1430,16 @@
 endif
 
 ifdef HAVE_CLOCK_MONOTONIC
 	BASIC_CFLAGS += -DHAVE_CLOCK_MONOTONIC
 endif
 
+ifdef HAVE_BSD_SYSCTL
+	BASIC_CFLAGS += -DHAVE_BSD_SYSCTL
+endif
+
 ifeq ($(TCLTK_PATH),)
 NO_TCLTK = NoThanks
 endif
 
 ifeq ($(PERL_PATH),)
 NO_PERL = NoThanks
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/match-trees.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/match-trees.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/match-trees.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/match-trees.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/merge-blobs.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/merge-blobs.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/merge-blobs.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/merge-blobs.c	2015-05-01 03:12:02.000000000 +0800
@@ -11,14 +11,16 @@
 	unsigned long size;
 	enum object_type type;
 
 	buf = read_sha1_file(obj->object.sha1, &type, &size);
 	if (!buf)
 		return -1;
-	if (type != OBJ_BLOB)
+	if (type != OBJ_BLOB) {
+		free(buf);
 		return -1;
+	}
 	f->ptr = buf;
 	f->size = size;
 	return 0;
 }
 
 static void free_mmfile(mmfile_t *f)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/merge-blobs.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/merge-blobs.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/merge-blobs.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/merge-blobs.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/merge.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/merge.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/merge.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/merge.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/merge-recursive.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/merge-recursive.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/merge-recursive.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/merge-recursive.c	2015-05-01 03:12:02.000000000 +0800
@@ -1855,12 +1855,15 @@
 		}
 
 		string_list_clear(re_merge, 0);
 		string_list_clear(re_head, 0);
 		string_list_clear(entries, 1);
 
+		free(re_merge);
+		free(re_head);
+		free(entries);
 	}
 	else
 		clean = 1;
 
 	if (o->call_depth)
 		*result = write_tree_from_memory(o);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/merge-recursive.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/merge-recursive.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/merge-recursive.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/merge-recursive.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/mergesort.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/mergesort.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/mergesort.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/mergesort.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/name-hash.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/name-hash.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/name-hash.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/name-hash.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes.c	2015-05-01 03:12:02.000000000 +0800
@@ -359,20 +359,19 @@
 
 static int non_note_cmp(const struct non_note *a, const struct non_note *b)
 {
 	return strcmp(a->path, b->path);
 }
 
-/* note: takes ownership of path string */
-static void add_non_note(struct notes_tree *t, char *path,
+static void add_non_note(struct notes_tree *t, const char *path,
 		unsigned int mode, const unsigned char *sha1)
 {
 	struct non_note *p = t->prev_non_note, *n;
 	n = (struct non_note *) xmalloc(sizeof(struct non_note));
 	n->next = NULL;
-	n->path = path;
+	n->path = xstrdup(path);
 	n->mode = mode;
 	hashcpy(n->sha1, sha1);
 	t->prev_non_note = n;
 
 	if (!t->first_non_note) {
 		t->first_non_note = n;
@@ -480,23 +479,23 @@
 		 *
 		 * To conclude, it is strongly advised to make sure non-notes
 		 * have at least one non-hex character in the top-level path
 		 * component.
 		 */
 		{
-			struct strbuf non_note_path = STRBUF_INIT;
+			char non_note_path[PATH_MAX];
+			char *p = non_note_path;
 			const char *q = sha1_to_hex(subtree->key_sha1);
 			int i;
 			for (i = 0; i < prefix_len; i++) {
-				strbuf_addch(&non_note_path, *q++);
-				strbuf_addch(&non_note_path, *q++);
-				strbuf_addch(&non_note_path, '/');
+				*p++ = *q++;
+				*p++ = *q++;
+				*p++ = '/';
 			}
-			strbuf_addstr(&non_note_path, entry.path);
-			add_non_note(t, strbuf_detach(&non_note_path, NULL),
-				     entry.mode, entry.sha1);
+			strcpy(p, entry.path);
+			add_non_note(t, non_note_path, entry.mode, entry.sha1);
 		}
 	}
 	free(buf);
 }
 
 /*
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes-cache.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes-cache.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes-cache.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes-cache.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes-merge.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes-merge.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes-merge.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes-merge.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes-utils.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes-utils.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/notes-utils.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/notes-utils.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/object.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/object.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/object.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/object.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-bitmap.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-bitmap.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-bitmap.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-bitmap.c	2015-05-01 03:12:02.000000000 +0800
@@ -57,13 +57,13 @@
 	 */
 	struct ewah_bitmap *commits;
 	struct ewah_bitmap *trees;
 	struct ewah_bitmap *blobs;
 	struct ewah_bitmap *tags;
 
-	/* Map from SHA1 -> `stored_bitmap` for all the bitmapped comits */
+	/* Map from SHA1 -> `stored_bitmap` for all the bitmapped commits */
 	khash_sha1 *bitmaps;
 
 	/* Number of bitmapped commits */
 	uint32_t entry_count;
 
 	/* Name-hash cache (or NULL if not present). */
@@ -249,12 +249,26 @@
 			index, bitmap, sha1, xor_bitmap, flags);
 	}
 
 	return 0;
 }
 
+static char *pack_bitmap_filename(struct packed_git *p)
+{
+	char *idx_name;
+	int len;
+
+	len = strlen(p->pack_name) - strlen(".pack");
+	idx_name = xmalloc(len + strlen(".bitmap") + 1);
+
+	memcpy(idx_name, p->pack_name, len);
+	memcpy(idx_name + len, ".bitmap", strlen(".bitmap") + 1);
+
+	return idx_name;
+}
+
 static int open_pack_bitmap_1(struct packed_git *packfile)
 {
 	int fd;
 	struct stat st;
 	char *idx_name;
 
@@ -319,26 +333,12 @@
 	munmap(bitmap_git.map, bitmap_git.map_size);
 	bitmap_git.map = NULL;
 	bitmap_git.map_size = 0;
 	return -1;
 }
 
-char *pack_bitmap_filename(struct packed_git *p)
-{
-	char *idx_name;
-	int len;
-
-	len = strlen(p->pack_name) - strlen(".pack");
-	idx_name = xmalloc(len + strlen(".bitmap") + 1);
-
-	memcpy(idx_name, p->pack_name, len);
-	memcpy(idx_name + len, ".bitmap", strlen(".bitmap") + 1);
-
-	return idx_name;
-}
-
 static int open_pack_bitmap(void)
 {
 	struct packed_git *p;
 	int ret = -1;
 
 	assert(!bitmap_git.map && !bitmap_git.loaded);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-bitmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-bitmap.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-bitmap.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-bitmap.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-bitmap.h	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-bitmap.h	2015-05-01 03:12:02.000000000 +0800
@@ -35,13 +35,12 @@
 	off_t found_offset);
 
 int prepare_bitmap_git(void);
 void count_bitmap_commit_list(uint32_t *commits, uint32_t *trees, uint32_t *blobs, uint32_t *tags);
 void traverse_bitmap_commit_list(show_reachable_fn show_reachable);
 void test_bitmap_walk(struct rev_info *revs);
-char *pack_bitmap_filename(struct packed_git *p);
 int prepare_bitmap_walk(struct rev_info *revs);
 int reuse_partial_packfile_from_bitmap(struct packed_git **packfile, uint32_t *entries, off_t *up_to);
 int rebuild_existing_bitmaps(struct packing_data *mapping, khash_sha1 *reused_bitmaps, int show_progress);
 
 void bitmap_writer_show_progress(int show);
 void bitmap_writer_set_checksum(unsigned char *sha1);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-bitmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-bitmap.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-bitmap-write.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-bitmap-write.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-bitmap-write.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-bitmap-write.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-check.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-check.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-check.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-check.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-objects.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-objects.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-objects.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-objects.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-revindex.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-revindex.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-revindex.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-revindex.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-write.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-write.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pack-write.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pack-write.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pager.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pager.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pager.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pager.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/parse-options.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/parse-options.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/parse-options-cb.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/parse-options-cb.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/parse-options-cb.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/parse-options-cb.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/parse-options.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/parse-options.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/patch-delta.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/patch-delta.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/patch-delta.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/patch-delta.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/patch-ids.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/patch-ids.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/patch-ids.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/patch-ids.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/path.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/path.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/path.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/path.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pathspec.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pathspec.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pathspec.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pathspec.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib/Git/SVN/Editor.pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib/Git/SVN/Editor.pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib/Git/SVN/Editor.pm	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib/Git/SVN/Editor.pm	2015-05-01 03:12:02.000000000 +0800
@@ -2,13 +2,12 @@
 use vars qw/@ISA $_rmdir $_cp_similarity $_find_copies_harder $_rename_limit/;
 use strict;
 use warnings;
 use SVN::Core;
 use SVN::Delta;
 use Carp qw/croak/;
-use IO::File;
 use Git qw/command command_oneline command_noisy command_output_pipe
            command_input_pipe command_close_pipe
            command_bidi_pipe command_close_bidi_pipe/;
 BEGIN {
 	@ISA = qw(SVN::Delta::Editor);
 }
@@ -583,13 +582,13 @@
 
 The interface will change as git-svn evolves.
 
 =head1 DEPENDENCIES
 
 Subversion perl bindings,
-the core L<Carp> and L<IO::File> modules,
+the core L<Carp> module,
 and git's L<Git> helper module.
 
 C<Git::SVN::Editor> has not been tested using callers other than
 B<git-svn> itself.
 
 =head1 SEE ALSO
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib/Git/SVN/Fetcher.pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib/Git/SVN/Fetcher.pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib/Git/SVN/Fetcher.pm	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib/Git/SVN/Fetcher.pm	2015-05-01 03:12:02.000000000 +0800
@@ -4,13 +4,12 @@
             $repo_id/;
 use strict;
 use warnings;
 use SVN::Delta;
 use Carp qw/croak/;
 use File::Basename qw/dirname/;
-use IO::File qw//;
 use Git qw/command command_oneline command_noisy command_output_pipe
            command_input_pipe command_close_pipe
            command_bidi_pipe command_close_bidi_pipe/;
 BEGIN {
 	@ISA = qw(SVN::Delta::Editor);
 }
@@ -605,13 +604,13 @@
 The interface is unstable.  Do not use this module unless you are
 developing git-svn.
 
 =head1 DEPENDENCIES
 
 L<SVN::Delta> from the Subversion perl bindings,
-the core L<Carp>, L<File::Basename>, and L<IO::File> modules,
+the core L<Carp> and L<File::Basename> modules,
 and git's L<Git> helper module.
 
 C<Git::SVN::Fetcher> has not been tested using callers other than
 B<git-svn> itself.
 
 =head1 SEE ALSO
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib/Git/SVN/Ra.pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib/Git/SVN/Ra.pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib/Git/SVN/Ra.pm	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib/Git/SVN/Ra.pm	2015-05-01 03:12:02.000000000 +0800
@@ -1,12 +1,11 @@
 package Git::SVN::Ra;
 use vars qw/@ISA $config_dir $_ignore_refs_regex $_log_window_size/;
 use strict;
 use warnings;
 use Memoize;
-use SVN::Client;
 use Git::SVN::Utils qw(
 	canonicalize_url
 	canonicalize_path
 	add_path_to_url
 );
 
@@ -39,12 +38,13 @@
 END {
 	$RA = undef;
 	$ra_invalid = 1;
 }
 
 sub _auth_providers () {
+	require SVN::Client;
 	my @rv = (
 	  SVN::Client::get_simple_provider(),
 	  SVN::Client::get_ssl_server_trust_file_provider(),
 	  SVN::Client::get_simple_prompt_provider(
 	    \&Git::SVN::Prompt::simple, 2),
 	  SVN::Client::get_ssl_client_cert_file_provider(),
@@ -244,13 +244,16 @@
 	}
 	my $ret = $self->SUPER::get_log(@args, $pool);
 	$pool->clear;
 	$ret;
 }
 
+# uncommon, only for ancient SVN (<= 1.4.2)
 sub trees_match {
+	require IO::File;
+	require SVN::Client;
 	my ($self, $url1, $rev1, $url2, $rev2) = @_;
 	my $ctx = SVN::Client->new(auth => _auth_providers);
 	my $out = IO::File->new_tmpfile;
 
 	# older SVN (1.1.x) doesn't take $pool as the last parameter for
 	# $ctx->diff(), so we'll create a default one
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib/Git/SVN.pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib/Git/SVN.pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/lib/Git/SVN.pm	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/lib/Git/SVN.pm	2015-05-01 03:12:02.000000000 +0800
@@ -6,16 +6,14 @@
 use vars qw/$_no_metadata
             $_repack $_repack_flags $_use_svm_props $_head
             $_use_svnsync_props $no_reuse_existing
 	    $_use_log_author $_add_author_from $_localtime/;
 use Carp qw/croak/;
 use File::Path qw/mkpath/;
-use File::Copy qw/copy/;
 use IPC::Open3;
 use Memoize;  # core since 5.8.0, Jul 2002
-use Memoize::Storable;
 use POSIX qw(:signal_h);
 use Time::Local;
 
 use Git qw(
     command
     command_oneline
@@ -30,17 +28,13 @@
 	join_paths
 	canonicalize_path
 	canonicalize_url
 	add_path_to_url
 );
 
-my $can_use_yaml;
-BEGIN {
-	$can_use_yaml = eval { require Git::SVN::Memoize::YAML; 1};
-}
-
+my $memo_backend;
 our $_follow_parent  = 1;
 our $_minimize_url   = 'unset';
 our $default_repo_id = 'svn';
 our $default_ref_id  = $ENV{GIT_SVN_ID} || 'git-svn';
 
 my ($_gc_nr, $_gc_period);
@@ -1576,13 +1570,22 @@
 }
 
 sub tie_for_persistent_memoization {
 	my $hash = shift;
 	my $path = shift;
 
-	if ($can_use_yaml) {
+	unless ($memo_backend) {
+		if (eval { require Git::SVN::Memoize::YAML; 1}) {
+			$memo_backend = 1;
+		} else {
+			require Memoize::Storable;
+			$memo_backend = -1;
+		}
+	}
+
+	if ($memo_backend > 0) {
 		tie %$hash => 'Git::SVN::Memoize::YAML', "$path.yaml";
 	} else {
 		tie %$hash => 'Memoize::Storable', "$path.db", 'nstore';
 	}
 }
 
@@ -2186,14 +2189,15 @@
 
 	$LOCKFILES{$db_lock} = 1;
 	my $sync;
 	# both of these options make our .rev_db file very, very important
 	# and we can't afford to lose it because rebuild() won't work
 	if ($self->use_svm_props || $self->no_metadata) {
+		require File::Copy;
 		$sync = 1;
-		copy($db, $db_lock) or die "rev_map_set(@_): ",
+		File::Copy::copy($db, $db_lock) or die "rev_map_set(@_): ",
 					   "Failed to copy: ",
 					   "$db => $db_lock ($!)\n";
 	} else {
 		rename $db, $db_lock or die "rev_map_set(@_): ",
 					    "Failed to rename: ",
 					    "$db => $db_lock ($!)\n";
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/man3/Git.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/man3/Git.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/man3/Git.3pm	2017-10-10 12:31:59.386631518 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/man3/Git.3pm	2017-10-10 13:04:28.458560085 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git 3pm"
-.TH Git 3pm "2015-10-03" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git 3pm "2015-05-01" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git \- Perl interface to the Git version control system
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/man3/Git::I18N.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/man3/Git::I18N.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/man3/Git::I18N.3pm	2017-10-10 12:31:59.346631519 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/man3/Git::I18N.3pm	2017-10-10 13:04:28.418560087 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git::I18N 3pm"
-.TH Git::I18N 3pm "2015-10-03" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git::I18N 3pm "2015-05-01" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git::I18N \- Perl interface to Git's Gettext localizations
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/man3/Git::SVN::Editor.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/man3/Git::SVN::Editor.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/man3/Git::SVN::Editor.3pm	2017-10-10 12:31:59.342631519 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/man3/Git::SVN::Editor.3pm	2017-10-10 13:04:28.418560087 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git::SVN::Editor 3pm"
-.TH Git::SVN::Editor 3pm "2015-10-03" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git::SVN::Editor 3pm "2015-05-01" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git::SVN::Editor \- commit driver for "git svn set\-tree" and dcommit
@@ -176,13 +176,13 @@
 repository.
 .PP
 The interface will change as git-svn evolves.
 .SH "DEPENDENCIES"
 .IX Header "DEPENDENCIES"
 Subversion perl bindings,
-the core Carp and IO::File modules,
+the core Carp module,
 and git's Git helper module.
 .PP
 \&\f(CW\*(C`Git::SVN::Editor\*(C'\fR has not been tested using callers other than
 \&\fBgit-svn\fR itself.
 .SH "SEE ALSO"
 .IX Header "SEE ALSO"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/man3/Git::SVN::Fetcher.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/man3/Git::SVN::Fetcher.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/man3/Git::SVN::Fetcher.3pm	2017-10-10 12:31:59.354631519 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/man3/Git::SVN::Fetcher.3pm	2017-10-10 13:04:28.430560086 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git::SVN::Fetcher 3pm"
-.TH Git::SVN::Fetcher 3pm "2015-10-03" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git::SVN::Fetcher 3pm "2015-05-01" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git::SVN::Fetcher \- tree delta consumer for "git svn fetch"
@@ -203,13 +203,13 @@
 .PP
 The interface is unstable.  Do not use this module unless you are
 developing git-svn.
 .SH "DEPENDENCIES"
 .IX Header "DEPENDENCIES"
 SVN::Delta from the Subversion perl bindings,
-the core Carp, File::Basename, and IO::File modules,
+the core Carp and File::Basename modules,
 and git's Git helper module.
 .PP
 \&\f(CW\*(C`Git::SVN::Fetcher\*(C'\fR has not been tested using callers other than
 \&\fBgit-svn\fR itself.
 .SH "SEE ALSO"
 .IX Header "SEE ALSO"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/man3/Git::SVN::Memoize::YAML.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/man3/Git::SVN::Memoize::YAML.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/man3/Git::SVN::Memoize::YAML.3pm	2017-10-10 12:31:59.358631519 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/man3/Git::SVN::Memoize::YAML.3pm	2017-10-10 13:04:28.422560087 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git::SVN::Memoize::YAML 3pm"
-.TH Git::SVN::Memoize::YAML 3pm "2015-10-03" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git::SVN::Memoize::YAML 3pm "2015-05-01" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git::SVN::Memoize::YAML \- store Memoized data in YAML format
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/man3/Git::SVN::Prompt.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/man3/Git::SVN::Prompt.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/man3/Git::SVN::Prompt.3pm	2017-10-10 12:31:59.346631519 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/man3/Git::SVN::Prompt.3pm	2017-10-10 13:04:28.418560087 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git::SVN::Prompt 3pm"
-.TH Git::SVN::Prompt 3pm "2015-10-03" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git::SVN::Prompt 3pm "2015-05-01" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git::SVN::Prompt \- authentication callbacks for git\-svn
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/man3/Git::SVN::Ra.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/man3/Git::SVN::Ra.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/man3/Git::SVN::Ra.3pm	2017-10-10 12:31:59.390631517 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/man3/Git::SVN::Ra.3pm	2017-10-10 13:04:28.462560085 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git::SVN::Ra 3pm"
-.TH Git::SVN::Ra 3pm "2015-10-03" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git::SVN::Ra 3pm "2015-05-01" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git::SVN::Ra \- Subversion remote access functions for git\-svn
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/man3/Git::SVN::Utils.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/man3/Git::SVN::Utils.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/blib/man3/Git::SVN::Utils.3pm	2017-10-10 12:31:59.350631519 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/blib/man3/Git::SVN::Utils.3pm	2017-10-10 13:04:28.422560087 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git::SVN::Utils 3pm"
-.TH Git::SVN::Utils 3pm "2015-10-03" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git::SVN::Utils 3pm "2015-05-01" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git::SVN::Utils \- utility functions used across Git::SVN
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/Git/SVN/Editor.pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/Git/SVN/Editor.pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/Git/SVN/Editor.pm	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/Git/SVN/Editor.pm	2015-05-01 03:12:02.000000000 +0800
@@ -2,13 +2,12 @@
 use vars qw/@ISA $_rmdir $_cp_similarity $_find_copies_harder $_rename_limit/;
 use strict;
 use warnings;
 use SVN::Core;
 use SVN::Delta;
 use Carp qw/croak/;
-use IO::File;
 use Git qw/command command_oneline command_noisy command_output_pipe
            command_input_pipe command_close_pipe
            command_bidi_pipe command_close_bidi_pipe/;
 BEGIN {
 	@ISA = qw(SVN::Delta::Editor);
 }
@@ -583,13 +582,13 @@
 
 The interface will change as git-svn evolves.
 
 =head1 DEPENDENCIES
 
 Subversion perl bindings,
-the core L<Carp> and L<IO::File> modules,
+the core L<Carp> module,
 and git's L<Git> helper module.
 
 C<Git::SVN::Editor> has not been tested using callers other than
 B<git-svn> itself.
 
 =head1 SEE ALSO
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/Git/SVN/Fetcher.pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/Git/SVN/Fetcher.pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/Git/SVN/Fetcher.pm	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/Git/SVN/Fetcher.pm	2015-05-01 03:12:02.000000000 +0800
@@ -4,13 +4,12 @@
             $repo_id/;
 use strict;
 use warnings;
 use SVN::Delta;
 use Carp qw/croak/;
 use File::Basename qw/dirname/;
-use IO::File qw//;
 use Git qw/command command_oneline command_noisy command_output_pipe
            command_input_pipe command_close_pipe
            command_bidi_pipe command_close_bidi_pipe/;
 BEGIN {
 	@ISA = qw(SVN::Delta::Editor);
 }
@@ -605,13 +604,13 @@
 The interface is unstable.  Do not use this module unless you are
 developing git-svn.
 
 =head1 DEPENDENCIES
 
 L<SVN::Delta> from the Subversion perl bindings,
-the core L<Carp>, L<File::Basename>, and L<IO::File> modules,
+the core L<Carp> and L<File::Basename> modules,
 and git's L<Git> helper module.
 
 C<Git::SVN::Fetcher> has not been tested using callers other than
 B<git-svn> itself.
 
 =head1 SEE ALSO
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/Git/SVN/Ra.pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/Git/SVN/Ra.pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/Git/SVN/Ra.pm	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/Git/SVN/Ra.pm	2015-05-01 03:12:02.000000000 +0800
@@ -1,12 +1,11 @@
 package Git::SVN::Ra;
 use vars qw/@ISA $config_dir $_ignore_refs_regex $_log_window_size/;
 use strict;
 use warnings;
 use Memoize;
-use SVN::Client;
 use Git::SVN::Utils qw(
 	canonicalize_url
 	canonicalize_path
 	add_path_to_url
 );
 
@@ -39,12 +38,13 @@
 END {
 	$RA = undef;
 	$ra_invalid = 1;
 }
 
 sub _auth_providers () {
+	require SVN::Client;
 	my @rv = (
 	  SVN::Client::get_simple_provider(),
 	  SVN::Client::get_ssl_server_trust_file_provider(),
 	  SVN::Client::get_simple_prompt_provider(
 	    \&Git::SVN::Prompt::simple, 2),
 	  SVN::Client::get_ssl_client_cert_file_provider(),
@@ -244,13 +244,16 @@
 	}
 	my $ret = $self->SUPER::get_log(@args, $pool);
 	$pool->clear;
 	$ret;
 }
 
+# uncommon, only for ancient SVN (<= 1.4.2)
 sub trees_match {
+	require IO::File;
+	require SVN::Client;
 	my ($self, $url1, $rev1, $url2, $rev2) = @_;
 	my $ctx = SVN::Client->new(auth => _auth_providers);
 	my $out = IO::File->new_tmpfile;
 
 	# older SVN (1.1.x) doesn't take $pool as the last parameter for
 	# $ctx->diff(), so we'll create a default one
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/Git/SVN.pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/Git/SVN.pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/Git/SVN.pm	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/Git/SVN.pm	2015-05-01 03:12:02.000000000 +0800
@@ -6,16 +6,14 @@
 use vars qw/$_no_metadata
             $_repack $_repack_flags $_use_svm_props $_head
             $_use_svnsync_props $no_reuse_existing
 	    $_use_log_author $_add_author_from $_localtime/;
 use Carp qw/croak/;
 use File::Path qw/mkpath/;
-use File::Copy qw/copy/;
 use IPC::Open3;
 use Memoize;  # core since 5.8.0, Jul 2002
-use Memoize::Storable;
 use POSIX qw(:signal_h);
 use Time::Local;
 
 use Git qw(
     command
     command_oneline
@@ -30,17 +28,13 @@
 	join_paths
 	canonicalize_path
 	canonicalize_url
 	add_path_to_url
 );
 
-my $can_use_yaml;
-BEGIN {
-	$can_use_yaml = eval { require Git::SVN::Memoize::YAML; 1};
-}
-
+my $memo_backend;
 our $_follow_parent  = 1;
 our $_minimize_url   = 'unset';
 our $default_repo_id = 'svn';
 our $default_ref_id  = $ENV{GIT_SVN_ID} || 'git-svn';
 
 my ($_gc_nr, $_gc_period);
@@ -1576,13 +1570,22 @@
 }
 
 sub tie_for_persistent_memoization {
 	my $hash = shift;
 	my $path = shift;
 
-	if ($can_use_yaml) {
+	unless ($memo_backend) {
+		if (eval { require Git::SVN::Memoize::YAML; 1}) {
+			$memo_backend = 1;
+		} else {
+			require Memoize::Storable;
+			$memo_backend = -1;
+		}
+	}
+
+	if ($memo_backend > 0) {
 		tie %$hash => 'Git::SVN::Memoize::YAML', "$path.yaml";
 	} else {
 		tie %$hash => 'Memoize::Storable', "$path.db", 'nstore';
 	}
 }
 
@@ -2186,14 +2189,15 @@
 
 	$LOCKFILES{$db_lock} = 1;
 	my $sync;
 	# both of these options make our .rev_db file very, very important
 	# and we can't afford to lose it because rebuild() won't work
 	if ($self->use_svm_props || $self->no_metadata) {
+		require File::Copy;
 		$sync = 1;
-		copy($db, $db_lock) or die "rev_map_set(@_): ",
+		File::Copy::copy($db, $db_lock) or die "rev_map_set(@_): ",
 					   "Failed to copy: ",
 					   "$db => $db_lock ($!)\n";
 	} else {
 		rename $db, $db_lock or die "rev_map_set(@_): ",
 					    "Failed to rename: ",
 					    "$db => $db_lock ($!)\n";
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/perl.mak /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/perl.mak
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/perl/perl.mak	2017-10-10 12:31:42.022632154 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/perl/perl.mak	2017-10-10 13:04:11.614560703 +0800
@@ -13,13 +13,13 @@
 
 #     BUILD_REQUIRES => {  }
 #     CONFIGURE_REQUIRES => {  }
 #     INSTALLSITEMAN3DIR => q[$(SITEPREFIX)/share/man/man3]
 #     MAKEFILE => q[perl.mak]
 #     NAME => q[Git]
-#     PM => { Git/SVN/GlobSpec.pm=>q[$(INST_LIBDIR)/Git/SVN/GlobSpec.pm], Git/SVN/Fetcher.pm=>q[$(INST_LIBDIR)/Git/SVN/Fetcher.pm], Git/SVN/Migration.pm=>q[$(INST_LIBDIR)/Git/SVN/Migration.pm], Git.pm=>q[$(INST_LIBDIR)/Git.pm], Git/SVN/Memoize/YAML.pm=>q[$(INST_LIBDIR)/Git/SVN/Memoize/YAML.pm], Git/SVN/Ra.pm=>q[$(INST_LIBDIR)/Git/SVN/Ra.pm], Git/SVN.pm=>q[$(INST_LIBDIR)/Git/SVN.pm], Git/I18N.pm=>q[$(INST_LIBDIR)/Git/I18N.pm], Git/IndexInfo.pm=>q[$(INST_LIBDIR)/Git/IndexInfo.pm], Git/SVN/Log.pm=>q[$(INST_LIBDIR)/Git/SVN/Log.pm], Git/SVN/Editor.pm=>q[$(INST_LIBDIR)/Git/SVN/Editor.pm], Git/SVN/Prompt.pm=>q[$(INST_LIBDIR)/Git/SVN/Prompt.pm], Git/SVN/Utils.pm=>q[$(INST_LIBDIR)/Git/SVN/Utils.pm] }
+#     PM => { Git/SVN/Memoize/YAML.pm=>q[$(INST_LIBDIR)/Git/SVN/Memoize/YAML.pm], Git/SVN/Fetcher.pm=>q[$(INST_LIBDIR)/Git/SVN/Fetcher.pm], Git/SVN/GlobSpec.pm=>q[$(INST_LIBDIR)/Git/SVN/GlobSpec.pm], Git.pm=>q[$(INST_LIBDIR)/Git.pm], Git/SVN/Ra.pm=>q[$(INST_LIBDIR)/Git/SVN/Ra.pm], Git/SVN/Migration.pm=>q[$(INST_LIBDIR)/Git/SVN/Migration.pm], Git/I18N.pm=>q[$(INST_LIBDIR)/Git/I18N.pm], Git/SVN/Utils.pm=>q[$(INST_LIBDIR)/Git/SVN/Utils.pm], Git/SVN.pm=>q[$(INST_LIBDIR)/Git/SVN.pm], Git/SVN/Prompt.pm=>q[$(INST_LIBDIR)/Git/SVN/Prompt.pm], Git/IndexInfo.pm=>q[$(INST_LIBDIR)/Git/IndexInfo.pm], Git/SVN/Log.pm=>q[$(INST_LIBDIR)/Git/SVN/Log.pm], Git/SVN/Editor.pm=>q[$(INST_LIBDIR)/Git/SVN/Editor.pm] }
 #     PM_FILTER => q[$(PERL) -pe "s<\Q++LOCALEDIR++\E></usr/local/share/locale>"]
 #     PREREQ_PM => {  }
 #     TEST_REQUIRES => {  }
 #     VERSION_FROM => q[Git.pm]
 
 # --- MakeMaker post_initialize section:
@@ -204,38 +204,38 @@
 	Git/SVN/Memoize/YAML.pm \
 	Git/SVN/Migration.pm \
 	Git/SVN/Prompt.pm \
 	Git/SVN/Ra.pm \
 	Git/SVN/Utils.pm
 
-PM_TO_BLIB = Git/SVN/GlobSpec.pm \
-	$(INST_LIBDIR)/Git/SVN/GlobSpec.pm \
+PM_TO_BLIB = Git/SVN/Memoize/YAML.pm \
+	$(INST_LIBDIR)/Git/SVN/Memoize/YAML.pm \
 	Git/SVN/Fetcher.pm \
 	$(INST_LIBDIR)/Git/SVN/Fetcher.pm \
-	Git/SVN/Migration.pm \
-	$(INST_LIBDIR)/Git/SVN/Migration.pm \
+	Git/SVN/GlobSpec.pm \
+	$(INST_LIBDIR)/Git/SVN/GlobSpec.pm \
 	Git.pm \
 	$(INST_LIBDIR)/Git.pm \
-	Git/SVN/Memoize/YAML.pm \
-	$(INST_LIBDIR)/Git/SVN/Memoize/YAML.pm \
 	Git/SVN/Ra.pm \
 	$(INST_LIBDIR)/Git/SVN/Ra.pm \
-	Git/SVN.pm \
-	$(INST_LIBDIR)/Git/SVN.pm \
+	Git/SVN/Migration.pm \
+	$(INST_LIBDIR)/Git/SVN/Migration.pm \
 	Git/I18N.pm \
 	$(INST_LIBDIR)/Git/I18N.pm \
+	Git/SVN/Utils.pm \
+	$(INST_LIBDIR)/Git/SVN/Utils.pm \
+	Git/SVN.pm \
+	$(INST_LIBDIR)/Git/SVN.pm \
+	Git/SVN/Prompt.pm \
+	$(INST_LIBDIR)/Git/SVN/Prompt.pm \
 	Git/IndexInfo.pm \
 	$(INST_LIBDIR)/Git/IndexInfo.pm \
 	Git/SVN/Log.pm \
 	$(INST_LIBDIR)/Git/SVN/Log.pm \
 	Git/SVN/Editor.pm \
-	$(INST_LIBDIR)/Git/SVN/Editor.pm \
-	Git/SVN/Prompt.pm \
-	$(INST_LIBDIR)/Git/SVN/Prompt.pm \
-	Git/SVN/Utils.pm \
-	$(INST_LIBDIR)/Git/SVN/Utils.pm
+	$(INST_LIBDIR)/Git/SVN/Editor.pm
 
 
 # --- MakeMaker platform_constants section:
 MM_Unix_VERSION = 6.66
 PERL_MALLOC_DEF = -DPERL_EXTMALLOC_DEF -Dmalloc=Perl_malloc -Dfree=Perl_mfree -Drealloc=Perl_realloc -Dcalloc=Perl_calloc
 
@@ -455,26 +455,26 @@
 POD2MAN_EXE = $(PERLRUN) "-MExtUtils::Command::MM" -e pod2man "--"
 POD2MAN = $(POD2MAN_EXE)
 
 
 manifypods : pure_all  \
 	Git/SVN/Editor.pm \
-	Git/I18N.pm \
 	Git/SVN/Prompt.pm \
+	Git/I18N.pm \
 	Git/SVN/Utils.pm \
-	Git/SVN/Fetcher.pm \
 	Git/SVN/Memoize/YAML.pm \
+	Git/SVN/Fetcher.pm \
 	Git.pm \
 	Git/SVN/Ra.pm
 	$(NOECHO) $(POD2MAN) --section=$(MAN3EXT) --perm_rw=$(PERM_RW) \
 	  Git/SVN/Editor.pm $(INST_MAN3DIR)/Git::SVN::Editor.$(MAN3EXT) \
-	  Git/I18N.pm $(INST_MAN3DIR)/Git::I18N.$(MAN3EXT) \
 	  Git/SVN/Prompt.pm $(INST_MAN3DIR)/Git::SVN::Prompt.$(MAN3EXT) \
+	  Git/I18N.pm $(INST_MAN3DIR)/Git::I18N.$(MAN3EXT) \
 	  Git/SVN/Utils.pm $(INST_MAN3DIR)/Git::SVN::Utils.$(MAN3EXT) \
-	  Git/SVN/Fetcher.pm $(INST_MAN3DIR)/Git::SVN::Fetcher.$(MAN3EXT) \
 	  Git/SVN/Memoize/YAML.pm $(INST_MAN3DIR)/Git::SVN::Memoize::YAML.$(MAN3EXT) \
+	  Git/SVN/Fetcher.pm $(INST_MAN3DIR)/Git::SVN::Fetcher.$(MAN3EXT) \
 	  Git.pm $(INST_MAN3DIR)/Git.$(MAN3EXT) \
 	  Git/SVN/Ra.pm $(INST_MAN3DIR)/Git::SVN::Ra.$(MAN3EXT) 
 
 
 
 
@@ -497,28 +497,28 @@
 
 # Delete temporary files but do not touch installed files. We don't delete
 # the Makefile here so a later make realclean still has a makefile to use.
 
 clean :: clean_subdirs
 	- $(RM_F) \
-	  core.*perl.*.? pm_to_blib \
-	  $(BASEEXT).exp $(INST_ARCHAUTODIR)/extralibs.ld \
-	  perl.exe $(BASEEXT).bso \
-	  perlmain.c *$(OBJ_EXT) \
-	  MYMETA.yml core.[0-9][0-9][0-9][0-9] \
-	  lib$(BASEEXT).def perl \
-	  core.[0-9] pm_to_blib.ts \
-	  $(BOOTSTRAP) MYMETA.json \
-	  blibdirs.ts $(BASEEXT).x \
-	  *perl.core $(INST_ARCHAUTODIR)/extralibs.all \
-	  mon.out $(BASEEXT).def \
-	  core.[0-9][0-9][0-9] core.[0-9][0-9][0-9][0-9][0-9] \
-	  $(MAKE_APERL_FILE) perl$(EXE_EXT) \
-	  so_locations tmon.out \
-	  *$(LIB_EXT) core.[0-9][0-9] \
-	  core 
+	  $(INST_ARCHAUTODIR)/extralibs.all core \
+	  core.[0-9][0-9][0-9][0-9][0-9] $(BASEEXT).bso \
+	  mon.out so_locations \
+	  core.[0-9][0-9][0-9][0-9] $(BASEEXT).x \
+	  core.*perl.*.? perl$(EXE_EXT) \
+	  perl.exe tmon.out \
+	  $(BOOTSTRAP) core.[0-9][0-9] \
+	  MYMETA.json pm_to_blib.ts \
+	  $(BASEEXT).def blibdirs.ts \
+	  perlmain.c MYMETA.yml \
+	  pm_to_blib core.[0-9] \
+	  *perl.core $(INST_ARCHAUTODIR)/extralibs.ld \
+	  $(BASEEXT).exp perl \
+	  core.[0-9][0-9][0-9] *$(LIB_EXT) \
+	  $(MAKE_APERL_FILE) lib$(BASEEXT).def \
+	  *$(OBJ_EXT) 
 	- $(RM_RF) \
 	  blib 
 	- $(MV) $(FIRST_MAKEFILE) $(MAKEFILE_OLD) $(DEV_NULL)
 
 
 # --- MakeMaker realclean_subdirs section:
@@ -884,25 +884,25 @@
 
 
 # --- MakeMaker pm_to_blib section:
 
 pm_to_blib : $(FIRST_MAKEFILE) $(TO_INST_PM)
 	$(NOECHO) $(ABSPERLRUN) -MExtUtils::Install -e 'pm_to_blib({@ARGV}, '\''$(INST_LIB)/auto'\'', q[$(PM_FILTER)], '\''$(PERM_DIR)'\'')' -- \
-	  Git/SVN/GlobSpec.pm $(INST_LIBDIR)/Git/SVN/GlobSpec.pm \
+	  Git/SVN/Memoize/YAML.pm $(INST_LIBDIR)/Git/SVN/Memoize/YAML.pm \
 	  Git/SVN/Fetcher.pm $(INST_LIBDIR)/Git/SVN/Fetcher.pm \
-	  Git/SVN/Migration.pm $(INST_LIBDIR)/Git/SVN/Migration.pm \
+	  Git/SVN/GlobSpec.pm $(INST_LIBDIR)/Git/SVN/GlobSpec.pm \
 	  Git.pm $(INST_LIBDIR)/Git.pm \
-	  Git/SVN/Memoize/YAML.pm $(INST_LIBDIR)/Git/SVN/Memoize/YAML.pm \
 	  Git/SVN/Ra.pm $(INST_LIBDIR)/Git/SVN/Ra.pm \
-	  Git/SVN.pm $(INST_LIBDIR)/Git/SVN.pm \
+	  Git/SVN/Migration.pm $(INST_LIBDIR)/Git/SVN/Migration.pm \
 	  Git/I18N.pm $(INST_LIBDIR)/Git/I18N.pm \
+	  Git/SVN/Utils.pm $(INST_LIBDIR)/Git/SVN/Utils.pm \
+	  Git/SVN.pm $(INST_LIBDIR)/Git/SVN.pm \
+	  Git/SVN/Prompt.pm $(INST_LIBDIR)/Git/SVN/Prompt.pm \
 	  Git/IndexInfo.pm $(INST_LIBDIR)/Git/IndexInfo.pm \
 	  Git/SVN/Log.pm $(INST_LIBDIR)/Git/SVN/Log.pm \
-	  Git/SVN/Editor.pm $(INST_LIBDIR)/Git/SVN/Editor.pm \
-	  Git/SVN/Prompt.pm $(INST_LIBDIR)/Git/SVN/Prompt.pm \
-	  Git/SVN/Utils.pm $(INST_LIBDIR)/Git/SVN/Utils.pm 
+	  Git/SVN/Editor.pm $(INST_LIBDIR)/Git/SVN/Editor.pm 
 	$(NOECHO) $(TOUCH) pm_to_blib
 
 
 # --- MakeMaker selfdocument section:
 
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pkt-line.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pkt-line.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pkt-line.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pkt-line.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/bg.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/bg.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/bg.po	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/bg.po	2015-05-01 03:12:02.000000000 +0800
@@ -127,14 +127,14 @@
 #  54 [git-submodule]    27 [git-rebase]    12 [name-rev]        7 [symbolic-ref]    3 [bisect--helper]
 #
 msgid ""
 msgstr ""
 "Project-Id-Version: git master\n"
 "Report-Msgid-Bugs-To: Git Mailing List <git@vger.kernel.org>\n"
-"POT-Creation-Date: 2014-11-20 09:42+0800\n"
-"PO-Revision-Date: 2014-11-20 16:09+0800\n"
+"POT-Creation-Date: 2015-04-03 08:13+0800\n"
+"PO-Revision-Date: 2015-04-07 11:21+0300\n"
 "Last-Translator: Alexander Shopov <ash@kambanaria.org>\n"
 "Language-Team: Bulgarian <dict@fsa-bg.org>\n"
 "Language: bg\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
@@ -152,104 +152,104 @@
 "as appropriate to mark resolution and make a commit."
 msgstr ""
 "Редактирайте ги в работното дърво, и тогава ползвайте „git add/rm ФАЙЛ“\n"
 "за да отбележите коригирането им. След това извършете подаването."
 
 #: archive.c:11
-msgid "git archive [options] <tree-ish> [<path>...]"
+msgid "git archive [<options>] <tree-ish> [<path>...]"
 msgstr "git archive [ОПЦИЯ…] УКАЗАТЕЛ_КЪМ_ДЪРВО [ПЪТ…]"
 
 #: archive.c:12
 msgid "git archive --list"
 msgstr "git archive --list"
 
 #: archive.c:13
 msgid ""
-"git archive --remote <repo> [--exec <cmd>] [options] <tree-ish> [<path>...]"
+"git archive --remote <repo> [--exec <cmd>] [<options>] <tree-ish> [<path>...]"
 msgstr ""
 "git archive --remote ХРАНИЛИЩЕ [--exec КОМАНДА] [ОПЦИЯ…] УКАЗАТЕЛ_КЪМ_ДЪРВО "
 "[ПЪТ…]"
 
 #: archive.c:14
 msgid "git archive --remote <repo> [--exec <cmd>] --list"
 msgstr "git archive --remote ХРАНИЛИЩЕ [--exec КОМАНДА] --list"
 
-#: archive.c:334 builtin/add.c:137 builtin/add.c:427 builtin/rm.c:328
+#: archive.c:342 builtin/add.c:137 builtin/add.c:427 builtin/rm.c:328
 #, c-format
 msgid "pathspec '%s' did not match any files"
 msgstr "пътят „%s“ не съвпада с никой файл"
 
-#: archive.c:419
+#: archive.c:427
 msgid "fmt"
 msgstr "ФОРМАТ"
 
-#: archive.c:419
+#: archive.c:427
 msgid "archive format"
 msgstr "ФОРМАТ на архива"
 
-#: archive.c:420 builtin/log.c:1204
+#: archive.c:428 builtin/log.c:1204
 msgid "prefix"
 msgstr "префикс"
 
-#: archive.c:421
+#: archive.c:429
 msgid "prepend prefix to each pathname in the archive"
 msgstr "добавяне на този префикс към всеки път в архива"
 
-#: archive.c:422 builtin/archive.c:88 builtin/blame.c:2517
-#: builtin/blame.c:2518 builtin/config.c:57 builtin/fast-export.c:986
+#: archive.c:430 builtin/archive.c:88 builtin/blame.c:2516
+#: builtin/blame.c:2517 builtin/config.c:57 builtin/fast-export.c:986
 #: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:101
-#: builtin/ls-files.c:489 builtin/ls-files.c:492 builtin/notes.c:411
-#: builtin/notes.c:568 builtin/read-tree.c:109 parse-options.h:151
+#: builtin/ls-files.c:446 builtin/ls-files.c:449 builtin/notes.c:394
+#: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:151
 msgid "file"
 msgstr "файл"
 
-#: archive.c:423 builtin/archive.c:89
+#: archive.c:431 builtin/archive.c:89
 msgid "write the archive to this file"
 msgstr "запазване на архива в този файл"
 
-#: archive.c:425
+#: archive.c:433
 msgid "read .gitattributes in working directory"
 msgstr "изчитане на „.gitattributes“ в работната директория"
 
-#: archive.c:426
+#: archive.c:434
 msgid "report archived files on stderr"
 msgstr "извеждане на архивираните файлове на стандартната грешка"
 
-#: archive.c:427
+#: archive.c:435
 msgid "store only"
 msgstr "само съхранение без компресиране"
 
-#: archive.c:428
+#: archive.c:436
 msgid "compress faster"
 msgstr "бързо компресиране"
 
-#: archive.c:436
+#: archive.c:444
 msgid "compress better"
 msgstr "добро компресиране"
 
-#: archive.c:439
+#: archive.c:447
 msgid "list supported archive formats"
 msgstr "извеждане на списъка с поддържаните формати"
 
-#: archive.c:441 builtin/archive.c:90 builtin/clone.c:85
+#: archive.c:449 builtin/archive.c:90 builtin/clone.c:86
 msgid "repo"
 msgstr "хранилище"
 
-#: archive.c:442 builtin/archive.c:91
+#: archive.c:450 builtin/archive.c:91
 msgid "retrieve the archive from remote repository <repo>"
 msgstr "изтегляне на архива от отдалеченото ХРАНИЛИЩЕ"
 
-#: archive.c:443 builtin/archive.c:92 builtin/notes.c:490
+#: archive.c:451 builtin/archive.c:92 builtin/notes.c:478
 msgid "command"
 msgstr "команда"
 
-#: archive.c:444 builtin/archive.c:93
+#: archive.c:452 builtin/archive.c:93
 msgid "path to the remote git-upload-archive command"
 msgstr "път към отдалечената команда „git-upload-archive“"
 
-#: attr.c:258
+#: attr.c:264
 msgid ""
 "Negative patterns are ignored in git attributes\n"
 "Use '\\!' for literal leading exclamation."
 msgstr ""
 "Отрицателните шаблони се игнорират в атрибутите на git.\n"
 "Ако ви трябва начална удивителна, ползвайте „\\!“."
@@ -373,24 +373,24 @@
 
 #: bundle.c:61
 #, c-format
 msgid "unrecognized header: %s%s (%d)"
 msgstr "непозната заглавна част: %s%s (%d)"
 
-#: bundle.c:87 builtin/commit.c:788
+#: bundle.c:87 builtin/commit.c:766
 #, c-format
 msgid "could not open '%s'"
 msgstr "„%s“ не може да се отвори"
 
 #: bundle.c:139
 msgid "Repository lacks these prerequisite commits:"
 msgstr "В хранилището липсват следните необходими подавания:"
 
-#: bundle.c:163 sequencer.c:641 sequencer.c:1096 builtin/blame.c:2706
-#: builtin/branch.c:652 builtin/commit.c:1085 builtin/log.c:330
-#: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:357
+#: bundle.c:163 sequencer.c:650 sequencer.c:1105 builtin/blame.c:2705
+#: builtin/branch.c:659 builtin/commit.c:1045 builtin/log.c:330
+#: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:358
 #: builtin/shortlog.c:158
 msgid "revision walk setup failed"
 msgstr "неуспешно настройване на обхождането на версиите"
 
 #: bundle.c:185
 #, c-format
@@ -427,32 +427,32 @@
 #: bundle.c:358
 #, c-format
 msgid "ref '%s' is excluded by the rev-list options"
 msgstr ""
 "указателят „%s“ не е бил включен поради опциите зададени на „git rev-list“"
 
-#: bundle.c:438 builtin/log.c:153 builtin/log.c:1342 builtin/shortlog.c:261
+#: bundle.c:437 builtin/log.c:153 builtin/log.c:1342 builtin/shortlog.c:261
 #, c-format
 msgid "unrecognized argument: %s"
 msgstr "непознат аргумент: %s"
 
-#: bundle.c:444
+#: bundle.c:443
 msgid "Refusing to create empty bundle."
 msgstr "Създаването на празна пратка е невъзможно."
 
-#: bundle.c:454
+#: bundle.c:453
 #, c-format
 msgid "cannot create '%s'"
 msgstr "Файлът „%s“ не може да бъде създаден"
 
 # FIXME better message
-#: bundle.c:475
+#: bundle.c:474
 msgid "index-pack died"
 msgstr "Командата „git index-pack“ не завърши успешно"
 
-#: color.c:157
+#: color.c:260
 #, c-format
 msgid "invalid color value: %.*s"
 msgstr "неправилна стойност за цвят: %.*s"
 
 #: commit.c:40
 #, c-format
@@ -465,62 +465,62 @@
 msgstr "%s %s не е подаване!"
 
 #: compat/obstack.c:406 compat/obstack.c:408
 msgid "memory exhausted"
 msgstr "паметта свърши"
 
-#: config.c:469 config.c:471
+#: config.c:474 config.c:476
 #, c-format
 msgid "bad config file line %d in %s"
 msgstr "неправилен ред %d в „%s“"
 
-#: config.c:587
+#: config.c:592
 #, c-format
 msgid "bad numeric config value '%s' for '%s' in %s: %s"
 msgstr ""
 "неправилна числова стойност „%s“ за настройката „%s“ в раздела „%s“: %s"
 
-#: config.c:589
+#: config.c:594
 #, c-format
 msgid "bad numeric config value '%s' for '%s': %s"
 msgstr "неправилна числова стойност „%s“ за настройката „%s“: %s"
 
-#: config.c:674
+#: config.c:679
 #, c-format
 msgid "failed to expand user dir in: '%s'"
 msgstr "домашната папка на потребителя не може да бъде открита: „%s“"
 
-#: config.c:752 config.c:763
+#: config.c:757 config.c:768
 #, c-format
 msgid "bad zlib compression level %d"
 msgstr "неправилно ниво на компресиране: %d"
 
-#: config.c:885
+#: config.c:890
 #, c-format
 msgid "invalid mode for object creation: %s"
 msgstr "неправилен режим за създаването на обекти: %s"
 
-#: config.c:1201
+#: config.c:1216
 msgid "unable to parse command-line config"
 msgstr "неправилни настройки от командния ред"
 
-#: config.c:1262
+#: config.c:1277
 msgid "unknown error occured while reading the configuration files"
 msgstr "неочаквана грешка при изчитането на конфигурационните файлове"
 
-#: config.c:1586
+#: config.c:1601
 #, c-format
 msgid "unable to parse '%s' from command-line config"
 msgstr "неразпозната стойност „%s“ от командния ред"
 
-#: config.c:1588
+#: config.c:1603
 #, c-format
 msgid "bad config variable '%s' in file '%s' at line %d"
 msgstr "неправилна настройка „%s“ във файла „%s“ на ред №%d"
 
-#: config.c:1647
+#: config.c:1662
 #, c-format
 msgid "%s has multiple values"
 msgstr "зададени са няколко стойности за „%s“"
 
 #: connected.c:69
 msgid "Could not run 'git rev-list'"
@@ -606,13 +606,13 @@
 
 #: diffcore-order.c:24
 #, c-format
 msgid "failed to read orderfile '%s'"
 msgstr "файлът с подредбата на съответствията „%s“ не може да бъде прочетен"
 
-#: diffcore-rename.c:516
+#: diffcore-rename.c:536
 msgid "Performing inexact rename detection"
 msgstr "Търсене на преименувания на обекти съчетани с промени"
 
 #: diff.c:114
 #, c-format
 msgid "  Failed to parse dirstat cut-off percentage '%s'\n"
@@ -636,32 +636,32 @@
 "Found errors in 'diff.dirstat' config variable:\n"
 "%s"
 msgstr ""
 "Грешки в настройката „diff.dirstat“:\n"
 "%s"
 
-#: diff.c:2957
+#: diff.c:2956
 #, c-format
 msgid "external diff died, stopping at %s"
 msgstr ""
 "външната програма за разлики завърши неуспешно. Спиране на работата при „%s“"
 
-#: diff.c:3352
+#: diff.c:3351
 msgid "--follow requires exactly one pathspec"
 msgstr "Опцията „--follow“ изисква точно един път"
 
-#: diff.c:3515
+#: diff.c:3514
 #, c-format
 msgid ""
 "Failed to parse --dirstat/-X option parameter:\n"
 "%s"
 msgstr ""
 "Неразпознат параметър към опцията „--dirstat/-X“:\n"
 "%s"
 
-#: diff.c:3529
+#: diff.c:3528
 #, c-format
 msgid "Failed to parse --submodule option parameter: '%s'"
 msgstr "Неразпознат параметър към опцията „--submodule“: „%s“"
 
 #: gpg-interface.c:129 gpg-interface.c:200
 msgid "could not run gpg."
@@ -764,26 +764,26 @@
 
 #: help.c:440
 #, c-format
 msgid "%s: %s - %s"
 msgstr "%s: %s — %s"
 
-#: lockfile.c:275
+#: lockfile.c:283
 msgid "BUG: reopen a lockfile that is still open"
 msgstr "ГРЕШКА В GIT: преотваряне на файл-ключалка"
 
-#: lockfile.c:277
+#: lockfile.c:285
 msgid "BUG: reopen a lockfile that has been committed"
 msgstr "ГРЕШКА В GIT: преотваряне на файл-ключалка, който е подаден"
 
 #: merge.c:41
 msgid "failed to read the cache"
 msgstr "кешът не може да бъде прочетен"
 
-#: merge.c:94 builtin/checkout.c:356 builtin/checkout.c:562
-#: builtin/clone.c:659
+#: merge.c:94 builtin/checkout.c:374 builtin/checkout.c:580
+#: builtin/clone.c:662
 msgid "unable to write new index file"
 msgstr "неуспешно записване на новия индекс"
 
 #: merge-recursive.c:189
 #, c-format
 msgid "(bad commit)\n"
@@ -795,230 +795,230 @@
 msgstr "неуспешно изпълнение на „addinfo_cache“ за пътя „%s“"
 
 #: merge-recursive.c:270
 msgid "error building trees"
 msgstr "грешка при изграждане на дърветата"
 
-#: merge-recursive.c:691
+#: merge-recursive.c:688
 #, c-format
 msgid "failed to create path '%s'%s"
 msgstr "грешка при създаването на пътя „%s“%s"
 
-#: merge-recursive.c:702
+#: merge-recursive.c:699
 #, c-format
 msgid "Removing %s to make room for subdirectory\n"
 msgstr "Изтриване на „%s“, за да се освободи място за поддиректория\n"
 
 # FIXME better message
-#: merge-recursive.c:716 merge-recursive.c:737
+#: merge-recursive.c:713 merge-recursive.c:734
 msgid ": perhaps a D/F conflict?"
 msgstr ": възможно е да има конфликт директория/файл."
 
-#: merge-recursive.c:727
+#: merge-recursive.c:724
 #, c-format
 msgid "refusing to lose untracked file at '%s'"
 msgstr ""
 "преустановяване на действието, за да не се изтрие неследеният файл „%s“"
 
-#: merge-recursive.c:767
+#: merge-recursive.c:764
 #, c-format
 msgid "cannot read object %s '%s'"
 msgstr "обектът „%s“ (%s) не може да бъде прочетен"
 
-#: merge-recursive.c:769
+#: merge-recursive.c:766
 #, c-format
 msgid "blob expected for %s '%s'"
 msgstr "обектът „%s“ (%s) се очакваше да е BLOB, а не е"
 
-#: merge-recursive.c:792 builtin/clone.c:318
+#: merge-recursive.c:789 builtin/clone.c:321
 #, c-format
 msgid "failed to open '%s'"
 msgstr "директорията „%s“ не може да бъде отворена"
 
-#: merge-recursive.c:800
+#: merge-recursive.c:797
 #, c-format
 msgid "failed to symlink '%s'"
 msgstr "неуспешно създаване на символната връзка „%s“"
 
-#: merge-recursive.c:803
+#: merge-recursive.c:800
 #, c-format
 msgid "do not know what to do with %06o %s '%s'"
 msgstr ""
 "не е ясно какво да се прави с обекта „%2$s“ (%3$s) с права за достъп „%1$06o“"
 
-#: merge-recursive.c:941
+#: merge-recursive.c:938
 msgid "Failed to execute internal merge"
 msgstr "Неуспешно вътрешно сливане"
 
-#: merge-recursive.c:945
+#: merge-recursive.c:942
 #, c-format
 msgid "Unable to add %s to database"
 msgstr "„%s“ не може да се добави в базата с данни"
 
-#: merge-recursive.c:961
+#: merge-recursive.c:958
 msgid "unsupported object type in the tree"
 msgstr "в дървото има неподдържан вид обект"
 
-#: merge-recursive.c:1036 merge-recursive.c:1050
+#: merge-recursive.c:1033 merge-recursive.c:1047
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree."
 msgstr ""
 "КОНФЛИКТ (%s/изтриване): „%s“ е изтрит в %s, а „%s“ в %s. Версия %s на „%s“ "
 "е оставена в дървото."
 
-#: merge-recursive.c:1042 merge-recursive.c:1055
+#: merge-recursive.c:1039 merge-recursive.c:1052
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree at %s."
 msgstr ""
 "КОНФЛИКТ (%s/изтриване): „%s“ е изтрит в %s, а „%s“ в %s. Версия %s на „%s“ "
 "е оставена в дървото: %s."
 
-#: merge-recursive.c:1096
+#: merge-recursive.c:1093
 msgid "rename"
 msgstr "преименуване"
 
-#: merge-recursive.c:1096
+#: merge-recursive.c:1093
 msgid "renamed"
 msgstr "преименуван"
 
-#: merge-recursive.c:1152
+#: merge-recursive.c:1149
 #, c-format
 msgid "%s is a directory in %s adding as %s instead"
 msgstr "„%s“ е директория в „%s“, затова се добавя като „%s“"
 
-#: merge-recursive.c:1174
+#: merge-recursive.c:1171
 #, c-format
 msgid ""
 "CONFLICT (rename/rename): Rename \"%s\"->\"%s\" in branch \"%s\" rename \"%s"
 "\"->\"%s\" in \"%s\"%s"
 msgstr ""
 "КОНФЛИКТ (преименуване/преименуване): „%s“ е преименуван на „%s“ в клон "
 "„%s“, а „%s“ е преименуван на „%s“ в „%s“/%s."
 
-#: merge-recursive.c:1179
+#: merge-recursive.c:1176
 msgid " (left unresolved)"
 msgstr " (некоригиран конфликт)"
 
-#: merge-recursive.c:1233
+#: merge-recursive.c:1230
 #, c-format
 msgid "CONFLICT (rename/rename): Rename %s->%s in %s. Rename %s->%s in %s"
 msgstr ""
 "КОНФЛИКТ (преименуване/преименуване): „%s“ е преименуван на „%s“ в клон "
 "„%s“, а „%s“ е преименуван на „%s“ в „%s“"
 
-#: merge-recursive.c:1263
+#: merge-recursive.c:1260
 #, c-format
 msgid "Renaming %s to %s and %s to %s instead"
 msgstr "Преименуване на „%s“ на „%s“, а „%s“ на „%s“"
 
-#: merge-recursive.c:1462
+#: merge-recursive.c:1459
 #, c-format
 msgid "CONFLICT (rename/add): Rename %s->%s in %s. %s added in %s"
 msgstr ""
 "КОНФЛИКТ (преименуване/добавяне): „%s“ е преименуван на „%s“ в клон „%s“, а "
 "„%s“ е добавен в „%s“"
 
-#: merge-recursive.c:1472
+#: merge-recursive.c:1469
 #, c-format
 msgid "Adding merged %s"
 msgstr "Добавяне на слетия „%s“"
 
-#: merge-recursive.c:1477 merge-recursive.c:1675
+#: merge-recursive.c:1474 merge-recursive.c:1672
 #, c-format
 msgid "Adding as %s instead"
 msgstr "Добавяне като „%s“"
 
-#: merge-recursive.c:1528
+#: merge-recursive.c:1525
 #, c-format
 msgid "cannot read object %s"
 msgstr "обектът „%s“ не може да се прочете"
 
-#: merge-recursive.c:1531
+#: merge-recursive.c:1528
 #, c-format
 msgid "object %s is not a blob"
 msgstr "обектът „%s“ не е BLOB"
 
-#: merge-recursive.c:1579
+#: merge-recursive.c:1576
 msgid "modify"
 msgstr "промяна"
 
-#: merge-recursive.c:1579
+#: merge-recursive.c:1576
 msgid "modified"
 msgstr "променен"
 
-#: merge-recursive.c:1589
+#: merge-recursive.c:1586
 msgid "content"
 msgstr "съдържание"
 
-#: merge-recursive.c:1596
+#: merge-recursive.c:1593
 msgid "add/add"
 msgstr "добавяне/добавяне"
 
-#: merge-recursive.c:1630
+#: merge-recursive.c:1627
 #, c-format
 msgid "Skipped %s (merged same as existing)"
 msgstr "Прескачане на „%s“ (слетият резултат е идентичен със сегашния)"
 
-#: merge-recursive.c:1644
+#: merge-recursive.c:1641
 #, c-format
 msgid "Auto-merging %s"
 msgstr "Автоматично сливане на „%s“"
 
-#: merge-recursive.c:1648 git-submodule.sh:1150
+#: merge-recursive.c:1645 git-submodule.sh:1150
 msgid "submodule"
 msgstr "ПОДМОДУЛ"
 
-#: merge-recursive.c:1649
+#: merge-recursive.c:1646
 #, c-format
 msgid "CONFLICT (%s): Merge conflict in %s"
 msgstr "КОНФЛИКТ (%s): Конфликт при сливане на „%s“"
 
-#: merge-recursive.c:1735
+#: merge-recursive.c:1732
 #, c-format
 msgid "Removing %s"
 msgstr "Изтриване на „%s“"
 
-#: merge-recursive.c:1760
+#: merge-recursive.c:1757
 msgid "file/directory"
 msgstr "файл/директория"
 
-#: merge-recursive.c:1766
+#: merge-recursive.c:1763
 msgid "directory/file"
 msgstr "директория/файл"
 
-#: merge-recursive.c:1771
+#: merge-recursive.c:1768
 #, c-format
 msgid "CONFLICT (%s): There is a directory with name %s in %s. Adding %s as %s"
 msgstr ""
 "КОНФЛИКТ (%s): Съществува директория на име „%s“ в „%s“. Добавяне на „%s“ "
 "като „%s“"
 
-#: merge-recursive.c:1781
+#: merge-recursive.c:1778
 #, c-format
 msgid "Adding %s"
 msgstr "Добавяне на „%s“"
 
-#: merge-recursive.c:1798
+#: merge-recursive.c:1795
 msgid "Fatal merge failure, shouldn't happen."
 msgstr "Фатална грешка при сливане, а такава не трябва да възниква!"
 
-#: merge-recursive.c:1817
+#: merge-recursive.c:1814
 msgid "Already up-to-date!"
 msgstr "Вече е обновено!"
 
-#: merge-recursive.c:1826
+#: merge-recursive.c:1823
 #, c-format
 msgid "merging of trees %s and %s failed"
 msgstr "неуспешно сливане на дърветата „%s“ и „%s“"
 
 # FIXME message
-#: merge-recursive.c:1856
+#: merge-recursive.c:1853
 #, c-format
 msgid "Unprocessed path??? %s"
 msgstr ""
 "Пътят „%s“ не е обработен, това е грешка в Git, докладвайте я на "
 "разработчиците, като пратите е-писмо на адрес: „git@vger.kernel.org“."
 
@@ -1039,35 +1039,35 @@
 
 #: merge-recursive.c:2008
 #, c-format
 msgid "Could not parse object '%s'"
 msgstr "Неуспешен анализ на обекта „%s“"
 
-#: merge-recursive.c:2019 builtin/merge.c:666
+#: merge-recursive.c:2019 builtin/merge.c:667
 msgid "Unable to write index."
 msgstr "Индексът не може да бъде прочетен"
 
 #: notes-utils.c:41
 msgid "Cannot commit uninitialized/unreferenced notes tree"
 msgstr ""
 "Неинициализирано или нереферирано дърво за бележки не може да бъде подадено"
 
-#: notes-utils.c:83
+#: notes-utils.c:82
 #, c-format
 msgid "Bad notes.rewriteMode value: '%s'"
 msgstr "Неправилна стойност за „notes.rewriteMode“: „%s“"
 
-#: notes-utils.c:93
+#: notes-utils.c:92
 #, c-format
 msgid "Refusing to rewrite notes in %s (outside of refs/notes/)"
 msgstr ""
 "Бележките в „%s“ няма да бъдат презаписани, защото са извън „refs/notes/“."
 
 #. TRANSLATORS: The first %s is the name of the
 #. environment variable, the second %s is its value
-#: notes-utils.c:120
+#: notes-utils.c:119
 #, c-format
 msgid "Bad %s value: '%s'"
 msgstr "Зададена е лоша стойност на променливата „%s“: „%s“"
 
 #: object.c:241
 #, c-format
@@ -1168,22 +1168,22 @@
 msgstr "аргументът към опцията „--pretty“ не може да се анализира"
 
 #: progress.c:225
 msgid "done"
 msgstr "действието завърши"
 
-#: read-cache.c:1261
+#: read-cache.c:1275
 #, c-format
 msgid ""
 "index.version set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "Зададена е неправилна стойност на настройката „index.version“.\n"
 "Ще се ползва версия %i"
 
-#: read-cache.c:1271
+#: read-cache.c:1285
 #, c-format
 msgid ""
 "GIT_INDEX_VERSION set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "Зададена е неправилна стойност на променливата на средата "
@@ -1206,52 +1206,52 @@
 msgstr "„%s“ следи както „%s“, така и „%s“"
 
 #: remote.c:798
 msgid "Internal error"
 msgstr "Вътрешна грешка"
 
-#: remote.c:1968
+#: remote.c:1980
 #, c-format
 msgid "Your branch is based on '%s', but the upstream is gone.\n"
 msgstr "Този клон следи „%s“, но следеният клон е изтрит.\n"
 
-#: remote.c:1972
+#: remote.c:1984
 msgid "  (use \"git branch --unset-upstream\" to fixup)\n"
 msgstr "  (за да коригирате това, използвайте „git branch --unset-upstream“)\n"
 
-#: remote.c:1975
+#: remote.c:1987
 #, c-format
 msgid "Your branch is up-to-date with '%s'.\n"
 msgstr "Клонът е актуализиран към „%s“.\n"
 
-#: remote.c:1979
+#: remote.c:1991
 #, c-format
 msgid "Your branch is ahead of '%s' by %d commit.\n"
 msgid_plural "Your branch is ahead of '%s' by %d commits.\n"
 msgstr[0] "Клонът ви е с %2$d подаване пред „%1$s“.\n"
 msgstr[1] "Клонът ви е с %2$d подавания пред „%1$s“.\n"
 
-#: remote.c:1985
+#: remote.c:1997
 msgid "  (use \"git push\" to publish your local commits)\n"
 msgstr "  (публикувайте локалните си промени чрез „git push“)\n"
 
-#: remote.c:1988
+#: remote.c:2000
 #, c-format
 msgid "Your branch is behind '%s' by %d commit, and can be fast-forwarded.\n"
 msgid_plural ""
 "Your branch is behind '%s' by %d commits, and can be fast-forwarded.\n"
 msgstr[0] ""
 "Клонът ви е с %2$d подаване след „%1$s“ и може да бъде тривиално слят.\n"
 msgstr[1] ""
 "Клонът ви е с %2$d подавания след „%1$s“ и може да бъде тривиално слят.\n"
 
-#: remote.c:1996
+#: remote.c:2008
 msgid "  (use \"git pull\" to update your local branch)\n"
 msgstr "  (обновете локалния си клон чрез „git pull“)\n"
 
-#: remote.c:1999
+#: remote.c:2011
 #, c-format
 msgid ""
 "Your branch and '%s' have diverged,\n"
 "and have %d and %d different commit each, respectively.\n"
 msgid_plural ""
 "Your branch and '%s' have diverged,\n"
@@ -1260,41 +1260,49 @@
 "Текущият клон се е отделил от „%s“,\n"
 "двата имат съответно по %d и %d несъвпадащи подавания.\n"
 msgstr[1] ""
 "Текущият клон се е отделил от „%s“,\n"
 "двата имат съответно по %d и %d несъвпадащи подавания.\n"
 
-#: remote.c:2009
+#: remote.c:2021
 msgid "  (use \"git pull\" to merge the remote branch into yours)\n"
 msgstr "  (слейте отдалечения клон в локалния чрез „git pull“)\n"
 
-#: run-command.c:87
+#: revision.c:2348
+msgid "--first-parent is incompatible with --bisect"
+msgstr "опциите „--first-parent“ и „--bisect“ са несъвместими"
+
+#: run-command.c:83
 msgid "open /dev/null failed"
 msgstr "неуспешно отваряне на „/dev/null“"
 
-#: run-command.c:89
+#: run-command.c:85
 #, c-format
 msgid "dup2(%d,%d) failed"
 msgstr "неуспешно изпълнение на dup2(%d,%d)"
 
-#: send-pack.c:265
+#: send-pack.c:272
 msgid "failed to sign the push certificate"
 msgstr "сертификатът за изтласкване не може да бъде подписан"
 
-#: send-pack.c:322
+#: send-pack.c:356
 msgid "the receiving end does not support --signed push"
 msgstr "отсрещната страна не поддържа изтласкване с опцията „--signed“"
 
-#: sequencer.c:172 builtin/merge.c:781 builtin/merge.c:892
-#: builtin/merge.c:1002 builtin/merge.c:1012
+#: send-pack.c:366
+msgid "the receiving end does not support --atomic push"
+msgstr "получаващата страна не поддържа изтласкване с опцията „--atomic“"
+
+#: sequencer.c:172 builtin/merge.c:782 builtin/merge.c:893 builtin/merge.c:995
+#: builtin/merge.c:1005
 #, c-format
 msgid "Could not open '%s' for writing"
 msgstr "„%s“ не може да бъде отворен за запис"
 
-#: sequencer.c:174 builtin/merge.c:343 builtin/merge.c:784
-#: builtin/merge.c:1004 builtin/merge.c:1017
+#: sequencer.c:174 builtin/merge.c:344 builtin/merge.c:785 builtin/merge.c:997
+#: builtin/merge.c:1010
 #, c-format
 msgid "Could not write to '%s'"
 msgstr "„%s“ не може да бъде записан"
 
 # FIXME git add <path…> for consistence
 #: sequencer.c:195
@@ -1313,13 +1321,13 @@
 msgstr ""
 "след коригирането на конфликтите, отбележете съответните\n"
 "пътища с „git add ПЪТ…“ или „git rm ПЪТ…“, след което\n"
 "подайте резултата с командата „git commit'“."
 
 # FIXME - must be the same as Could not write to '%s' above
-#: sequencer.c:211 sequencer.c:852 sequencer.c:935
+#: sequencer.c:211 sequencer.c:861 sequencer.c:944
 #, c-format
 msgid "Could not write to %s"
 msgstr "„%s“ не може да бъде записан"
 
 # FIXME wrap up as ffinishing the work on, in fact, full stop at end for consistency with below
 #: sequencer.c:214
@@ -1337,210 +1345,210 @@
 
 #: sequencer.c:234
 msgid "Commit your changes or stash them to proceed."
 msgstr "Подайте или скатайте промените, за да продължите"
 
 #. TRANSLATORS: %s will be "revert" or "cherry-pick"
-#: sequencer.c:304
+#: sequencer.c:321
 #, c-format
 msgid "%s: Unable to write new index file"
 msgstr "%s: новият индекс не може да бъде запазен"
 
-#: sequencer.c:335
+#: sequencer.c:339
 msgid "Could not resolve HEAD commit\n"
 msgstr "Подаването сочено от указателя „HEAD“ не може да бъде открито\n"
 
-#: sequencer.c:355
+#: sequencer.c:359
 msgid "Unable to update cache tree\n"
 msgstr "Дървото на кеша не може да бъде обновено\n"
 
-#: sequencer.c:402
+#: sequencer.c:411
 #, c-format
 msgid "Could not parse commit %s\n"
 msgstr "Подаването „%s“ не може да бъде анализирано\n"
 
-#: sequencer.c:407
+#: sequencer.c:416
 #, c-format
 msgid "Could not parse parent commit %s\n"
 msgstr "Родителското подаване „%s“ не може да бъде анализирано\n"
 
-#: sequencer.c:473
+#: sequencer.c:482
 msgid "Your index file is unmerged."
 msgstr "Индексът не е слят."
 
-#: sequencer.c:492
+#: sequencer.c:501
 #, c-format
 msgid "Commit %s is a merge but no -m option was given."
 msgstr "Подаването „%s“ е сливане, но не е дадена опцията „-m“"
 
-#: sequencer.c:500
+#: sequencer.c:509
 #, c-format
 msgid "Commit %s does not have parent %d"
 msgstr "Подаването „%s“ няма родител %d"
 
-#: sequencer.c:504
+#: sequencer.c:513
 #, c-format
 msgid "Mainline was specified but commit %s is not a merge."
 msgstr "Указано е базово подаване, но подаването „%s“ не е сливане."
 
 #. TRANSLATORS: The first %s will be "revert" or
 #. "cherry-pick", the second %s a SHA1
-#: sequencer.c:517
+#: sequencer.c:526
 #, c-format
 msgid "%s: cannot parse parent commit %s"
 msgstr "%s: неразпозната стойност за родителското подаване „%s“"
 
-#: sequencer.c:521
+#: sequencer.c:530
 #, c-format
 msgid "Cannot get commit message for %s"
 msgstr "Неуспешно извличане на съобщението за подаване на „%s“"
 
-#: sequencer.c:607
+#: sequencer.c:616
 #, c-format
 msgid "could not revert %s... %s"
 msgstr "подаването „%s“… не може да бъде отменено: „%s“"
 
-#: sequencer.c:608
+#: sequencer.c:617
 #, c-format
 msgid "could not apply %s... %s"
 msgstr "подаването „%s“… не може да бъде приложено: „%s“"
 
-#: sequencer.c:644
+#: sequencer.c:653
 msgid "empty commit set passed"
 msgstr "зададено е празно множество от подавания"
 
-#: sequencer.c:652
+#: sequencer.c:661
 #, c-format
 msgid "git %s: failed to read the index"
 msgstr "git %s: неуспешно изчитане на индекса"
 
-#: sequencer.c:656
+#: sequencer.c:665
 #, c-format
 msgid "git %s: failed to refresh the index"
 msgstr "git %s: неуспешно обновяване на индекса"
 
-#: sequencer.c:716
+#: sequencer.c:725
 #, c-format
 msgid "Cannot %s during a %s"
 msgstr "По време на „%1$s“ не може да се извърши „%2$s“"
 
-#: sequencer.c:738
+#: sequencer.c:747
 #, c-format
 msgid "Could not parse line %d."
 msgstr "%d-ят ред не може да се анализира."
 
-#: sequencer.c:743
+#: sequencer.c:752
 msgid "No commits parsed."
 msgstr "Никое от подаванията не може да се разпознае."
 
 # FIXME Could not open %s. - full stop for consistence with next message
-#: sequencer.c:756
+#: sequencer.c:765
 #, c-format
 msgid "Could not open %s"
 msgstr "„%s“ не може да се прочете."
 
-#: sequencer.c:760
+#: sequencer.c:769
 #, c-format
 msgid "Could not read %s."
 msgstr "„%s“ не може да се отвори."
 
-#: sequencer.c:767
+#: sequencer.c:776
 #, c-format
 msgid "Unusable instruction sheet: %s"
 msgstr "Файлът с описание на предстоящите действия — „%s“ не може да се ползва"
 
-#: sequencer.c:797
+#: sequencer.c:806
 #, c-format
 msgid "Invalid key: %s"
 msgstr "Неправилен ключ: „%s“"
 
-#: sequencer.c:800
+#: sequencer.c:809
 #, c-format
 msgid "Invalid value for %s: %s"
 msgstr "Неправилна стойност за „%s“: „%s“"
 
-#: sequencer.c:812
+#: sequencer.c:821
 #, c-format
 msgid "Malformed options sheet: %s"
 msgstr "Неправилно съдържание на файла с опции: „%s“"
 
-#: sequencer.c:833
+#: sequencer.c:842
 msgid "a cherry-pick or revert is already in progress"
 msgstr ""
 "в момента вече се извършва отбиране на подавания или пребазиране на клона"
 
-#: sequencer.c:834
+#: sequencer.c:843
 msgid "try \"git cherry-pick (--continue | --quit | --abort)\""
 msgstr "използвайте „git cherry-pick (--continue | --quit | --abort)“"
 
-#: sequencer.c:838
+#: sequencer.c:847
 #, c-format
 msgid "Could not create sequencer directory %s"
 msgstr "Директорията за секвенсора „%s“ не може да бъде създадена"
 
-#: sequencer.c:854 sequencer.c:939
+#: sequencer.c:863 sequencer.c:948
 #, c-format
 msgid "Error wrapping up %s."
 msgstr "Обработката на „%s“ не завърши успешно."
 
-#: sequencer.c:873 sequencer.c:1009
+#: sequencer.c:882 sequencer.c:1018
 msgid "no cherry-pick or revert in progress"
 msgstr ""
 "в момента не се извършва отбиране на подавания или пребазиране на клона"
 
-#: sequencer.c:875
+#: sequencer.c:884
 msgid "cannot resolve HEAD"
 msgstr "Подаването сочено от указателя „HEAD“ не може да бъде открито"
 
-#: sequencer.c:877
+#: sequencer.c:886
 msgid "cannot abort from a branch yet to be born"
 msgstr ""
 "действието не може да бъде преустановено, когато сте на клон, който тепърва "
 "предстои да бъде създаден"
 
-#: sequencer.c:899 builtin/apply.c:4128
+#: sequencer.c:908 builtin/apply.c:4288
 #, c-format
 msgid "cannot open %s: %s"
 msgstr "файлът „%s“ не може да бъде отворен: %s"
 
-#: sequencer.c:902
+#: sequencer.c:911
 #, c-format
 msgid "cannot read %s: %s"
 msgstr "файлът „%s“ не може да бъде прочетен: %s"
 
-#: sequencer.c:903
+#: sequencer.c:912
 msgid "unexpected end of file"
 msgstr "неочакван край на файл"
 
-#: sequencer.c:909
+#: sequencer.c:918
 #, c-format
 msgid "stored pre-cherry-pick HEAD file '%s' is corrupt"
 msgstr ""
 "запазеният преди започването на отбирането файл за указателя „HEAD“ — „%s“ е "
 "повреден"
 
-#: sequencer.c:932
+#: sequencer.c:941
 #, c-format
 msgid "Could not format %s."
 msgstr "Файлът „%s“ не може да се форматира по подходящия начин."
 
-#: sequencer.c:1077
+#: sequencer.c:1086
 #, c-format
 msgid "%s: can't cherry-pick a %s"
 msgstr "%s: не може да се отбере „%s“"
 
-#: sequencer.c:1080
+#: sequencer.c:1089
 #, c-format
 msgid "%s: bad revision"
 msgstr "%s: неправилна версия"
 
-#: sequencer.c:1114
+#: sequencer.c:1123
 msgid "Can't revert as initial commit"
 msgstr "Първоначалното подаване не може да бъде отменено"
 
-#: sequencer.c:1115
+#: sequencer.c:1124
 msgid "Can't cherry-pick into empty head"
 msgstr "При празен връх не могат да се отбират подавания"
 
 #: sha1_name.c:440
 msgid ""
 "Git normally never creates a ref that ends with 40 hex characters\n"
@@ -1606,44 +1614,44 @@
 msgstr "Записът „%s“ във файла „.gitmodules“ не може да бъде изтрит"
 
 #: submodule.c:120
 msgid "staging updated .gitmodules failed"
 msgstr "неуспешно добавяне на променения файл „.gitmodules“ в индекса"
 
-#: submodule.c:1111 builtin/init-db.c:363
+#: submodule.c:1109 builtin/init-db.c:371
 #, c-format
 msgid "Could not create git link %s"
 msgstr "Връзката в Git „%s“ не може да бъде създадена"
 
-#: submodule.c:1122
+#: submodule.c:1120
 #, c-format
 msgid "Could not set core.worktree in %s"
 msgstr "Настройката „core.worktree“ не може да се зададе в „%s“"
 
-#: trailer.c:499 trailer.c:503 trailer.c:507 trailer.c:561 trailer.c:565
-#: trailer.c:569
+#: trailer.c:491 trailer.c:495 trailer.c:499 trailer.c:553 trailer.c:557
+#: trailer.c:561
 #, c-format
 msgid "unknown value '%s' for key '%s'"
 msgstr "неправилна стойност „%s“ за настройката „%s“"
 
-#: trailer.c:551 trailer.c:556 builtin/remote.c:288
+#: trailer.c:543 trailer.c:548 builtin/remote.c:290
 #, c-format
 msgid "more than one %s"
 msgstr "стойността „%s“ се повтаря в настройките"
 
-#: trailer.c:589
+#: trailer.c:581
 #, c-format
 msgid "empty trailer token in trailer '%.*s'"
 msgstr "празна завършваща лексема в епилога „%.*s“"
 
-#: trailer.c:709
+#: trailer.c:701
 #, c-format
 msgid "could not read input file '%s'"
 msgstr "входният файл „%s“ не може да бъде прочетен"
 
-#: trailer.c:712
+#: trailer.c:704
 msgid "could not read from stdin"
 msgstr "от стандартния вход не може да се чете"
 
 #: unpack-trees.c:202
 msgid "Checking out files"
 msgstr "Изтегляне на файлове"
@@ -1674,32 +1682,32 @@
 msgstr "неправилен номер на порт"
 
 #: urlmatch.c:322
 msgid "invalid '..' path segment"
 msgstr "неправилна част от пътя „..“"
 
-#: wrapper.c:509
+#: wrapper.c:523
 #, c-format
 msgid "unable to access '%s': %s"
 msgstr "няма достъп до „%s“: %s"
 
-#: wrapper.c:530
+#: wrapper.c:544
 #, c-format
 msgid "unable to access '%s'"
 msgstr "няма достъп до „%s“"
 
-#: wrapper.c:541
+#: wrapper.c:555
 #, c-format
 msgid "unable to look up current user in the passwd file: %s"
 msgstr "текущият потребител не може да бъде открит във файла „/etc/passwd“: %s"
 
-#: wrapper.c:542
+#: wrapper.c:556
 msgid "no such user"
 msgstr "такъв потребител не съществува"
 
-#: wrapper.c:550
+#: wrapper.c:564
 msgid "unable to get current working directory"
 msgstr "текущата работна директория е недостъпна"
 
 #: wt-status.c:150
 msgid "Unmerged paths:"
 msgstr "Неслети пътища:"
@@ -1727,17 +1735,17 @@
 
 #: wt-status.c:187
 msgid "  (use \"git rm <file>...\" to mark resolution)"
 msgstr ""
 "  (използвайте „git rm ФАЙЛ…“, за да укажете разрешаването на конфликта)"
 
-#: wt-status.c:198
+#: wt-status.c:198 wt-status.c:878
 msgid "Changes to be committed:"
 msgstr "Промени, които ще бъдат подадени:"
 
-#: wt-status.c:216
+#: wt-status.c:216 wt-status.c:887
 msgid "Changes not staged for commit:"
 msgstr "Промени, които не са в индекса за подаване:"
 
 #: wt-status.c:220
 msgid "  (use \"git add <file>...\" to update what will be committed)"
 msgstr ""
@@ -1846,320 +1854,320 @@
 
 #: wt-status.c:391
 #, c-format
 msgid "bug: unhandled diff status %c"
 msgstr "грешка: състоянието на промяната „%c“ не може да бъде обработено"
 
-#: wt-status.c:761
+#: wt-status.c:753
 msgid "Submodules changed but not updated:"
 msgstr "Подмодулите са променени, но не са обновени:"
 
-#: wt-status.c:763
+#: wt-status.c:755
 msgid "Submodule changes to be committed:"
 msgstr "Промени в подмодулите за подаване:"
 
-#: wt-status.c:842
+#: wt-status.c:835
 msgid ""
 "Do not touch the line above.\n"
 "Everything below will be removed."
 msgstr ""
 "Не променяйте горния ред.\n"
 "Всичко отдолу ще бъде изтрито."
 
-#: wt-status.c:933
+#: wt-status.c:946
 msgid "You have unmerged paths."
 msgstr "Някои пътища не са слети."
 
-#: wt-status.c:936
+#: wt-status.c:949
 msgid "  (fix conflicts and run \"git commit\")"
 msgstr "  (коригирайте конфликтите и изпълнете „git commit“)"
 
-#: wt-status.c:939
+#: wt-status.c:952
 msgid "All conflicts fixed but you are still merging."
 msgstr "Всички конфликти са решени, но продължавате сливането."
 
-#: wt-status.c:942
+#: wt-status.c:955
 msgid "  (use \"git commit\" to conclude merge)"
 msgstr "  (използвайте „git commit“, за да завършите сливането)"
 
-#: wt-status.c:952
+#: wt-status.c:965
 msgid "You are in the middle of an am session."
 msgstr "В момента прилагате поредица от кръпки чрез „git am“."
 
-#: wt-status.c:955
+#: wt-status.c:968
 msgid "The current patch is empty."
 msgstr "Текущата кръпка е празна."
 
-#: wt-status.c:959
+#: wt-status.c:972
 msgid "  (fix conflicts and then run \"git am --continue\")"
 msgstr "  (коригирайте конфликтите и изпълнете „git am --continue“)"
 
-#: wt-status.c:961
+#: wt-status.c:974
 msgid "  (use \"git am --skip\" to skip this patch)"
 msgstr "  (използвайте „git am --skip“, за да пропуснете тази кръпка)"
 
-#: wt-status.c:963
+#: wt-status.c:976
 msgid "  (use \"git am --abort\" to restore the original branch)"
 msgstr ""
 "  (използвайте „git am --abort“, за да възстановите първоначалния клон)"
 
-#: wt-status.c:1023 wt-status.c:1040
+#: wt-status.c:1036 wt-status.c:1053
 #, c-format
 msgid "You are currently rebasing branch '%s' on '%s'."
 msgstr "В момента пребазирате клона „%s“ върху „%s“."
 
-#: wt-status.c:1028 wt-status.c:1045
+#: wt-status.c:1041 wt-status.c:1058
 msgid "You are currently rebasing."
 msgstr "В момента пребазирате."
 
-#: wt-status.c:1031
+#: wt-status.c:1044
 msgid "  (fix conflicts and then run \"git rebase --continue\")"
 msgstr "  (коригирайте конфликтите и използвайте „git rebase --continue“)"
 
-#: wt-status.c:1033
+#: wt-status.c:1046
 msgid "  (use \"git rebase --skip\" to skip this patch)"
 msgstr "  (използвайте „git rebase --skip“, за да пропуснете тази кръпка)"
 
-#: wt-status.c:1035
+#: wt-status.c:1048
 msgid "  (use \"git rebase --abort\" to check out the original branch)"
 msgstr ""
 "  (използвайте „git rebase --abort“, за да възстановите първоначалния клон)"
 
-#: wt-status.c:1048
+#: wt-status.c:1061
 msgid "  (all conflicts fixed: run \"git rebase --continue\")"
 msgstr "  (всички конфликти са коригирани: изпълнете „git rebase --continue“)"
 
-#: wt-status.c:1052
+#: wt-status.c:1065
 #, c-format
 msgid ""
 "You are currently splitting a commit while rebasing branch '%s' on '%s'."
 msgstr "В момента разделяте подаване докато пребазирате клона „%s“ върху „%s“."
 
-#: wt-status.c:1057
+#: wt-status.c:1070
 msgid "You are currently splitting a commit during a rebase."
 msgstr "В момента разделяте подаване докато пребазирате."
 
-#: wt-status.c:1060
+#: wt-status.c:1073
 msgid "  (Once your working directory is clean, run \"git rebase --continue\")"
 msgstr ""
 "  (След като работното ви дърво стане чисто, използвайте „git rebase --"
 "continue“)"
 
-#: wt-status.c:1064
+#: wt-status.c:1077
 #, c-format
 msgid "You are currently editing a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "В момента редактирате подаване докато пребазирате клона „%s“ върху „%s“."
 
-#: wt-status.c:1069
+#: wt-status.c:1082
 msgid "You are currently editing a commit during a rebase."
 msgstr "В момента редактирате подаване докато пребазирате."
 
-#: wt-status.c:1072
+#: wt-status.c:1085
 msgid "  (use \"git commit --amend\" to amend the current commit)"
 msgstr ""
 "  (използвайте „git commit --amend“, за да редактирате текущото подаване)"
 
-#: wt-status.c:1074
+#: wt-status.c:1087
 msgid ""
 "  (use \"git rebase --continue\" once you are satisfied with your changes)"
 msgstr ""
 "  (използвайте „git rebase --continue“, след като завършите промените си)"
 
-#: wt-status.c:1084
+#: wt-status.c:1097
 #, c-format
 msgid "You are currently cherry-picking commit %s."
 msgstr "В момента отбирате подаването „%s“."
 
-#: wt-status.c:1089
+#: wt-status.c:1102
 msgid "  (fix conflicts and run \"git cherry-pick --continue\")"
 msgstr "  (коригирайте конфликтите и изпълнете „git cherry-pick --continue“)"
 
-#: wt-status.c:1092
+#: wt-status.c:1105
 msgid "  (all conflicts fixed: run \"git cherry-pick --continue\")"
 msgstr ""
 "  (всички конфликти са коригирани, изпълнете „git cherry-pick --continue“)"
 
-#: wt-status.c:1094
+#: wt-status.c:1107
 msgid "  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)"
 msgstr ""
 "  (използвайте „git cherry-pick --abort“, за да отмените всички действия с "
 "отбиране)"
 
-#: wt-status.c:1103
+#: wt-status.c:1116
 #, c-format
 msgid "You are currently reverting commit %s."
 msgstr "В момента отменяте подаване „%s“."
 
-#: wt-status.c:1108
+#: wt-status.c:1121
 msgid "  (fix conflicts and run \"git revert --continue\")"
 msgstr "  (коригирайте конфликтите и изпълнете „git revert --continue“)"
 
-#: wt-status.c:1111
+#: wt-status.c:1124
 msgid "  (all conflicts fixed: run \"git revert --continue\")"
 msgstr "  (всички конфликти са коригирани, изпълнете „git revert --continue“)"
 
-#: wt-status.c:1113
+#: wt-status.c:1126
 msgid "  (use \"git revert --abort\" to cancel the revert operation)"
 msgstr ""
 "  (използвайте „git revert --abort“, за да преустановите отмяната на "
 "подаване)"
 
-#: wt-status.c:1124
+#: wt-status.c:1137
 #, c-format
 msgid "You are currently bisecting, started from branch '%s'."
 msgstr "В момента търсите двоично, като сте стартирали от клон „%s“."
 
-#: wt-status.c:1128
+#: wt-status.c:1141
 msgid "You are currently bisecting."
 msgstr "В момента търсите двоично."
 
-#: wt-status.c:1131
+#: wt-status.c:1144
 msgid "  (use \"git bisect reset\" to get back to the original branch)"
 msgstr ""
 "  (използвайте „git bisect reset“, за да се върнете към първоначалното "
 "състояние и клон)"
 
-#: wt-status.c:1306
+#: wt-status.c:1321
 msgid "On branch "
 msgstr "На клон "
 
-#: wt-status.c:1313
+#: wt-status.c:1328
 msgid "rebase in progress; onto "
 msgstr "извършвате пребазиране върху "
 
-#: wt-status.c:1320
+#: wt-status.c:1333
 msgid "HEAD detached at "
-msgstr "Указателят „HEAD“ не е свързан и е при подаване "
+msgstr "Указателят „HEAD“ не е свързан и е при "
 
-#: wt-status.c:1322
+#: wt-status.c:1335
 msgid "HEAD detached from "
 msgstr "Указателят „HEAD“ не е свързан и е отделѐн от "
 
-#: wt-status.c:1325
+#: wt-status.c:1338
 msgid "Not currently on any branch."
 msgstr "Извън всички клони."
 
-#: wt-status.c:1342
+#: wt-status.c:1355
 msgid "Initial commit"
 msgstr "Първоначално подаване"
 
-#: wt-status.c:1356
+#: wt-status.c:1369
 msgid "Untracked files"
 msgstr "Неследени файлове"
 
-#: wt-status.c:1358
+#: wt-status.c:1371
 msgid "Ignored files"
 msgstr "Игнорирани файлове"
 
-#: wt-status.c:1362
+#: wt-status.c:1375
 #, c-format
 msgid ""
 "It took %.2f seconds to enumerate untracked files. 'status -uno'\n"
 "may speed it up, but you have to be careful not to forget to add\n"
 "new files yourself (see 'git help status')."
 msgstr ""
 "Бяха необходими %.2f секунди за изброяването на неследените файлове.\n"
 "Добавянето на опцията „-uno“ към командата „git status“, ще ускори\n"
 "изпълнението, но не трябва да забравяте ръчно да добавяте новите файлове.\n"
 "За повече подробности погледнете „git status help“."
 
-#: wt-status.c:1368
+#: wt-status.c:1381
 #, c-format
 msgid "Untracked files not listed%s"
 msgstr "Неследените файлове не са изведени%s"
 
-#: wt-status.c:1370
+#: wt-status.c:1383
 msgid " (use -u option to show untracked files)"
 msgstr " (използвайте опцията „-u“, за да изведете неследените файлове)"
 
-#: wt-status.c:1376
+#: wt-status.c:1389
 msgid "No changes"
 msgstr "Няма промени"
 
-#: wt-status.c:1381
+#: wt-status.c:1394
 #, c-format
 msgid "no changes added to commit (use \"git add\" and/or \"git commit -a\")\n"
 msgstr ""
 "към индекса за подаване не са добавени промени (използвайте „git add“ и/или "
 "„git commit -a“)\n"
 
-#: wt-status.c:1384
+#: wt-status.c:1397
 #, c-format
 msgid "no changes added to commit\n"
 msgstr "към индекса за подаване не са добавени промени\n"
 
-#: wt-status.c:1387
+#: wt-status.c:1400
 #, c-format
 msgid ""
 "nothing added to commit but untracked files present (use \"git add\" to "
 "track)\n"
 msgstr ""
 "към индекса за подаване не са добавени промени, но има нови файлове "
 "(използвайте „git add“, за да започне тяхното следене)\n"
 
-#: wt-status.c:1390
+#: wt-status.c:1403
 #, c-format
 msgid "nothing added to commit but untracked files present\n"
 msgstr "към индекса за подаване не са добавени промени, но има нови файлове\n"
 
-#: wt-status.c:1393
+#: wt-status.c:1406
 #, c-format
 msgid "nothing to commit (create/copy files and use \"git add\" to track)\n"
 msgstr ""
 "липсват каквито и да е промени (създайте или копирайте файлове и използвайте "
 "„git add“, за да започне тяхното следене)\n"
 
-#: wt-status.c:1396 wt-status.c:1401
+#: wt-status.c:1409 wt-status.c:1414
 #, c-format
 msgid "nothing to commit\n"
 msgstr "липсват каквито и да е промени\n"
 
-#: wt-status.c:1399
+#: wt-status.c:1412
 #, c-format
 msgid "nothing to commit (use -u to show untracked files)\n"
 msgstr ""
 "липсват каквито и да е промени (използвайте опцията „-u“, за да се изведат и "
 "неследените файлове)\n"
 
-#: wt-status.c:1403
+#: wt-status.c:1416
 #, c-format
 msgid "nothing to commit, working directory clean\n"
 msgstr "липсват каквито и да е промени, работното дърво е чисто\n"
 
-#: wt-status.c:1512
+#: wt-status.c:1525
 msgid "HEAD (no branch)"
 msgstr "HEAD (извън клон)"
 
-#: wt-status.c:1518
+#: wt-status.c:1531
 msgid "Initial commit on "
 msgstr "Първоначално подаване на клон"
 
-#: wt-status.c:1550
+#: wt-status.c:1563
 msgid "gone"
 msgstr "изтрит"
 
-#: wt-status.c:1552 wt-status.c:1560
+#: wt-status.c:1565 wt-status.c:1573
 msgid "behind "
 msgstr "назад с "
 
-#: compat/precompose_utf8.c:55 builtin/clone.c:357
+#: compat/precompose_utf8.c:55 builtin/clone.c:360
 #, c-format
 msgid "failed to unlink '%s'"
 msgstr "неуспешно изтриване на „%s“"
 
 #: builtin/add.c:22
-msgid "git add [options] [--] <pathspec>..."
+msgid "git add [<options>] [--] <pathspec>..."
 msgstr "git add [ОПЦИЯ…] [--] ПЪТ…"
 
 #: builtin/add.c:65
 #, c-format
 msgid "unexpected diff status %c"
 msgstr "неочакван изходен код при генериране на разлика: %c"
 
-#: builtin/add.c:70 builtin/commit.c:275
+#: builtin/add.c:70 builtin/commit.c:277
 msgid "updating files failed"
 msgstr "неуспешно обновяване на файловете"
 
 #: builtin/add.c:80
 #, c-format
 msgid "remove '%s'\n"
@@ -2198,29 +2206,29 @@
 
 #: builtin/add.c:231
 msgid "The following paths are ignored by one of your .gitignore files:\n"
 msgstr ""
 "Следните пътища ще бъдат игнорирани според някой от файловете „.gitignore“:\n"
 
-#: builtin/add.c:248 builtin/clean.c:875 builtin/fetch.c:108 builtin/mv.c:110
-#: builtin/prune-packed.c:55 builtin/push.c:499 builtin/remote.c:1375
+#: builtin/add.c:248 builtin/clean.c:876 builtin/fetch.c:107 builtin/mv.c:110
+#: builtin/prune-packed.c:55 builtin/push.c:508 builtin/remote.c:1372
 #: builtin/rm.c:269
 msgid "dry run"
 msgstr "пробно изпълнeние"
 
-#: builtin/add.c:249 builtin/apply.c:4415 builtin/check-ignore.c:19
-#: builtin/commit.c:1362 builtin/count-objects.c:63 builtin/fsck.c:608
+#: builtin/add.c:249 builtin/apply.c:4577 builtin/check-ignore.c:19
+#: builtin/commit.c:1322 builtin/count-objects.c:63 builtin/fsck.c:608
 #: builtin/log.c:1617 builtin/mv.c:109 builtin/read-tree.c:114
 msgid "be verbose"
 msgstr "повече подробности"
 
 #: builtin/add.c:251
 msgid "interactive picking"
 msgstr "интерактивно отбиране на промени"
 
-#: builtin/add.c:252 builtin/checkout.c:1108 builtin/reset.c:286
+#: builtin/add.c:252 builtin/checkout.c:1126 builtin/reset.c:286
 msgid "select hunks interactively"
 msgstr "интерактивен избор на парчета код"
 
 #: builtin/add.c:253
 msgid "edit current diff and apply"
 msgstr "редактиране на текущата разлика и прилагане"
@@ -2264,16 +2272,12 @@
 
 #: builtin/add.c:286
 #, c-format
 msgid "Use -f if you really want to add them.\n"
 msgstr "Използвайте опцията „-f“, за да ги добавите наистина.\n"
 
-#: builtin/add.c:287
-msgid "no files added"
-msgstr "не са добавени файлове"
-
 #: builtin/add.c:293
 msgid "adding files failed"
 msgstr "неуспешно добавяне на файлове"
 
 #: builtin/add.c:329
 msgid "-A and -u are mutually incompatible"
@@ -2290,89 +2294,89 @@
 
 #: builtin/add.c:358
 #, c-format
 msgid "Maybe you wanted to say 'git add .'?\n"
 msgstr "Вероятно искахте да използвате „git add .“?\n"
 
-#: builtin/add.c:363 builtin/check-ignore.c:172 builtin/clean.c:919
-#: builtin/commit.c:333 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:299
+#: builtin/add.c:363 builtin/check-ignore.c:172 builtin/clean.c:920
+#: builtin/commit.c:335 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:299
 msgid "index file corrupt"
 msgstr "файлът с индекса е повреден"
 
-#: builtin/add.c:446 builtin/apply.c:4510 builtin/mv.c:279 builtin/rm.c:431
+#: builtin/add.c:446 builtin/apply.c:4675 builtin/mv.c:279 builtin/rm.c:431
 msgid "Unable to write new index file"
 msgstr "Новият индекс не може да бъде записан"
 
-#: builtin/apply.c:58
-msgid "git apply [options] [<patch>...]"
+#: builtin/apply.c:59
+msgid "git apply [<options>] [<patch>...]"
 msgstr "git apply [ОПЦИЯ…] [КРЪПКА…]"
 
-#: builtin/apply.c:111
+#: builtin/apply.c:112
 #, c-format
 msgid "unrecognized whitespace option '%s'"
 msgstr "непозната опция за знаците за интервали „%s“"
 
-#: builtin/apply.c:126
+#: builtin/apply.c:127
 #, c-format
 msgid "unrecognized whitespace ignore option '%s'"
 msgstr "непозната опция за игнориране на знаците за интервали „%s“"
 
-#: builtin/apply.c:826
+#: builtin/apply.c:822
 #, c-format
 msgid "Cannot prepare timestamp regexp %s"
 msgstr "Регулярният израз за времето „%s“ не може за бъде компилиран"
 
-#: builtin/apply.c:835
+#: builtin/apply.c:831
 #, c-format
 msgid "regexec returned %d for input: %s"
 msgstr "Регулярният израз върна %d при подадена последователност „%s“ на входа"
 
-#: builtin/apply.c:916
+#: builtin/apply.c:912
 #, c-format
 msgid "unable to find filename in patch at line %d"
 msgstr "Липсва име на файл на ред %d от кръпката"
 
-#: builtin/apply.c:948
+#: builtin/apply.c:944
 #, c-format
 msgid "git apply: bad git-diff - expected /dev/null, got %s on line %d"
 msgstr ""
 "git apply: лош изход от командата „git-diff“ — на ред %2$d се очакваше „/dev/"
 "null“, а бе получен „%1$s“"
 
-#: builtin/apply.c:952
+#: builtin/apply.c:948
 #, c-format
 msgid "git apply: bad git-diff - inconsistent new filename on line %d"
 msgstr ""
 "git apply: лош изход от командата „git-diff“ — на ред %d бе получено "
 "неправилно име на нов файл"
 
-#: builtin/apply.c:953
+#: builtin/apply.c:949
 #, c-format
 msgid "git apply: bad git-diff - inconsistent old filename on line %d"
 msgstr ""
 "git apply: лош изход от командата „git-diff“ — на ред %d бе получено "
 "неправилно име на стар файл"
 
-#: builtin/apply.c:960
+#: builtin/apply.c:956
 #, c-format
 msgid "git apply: bad git-diff - expected /dev/null on line %d"
 msgstr ""
 "git apply: лош изход от командата „git-diff“ — на ред %d се очакваше „/dev/"
 "null“"
 
-#: builtin/apply.c:1423
+#: builtin/apply.c:1419
 #, c-format
 msgid "recount: unexpected line: %.*s"
 msgstr "при повторното преброяване бе получен неочакван ред: „%.*s“"
 
-#: builtin/apply.c:1480
+#: builtin/apply.c:1476
 #, c-format
 msgid "patch fragment without header at line %d: %.*s"
 msgstr "част от кръпка без заглавна част на ред %d: %.*s"
 
-#: builtin/apply.c:1497
+#: builtin/apply.c:1493
 #, c-format
 msgid ""
 "git diff header lacks filename information when removing %d leading pathname "
 "component (line %d)"
 msgid_plural ""
 "git diff header lacks filename information when removing %d leading pathname "
@@ -2381,415 +2385,434 @@
 "След съкращаването на %d-та част от компонентите на пътя, в заглавната част "
 "на „git diff“ липсва информация за име на файл (ред: %d)"
 msgstr[1] ""
 "След съкращаването на първите %d части от компонентите на пътя, в заглавната "
 "част на „git diff“ липсва информация за име на файл (ред: %d)"
 
-#: builtin/apply.c:1657
+#: builtin/apply.c:1656
 msgid "new file depends on old contents"
 msgstr "новият файл зависи от старото съдържание на файла"
 
-#: builtin/apply.c:1659
+#: builtin/apply.c:1658
 msgid "deleted file still has contents"
 msgstr "изтритият файл не е празен"
 
-#: builtin/apply.c:1685
+#: builtin/apply.c:1684
 #, c-format
 msgid "corrupt patch at line %d"
 msgstr "грешка в кръпката на ред %d"
 
-#: builtin/apply.c:1721
+#: builtin/apply.c:1720
 #, c-format
 msgid "new file %s depends on old contents"
 msgstr "новият файл „%s“ зависи от старото съдържание на файла"
 
-#: builtin/apply.c:1723
+#: builtin/apply.c:1722
 #, c-format
 msgid "deleted file %s still has contents"
 msgstr "изтритият файл „%s“ не е празен"
 
 # FIXME - double **??
-#: builtin/apply.c:1726
+#: builtin/apply.c:1725
 #, c-format
 msgid "** warning: file %s becomes empty but is not deleted"
 msgstr "●● предупреждение: файлът „%s“ вече е празен, но не е изтрит"
 
-#: builtin/apply.c:1872
+#: builtin/apply.c:1871
 #, c-format
 msgid "corrupt binary patch at line %d: %.*s"
 msgstr "грешка в двоичната кръпка на ред %d: %.*s"
 
-#: builtin/apply.c:1901
+#: builtin/apply.c:1900
 #, c-format
 msgid "unrecognized binary patch at line %d"
 msgstr "неразпозната двоичната кръпка на ред %d"
 
-#: builtin/apply.c:2052
+#: builtin/apply.c:2051
 #, c-format
 msgid "patch with only garbage at line %d"
 msgstr "кръпката е с изцяло повредени данни на ред %d"
 
-#: builtin/apply.c:2142
+#: builtin/apply.c:2141
 #, c-format
 msgid "unable to read symlink %s"
 msgstr "символната връзка „%s“ не може да бъде прочетена"
 
-#: builtin/apply.c:2146
+#: builtin/apply.c:2145
 #, c-format
 msgid "unable to open or read %s"
 msgstr "файлът „%s“ не може да бъде отворен или прочетен"
 
-#: builtin/apply.c:2754
+#: builtin/apply.c:2778
 #, c-format
 msgid "invalid start of line: '%c'"
 msgstr "неправилно начало на ред: „%c“"
 
-#: builtin/apply.c:2872
+#: builtin/apply.c:2897
 #, c-format
 msgid "Hunk #%d succeeded at %d (offset %d line)."
 msgid_plural "Hunk #%d succeeded at %d (offset %d lines)."
 msgstr[0] ""
 "%d-то парче код бе успешно приложено на ред %d (отместване от %d ред)."
 msgstr[1] ""
 "%d-то парче код бе успешно приложено на ред %d (отместване от %d реда)."
 
-#: builtin/apply.c:2884
+#: builtin/apply.c:2909
 #, c-format
 msgid "Context reduced to (%ld/%ld) to apply fragment at %d"
 msgstr ""
 "Контекстът е намален на (%ld/%ld) за прилагането на парчето код на ред %d"
 
-#: builtin/apply.c:2890
+#: builtin/apply.c:2915
 #, c-format
 msgid ""
 "while searching for:\n"
 "%.*s"
 msgstr ""
 "при търсене за:\n"
 "%.*s"
 
-#: builtin/apply.c:2909
+#: builtin/apply.c:2935
 #, c-format
 msgid "missing binary patch data for '%s'"
 msgstr "липсват данните за двоичната кръпка за „%s“"
 
-#: builtin/apply.c:3010
+#: builtin/apply.c:3036
 #, c-format
 msgid "binary patch does not apply to '%s'"
 msgstr "двоичната кръпка не може да бъде приложена върху „%s“"
 
-#: builtin/apply.c:3016
+#: builtin/apply.c:3042
 #, c-format
 msgid "binary patch to '%s' creates incorrect result (expecting %s, got %s)"
 msgstr ""
 "двоичната кръпка за „%s“ води до неправилни резултати (очакваше се SHA1: "
 "„%s“, а бе получено: „%s“)"
 
-#: builtin/apply.c:3037
+#: builtin/apply.c:3063
 #, c-format
 msgid "patch failed: %s:%ld"
 msgstr "неуспешно прилагане на кръпка: „%s:%ld“"
 
-#: builtin/apply.c:3161
+#: builtin/apply.c:3187
 #, c-format
 msgid "cannot checkout %s"
 msgstr "„%s“ не може да се изтегли"
 
-#: builtin/apply.c:3206 builtin/apply.c:3215 builtin/apply.c:3260
+#: builtin/apply.c:3232 builtin/apply.c:3243 builtin/apply.c:3288
 #, c-format
 msgid "read of %s failed"
 msgstr "неуспешно прочитане на „%s“"
 
-#: builtin/apply.c:3240 builtin/apply.c:3462
+#: builtin/apply.c:3240
+#, c-format
+msgid "reading from '%s' beyond a symbolic link"
+msgstr "изчитане на „%s“ след проследяване на символна връзка"
+
+#: builtin/apply.c:3268 builtin/apply.c:3490
 #, c-format
 msgid "path %s has been renamed/deleted"
 msgstr "обектът с път „%s“ е преименуван или изтрит"
 
-#: builtin/apply.c:3321 builtin/apply.c:3476
+#: builtin/apply.c:3349 builtin/apply.c:3504
 #, c-format
 msgid "%s: does not exist in index"
 msgstr "„%s“ не съществува в индекса"
 
-#: builtin/apply.c:3325 builtin/apply.c:3468 builtin/apply.c:3490
+#: builtin/apply.c:3353 builtin/apply.c:3496 builtin/apply.c:3518
 #, c-format
 msgid "%s: %s"
 msgstr "„%s“: %s"
 
-#: builtin/apply.c:3330 builtin/apply.c:3484
+#: builtin/apply.c:3358 builtin/apply.c:3512
 #, c-format
 msgid "%s: does not match index"
 msgstr "„%s“ не съответства на индекса"
 
-#: builtin/apply.c:3432
+#: builtin/apply.c:3460
 msgid "removal patch leaves file contents"
 msgstr "изтриващата кръпка оставя файла непразен"
 
-#: builtin/apply.c:3501
+#: builtin/apply.c:3529
 #, c-format
 msgid "%s: wrong type"
 msgstr "„%s“: неправилен вид"
 
-#: builtin/apply.c:3503
+#: builtin/apply.c:3531
 #, c-format
 msgid "%s has type %o, expected %o"
 msgstr "„%s“ е от вид „%o“, а се очакваше „%o“"
 
-#: builtin/apply.c:3604
+#: builtin/apply.c:3690 builtin/apply.c:3692
+#, c-format
+msgid "invalid path '%s'"
+msgstr "неправилен път: „%s“"
+
+#: builtin/apply.c:3747
 #, c-format
 msgid "%s: already exists in index"
 msgstr "„%s“: вече съществува в индекса"
 
-#: builtin/apply.c:3607
+#: builtin/apply.c:3750
 #, c-format
 msgid "%s: already exists in working directory"
 msgstr "„%s“: вече съществува в работната директория"
 
-#: builtin/apply.c:3627
+#: builtin/apply.c:3770
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o)"
 msgstr "новите права за достъп (%o) на „%s“ не съвпадат със старите (%o)"
 
-#: builtin/apply.c:3632
+#: builtin/apply.c:3775
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o) of %s"
 msgstr ""
 "новите права за достъп (%o) на „%s“ не съвпадат със старите (%o) на „%s“"
 
-#: builtin/apply.c:3640
+#: builtin/apply.c:3795
+#, c-format
+msgid "affected file '%s' is beyond a symbolic link"
+msgstr "засегнатият файл „%s“ е след символна връзка"
+
+#: builtin/apply.c:3799
 #, c-format
 msgid "%s: patch does not apply"
 msgstr "Кръпката „%s“ не може да бъде приложена"
 
-#: builtin/apply.c:3653
+#: builtin/apply.c:3813
 #, c-format
 msgid "Checking patch %s..."
 msgstr "Проверяване на кръпката „%s“…"
 
-#: builtin/apply.c:3746 builtin/checkout.c:213 builtin/reset.c:135
+#: builtin/apply.c:3906 builtin/checkout.c:231 builtin/reset.c:135
 #, c-format
 msgid "make_cache_entry failed for path '%s'"
 msgstr "неуспешно създаване на запис в кеша чрез „make_cache_entry“ за „%s“"
 
-#: builtin/apply.c:3889
+#: builtin/apply.c:4049
 #, c-format
 msgid "unable to remove %s from index"
 msgstr "„%s“ не може да се извади от индекса"
 
-#: builtin/apply.c:3918
+#: builtin/apply.c:4078
 #, c-format
 msgid "corrupt patch for submodule %s"
 msgstr "повредена кръпка за модула „%s“"
 
-#: builtin/apply.c:3922
+#: builtin/apply.c:4082
 #, c-format
 msgid "unable to stat newly created file '%s'"
 msgstr ""
 "не може да се получи информация чрез „stat“ за новосъздадения файл „%s“"
 
-#: builtin/apply.c:3927
+#: builtin/apply.c:4087
 #, c-format
 msgid "unable to create backing store for newly created file %s"
 msgstr ""
 "не може да се за създаде мястото за съхранение на новосъздадения файл „%s“"
 
-#: builtin/apply.c:3930 builtin/apply.c:4038
+#: builtin/apply.c:4090 builtin/apply.c:4198
 #, c-format
 msgid "unable to add cache entry for %s"
 msgstr "не може да се добави запис в кеша за „%s“"
 
-#: builtin/apply.c:3963
+#: builtin/apply.c:4123
 #, c-format
 msgid "closing file '%s'"
 msgstr "затваряне на файла „%s“"
 
-#: builtin/apply.c:4012
+#: builtin/apply.c:4172
 #, c-format
 msgid "unable to write file '%s' mode %o"
 msgstr "файлът „%s“ не може да се запише с режим на достъп „%o“"
 
-#: builtin/apply.c:4099
+#: builtin/apply.c:4259
 #, c-format
 msgid "Applied patch %s cleanly."
 msgstr "Кръпката „%s“ бе приложена чисто."
 
-#: builtin/apply.c:4107
+#: builtin/apply.c:4267
 msgid "internal error"
 msgstr "вътрешна грешка"
 
-#: builtin/apply.c:4110
+#: builtin/apply.c:4270
 #, c-format
 msgid "Applying patch %%s with %d reject..."
 msgid_plural "Applying patch %%s with %d rejects..."
 msgstr[0] "Прилагане на кръпката „%%s“ с %d отхвърлено парче…"
 msgstr[1] "Прилагане на кръпката „%%s“ с %d отхвърлени парчета…"
 
-#: builtin/apply.c:4120
+#: builtin/apply.c:4280
 #, c-format
 msgid "truncating .rej filename to %.*s.rej"
 msgstr "съкращаване на името на файла с отхвърлените парчета на „ %.*s.rej“"
 
-#: builtin/apply.c:4141
+#: builtin/apply.c:4301
 #, c-format
 msgid "Hunk #%d applied cleanly."
 msgstr "%d-то парче бе успешно приложено."
 
-#: builtin/apply.c:4144
+#: builtin/apply.c:4304
 #, c-format
 msgid "Rejected hunk #%d."
 msgstr "%d-то парче бе отхвърлено."
 
-#: builtin/apply.c:4234
+#: builtin/apply.c:4394
 msgid "unrecognized input"
 msgstr "непознат вход"
 
-#: builtin/apply.c:4245
+#: builtin/apply.c:4405
 msgid "unable to read index file"
 msgstr "индексът не може да бъде записан"
 
-#: builtin/apply.c:4362 builtin/apply.c:4365 builtin/clone.c:91
-#: builtin/fetch.c:93
+#: builtin/apply.c:4522 builtin/apply.c:4525 builtin/clone.c:92
+#: builtin/fetch.c:92
 msgid "path"
 msgstr "път"
 
-#: builtin/apply.c:4363
+#: builtin/apply.c:4523
 msgid "don't apply changes matching the given path"
 msgstr "без прилагане на промените напасващи на дадения път"
 
-#: builtin/apply.c:4366
+#: builtin/apply.c:4526
 msgid "apply changes matching the given path"
 msgstr "прилагане на промените напасващи на дадения път"
 
-#: builtin/apply.c:4368
+#: builtin/apply.c:4528
 msgid "num"
 msgstr "БРОЙ"
 
-#: builtin/apply.c:4369
+#: builtin/apply.c:4529
 msgid "remove <num> leading slashes from traditional diff paths"
 msgstr "премахване на този БРОЙ водещи елементи от пътищата в разликата"
 
-#: builtin/apply.c:4372
+#: builtin/apply.c:4532
 msgid "ignore additions made by the patch"
 msgstr "игнориране на редовете добавени от тази кръпка"
 
-#: builtin/apply.c:4374
+#: builtin/apply.c:4534
 msgid "instead of applying the patch, output diffstat for the input"
 msgstr "извеждане на статистика на промените без прилагане на кръпката"
 
-#: builtin/apply.c:4378
+#: builtin/apply.c:4538
 msgid "show number of added and deleted lines in decimal notation"
 msgstr "извеждане на броя на добавените и изтритите редове"
 
-#: builtin/apply.c:4380
+#: builtin/apply.c:4540
 msgid "instead of applying the patch, output a summary for the input"
 msgstr "извеждане на статистика на входните данни без прилагане на кръпката"
 
-#: builtin/apply.c:4382
+#: builtin/apply.c:4542
 msgid "instead of applying the patch, see if the patch is applicable"
 msgstr "проверка дали кръпката може да се приложи, без действително прилагане"
 
-#: builtin/apply.c:4384
+#: builtin/apply.c:4544
 msgid "make sure the patch is applicable to the current index"
 msgstr "проверка дали кръпката може да бъде приложена към текущия индекс"
 
-#: builtin/apply.c:4386
+#: builtin/apply.c:4546
 msgid "apply a patch without touching the working tree"
 msgstr "прилагане на кръпката без промяна на работното дърво"
 
-#: builtin/apply.c:4388
+#: builtin/apply.c:4548
+msgid "accept a patch that touches outside the working area"
+msgstr "прилагане на кръпка, която променя и файлове извън работното дърво"
+
+#: builtin/apply.c:4550
 msgid "also apply the patch (use with --stat/--summary/--check)"
 msgstr ""
 "кръпката да бъде приложена. Опцията се комбинира с „--check“/„--stat“/„--"
 "summary“"
 
-#: builtin/apply.c:4390
+#: builtin/apply.c:4552
 msgid "attempt three-way merge if a patch does not apply"
 msgstr "пробване с тройно сливане, ако кръпката не може да се приложи директно"
 
-#: builtin/apply.c:4392
+#: builtin/apply.c:4554
 msgid "build a temporary index based on embedded index information"
 msgstr ""
 "създаване на временен индекс на база на включената информация за индекса"
 
-#: builtin/apply.c:4394 builtin/checkout-index.c:198 builtin/ls-files.c:455
+#: builtin/apply.c:4556 builtin/checkout-index.c:198 builtin/ls-files.c:412
 msgid "paths are separated with NUL character"
 msgstr "разделяне на пътищата с нулевия знак „NUL“"
 
-#: builtin/apply.c:4397
+#: builtin/apply.c:4559
 msgid "ensure at least <n> lines of context match"
 msgstr "да се осигури контекст от поне такъв БРОЙ съвпадащи редове"
 
-#: builtin/apply.c:4398
+#: builtin/apply.c:4560
 msgid "action"
 msgstr "действие"
 
-#: builtin/apply.c:4399
+#: builtin/apply.c:4561
 msgid "detect new or modified lines that have whitespace errors"
 msgstr "засичане на нови или променени редове с грешки в знаците за интервали"
 
-#: builtin/apply.c:4402 builtin/apply.c:4405
+#: builtin/apply.c:4564 builtin/apply.c:4567
 msgid "ignore changes in whitespace when finding context"
 msgstr ""
 "игнориране на промените в знаците за интервали при откриване на контекста"
 
-#: builtin/apply.c:4408
+#: builtin/apply.c:4570
 msgid "apply the patch in reverse"
 msgstr "прилагане на кръпката в обратна посока"
 
-#: builtin/apply.c:4410
+#: builtin/apply.c:4572
 msgid "don't expect at least one line of context"
 msgstr "без изискване на дори и един ред контекст"
 
-#: builtin/apply.c:4412
+#: builtin/apply.c:4574
 msgid "leave the rejected hunks in corresponding *.rej files"
 msgstr "оставяне на отхвърлените парчета във файлове с разширение „.rej“"
 
-#: builtin/apply.c:4414
+#: builtin/apply.c:4576
 msgid "allow overlapping hunks"
 msgstr "позволяване на застъпващи се парчета"
 
-#: builtin/apply.c:4417
+#: builtin/apply.c:4579
 msgid "tolerate incorrectly detected missing new-line at the end of file"
 msgstr "пренебрегване на неправилно липсващ знак за нов ред в края на файл"
 
-#: builtin/apply.c:4420
+#: builtin/apply.c:4582
 msgid "do not trust the line counts in the hunk headers"
 msgstr "без доверяване на номерата на редовете в заглавните части на парчетата"
 
-#: builtin/apply.c:4422
+#: builtin/apply.c:4584
 msgid "root"
 msgstr "НАЧАЛНА_ДИРЕКТОРИЯ"
 
-#: builtin/apply.c:4423
+#: builtin/apply.c:4585
 msgid "prepend <root> to all filenames"
 msgstr "добавяне на тази НАЧАЛНА_ДИРЕКТОРИЯ към имената на всички файлове"
 
-#: builtin/apply.c:4445
+#: builtin/apply.c:4607
 msgid "--3way outside a repository"
 msgstr "като „--3way“, но извън хранилище"
 
-#: builtin/apply.c:4453
+#: builtin/apply.c:4615
 msgid "--index outside a repository"
 msgstr "като „--index“, но извън хранилище"
 
-#: builtin/apply.c:4456
+#: builtin/apply.c:4618
 msgid "--cached outside a repository"
 msgstr "като „--cached“, но извън хранилище"
 
-#: builtin/apply.c:4472
+#: builtin/apply.c:4637
 #, c-format
 msgid "can't open patch '%s'"
 msgstr "кръпката „%s“ не може да бъде отворена"
 
-#: builtin/apply.c:4486
+#: builtin/apply.c:4651
 #, c-format
 msgid "squelched %d whitespace error"
 msgid_plural "squelched %d whitespace errors"
 msgstr[0] "пренебрегната е %d грешка в знаците за интервали"
 msgstr[1] "пренебрегнати са %d грешки в знаците за интервали"
 
-#: builtin/apply.c:4492 builtin/apply.c:4502
+#: builtin/apply.c:4657 builtin/apply.c:4667
 #, c-format
 msgid "%d line adds whitespace errors."
 msgid_plural "%d lines add whitespace errors."
 msgstr[0] "%d ред добавя грешки в знаците за интервали."
 msgstr[1] "%d реда добавят грешки в знаците за интервали."
 
@@ -2839,154 +2862,154 @@
 #: builtin/bisect--helper.c:19
 msgid "update BISECT_HEAD instead of checking out the current commit"
 msgstr ""
 "обновяване на указателя „BISECT_HEAD“ вместо да се използва текущото подаване"
 
 #: builtin/blame.c:30
-msgid "git blame [options] [rev-opts] [rev] [--] file"
-msgstr "git blame [ОПЦИЯ…] [ОПЦИИ_ЗА_ВЕРСИЯТА] [ВЕРСИЯ] [--] ФАЙЛ"
+msgid "git blame [<options>] [<rev-opts>] [<rev>] [--] file"
+msgstr "git blame [ОПЦИЯ…] [ОПЦИЯ_ЗА_ВЕРСИЯТА…] [ВЕРСИЯ] [--] ФАЙЛ"
 
 #: builtin/blame.c:35
-msgid "[rev-opts] are documented in git-rev-list(1)"
+msgid "<rev-opts> are documented in git-rev-list(1)"
 msgstr "ОПЦИИте_ЗА_ВЕРСИЯТА са документирани в ръководството git-rev-list(1)"
 
-#: builtin/blame.c:2501
+#: builtin/blame.c:2500
 msgid "Show blame entries as we find them, incrementally"
 msgstr "Извеждане на анотациите с намирането им, последователно"
 
 # FIXME SHA-1 -> SHA1
-#: builtin/blame.c:2502
+#: builtin/blame.c:2501
 msgid "Show blank SHA-1 for boundary commits (Default: off)"
 msgstr ""
 "Извеждане на празни суми по SHA1 за граничните подавания (стандартно опцията "
 "е изключена)"
 
-#: builtin/blame.c:2503
+#: builtin/blame.c:2502
 msgid "Do not treat root commits as boundaries (Default: off)"
 msgstr ""
 "Началните подавания да не се считат за гранични (стандартно опцията е "
 "изключена)"
 
-#: builtin/blame.c:2504
+#: builtin/blame.c:2503
 msgid "Show work cost statistics"
 msgstr "Извеждане на статистика за извършените действия"
 
-#: builtin/blame.c:2505
+#: builtin/blame.c:2504
 msgid "Show output score for blame entries"
 msgstr "Извеждане на допълнителна информация за определянето на анотациите"
 
-#: builtin/blame.c:2506
+#: builtin/blame.c:2505
 msgid "Show original filename (Default: auto)"
 msgstr ""
 "Извеждане на първоначалното име на файл (стандартно това е автоматично)"
 
-#: builtin/blame.c:2507
+#: builtin/blame.c:2506
 msgid "Show original linenumber (Default: off)"
 msgstr ""
 "Извеждане на първоначалният номер на ред (стандартно опцията е изключена)"
 
-#: builtin/blame.c:2508
+#: builtin/blame.c:2507
 msgid "Show in a format designed for machine consumption"
 msgstr "Извеждане във формат за по-нататъшна обработка"
 
-#: builtin/blame.c:2509
+#: builtin/blame.c:2508
 msgid "Show porcelain format with per-line commit information"
 msgstr ""
 "Извеждане във формат за команди от потребителско ниво с информация на всеки "
 "ред"
 
-#: builtin/blame.c:2510
+#: builtin/blame.c:2509
 msgid "Use the same output mode as git-annotate (Default: off)"
 msgstr ""
 "Използване на същия формат като „git-annotate“ (стандартно опцията е "
 "изключена)"
 
-#: builtin/blame.c:2511
+#: builtin/blame.c:2510
 msgid "Show raw timestamp (Default: off)"
 msgstr "Извеждане на неформатирани времена (стандартно опцията е изключена)"
 
-#: builtin/blame.c:2512
+#: builtin/blame.c:2511
 msgid "Show long commit SHA1 (Default: off)"
 msgstr "Извеждане на пълните суми по SHA1 (стандартно опцията е изключена)"
 
-#: builtin/blame.c:2513
+#: builtin/blame.c:2512
 msgid "Suppress author name and timestamp (Default: off)"
 msgstr "Без име на автор и време на промяна (стандартно опцията е изключена)"
 
-#: builtin/blame.c:2514
+#: builtin/blame.c:2513
 msgid "Show author email instead of name (Default: off)"
 msgstr ""
 "Извеждане на е-пощата на автора, а не името му (стандартно опцията е "
 "изключена)"
 
-#: builtin/blame.c:2515
+#: builtin/blame.c:2514
 msgid "Ignore whitespace differences"
 msgstr "Без разлики в знаците за интервали"
 
-#: builtin/blame.c:2516
+#: builtin/blame.c:2515
 msgid "Spend extra cycles to find better match"
 msgstr "Допълнителни изчисления за по-добри резултати"
 
-#: builtin/blame.c:2517
+#: builtin/blame.c:2516
 msgid "Use revisions from <file> instead of calling git-rev-list"
 msgstr "Изчитане на версиите от ФАЙЛ, а не чрез изпълнение на „git-rev-list“"
 
-#: builtin/blame.c:2518
+#: builtin/blame.c:2517
 msgid "Use <file>'s contents as the final image"
 msgstr "Използване на съдържанието на ФАЙЛа като крайно положение"
 
-#: builtin/blame.c:2519 builtin/blame.c:2520
+#: builtin/blame.c:2518 builtin/blame.c:2519
 msgid "score"
 msgstr "напасване на редовете"
 
-#: builtin/blame.c:2519
+#: builtin/blame.c:2518
 msgid "Find line copies within and across files"
 msgstr ""
 "Търсене на копирани редове както в рамките на един файл, така и от един файл "
 "към друг"
 
-#: builtin/blame.c:2520
+#: builtin/blame.c:2519
 msgid "Find line movements within and across files"
 msgstr ""
 "Търсене на преместени редове както в рамките на един файл, така и от един "
 "файл към друг"
 
-#: builtin/blame.c:2521
+#: builtin/blame.c:2520
 msgid "n,m"
 msgstr "n,m"
 
-#: builtin/blame.c:2521
+#: builtin/blame.c:2520
 msgid "Process only line range n,m, counting from 1"
 msgstr ""
 "Информация само за редовете в интервала от n до m включително. Броенето "
 "започва от 1"
 
 #. TRANSLATORS: This string is used to tell us the maximum
 #. display width for a relative timestamp in "git blame"
 #. output.  For C locale, "4 years, 11 months ago", which
 #. takes 22 places, is the longest among various forms of
 #. relative timestamps, but your language may need more or
 #. fewer display columns.
-#: builtin/blame.c:2602
+#: builtin/blame.c:2601
 msgid "4 years, 11 months ago"
 msgstr "преди 4 години и 11 месеца"
 
 #: builtin/branch.c:24
-msgid "git branch [options] [-r | -a] [--merged | --no-merged]"
+msgid "git branch [<options>] [-r | -a] [--merged | --no-merged]"
 msgstr "git branch [ОПЦИЯ…] [-r | -a] [--merged | --no-merged]"
 
 #: builtin/branch.c:25
-msgid "git branch [options] [-l] [-f] <branchname> [<start-point>]"
+msgid "git branch [<options>] [-l] [-f] <branch-name> [<start-point>]"
 msgstr "git branch [ОПЦИЯ…] [-l] [-f] ИМЕ_НА_КЛОН [НАЧАЛО]"
 
 #: builtin/branch.c:26
-msgid "git branch [options] [-r] (-d | -D) <branchname>..."
+msgid "git branch [<options>] [-r] (-d | -D) <branch-name>..."
 msgstr "git branch [ОПЦИЯ…] [-r] (-d | -D) ИМЕ_НА_КЛОН…"
 
 #: builtin/branch.c:27
-msgid "git branch [options] (-m | -M) [<oldbranch>] <newbranch>"
+msgid "git branch [<options>] (-m | -M) [<old-branch>] <new-branch>"
 msgstr "git branch [ОПЦИЯ…] (-m | -M) [СТАР_КЛОН] НОВ_КЛОН"
 
 #: builtin/branch.c:152
 #, c-format
 msgid ""
 "deleting branch '%s' that has been merged to\n"
@@ -3122,269 +3145,274 @@
 
 #: builtin/branch.c:590
 #, c-format
 msgid "(no branch, bisect started on %s)"
 msgstr "(извън клон, двоично търсене от „%s“)"
 
-#: builtin/branch.c:593
+#: builtin/branch.c:596
+#, c-format
+msgid "(HEAD detached at %s)"
+msgstr "(Указателят „HEAD“ не е свързан и е при „%s“)"
+
+#: builtin/branch.c:599
 #, c-format
-msgid "(detached from %s)"
-msgstr "(състояние, несвързано към „%s“)"
+msgid "(HEAD detached from %s)"
+msgstr "Указателят „HEAD“ не е свързан и е отделѐн от „%s“"
 
-#: builtin/branch.c:596
+#: builtin/branch.c:603
 msgid "(no branch)"
 msgstr "(извън клон)"
 
-#: builtin/branch.c:643
+#: builtin/branch.c:650
 #, c-format
 msgid "object '%s' does not point to a commit"
 msgstr "обектът „%s“ не сочи към подаване"
 
-#: builtin/branch.c:691
+#: builtin/branch.c:698
 msgid "some refs could not be read"
 msgstr "някои указатели не могат да бъдат прочетени"
 
-#: builtin/branch.c:704
+#: builtin/branch.c:711
 msgid "cannot rename the current branch while not on any."
 msgstr ""
 "не можете да преименувате текущия клон, защото сте извън който и да е клон"
 
-#: builtin/branch.c:714
+#: builtin/branch.c:721
 #, c-format
 msgid "Invalid branch name: '%s'"
 msgstr "Неправилно име на клон: „%s“"
 
-#: builtin/branch.c:729
+#: builtin/branch.c:736
 msgid "Branch rename failed"
 msgstr "Неуспешно преименуване на клон"
 
-#: builtin/branch.c:733
+#: builtin/branch.c:740
 #, c-format
 msgid "Renamed a misnamed branch '%s' away"
 msgstr "На клона с неправилно име „%s“ е дадено служебно име"
 
-#: builtin/branch.c:737
+#: builtin/branch.c:744
 #, c-format
 msgid "Branch renamed to %s, but HEAD is not updated!"
 msgstr "Клонът е преименуван на „%s“, но указателят „HEAD“ не е обновен"
 
-#: builtin/branch.c:744
+#: builtin/branch.c:751
 msgid "Branch is renamed, but update of config-file failed"
 msgstr "Клонът е преименуван, но конфигурационният файл не е обновен"
 
-#: builtin/branch.c:759
+#: builtin/branch.c:766
 #, c-format
 msgid "malformed object name %s"
 msgstr "неправилно име на обект „%s“"
 
-#: builtin/branch.c:783
+#: builtin/branch.c:790
 #, c-format
 msgid "could not write branch description template: %s"
 msgstr "шаблонът за описание на клон не бе записан: „%s“"
 
-#: builtin/branch.c:813
+#: builtin/branch.c:820
 msgid "Generic options"
 msgstr "Общи настройки"
 
-#: builtin/branch.c:815
+#: builtin/branch.c:822
 msgid "show hash and subject, give twice for upstream branch"
 msgstr ""
 "извеждане на хеша и темата. Повтарянето на опцията прибавя отдалечените клони"
 
-#: builtin/branch.c:816
+#: builtin/branch.c:823
 msgid "suppress informational messages"
 msgstr "без информационни съобщения"
 
-#: builtin/branch.c:817
+#: builtin/branch.c:824
 msgid "set up tracking mode (see git-pull(1))"
 msgstr "задаване на режима на следене (виж git-pull(1))"
 
-#: builtin/branch.c:819
+#: builtin/branch.c:826
 msgid "change upstream info"
 msgstr "смяна на следения клон"
 
-#: builtin/branch.c:823
+#: builtin/branch.c:830
 msgid "use colored output"
 msgstr "цветен изход"
 
-#: builtin/branch.c:824
+#: builtin/branch.c:831
 msgid "act on remote-tracking branches"
 msgstr "действие върху следящите клони"
 
-#: builtin/branch.c:827 builtin/branch.c:833 builtin/branch.c:854
-#: builtin/branch.c:860 builtin/commit.c:1622 builtin/commit.c:1623
-#: builtin/commit.c:1624 builtin/commit.c:1625 builtin/tag.c:616
+#: builtin/branch.c:834 builtin/branch.c:840 builtin/branch.c:861
+#: builtin/branch.c:867 builtin/commit.c:1582 builtin/commit.c:1583
+#: builtin/commit.c:1584 builtin/commit.c:1585 builtin/tag.c:616
 #: builtin/tag.c:622
 msgid "commit"
 msgstr "подаване"
 
-#: builtin/branch.c:828 builtin/branch.c:834
+#: builtin/branch.c:835 builtin/branch.c:841
 msgid "print only branches that contain the commit"
 msgstr "извеждане само на клоните, които съдържат това подаване"
 
-#: builtin/branch.c:840
+#: builtin/branch.c:847
 msgid "Specific git-branch actions:"
 msgstr "Специални действия на „git-branch“:"
 
-#: builtin/branch.c:841
+#: builtin/branch.c:848
 msgid "list both remote-tracking and local branches"
 msgstr "извеждане както на следящите, така и на локалните клони"
 
-#: builtin/branch.c:843
+#: builtin/branch.c:850
 msgid "delete fully merged branch"
 msgstr "изтриване на клони, които са напълно слети"
 
-#: builtin/branch.c:844
+#: builtin/branch.c:851
 msgid "delete branch (even if not merged)"
 msgstr "изтриване и на клони, които не са напълно слети"
 
-#: builtin/branch.c:845
+#: builtin/branch.c:852
 msgid "move/rename a branch and its reflog"
 msgstr ""
 "преместване/преименуване на клон и принадлежащият му журнал на указателите"
 
-#: builtin/branch.c:846
+#: builtin/branch.c:853
 msgid "move/rename a branch, even if target exists"
 msgstr "преместване/преименуване на клон, дори ако има вече клон с такова име"
 
-#: builtin/branch.c:847
+#: builtin/branch.c:854
 msgid "list branch names"
 msgstr "извеждане на имената на клоните"
 
-#: builtin/branch.c:848
+#: builtin/branch.c:855
 msgid "create the branch's reflog"
 msgstr "създаване на журнала на указателите на клона"
 
-#: builtin/branch.c:850
+#: builtin/branch.c:857
 msgid "edit the description for the branch"
 msgstr "редактиране на описанието на клона"
 
-#: builtin/branch.c:851
-msgid "force creation (when already exists)"
-msgstr "принудително създаване, дори ако съществува клон с такова име"
+#: builtin/branch.c:858
+msgid "force creation, move/rename, deletion"
+msgstr "принудително създаване, преместване, преименуване, изтриване"
 
-#: builtin/branch.c:854
+#: builtin/branch.c:861
 msgid "print only not merged branches"
 msgstr "извеждане само на неслетите клони"
 
-#: builtin/branch.c:860
+#: builtin/branch.c:867
 msgid "print only merged branches"
 msgstr "извеждане само на слетите клони"
 
-#: builtin/branch.c:864
+#: builtin/branch.c:871
 msgid "list branches in columns"
 msgstr "извеждане по колони"
 
-#: builtin/branch.c:877
+#: builtin/branch.c:884
 msgid "Failed to resolve HEAD as a valid ref."
 msgstr "Не може да се открие към какво сочи указателят „HEAD“"
 
-#: builtin/branch.c:881 builtin/clone.c:634
+#: builtin/branch.c:888 builtin/clone.c:637
 msgid "HEAD not found below refs/heads!"
 msgstr "В директорията „refs/heads“ липсва файл „HEAD“"
 
-#: builtin/branch.c:903
+#: builtin/branch.c:910
 msgid "--column and --verbose are incompatible"
 msgstr "Опциите „--column“ и „--verbose“ са несъвместими"
 
-#: builtin/branch.c:909 builtin/branch.c:948
+#: builtin/branch.c:921 builtin/branch.c:960
 msgid "branch name required"
 msgstr "Необходимо е име на клон"
 
-#: builtin/branch.c:924
+#: builtin/branch.c:936
 msgid "Cannot give description to detached HEAD"
 msgstr "Не може да зададете описание на „HEAD“ извън клон"
 
-#: builtin/branch.c:929
+#: builtin/branch.c:941
 msgid "cannot edit description of more than one branch"
 msgstr "Не може да редактирате описанието на повече от един клон едновременно"
 
-#: builtin/branch.c:936
+#: builtin/branch.c:948
 #, c-format
 msgid "No commit on branch '%s' yet."
 msgstr "В клона „%s“ все още няма подавания."
 
-#: builtin/branch.c:939
+#: builtin/branch.c:951
 #, c-format
 msgid "No branch named '%s'."
 msgstr "Липсва клон на име „%s“."
 
-#: builtin/branch.c:954
+#: builtin/branch.c:966
 msgid "too many branches for a rename operation"
 msgstr "Прекалено много клони за преименуване"
 
-#: builtin/branch.c:959
+#: builtin/branch.c:971
 msgid "too many branches to set new upstream"
 msgstr "Прекалено много клони за задаване на следене"
 
-#: builtin/branch.c:963
+#: builtin/branch.c:975
 #, c-format
 msgid ""
 "could not set upstream of HEAD to %s when it does not point to any branch."
 msgstr ""
 "Следеното от „HEAD“ не може да се зададе да е „%s“, защото то не сочи към "
 "никой клон."
 
-#: builtin/branch.c:966 builtin/branch.c:988 builtin/branch.c:1009
+#: builtin/branch.c:978 builtin/branch.c:1000 builtin/branch.c:1021
 #, c-format
 msgid "no such branch '%s'"
 msgstr "Няма клон на име „%s“."
 
-#: builtin/branch.c:970
+#: builtin/branch.c:982
 #, c-format
 msgid "branch '%s' does not exist"
 msgstr "Не съществува клон на име „%s“."
 
-#: builtin/branch.c:982
+#: builtin/branch.c:994
 msgid "too many branches to unset upstream"
 msgstr "Прекалено много клони за махане на следене"
 
-#: builtin/branch.c:986
+#: builtin/branch.c:998
 msgid "could not unset upstream of HEAD when it does not point to any branch."
 msgstr ""
 "Следеното от „HEAD“ не може да махне, защото то не сочи към никой клон."
 
-#: builtin/branch.c:992
+#: builtin/branch.c:1004
 #, c-format
 msgid "Branch '%s' has no upstream information"
 msgstr "Няма информация клонът „%s“ да следи някой друг"
 
-#: builtin/branch.c:1006
+#: builtin/branch.c:1018
 msgid "it does not make sense to create 'HEAD' manually"
 msgstr "Няма никакъв смисъл ръчно да създавате „HEAD“."
 
-#: builtin/branch.c:1012
+#: builtin/branch.c:1024
 msgid "-a and -r options to 'git branch' do not make sense with a branch name"
 msgstr "Опциите „-a“ и „-r“ на „git branch“ са несъвместими с име на клон"
 
-#: builtin/branch.c:1015
+#: builtin/branch.c:1027
 #, c-format
 msgid ""
 "The --set-upstream flag is deprecated and will be removed. Consider using --"
 "track or --set-upstream-to\n"
 msgstr ""
 "Опцията „--set-upstream“ вече е остаряла и предстои да бъде махната. "
 "Използвайте „--track“ или „--set-upstream-to“\n"
 
-#: builtin/branch.c:1032
+#: builtin/branch.c:1044
 #, c-format
 msgid ""
 "\n"
 "If you wanted to make '%s' track '%s', do this:\n"
 "\n"
 msgstr ""
 "\n"
 "За да накарате „%s“ да следи „%s“, изпълнете следната команда:\n"
 "\n"
 
-#: builtin/branch.c:1033
+#: builtin/branch.c:1045
 #, c-format
 msgid "    git branch -d %s\n"
 msgstr "    git branch -d %s\n"
 
-#: builtin/branch.c:1034
+#: builtin/branch.c:1046
 #, c-format
 msgid "    git branch --set-upstream-to %s\n"
 msgstr "    git branch --set-upstream-to %s\n"
 
 #: builtin/bundle.c:47
 #, c-format
@@ -3396,63 +3424,63 @@
 msgstr "За създаването на пратка е необходимо хранилище."
 
 #: builtin/bundle.c:60
 msgid "Need a repository to unbundle."
 msgstr "За приемането на пратка е необходимо хранилище."
 
-#: builtin/cat-file.c:332
-msgid "git cat-file (-t|-s|-e|-p|<type>|--textconv) <object>"
-msgstr "git cat-file (-t|-s|-e|-p|ВИД|--textconv) ОБЕКТ"
-
-#: builtin/cat-file.c:333
-msgid "git cat-file (--batch|--batch-check) < <list_of_objects>"
-msgstr "git cat-file (--batch|--batch-check) < СПИСЪК_С_ОБЕКТИ"
+#: builtin/cat-file.c:326
+msgid "git cat-file (-t | -s | -e | -p | <type> | --textconv) <object>"
+msgstr "git cat-file (-t | -s | -e | -p | ВИД | --textconv) ОБЕКТ"
+
+#: builtin/cat-file.c:327
+msgid "git cat-file (--batch | --batch-check) < <list-of-objects>"
+msgstr "git cat-file (--batch | --batch-check) < СПИСЪК_С_ОБЕКТИ"
 
-#: builtin/cat-file.c:370
+#: builtin/cat-file.c:364
 msgid "<type> can be one of: blob, tree, commit, tag"
 msgstr ""
 "ВИДът може да е: „blob“ (обект BLOB), „tree“ (дърво), „commit“ (подаване), "
 "„tag“ (етикет)"
 
-#: builtin/cat-file.c:371
+#: builtin/cat-file.c:365
 msgid "show object type"
 msgstr "извеждане на вида на обект"
 
-#: builtin/cat-file.c:372
+#: builtin/cat-file.c:366
 msgid "show object size"
 msgstr "извеждане на размера на обект"
 
-#: builtin/cat-file.c:374
+#: builtin/cat-file.c:368
 msgid "exit with zero when there's no error"
 msgstr "изход с 0, когато няма грешка"
 
-#: builtin/cat-file.c:375
+#: builtin/cat-file.c:369
 msgid "pretty-print object's content"
 msgstr "форматирано извеждане на съдържанието на обекта"
 
-#: builtin/cat-file.c:377
+#: builtin/cat-file.c:371
 msgid "for blob objects, run textconv on object's content"
 msgstr ""
 "да се стартира програмата зададена в настройката „textconv“ за преобразуване "
 "на съдържанието на обекта"
 
-#: builtin/cat-file.c:379
+#: builtin/cat-file.c:373
 msgid "show info and content of objects fed from the standard input"
 msgstr ""
 "извеждане на информация и съдържание на обектите подадени на стандартния вход"
 
-#: builtin/cat-file.c:382
+#: builtin/cat-file.c:376
 msgid "show info about objects fed from the standard input"
 msgstr "извеждане на информация за обектите подадени на стандартния вход"
 
 #: builtin/check-attr.c:11
-msgid "git check-attr [-a | --all | attr...] [--] pathname..."
+msgid "git check-attr [-a | --all | <attr>...] [--] <pathname>..."
 msgstr "git check-attr [-a | --all | АТРИБУТ…] [--] ПЪТ…"
 
 #: builtin/check-attr.c:12
-msgid "git check-attr --stdin [-z] [-a | --all | attr...] < <list-of-paths>"
+msgid "git check-attr --stdin [-z] [-a | --all | <attr>...] < <list-of-paths>"
 msgstr "git check-attr --stdin [-z] [-a | --all | АТРИБУТ…] < СПИСЪК_С_ПЪТИЩА"
 
 #: builtin/check-attr.c:19
 msgid "report all attributes set on file"
 msgstr "извеждане на всички атрибути, зададени върху файл"
 
@@ -3465,13 +3493,13 @@
 msgstr "изчитане на имената на файловете от стандартния вход"
 
 #: builtin/check-attr.c:23 builtin/check-ignore.c:24
 msgid "terminate input and output records by a NUL character"
 msgstr "разделяне на входните и изходните записи с нулевия знак „NUL“"
 
-#: builtin/check-ignore.c:18 builtin/checkout.c:1089 builtin/gc.c:274
+#: builtin/check-ignore.c:18 builtin/checkout.c:1107 builtin/gc.c:274
 msgid "suppress progress reporting"
 msgstr "без показване на напредъка"
 
 #: builtin/check-ignore.c:26
 msgid "show non-matching input paths"
 msgstr "извеждане на несъвпадащите пътища"
@@ -3505,13 +3533,13 @@
 # FIXME options
 #: builtin/check-ignore.c:168
 msgid "--non-matching is only valid with --verbose"
 msgstr "опцията „--non-matching“ изисква „--verbose“"
 
 #: builtin/check-mailmap.c:8
-msgid "git check-mailmap [options] <contact>..."
+msgid "git check-mailmap [<options>] <contact>..."
 msgstr "git check-mailmap [ОПЦИЯ…] КОНТАКТ…"
 
 #: builtin/check-mailmap.c:13
 msgid "also read contacts from stdin"
 msgstr "четене на контакти и от стандартния вход"
 
@@ -3522,13 +3550,13 @@
 
 #: builtin/check-mailmap.c:47
 msgid "no contacts specified"
 msgstr "не са указани контакти"
 
 #: builtin/checkout-index.c:126
-msgid "git checkout-index [options] [--] [<file>...]"
+msgid "git checkout-index [<options>] [--] [<file>...]"
 msgstr "git checkout-index [ОПЦИЯ…] [--] [ФАЙЛ…]"
 
 #: builtin/checkout-index.c:188
 msgid "check out all files in the index"
 msgstr "изтегляне на всички файлове в индекса"
 
@@ -3566,122 +3594,122 @@
 
 #: builtin/checkout-index.c:208
 msgid "copy out the files from named stage"
 msgstr "копиране на файловете от това състояние на сливане"
 
 #: builtin/checkout.c:25
-msgid "git checkout [options] <branch>"
+msgid "git checkout [<options>] <branch>"
 msgstr "git checkout [ОПЦИЯ…] КЛОН"
 
 #: builtin/checkout.c:26
-msgid "git checkout [options] [<branch>] -- <file>..."
+msgid "git checkout [<options>] [<branch>] -- <file>..."
 msgstr "git checkout [ОПЦИЯ…] [КЛОН] -- ФАЙЛ…"
 
-#: builtin/checkout.c:114 builtin/checkout.c:147
+#: builtin/checkout.c:132 builtin/checkout.c:165
 #, c-format
 msgid "path '%s' does not have our version"
 msgstr "вашата версия липсва в пътя „%s“"
 
-#: builtin/checkout.c:116 builtin/checkout.c:149
+#: builtin/checkout.c:134 builtin/checkout.c:167
 #, c-format
 msgid "path '%s' does not have their version"
 msgstr "чуждата версия липсва в пътя „%s“"
 
 # FIXME SAME AS [1]
-#: builtin/checkout.c:132
+#: builtin/checkout.c:150
 #, c-format
 msgid "path '%s' does not have all necessary versions"
 msgstr "някоя от необходимите версии липсва в пътя „%s“"
 
 # FIXME SAME AS [1]
-#: builtin/checkout.c:176
+#: builtin/checkout.c:194
 #, c-format
 msgid "path '%s' does not have necessary versions"
 msgstr "някоя от необходимите версии липсва в пътя „%s“"
 
-#: builtin/checkout.c:193
+#: builtin/checkout.c:211
 #, c-format
 msgid "path '%s': cannot merge"
 msgstr "пътят „%s“ не може да бъде слян"
 
-#: builtin/checkout.c:210
+#: builtin/checkout.c:228
 #, c-format
 msgid "Unable to add merge result for '%s'"
 msgstr "Резултатът за „%s“ не може да бъде слян"
 
-#: builtin/checkout.c:231 builtin/checkout.c:234 builtin/checkout.c:237
-#: builtin/checkout.c:240
+#: builtin/checkout.c:249 builtin/checkout.c:252 builtin/checkout.c:255
+#: builtin/checkout.c:258
 #, c-format
 msgid "'%s' cannot be used with updating paths"
 msgstr "Опцията „%s“ е несъвместима с обновяването на пътища"
 
-#: builtin/checkout.c:243 builtin/checkout.c:246
+#: builtin/checkout.c:261 builtin/checkout.c:264
 #, c-format
 msgid "'%s' cannot be used with %s"
 msgstr "Опцията „%s“ е несъвместима с „%s“"
 
-#: builtin/checkout.c:249
+#: builtin/checkout.c:267
 #, c-format
 msgid "Cannot update paths and switch to branch '%s' at the same time."
 msgstr ""
 "Невъзможно е едновременно да обновявате пътища и да се прехвърлите към клона "
 "„%s“."
 
-#: builtin/checkout.c:260 builtin/checkout.c:449
+#: builtin/checkout.c:278 builtin/checkout.c:467
 msgid "corrupt index file"
 msgstr "повреден файл на индекса"
 
-#: builtin/checkout.c:320 builtin/checkout.c:327
+#: builtin/checkout.c:338 builtin/checkout.c:345
 #, c-format
 msgid "path '%s' is unmerged"
 msgstr "пътят „%s“ не е слят"
 
-#: builtin/checkout.c:471
+#: builtin/checkout.c:489
 msgid "you need to resolve your current index first"
 msgstr "първо трябва да коригирате индекса си"
 
-#: builtin/checkout.c:597
+#: builtin/checkout.c:615
 #, c-format
 msgid "Can not do reflog for '%s'\n"
 msgstr "Журналът на указателите за „%s“ не може да бъде създаден\n"
 
-#: builtin/checkout.c:635
+#: builtin/checkout.c:653
 msgid "HEAD is now at"
 msgstr "Указателят „HEAD“ в момента сочи към"
 
-#: builtin/checkout.c:642
+#: builtin/checkout.c:660
 #, c-format
 msgid "Reset branch '%s'\n"
 msgstr "Зануляване на клона „%s“\n"
 
-#: builtin/checkout.c:645
+#: builtin/checkout.c:663
 #, c-format
 msgid "Already on '%s'\n"
 msgstr "Вече сте на „%s“\n"
 
-#: builtin/checkout.c:649
+#: builtin/checkout.c:667
 #, c-format
 msgid "Switched to and reset branch '%s'\n"
 msgstr "Преминаване към клона „%s“ и зануляване на промените\n"
 
-#: builtin/checkout.c:651 builtin/checkout.c:1032
+#: builtin/checkout.c:669 builtin/checkout.c:1050
 #, c-format
 msgid "Switched to a new branch '%s'\n"
 msgstr "Преминахте към новия клон „%s“\n"
 
-#: builtin/checkout.c:653
+#: builtin/checkout.c:671
 #, c-format
 msgid "Switched to branch '%s'\n"
 msgstr "Преминахте към клона „%s“\n"
 
-#: builtin/checkout.c:705
+#: builtin/checkout.c:723
 #, c-format
 msgid " ... and %d more.\n"
 msgstr "… и още %d.\n"
 
-#: builtin/checkout.c:711
+#: builtin/checkout.c:729
 #, c-format
 msgid ""
 "Warning: you are leaving %d commit behind, not connected to\n"
 "any of your branches:\n"
 "\n"
 "%s\n"
@@ -3697,178 +3725,178 @@
 msgstr[1] ""
 "ПРЕДУПРЕЖДЕНИЕ: изоставяте %d подавания, които не са свързани към никой "
 "клон:\n"
 "\n"
 "%s\n"
 
-#: builtin/checkout.c:729
+#: builtin/checkout.c:747
 #, c-format
 msgid ""
 "If you want to keep them by creating a new branch, this may be a good time\n"
 "to do so with:\n"
 "\n"
-" git branch new_branch_name %s\n"
+" git branch <new-branch-name> %s\n"
 "\n"
 msgstr ""
-"Ако все пак искате да запазите тези промени, сега е най-подходящият\n"
-"момент да създадете нов клон за тях чрез командата:\n"
+"Ако все пак искате да запазите тези промени чрез създаване на клон,\n"
+"сега е най-подходящият за това чрез командата:\n"
 "\n"
 " git branch ИМЕ_НА_НОВИЯ_КЛОН %s\n"
 "\n"
 
-#: builtin/checkout.c:759
+#: builtin/checkout.c:777
 msgid "internal error in revision walk"
 msgstr "вътрешна грешка при обхождането на версиите"
 
-#: builtin/checkout.c:763
+#: builtin/checkout.c:781
 msgid "Previous HEAD position was"
 msgstr "Преди това „HEAD“ сочеше към"
 
-#: builtin/checkout.c:790 builtin/checkout.c:1027
+#: builtin/checkout.c:808 builtin/checkout.c:1045
 msgid "You are on a branch yet to be born"
 msgstr "В момента сте на клон, който предстои да бъде създаден"
 
-#: builtin/checkout.c:934
+#: builtin/checkout.c:952
 #, c-format
 msgid "only one reference expected, %d given."
 msgstr "очакваше се един указател, а сте подали %d."
 
-#: builtin/checkout.c:973
+#: builtin/checkout.c:991
 #, c-format
 msgid "invalid reference: %s"
 msgstr "неправилен указател: %s"
 
-#: builtin/checkout.c:1002
+#: builtin/checkout.c:1020
 #, c-format
 msgid "reference is not a tree: %s"
 msgstr "указателят не сочи към обект-дърво: %s"
 
-#: builtin/checkout.c:1041
+#: builtin/checkout.c:1059
 msgid "paths cannot be used with switching branches"
 msgstr "задаването на път е несъвместимо с преминаването от един клон към друг"
 
-#: builtin/checkout.c:1044 builtin/checkout.c:1048
+#: builtin/checkout.c:1062 builtin/checkout.c:1066
 #, c-format
 msgid "'%s' cannot be used with switching branches"
 msgstr "опцията „%s“ е несъвместима с преминаването от един клон към друг"
 
-#: builtin/checkout.c:1052 builtin/checkout.c:1055 builtin/checkout.c:1060
-#: builtin/checkout.c:1063
+#: builtin/checkout.c:1070 builtin/checkout.c:1073 builtin/checkout.c:1078
+#: builtin/checkout.c:1081
 #, c-format
 msgid "'%s' cannot be used with '%s'"
 msgstr "опцията „%s“ е несъвместима с „%s“"
 
-#: builtin/checkout.c:1068
+#: builtin/checkout.c:1086
 #, c-format
 msgid "Cannot switch branch to a non-commit '%s'"
 msgstr ""
 "За да преминете към клон, подайте указател, който сочи към подаване. „%s“ не "
 "е такъв"
 
-#: builtin/checkout.c:1090 builtin/checkout.c:1092 builtin/clone.c:89
+#: builtin/checkout.c:1108 builtin/checkout.c:1110 builtin/clone.c:90
 #: builtin/remote.c:159 builtin/remote.c:161
 msgid "branch"
 msgstr "клон"
 
-#: builtin/checkout.c:1091
+#: builtin/checkout.c:1109
 msgid "create and checkout a new branch"
 msgstr "създаване и преминаване към нов клон"
 
-#: builtin/checkout.c:1093
+#: builtin/checkout.c:1111
 msgid "create/reset and checkout a branch"
 msgstr "създаване/зануляване на клон и преминаване към него"
 
-#: builtin/checkout.c:1094
+#: builtin/checkout.c:1112
 msgid "create reflog for new branch"
 msgstr "създаване на журнал на указателите за нов клон"
 
-#: builtin/checkout.c:1095
+#: builtin/checkout.c:1113
 msgid "detach the HEAD at named commit"
 msgstr "отделяне на указателя „HEAD“ към указаното подаване"
 
-#: builtin/checkout.c:1096
+#: builtin/checkout.c:1114
 msgid "set upstream info for new branch"
 msgstr "задаване на кой клон бива следен при създаването на новия клон"
 
-#: builtin/checkout.c:1098
+#: builtin/checkout.c:1116
 msgid "new-branch"
 msgstr "НОВ_КЛОН"
 
-#: builtin/checkout.c:1098
+#: builtin/checkout.c:1116
 msgid "new unparented branch"
 msgstr "нов клон без родител"
 
-#: builtin/checkout.c:1099
+#: builtin/checkout.c:1117
 msgid "checkout our version for unmerged files"
 msgstr "изтегляне на вашата версия на неслетите файлове"
 
-#: builtin/checkout.c:1101
+#: builtin/checkout.c:1119
 msgid "checkout their version for unmerged files"
 msgstr "изтегляне на чуждата версия на неслетите файлове"
 
-#: builtin/checkout.c:1103
+#: builtin/checkout.c:1121
 msgid "force checkout (throw away local modifications)"
 msgstr "принудително изтегляне (вашите промени ще бъдат занулени)"
 
-#: builtin/checkout.c:1104
+#: builtin/checkout.c:1122
 msgid "perform a 3-way merge with the new branch"
 msgstr "извършване на тройно сливане с новия клон"
 
-#: builtin/checkout.c:1105 builtin/merge.c:226
+#: builtin/checkout.c:1123 builtin/merge.c:227
 msgid "update ignored files (default)"
 msgstr "обновяване на игнорираните файлове (стандартно)"
 
-#: builtin/checkout.c:1106 builtin/log.c:1239 parse-options.h:245
+#: builtin/checkout.c:1124 builtin/log.c:1239 parse-options.h:245
 msgid "style"
 msgstr "стил"
 
-#: builtin/checkout.c:1107
+#: builtin/checkout.c:1125
 msgid "conflict style (merge or diff3)"
 msgstr "действие при конфликт (сливане или тройна разлика)"
 
-#: builtin/checkout.c:1110
+#: builtin/checkout.c:1128
 msgid "do not limit pathspecs to sparse entries only"
 msgstr "без ограничаване на изброените пътища само до частично изтеглените"
 
-#: builtin/checkout.c:1112
-msgid "second guess 'git checkout no-such-branch'"
+#: builtin/checkout.c:1130
+msgid "second guess 'git checkout <no-such-branch>'"
 msgstr ""
-"последващ опит за отгатване след неуспешен опит с „git checkout no-such-"
-"branch“"
+"опит за отгатване на име на клон след неуспешен опит с „git checkout "
+"НЕСЪЩЕСТВУВАЩ_КЛОН“"
 
-#: builtin/checkout.c:1135
+#: builtin/checkout.c:1153
 msgid "-b, -B and --orphan are mutually exclusive"
 msgstr "Опциите „-b“, „-B“ и „--orphan“ са несъвместими една с друга"
 
-#: builtin/checkout.c:1152
+#: builtin/checkout.c:1170
 msgid "--track needs a branch name"
 msgstr "опцията „--track“ изисква име на клон"
 
-#: builtin/checkout.c:1157
+#: builtin/checkout.c:1175
 msgid "Missing branch name; try -b"
 msgstr "Липсва име на клон, използвайте опцията „-b“"
 
-#: builtin/checkout.c:1194
+#: builtin/checkout.c:1212
 msgid "invalid path specification"
 msgstr "указан е неправилен път"
 
-#: builtin/checkout.c:1201
+#: builtin/checkout.c:1219
 #, c-format
 msgid ""
 "Cannot update paths and switch to branch '%s' at the same time.\n"
 "Did you intend to checkout '%s' which can not be resolved as commit?"
 msgstr ""
 "Не можете едновременно да обновявате пътища и да преминете към клона „%s“.\n"
 "Дали не искате да изтеглите „%s“, който не сочи към подаване?"
 
-#: builtin/checkout.c:1206
+#: builtin/checkout.c:1224
 #, c-format
 msgid "git checkout: --detach does not take a path argument '%s'"
 msgstr "git checkout: опцията „--detach“ не приема аргумент-път „%s“"
 
-#: builtin/checkout.c:1210
+#: builtin/checkout.c:1228
 msgid ""
 "git checkout: --ours/--theirs, --force and --merge are incompatible when\n"
 "checking out of the index."
 msgstr ""
 "git checkout: опциите „--ours“/„--theirs“, „--force“ и „--merge“\n"
 "са несъвместими с изтегляне от индекса."
@@ -3953,23 +3981,24 @@
 msgstr "ПРЕДУПРЕЖДЕНИЕ: Никой обект не напасва на „%s“"
 
 #: builtin/clean.c:717
 msgid "Select items to delete"
 msgstr "Избиране на обекти за изтриване"
 
-#: builtin/clean.c:757
+#. TRANSLATORS: Make sure to keep [y/N] as is
+#: builtin/clean.c:758
 #, c-format
-msgid "remove %s? "
-msgstr "Да се изтрие ли „%s“? "
+msgid "Remove %s [y/N]? "
+msgstr "Да се изтрие ли „%s“? „y“ —  да, „N“ — НЕ"
 
 # FIXME improve message
-#: builtin/clean.c:782
+#: builtin/clean.c:783
 msgid "Bye."
 msgstr "Изход."
 
-#: builtin/clean.c:790
+#: builtin/clean.c:791
 msgid ""
 "clean               - start cleaning\n"
 "filter by pattern   - exclude items from deletion\n"
 "select by numbers   - select items to be deleted by numbers\n"
 "ask each            - confirm each deletion (like \"rm -i\")\n"
 "quit                - stop cleaning\n"
@@ -3982,356 +4011,372 @@
 "ask each            — потвърждаване на всяко изтриване (подобно на „rm -i“)\n"
 "quit                — край на изчистването\n"
 "help                — този край\n"
 "?                   — подсказка за шаблоните"
 
 # FIXME how many ***
-#: builtin/clean.c:817
+#: builtin/clean.c:818
 msgid "*** Commands ***"
 msgstr "●●● Команди ●●●"
 
 # FIXME improve message
-#: builtin/clean.c:818
+#: builtin/clean.c:819
 msgid "What now"
 msgstr "Избор на следващо действие"
 
-#: builtin/clean.c:826
+#: builtin/clean.c:827
 msgid "Would remove the following item:"
 msgid_plural "Would remove the following items:"
 msgstr[0] "Следният обект ще бъде изтрит:"
 msgstr[1] "Следните обекти ще бъдат изтрити:"
 
-#: builtin/clean.c:843
+#: builtin/clean.c:844
 msgid "No more files to clean, exiting."
 msgstr "Файловете за изчистване свършиха. Изход от програмата."
 
-#: builtin/clean.c:874
+#: builtin/clean.c:875
 msgid "do not print names of files removed"
 msgstr "без извеждане на имената на файловете, които ще бъдат изтрити"
 
-#: builtin/clean.c:876
+#: builtin/clean.c:877
 msgid "force"
 msgstr "принудително изтриване"
 
-#: builtin/clean.c:877
+#: builtin/clean.c:878
 msgid "interactive cleaning"
 msgstr "интерактивно изтриване"
 
-#: builtin/clean.c:879
+#: builtin/clean.c:880
 msgid "remove whole directories"
 msgstr "изтриване на цели директории"
 
-#: builtin/clean.c:880 builtin/describe.c:407 builtin/grep.c:714
-#: builtin/ls-files.c:486 builtin/name-rev.c:311 builtin/show-ref.c:185
+#: builtin/clean.c:881 builtin/describe.c:407 builtin/grep.c:714
+#: builtin/ls-files.c:443 builtin/name-rev.c:311 builtin/show-ref.c:185
 msgid "pattern"
 msgstr "шаблон"
 
-#: builtin/clean.c:881
+#: builtin/clean.c:882
 msgid "add <pattern> to ignore rules"
 msgstr "добавяне на ШАБЛОН от файлове, които да не се трият"
 
-#: builtin/clean.c:882
+#: builtin/clean.c:883
 msgid "remove ignored files, too"
 msgstr "изтриване и на игнорираните файлове"
 
-#: builtin/clean.c:884
+#: builtin/clean.c:885
 msgid "remove only ignored files"
 msgstr "изтриване само на игнорирани файлове"
 
-#: builtin/clean.c:902
+#: builtin/clean.c:903
 msgid "-x and -X cannot be used together"
 msgstr "опциите „-x“ и „-X“ са несъвместими"
 
-#: builtin/clean.c:906
+#: builtin/clean.c:907
 msgid ""
 "clean.requireForce set to true and neither -i, -n, nor -f given; refusing to "
 "clean"
 msgstr ""
 "Настройката „clean.requireForce“ е зададена като истина, което изисква някоя "
 "от опциите „-i“, „-n“ или „-f“. Няма да се извърши изчистване"
 
-#: builtin/clean.c:909
+#: builtin/clean.c:910
 msgid ""
 "clean.requireForce defaults to true and neither -i, -n, nor -f given; "
 "refusing to clean"
 msgstr ""
 "Настройката „clean.requireForce“ не е зададена, но стандартно е истина, "
 "което изисква някоя от опциите „-i“, „-n“ или „-f“. Няма да се извърши "
 "изчистване"
 
 #: builtin/clone.c:37
-msgid "git clone [options] [--] <repo> [<dir>]"
+msgid "git clone [<options>] [--] <repo> [<dir>]"
 msgstr "git clone [ОПЦИЯ…] [--] ХРАНИЛИЩЕ [ДИРЕКТОРИЯ]"
 
-#: builtin/clone.c:65 builtin/fetch.c:112 builtin/merge.c:223
-#: builtin/push.c:514
+#: builtin/clone.c:66 builtin/fetch.c:111 builtin/merge.c:224
+#: builtin/push.c:523
 msgid "force progress reporting"
 msgstr "извеждане на напредъка"
 
-#: builtin/clone.c:67
+#: builtin/clone.c:68
 msgid "don't create a checkout"
 msgstr "без създаване на работно дърво"
 
-#: builtin/clone.c:68 builtin/clone.c:70 builtin/init-db.c:488
+#: builtin/clone.c:69 builtin/clone.c:71 builtin/init-db.c:496
 msgid "create a bare repository"
 msgstr "създаване на голо хранилище"
 
-#: builtin/clone.c:72
+#: builtin/clone.c:73
 msgid "create a mirror repository (implies bare)"
 msgstr ""
 "създаване на хранилище-огледало (включва опцията „--bare“ за голо хранилище)"
 
-#: builtin/clone.c:74
+#: builtin/clone.c:75
 msgid "to clone from a local repository"
 msgstr "клониране от локално хранилище"
 
-#: builtin/clone.c:76
+#: builtin/clone.c:77
 msgid "don't use local hardlinks, always copy"
 msgstr "без твърди връзки, файловете винаги да се копират"
 
-#: builtin/clone.c:78
+#: builtin/clone.c:79
 msgid "setup as shared repository"
 msgstr "настройване за споделено хранилище"
 
-#: builtin/clone.c:80 builtin/clone.c:82
+#: builtin/clone.c:81 builtin/clone.c:83
 msgid "initialize submodules in the clone"
 msgstr "инициализиране на подмодулите при това клониране"
 
-#: builtin/clone.c:83 builtin/init-db.c:485
+#: builtin/clone.c:84 builtin/init-db.c:493
 msgid "template-directory"
 msgstr "директория с шаблони"
 
-#: builtin/clone.c:84 builtin/init-db.c:486
+#: builtin/clone.c:85 builtin/init-db.c:494
 msgid "directory from which templates will be used"
 msgstr "директория, която съдържа шаблоните, които да се ползват"
 
-#: builtin/clone.c:86
+#: builtin/clone.c:87
 msgid "reference repository"
 msgstr "еталонно хранилище"
 
-#: builtin/clone.c:87 builtin/column.c:26 builtin/merge-file.c:44
+#: builtin/clone.c:88 builtin/column.c:26 builtin/merge-file.c:44
 msgid "name"
 msgstr "ИМЕ"
 
-#: builtin/clone.c:88
+#: builtin/clone.c:89
 msgid "use <name> instead of 'origin' to track upstream"
 msgstr "използване на това ИМЕ вместо „origin“ при проследяване на клони"
 
-#: builtin/clone.c:90
+#: builtin/clone.c:91
 msgid "checkout <branch> instead of the remote's HEAD"
 msgstr "изтегляне на този КЛОН, а не соченият от отдалечения указател „HEAD“"
 
-#: builtin/clone.c:92
+#: builtin/clone.c:93
 msgid "path to git-upload-pack on the remote"
 msgstr "път към командата „git-upload-pack“ на отдалеченото хранилище"
 
-#: builtin/clone.c:93 builtin/fetch.c:113 builtin/grep.c:659
+#: builtin/clone.c:94 builtin/fetch.c:112 builtin/grep.c:659
 msgid "depth"
 msgstr "ДЪЛБОЧИНА"
 
-#: builtin/clone.c:94
+#: builtin/clone.c:95
 msgid "create a shallow clone of that depth"
 msgstr "плитко клониране до тази ДЪЛБОЧИНА"
 
-#: builtin/clone.c:96
+#: builtin/clone.c:97
 msgid "clone only one branch, HEAD or --branch"
 msgstr ""
 "клониране само на един клон — или сочения от отдалечения „HEAD“, или изрично "
 "зададения с „--branch“"
 
-#: builtin/clone.c:97 builtin/init-db.c:494
+#: builtin/clone.c:99
+msgid "use --reference only while cloning"
+msgstr "опцията „--reference“ може да се използва само при клониране"
+
+#: builtin/clone.c:100 builtin/init-db.c:502
 msgid "gitdir"
 msgstr "СЛУЖЕБНА_ДИРЕКТОРИЯ"
 
-#: builtin/clone.c:98 builtin/init-db.c:495
+#: builtin/clone.c:101 builtin/init-db.c:503
 msgid "separate git dir from working tree"
 msgstr "отделна СЛУЖЕБНА_ДИРЕКТОРИЯ за git извън работното дърво"
 
-#: builtin/clone.c:99
+#: builtin/clone.c:102
 msgid "key=value"
 msgstr "КЛЮЧ=СТОЙНОСТ"
 
-#: builtin/clone.c:100
+#: builtin/clone.c:103
 msgid "set config inside the new repository"
 msgstr "задаване на настройките на новото хранилище"
 
-#: builtin/clone.c:253
+#: builtin/clone.c:256
 #, c-format
 msgid "reference repository '%s' is not a local repository."
 msgstr "еталонното хранилище „%s“ не е локално"
 
-#: builtin/clone.c:257
+#: builtin/clone.c:260
 #, c-format
 msgid "reference repository '%s' is shallow"
 msgstr "еталонното хранилище „%s“ е плитко"
 
-#: builtin/clone.c:260
+#: builtin/clone.c:263
 #, c-format
 msgid "reference repository '%s' is grafted"
 msgstr "еталонното хранилище „%s“ е с присаждане"
 
-#: builtin/clone.c:322
+#: builtin/clone.c:325
 #, c-format
 msgid "failed to create directory '%s'"
 msgstr "директорията „%s“ не може да бъде създадена"
 
-#: builtin/clone.c:324 builtin/diff.c:84
+#: builtin/clone.c:327 builtin/diff.c:84
 #, c-format
 msgid "failed to stat '%s'"
 msgstr "не може да бъде получена информация чрез „stat“ за „%s“"
 
-#: builtin/clone.c:326
+#: builtin/clone.c:329
 #, c-format
 msgid "%s exists and is not a directory"
 msgstr "„%s“ съществува и не е директория"
 
-#: builtin/clone.c:340
+#: builtin/clone.c:343
 #, c-format
 msgid "failed to stat %s\n"
 msgstr "не може да бъде получена информация чрез „stat“ за „%s“\n"
 
-#: builtin/clone.c:362
+#: builtin/clone.c:365
 #, c-format
 msgid "failed to create link '%s'"
 msgstr "връзката „%s“ не може да бъде създадена"
 
-#: builtin/clone.c:366
+#: builtin/clone.c:369
 #, c-format
 msgid "failed to copy file to '%s'"
 msgstr "файлът не може да бъде копиран като „%s“"
 
-#: builtin/clone.c:389 builtin/clone.c:563
+#: builtin/clone.c:392 builtin/clone.c:566
 #, c-format
 msgid "done.\n"
 msgstr "действието завърши.\n"
 
-#: builtin/clone.c:401
+#: builtin/clone.c:404
 msgid ""
 "Clone succeeded, but checkout failed.\n"
 "You can inspect what was checked out with 'git status'\n"
 "and retry the checkout with 'git checkout -f HEAD'\n"
 msgstr ""
 "Клонирането бе успешно за разлика от подготовката на работното дърво\n"
 "за определен клон. Все пак можете да проверите кои файлове и от кой\n"
 "клон в момента са изтеглени с командата „git status“. Можете да\n"
 "завършите изтеглянето на клона с командата „git checkout -f HEAD“.\n"
 
-#: builtin/clone.c:478
+#: builtin/clone.c:481
 #, c-format
 msgid "Could not find remote branch %s to clone."
 msgstr ""
 "Клонът „%s“ от отдалеченото хранилище, което клонирате,\n"
 "и който следва да бъде изтеглен, не съществува."
 
 # FIXME translator note that the space at end is necesssary
-#: builtin/clone.c:558
+#: builtin/clone.c:561
 #, c-format
 msgid "Checking connectivity... "
 msgstr "Проверка на връзката… "
 
-#: builtin/clone.c:561
+#: builtin/clone.c:564
 msgid "remote did not send all necessary objects"
 msgstr "отдалеченото хранилище не изпрати всички необходими обекти."
 
-#: builtin/clone.c:625
+#: builtin/clone.c:628
 msgid "remote HEAD refers to nonexistent ref, unable to checkout.\n"
 msgstr ""
 "указателят „HEAD“ от отдалеченото хранилище сочи към нещо,\n"
 "което не съществува. Не може да се изтегли определен клон.\n"
 
-#: builtin/clone.c:656
+#: builtin/clone.c:659
 msgid "unable to checkout working tree"
 msgstr "работното дърво не може да бъде подготвено"
 
-#: builtin/clone.c:765
+#: builtin/clone.c:746
+msgid "cannot repack to clean up"
+msgstr "не може да се извърши пакетиране за изчистване на файловете"
+
+#: builtin/clone.c:748
+msgid "cannot unlink temporary alternates file"
+msgstr "временният файл за алтернативни обекти не може да бъде изтрит"
+
+#: builtin/clone.c:778
 msgid "Too many arguments."
 msgstr "Прекалено много аргументи."
 
-#: builtin/clone.c:769
+#: builtin/clone.c:782
 msgid "You must specify a repository to clone."
 msgstr "Трябва да укажете кое хранилище искате да клонирате."
 
-#: builtin/clone.c:780
+#: builtin/clone.c:793
 #, c-format
 msgid "--bare and --origin %s options are incompatible."
 msgstr "опциите „--bare“ и „--origin %s“ са несъвместими."
 
-#: builtin/clone.c:783
+#: builtin/clone.c:796
 msgid "--bare and --separate-git-dir are incompatible."
 msgstr "опциите „--bare“ и „--separate-git-dir“ са несъвместими."
 
-#: builtin/clone.c:796
+#: builtin/clone.c:809
 #, c-format
 msgid "repository '%s' does not exist"
 msgstr "не съществува хранилище „%s“"
 
-#: builtin/clone.c:802 builtin/fetch.c:1155
+#: builtin/clone.c:815 builtin/fetch.c:1156
 #, c-format
 msgid "depth %s is not a positive number"
 msgstr "дълбочината трябва да е положително цяло число, а не „%s“"
 
-#: builtin/clone.c:812
+#: builtin/clone.c:825
 #, c-format
 msgid "destination path '%s' already exists and is not an empty directory."
 msgstr "целевият път „%s“ съществува и не е празна директория."
 
-#: builtin/clone.c:822
+#: builtin/clone.c:835
 #, c-format
 msgid "working tree '%s' already exists."
 msgstr "в „%s“ вече съществува работно дърво."
 
-#: builtin/clone.c:835 builtin/clone.c:847
+#: builtin/clone.c:850 builtin/clone.c:861
 #, c-format
 msgid "could not create leading directories of '%s'"
 msgstr "родителските директории на „%s“ не могат да бъдат създадени"
 
-#: builtin/clone.c:838
+#: builtin/clone.c:853
 #, c-format
-msgid "could not create work tree dir '%s'."
+msgid "could not create work tree dir '%s'"
 msgstr "работното дърво в „%s“ не може да бъде създадено."
 
-#: builtin/clone.c:857
+#: builtin/clone.c:871
 #, c-format
 msgid "Cloning into bare repository '%s'...\n"
 msgstr "Клониране и създаване на голо хранилище в „%s“…\n"
 
-#: builtin/clone.c:859
+#: builtin/clone.c:873
 #, c-format
 msgid "Cloning into '%s'...\n"
 msgstr "Клониране и създаване на хранилище в „%s“…\n"
 
-#: builtin/clone.c:895
+#: builtin/clone.c:898
+msgid "--dissociate given, but there is no --reference"
+msgstr "Опцията „--dissociate“ е несъвместима с „--reference“"
+
+#: builtin/clone.c:913
 msgid "--depth is ignored in local clones; use file:// instead."
 msgstr ""
 "При локално клониране опцията „--depth“ се игнорира. Ползвайте схемата "
 "„file://“."
 
-#: builtin/clone.c:898
+#: builtin/clone.c:916
 msgid "source repository is shallow, ignoring --local"
 msgstr "клонираното хранилище е плитко, затова опцията „--local“ се игнорира"
 
-#: builtin/clone.c:903
+#: builtin/clone.c:921
 msgid "--local is ignored"
 msgstr "опцията „--local“ се игнорира"
 
-#: builtin/clone.c:907
+#: builtin/clone.c:925
 #, c-format
 msgid "Don't know how to clone %s"
 msgstr "Не се поддържа клониране на връзки от вида „%s“ "
 
-#: builtin/clone.c:958 builtin/clone.c:966
+#: builtin/clone.c:976 builtin/clone.c:984
 #, c-format
 msgid "Remote branch %s not found in upstream %s"
 msgstr "Отдалеченият клон „%s“ липсва в клонираното хранилище „%s“"
 
-#: builtin/clone.c:969
+#: builtin/clone.c:987
 msgid "You appear to have cloned an empty repository."
 msgstr "Изглежда клонирахте празно хранилище."
 
 #: builtin/column.c:9
-msgid "git column [options]"
+msgid "git column [<options>]"
 msgstr "git column [ОПЦИЯ…]"
 
 #: builtin/column.c:26
 msgid "lookup config vars"
 msgstr "извеждане на настройките"
 
@@ -4357,17 +4402,17 @@
 
 #: builtin/column.c:51
 msgid "--command must be the first argument"
 msgstr "опцията „--command“ трябва да е първият аргумент"
 
 #: builtin/commit.c:37
-msgid "git commit [options] [--] <pathspec>..."
+msgid "git commit [<options>] [--] <pathspec>..."
 msgstr "git commit [ОПЦИЯ…] [--] ПЪТ…"
 
 #: builtin/commit.c:42
-msgid "git status [options] [--] <pathspec>..."
+msgid "git status [<options>] [--] <pathspec>..."
 msgstr "git status [ОПЦИЯ…] [--] ПЪТ…"
 
 #: builtin/commit.c:47
 msgid ""
 "Your name and email address were configured automatically based\n"
 "on your username and hostname. Please check that they are accurate.\n"
@@ -4464,126 +4509,121 @@
 "\n"
 "    git reset\n"
 "\n"
 "Чрез командата „git cherry-pick --continue“ ще продължите отбирането на\n"
 "останалите подавания.\n"
 
-#: builtin/commit.c:302
+#: builtin/commit.c:304
 msgid "failed to unpack HEAD tree object"
 msgstr "върховото дърво (HEAD tree object) не може да бъде извадено от пакет"
 
-#: builtin/commit.c:342
+#: builtin/commit.c:344
 msgid "unable to create temporary index"
 msgstr "временният индекс не може да бъде създаден"
 
-#: builtin/commit.c:348
+#: builtin/commit.c:350
 msgid "interactive add failed"
 msgstr "неуспешно интерактивно добавяне"
 
-#: builtin/commit.c:359
+#: builtin/commit.c:361
 msgid "unable to write index file"
 msgstr "индексът не може да бъде записан"
 
-#: builtin/commit.c:361
+#: builtin/commit.c:363
 msgid "unable to update temporary index"
 msgstr "временният индекс не може да бъде обновен"
 
-#: builtin/commit.c:363
+#: builtin/commit.c:365
 msgid "Failed to update main cache tree"
 msgstr "Дървото на основния кеш не може да бъде обновено"
 
-#: builtin/commit.c:387 builtin/commit.c:412 builtin/commit.c:461
+#: builtin/commit.c:389 builtin/commit.c:414 builtin/commit.c:463
 msgid "unable to write new_index file"
 msgstr "новият индекс не може да бъде записан"
 
-#: builtin/commit.c:443
+#: builtin/commit.c:445
 msgid "cannot do a partial commit during a merge."
 msgstr "по време на сливане не може да се извърши частично подаване."
 
-#: builtin/commit.c:445
+#: builtin/commit.c:447
 msgid "cannot do a partial commit during a cherry-pick."
 msgstr "по време на отбиране не може да се извърши частично подаване."
 
-#: builtin/commit.c:454
+#: builtin/commit.c:456
 msgid "cannot read the index"
 msgstr "индексът не може да бъде прочетен"
 
-#: builtin/commit.c:473
+#: builtin/commit.c:475
 msgid "unable to write temporary index file"
 msgstr "временният индекс не може да бъде записан"
 
-#: builtin/commit.c:592
+#: builtin/commit.c:580
 #, c-format
 msgid "commit '%s' lacks author header"
 msgstr "заглавната част за автор в подаването „%s“ липсва"
 
-#: builtin/commit.c:594
+#: builtin/commit.c:582
 #, c-format
 msgid "commit '%s' has malformed author line"
 msgstr "заглавната част за автор в подаването „%s“ е неправилна"
 
-#: builtin/commit.c:613
+#: builtin/commit.c:601
 msgid "malformed --author parameter"
 msgstr "неправилен параметър към опцията „--author“"
 
-#: builtin/commit.c:621
+#: builtin/commit.c:609
 #, c-format
 msgid "invalid date format: %s"
 msgstr "неправилен формат на дата: %s"
 
-#: builtin/commit.c:642
-#, c-format
-msgid "Malformed ident string: '%s'"
-msgstr "Неправилен низ за идентичност: „%s“"
-
-#: builtin/commit.c:675
+#: builtin/commit.c:653
 msgid ""
 "unable to select a comment character that is not used\n"
 "in the current commit message"
 msgstr ""
 "не може да се избере знак за коментар — в текущото съобщение за подаване са "
 "използвани всички подобни знаци"
 
-#: builtin/commit.c:712 builtin/commit.c:745 builtin/commit.c:1120
+#: builtin/commit.c:690 builtin/commit.c:723 builtin/commit.c:1080
 #, c-format
 msgid "could not lookup commit %s"
 msgstr "следното подаване не може да бъде открито: %s"
 
-#: builtin/commit.c:724 builtin/shortlog.c:273
+#: builtin/commit.c:702 builtin/shortlog.c:273
 #, c-format
 msgid "(reading log message from standard input)\n"
 msgstr "(изчитане на съобщението за подаване от стандартния вход)\n"
 
-#: builtin/commit.c:726
+#: builtin/commit.c:704
 msgid "could not read log from standard input"
 msgstr "съобщението за подаване не бе прочетено стандартния вход"
 
-#: builtin/commit.c:730
+#: builtin/commit.c:708
 #, c-format
 msgid "could not read log file '%s'"
 msgstr "файлът със съобщението за подаване „%s“ не може да бъде прочетен"
 
-#: builtin/commit.c:752
+#: builtin/commit.c:730
 msgid "could not read MERGE_MSG"
 msgstr "съобщението за сливане MERGE_MSG не може да бъде прочетено"
 
-#: builtin/commit.c:756
+#: builtin/commit.c:734
 msgid "could not read SQUASH_MSG"
 msgstr "съобщението за смачкване SQUASH_MSG не може да бъде прочетено"
 
-#: builtin/commit.c:760
+#: builtin/commit.c:738
 #, c-format
 msgid "could not read '%s'"
 msgstr "файлът „%s“ не може да бъде прочетен"
 
-#: builtin/commit.c:831
+#: builtin/commit.c:785
 msgid "could not write commit template"
 msgstr "шаблонът за подаване не може да бъде запазен"
 
 # FIXME
-#: builtin/commit.c:849
+#: builtin/commit.c:803
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a merge.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
@@ -4593,13 +4633,13 @@
 "Изглежда, че подавате сливане. Ако това не е така, изтрийте файла:\n"
 "\n"
 "  %s\n"
 "и опитайте отново.\n"
 
 # FIXME
-#: builtin/commit.c:854
+#: builtin/commit.c:808
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a cherry-pick.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
@@ -4609,410 +4649,412 @@
 "Изглежда, че извършвате отбрано подаване. Ако това не е така, изтрийте "
 "файла:\n"
 "\n"
 "  %s\n"
 "и опитайте отново.\n"
 
-#: builtin/commit.c:867
+#: builtin/commit.c:821
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be ignored, and an empty message aborts the commit.\n"
 msgstr ""
 "Въведете съобщението за подаване на промените. Редовете, които започват\n"
 "с „%c“, ще бъдат пропуснати, а празно съобщение преустановява подаването.\n"
 
-#: builtin/commit.c:874
+#: builtin/commit.c:828
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be kept; you may remove them yourself if you want to.\n"
 "An empty message aborts the commit.\n"
 msgstr ""
 "Въведете съобщението за подаване на промените. Редовете, които започват\n"
 "с „%c“, също ще бъдат включени — може да ги изтриете вие. Празно \n"
 "съобщение преустановява подаването.\n"
 
-#: builtin/commit.c:888
+#: builtin/commit.c:848
 #, c-format
 msgid "%sAuthor:    %.*s <%.*s>"
 msgstr "%sАвтор:   %.*s <%.*s>"
 
-#: builtin/commit.c:896
+#: builtin/commit.c:856
 #, c-format
 msgid "%sDate:      %s"
 msgstr "%sДата:    %s"
 
-#: builtin/commit.c:903
+#: builtin/commit.c:863
 #, c-format
 msgid "%sCommitter: %.*s <%.*s>"
 msgstr "%sПодаващ: %.*s <%.*s>"
 
-#: builtin/commit.c:921
+#: builtin/commit.c:881
 msgid "Cannot read index"
 msgstr "Индексът не може да бъде прочетен"
 
-#: builtin/commit.c:978
+#: builtin/commit.c:938
 msgid "Error building trees"
 msgstr "Грешка при изграждане на дърветата"
 
-#: builtin/commit.c:993 builtin/tag.c:495
+#: builtin/commit.c:953 builtin/tag.c:495
 #, c-format
 msgid "Please supply the message using either -m or -F option.\n"
 msgstr "Подайте съобщението с някоя от опциите „-m“ или „-F“.\n"
 
-#: builtin/commit.c:1095
+#: builtin/commit.c:1055
 #, c-format
-msgid "No existing author found with '%s'"
-msgstr "Не е открит автор с име „%s“."
+msgid "--author '%s' is not 'Name <email>' and matches no existing author"
+msgstr ""
+"Опцията „--author '%s'“ не отговаря на форма̀та „Име <е-поща>“ и не съвпада с "
+"никой автор"
 
-#: builtin/commit.c:1110 builtin/commit.c:1350
+#: builtin/commit.c:1070 builtin/commit.c:1310
 #, c-format
 msgid "Invalid untracked files mode '%s'"
 msgstr "Неправилна стойност за неследените файлове: „%s“"
 
-#: builtin/commit.c:1147
+#: builtin/commit.c:1107
 msgid "--long and -z are incompatible"
 msgstr "Опциите „--long“ и „-z“ са несъвместими."
 
-#: builtin/commit.c:1177
+#: builtin/commit.c:1137
 msgid "Using both --reset-author and --author does not make sense"
 msgstr "Опциите „--reset-author“ и „--author“ са несъвместими."
 
-#: builtin/commit.c:1186
+#: builtin/commit.c:1146
 msgid "You have nothing to amend."
 msgstr "Няма какво да бъде поправено."
 
-#: builtin/commit.c:1189
+#: builtin/commit.c:1149
 msgid "You are in the middle of a merge -- cannot amend."
 msgstr "В момента се извършва сливане, не можете да поправяте."
 
-#: builtin/commit.c:1191
+#: builtin/commit.c:1151
 msgid "You are in the middle of a cherry-pick -- cannot amend."
 msgstr "В момента се извършва отбиране на подаване, не можете да поправяте."
 
-#: builtin/commit.c:1194
+#: builtin/commit.c:1154
 msgid "Options --squash and --fixup cannot be used together"
 msgstr "Опциите „--squash“ и „--fixup“ са несъвместими."
 
-#: builtin/commit.c:1204
+#: builtin/commit.c:1164
 msgid "Only one of -c/-C/-F/--fixup can be used."
 msgstr "Опциите „-c“, „-C“, „-F“ и „--fixup““ са несъвместими."
 
-#: builtin/commit.c:1206
+#: builtin/commit.c:1166
 msgid "Option -m cannot be combined with -c/-C/-F/--fixup."
 msgstr "Опцията „-m“ е несъвместима с „-c“, „-C“, „-F“ и „--fixup“."
 
-#: builtin/commit.c:1214
+#: builtin/commit.c:1174
 msgid "--reset-author can be used only with -C, -c or --amend."
 msgstr ""
 "Опцията „--reset-author“ може да се използва само заедно с „-C“, „-c“ или\n"
 "„--amend“."
 
-#: builtin/commit.c:1231
+#: builtin/commit.c:1191
 msgid "Only one of --include/--only/--all/--interactive/--patch can be used."
 msgstr ""
 "Опциите „--include“, „--only“, „--all“, „--interactive“ и „--patch“ са\n"
 "несъвместими."
 
-#: builtin/commit.c:1233
+#: builtin/commit.c:1193
 msgid "No paths with --include/--only does not make sense."
 msgstr "Опциите „--include“ и „--only“ изискват аргументи."
 
 # FIXME bad message
-#: builtin/commit.c:1235
+#: builtin/commit.c:1195
 msgid "Clever... amending the last one with dirty index."
 msgstr ""
 "Чудесно сте се сетили как да поправите съобщението на последното подаване "
 "при\n"
 "променен индекс. Споделете и с друг потребител трика с „git commit --amend -"
 "o“."
 
-#: builtin/commit.c:1237
+#: builtin/commit.c:1197
 msgid "Explicit paths specified without -i or -o; assuming --only paths..."
 msgstr ""
 "Зададени са изрични пътища без опциите „-i“ или „-o“. Приема се, че все едно "
 "сте\n"
 "ползвали опцията „--only“ с ПЪТища…"
 
-#: builtin/commit.c:1249 builtin/tag.c:728
+#: builtin/commit.c:1209 builtin/tag.c:728
 #, c-format
 msgid "Invalid cleanup mode %s"
 msgstr "Несъществуващ режим на изчистване „%s“"
 
-#: builtin/commit.c:1254
+#: builtin/commit.c:1214
 msgid "Paths with -a does not make sense."
 msgstr "Опцията „-a“ е несъвместима със задаването на пътища."
 
-#: builtin/commit.c:1364 builtin/commit.c:1644
+#: builtin/commit.c:1324 builtin/commit.c:1604
 msgid "show status concisely"
 msgstr "кратка информация за състоянието"
 
-#: builtin/commit.c:1366 builtin/commit.c:1646
+#: builtin/commit.c:1326 builtin/commit.c:1606
 msgid "show branch information"
 msgstr "информация за клоните"
 
-#: builtin/commit.c:1368 builtin/commit.c:1648 builtin/push.c:500
+#: builtin/commit.c:1328 builtin/commit.c:1608 builtin/push.c:509
 msgid "machine-readable output"
 msgstr "формат на изхода за четене от програма"
 
-#: builtin/commit.c:1371 builtin/commit.c:1650
+#: builtin/commit.c:1331 builtin/commit.c:1610
 msgid "show status in long format (default)"
 msgstr "подробна информация за състоянието (стандартно)"
 
-#: builtin/commit.c:1374 builtin/commit.c:1653
+#: builtin/commit.c:1334 builtin/commit.c:1613
 msgid "terminate entries with NUL"
 msgstr "разделяне на елементите с нулевия знак „NUL“"
 
-#: builtin/commit.c:1376 builtin/commit.c:1656 builtin/fast-export.c:980
+#: builtin/commit.c:1336 builtin/commit.c:1616 builtin/fast-export.c:980
 #: builtin/fast-export.c:983 builtin/tag.c:603
 msgid "mode"
 msgstr "режим"
 
-#: builtin/commit.c:1377 builtin/commit.c:1656
+#: builtin/commit.c:1337 builtin/commit.c:1616
 msgid "show untracked files, optional modes: all, normal, no. (Default: all)"
 msgstr ""
 "извеждане на неследените файлове. Възможните режими са „all“ (подробна\n"
 "информация), „normal“ (кратка информация), „no“ (без неследените файлове).\n"
 "Стандартният режим е: „all“."
 
-#: builtin/commit.c:1380
+#: builtin/commit.c:1340
 msgid "show ignored files"
 msgstr "извеждане на игнорираните файлове"
 
-#: builtin/commit.c:1381 parse-options.h:153
+#: builtin/commit.c:1341 parse-options.h:153
 msgid "when"
 msgstr "кога"
 
-#: builtin/commit.c:1382
+#: builtin/commit.c:1342
 msgid ""
 "ignore changes to submodules, optional when: all, dirty, untracked. "
 "(Default: all)"
 msgstr ""
 "игнориране на промените в подмодулите. Опция с незадължителна стойност — "
 "една от\n"
 "„all“ (всички), „dirty“ (тези с неподадени промени), „untracked“ (неследени)"
 
-#: builtin/commit.c:1384
+#: builtin/commit.c:1344
 msgid "list untracked files in columns"
 msgstr "извеждане на неследените файлове в колони"
 
-#: builtin/commit.c:1471
+#: builtin/commit.c:1431
 msgid "couldn't look up newly created commit"
 msgstr "току що създаденото подаване не може да бъде открито"
 
-#: builtin/commit.c:1473
+#: builtin/commit.c:1433
 msgid "could not parse newly created commit"
 msgstr "току що създаденото подаване не може да бъде анализирано"
 
-#: builtin/commit.c:1518
+#: builtin/commit.c:1478
 msgid "detached HEAD"
 msgstr "несвързан връх „HEAD“"
 
-#: builtin/commit.c:1521
+#: builtin/commit.c:1481
 msgid " (root-commit)"
 msgstr " (начално подаване)"
 
-#: builtin/commit.c:1614
+#: builtin/commit.c:1574
 msgid "suppress summary after successful commit"
 msgstr "без информация след успешно подаване"
 
-#: builtin/commit.c:1615
+#: builtin/commit.c:1575
 msgid "show diff in commit message template"
 msgstr "добавяне на разликата към шаблона за съобщението при подаване"
 
-#: builtin/commit.c:1617
+#: builtin/commit.c:1577
 msgid "Commit message options"
 msgstr "Опции за съобщението при подаване"
 
-#: builtin/commit.c:1618 builtin/tag.c:601
+#: builtin/commit.c:1578 builtin/tag.c:601
 msgid "read message from file"
 msgstr "взимане на съобщението от файл"
 
-#: builtin/commit.c:1619
+#: builtin/commit.c:1579
 msgid "author"
 msgstr "автор"
 
-#: builtin/commit.c:1619
+#: builtin/commit.c:1579
 msgid "override author for commit"
 msgstr "задаване на автор за подаването"
 
-#: builtin/commit.c:1620 builtin/gc.c:275
+#: builtin/commit.c:1580 builtin/gc.c:275
 msgid "date"
 msgstr "дата"
 
-#: builtin/commit.c:1620
+#: builtin/commit.c:1580
 msgid "override date for commit"
 msgstr "задаване на дата за подаването"
 
-#: builtin/commit.c:1621 builtin/merge.c:217 builtin/notes.c:408
-#: builtin/notes.c:565 builtin/tag.c:599
+#: builtin/commit.c:1581 builtin/merge.c:218 builtin/notes.c:391
+#: builtin/notes.c:554 builtin/tag.c:599
 msgid "message"
 msgstr "съобщение"
 
-#: builtin/commit.c:1621
+#: builtin/commit.c:1581
 msgid "commit message"
 msgstr "съобщение при подаване"
 
-#: builtin/commit.c:1622
+#: builtin/commit.c:1582
 msgid "reuse and edit message from specified commit"
 msgstr "преизползване и редактиране на съобщението от указаното подаване"
 
-#: builtin/commit.c:1623
+#: builtin/commit.c:1583
 msgid "reuse message from specified commit"
 msgstr "преизползване на съобщението от указаното подаване"
 
-#: builtin/commit.c:1624
+#: builtin/commit.c:1584
 msgid "use autosquash formatted message to fixup specified commit"
 msgstr ""
 "използване на автоматичното съобщение при смачкване за вкарване на "
 "указаното\n"
 "подаване в предното без следа"
 
-#: builtin/commit.c:1625
+#: builtin/commit.c:1585
 msgid "use autosquash formatted message to squash specified commit"
 msgstr ""
 "използване на автоматичното съобщение при смачкване за смачкване на "
 "указаното\n"
 "подаване в предното"
 
-#: builtin/commit.c:1626
+#: builtin/commit.c:1586
 msgid "the commit is authored by me now (used with -C/-c/--amend)"
 msgstr ""
 "смяна на автора да съвпада с подаващия (използва се с „-C“/„-c“/„--amend“)"
 
-#: builtin/commit.c:1627 builtin/log.c:1191 builtin/revert.c:86
+#: builtin/commit.c:1587 builtin/log.c:1191 builtin/revert.c:86
 msgid "add Signed-off-by:"
 msgstr "добавяне на поле за подпис — „Signed-off-by:“"
 
-#: builtin/commit.c:1628
+#: builtin/commit.c:1588
 msgid "use specified template file"
 msgstr "използване на указания шаблонен файл"
 
-#: builtin/commit.c:1629
+#: builtin/commit.c:1589
 msgid "force edit of commit"
 msgstr "редактиране на подаване"
 
-#: builtin/commit.c:1630
+#: builtin/commit.c:1590
 msgid "default"
 msgstr "стандартно"
 
-#: builtin/commit.c:1630 builtin/tag.c:604
+#: builtin/commit.c:1590 builtin/tag.c:604
 msgid "how to strip spaces and #comments from message"
 msgstr "кои празни знаци и #коментари да се махат от съобщенията"
 
-#: builtin/commit.c:1631
+#: builtin/commit.c:1591
 msgid "include status in commit message template"
 msgstr "вмъкване на състоянието в шаблона за съобщението при подаване"
 
-#: builtin/commit.c:1632 builtin/merge.c:224 builtin/revert.c:92
+#: builtin/commit.c:1592 builtin/merge.c:225 builtin/revert.c:92
 #: builtin/tag.c:605
 msgid "key-id"
 msgstr "ИДЕНТИФИКАТОР_НА_КЛЮЧ"
 
-#: builtin/commit.c:1633 builtin/merge.c:225 builtin/revert.c:93
+#: builtin/commit.c:1593 builtin/merge.c:226 builtin/revert.c:93
 msgid "GPG sign commit"
 msgstr "подписване на подаването с GPG"
 
-#: builtin/commit.c:1636
+#: builtin/commit.c:1596
 msgid "Commit contents options"
 msgstr "Опции за избор на файлове при подаване"
 
-#: builtin/commit.c:1637
+#: builtin/commit.c:1597
 msgid "commit all changed files"
 msgstr "подаване на всички променени файлове"
 
-#: builtin/commit.c:1638
+#: builtin/commit.c:1598
 msgid "add specified files to index for commit"
 msgstr "добавяне на указаните файлове към индекса за подаване"
 
-#: builtin/commit.c:1639
+#: builtin/commit.c:1599
 msgid "interactively add files"
 msgstr "интерактивно добавяне на файлове"
 
-#: builtin/commit.c:1640
+#: builtin/commit.c:1600
 msgid "interactively add changes"
 msgstr "интерактивно добавяне на промени"
 
-#: builtin/commit.c:1641
+#: builtin/commit.c:1601
 msgid "commit only specified files"
 msgstr "подаване само на указаните файлове"
 
-#: builtin/commit.c:1642
+#: builtin/commit.c:1602
 msgid "bypass pre-commit hook"
 msgstr "без изпълнение на куката преди подаване (pre-commit)"
 
-#: builtin/commit.c:1643
+#: builtin/commit.c:1603
 msgid "show what would be committed"
 msgstr "отпечатване на това, което би било подадено"
 
-#: builtin/commit.c:1654
+#: builtin/commit.c:1614
 msgid "amend previous commit"
 msgstr "поправяне на предишното подаване"
 
-#: builtin/commit.c:1655
+#: builtin/commit.c:1615
 msgid "bypass post-rewrite hook"
 msgstr "без изпълнение на куката след презаписване (post-rewrite)"
 
-#: builtin/commit.c:1660
+#: builtin/commit.c:1620
 msgid "ok to record an empty change"
 msgstr "позволяване на празни подавания"
 
-#: builtin/commit.c:1662
+#: builtin/commit.c:1622
 msgid "ok to record a change with an empty message"
 msgstr "позволяване на подавания с празни съобщения"
 
-#: builtin/commit.c:1691
+#: builtin/commit.c:1651
 msgid "could not parse HEAD commit"
 msgstr "върховото подаване „HEAD“ не може да бъде прочетено"
 
-#: builtin/commit.c:1730 builtin/merge.c:518
+#: builtin/commit.c:1690 builtin/merge.c:519
 #, c-format
 msgid "could not open '%s' for reading"
 msgstr "файлът не може да бъде прочетен: „%s“"
 
-#: builtin/commit.c:1737
+#: builtin/commit.c:1697
 #, c-format
 msgid "Corrupt MERGE_HEAD file (%s)"
 msgstr "Повреден файл за върха за сливането „MERGE_HEAD“ (%s)"
 
-#: builtin/commit.c:1744
+#: builtin/commit.c:1704
 msgid "could not read MERGE_MODE"
 msgstr "режимът на сливане „MERGE_MODE“ не може да бъде прочетен"
 
-#: builtin/commit.c:1763
+#: builtin/commit.c:1723
 #, c-format
 msgid "could not read commit message: %s"
 msgstr "съобщението за подаване не може да бъде прочетено: %s"
 
-#: builtin/commit.c:1774
+#: builtin/commit.c:1734
 #, c-format
 msgid "Aborting commit; you did not edit the message.\n"
 msgstr "Неизвършване на подаване поради нередактирано съобщение.\n"
 
-#: builtin/commit.c:1779
+#: builtin/commit.c:1739
 #, c-format
 msgid "Aborting commit due to empty commit message.\n"
 msgstr "Неизвършване на подаване поради празно съобщение.\n"
 
-#: builtin/commit.c:1794 builtin/merge.c:850 builtin/merge.c:875
+#: builtin/commit.c:1754 builtin/merge.c:851 builtin/merge.c:876
 msgid "failed to write commit object"
 msgstr "обектът за подаването не може да бъде записан"
 
-#: builtin/commit.c:1827
+#: builtin/commit.c:1787
 msgid ""
 "Repository has been updated, but unable to write\n"
 "new_index file. Check that disk is not full and quota is\n"
 "not exceeded, and then \"git reset HEAD\" to recover."
 msgstr ""
 "Хранилището е обновено, но новият файл за индекс „new_index“\n"
 "не е записан. Проверете дали дискът не е препълнен или не сте\n"
 "превишили дисковата си квота. След това изпълнете „git reset HEAD“."
 
 #: builtin/config.c:8
-msgid "git config [options]"
+msgid "git config [<options>]"
 msgstr "git config [ОПЦИЯ…]"
 
 #: builtin/config.c:53
 msgid "Config file location"
 msgstr "Местоположение на конфигурационния файл"
 
@@ -5094,23 +5136,19 @@
 msgstr "изброяване на всички"
 
 #: builtin/config.c:71
 msgid "open an editor"
 msgstr "отваряне на редактор"
 
-#: builtin/config.c:72 builtin/config.c:73
-msgid "slot"
-msgstr "настройка"
-
 #: builtin/config.c:72
-msgid "find the color configured: [default]"
-msgstr "извеждане на зададения цвят: [стандартно]"
+msgid "find the color configured: slot [default]"
+msgstr "извеждане на зададения цвят: номер [стандартно]"
 
 #: builtin/config.c:73
-msgid "find the color setting: [stdout-is-tty]"
-msgstr "извеждане на зададения цвят: [стандартният изход е терминал]"
+msgid "find the color setting: slot [stdout-is-tty]"
+msgstr "извеждане на зададения цвят: номер [стандартният изход е терминал]"
 
 #: builtin/config.c:74
 msgid "Type"
 msgstr "Вид"
 
 #: builtin/config.c:75
@@ -5139,17 +5177,17 @@
 msgstr "разделяне на стойностите с нулевия знак „NUL“"
 
 #: builtin/config.c:81
 msgid "respect include directives on lookup"
 msgstr "при търсене да се уважат и директивите за включване"
 
-#: builtin/config.c:315
+#: builtin/config.c:316
 msgid "unable to parse default color value"
 msgstr "неразпозната стойност на стандартния цвят"
 
-#: builtin/config.c:455
+#: builtin/config.c:457
 #, c-format
 msgid ""
 "# This is Git's per-user configuration file.\n"
 "[core]\n"
 "# Please adapt and uncomment the following lines:\n"
 "#\tuser = %s\n"
@@ -5158,13 +5196,13 @@
 "# Това е потребителският ви конфигурационен файл за Git.\n"
 "[core]\n"
 "# Проверете и разкоментирайте следните два реда:\n"
 "#\tuser = %s\n"
 "#\temail = %s\n"
 
-#: builtin/config.c:590
+#: builtin/config.c:589
 #, c-format
 msgid "cannot create configuration file %s"
 msgstr "конфигурационният файл „%s“ не може да бъде създаден"
 
 #: builtin/count-objects.c:55
 msgid "git count-objects [-v] [-H | --human-readable]"
@@ -5173,17 +5211,17 @@
 #: builtin/count-objects.c:65
 msgid "print sizes in human readable format"
 msgstr "извеждане на размерите на обектите във формат лесно четим от хора"
 
 # FIXME ... instead of *???
 #: builtin/describe.c:17
-msgid "git describe [options] <commit-ish>*"
+msgid "git describe [<options>] [<commit-ish>...]"
 msgstr "git describe [ОПЦИЯ…] УКАЗАТЕЛ_КЪМ_ПОДАВАНЕ…"
 
 #: builtin/describe.c:18
-msgid "git describe [options] --dirty"
+msgid "git describe [<options>] --dirty"
 msgstr "git describe [ОПЦИЯ…] --dirty"
 
 #: builtin/describe.c:217
 #, c-format
 msgid "annotated tag %s not available"
 msgstr "не съществува анотиран етикет „%s“"
@@ -5396,368 +5434,370 @@
 msgstr "Прилагане на указателя на версия към изнесените указатели"
 
 #: builtin/fast-export.c:999
 msgid "anonymize output"
 msgstr "анонимизиране на извежданата информация"
 
-#: builtin/fetch.c:20
+#: builtin/fetch.c:19
 msgid "git fetch [<options>] [<repository> [<refspec>...]]"
 msgstr "git fetch [ОПЦИЯ…] [ХРАНИЛИЩЕ [УКАЗАТЕЛ…]]"
 
-#: builtin/fetch.c:21
+#: builtin/fetch.c:20
 msgid "git fetch [<options>] <group>"
 msgstr "git fetch [ОПЦИЯ…] ГРУПА"
 
-#: builtin/fetch.c:22
+#: builtin/fetch.c:21
 msgid "git fetch --multiple [<options>] [(<repository> | <group>)...]"
 msgstr "git fetch --multiple [ОПЦИЯ…] [(ХРАНИЛИЩЕ | ГРУПА)…]"
 
-#: builtin/fetch.c:23
+#: builtin/fetch.c:22
 msgid "git fetch --all [<options>]"
 msgstr "git fetch --all [ОПЦИЯ…]"
 
-#: builtin/fetch.c:90
+#: builtin/fetch.c:89
 msgid "fetch from all remotes"
 msgstr "доставяне от всички отдалечени хранилища"
 
-#: builtin/fetch.c:92
+#: builtin/fetch.c:91
 msgid "append to .git/FETCH_HEAD instead of overwriting"
 msgstr "добавяне към „.git/FETCH_HEAD“ вместо замяна"
 
-#: builtin/fetch.c:94
+#: builtin/fetch.c:93
 msgid "path to upload pack on remote end"
 msgstr "отдалечен път, където да се качи пакетът"
 
-#: builtin/fetch.c:95
+#: builtin/fetch.c:94
 msgid "force overwrite of local branch"
 msgstr "принудително презаписване на локалния клон"
 
-#: builtin/fetch.c:97
+#: builtin/fetch.c:96
 msgid "fetch from multiple remotes"
 msgstr "доставяне от множество отдалечени хранилища"
 
-#: builtin/fetch.c:99
+#: builtin/fetch.c:98
 msgid "fetch all tags and associated objects"
 msgstr "доставяне на всички етикети и принадлежащи обекти"
 
-#: builtin/fetch.c:101
+#: builtin/fetch.c:100
 msgid "do not fetch all tags (--no-tags)"
 msgstr "без доставянето на всички етикети „--no-tags“"
 
-#: builtin/fetch.c:103
+#: builtin/fetch.c:102
 msgid "prune remote-tracking branches no longer on remote"
 msgstr "окастряне на клоните следящи вече несъществуващи отдалечени клони"
 
-#: builtin/fetch.c:104
+#: builtin/fetch.c:103
 msgid "on-demand"
 msgstr "при нужда"
 
-#: builtin/fetch.c:105
+#: builtin/fetch.c:104
 msgid "control recursive fetching of submodules"
 msgstr "управление на рекурсивното доставяне на подмодулите"
 
-#: builtin/fetch.c:109
+#: builtin/fetch.c:108
 msgid "keep downloaded pack"
 msgstr "запазване на изтеглените пакети с обекти"
 
-#: builtin/fetch.c:111
+#: builtin/fetch.c:110
 msgid "allow updating of HEAD ref"
 msgstr "позволяване на обновяването на указателя „HEAD“"
 
-#: builtin/fetch.c:114
+#: builtin/fetch.c:113
 msgid "deepen history of shallow clone"
 msgstr "задълбочаване на историята на плитко хранилище"
 
-#: builtin/fetch.c:116
+#: builtin/fetch.c:115
 msgid "convert to a complete repository"
 msgstr "превръщане в пълно хранилище"
 
-#: builtin/fetch.c:118 builtin/log.c:1208
+#: builtin/fetch.c:117 builtin/log.c:1208
 msgid "dir"
 msgstr "директория"
 
-#: builtin/fetch.c:119
+#: builtin/fetch.c:118
 msgid "prepend this to submodule path output"
 msgstr "добавяне на това пред пътя на подмодула"
 
-#: builtin/fetch.c:122
+#: builtin/fetch.c:121
 msgid "default mode for recursion"
 msgstr "стандартен режим на рекурсия"
 
-#: builtin/fetch.c:124
+#: builtin/fetch.c:123
 msgid "accept refs that update .git/shallow"
 msgstr "приемане на указатели, които обновяват „.git/shallow“"
 
-#: builtin/fetch.c:125
+#: builtin/fetch.c:124
 msgid "refmap"
 msgstr "карта с указатели"
 
-#: builtin/fetch.c:126
+#: builtin/fetch.c:125
 msgid "specify fetch refmap"
 msgstr "указване на картата с указатели за доставяне"
 
-#: builtin/fetch.c:376
+#: builtin/fetch.c:375
 msgid "Couldn't find remote ref HEAD"
 msgstr "Указателят „HEAD“ в отдалеченото хранилище не може да бъде открит"
 
-#: builtin/fetch.c:454
+#: builtin/fetch.c:455
 #, c-format
 msgid "object %s not found"
 msgstr "обектът „%s“ липсва"
 
-#: builtin/fetch.c:459
+#: builtin/fetch.c:460
 msgid "[up to date]"
 msgstr "[актуализиран]"
 
-#: builtin/fetch.c:473
+#: builtin/fetch.c:474
 #, c-format
 msgid "! %-*s %-*s -> %s  (can't fetch in current branch)"
 msgstr "! %-*s %-*s → %s  (в текущия клон не може да се доставя)"
 
-#: builtin/fetch.c:474 builtin/fetch.c:560
+#: builtin/fetch.c:475 builtin/fetch.c:561
 msgid "[rejected]"
 msgstr "[отхвърлен]"
 
-#: builtin/fetch.c:485
+#: builtin/fetch.c:486
 msgid "[tag update]"
 msgstr "[обновяване на етикетите]"
 
-#: builtin/fetch.c:487 builtin/fetch.c:522 builtin/fetch.c:540
+#: builtin/fetch.c:488 builtin/fetch.c:523 builtin/fetch.c:541
 msgid "  (unable to update local ref)"
 msgstr "  (локалните указатели не могат да бъдат обновени)"
 
-#: builtin/fetch.c:505
+#: builtin/fetch.c:506
 msgid "[new tag]"
 msgstr "[нов етикет]"
 
-#: builtin/fetch.c:508
+#: builtin/fetch.c:509
 msgid "[new branch]"
 msgstr "[нов клон]"
 
-#: builtin/fetch.c:511
+#: builtin/fetch.c:512
 msgid "[new ref]"
 msgstr "[нов указател]"
 
-#: builtin/fetch.c:556
+#: builtin/fetch.c:557
 msgid "unable to update local ref"
 msgstr "локален указател не може да бъде обновен"
 
-#: builtin/fetch.c:556
+#: builtin/fetch.c:557
 msgid "forced update"
 msgstr "принудително обновяване"
 
-#: builtin/fetch.c:562
+#: builtin/fetch.c:563
 msgid "(non-fast-forward)"
 msgstr "(сливането не е тривиално)"
 
-#: builtin/fetch.c:595 builtin/fetch.c:828
+#: builtin/fetch.c:596 builtin/fetch.c:829
 #, c-format
 msgid "cannot open %s: %s\n"
 msgstr "файлът „%s“ не може да бъде отворен: %s\n"
 
-#: builtin/fetch.c:604
+#: builtin/fetch.c:605
 #, c-format
 msgid "%s did not send all necessary objects\n"
 msgstr "хранилището „%s“ не изпрати всички необходими обекти\n"
 
-#: builtin/fetch.c:622
+#: builtin/fetch.c:623
 #, c-format
 msgid "reject %s because shallow roots are not allowed to be updated"
 msgstr ""
 "отхвърляне на върха „%s“, защото плитките хранилища не могат да бъдат "
 "обновявани"
 
-#: builtin/fetch.c:710 builtin/fetch.c:793
+#: builtin/fetch.c:711 builtin/fetch.c:794
 #, c-format
 msgid "From %.*s\n"
 msgstr "От %.*s\n"
 
 # FIXME - is the space necessary
-#: builtin/fetch.c:721
+#: builtin/fetch.c:722
 #, c-format
 msgid ""
 "some local refs could not be updated; try running\n"
 " 'git remote prune %s' to remove any old, conflicting branches"
 msgstr ""
 "някои локални указатели не могат да бъдат обновени. Изпълнете командата\n"
 "„git remote prune %s“, за да премахнете остарелите клони, които\n"
 "предизвикват конфликта"
 
-#: builtin/fetch.c:773
+#: builtin/fetch.c:774
 #, c-format
 msgid "   (%s will become dangling)"
 msgstr "   (обектът „%s“ ще се окаже извън клон)"
 
-#: builtin/fetch.c:774
+#: builtin/fetch.c:775
 #, c-format
 msgid "   (%s has become dangling)"
 msgstr "   (обектът „%s“ вече е извън клон)"
 
-#: builtin/fetch.c:798
+#: builtin/fetch.c:799
 msgid "[deleted]"
 msgstr "[изтрит]"
 
-#: builtin/fetch.c:799 builtin/remote.c:1063
+#: builtin/fetch.c:800 builtin/remote.c:1060
 msgid "(none)"
 msgstr "(нищо)"
 
-#: builtin/fetch.c:818
+#: builtin/fetch.c:819
 #, c-format
 msgid "Refusing to fetch into current branch %s of non-bare repository"
 msgstr "Не може да изтегляте в текущия клон „%s“ на хранилище, което не е голо"
 
-#: builtin/fetch.c:837
+#: builtin/fetch.c:838
 #, c-format
 msgid "Option \"%s\" value \"%s\" is not valid for %s"
 msgstr "Стойността „%2$s“ за опцията „%1$s“ не е съвместима с „%3$s“"
 
-#: builtin/fetch.c:840
+#: builtin/fetch.c:841
 #, c-format
 msgid "Option \"%s\" is ignored for %s\n"
 msgstr "Опцията „%s“ се игнорира при „%s“\n"
 
-#: builtin/fetch.c:896
+#: builtin/fetch.c:897
 #, c-format
 msgid "Don't know how to fetch from %s"
 msgstr "Не се поддържа доставяне от „%s“"
 
-#: builtin/fetch.c:1058
+#: builtin/fetch.c:1059
 #, c-format
 msgid "Fetching %s\n"
 msgstr "Доставяне на „%s“\n"
 
-#: builtin/fetch.c:1060 builtin/remote.c:90
+#: builtin/fetch.c:1061 builtin/remote.c:90
 #, c-format
 msgid "Could not fetch %s"
 msgstr "„%s“ не може да се достави"
 
-#: builtin/fetch.c:1078
+#: builtin/fetch.c:1079
 msgid ""
 "No remote repository specified.  Please, specify either a URL or a\n"
 "remote name from which new revisions should be fetched."
 msgstr ""
 "Не сте указали отдалечено хранилище. Задайте или адрес, или име\n"
 "на отдалечено хранилище, откъдето да се доставят новите версии."
 
-#: builtin/fetch.c:1101
+#: builtin/fetch.c:1102
 msgid "You need to specify a tag name."
 msgstr "Трябва да укажете име на етикет."
 
-#: builtin/fetch.c:1143
+#: builtin/fetch.c:1144
 msgid "--depth and --unshallow cannot be used together"
 msgstr "опциите „--depth“ и „--unshallow“ са несъвместими"
 
-#: builtin/fetch.c:1145
+#: builtin/fetch.c:1146
 msgid "--unshallow on a complete repository does not make sense"
 msgstr "не можете да използвате опцията „--unshallow“ върху пълно хранилище"
 
-#: builtin/fetch.c:1168
+#: builtin/fetch.c:1169
 msgid "fetch --all does not take a repository argument"
 msgstr "към „git fetch --all“ не можете да добавите аргумент — хранилище"
 
-#: builtin/fetch.c:1170
+#: builtin/fetch.c:1171
 msgid "fetch --all does not make sense with refspecs"
 msgstr ""
 "към „git fetch --all“ не можете да добавите аргумент — указател на версия"
 
-#: builtin/fetch.c:1181
+#: builtin/fetch.c:1182
 #, c-format
 msgid "No such remote or remote group: %s"
 msgstr "Няма нито отдалечено хранилище, нито група от хранилища на име „%s“"
 
-#: builtin/fetch.c:1189
+#: builtin/fetch.c:1190
 msgid "Fetching a group and specifying refspecs does not make sense"
 msgstr "Указването на група и указването на версия са несъвместими"
 
 #: builtin/fmt-merge-msg.c:13
-msgid "git fmt-merge-msg [-m <message>] [--log[=<n>]|--no-log] [--file <file>]"
-msgstr "git fmt-merge-msg [-m СЪОБЩЕНИЕ] [--log[=БРОЙ]|--no-log] [--file ФАЙЛ]"
+msgid ""
+"git fmt-merge-msg [-m <message>] [--log[=<n>] | --no-log] [--file <file>]"
+msgstr ""
+"git fmt-merge-msg [-m СЪОБЩЕНИЕ] [--log[=БРОЙ] | --no-log] [--file ФАЙЛ]"
 
-#: builtin/fmt-merge-msg.c:663 builtin/fmt-merge-msg.c:666 builtin/grep.c:698
-#: builtin/merge.c:197 builtin/repack.c:179 builtin/repack.c:183
-#: builtin/show-branch.c:654 builtin/show-ref.c:178 builtin/tag.c:590
+#: builtin/fmt-merge-msg.c:662 builtin/fmt-merge-msg.c:665 builtin/grep.c:698
+#: builtin/merge.c:198 builtin/repack.c:178 builtin/repack.c:182
+#: builtin/show-branch.c:657 builtin/show-ref.c:178 builtin/tag.c:590
 #: parse-options.h:132 parse-options.h:239
 msgid "n"
 msgstr "БРОЙ"
 
-#: builtin/fmt-merge-msg.c:664
+#: builtin/fmt-merge-msg.c:663
 msgid "populate log with at most <n> entries from shortlog"
 msgstr ""
 "вмъкване на журнал състоящ се от не повече от БРОЙ записа от съкратения "
 "журнал"
 
-#: builtin/fmt-merge-msg.c:667
+#: builtin/fmt-merge-msg.c:666
 msgid "alias for --log (deprecated)"
 msgstr "синоним на „--log“ (остаряло)"
 
-#: builtin/fmt-merge-msg.c:670
+#: builtin/fmt-merge-msg.c:669
 msgid "text"
 msgstr "ТЕКСТ"
 
-#: builtin/fmt-merge-msg.c:671
+#: builtin/fmt-merge-msg.c:670
 msgid "use <text> as start of message"
 msgstr "за начало на съобщението да се ползва ТЕКСТ"
 
-#: builtin/fmt-merge-msg.c:672
+#: builtin/fmt-merge-msg.c:671
 msgid "file to read from"
 msgstr "файл, от който да се чете"
 
-#: builtin/for-each-ref.c:676
+#: builtin/for-each-ref.c:675
 msgid "unable to parse format"
 msgstr "форматът не може да бъде анализиран"
 
-#: builtin/for-each-ref.c:1057
-msgid "git for-each-ref [options] [<pattern>]"
+#: builtin/for-each-ref.c:1063
+msgid "git for-each-ref [<options>] [<pattern>]"
 msgstr "git for-each-ref [ОПЦИЯ…] [ШАБЛОН]"
 
-#: builtin/for-each-ref.c:1072
+#: builtin/for-each-ref.c:1078
 msgid "quote placeholders suitably for shells"
 msgstr "цитиране подходящо за командни интерпретатори на обвивката"
 
-#: builtin/for-each-ref.c:1074
+#: builtin/for-each-ref.c:1080
 msgid "quote placeholders suitably for perl"
 msgstr "цитиране подходящо за perl"
 
-#: builtin/for-each-ref.c:1076
+#: builtin/for-each-ref.c:1082
 msgid "quote placeholders suitably for python"
 msgstr "цитиране подходящо за python"
 
-#: builtin/for-each-ref.c:1078
-msgid "quote placeholders suitably for tcl"
+#: builtin/for-each-ref.c:1084
+msgid "quote placeholders suitably for Tcl"
 msgstr "цитиране подходящо за tcl"
 
-#: builtin/for-each-ref.c:1081
+#: builtin/for-each-ref.c:1087
 msgid "show only <n> matched refs"
 msgstr "извеждане само на този БРОЙ напаснати указатели"
 
-#: builtin/for-each-ref.c:1082 builtin/replace.c:438
+#: builtin/for-each-ref.c:1088 builtin/replace.c:438
 msgid "format"
 msgstr "ФОРМАТ"
 
-#: builtin/for-each-ref.c:1082
+#: builtin/for-each-ref.c:1088
 msgid "format to use for the output"
 msgstr "ФОРМАТ за изхода"
 
-#: builtin/for-each-ref.c:1083
+#: builtin/for-each-ref.c:1089
 msgid "key"
 msgstr "ключ"
 
-#: builtin/for-each-ref.c:1084
+#: builtin/for-each-ref.c:1090
 msgid "field name to sort on"
 msgstr "име на полето, по което да е подредбата"
 
-#: builtin/fsck.c:147 builtin/prune.c:136
+#: builtin/fsck.c:147 builtin/prune.c:137
 msgid "Checking connectivity"
 msgstr "Проверка на връзката"
 
 #: builtin/fsck.c:540
 msgid "Checking object directories"
 msgstr "Проверка на директориите с обекти"
 
 #: builtin/fsck.c:603
-msgid "git fsck [options] [<object>...]"
+msgid "git fsck [<options>] [<object>...]"
 msgstr "git fsck [ОПЦИЯ…] [ОБЕКТ…]"
 
 #: builtin/fsck.c:609
 msgid "show unreachable objects"
 msgstr "показване на недостижимите обекти"
 
@@ -5801,13 +5841,13 @@
 #: builtin/fsck.c:669
 msgid "Checking objects"
 msgstr "Проверка на обектите"
 
 # FIXME plural with ...
 #: builtin/gc.c:24
-msgid "git gc [options]"
+msgid "git gc [<options>]"
 msgstr "git gc [ОПЦИЯ…]"
 
 #: builtin/gc.c:79
 #, c-format
 msgid "Invalid gc.pruneexpire: '%s'"
 msgstr "Неправилна стойност за настройката „gc.pruneexpire“: %s"
@@ -5868,13 +5908,13 @@
 msgstr ""
 "Има прекалено много недостижими, непакетирани обекти.\n"
 "Използвайте „git prune“, за да ги окастрите."
 
 # FIXME plural ... options
 #: builtin/grep.c:23
-msgid "git grep [options] [-e] <pattern> [<rev>...] [[--] <path>...]"
+msgid "git grep [<options>] [-e] <pattern> [<rev>...] [[--] <path>...]"
 msgstr "git grep [ОПЦИЯ…] [-e] ШАБЛОН [ВЕРСИЯ…] [[--] ПЪТ…]"
 
 #: builtin/grep.c:218
 #, c-format
 msgid "grep: failed to create thread: %s"
 msgstr "grep: неуспешно създаване на нишка: %s"
@@ -5909,14 +5949,14 @@
 
 #: builtin/grep.c:642
 msgid "search in both tracked and untracked files"
 msgstr "търсене и в следените, и в неследените файлове"
 
 #: builtin/grep.c:644
-msgid "search also in ignored files"
-msgstr "търсене и в игнорираните файлове"
+msgid "ignore files specified via '.gitignore'"
+msgstr "игнориране на файловете указани в „.gitignore“"
 
 #: builtin/grep.c:647
 msgid "show non-matching lines"
 msgstr "извеждане на редовете, които не съвпадат"
 
 #: builtin/grep.c:649
@@ -6109,23 +6149,24 @@
 #: builtin/grep.c:908
 msgid "both --cached and trees are given."
 msgstr "опцията „--cached“ е несъвместима със задаване на дърво."
 
 #: builtin/hash-object.c:82
 msgid ""
-"git hash-object [-t <type>] [-w] [--path=<file>|--no-filters] [--stdin] [--] "
-"<file>..."
+"git hash-object [-t <type>] [-w] [--path=<file> | --no-filters] [--stdin] "
+"[--] <file>..."
 msgstr ""
-"git hash-object [-t ВИД] [-w] [--path=ФАЙЛ|--no-filters] [--stdin] [--] ФАЙЛ…"
+"git hash-object [-t ВИД] [-w] [--path=ФАЙЛ | --no-filters] [--stdin] [--] "
+"ФАЙЛ…"
 
 # FIXME - list of paths or path...
 #: builtin/hash-object.c:83
 msgid "git hash-object  --stdin-paths < <list-of-paths>"
 msgstr "git hash-object  --stdin-paths < ПЪТ…"
 
-#: builtin/hash-object.c:94 builtin/tag.c:610
+#: builtin/hash-object.c:94 builtin/tag.c:612
 msgid "type"
 msgstr "ВИД"
 
 #: builtin/hash-object.c:94
 msgid "object type"
 msgstr "вид на обекта"
@@ -6171,14 +6212,14 @@
 
 #: builtin/help.c:46
 msgid "show info page"
 msgstr "показване на информационна страница"
 
 #: builtin/help.c:52
-msgid "git help [--all] [--guides] [--man|--web|--info] [command]"
-msgstr "git help [--all] [--guides] [--man|--web|--info] [КОМАНДА]"
+msgid "git help [--all] [--guides] [--man | --web | --info] [<command>]"
+msgstr "git help [--all] [--guides] [--man | --web | --info] [КОМАНДА]"
 
 #: builtin/help.c:64
 #, c-format
 msgid "unrecognized help format '%s'"
 msgstr "непознат формат на помощта „%s“"
 
@@ -6215,69 +6256,69 @@
 "'%s': cmd for supported man viewer.\n"
 "Please consider using 'man.<tool>.path' instead."
 msgstr ""
 "„%s“: команда за поддържана програма за преглед на\n"
 " ръководството. Вместо нея пробвайте „man.<tool>.path“."
 
-#: builtin/help.c:352
+#: builtin/help.c:354
 #, c-format
 msgid "'%s': unknown man viewer."
 msgstr "„%s“: непозната програма за преглед на ръководството."
 
-#: builtin/help.c:369
+#: builtin/help.c:371
 msgid "no man viewer handled the request"
 msgstr "никоя програма за преглед на ръководство не успя да обработи заявката"
 
-#: builtin/help.c:377
+#: builtin/help.c:379
 msgid "no info viewer handled the request"
 msgstr ""
 "никоя програма за преглед на информационните страници не успя да обработи "
 "заявката"
 
-#: builtin/help.c:423
+#: builtin/help.c:428
 msgid "Defining attributes per path"
 msgstr "Указване на атрибути към път"
 
-#: builtin/help.c:424
+#: builtin/help.c:429
 msgid "Everyday Git With 20 Commands Or So"
 msgstr "Ежедневието в Git в рамките на 20-ина команди"
 
-#: builtin/help.c:425
+#: builtin/help.c:430
 msgid "A Git glossary"
 msgstr "Речник с термините на Git"
 
-#: builtin/help.c:426
+#: builtin/help.c:431
 msgid "Specifies intentionally untracked files to ignore"
 msgstr "Указване на неследени файлове, които да бъдат нарочно пренебрегвани"
 
-#: builtin/help.c:427
+#: builtin/help.c:432
 msgid "Defining submodule properties"
 msgstr "Дефиниране на свойствата на подмодулите"
 
-#: builtin/help.c:428
+#: builtin/help.c:433
 msgid "Specifying revisions and ranges for Git"
 msgstr "Указване на версии и интервали в Git"
 
-#: builtin/help.c:429
+#: builtin/help.c:434
 msgid "A tutorial introduction to Git (for version 1.5.1 or newer)"
 msgstr "Въвеждащ урок за Git (версии поне 1.5.1)"
 
-#: builtin/help.c:430
+#: builtin/help.c:435
 msgid "An overview of recommended workflows with Git"
 msgstr "Общ преглед на препоръчваните начини за работа с Git"
 
-#: builtin/help.c:442
+#: builtin/help.c:447
 msgid "The common Git guides are:\n"
 msgstr "Популярните пътеводители в Git са:\n"
 
-#: builtin/help.c:463 builtin/help.c:480
+#: builtin/help.c:468 builtin/help.c:485
 #, c-format
 msgid "usage: %s%s"
 msgstr "употреба: %s%s"
 
-#: builtin/help.c:496
+#: builtin/help.c:501
 #, c-format
 msgid "`git %s' is aliased to `%s'"
 msgstr "„git %s“ е синоним на „%s“"
 
 # FIXME merge with next?
 #: builtin/index-pack.c:150
@@ -6385,14 +6426,14 @@
 #, c-format
 msgid "SHA1 COLLISION FOUND WITH %s !"
 msgstr ""
 "СЪВПАДЕНИЕ НА СТОЙНОСТИТЕ ЗА СУМИТЕ ЗА SHA1: „%s“ НА ДВА РАЗЛИЧНИ ОБЕКТА!"
 
 # FIXME merge with next?
-#: builtin/index-pack.c:689 builtin/pack-objects.c:164
-#: builtin/pack-objects.c:256
+#: builtin/index-pack.c:689 builtin/pack-objects.c:162
+#: builtin/pack-objects.c:254
 #, c-format
 msgid "unable to read %s"
 msgstr "обектът „%s“ не може да бъде прочетен"
 
 #: builtin/index-pack.c:755
 #, c-format
@@ -6484,107 +6525,107 @@
 #, c-format
 msgid "pack has %d unresolved delta"
 msgid_plural "pack has %d unresolved deltas"
 msgstr[0] "в пакета има %d ненапасваща разлика"
 msgstr[1] "в пакета има %d ненапасващи разлики"
 
-#: builtin/index-pack.c:1220
+#: builtin/index-pack.c:1219
 #, c-format
 msgid "unable to deflate appended object (%d)"
 msgstr "добавеният обект не може да се компресира с „deflate“: %d"
 
-#: builtin/index-pack.c:1299
+#: builtin/index-pack.c:1298
 #, c-format
 msgid "local object %s is corrupt"
 msgstr "локалният обект „%s“ е повреден"
 
-#: builtin/index-pack.c:1323
+#: builtin/index-pack.c:1322
 msgid "error while closing pack file"
 msgstr "грешка при затварянето на пакетния файл"
 
-#: builtin/index-pack.c:1336
+#: builtin/index-pack.c:1335
 #, c-format
 msgid "cannot write keep file '%s'"
 msgstr ""
 "грешка при записването на файла „%s“, осигуряващ запазване на директория"
 
-#: builtin/index-pack.c:1344
+#: builtin/index-pack.c:1343
 #, c-format
 msgid "cannot close written keep file '%s'"
 msgstr ""
 "грешка при затварянето на записания файл „%s“, осигуряващ запазване на "
 "директория"
 
-#: builtin/index-pack.c:1357
+#: builtin/index-pack.c:1356
 msgid "cannot store pack file"
 msgstr "пакетният файл не може да бъде запазен"
 
-#: builtin/index-pack.c:1368
+#: builtin/index-pack.c:1367
 msgid "cannot store index file"
 msgstr "файлът за индекса не може да бъде съхранен"
 
-#: builtin/index-pack.c:1401
+#: builtin/index-pack.c:1400
 #, c-format
 msgid "bad pack.indexversion=%<PRIu32>"
 msgstr "зададена е неправилна версия пакетиране: „pack.indexversion=%<PRIu32>“"
 
-#: builtin/index-pack.c:1407
+#: builtin/index-pack.c:1406
 #, c-format
 msgid "invalid number of threads specified (%d)"
 msgstr "зададен е неправилен брой нишки: %d"
 
-#: builtin/index-pack.c:1411 builtin/index-pack.c:1590
+#: builtin/index-pack.c:1410 builtin/index-pack.c:1589
 #, c-format
 msgid "no threads support, ignoring %s"
 msgstr "липсва поддръжка за нишки. „%s“ ще се пренебрегне"
 
-#: builtin/index-pack.c:1469
+#: builtin/index-pack.c:1468
 #, c-format
 msgid "Cannot open existing pack file '%s'"
 msgstr "Съществуващият пакетен файл „%s“ не може да бъде отворен"
 
-#: builtin/index-pack.c:1471
+#: builtin/index-pack.c:1470
 #, c-format
 msgid "Cannot open existing pack idx file for '%s'"
 msgstr "Съществуващият индекс за пакетния файл „%s“ не може да бъде отворен"
 
-#: builtin/index-pack.c:1518
+#: builtin/index-pack.c:1517
 #, c-format
 msgid "non delta: %d object"
 msgid_plural "non delta: %d objects"
 msgstr[0] "%d обект не е разлика"
 msgstr[1] "%d обекта не са разлика"
 
-#: builtin/index-pack.c:1525
+#: builtin/index-pack.c:1524
 #, c-format
 msgid "chain length = %d: %lu object"
 msgid_plural "chain length = %d: %lu objects"
 msgstr[0] "дължината на веригата е %d: %lu обект"
 msgstr[1] "дължината на веригата е %d: %lu обекта"
 
 # FIXME it is not the cwd it is the previous cwd
-#: builtin/index-pack.c:1554
+#: builtin/index-pack.c:1553
 msgid "Cannot come back to cwd"
 msgstr "Процесът не може да се върне към предишната работна директория"
 
-#: builtin/index-pack.c:1602 builtin/index-pack.c:1605
-#: builtin/index-pack.c:1617 builtin/index-pack.c:1621
+#: builtin/index-pack.c:1601 builtin/index-pack.c:1604
+#: builtin/index-pack.c:1616 builtin/index-pack.c:1620
 #, c-format
 msgid "bad %s"
 msgstr "неправилна стойност „%s“"
 
-#: builtin/index-pack.c:1635
+#: builtin/index-pack.c:1634
 msgid "--fix-thin cannot be used without --stdin"
 msgstr "опцията „--fix-thin“ изисква „--stdin“"
 
-#: builtin/index-pack.c:1639 builtin/index-pack.c:1648
+#: builtin/index-pack.c:1638 builtin/index-pack.c:1647
 #, c-format
 msgid "packfile name '%s' does not end with '.pack'"
 msgstr "името на пакетния файл „%s“ не завършва на „.pack“"
 
-#: builtin/index-pack.c:1656
+#: builtin/index-pack.c:1655
 msgid "--verify with no packfile name given"
 msgstr "опцията „--verify“ изисква име на пакетен файл"
 
 #: builtin/init-db.c:35
 #, c-format
 msgid "Could not make %s writable by group"
@@ -6635,110 +6676,110 @@
 #: builtin/init-db.c:110
 #, c-format
 msgid "ignoring template %s"
 msgstr "игнориране на шаблона „%s“"
 
 # FIXME bad word insanely
-#: builtin/init-db.c:133
+#: builtin/init-db.c:136
 #, c-format
 msgid "insanely long template path %s"
 msgstr "твърде дълъг път към шаблон: „%s“"
 
-#: builtin/init-db.c:141
+#: builtin/init-db.c:144
 #, c-format
 msgid "templates not found %s"
 msgstr "директорията с шаблоните не е открита: „%s“"
 
-#: builtin/init-db.c:154
+#: builtin/init-db.c:157
 #, c-format
 msgid "not copying templates of a wrong format version %d from '%s'"
 msgstr ""
 "шаблоните с неправилен номер на формата %d няма да бъдат копирани от „%s“"
 
-#: builtin/init-db.c:192
+#: builtin/init-db.c:197
 #, c-format
 msgid "insane git directory %s"
 msgstr "твърде дълго име на директория на Git: „%s“"
 
-#: builtin/init-db.c:323 builtin/init-db.c:326
+#: builtin/init-db.c:331 builtin/init-db.c:334
 #, c-format
 msgid "%s already exists"
 msgstr "Директорията „%s“ вече съществува"
 
-#: builtin/init-db.c:355
+#: builtin/init-db.c:363
 #, c-format
 msgid "unable to handle file type %d"
 msgstr "файлове от вид %d не се поддържат"
 
-#: builtin/init-db.c:358
+#: builtin/init-db.c:366
 #, c-format
 msgid "unable to move %s to %s"
 msgstr "„%s“ не може да се премести в „%s“"
 
 #. TRANSLATORS: The first '%s' is either "Reinitialized
 #. existing" or "Initialized empty", the second " shared" or
 #. "", and the last '%s%s' is the verbatim directory name.
-#: builtin/init-db.c:418
+#: builtin/init-db.c:426
 #, c-format
 msgid "%s%s Git repository in %s%s\n"
 msgstr "%s%s хранилище на Git в „%s%s“\n"
 
-#: builtin/init-db.c:419
+#: builtin/init-db.c:427
 msgid "Reinitialized existing"
 msgstr "Наново инициализирано, съществуващо"
 
-#: builtin/init-db.c:419
+#: builtin/init-db.c:427
 msgid "Initialized empty"
 msgstr "Инициализирано празно"
 
-#: builtin/init-db.c:420
+#: builtin/init-db.c:428
 msgid " shared"
 msgstr ", споделено"
 
-#: builtin/init-db.c:467
+#: builtin/init-db.c:475
 msgid ""
 "git init [-q | --quiet] [--bare] [--template=<template-directory>] [--"
-"shared[=<permissions>]] [directory]"
+"shared[=<permissions>]] [<directory>]"
 msgstr ""
 "git init [-q | --quiet] [--bare] [--template=ДИРЕКТОРИЯ_С_ШАБЛОНИ] [--"
 "shared[=ПРАВА]] [ДИРЕКТОРИЯ]"
 
-#: builtin/init-db.c:490
+#: builtin/init-db.c:498
 msgid "permissions"
 msgstr "права"
 
-#: builtin/init-db.c:491
+#: builtin/init-db.c:499
 msgid "specify that the git repository is to be shared amongst several users"
 msgstr ""
 "указване, че хранилището на Git ще бъде споделено от повече от един "
 "потребител"
 
-#: builtin/init-db.c:493 builtin/prune-packed.c:57 builtin/repack.c:172
+#: builtin/init-db.c:501 builtin/prune-packed.c:57 builtin/repack.c:171
 msgid "be quiet"
 msgstr "без извеждане на информация"
 
-#: builtin/init-db.c:525 builtin/init-db.c:530
+#: builtin/init-db.c:533 builtin/init-db.c:538
 #, c-format
 msgid "cannot mkdir %s"
 msgstr "директорията „%s“ не може да бъде създадена"
 
-#: builtin/init-db.c:534
+#: builtin/init-db.c:542
 #, c-format
 msgid "cannot chdir to %s"
 msgstr "не може да се влезе в директорията „%s“"
 
-#: builtin/init-db.c:555
+#: builtin/init-db.c:563
 #, c-format
 msgid ""
 "%s (or --work-tree=<directory>) not allowed without specifying %s (or --git-"
 "dir=<directory>)"
 msgstr ""
 "%s (или --work-tree=ДИРЕКТОРИЯ) изисква указването на %s (или --git-"
 "dir=ДИРЕКТОРИЯ)"
 
-#: builtin/init-db.c:583
+#: builtin/init-db.c:591
 #, c-format
 msgid "Cannot access work tree '%s'"
 msgstr "Работното дърво в „%s“ е недостъпно"
 
 #: builtin/interpret-trailers.c:15
 msgid ""
@@ -6758,18 +6799,18 @@
 
 #: builtin/interpret-trailers.c:27
 msgid "trailer(s) to add"
 msgstr "епилог(зи) за добавяне"
 
 #: builtin/log.c:41
-msgid "git log [<options>] [<revision range>] [[--] <path>...]\n"
-msgstr "git log [ОПЦИЯ…] [ДИАПАЗОН_НА_ВЕРСИИТЕ] [[--] ПЪТ…]\n"
+msgid "git log [<options>] [<revision range>] [[--] <path>...]"
+msgstr "git log [ОПЦИЯ…] [ДИАПАЗОН_НА_ВЕРСИИТЕ] [[--] ПЪТ…]"
 
 #: builtin/log.c:42
-msgid "   or: git show [options] <object>..."
-msgstr "   или: git show [ОПЦИЯ…] ОБЕКТ…"
+msgid "git show [<options>] <object>..."
+msgstr "git show [ОПЦИЯ…] ОБЕКТ…"
 
 #: builtin/log.c:81
 #, c-format
 msgid "invalid --decorate option: %s"
 msgstr "неправилна опция „--decorate“: %s"
 
@@ -6846,13 +6887,13 @@
 #: builtin/log.c:998
 #, c-format
 msgid "insane in-reply-to: %s"
 msgstr "неправилен формат на заглавната част за отговор „in-reply-to“: %s"
 
 #: builtin/log.c:1026
-msgid "git format-patch [options] [<since> | <revision range>]"
+msgid "git format-patch [<options>] [<since> | <revision-range>]"
 msgstr "git format-patch [ОПЦИЯ…] [ОТ | ДИАПАЗОН_НА_ВЕРСИИТЕ]"
 
 # FIXME message WTF why ask it
 #: builtin/log.c:1071
 msgid "Two output directories?"
 msgstr "Можете да укажете максимум една директория за изход."
@@ -7054,324 +7095,324 @@
 
 #: builtin/log.c:1651 builtin/log.c:1653 builtin/log.c:1665
 #, c-format
 msgid "Unknown commit %s"
 msgstr "Непознато подаване „%s“"
 
-#: builtin/ls-files.c:401
-msgid "git ls-files [options] [<file>...]"
+#: builtin/ls-files.c:358
+msgid "git ls-files [<options>] [<file>...]"
 msgstr "git ls-files [ОПЦИЯ…] [ФАЙЛ…]"
 
-#: builtin/ls-files.c:458
+#: builtin/ls-files.c:415
 msgid "identify the file status with tags"
 msgstr "извеждане на състоянието на файловете с еднобуквени флагове"
 
-#: builtin/ls-files.c:460
+#: builtin/ls-files.c:417
 msgid "use lowercase letters for 'assume unchanged' files"
 msgstr "малки букви за файловете, които да се счетат за непроменени"
 
-#: builtin/ls-files.c:462
+#: builtin/ls-files.c:419
 msgid "show cached files in the output (default)"
 msgstr "извеждане на кешираните файлове (стандартно)"
 
-#: builtin/ls-files.c:464
+#: builtin/ls-files.c:421
 msgid "show deleted files in the output"
 msgstr "извеждане на изтритите файлове"
 
-#: builtin/ls-files.c:466
+#: builtin/ls-files.c:423
 msgid "show modified files in the output"
 msgstr "извеждане на променените файлове"
 
-#: builtin/ls-files.c:468
+#: builtin/ls-files.c:425
 msgid "show other files in the output"
 msgstr "извеждане на другите файлове"
 
-#: builtin/ls-files.c:470
+#: builtin/ls-files.c:427
 msgid "show ignored files in the output"
 msgstr "извеждане на игнорираните файлове"
 
-#: builtin/ls-files.c:473
+#: builtin/ls-files.c:430
 msgid "show staged contents' object name in the output"
 msgstr "извеждане на името на обекта за съдържанието на индекса"
 
-#: builtin/ls-files.c:475
+#: builtin/ls-files.c:432
 msgid "show files on the filesystem that need to be removed"
 msgstr "извеждане на файловете, които трябва да бъдат изтрити"
 
-#: builtin/ls-files.c:477
+#: builtin/ls-files.c:434
 msgid "show 'other' directories' names only"
 msgstr "извеждане само на името на другите (неследените) директории"
 
-#: builtin/ls-files.c:480
+#: builtin/ls-files.c:437
 msgid "don't show empty directories"
 msgstr "без извеждане на празните директории"
 
-#: builtin/ls-files.c:483
+#: builtin/ls-files.c:440
 msgid "show unmerged files in the output"
 msgstr "извеждане на неслетите файлове"
 
 # FIXME not clear about what this option does
-#: builtin/ls-files.c:485
+#: builtin/ls-files.c:442
 msgid "show resolve-undo information"
 msgstr "извеждане на информацията за отмяна на разрешените подавания"
 
-#: builtin/ls-files.c:487
+#: builtin/ls-files.c:444
 msgid "skip files matching pattern"
 msgstr "прескачане на файловете напасващи ШАБЛОНа"
 
-#: builtin/ls-files.c:490
+#: builtin/ls-files.c:447
 msgid "exclude patterns are read from <file>"
 msgstr "шаблоните за игнориране да се прочетат от този ФАЙЛ"
 
-#: builtin/ls-files.c:493
+#: builtin/ls-files.c:450
 msgid "read additional per-directory exclude patterns in <file>"
 msgstr ""
 "изчитане на допълнителните шаблони за игнориране по директория от този ФАЙЛ"
 
-#: builtin/ls-files.c:495
+#: builtin/ls-files.c:452
 msgid "add the standard git exclusions"
 msgstr "добавяне на стандартно игнорираните от Git файлове"
 
-#: builtin/ls-files.c:498
+#: builtin/ls-files.c:455
 msgid "make the output relative to the project top directory"
 msgstr "пътищата да са относителни спрямо основната директория на проекта"
 
-#: builtin/ls-files.c:501
+#: builtin/ls-files.c:458
 msgid "if any <file> is not in the index, treat this as an error"
 msgstr "грешка, ако някой от тези ФАЙЛове не е в индекса"
 
-#: builtin/ls-files.c:502
+#: builtin/ls-files.c:459
 msgid "tree-ish"
 msgstr "УКАЗАТЕЛ_КЪМ_ДЪРВО"
 
-#: builtin/ls-files.c:503
+#: builtin/ls-files.c:460
 msgid "pretend that paths removed since <tree-ish> are still present"
 msgstr ""
 "считане, че пътищата изтрити след УКАЗАТЕЛя_КЪМ_ДЪРВО все още съществуват"
 
-#: builtin/ls-files.c:505
+#: builtin/ls-files.c:462
 msgid "show debugging data"
 msgstr "извеждане на информацията за изчистване на грешки"
 
 #: builtin/ls-tree.c:28
 msgid "git ls-tree [<options>] <tree-ish> [<path>...]"
 msgstr "git ls-tree [ОПЦИЯ…] УКАЗАТЕЛ_КЪМ_ДЪРВО [ПЪТ…]"
 
-#: builtin/ls-tree.c:126
+#: builtin/ls-tree.c:127
 msgid "only show trees"
 msgstr "извеждане само на дървета"
 
-#: builtin/ls-tree.c:128
+#: builtin/ls-tree.c:129
 msgid "recurse into subtrees"
 msgstr "рекурсивно обхождане поддърветата"
 
-#: builtin/ls-tree.c:130
+#: builtin/ls-tree.c:131
 msgid "show trees when recursing"
 msgstr "извеждане на дърветата при рекурсивното обхождане"
 
-#: builtin/ls-tree.c:133
+#: builtin/ls-tree.c:134
 msgid "terminate entries with NUL byte"
 msgstr "разделяне на обектите с нулевия знак „NUL“"
 
-#: builtin/ls-tree.c:134
+#: builtin/ls-tree.c:135
 msgid "include object size"
 msgstr "извеждане на размера на обекта"
 
-#: builtin/ls-tree.c:136 builtin/ls-tree.c:138
+#: builtin/ls-tree.c:137 builtin/ls-tree.c:139
 msgid "list only filenames"
 msgstr "извеждане само имената на файловете"
 
-#: builtin/ls-tree.c:141
+#: builtin/ls-tree.c:142
 msgid "use full path names"
 msgstr "използване на пълните имена на пътищата"
 
-#: builtin/ls-tree.c:143
+#: builtin/ls-tree.c:144
 msgid "list entire tree; not just current directory (implies --full-name)"
 msgstr ""
 "извеждане на цялото дърво, не само на текущата директория (включва опцията "
 "„--full-name“)"
 
-#: builtin/merge.c:44
-msgid "git merge [options] [<commit>...]"
+#: builtin/merge.c:45
+msgid "git merge [<options>] [<commit>...]"
 msgstr "git merge [ОПЦИЯ…] [ПОДАВАНЕ…]"
 
-#: builtin/merge.c:45
-msgid "git merge [options] <msg> HEAD <commit>"
+#: builtin/merge.c:46
+msgid "git merge [<options>] <msg> HEAD <commit>"
 msgstr "git merge [ОПЦИЯ…] СЪОБЩЕНИЕ HEAD ПОДАВАНЕ"
 
-#: builtin/merge.c:46
+#: builtin/merge.c:47
 msgid "git merge --abort"
 msgstr "git merge --abort"
 
 # FIXME -m rather than just m
-#: builtin/merge.c:99
+#: builtin/merge.c:100
 msgid "switch `m' requires a value"
 msgstr "опцията „-m“ изисква стойност"
 
-#: builtin/merge.c:136
+#: builtin/merge.c:137
 #, c-format
 msgid "Could not find merge strategy '%s'.\n"
 msgstr "Няма такава стратегия за сливане: „%s“.\n"
 
-#: builtin/merge.c:137
+#: builtin/merge.c:138
 #, c-format
 msgid "Available strategies are:"
 msgstr "Наличните стратегии са:"
 
-#: builtin/merge.c:142
+#: builtin/merge.c:143
 #, c-format
 msgid "Available custom strategies are:"
 msgstr "Допълнителните стратегии са:"
 
-#: builtin/merge.c:192
+#: builtin/merge.c:193
 msgid "do not show a diffstat at the end of the merge"
 msgstr "без извеждане на статистиката след завършване на сливане"
 
-#: builtin/merge.c:195
+#: builtin/merge.c:196
 msgid "show a diffstat at the end of the merge"
 msgstr "извеждане на статистиката след завършване на сливане"
 
-#: builtin/merge.c:196
+#: builtin/merge.c:197
 msgid "(synonym to --stat)"
 msgstr "(синоним на „--stat“)"
 
-#: builtin/merge.c:198
+#: builtin/merge.c:199
 msgid "add (at most <n>) entries from shortlog to merge commit message"
 msgstr ""
 "добавяне (на максимум такъв БРОЙ) записи от съкратения журнал в съобщението "
 "за подаване"
 
-#: builtin/merge.c:201
+#: builtin/merge.c:202
 msgid "create a single commit instead of doing a merge"
 msgstr "създаване на едно подаване вместо извършване на сливане"
 
-#: builtin/merge.c:203
+#: builtin/merge.c:204
 msgid "perform a commit if the merge succeeds (default)"
 msgstr "извършване на подаване при успешно сливане (стандартно действие)"
 
-#: builtin/merge.c:205
+#: builtin/merge.c:206
 msgid "edit message before committing"
 msgstr "редактиране на съобщението преди подаване"
 
-#: builtin/merge.c:206
+#: builtin/merge.c:207
 msgid "allow fast-forward (default)"
 msgstr "позволяване на тривиално сливане (стандартно действие)"
 
-#: builtin/merge.c:208
+#: builtin/merge.c:209
 msgid "abort if fast-forward is not possible"
 msgstr "преустановяване, ако сливането не е тривиално"
 
-#: builtin/merge.c:212
+#: builtin/merge.c:213
 msgid "Verify that the named commit has a valid GPG signature"
 msgstr "Проверка, че именуваното подаване е с правилен подпис на GPG"
 
-#: builtin/merge.c:213 builtin/notes.c:741 builtin/revert.c:89
+#: builtin/merge.c:214 builtin/notes.c:753 builtin/revert.c:89
 msgid "strategy"
 msgstr "стратегия"
 
-#: builtin/merge.c:214
+#: builtin/merge.c:215
 msgid "merge strategy to use"
 msgstr "стратегия за сливане, която да се ползва"
 
-#: builtin/merge.c:215
+#: builtin/merge.c:216
 msgid "option=value"
 msgstr "опция=стойност"
 
-#: builtin/merge.c:216
+#: builtin/merge.c:217
 msgid "option for selected merge strategy"
 msgstr "опция за избраната стратегия за сливане"
 
-#: builtin/merge.c:218
+#: builtin/merge.c:219
 msgid "merge commit message (for a non-fast-forward merge)"
 msgstr "съобщение при подаването със сливане (при нетривиални сливания)"
 
-#: builtin/merge.c:222
+#: builtin/merge.c:223
 msgid "abort the current in-progress merge"
 msgstr "преустановяване на текущото сливане"
 
-#: builtin/merge.c:250
+#: builtin/merge.c:251
 msgid "could not run stash."
 msgstr "не може да се извърши скатаване"
 
-#: builtin/merge.c:255
+#: builtin/merge.c:256
 msgid "stash failed"
 msgstr "неуспешно скатаване"
 
-#: builtin/merge.c:260
+#: builtin/merge.c:261
 #, c-format
 msgid "not a valid object: %s"
 msgstr "неправилен обект: „%s“"
 
-#: builtin/merge.c:279 builtin/merge.c:296
+#: builtin/merge.c:280 builtin/merge.c:297
 msgid "read-tree failed"
 msgstr "неуспешно прочитане на обект-дърво"
 
-#: builtin/merge.c:326
+#: builtin/merge.c:327
 msgid " (nothing to squash)"
 msgstr " (няма какво да се смачка)"
 
-#: builtin/merge.c:339
+#: builtin/merge.c:340
 #, c-format
 msgid "Squash commit -- not updating HEAD\n"
 msgstr "Подаване със смачкване — указателят „HEAD“ няма да бъде обновен\n"
 
-#: builtin/merge.c:371
+#: builtin/merge.c:372
 msgid "Writing SQUASH_MSG"
 msgstr "Записване на съобщението за смачкване SQUASH_MSG"
 
-#: builtin/merge.c:373
+#: builtin/merge.c:374
 msgid "Finishing SQUASH_MSG"
 msgstr "Завършване на съобщението за смачкване SQUASH_MSG"
 
-#: builtin/merge.c:396
+#: builtin/merge.c:397
 #, c-format
 msgid "No merge message -- not updating HEAD\n"
 msgstr ""
 "Липсва съобщение при подаване — указателят „HEAD“ няма да бъде обновен\n"
 
-#: builtin/merge.c:446
+#: builtin/merge.c:447
 #, c-format
 msgid "'%s' does not point to a commit"
 msgstr "„%s“ не сочи към подаване"
 
-#: builtin/merge.c:558
+#: builtin/merge.c:559
 #, c-format
 msgid "Bad branch.%s.mergeoptions string: %s"
 msgstr "Неправилен низ за настройката „branch.%s.mergeoptions“: „%s“"
 
-#: builtin/merge.c:653
+#: builtin/merge.c:654
 msgid "git write-tree failed to write a tree"
 msgstr "Командата „git write-tree“ не успя да запише обект-дърво"
 
-#: builtin/merge.c:677
+#: builtin/merge.c:678
 msgid "Not handling anything other than two heads merge."
 msgstr "Поддържа се само сливане на точно две истории."
 
-#: builtin/merge.c:691
+#: builtin/merge.c:692
 #, c-format
 msgid "Unknown option for merge-recursive: -X%s"
 msgstr "Непозната опция за рекурсивното сливане „merge-recursive“: „-X%s“"
 
-#: builtin/merge.c:704
+#: builtin/merge.c:705
 #, c-format
 msgid "unable to write %s"
 msgstr "„%s“ не може да бъде записан"
 
-#: builtin/merge.c:793
+#: builtin/merge.c:794
 #, c-format
 msgid "Could not read from '%s'"
 msgstr "От „%s“ не може да се чете"
 
-#: builtin/merge.c:802
+#: builtin/merge.c:803
 #, c-format
 msgid "Not committing merge; use 'git commit' to complete the merge.\n"
 msgstr ""
 "Сливането няма да бъде подадено. За завършването му и подаването му "
 "използвайте командата „git commit“.\n"
 
-#: builtin/merge.c:808
+#: builtin/merge.c:809
 #, c-format
 msgid ""
 "Please enter a commit message to explain why this merge is necessary,\n"
 "especially if it merges an updated upstream into a topic branch.\n"
 "\n"
 "Lines starting with '%c' will be ignored, and an empty message aborts\n"
@@ -7380,193 +7421,193 @@
 "В съобщението при подаване добавете информация за причината за\n"
 "сливането, особено ако сливате обновен отдалечен клон в тематичен клон.\n"
 "\n"
 "Редовете, които започват с „%c“ ще бъдат пропуснати, а празно съобщение\n"
 "преустановява подаването.\n"
 
-#: builtin/merge.c:832
+#: builtin/merge.c:833
 msgid "Empty commit message."
 msgstr "Празно съобщение при подаване."
 
 # FIXME - WTF is wonderful.
-#: builtin/merge.c:844
+#: builtin/merge.c:845
 #, c-format
 msgid "Wonderful.\n"
 msgstr "Първият етап на тривиалното сливане завърши.\n"
 
-#: builtin/merge.c:907
+#: builtin/merge.c:900
 #, c-format
 msgid "Automatic merge failed; fix conflicts and then commit the result.\n"
 msgstr "Неуспешно сливане — коригирайте конфликтите и подайте резултата.\n"
 
-#: builtin/merge.c:923
+#: builtin/merge.c:916
 #, c-format
 msgid "'%s' is not a commit"
 msgstr "„%s“ не е подаване"
 
-#: builtin/merge.c:964
+#: builtin/merge.c:957
 msgid "No current branch."
 msgstr "Няма текущ клон."
 
-#: builtin/merge.c:966
+#: builtin/merge.c:959
 msgid "No remote for the current branch."
 msgstr "Текущият клон не следи никой."
 
-#: builtin/merge.c:968
+#: builtin/merge.c:961
 msgid "No default upstream defined for the current branch."
 msgstr "Текущият клон не следи никой клон."
 
-#: builtin/merge.c:973
+#: builtin/merge.c:966
 #, c-format
 msgid "No remote-tracking branch for %s from %s"
 msgstr "Никой клон не следи клона „%s“ от хранилището „%s“"
 
-#: builtin/merge.c:1129
+#: builtin/merge.c:1122
 msgid "There is no merge to abort (MERGE_HEAD missing)."
 msgstr ""
 "Не може да преустановите сливане, защото в момента не се извършва такова "
 "(липсва указател „MERGE_HEAD“)."
 
-#: builtin/merge.c:1145
+#: builtin/merge.c:1138
 msgid ""
 "You have not concluded your merge (MERGE_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 "Не сте завършили сливане. (Указателят „MERGE_HEAD“ съществува).\n"
 "Подайте промените си, преди да започнете ново сливане."
 
-#: builtin/merge.c:1148 git-pull.sh:34
+#: builtin/merge.c:1141 git-pull.sh:34
 msgid "You have not concluded your merge (MERGE_HEAD exists)."
 msgstr "Не сте завършили сливане. (Указателят „MERGE_HEAD“ съществува)."
 
-#: builtin/merge.c:1152
+#: builtin/merge.c:1145
 msgid ""
 "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 "Не сте завършили отбиране на подаване (указателят „CHERRY_PICK_HEAD“\n"
 "съществува). Подайте промените си, преди да започнете ново сливане."
 
-#: builtin/merge.c:1155
+#: builtin/merge.c:1148
 msgid "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists)."
 msgstr ""
 "Не сте завършили отбиране на подаване (указателят „CHERRY_PICK_HEAD“\n"
 "съществува)."
 
-#: builtin/merge.c:1164
+#: builtin/merge.c:1157
 msgid "You cannot combine --squash with --no-ff."
 msgstr "Опцията „--squash“ е несъвместима с „--no-ff“."
 
-#: builtin/merge.c:1173
+#: builtin/merge.c:1166
 msgid "No commit specified and merge.defaultToUpstream not set."
 msgstr ""
 "Не е указано подаване и настройката „merge.defaultToUpstream“ не е зададена."
 
-#: builtin/merge.c:1205
+#: builtin/merge.c:1198
 msgid "Can merge only exactly one commit into empty head"
 msgstr "Можете да слеете точно едно подаване във връх без история"
 
-#: builtin/merge.c:1208
+#: builtin/merge.c:1201
 msgid "Squash commit into empty head not supported yet"
 msgstr "Подаване със смачкване във връх без история все още не се поддържа"
 
-#: builtin/merge.c:1210
+#: builtin/merge.c:1203
 msgid "Non-fast-forward commit does not make sense into an empty head"
 msgstr ""
 "Понеже върхът е без история, всички сливания са тривиални, не може да се "
 "извърши нетривиално сливане изисквано от опцията „--no-ff“"
 
-#: builtin/merge.c:1215
+#: builtin/merge.c:1208
 #, c-format
 msgid "%s - not something we can merge"
 msgstr "„%s“ — не е нещо, което може да се слее"
 
-#: builtin/merge.c:1266
+#: builtin/merge.c:1259
 #, c-format
 msgid "Commit %s has an untrusted GPG signature, allegedly by %s."
 msgstr ""
 "Подаването „%s“ е с недоверен подпис от GPG, който твърди, че е на „%s“."
 
-#: builtin/merge.c:1269
+#: builtin/merge.c:1262
 #, c-format
 msgid "Commit %s has a bad GPG signature allegedly by %s."
 msgstr ""
 "Подаването „%s“ е с неправилен подпис от GPG, който твърди, че е на „%s“."
 
-#: builtin/merge.c:1272
+#: builtin/merge.c:1265
 #, c-format
 msgid "Commit %s does not have a GPG signature."
 msgstr "Подаването „%s“ е без подпис от GPG."
 
-#: builtin/merge.c:1275
+#: builtin/merge.c:1268
 #, c-format
 msgid "Commit %s has a good GPG signature by %s\n"
 msgstr "Подаването „%s“ е с коректен подпис от GPG на „%s“.\n"
 
-#: builtin/merge.c:1356
+#: builtin/merge.c:1349
 #, c-format
 msgid "Updating %s..%s\n"
 msgstr "Обновяване „%s..%s“\n"
 
-#: builtin/merge.c:1395
+#: builtin/merge.c:1388
 #, c-format
 msgid "Trying really trivial in-index merge...\n"
 msgstr "Проба с най-тривиалното сливане в рамките на индекса…\n"
 
 # FIXME WTF message
-#: builtin/merge.c:1402
+#: builtin/merge.c:1395
 #, c-format
 msgid "Nope.\n"
 msgstr "Неуспешно сливане.\n"
 
-#: builtin/merge.c:1434
+#: builtin/merge.c:1427
 msgid "Not possible to fast-forward, aborting."
 msgstr ""
 "Не може да се извърши тривиално сливане, преустановяване на действието."
 
-#: builtin/merge.c:1457 builtin/merge.c:1536
+#: builtin/merge.c:1450 builtin/merge.c:1529
 #, c-format
 msgid "Rewinding the tree to pristine...\n"
 msgstr "Привеждане на дървото към първоначалното…\n"
 
-#: builtin/merge.c:1461
+#: builtin/merge.c:1454
 #, c-format
 msgid "Trying merge strategy %s...\n"
 msgstr "Пробване със стратегията за сливане „%s“…\n"
 
-#: builtin/merge.c:1527
+#: builtin/merge.c:1520
 #, c-format
 msgid "No merge strategy handled the merge.\n"
 msgstr "Никоя стратегия за сливане не може да извърши сливането.\n"
 
-#: builtin/merge.c:1529
+#: builtin/merge.c:1522
 #, c-format
 msgid "Merge with strategy %s failed.\n"
 msgstr "Неуспешно сливане със стратегия „%s“.\n"
 
-#: builtin/merge.c:1538
+#: builtin/merge.c:1531
 #, c-format
 msgid "Using the %s to prepare resolving by hand.\n"
 msgstr ""
 "Ползва се стратегията „%s“, която ще подготви дървото за коригиране на "
 "ръка.\n"
 
-#: builtin/merge.c:1550
+#: builtin/merge.c:1543
 #, c-format
 msgid "Automatic merge went well; stopped before committing as requested\n"
 msgstr ""
 "Автоматичното сливане завърши успешно. Самото подаване не е извършено, "
 "защото бе зададена опцията „--no-commit“.\n"
 
 #: builtin/merge-base.c:29
-msgid "git merge-base [-a|--all] <commit> <commit>..."
-msgstr "git merge-base [-a|--all] ПОДАВАНЕ ПОДАВАНЕ…"
+msgid "git merge-base [-a | --all] <commit> <commit>..."
+msgstr "git merge-base [-a | --all] ПОДАВАНЕ ПОДАВАНЕ…"
 
 #: builtin/merge-base.c:30
-msgid "git merge-base [-a|--all] --octopus <commit>..."
-msgstr "git merge-base [-a|--all] --octopus ПОДАВАНЕ…"
+msgid "git merge-base [-a | --all] --octopus <commit>..."
+msgstr "git merge-base [-a | --all] --octopus ПОДАВАНЕ…"
 
 #: builtin/merge-base.c:31
 msgid "git merge-base --independent <commit>..."
 msgstr "git merge-base --independent ПОДАВАНЕ…"
 
 #: builtin/merge-base.c:32
@@ -7597,14 +7638,14 @@
 #: builtin/merge-base.c:222
 msgid "find where <commit> forked from reflog of <ref>"
 msgstr "откриване къде ПОДАВАНЕто се е отклонило от историята на УКАЗАТЕЛя"
 
 #: builtin/merge-file.c:8
 msgid ""
-"git merge-file [options] [-L name1 [-L orig [-L name2]]] file1 orig_file "
-"file2"
+"git merge-file [<options>] [-L <name1> [-L <orig> [-L <name2>]]] <file1> "
+"<orig-file> <file2>"
 msgstr ""
 "git merge-file [ОПЦИЯ…] [-L ИМЕ_1 [-L ОРИГИНАЛ [-L ИМЕ_2]]] ФАЙЛ_1 ОРИГ_ФАЙЛ "
 "ФАЙЛ_2"
 
 #: builtin/merge-file.c:33
 msgid "send results to standard output"
@@ -7632,13 +7673,13 @@
 
 #: builtin/merge-file.c:43
 msgid "do not warn about conflicts"
 msgstr "без предупреждения при конфликти"
 
 #: builtin/merge-file.c:45
-msgid "set labels for file1/orig_file/file2"
+msgid "set labels for file1/orig-file/file2"
 msgstr "задаване на етикети за ФАЙЛ_1/ОРИГИНАЛ/ФАЙЛ_2"
 
 #: builtin/mktree.c:64
 msgid "git mktree [-z] [--missing] [--batch]"
 msgstr "git mktree [-z] [--missing] [--batch]"
 
@@ -7652,13 +7693,13 @@
 
 #: builtin/mktree.c:152
 msgid "allow creation of more than one tree"
 msgstr "разрешаване на създаването на повече от едно дърво"
 
 #: builtin/mv.c:15
-msgid "git mv [options] <source>... <destination>"
+msgid "git mv [<options>] <source>... <destination>"
 msgstr "git mv [ОПЦИЯ…] ОБЕКТ… ЦЕЛ"
 
 # FIXME message<
 #: builtin/mv.c:69
 #, c-format
 msgid "Directory %s is in index and no submodule?"
@@ -7742,27 +7783,27 @@
 
 #: builtin/mv.c:253
 #, c-format
 msgid "Renaming %s to %s\n"
 msgstr "Преименуване на „%s“ на „%s“\n"
 
-#: builtin/mv.c:256 builtin/remote.c:726 builtin/repack.c:358
+#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:359
 #, c-format
 msgid "renaming '%s' failed"
 msgstr "неуспешно преименуване на „%s“"
 
 #: builtin/name-rev.c:255
-msgid "git name-rev [options] <commit>..."
+msgid "git name-rev [<options>] <commit>..."
 msgstr "git name-rev [ОПЦИЯ…] ПОДАВАНЕ…"
 
 #: builtin/name-rev.c:256
-msgid "git name-rev [options] --all"
+msgid "git name-rev [<options>] --all"
 msgstr "git name-rev [ОПЦИЯ…] --all"
 
 #: builtin/name-rev.c:257
-msgid "git name-rev [options] --stdin"
+msgid "git name-rev [<options>] --stdin"
 msgstr "git name-rev [ОПЦИЯ…] --stdin"
 
 # FIXME sha
 #: builtin/name-rev.c:309
 msgid "print only names (no SHA-1)"
 msgstr "извеждане само на имената (без сумите по SHA1)"
@@ -7791,47 +7832,47 @@
 
 #: builtin/name-rev.c:322
 msgid "dereference tags in the input (internal use)"
 msgstr "извеждане на идентификаторите на обекти-етикети (за вътрешни нужди)"
 
 #: builtin/notes.c:24
-msgid "git notes [--ref <notes_ref>] [list [<object>]]"
+msgid "git notes [--ref <notes-ref>] [list [<object>]]"
 msgstr "git notes [--ref УКАЗАТЕЛ_ЗА_БЕЛЕЖКА] [list [ОБЕКТ]]"
 
 #: builtin/notes.c:25
 msgid ""
-"git notes [--ref <notes_ref>] add [-f] [-m <msg> | -F <file> | (-c | -C) "
-"<object>] [<object>]"
+"git notes [--ref <notes-ref>] add [-f] [--allow-empty] [-m <msg> | -F <file> "
+"| (-c | -C) <object>] [<object>]"
 msgstr ""
-"git notes [--ref УКАЗАТЕЛ_ЗА_БЕЛЕЖКА] add [-f] [-m СЪОБЩЕНИЕ | -F ФАЙЛ | (-c "
-"| -C) ОБЕКТ] [ОБЕКТ]"
+"git notes [--ref УКАЗАТЕЛ_ЗА_БЕЛЕЖКА] add [-f] [--allow-empty] [-m СЪОБЩЕНИЕ "
+"| -F ФАЙЛ | (-c | -C) ОБЕКТ] [ОБЕКТ]"
 
 #: builtin/notes.c:26
-msgid "git notes [--ref <notes_ref>] copy [-f] <from-object> <to-object>"
+msgid "git notes [--ref <notes-ref>] copy [-f] <from-object> <to-object>"
 msgstr ""
 "git notes [--ref УКАЗАТЕЛ_ЗА_БЕЛЕЖКА] copy [-f] ОБЕКТ_ИЗТОЧНИК ОБЕКТ_ЦЕЛ"
 
 #: builtin/notes.c:27
 msgid ""
-"git notes [--ref <notes_ref>] append [-m <msg> | -F <file> | (-c | -C) "
-"<object>] [<object>]"
+"git notes [--ref <notes-ref>] append [--allow-empty] [-m <msg> | -F <file> | "
+"(-c | -C) <object>] [<object>]"
 msgstr ""
-"git notes [--ref УКАЗАТЕЛ_ЗА_БЕЛЕЖКА] append [-m СЪОБЩЕНИЕ | -F ФАЙЛ | (-c | "
-"-C) ОБЕКТ] [ОБЕКТ]"
+"git notes [--ref УКАЗАТЕЛ_ЗА_БЕЛЕЖКА] append [--allow-empty] [-m СЪОБЩЕНИЕ | "
+"-F ФАЙЛ | (-c | -C) ОБЕКТ] [ОБЕКТ]"
 
 #: builtin/notes.c:28
-msgid "git notes [--ref <notes_ref>] edit [<object>]"
-msgstr "git notes [--ref УКАЗАТЕЛ_ЗА_БЕЛЕЖКА] edit [ОБЕКТ]"
+msgid "git notes [--ref <notes-ref>] edit [--allow-empty] [<object>]"
+msgstr "git notes [--ref УКАЗАТЕЛ_ЗА_БЕЛЕЖКА] edit [--allow-empty] [ОБЕКТ]"
 
 #: builtin/notes.c:29
-msgid "git notes [--ref <notes_ref>] show [<object>]"
+msgid "git notes [--ref <notes-ref>] show [<object>]"
 msgstr "git notes [--ref УКАЗАТЕЛ_ЗА_БЕЛЕЖКА] show [ОБЕКТ]"
 
 #: builtin/notes.c:30
 msgid ""
-"git notes [--ref <notes_ref>] merge [-v | -q] [-s <strategy> ] <notes_ref>"
+"git notes [--ref <notes-ref>] merge [-v | -q] [-s <strategy>] <notes-ref>"
 msgstr ""
 "git notes [--ref УКАЗАТЕЛ_ЗА_БЕЛЕЖКА] merge [-v | -q] [-s СТРАТЕГИЯ] "
 "УКАЗАТЕЛ_ЗА_БЕЛЕЖКА"
 
 #: builtin/notes.c:31
 msgid "git notes merge --commit [-v | -q]"
@@ -7839,21 +7880,21 @@
 
 #: builtin/notes.c:32
 msgid "git notes merge --abort [-v | -q]"
 msgstr "git notes merge --abort [-v | -q]"
 
 #: builtin/notes.c:33
-msgid "git notes [--ref <notes_ref>] remove [<object>...]"
+msgid "git notes [--ref <notes-ref>] remove [<object>...]"
 msgstr "git notes [--ref УКАЗАТЕЛ_ЗА_БЕЛЕЖКА] remove [ОБЕКТ…]"
 
 #: builtin/notes.c:34
-msgid "git notes [--ref <notes_ref>] prune [-n | -v]"
+msgid "git notes [--ref <notes-ref>] prune [-n | -v]"
 msgstr "git notes [--ref УКАЗАТЕЛ_ЗА_БЕЛЕЖКА] prune [-n | -v]"
 
 #: builtin/notes.c:35
-msgid "git notes [--ref <notes_ref>] get-ref"
+msgid "git notes [--ref <notes-ref>] get-ref"
 msgstr "git notes [--ref УКАЗАТЕЛ_ЗА_БЕЛЕЖКА] get-ref"
 
 #: builtin/notes.c:40
 msgid "git notes [list [<object>]]"
 msgstr "git notes [list [ОБЕКТ]]"
 
@@ -7879,13 +7920,13 @@
 
 #: builtin/notes.c:66
 msgid "git notes show [<object>]"
 msgstr "git notes show [ОБЕКТ]"
 
 #: builtin/notes.c:71
-msgid "git notes merge [<options>] <notes_ref>"
+msgid "git notes merge [<options>] <notes-ref>"
 msgstr "git notes merge [ОПЦИЯ…] УКАЗАТЕЛ_ЗА_БЕЛЕЖКА"
 
 #: builtin/notes.c:72
 msgid "git notes merge --commit [<options>]"
 msgstr "git notes merge --commit [ОПЦИЯ…]"
 
@@ -7902,236 +7943,240 @@
 msgstr "git notes prune [ОПЦИЯ…]"
 
 #: builtin/notes.c:88
 msgid "git notes get-ref"
 msgstr "git notes get-ref"
 
-#: builtin/notes.c:136
+#: builtin/notes.c:146
 #, c-format
 msgid "unable to start 'show' for object '%s'"
 msgstr "действието „show“ не може да се изпълни за обект „%s“"
 
-#: builtin/notes.c:140
+#: builtin/notes.c:150
 msgid "could not read 'show' output"
 msgstr "изведената информация от действието „show“ не може да се прочете"
 
-#: builtin/notes.c:148
+#: builtin/notes.c:158
 #, c-format
 msgid "failed to finish 'show' for object '%s'"
 msgstr "действието „show“ не може да се завърши за обект „%s“"
 
-#: builtin/notes.c:166 builtin/tag.c:477
+#: builtin/notes.c:173 builtin/tag.c:477
 #, c-format
 msgid "could not create file '%s'"
 msgstr "файлът „%s“ не може да бъде създаден"
 
-#: builtin/notes.c:185
+#: builtin/notes.c:192
 msgid "Please supply the note contents using either -m or -F option"
 msgstr "Задайте съдържанието на бележката с някоя от опциите „-m“ или „-F“"
 
-#: builtin/notes.c:206 builtin/notes.c:847
-#, c-format
-msgid "Removing note for object %s\n"
-msgstr "Изтриване на бележката за обекта „%s“\n"
-
-#: builtin/notes.c:211
+#: builtin/notes.c:201
 msgid "unable to write note object"
 msgstr "обектът-бележка не може да бъде записан"
 
-#: builtin/notes.c:213
+#: builtin/notes.c:203
 #, c-format
 msgid "The note contents have been left in %s"
 msgstr "Съдържанието на бележката е във файла „%s“"
 
-#: builtin/notes.c:247 builtin/tag.c:693
+#: builtin/notes.c:231 builtin/tag.c:693
 #, c-format
 msgid "cannot read '%s'"
 msgstr "файлът „%s“ не може да бъде прочетен"
 
-#: builtin/notes.c:249 builtin/tag.c:696
+#: builtin/notes.c:233 builtin/tag.c:696
 #, c-format
 msgid "could not open or read '%s'"
 msgstr "файлът „%s“ не може да бъде отворен или прочетен"
 
-#: builtin/notes.c:268 builtin/notes.c:319 builtin/notes.c:321
-#: builtin/notes.c:381 builtin/notes.c:435 builtin/notes.c:518
-#: builtin/notes.c:523 builtin/notes.c:598 builtin/notes.c:640
-#: builtin/notes.c:842 builtin/tag.c:709
+#: builtin/notes.c:252 builtin/notes.c:303 builtin/notes.c:305
+#: builtin/notes.c:365 builtin/notes.c:420 builtin/notes.c:506
+#: builtin/notes.c:511 builtin/notes.c:589 builtin/notes.c:652
+#: builtin/notes.c:854 builtin/tag.c:709
 #, c-format
 msgid "Failed to resolve '%s' as a valid ref."
 msgstr "Не може да се открие към какво сочи „%s“."
 
-#: builtin/notes.c:271
+#: builtin/notes.c:255
 #, c-format
 msgid "Failed to read object '%s'."
 msgstr "Обектът „%s“ не може да бъде прочетен."
 
-#: builtin/notes.c:275
+#: builtin/notes.c:259
 #, c-format
 msgid "Cannot read note data from non-blob object '%s'."
 msgstr ""
 "Съдържанието на бележка не може да се вземе от обект, който не е BLOB: „%s“."
 
-#: builtin/notes.c:315
+#: builtin/notes.c:299
 #, c-format
 msgid "Malformed input line: '%s'."
 msgstr "Даденият входен ред е с неправилен формат: „%s“."
 
-#: builtin/notes.c:330
+#: builtin/notes.c:314
 #, c-format
 msgid "Failed to copy notes from '%s' to '%s'"
 msgstr "Бележката не може да се копира от „%s“ към „%s“"
 
-#: builtin/notes.c:374 builtin/notes.c:428 builtin/notes.c:501
-#: builtin/notes.c:513 builtin/notes.c:586 builtin/notes.c:633
-#: builtin/notes.c:907
+#: builtin/notes.c:358 builtin/notes.c:413 builtin/notes.c:489
+#: builtin/notes.c:501 builtin/notes.c:577 builtin/notes.c:645
+#: builtin/notes.c:919
 msgid "too many parameters"
 msgstr "прекалено много параметри"
 
-#: builtin/notes.c:387 builtin/notes.c:646
+#: builtin/notes.c:371 builtin/notes.c:658
 #, c-format
 msgid "No note found for object %s."
 msgstr "Няма бележки за обекта „%s“."
 
-#: builtin/notes.c:409 builtin/notes.c:566
+#: builtin/notes.c:392 builtin/notes.c:555
 msgid "note contents as a string"
 msgstr "низ, който е съдържанието на бележката"
 
-#: builtin/notes.c:412 builtin/notes.c:569
+#: builtin/notes.c:395 builtin/notes.c:558
 msgid "note contents in a file"
 msgstr "файл със съдържанието на бележката"
 
-#: builtin/notes.c:414 builtin/notes.c:417 builtin/notes.c:571
-#: builtin/notes.c:574 builtin/tag.c:628
+#: builtin/notes.c:397 builtin/notes.c:400 builtin/notes.c:560
+#: builtin/notes.c:563 builtin/tag.c:628
 msgid "object"
 msgstr "обект"
 
-#: builtin/notes.c:415 builtin/notes.c:572
+#: builtin/notes.c:398 builtin/notes.c:561
 msgid "reuse and edit specified note object"
 msgstr "преизползване и редактиране на указания обект-бележка"
 
-#: builtin/notes.c:418 builtin/notes.c:575
+#: builtin/notes.c:401 builtin/notes.c:564
 msgid "reuse specified note object"
 msgstr "преизползване на указания обект-бележка"
 
-#: builtin/notes.c:420 builtin/notes.c:488
+#: builtin/notes.c:404 builtin/notes.c:567
+msgid "allow storing empty note"
+msgstr "приемане и на празни бележки"
+
+#: builtin/notes.c:405 builtin/notes.c:476
 msgid "replace existing notes"
 msgstr "замяна на съществуващите бележки"
 
-#: builtin/notes.c:454
+#: builtin/notes.c:430
 #, c-format
 msgid ""
 "Cannot add notes. Found existing notes for object %s. Use '-f' to overwrite "
 "existing notes"
 msgstr ""
 "Не може да се добави бележка, защото такава вече съществува за обекта „%s“. "
 "Използвайте опцията „-f“, за да презапишете съществуващи бележки."
 
-#: builtin/notes.c:459 builtin/notes.c:536
+#: builtin/notes.c:445 builtin/notes.c:524
 #, c-format
 msgid "Overwriting existing notes for object %s\n"
 msgstr "Презаписване на съществуващите бележки за обекта „%s“\n"
 
-#: builtin/notes.c:489
+#: builtin/notes.c:456 builtin/notes.c:617 builtin/notes.c:859
+#, c-format
+msgid "Removing note for object %s\n"
+msgstr "Изтриване на бележката за обекта „%s“\n"
+
+#: builtin/notes.c:477
 msgid "read objects from stdin"
 msgstr "изчитане на обектите от стандартния вход"
 
 # FIXME imporve message
-#: builtin/notes.c:491
+#: builtin/notes.c:479
 msgid "load rewriting config for <command> (implies --stdin)"
 msgstr ""
 "зареждане на настройките за КОМАНДАта, която презаписва подавания (включва "
 "опцията „--stdin“)"
 
-#: builtin/notes.c:509
+#: builtin/notes.c:497
 msgid "too few parameters"
 msgstr "прекалено малко параметри"
 
-#: builtin/notes.c:530
+#: builtin/notes.c:518
 #, c-format
 msgid ""
 "Cannot copy notes. Found existing notes for object %s. Use '-f' to overwrite "
 "existing notes"
 msgstr ""
 "Не може да се копира бележка, защото такава вече съществува за обекта „%s“. "
 "Използвайте опцията „-f“, за да презапишете съществуващи бележки."
 
-#: builtin/notes.c:542
+#: builtin/notes.c:530
 #, c-format
 msgid "Missing notes on source object %s. Cannot copy."
 msgstr ""
 "Не може да се копира бележка, която не съществува — няма бележки за обекта-"
 "източник „%s“."
 
-#: builtin/notes.c:591
+#: builtin/notes.c:582
 #, c-format
 msgid ""
 "The -m/-F/-c/-C options have been deprecated for the 'edit' subcommand.\n"
 "Please use 'git notes add -f -m/-F/-c/-C' instead.\n"
 msgstr ""
 "Задаването на опциите „-m“/„-F“/„-c“/„-C“ с командата „edit“ вече е "
 "остаряло.\n"
 "Вместо това ги използвайте с командата „add“: „git notes add -f -m/-F/-c/-"
 "C“.\n"
 
-#: builtin/notes.c:738
+#: builtin/notes.c:750
 msgid "General options"
 msgstr "Общи опции"
 
-#: builtin/notes.c:740
+#: builtin/notes.c:752
 msgid "Merge options"
 msgstr "Опции при сливане"
 
-#: builtin/notes.c:742
+#: builtin/notes.c:754
 msgid ""
 "resolve notes conflicts using the given strategy (manual/ours/theirs/union/"
 "cat_sort_uniq)"
 msgstr ""
 "коригиране на конфликтите при сливане на бележките чрез тази стратегия — "
 "„manual“ (ръчно), „ours“ (вашата версия), „theirs“ (чуждата версия), "
 "„union“ (обединяване), „cat_sort_uniq“ (обединяване, подреждане, уникални "
 "резултати)"
 
-#: builtin/notes.c:744
+#: builtin/notes.c:756
 msgid "Committing unmerged notes"
 msgstr "Подаване на неслети бележки"
 
-#: builtin/notes.c:746
+#: builtin/notes.c:758
 msgid "finalize notes merge by committing unmerged notes"
 msgstr "завършване на сливането чрез подаване на неслети бележки"
 
-#: builtin/notes.c:748
+#: builtin/notes.c:760
 msgid "Aborting notes merge resolution"
 msgstr "Преустановяване на корекцията при сливането на бележки"
 
-#: builtin/notes.c:750
+#: builtin/notes.c:762
 msgid "abort notes merge"
 msgstr "преустановяване на сливането на бележки"
 
-#: builtin/notes.c:845
+#: builtin/notes.c:857
 #, c-format
 msgid "Object %s has no note\n"
 msgstr "Няма бележки за обекта „%s“\n"
 
-#: builtin/notes.c:857
+#: builtin/notes.c:869
 msgid "attempt to remove non-existent note is not an error"
 msgstr "опитът за изтриването на несъществуваща бележка не се счита за грешка"
 
-#: builtin/notes.c:860
+#: builtin/notes.c:872
 msgid "read object names from the standard input"
 msgstr "изчитане на имената на обектите от стандартния вход"
 
-#: builtin/notes.c:941
+#: builtin/notes.c:953
 msgid "notes-ref"
 msgstr "УКАЗАТЕЛ_ЗА_БЕЛЕЖКА"
 
-#: builtin/notes.c:942
-msgid "use notes from <notes_ref>"
+#: builtin/notes.c:954
+msgid "use notes from <notes-ref>"
 msgstr "да се използва бележката сочена от този УКАЗАТЕЛ_ЗА_БЕЛЕЖКА"
 
-#: builtin/notes.c:977 builtin/remote.c:1624
+#: builtin/notes.c:989 builtin/remote.c:1621
 #, c-format
 msgid "Unknown subcommand: %s"
 msgstr "Непозната подкоманда: %s"
 
 #: builtin/pack-objects.c:28
 msgid "git pack-objects --stdout [options...] [< ref-list | < object-list]"
@@ -8142,216 +8187,220 @@
 #: builtin/pack-objects.c:29
 msgid "git pack-objects [options...] base-name [< ref-list | < object-list]"
 msgstr ""
 "git pack-objects [ОПЦИЯ…] ПРЕФИКС_НА_ИМЕТО [< СПИСЪК_С_ВЕРСИИ | < "
 "СПИСЪК_С_ОБЕКТИ]"
 
-#: builtin/pack-objects.c:177 builtin/pack-objects.c:180
+#: builtin/pack-objects.c:175 builtin/pack-objects.c:178
 #, c-format
 msgid "deflate error (%d)"
 msgstr "грешка при декомпресиране с „deflate“ (%d)"
 
-#: builtin/pack-objects.c:773
+#: builtin/pack-objects.c:771
 msgid "Writing objects"
 msgstr "Записване на обектите"
 
-#: builtin/pack-objects.c:1015
+#: builtin/pack-objects.c:1013
 msgid "disabling bitmap writing, as some objects are not being packed"
 msgstr ""
 "изключване на записването на битовата маска, защото някои обекти няма да се "
 "пакетират"
 
-#: builtin/pack-objects.c:2175
+#: builtin/pack-objects.c:2173
 msgid "Compressing objects"
 msgstr "Компресиране на обектите"
 
-#: builtin/pack-objects.c:2572
+#: builtin/pack-objects.c:2570
 #, c-format
 msgid "unsupported index version %s"
 msgstr "неподдържана версия на индекса „%s“"
 
-#: builtin/pack-objects.c:2576
+#: builtin/pack-objects.c:2574
 #, c-format
 msgid "bad index version '%s'"
 msgstr "неправилна версия на индекса „%s“"
 
-#: builtin/pack-objects.c:2599
+#: builtin/pack-objects.c:2597
 #, c-format
 msgid "option %s does not accept negative form"
 msgstr "опцията „%s“ не притежава отрицателна версия"
 
-#: builtin/pack-objects.c:2603
+#: builtin/pack-objects.c:2601
 #, c-format
 msgid "unable to parse value '%s' for option %s"
 msgstr "неразпозната стойност „%s“ за опцията „%s“"
 
-#: builtin/pack-objects.c:2622
+#: builtin/pack-objects.c:2621
 msgid "do not show progress meter"
 msgstr "без извеждане на напредъка"
 
-#: builtin/pack-objects.c:2624
+#: builtin/pack-objects.c:2623
 msgid "show progress meter"
 msgstr "извеждане на напредъка"
 
-#: builtin/pack-objects.c:2626
+#: builtin/pack-objects.c:2625
 msgid "show progress meter during object writing phase"
 msgstr "извеждане на напредъка във фазата на запазване на обектите"
 
-#: builtin/pack-objects.c:2629
+#: builtin/pack-objects.c:2628
 msgid "similar to --all-progress when progress meter is shown"
 msgstr ""
 "същото действие като опцията „--all-progress“ при извеждането на напредъка"
 
-#: builtin/pack-objects.c:2630
+#: builtin/pack-objects.c:2629
 msgid "version[,offset]"
 msgstr "ВЕРСИЯ[,ОТМЕСТВАНЕ]"
 
-#: builtin/pack-objects.c:2631
+#: builtin/pack-objects.c:2630
 msgid "write the pack index file in the specified idx format version"
 msgstr ""
 "запазване на индекса на пакетните файлове във форма̀та с указаната версия"
 
-#: builtin/pack-objects.c:2634
+#: builtin/pack-objects.c:2633
 msgid "maximum size of each output pack file"
 msgstr "максимален размер на всеки пакетен файл"
 
-#: builtin/pack-objects.c:2636
+#: builtin/pack-objects.c:2635
 msgid "ignore borrowed objects from alternate object store"
 msgstr "игнориране на обектите заети от други хранилища на обекти"
 
-#: builtin/pack-objects.c:2638
+#: builtin/pack-objects.c:2637
 msgid "ignore packed objects"
 msgstr "игнориране на пакетираните обекти"
 
-#: builtin/pack-objects.c:2640
+#: builtin/pack-objects.c:2639
 msgid "limit pack window by objects"
 msgstr "ограничаване на прозореца за пакетиране по брой обекти"
 
-#: builtin/pack-objects.c:2642
+#: builtin/pack-objects.c:2641
 msgid "limit pack window by memory in addition to object limit"
 msgstr ""
 "ограничаване на прозореца за пакетиране и по памет освен по брой обекти"
 
-#: builtin/pack-objects.c:2644
+#: builtin/pack-objects.c:2643
 msgid "maximum length of delta chain allowed in the resulting pack"
 msgstr ""
 "максимална дължина на веригата от разлики, която е позволена в пакетния файл"
 
-#: builtin/pack-objects.c:2646
+#: builtin/pack-objects.c:2645
 msgid "reuse existing deltas"
 msgstr "преизползване на съществуващите разлики"
 
-#: builtin/pack-objects.c:2648
+#: builtin/pack-objects.c:2647
 msgid "reuse existing objects"
 msgstr "преизползване на съществуващите обекти"
 
-#: builtin/pack-objects.c:2650
+#: builtin/pack-objects.c:2649
 msgid "use OFS_DELTA objects"
 msgstr "използване на обекти „OFS_DELTA“"
 
-#: builtin/pack-objects.c:2652
+#: builtin/pack-objects.c:2651
 msgid "use threads when searching for best delta matches"
 msgstr ""
 "стартиране на нишки за претърсване на най-добрите съвпадения на разликите"
 
-#: builtin/pack-objects.c:2654
+#: builtin/pack-objects.c:2653
 msgid "do not create an empty pack output"
 msgstr "без създаване на празен пакетен файл"
 
-#: builtin/pack-objects.c:2656
+#: builtin/pack-objects.c:2655
 msgid "read revision arguments from standard input"
 msgstr "изчитане на версиите от стандартния вход"
 
-#: builtin/pack-objects.c:2658
+#: builtin/pack-objects.c:2657
 msgid "limit the objects to those that are not yet packed"
 msgstr "ограничаване до все още непакетираните обекти"
 
-#: builtin/pack-objects.c:2661
+#: builtin/pack-objects.c:2660
 msgid "include objects reachable from any reference"
 msgstr ""
 "включване на всички обекти, които могат да се достигнат от произволен "
 "указател"
 
-#: builtin/pack-objects.c:2664
+#: builtin/pack-objects.c:2663
 msgid "include objects referred by reflog entries"
 msgstr "включване и на обектите сочени от записите в журнала на указателите"
 
-#: builtin/pack-objects.c:2667
+#: builtin/pack-objects.c:2666
 msgid "include objects referred to by the index"
 msgstr "включване и на обектите сочени от индекса"
 
-#: builtin/pack-objects.c:2670
+#: builtin/pack-objects.c:2669
 msgid "output pack to stdout"
 msgstr "извеждане на пакета на стандартния изход"
 
-#: builtin/pack-objects.c:2672
+#: builtin/pack-objects.c:2671
 msgid "include tag objects that refer to objects to be packed"
 msgstr ""
 "включване и на обектите-етикети, които сочат към обектите, които ще бъдат "
 "пакетирани"
 
-#: builtin/pack-objects.c:2674
+#: builtin/pack-objects.c:2673
 msgid "keep unreachable objects"
 msgstr "запазване на недостижимите обекти"
 
-#: builtin/pack-objects.c:2675 parse-options.h:140
+#: builtin/pack-objects.c:2674 parse-options.h:140
 msgid "time"
 msgstr "ВРЕМЕ"
 
-#: builtin/pack-objects.c:2676
+#: builtin/pack-objects.c:2675
 msgid "unpack unreachable objects newer than <time>"
 msgstr "разпакетиране на недостижимите обекти, които са по-нови от това ВРЕМЕ"
 
-#: builtin/pack-objects.c:2679
+#: builtin/pack-objects.c:2678
 msgid "create thin packs"
 msgstr "създаване на съкратени пакети"
 
-#: builtin/pack-objects.c:2681
+#: builtin/pack-objects.c:2680
+msgid "create packs suitable for shallow fetches"
+msgstr "пакетиране подходящо за плитко доставяне"
+
+#: builtin/pack-objects.c:2682
 msgid "ignore packs that have companion .keep file"
 msgstr "игнориране на пакетите, които са придружени от файл „.keep“"
 
-#: builtin/pack-objects.c:2683
+#: builtin/pack-objects.c:2684
 msgid "pack compression level"
 msgstr "ниво на компресиране при пакетиране"
 
-#: builtin/pack-objects.c:2685
+#: builtin/pack-objects.c:2686
 msgid "do not hide commits by grafts"
 msgstr ""
 "извеждане на всички родители — дори и тези, които нормално са скрити при "
 "присажданията"
 
-#: builtin/pack-objects.c:2687
+#: builtin/pack-objects.c:2688
 msgid "use a bitmap index if available to speed up counting objects"
 msgstr ""
 "използване на съществуващи индекси на база битови маски за ускоряване на "
 "преброяването на обектите"
 
-#: builtin/pack-objects.c:2689
+#: builtin/pack-objects.c:2690
 msgid "write a bitmap index together with the pack index"
 msgstr ""
 "запазване и на индекс на база побитова маска, заедно с индекса за пакета"
 
-#: builtin/pack-objects.c:2778
+#: builtin/pack-objects.c:2781
 msgid "Counting objects"
 msgstr "Преброяване на обектите"
 
 #: builtin/pack-refs.c:6
-msgid "git pack-refs [options]"
+msgid "git pack-refs [<options>]"
 msgstr "git pack-refs [ОПЦИЯ…]"
 
 #: builtin/pack-refs.c:14
 msgid "pack everything"
 msgstr "пакетиране на всичко"
 
 #: builtin/pack-refs.c:15
 msgid "prune loose refs (default)"
 msgstr "окастряне на недостижимите указатели (стандартно)"
 
 #: builtin/prune-packed.c:7
-msgid "git prune-packed [-n|--dry-run] [-q|--quiet]"
-msgstr "git prune-packed [-n|--dry-run] [-q|--quiet]"
+msgid "git prune-packed [-n | --dry-run] [-q | --quiet]"
+msgstr "git prune-packed [-n | --dry-run] [-q | --quiet]"
 
 #: builtin/prune-packed.c:40
 msgid "Removing duplicate objects"
 msgstr "Изтриване на повтарящите се обекти"
 
 #: builtin/prune.c:12
@@ -8579,13 +8628,13 @@
 #: builtin/push.c:301
 msgid ""
 "You cannot update a remote ref that points at a non-commit object,\n"
 "or update a remote ref to make it point at a non-commit object,\n"
 "without using the '--force' option.\n"
 msgstr ""
-"Без да укажете опцията опцията „--force“, не може да обновите отдалечен\n"
+"Без да укажете опцията „--force“, не може да обновите отдалечен\n"
 "указател, който вече сочи към обект, който не е подаване, както и тепърва\n"
 "да го промените да сочи към подобен обект.\n"
 
 #: builtin/push.c:360
 #, c-format
 msgid "Pushing to %s\n"
@@ -8640,85 +8689,89 @@
 msgstr "опцията „--mirror“ е несъвместима с указването на версия"
 
 #: builtin/push.c:422
 msgid "--all and --mirror are incompatible"
 msgstr "опциите „--all“ и „--mirror“ са несъвместими"
 
-#: builtin/push.c:493
+#: builtin/push.c:502
 msgid "repository"
 msgstr "хранилище"
 
-#: builtin/push.c:494
+#: builtin/push.c:503
 msgid "push all refs"
 msgstr "изтласкване на всички указатели"
 
-#: builtin/push.c:495
+#: builtin/push.c:504
 msgid "mirror all refs"
 msgstr "огледално копие на всички указатели"
 
-#: builtin/push.c:497
+#: builtin/push.c:506
 msgid "delete refs"
 msgstr "изтриване на указателите"
 
-#: builtin/push.c:498
+#: builtin/push.c:507
 msgid "push tags (can't be used with --all or --mirror)"
 msgstr "изтласкване на етикетите (несъвместимо с опциите „--all“ и „--mirror“)"
 
-#: builtin/push.c:501
+#: builtin/push.c:510
 msgid "force updates"
 msgstr "принудително обновяване"
 
 # FIXME double check this
-#: builtin/push.c:503
+#: builtin/push.c:512
 msgid "refname>:<expect"
 msgstr "УКАЗАТЕЛ>:<ОЧАКВАНА_СТОЙНОСТ"
 
-#: builtin/push.c:504
+#: builtin/push.c:513
 msgid "require old value of ref to be at this value"
 msgstr "УКАЗАТЕЛят трябва първоначално да е с тази ОЧАКВАНА_СТОЙНОСТ"
 
-#: builtin/push.c:507
+#: builtin/push.c:516
 msgid "control recursive pushing of submodules"
 msgstr "управление на рекурсивното изтласкване на подмодулите"
 
-#: builtin/push.c:509
+#: builtin/push.c:518
 msgid "use thin pack"
 msgstr "използване на съкратени пакети"
 
-#: builtin/push.c:510 builtin/push.c:511
+#: builtin/push.c:519 builtin/push.c:520
 msgid "receive pack program"
 msgstr "програма за получаването на пакети"
 
-#: builtin/push.c:512
+#: builtin/push.c:521
 msgid "set upstream for git pull/status"
 msgstr "задаване на отдалеченото хранилище за командите „git pull/status“"
 
-#: builtin/push.c:515
+#: builtin/push.c:524
 msgid "prune locally removed refs"
 msgstr "окастряне на указателите, които са премахнати от локалното хранилище"
 
-#: builtin/push.c:517
+#: builtin/push.c:526
 msgid "bypass pre-push hook"
 msgstr "без изпълнение на куката преди изтласкване (pre-push)"
 
-#: builtin/push.c:518
+#: builtin/push.c:527
 msgid "push missing but relevant tags"
 msgstr ""
 "изтласкване на липсващите в отдалеченото хранилище, но свързани с текущото "
 "изтласкване, етикети"
 
-#: builtin/push.c:520
+#: builtin/push.c:529
 msgid "GPG sign the push"
 msgstr "подписване на изтласкването с GPG"
 
-#: builtin/push.c:529
+#: builtin/push.c:530
+msgid "request atomic transaction on remote side"
+msgstr "изискване на атомарни операции от отсрещната страна"
+
+#: builtin/push.c:539
 msgid "--delete is incompatible with --all, --mirror and --tags"
 msgstr ""
 "опцията „--delete“ е несъвместима с опциите  „--all“, „--mirror“ и „--tags“"
 
-#: builtin/push.c:531
+#: builtin/push.c:541
 msgid "--delete doesn't make sense without any refs"
 msgstr "опцията „--delete“ изисква поне един указател на версия"
 
 #: builtin/read-tree.c:37
 msgid ""
 "git read-tree [[-m [--trivial] [--aggressive] | --reset | --prefix=<prefix>] "
@@ -8792,44 +8845,44 @@
 
 #: builtin/read-tree.c:139
 msgid "debug unpack-trees"
 msgstr "изчистване на грешки в командата „unpack-trees“"
 
 # FIXME
-#: builtin/reflog.c:499
+#: builtin/reflog.c:429
 #, c-format
 msgid "%s' for '%s' is not a valid timestamp"
 msgstr "„%s“ не е правилна стойност за време за „%s“"
 
-#: builtin/reflog.c:615 builtin/reflog.c:620
+#: builtin/reflog.c:546 builtin/reflog.c:551
 #, c-format
 msgid "'%s' is not a valid timestamp"
 msgstr "„%s“ не е правилна стойност за време"
 
 #: builtin/remote.c:12
 msgid "git remote [-v | --verbose]"
 msgstr "git remote [-v | --verbose]"
 
 #: builtin/remote.c:13
 msgid ""
-"git remote add [-t <branch>] [-m <master>] [-f] [--tags|--no-tags] [--"
+"git remote add [-t <branch>] [-m <master>] [-f] [--tags | --no-tags] [--"
 "mirror=<fetch|push>] <name> <url>"
 msgstr ""
-"git remote add [-t КЛОН] [-m ОСНОВЕН_КЛОН] [-f] [--tags|--no-tags] [--"
+"git remote add [-t КЛОН] [-m ОСНОВЕН_КЛОН] [-f] [--tags | --no-tags] [--"
 "mirror=<fetch|push>] ИМЕ АДРЕС"
 
 #: builtin/remote.c:14 builtin/remote.c:33
 msgid "git remote rename <old> <new>"
 msgstr "git remote rename СТАРО_ИМЕ НОВО_ИМЕ"
 
 #: builtin/remote.c:15 builtin/remote.c:38
 msgid "git remote remove <name>"
 msgstr "git remote remove ИМЕ"
 
-#: builtin/remote.c:16
-msgid "git remote set-head <name> (-a | --auto | -d | --delete |<branch>)"
+#: builtin/remote.c:16 builtin/remote.c:43
+msgid "git remote set-head <name> (-a | --auto | -d | --delete | <branch>)"
 msgstr "git remote set-head ИМЕ (-a | --auto | -d | --delete | КЛОН)"
 
 #: builtin/remote.c:17
 msgid "git remote [-v | --verbose] show [-n] <name>"
 msgstr "git remote [-v | --verbose] show [-n] ИМЕ"
 
@@ -8861,16 +8914,12 @@
 msgstr "git remote set-url --delete ИМЕ АДРЕС"
 
 #: builtin/remote.c:28
 msgid "git remote add [<options>] <name> <url>"
 msgstr "git remote add [ОПЦИЯ…] ИМЕ АДРЕС"
 
-#: builtin/remote.c:43
-msgid "git remote set-head <name> (-a | --auto | -d | --delete | <branch>)"
-msgstr "git remote set-head ИМЕ (-a | --auto | -d | --delete | КЛОН)"
-
 #: builtin/remote.c:48
 msgid "git remote set-branches <name> <branch>..."
 msgstr "git remote set-branches ИМЕ КЛОН…"
 
 #: builtin/remote.c:49
 msgid "git remote set-branches --add <name> <branch>..."
@@ -8944,98 +8993,98 @@
 #: builtin/remote.c:177
 msgid "specifying branches to track makes sense only with fetch mirrors"
 msgstr ""
 "указването на следени клони е смислено само за отдалечени хранилища, от "
 "които се доставя"
 
-#: builtin/remote.c:185 builtin/remote.c:641
+#: builtin/remote.c:187 builtin/remote.c:643
 #, c-format
 msgid "remote %s already exists."
 msgstr "вече съществува отдалечено хранилище с име „%s“."
 
-#: builtin/remote.c:189 builtin/remote.c:645
+#: builtin/remote.c:191 builtin/remote.c:647
 #, c-format
 msgid "'%s' is not a valid remote name"
 msgstr "„%s“ е неправилно име за отдалечено хранилище"
 
-#: builtin/remote.c:233
+#: builtin/remote.c:235
 #, c-format
 msgid "Could not setup master '%s'"
 msgstr "Основният клон „%s“ не може да бъде настроен"
 
-#: builtin/remote.c:333
+#: builtin/remote.c:335
 #, c-format
 msgid "Could not get fetch map for refspec %s"
 msgstr "Обектите за доставяне за указателя „%s“ не могат да бъдат получени"
 
-#: builtin/remote.c:434 builtin/remote.c:442
+#: builtin/remote.c:436 builtin/remote.c:444
 msgid "(matching)"
 msgstr "(съвпадащи)"
 
-#: builtin/remote.c:446
+#: builtin/remote.c:448
 msgid "(delete)"
 msgstr "(за изтриване)"
 
-#: builtin/remote.c:590 builtin/remote.c:596 builtin/remote.c:602
+#: builtin/remote.c:592 builtin/remote.c:598 builtin/remote.c:604
 #, c-format
 msgid "Could not append '%s' to '%s'"
 msgstr "„%s“ не може да се добави към „%s“"
 
-#: builtin/remote.c:634 builtin/remote.c:798 builtin/remote.c:898
+#: builtin/remote.c:636 builtin/remote.c:795 builtin/remote.c:895
 #, c-format
 msgid "No such remote: %s"
 msgstr "Такова отдалечено хранилище няма: %s"
 
-#: builtin/remote.c:651
+#: builtin/remote.c:653
 #, c-format
 msgid "Could not rename config section '%s' to '%s'"
 msgstr "Разделът „%s“ в настройките не може да бъде преименуван на „%s“"
 
-#: builtin/remote.c:657 builtin/remote.c:850
+#: builtin/remote.c:659 builtin/remote.c:847
 #, c-format
 msgid "Could not remove config section '%s'"
 msgstr "Разделът „%s“ в настройките не може да бъде изтрит"
 
 # FIXME tabulator
-#: builtin/remote.c:672
+#: builtin/remote.c:674
 #, c-format
 msgid ""
 "Not updating non-default fetch refspec\n"
 "\t%s\n"
 "\tPlease update the configuration manually if necessary."
 msgstr ""
 "Нестандартните указатели за доставяне няма да бъдат обновени\n"
 "    %s\n"
 "  Променете настройките ръчно, ако е необходимо."
 
-#: builtin/remote.c:678
+#: builtin/remote.c:680
 #, c-format
 msgid "Could not append '%s'"
 msgstr "Разделът „%s“ не може да бъде добавен в настройките"
 
-#: builtin/remote.c:689
+#: builtin/remote.c:691
 #, c-format
 msgid "Could not set '%s'"
 msgstr "Разделът „%s“ не може да бъде зададен в настройките"
 
-#: builtin/remote.c:711
+#: builtin/remote.c:713
 #, c-format
 msgid "deleting '%s' failed"
 msgstr "неуспешно изтриване на „%s“"
 
-#: builtin/remote.c:745
+#: builtin/remote.c:747
 #, c-format
 msgid "creating '%s' failed"
 msgstr "неуспешно създаване на „%s“"
 
-#: builtin/remote.c:769
+#: builtin/remote.c:766
 #, c-format
 msgid "Could not remove branch %s"
 msgstr "Клонът „%s“ не може да бъде изтрит"
 
-#: builtin/remote.c:836
+#: builtin/remote.c:833
 msgid ""
 "Note: A branch outside the refs/remotes/ hierarchy was not removed;\n"
 "to delete it, use:"
 msgid_plural ""
 "Note: Some branches outside the refs/remotes/ hierarchy were not removed;\n"
 "to delete them, use:"
@@ -9043,360 +9092,360 @@
 "Бележка: Клон извън йерархията „refs/remotes/“ не бе изтрит.\n"
 "Изтрийте го чрез командата:"
 msgstr[1] ""
 "Бележка: Няколко клона извън йерархията „refs/remotes/“ не бяха изтрити.\n"
 "Изтрийте ги чрез командата:"
 
-#: builtin/remote.c:951
+#: builtin/remote.c:948
 #, c-format
 msgid " new (next fetch will store in remotes/%s)"
 msgstr " нов (следващото доставяне ще го разположи в „remotes/%s“)"
 
-#: builtin/remote.c:954
+#: builtin/remote.c:951
 msgid " tracked"
 msgstr " следен"
 
-#: builtin/remote.c:956
+#: builtin/remote.c:953
 msgid " stale (use 'git remote prune' to remove)"
 msgstr " стар (изтрийте чрез „git remote prune“)"
 
 # FIXME
-#: builtin/remote.c:958
+#: builtin/remote.c:955
 msgid " ???"
 msgstr " неясно състояние"
 
 # CHECK
-#: builtin/remote.c:999
+#: builtin/remote.c:996
 #, c-format
 msgid "invalid branch.%s.merge; cannot rebase onto > 1 branch"
 msgstr ""
 "неправилен клон за сливане „%s“. Невъзможно е да пребазирате върху повече от "
 "1 клон"
 
-#: builtin/remote.c:1006
+#: builtin/remote.c:1003
 #, c-format
 msgid "rebases onto remote %s"
 msgstr "пребазиране върху отдалечения клон „%s“"
 
-#: builtin/remote.c:1009
+#: builtin/remote.c:1006
 #, c-format
 msgid " merges with remote %s"
 msgstr " сливане с отдалечения клон „%s“"
 
-#: builtin/remote.c:1010
+#: builtin/remote.c:1007
 msgid "    and with remote"
 msgstr "    и с отдалечения клон"
 
-#: builtin/remote.c:1012
+#: builtin/remote.c:1009
 #, c-format
 msgid "merges with remote %s"
 msgstr "сливане с отдалечения клон „%s“"
 
-#: builtin/remote.c:1013
+#: builtin/remote.c:1010
 msgid "   and with remote"
 msgstr "   и с отдалечения клон"
 
-#: builtin/remote.c:1059
+#: builtin/remote.c:1056
 msgid "create"
 msgstr "създаден"
 
-#: builtin/remote.c:1062
+#: builtin/remote.c:1059
 msgid "delete"
 msgstr "изтрит"
 
-#: builtin/remote.c:1066
+#: builtin/remote.c:1063
 msgid "up to date"
 msgstr "актуален"
 
-#: builtin/remote.c:1069
+#: builtin/remote.c:1066
 msgid "fast-forwardable"
 msgstr "може да се слее тривиално"
 
-#: builtin/remote.c:1072
+#: builtin/remote.c:1069
 msgid "local out of date"
 msgstr "локалният е изостанал"
 
-#: builtin/remote.c:1079
+#: builtin/remote.c:1076
 #, c-format
 msgid "    %-*s forces to %-*s (%s)"
 msgstr "    %-*s принудително изтласква към %-*s (%s)"
 
-#: builtin/remote.c:1082
+#: builtin/remote.c:1079
 #, c-format
 msgid "    %-*s pushes to %-*s (%s)"
 msgstr "    %-*s изтласква към %-*s (%s)"
 
-#: builtin/remote.c:1086
+#: builtin/remote.c:1083
 #, c-format
 msgid "    %-*s forces to %s"
 msgstr "    %-*s принудително изтласква към %s"
 
-#: builtin/remote.c:1089
+#: builtin/remote.c:1086
 #, c-format
 msgid "    %-*s pushes to %s"
 msgstr "    %-*s изтласква към %s"
 
-#: builtin/remote.c:1157
+#: builtin/remote.c:1154
 msgid "do not query remotes"
 msgstr "без заявки към отдалечените хранилища"
 
-#: builtin/remote.c:1184
+#: builtin/remote.c:1181
 #, c-format
 msgid "* remote %s"
 msgstr "● отдалечено хранилище „%s“"
 
-#: builtin/remote.c:1185
+#: builtin/remote.c:1182
 #, c-format
 msgid "  Fetch URL: %s"
 msgstr "  Адрес за доставяне: %s"
 
-#: builtin/remote.c:1186 builtin/remote.c:1333
+#: builtin/remote.c:1183 builtin/remote.c:1334
 msgid "(no URL)"
 msgstr "(без адрес)"
 
 # FIXME spaces betwen Push and URL
-#: builtin/remote.c:1195 builtin/remote.c:1197
+#: builtin/remote.c:1192 builtin/remote.c:1194
 #, c-format
 msgid "  Push  URL: %s"
 msgstr "  Адрес за изтласкване: %s"
 
-#: builtin/remote.c:1199 builtin/remote.c:1201 builtin/remote.c:1203
+#: builtin/remote.c:1196 builtin/remote.c:1198 builtin/remote.c:1200
 #, c-format
 msgid "  HEAD branch: %s"
 msgstr "  клон сочен от HEAD: %s"
 
-#: builtin/remote.c:1205
+#: builtin/remote.c:1202
 #, c-format
 msgid ""
 "  HEAD branch (remote HEAD is ambiguous, may be one of the following):\n"
 msgstr ""
 "  клонът сочен от HEAD (клонът указан във файла HEAD от отдалеченото "
 "хранилище е\n"
 "  нееднозначен и е някой от следните):\n"
 
-#: builtin/remote.c:1217
+#: builtin/remote.c:1214
 #, c-format
 msgid "  Remote branch:%s"
 msgid_plural "  Remote branches:%s"
 msgstr[0] "  Отдалечен клон:%s"
 msgstr[1] "  Отдалечени клони:%s"
 
-#: builtin/remote.c:1220 builtin/remote.c:1247
+#: builtin/remote.c:1217 builtin/remote.c:1244
 msgid " (status not queried)"
 msgstr " (състоянието не бе проверено)"
 
-#: builtin/remote.c:1229
+#: builtin/remote.c:1226
 msgid "  Local branch configured for 'git pull':"
 msgid_plural "  Local branches configured for 'git pull':"
 msgstr[0] "  Локален клон настроен за издърпване чрез „git pull“:"
 msgstr[1] "  Локални клони настроени за издърпване чрез „git pull“:"
 
-#: builtin/remote.c:1237
+#: builtin/remote.c:1234
 msgid "  Local refs will be mirrored by 'git push'"
 msgstr "  Локалните указатели ще бъдат пренесени чрез „ push“"
 
-#: builtin/remote.c:1244
+#: builtin/remote.c:1241
 #, c-format
 msgid "  Local ref configured for 'git push'%s:"
 msgid_plural "  Local refs configured for 'git push'%s:"
 msgstr[0] "  Локалният указател, настроен за „git push“%s:"
 msgstr[1] "  Локалните указатели, настроени за „git push“%s:"
 
-#: builtin/remote.c:1265
+#: builtin/remote.c:1262
 msgid "set refs/remotes/<name>/HEAD according to remote"
 msgstr "задаване на refs/remotes/ИМЕ/HEAD според отдалеченото хранилище"
 
-#: builtin/remote.c:1267
+#: builtin/remote.c:1264
 msgid "delete refs/remotes/<name>/HEAD"
 msgstr "изтриване на refs/remotes/ИМЕ/HEAD"
 
-#: builtin/remote.c:1282
+#: builtin/remote.c:1279
 msgid "Cannot determine remote HEAD"
 msgstr "Не може да се установи отдалеченият връх"
 
-#: builtin/remote.c:1284
+#: builtin/remote.c:1281
 msgid "Multiple remote HEAD branches. Please choose one explicitly with:"
 msgstr ""
 "Множество клони с върхове. Изберете изрично някой от тях чрез командата:"
 
-#: builtin/remote.c:1294
+#: builtin/remote.c:1291
 #, c-format
 msgid "Could not delete %s"
 msgstr "„%s“ не може да бъде изтрит"
 
-#: builtin/remote.c:1302
+#: builtin/remote.c:1299
 #, c-format
 msgid "Not a valid ref: %s"
 msgstr "Неправилен указател: %s"
 
-#: builtin/remote.c:1304
+#: builtin/remote.c:1301
 #, c-format
 msgid "Could not setup %s"
 msgstr "„%s“ не може да се настрои"
 
-#: builtin/remote.c:1322
+#: builtin/remote.c:1319
 #, c-format
 msgid " %s will become dangling!"
 msgstr "„%s“ ще се превърне в обект извън клоните!"
 
-#: builtin/remote.c:1323
+#: builtin/remote.c:1320
 #, c-format
 msgid " %s has become dangling!"
 msgstr "„%s“ се превърна в обект извън клоните!"
 
-#: builtin/remote.c:1329
+#: builtin/remote.c:1330
 #, c-format
 msgid "Pruning %s"
 msgstr "Окастряне на „%s“"
 
-#: builtin/remote.c:1330
+#: builtin/remote.c:1331
 #, c-format
 msgid "URL: %s"
 msgstr "адрес: %s"
 
-#: builtin/remote.c:1357
+#: builtin/remote.c:1354
 #, c-format
 msgid " * [would prune] %s"
 msgstr " ● [ще бъде окастрено] %s"
 
-#: builtin/remote.c:1360
+#: builtin/remote.c:1357
 #, c-format
 msgid " * [pruned] %s"
 msgstr " ● [окастрено] %s"
 
-#: builtin/remote.c:1405
+#: builtin/remote.c:1402
 msgid "prune remotes after fetching"
 msgstr "окастряне на огледалата на отдалечените хранилища след доставяне"
 
-#: builtin/remote.c:1471 builtin/remote.c:1545
+#: builtin/remote.c:1468 builtin/remote.c:1542
 #, c-format
 msgid "No such remote '%s'"
 msgstr "Няма отдалечено хранилище на име „%s“"
 
-#: builtin/remote.c:1491
+#: builtin/remote.c:1488
 msgid "add branch"
 msgstr "добавяне на клон"
 
-#: builtin/remote.c:1498
+#: builtin/remote.c:1495
 msgid "no remote specified"
 msgstr "не е указано отдалечено хранилище"
 
-#: builtin/remote.c:1520
+#: builtin/remote.c:1517
 msgid "manipulate push URLs"
 msgstr "промяна на адресите за изтласкване"
 
-#: builtin/remote.c:1522
+#: builtin/remote.c:1519
 msgid "add URL"
 msgstr "добавяне на адреси"
 
-#: builtin/remote.c:1524
+#: builtin/remote.c:1521
 msgid "delete URLs"
 msgstr "изтриване на адреси"
 
 # FIXME message - incompatible
-#: builtin/remote.c:1531
+#: builtin/remote.c:1528
 msgid "--add --delete doesn't make sense"
 msgstr "опциите „--add“ и „--delete“ са несъвместими"
 
-#: builtin/remote.c:1571
+#: builtin/remote.c:1568
 #, c-format
 msgid "Invalid old URL pattern: %s"
 msgstr "Неправилен (стар) формат за адрес: %s"
 
-#: builtin/remote.c:1579
+#: builtin/remote.c:1576
 #, c-format
 msgid "No such URL found: %s"
 msgstr "Такъв адрес не е открит: %s"
 
 # FIXME CHECK MEANING
-#: builtin/remote.c:1581
+#: builtin/remote.c:1578
 msgid "Will not delete all non-push URLs"
 msgstr "Никой от адресите, които не са за изтласкване, няма да се изтрие"
 
-#: builtin/remote.c:1595
+#: builtin/remote.c:1592
 msgid "be verbose; must be placed before a subcommand"
 msgstr "повече подробности. Поставя се пред подкоманда"
 
 #: builtin/repack.c:17
-msgid "git repack [options]"
+msgid "git repack [<options>]"
 msgstr "git repack [ОПЦИЯ…]"
 
-#: builtin/repack.c:160
+#: builtin/repack.c:159
 msgid "pack everything in a single pack"
 msgstr "пакетиране на всичко в пакет"
 
-#: builtin/repack.c:162
+#: builtin/repack.c:161
 msgid "same as -a, and turn unreachable objects loose"
 msgstr ""
 "същото като опцията „-a“. Допълнително — недостижимите обекти да станат "
 "непакетирани"
 
-#: builtin/repack.c:165
+#: builtin/repack.c:164
 msgid "remove redundant packs, and run git-prune-packed"
 msgstr ""
 "премахване на ненужните пакетирани файлове и изпълнение на командата „git-"
 "prune-packed“"
 
-#: builtin/repack.c:167
+#: builtin/repack.c:166
 msgid "pass --no-reuse-delta to git-pack-objects"
 msgstr "подаване на опцията „--no-reuse-delta“ на командата „git-pack-objects“"
 
-#: builtin/repack.c:169
+#: builtin/repack.c:168
 msgid "pass --no-reuse-object to git-pack-objects"
 msgstr ""
 "подаване на опцията „--no-reuse-object“ на командата „git-pack-objects“"
 
-#: builtin/repack.c:171
+#: builtin/repack.c:170
 msgid "do not run git-update-server-info"
 msgstr "без изпълнение на командата „git-update-server-info“"
 
-#: builtin/repack.c:174
+#: builtin/repack.c:173
 msgid "pass --local to git-pack-objects"
 msgstr "подаване на опцията „--local“ на командата „git-pack-objects“"
 
-#: builtin/repack.c:176
+#: builtin/repack.c:175
 msgid "write bitmap index"
 msgstr "създаване и записване на индекси на база битови маски"
 
-#: builtin/repack.c:177
+#: builtin/repack.c:176
 msgid "approxidate"
 msgstr "евристична дата"
 
-#: builtin/repack.c:178
+#: builtin/repack.c:177
 msgid "with -A, do not loosen objects older than this"
 msgstr ""
 "при комбинирането с опцията „-A“ — без разпакетиране на обектите по стари от "
 "това"
 
-#: builtin/repack.c:180
+#: builtin/repack.c:179
 msgid "size of the window used for delta compression"
 msgstr "размер на прозореца за делта компресията"
 
-#: builtin/repack.c:181 builtin/repack.c:185
+#: builtin/repack.c:180 builtin/repack.c:184
 msgid "bytes"
 msgstr "байтове"
 
-#: builtin/repack.c:182
+#: builtin/repack.c:181
 msgid "same as the above, but limit memory size instead of entries count"
 msgstr ""
 "същото като горната опция, но ограничението да е по размер на паметта, а не "
 "по броя на обектите"
 
-#: builtin/repack.c:184
+#: builtin/repack.c:183
 msgid "limits the maximum delta depth"
 msgstr "ограничаване на максималната дълбочина на делтата"
 
-#: builtin/repack.c:186
+#: builtin/repack.c:185
 msgid "maximum size of each packfile"
 msgstr "максимален размер на всеки пакет"
 
-#: builtin/repack.c:188
+#: builtin/repack.c:187
 msgid "repack objects in packs marked with .keep"
 msgstr "препакетиране на обектите в пакети белязани с „.keep“"
 
-#: builtin/repack.c:374
+#: builtin/repack.c:375
 #, c-format
 msgid "removing '%s' failed"
 msgstr "неуспешно изтриване на „%s“"
 
 #: builtin/replace.c:19
 msgid "git replace [-f] <object> <replacement>"
@@ -9482,13 +9531,13 @@
 
 #: builtin/replace.c:438
 msgid "use this format"
 msgstr "използване на този ФОРМАТ"
 
 #: builtin/rerere.c:12
-msgid "git rerere [clear | forget path... | status | remaining | diff | gc]"
+msgid "git rerere [clear | forget <path>... | status | remaining | diff | gc]"
 msgstr "git rerere [clear | forget ПЪТ… | status | remaining | diff | gc]"
 
 #: builtin/rerere.c:57
 msgid "register clean resolutions in index"
 msgstr "регистриране на чисти корекции на конфликти в индекса"
 
@@ -9627,14 +9676,14 @@
 
 #: builtin/reset.c:374
 msgid "Could not write new index file."
 msgstr "Новият индекс не може да бъде записан."
 
 #: builtin/rev-parse.c:361
-msgid "git rev-parse --parseopt [options] -- [<args>...]"
-msgstr "git rev-parse --parseopt [ОПЦИЯ…] -- [АРГУМЕНТИ…]"
+msgid "git rev-parse --parseopt [<options>] -- [<args>...]"
+msgstr "git rev-parse --parseopt [ОПЦИЯ…] -- [АРГУМЕНТ…]"
 
 #: builtin/rev-parse.c:366
 msgid "keep the `--` passed as an arg"
 msgstr "зададеният низ „--“ да се тълкува като аргумент"
 
 #: builtin/rev-parse.c:368
@@ -9644,35 +9693,35 @@
 #: builtin/rev-parse.c:371
 msgid "output in stuck long form"
 msgstr "изход в дългия формат"
 
 #: builtin/rev-parse.c:499
 msgid ""
-"git rev-parse --parseopt [options] -- [<args>...]\n"
+"git rev-parse --parseopt [<options>] -- [<args>...]\n"
 "   or: git rev-parse --sq-quote [<arg>...]\n"
-"   or: git rev-parse [options] [<arg>...]\n"
+"   or: git rev-parse [<options>] [<arg>...]\n"
 "\n"
 "Run \"git rev-parse --parseopt -h\" for more information on the first usage."
 msgstr ""
-"git rev-parse --parseopt [ОПЦИЯ…] -- [АРГУМЕНТИ…]\n"
-"   или: git rev-parse --sq-quote [АРГУМЕНТИ…]\n"
-"   или: git rev-parse [ОПЦИЯ…] [АРГУМЕНТИ…]\n"
+"git rev-parse --parseopt [ОПЦИЯ…] -- [АРГУМЕНТ…]\n"
+"   или: git rev-parse --sq-quote [АРГУМЕНТ…]\n"
+"   или: git rev-parse [ОПЦИЯ…] [АРГУМЕНТ…]\n"
 "\n"
 "За повече информация за първия вариант изпълнете „git rev-parse --parseopt -"
 "h“"
 
 #: builtin/revert.c:22
-msgid "git revert [options] <commit-ish>..."
+msgid "git revert [<options>] <commit-ish>..."
 msgstr "git revert [ОПЦИЯ…] УКАЗАТЕЛ_КЪМ_ПОДАВАНЕ…"
 
 #: builtin/revert.c:23
 msgid "git revert <subcommand>"
 msgstr "git revert ПОДКОМАНДА"
 
 #: builtin/revert.c:28
-msgid "git cherry-pick [options] <commit-ish>..."
+msgid "git cherry-pick [<options>] <commit-ish>..."
 msgstr "git cherry-pick [ОПЦИЯ…] УКАЗАТЕЛ_КЪМ_ПОДАВАНЕ…"
 
 #: builtin/revert.c:29
 msgid "git cherry-pick <subcommand>"
 msgstr "git cherry-pick ПОДКОМАНДА"
 
@@ -9747,13 +9796,13 @@
 
 #: builtin/revert.c:212
 msgid "cherry-pick failed"
 msgstr "неуспешно отбиране"
 
 #: builtin/rm.c:17
-msgid "git rm [options] [--] <file>..."
+msgid "git rm [<options>] [--] <file>..."
 msgstr "git rm [ОПЦИЯ…] [--] ФАЙЛ…"
 
 #: builtin/rm.c:65
 msgid ""
 "the following submodule (or one of its nested submodules)\n"
 "uses a .git directory:"
@@ -9858,13 +9907,13 @@
 #: builtin/rm.c:375
 #, c-format
 msgid "git rm: unable to remove %s"
 msgstr "git rm: „%s“ не може да се изтрие"
 
 #: builtin/shortlog.c:13
-msgid "git shortlog [<options>] [<revision range>] [[--] [<path>...]]"
+msgid "git shortlog [<options>] [<revision-range>] [[--] [<path>...]]"
 msgstr "git shortlog [ОПЦИЯ…] [ДИАПАЗОН_НА_ВЕРСИИТЕ] [[--] [ПЪТ…]]"
 
 #: builtin/shortlog.c:131
 #, c-format
 msgid "Missing author: %s"
 msgstr "Авторът липсва: %s"
@@ -9891,99 +9940,99 @@
 msgstr ""
 "Пренасяне на редовете до тази обща ШИРОЧИНА (76), с ОТСТЪП_1 (6) за първия "
 "ред и ОТСТЪП_2 (9) за останалите"
 
 #: builtin/show-branch.c:9
 msgid ""
-"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order] [--"
-"current] [--color[=<when>] | --no-color] [--sparse] [--more=<n> | --list | --"
-"independent | --merge-base] [--no-name | --sha1-name] [--topics] [(<rev> | "
-"<glob>)...]"
-msgstr ""
-"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order] [--"
-"current] [--color[=КОГА] | --no-color] [--sparse] [--more=БРОЙ | --list | --"
-"independent | --merge-base] [--no-name | --sha1-name] [--topics] [(РЕВИЗИЯ | "
-"УКАЗАТЕЛ)…]"
-
-#: builtin/show-branch.c:10
-msgid "git show-branch (-g|--reflog)[=<n>[,<base>]] [--list] [<ref>]"
-msgstr "git show-branch (-g|--reflog)[=БРОЙ[,БАЗА]] [--list] [УКАЗАТЕЛ]"
+"git show-branch [-a | --all] [-r | --remotes] [--topo-order | --date-order]\n"
+"\t\t[--current] [--color[=<when>] | --no-color] [--sparse]\n"
+"\t\t[--more=<n> | --list | --independent | --merge-base]\n"
+"\t\t[--no-name | --sha1-name] [--topics] [(<rev> | <glob>)...]"
+msgstr ""
+"git show-branch [-a | --all] [-r | --remotes] [--topo-order | --date-order]\n"
+"    [--current] [--color[=КОГА] | --no-color] [--sparse]\n"
+"    [--more=БРОЙ | --list | --independent | --merge-base]\n"
+"    [--no-name | --sha1-name] [--topics] [(РЕВИЗИЯ | УКАЗАТЕЛ)…]"
+
+#: builtin/show-branch.c:13
+msgid "git show-branch (-g | --reflog)[=<n>[,<base>]] [--list] [<ref>]"
+msgstr "git show-branch (-g | --reflog)[=БРОЙ[,БАЗА]] [--list] [УКАЗАТЕЛ]"
 
-#: builtin/show-branch.c:649
+#: builtin/show-branch.c:652
 msgid "show remote-tracking and local branches"
 msgstr "извеждане на следящите и локалните клони"
 
-#: builtin/show-branch.c:651
+#: builtin/show-branch.c:654
 msgid "show remote-tracking branches"
 msgstr "извеждане на следящите клони"
 
-#: builtin/show-branch.c:653
+#: builtin/show-branch.c:656
 msgid "color '*!+-' corresponding to the branch"
 msgstr "оцветяване на „*!+-“ според клоните"
 
-#: builtin/show-branch.c:655
+#: builtin/show-branch.c:658
 msgid "show <n> more commits after the common ancestor"
 msgstr "извеждане на такъв БРОЙ подавания от общия предшественик"
 
-#: builtin/show-branch.c:657
+#: builtin/show-branch.c:660
 msgid "synonym to more=-1"
 msgstr "синоним на „more=-1“"
 
-#: builtin/show-branch.c:658
+#: builtin/show-branch.c:661
 msgid "suppress naming strings"
 msgstr "без низове за имената на клоните"
 
-#: builtin/show-branch.c:660
+#: builtin/show-branch.c:663
 msgid "include the current branch"
 msgstr "включване и на текущия клон"
 
-#: builtin/show-branch.c:662
+#: builtin/show-branch.c:665
 msgid "name commits with their object names"
 msgstr "именуване на подаванията с имената им на обекти"
 
-#: builtin/show-branch.c:664
+#: builtin/show-branch.c:667
 msgid "show possible merge bases"
 msgstr "извеждане на възможните бази за сливания"
 
-#: builtin/show-branch.c:666
+#: builtin/show-branch.c:669
 msgid "show refs unreachable from any other ref"
 msgstr "извеждане на недостижимите указатели"
 
-#: builtin/show-branch.c:668
+#: builtin/show-branch.c:671
 msgid "show commits in topological order"
 msgstr "извеждане на подаванията в топологическа подредба"
 
-#: builtin/show-branch.c:671
+#: builtin/show-branch.c:674
 msgid "show only commits not on the first branch"
 msgstr "извеждане само на подаванията, които не са от първия клон"
 
-#: builtin/show-branch.c:673
+#: builtin/show-branch.c:676
 msgid "show merges reachable from only one tip"
 msgstr "извеждане на сливанията, които могат да се достигнат само от един връх"
 
-#: builtin/show-branch.c:675
+#: builtin/show-branch.c:678
 msgid "topologically sort, maintaining date order where possible"
 msgstr ""
 "топологическа подредба, при запазване на подредбата по дата, доколкото е\n"
 "възможно"
 
-#: builtin/show-branch.c:678
+#: builtin/show-branch.c:681
 msgid "<n>[,<base>]"
 msgstr "БРОЙ[,БАЗА]"
 
-#: builtin/show-branch.c:679
+#: builtin/show-branch.c:682
 msgid "show <n> most recent ref-log entries starting at base"
 msgstr "показване на най-много БРОЙ журнални записа с начало съответната БАЗА"
 
 # FIXME * -> ...
 #: builtin/show-ref.c:10
 msgid ""
-"git show-ref [-q|--quiet] [--verify] [--head] [-d|--dereference] [-s|--"
-"hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [pattern*] "
+"git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | --"
+"hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<pattern>...]"
 msgstr ""
-"git show-ref [-q|--quiet] [--verify] [--head] [-d|--dereference] [-s|--"
+"git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | --"
 "hash[=ЧИСЛО]] [--abbrev[=ЧИСЛО]] [--tags] [--heads] [--] [ШАБЛОН…]"
 
 # FIXME pattern & ref-list must be in <>
 #: builtin/show-ref.c:11
 msgid "git show-ref --exclude-existing[=pattern] < ref-list"
 msgstr "git show-ref --exclude-existing[=ШАБЛОН] < СПИСЪК_С_УКАЗАТЕЛИ"
@@ -10022,17 +10071,17 @@
 msgid "show refs from stdin that aren't in local repository"
 msgstr ""
 "извеждане на указателите приети от стандартния вход, които липсват в "
 "локалното хранилище"
 
 #: builtin/symbolic-ref.c:7
-msgid "git symbolic-ref [options] name [ref]"
+msgid "git symbolic-ref [<options>] <name> [<ref>]"
 msgstr "git symbolic-ref [ОПЦИЯ…] ИМЕ [УКАЗАТЕЛ]"
 
 #: builtin/symbolic-ref.c:8
-msgid "git symbolic-ref -d [-q] name"
+msgid "git symbolic-ref -d [-q] <name>"
 msgstr "git symbolic-ref -d [-q] ИМЕ"
 
 #: builtin/symbolic-ref.c:40
 msgid "suppress error message for non-symbolic (detached) refs"
 msgstr "без извеждане на грешка за несвързани (несимволни) указатели"
 
@@ -10041,35 +10090,36 @@
 msgstr "изтриване на символен указател"
 
 #: builtin/symbolic-ref.c:42
 msgid "shorten ref output"
 msgstr "кратка информация за указателя"
 
-#: builtin/symbolic-ref.c:43 builtin/update-ref.c:362
+#: builtin/symbolic-ref.c:43 builtin/update-ref.c:358
 msgid "reason"
 msgstr "причина"
 
-#: builtin/symbolic-ref.c:43 builtin/update-ref.c:362
+#: builtin/symbolic-ref.c:43 builtin/update-ref.c:358
 msgid "reason of the update"
 msgstr "причина за обновяването"
 
 #: builtin/tag.c:22
 msgid ""
-"git tag [-a|-s|-u <key-id>] [-f] [-m <msg>|-F <file>] <tagname> [<head>]"
+"git tag [-a | -s | -u <key-id>] [-f] [-m <msg> | -F <file>] <tagname> "
+"[<head>]"
 msgstr ""
-"git tag [-a|-s|-u ИДЕНТИФИКАТОР_НА_КЛЮЧ] [-f] [-m СЪОБЩЕНИЕ|-F ФАЙЛ] ЕТИКЕТ "
-"[ВРЪХ]"
+"git tag [-a | -s | -u ИДЕНТИФИКАТОР_НА_КЛЮЧ] [-f] [-m СЪОБЩЕНИЕ | -F ФАЙЛ] "
+"ЕТИКЕТ [ВРЪХ]"
 
 #: builtin/tag.c:23
 msgid "git tag -d <tagname>..."
 msgstr "git tag -d ЕТИКЕТ…"
 
 # FIXME tabulator
 #: builtin/tag.c:24
 msgid ""
-"git tag -l [-n[<num>]] [--contains <commit>] [--points-at <object>] \n"
+"git tag -l [-n[<num>]] [--contains <commit>] [--points-at <object>]\n"
 "\t\t[<pattern>...]"
 msgstr ""
 "git tag -l [-nБРОЙ] [--contains ПОДАВАНЕ] [--points-at ОБЕКТ] \n"
 "           [ШАБЛОН…]"
 
 #: builtin/tag.c:26
@@ -10212,24 +10262,24 @@
 msgstr "използване на друг ключ за подписването на етикет"
 
 #: builtin/tag.c:607
 msgid "replace the tag if exists"
 msgstr "замяна на етикета, ако съществува"
 
-#: builtin/tag.c:608
+#: builtin/tag.c:609
+msgid "Tag listing options"
+msgstr "Опции за извеждането на етикети"
+
+#: builtin/tag.c:610
 msgid "show tag list in columns"
 msgstr "извеждане на списъка на етикетите по колони"
 
-#: builtin/tag.c:610
+#: builtin/tag.c:612
 msgid "sort tags"
 msgstr "подреждане на етикетите"
 
-#: builtin/tag.c:614
-msgid "Tag listing options"
-msgstr "Опции за извеждането на етикети"
-
 #: builtin/tag.c:617 builtin/tag.c:623
 msgid "print only tags that contain the commit"
 msgstr "извеждане само на етикетите, които съдържат подаването"
 
 #: builtin/tag.c:629
 msgid "print only tags of the object"
@@ -10281,198 +10331,198 @@
 
 #: builtin/unpack-objects.c:489
 msgid "Unpacking objects"
 msgstr "Разпакетиране на обектите"
 
 #: builtin/update-index.c:403
-msgid "git update-index [options] [--] [<file>...]"
+msgid "git update-index [<options>] [--] [<file>...]"
 msgstr "git update-index [ОПЦИЯ…] [--] [ФАЙЛ…]"
 
-#: builtin/update-index.c:756
+#: builtin/update-index.c:757
 msgid "continue refresh even when index needs update"
 msgstr ""
 "продължаване с обновяването, дори когато индексът трябва да бъде обновен"
 
-#: builtin/update-index.c:759
+#: builtin/update-index.c:760
 msgid "refresh: ignore submodules"
 msgstr "подмодулите да се игнорират при обновяването"
 
-#: builtin/update-index.c:762
+#: builtin/update-index.c:763
 msgid "do not ignore new files"
 msgstr "новите файлове да не се игнорират"
 
-#: builtin/update-index.c:764
+#: builtin/update-index.c:765
 msgid "let files replace directories and vice-versa"
 msgstr "файлове да могат да заменят директории и обратно"
 
-#: builtin/update-index.c:766
+#: builtin/update-index.c:767
 msgid "notice files missing from worktree"
 msgstr "предупреждаване при липсващи в работното дърво файлове"
 
-#: builtin/update-index.c:768
+#: builtin/update-index.c:769
 msgid "refresh even if index contains unmerged entries"
 msgstr "обновяване дори и индексът да съдържа неслети обекти"
 
-#: builtin/update-index.c:771
+#: builtin/update-index.c:772
 msgid "refresh stat information"
 msgstr "обновяване на информацията от функцията „stat“"
 
-#: builtin/update-index.c:775
+#: builtin/update-index.c:776
 msgid "like --refresh, but ignore assume-unchanged setting"
 msgstr ""
 "като опцията „--refresh“, но да се проверят и обектите, които са били приети "
 "за непроменени"
 
-#: builtin/update-index.c:779
+#: builtin/update-index.c:780
 msgid "<mode>,<object>,<path>"
 msgstr "РЕЖИМ,ОБЕКТ,ПЪТ"
 
-#: builtin/update-index.c:780
+#: builtin/update-index.c:781
 msgid "add the specified entry to the index"
 msgstr "добавяне на изброените обекти към индекса"
 
-#: builtin/update-index.c:784
+#: builtin/update-index.c:785
 msgid "(+/-)x"
 msgstr "(+/-)x"
 
-#: builtin/update-index.c:785
+#: builtin/update-index.c:786
 msgid "override the executable bit of the listed files"
 msgstr "изрично задаване на стойността на флага дали файлът е изпълним"
 
-#: builtin/update-index.c:789
+#: builtin/update-index.c:790
 msgid "mark files as \"not changing\""
 msgstr "задаване на флаг, че файлът не се променя"
 
-#: builtin/update-index.c:792
+#: builtin/update-index.c:793
 msgid "clear assumed-unchanged bit"
 msgstr "изчистване на флага, че файлът не се променя"
 
-#: builtin/update-index.c:795
+#: builtin/update-index.c:796
 msgid "mark files as \"index-only\""
 msgstr "задаване на флаг, че файловете са само за индекса"
 
-#: builtin/update-index.c:798
+#: builtin/update-index.c:799
 msgid "clear skip-worktree bit"
 msgstr "изчистване на флага,  че файловете са само за индекса"
 
-#: builtin/update-index.c:801
+#: builtin/update-index.c:802
 msgid "add to index only; do not add content to object database"
 msgstr "добавяне само към индекса без добавяне към базата от данни за обектите"
 
-#: builtin/update-index.c:803
+#: builtin/update-index.c:804
 msgid "remove named paths even if present in worktree"
 msgstr "изтриване на указаните пътища, дори и да съществуват в работното дърво"
 
-#: builtin/update-index.c:805
+#: builtin/update-index.c:806
 msgid "with --stdin: input lines are terminated by null bytes"
 msgstr ""
 "при комбиниране с опцията „--stdin“ — входните редове са разделени с нулевия "
 "байт"
 
-#: builtin/update-index.c:807
+#: builtin/update-index.c:808
 msgid "read list of paths to be updated from standard input"
 msgstr "изчитане на списъка с пътища за обновяване от стандартния вход"
 
-#: builtin/update-index.c:811
+#: builtin/update-index.c:812
 msgid "add entries from standard input to the index"
 msgstr "добавяне на елементите от стандартния вход към индекса"
 
-#: builtin/update-index.c:815
+#: builtin/update-index.c:816
 msgid "repopulate stages #2 and #3 for the listed paths"
 msgstr ""
 "възстановяване на състоянието преди сливане или нужда от обновяване за "
 "изброените пътища"
 
-#: builtin/update-index.c:819
+#: builtin/update-index.c:820
 msgid "only update entries that differ from HEAD"
 msgstr "добавяне само на съдържанието, което се различава от това в „HEAD“"
 
-#: builtin/update-index.c:823
+#: builtin/update-index.c:824
 msgid "ignore files missing from worktree"
 msgstr "игнориране на файловете, които липсват в работното дърво"
 
-#: builtin/update-index.c:826
+#: builtin/update-index.c:827
 msgid "report actions to standard output"
 msgstr "извеждане на действията на стандартния изход"
 
-#: builtin/update-index.c:828
+#: builtin/update-index.c:829
 msgid "(for porcelains) forget saved unresolved conflicts"
 msgstr ""
 "забравяне на записаната информация за неразрешени конфликти — за командите "
 "от потребителско ниво"
 
-#: builtin/update-index.c:832
+#: builtin/update-index.c:833
 msgid "write index in this format"
 msgstr "записване на индекса в този формат"
 
-#: builtin/update-index.c:834
+#: builtin/update-index.c:835
 msgid "enable or disable split index"
 msgstr "включване или изключване на разделянето на индекса"
 
 #: builtin/update-ref.c:9
-msgid "git update-ref [options] -d <refname> [<oldval>]"
+msgid "git update-ref [<options>] -d <refname> [<old-val>]"
 msgstr "git update-ref [ОПЦИЯ…] -d ИМЕ_НА_УКАЗАТЕЛ [СТАРА_СТОЙНОСТ]"
 
 # FIXME spaces - not needed in original
 #: builtin/update-ref.c:10
-msgid "git update-ref [options]    <refname> <newval> [<oldval>]"
+msgid "git update-ref [<options>]    <refname> <new-val> [<old-val>]"
 msgstr "git update-ref [ОПЦИЯ…] ИМЕ_НА_УКАЗАТЕЛ НОВА_СТОЙНОСТ [СТАРА_СТОЙНОСТ]"
 
 #: builtin/update-ref.c:11
-msgid "git update-ref [options] --stdin [-z]"
+msgid "git update-ref [<options>] --stdin [-z]"
 msgstr "git update-ref [ОПЦИЯ…] --stdin [-z]"
 
-#: builtin/update-ref.c:363
+#: builtin/update-ref.c:359
 msgid "delete the reference"
 msgstr "изтриване на указателя"
 
-#: builtin/update-ref.c:365
+#: builtin/update-ref.c:361
 msgid "update <refname> not the one it points to"
 msgstr "обновяване на ИМЕто_НА_УКАЗАТЕЛя, а не това, към което сочи"
 
-#: builtin/update-ref.c:366
+#: builtin/update-ref.c:362
 msgid "stdin has NUL-terminated arguments"
 msgstr ""
 "някои от елементите подадени на стандартния вход завършват с нулевия знак "
 "„NUL“"
 
-#: builtin/update-ref.c:367
+#: builtin/update-ref.c:363
 msgid "read updates from stdin"
 msgstr "изчитане на указателите от стандартния вход"
 
 #: builtin/update-server-info.c:6
 msgid "git update-server-info [--force]"
 msgstr "git update-server-info [--force]"
 
 #: builtin/update-server-info.c:14
 msgid "update the info files from scratch"
 msgstr "обновяване на информационните файлове от нулата"
 
 #: builtin/verify-commit.c:17
-msgid "git verify-commit [-v|--verbose] <commit>..."
-msgstr "git verify-tag [-v|--verbose] ПОДАВАНЕ…"
+msgid "git verify-commit [-v | --verbose] <commit>..."
+msgstr "git verify-tag [-v | --verbose] ПОДАВАНЕ…"
 
 #: builtin/verify-commit.c:75
 msgid "print commit contents"
 msgstr "извеждане на съдържанието на подаването"
 
 #: builtin/verify-pack.c:54
-msgid "git verify-pack [-v|--verbose] [-s|--stat-only] <pack>..."
-msgstr "git verify-pack [-v|--verbose] [-s|--stat-only] ПАКЕТ…"
+msgid "git verify-pack [-v | --verbose] [-s | --stat-only] <pack>..."
+msgstr "git verify-pack [-v | --verbose] [-s | --stat-only] ПАКЕТ…"
 
 #: builtin/verify-pack.c:64
 msgid "verbose"
 msgstr "извеждане на подробна информация"
 
 #: builtin/verify-pack.c:66
 msgid "show statistics only"
 msgstr "извеждане само на статистиката"
 
 #: builtin/verify-tag.c:17
-msgid "git verify-tag [-v|--verbose] <tag>..."
-msgstr "git verify-tag [-v|--verbose] ЕТИКЕТ…"
+msgid "git verify-tag [-v | --verbose] <tag>..."
+msgstr "git verify-tag [-v | --verbose] ЕТИКЕТ…"
 
 #: builtin/verify-tag.c:73
 msgid "print tag contents"
 msgstr "извеждане на съдържанието на ЕТИКЕТи"
 
 #: builtin/write-tree.c:13
@@ -10492,13 +10542,13 @@
 msgstr "само за изчистване на грешки"
 
 #: credential-cache--daemon.c:267
 msgid "print debugging messages to stderr"
 msgstr "извеждане на съобщенията за трасиране на стандартната грешка"
 
-#: git.c:17
+#: git.c:14
 msgid ""
 "'git help -a' and 'git help -g' list available subcommands and some\n"
 "concept guides. See 'git help <command>' or 'git help <concept>'\n"
 "to read about a specific subcommand or concept."
 msgstr ""
 "„git help -a“ извежда наличните подкоманди, а „git help -g“ извежда "
@@ -10617,28 +10667,28 @@
 #: rerere.h:27
 msgid "update the index with reused conflict resolution if possible"
 msgstr ""
 "при възможност преизползване на решението на конфликта за обновяване на "
 "индекса"
 
-#: git-am.sh:52
+#: git-am.sh:53
 msgid "You need to set your committer info first"
 msgstr "Първо трябва да зададете информация за себе си"
 
-#: git-am.sh:97
+#: git-am.sh:98
 msgid ""
 "You seem to have moved HEAD since the last 'am' failure.\n"
 "Not rewinding to ORIG_HEAD"
 msgstr ""
 "Изглежда указателят „HEAD“ е променен и не сочи към същия обект както по "
 "времето\n"
 "на последното неуспешно изпълнение на „git am“. Указателят се задава да сочи "
 "към\n"
 "„ORIG_HEAD“"
 
-#: git-am.sh:107
+#: git-am.sh:108
 #, sh-format
 msgid ""
 "When you have resolved this problem, run \"$cmdline --continue\".\n"
 "If you prefer to skip this patch, run \"$cmdline --skip\" instead.\n"
 "To restore the original branch and stop patching, run \"$cmdline --abort\"."
 msgstr ""
@@ -10646,175 +10696,175 @@
 "continue“.\n"
 "За да прескочите тази кръпка, изпълнете командата „$cmdline --skip“.\n"
 "За да възстановите първоначалното състояние и да преустановите прилагането "
 "на \n"
 "кръпки, изпълнете командата „$cmdline --abort“."
 
-#: git-am.sh:123
+#: git-am.sh:124
 msgid "Cannot fall back to three-way merge."
 msgstr "Не може да се премине към тройно сливане."
 
-#: git-am.sh:139
+#: git-am.sh:140
 msgid "Repository lacks necessary blobs to fall back on 3-way merge."
 msgstr ""
 "В хранилището липсват необходимите обекти BLOB, за да се премине към тройно "
 "сливане."
 
-#: git-am.sh:141
+#: git-am.sh:142
 msgid "Using index info to reconstruct a base tree..."
 msgstr "Базовото дърво се реконструира от информацията в индекса…"
 
-#: git-am.sh:156
+#: git-am.sh:157
 msgid ""
 "Did you hand edit your patch?\n"
 "It does not apply to blobs recorded in its index."
 msgstr ""
 "Кръпката не може да се приложи към обектите BLOB в индекса.\n"
 "Да не би да сте я редактирали на ръка?"
 
-#: git-am.sh:165
+#: git-am.sh:166
 msgid "Falling back to patching base and 3-way merge..."
 msgstr "Преминаване към прилагане на кръпка към базата и тройно сливане…"
 
-#: git-am.sh:181
+#: git-am.sh:182
 msgid "Failed to merge in the changes."
 msgstr "Неуспешно сливане на промените."
 
-#: git-am.sh:276
+#: git-am.sh:277
 msgid "Only one StGIT patch series can be applied at once"
 msgstr ""
 "Само една серия кръпки от „StGIT“ може да бъде прилагана в даден момент"
 
-#: git-am.sh:363
+#: git-am.sh:364
 #, sh-format
 msgid "Patch format $patch_format is not supported."
 msgstr "Неподдържан формат на кръпки: „$patch_format“."
 
-#: git-am.sh:365
+#: git-am.sh:366
 msgid "Patch format detection failed."
 msgstr "Форматът на кръпката не може да бъде определен."
 
-#: git-am.sh:392
+#: git-am.sh:398
 msgid ""
 "The -b/--binary option has been a no-op for long time, and\n"
 "it will be removed. Please do not use it anymore."
 msgstr ""
 "Опциите „-b“/„--binary“ отдавна не правят нищо и\n"
 "ще бъдат премахнати в бъдеще. Не ги ползвайте."
 
-#: git-am.sh:486
+#: git-am.sh:496
 #, sh-format
 msgid "previous rebase directory $dotest still exists but mbox given."
 msgstr ""
 "предишната директория за пребазиране „$dotest“ все още съществува, а е "
 "зададен файл „mbox“."
 
 # FIXME better message
-#: git-am.sh:491
+#: git-am.sh:501
 msgid "Please make up your mind. --skip or --abort?"
 msgstr "Опциите „--skip“ и „--abort“ са несъвместими."
 
-#: git-am.sh:527
+#: git-am.sh:537
 #, sh-format
 msgid ""
 "Stray $dotest directory found.\n"
 "Use \"git am --abort\" to remove it."
 msgstr ""
 "Открита е излишна директория „$dotest“.\n"
 "Можете да я изтриете с командата „git am --abort“."
 
-#: git-am.sh:535
+#: git-am.sh:545
 msgid "Resolve operation not in progress, we are not resuming."
 msgstr "В момента не тече операция по коригиране и няма как да се продължи."
 
-#: git-am.sh:601
+#: git-am.sh:612
 #, sh-format
 msgid "Dirty index: cannot apply patches (dirty: $files)"
 msgstr ""
 "Индексът не е чист: кръпките не могат да бъдат приложени (замърсени са: "
 "$files)"
 
 # FIXME spaces
-#: git-am.sh:705
+#: git-am.sh:722
 #, sh-format
 msgid ""
 "Patch is empty.  Was it split wrong?\n"
 "If you would prefer to skip this patch, instead run \"$cmdline --skip\".\n"
 "To restore the original branch and stop patching run \"$cmdline --abort\"."
 msgstr ""
 "Кръпката е празна. Честа причина за това е неправилно разделяне на кръпки.\n"
 "За да прескочите тази кръпка, изпълнете командата „$cmdline --skip“.\n"
 "За да възстановите първоначалното състояние и да преустановите прилагането "
 "на \n"
 "кръпки, изпълнете командата „$cmdline --abort“."
 
-#: git-am.sh:732
+#: git-am.sh:749
 msgid "Patch does not have a valid e-mail address."
 msgstr "Кръпката не съдържа валиден адрес за е-поща."
 
-#: git-am.sh:779
+#: git-am.sh:796
 msgid "cannot be interactive without stdin connected to a terminal."
 msgstr ""
 "За интерактивно изпълнение е необходимо стандартният\n"
 "изход да е свързан с терминал, а в момента не е."
 
-#: git-am.sh:783
+#: git-am.sh:800
 msgid "Commit Body is:"
 msgstr "Тялото на кръпката за прилагане е:"
 
 #. TRANSLATORS: Make sure to include [y], [n], [e], [v] and [a]
 #. in your translation. The program will only accept English
 #. input at this point.
-#: git-am.sh:790
+#: git-am.sh:807
 msgid "Apply? [y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all "
 msgstr ""
 "Прилагане? „y“ — да/„n“ — не/„e“ — редактиране/„v“ — преглед/„a“ — приемане "
 "на всичко"
 
-#: git-am.sh:826
+#: git-am.sh:843
 #, sh-format
 msgid "Applying: $FIRSTLINE"
 msgstr "Прилагане: $FIRSTLINE"
 
-#: git-am.sh:847
+#: git-am.sh:864
 msgid ""
 "No changes - did you forget to use 'git add'?\n"
 "If there is nothing left to stage, chances are that something else\n"
 "already introduced the same changes; you might want to skip this patch."
 msgstr ""
 "Без промени — възможно е да не сте изпълнили „git add“.\n"
 "Ако няма друга промяна за включване в индекса, най-вероятно някоя друга\n"
 "кръпка е довела до същите промени и в такъв случай просто пропуснете тази."
 
-#: git-am.sh:855
+#: git-am.sh:872
 msgid ""
 "You still have unmerged paths in your index\n"
 "did you forget to use 'git add'?"
 msgstr ""
 "Индексът все още съдържа неслети промени — възможно е да не сте изпълнили "
 "„git add“."
 
-#: git-am.sh:871
+#: git-am.sh:888
 msgid "No changes -- Patch already applied."
 msgstr "Без промени — кръпката вече е приложена."
 
-#: git-am.sh:881
+#: git-am.sh:898
 #, sh-format
 msgid "Patch failed at $msgnum $FIRSTLINE"
 msgstr "Неуспешно прилагане на кръпката „$msgnum“: „$FIRSTLINE“"
 
-#: git-am.sh:884
+#: git-am.sh:901
 #, sh-format
 msgid ""
 "The copy of the patch that failed is found in:\n"
 "   $dotest/patch"
 msgstr ""
 "Дубликат на проблемната кръпка се намира в:\n"
 "   $dotest/patch"
 
-#: git-am.sh:902
+#: git-am.sh:919
 msgid "applying to an empty history"
 msgstr "прилагане върху празна история"
 
 #: git-bisect.sh:48
 msgid "You need to start by \"git bisect start\""
 msgstr "Започнете като изпълните командата „git bisect start“"
@@ -10841,16 +10891,16 @@
 msgid "Bad HEAD - I need a HEAD"
 msgstr "Текущият указател „HEAD“ е неправилен."
 
 #: git-bisect.sh:130
 #, sh-format
 msgid ""
-"Checking out '$start_head' failed. Try 'git bisect reset <validbranch>'."
+"Checking out '$start_head' failed. Try 'git bisect reset <valid-branch>'."
 msgstr ""
 "Неуспешно преминаване към „$start_head“. Изпълнете командата „git bisect "
-"reset СЪОТВЕТНИЯ_КЛОН“."
+"reset СЪЩЕСТВУВАЩ_КЛОН“."
 
 #: git-bisect.sh:140
 msgid "won't bisect on cg-seek'ed tree"
 msgstr ""
 "не може да се търси двоично, когато е изпълнена командата „cg-seek“ от "
 "„cogito“"
@@ -10875,112 +10925,112 @@
 
 #: git-bisect.sh:244
 #, sh-format
 msgid "Bad rev input: $rev"
 msgstr "Неправилна версия: „$rev“"
 
-#: git-bisect.sh:250
+#: git-bisect.sh:253
 msgid "'git bisect bad' can take only one argument."
 msgstr "Командата „git bisect bad“ приема само един аргумент."
 
-#: git-bisect.sh:273
+#: git-bisect.sh:276
 msgid "Warning: bisecting only with a bad commit."
 msgstr "ПРЕДУПРЕЖДЕНИЕ: двоично търсене само по лошо подаване."
 
 #. TRANSLATORS: Make sure to include [Y] and [n] in your
 #. translation. The program will only accept English input
 #. at this point.
-#: git-bisect.sh:279
+#: git-bisect.sh:282
 msgid "Are you sure [Y/n]? "
 msgstr "Да се продължи ли? „Y“ —  ДА, „n“ — не"
 
 # FIXME me?
-#: git-bisect.sh:289
+#: git-bisect.sh:292
 msgid ""
 "You need to give me at least one good and one bad revision.\n"
 "(You can use \"git bisect bad\" and \"git bisect good\" for that.)"
 msgstr ""
 "Трябва да зададете поне една добра и една лоша версия. (Това може да се\n"
 "направи съответно и чрез командите „git bisect bad“ и „git bisect good“.)"
 
 # FIXME me
-#: git-bisect.sh:292
+#: git-bisect.sh:295
 msgid ""
 "You need to start by \"git bisect start\".\n"
 "You then need to give me at least one good and one bad revision.\n"
 "(You can use \"git bisect bad\" and \"git bisect good\" for that.)"
 msgstr ""
 "Трябва да започнете двоичното търсене чрез командата „git bisect start“.\n"
 "трябва да зададете поне една добра и една лоша версия. (Това може да се\n"
 "направи съответно и чрез командите „git bisect bad“ и „git bisect good“.)"
 
-#: git-bisect.sh:363 git-bisect.sh:490
+#: git-bisect.sh:366 git-bisect.sh:493
 msgid "We are not bisecting."
 msgstr "В момента не се извършва двоично търсене."
 
-#: git-bisect.sh:370
+#: git-bisect.sh:373
 #, sh-format
 msgid "'$invalid' is not a valid commit"
 msgstr "„$invalid“ е неправилно подаване"
 
-#: git-bisect.sh:379
+#: git-bisect.sh:382
 #, sh-format
 msgid ""
 "Could not check out original HEAD '$branch'.\n"
 "Try 'git bisect reset <commit>'."
 msgstr ""
 "Първоначално указаният клон „$branch“ в указателя „HEAD“ не може да бъде\n"
 "изтеглен. Пробвайте да изпълните командата „git bisect reset ПОДАВАНЕ“."
 
-#: git-bisect.sh:406
+#: git-bisect.sh:409
 msgid "No logfile given"
 msgstr "Не е зададен журнален файл"
 
-#: git-bisect.sh:407
+#: git-bisect.sh:410
 #, sh-format
 msgid "cannot read $file for replaying"
 msgstr ""
 "Журналният файл „$file“ не може да бъде прочетен, за да се изпълнят "
 "командите от него наново"
 
 # FIXME WTF
-#: git-bisect.sh:424
+#: git-bisect.sh:427
 msgid "?? what are you talking about?"
 msgstr ""
 "Непозната команда. Възможните варианти са: „start“, „good“, „bad“, „skip“"
 
-#: git-bisect.sh:436
+#: git-bisect.sh:439
 #, sh-format
 msgid "running $command"
 msgstr "изпълнение на командата „$command“"
 
-#: git-bisect.sh:443
+#: git-bisect.sh:446
 #, sh-format
 msgid ""
 "bisect run failed:\n"
 "exit code $res from '$command' is < 0 or >= 128"
 msgstr ""
 "неуспешно двоично търсене:\n"
 "изходният код от командата „$command“ е $res — това е извън интервала [0, "
 "128)"
 
-#: git-bisect.sh:469
+#: git-bisect.sh:472
 msgid "bisect run cannot continue any more"
 msgstr "двоичното търсене не може да продължи"
 
 # FIXME initial space
-#: git-bisect.sh:475
+#: git-bisect.sh:478
 #, sh-format
 msgid ""
 "bisect run failed:\n"
 "'bisect_state $state' exited with error code $res"
 msgstr ""
 "неуспешно двоично търсене:\n"
 "функцията „bisect_state $state“ завърши с код за грешка $res"
 
-#: git-bisect.sh:482
+#: git-bisect.sh:485
 msgid "bisect run success"
 msgstr "успешно двоично търсене"
 
 #: git-pull.sh:21
 msgid ""
 "Pull is not possible because you have unmerged files.\n"
@@ -11645,36 +11695,6 @@
 msgstr "Неуспешна обработка на поддиректориите в пътя към подмодул „$sm_path“"
 
 #: git-submodule.sh:1331
 #, sh-format
 msgid "Synchronizing submodule url for '$displaypath'"
 msgstr "Синхронизиране на адреса за пътя към подмодул „$displaypath“"
-
-#~ msgid "Failed to lock ref for update"
-#~ msgstr "Указателят не може да бъде заключен, за да бъде обновен"
-
-#~ msgid "Failed to write ref"
-#~ msgstr "Указателят не може да бъде записан"
-
-#~ msgid "Failed to lock HEAD during fast_forward_to"
-#~ msgstr "Указателят „HEAD“ не може да бъде заключен при тривиално сливане"
-
-#~ msgid "invalid commit: %s"
-#~ msgstr "неправилно подаване: %s"
-
-#~ msgid "cannot lock HEAD ref"
-#~ msgstr "указателят към върха „HEAD“ не може да бъде заключен"
-
-#~ msgid "cannot update HEAD ref"
-#~ msgstr "указателят към върха „HEAD“ не може да бъде обновен"
-
-#~ msgid "Invalid %s: '%s'"
-#~ msgstr "Неправилна стойност за „%s“: „%s“"
-
-#~ msgid "cannot tell cwd"
-#~ msgstr "текущата директория не може да бъде определена"
-
-#~ msgid "%s: cannot lock the ref"
-#~ msgstr "указателят „%s“ не може да бъде заключен"
-
-#~ msgid "%s: cannot update the ref"
-#~ msgstr "указателят „%s“ не може да бъде обновен"
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale/bg/LC_MESSAGES/git.mo and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale/bg/LC_MESSAGES/git.mo differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale/ca/LC_MESSAGES/git.mo and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale/ca/LC_MESSAGES/git.mo differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale/de/LC_MESSAGES/git.mo and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale/de/LC_MESSAGES/git.mo differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale/fr/LC_MESSAGES/git.mo and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale/fr/LC_MESSAGES/git.mo differ
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale: ru
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale/sv/LC_MESSAGES/git.mo and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale/sv/LC_MESSAGES/git.mo differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale/vi/LC_MESSAGES/git.mo and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale/vi/LC_MESSAGES/git.mo differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/build/locale/zh_CN/LC_MESSAGES/git.mo and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/build/locale/zh_CN/LC_MESSAGES/git.mo differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/ca.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/ca.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/ca.po	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/ca.po	2015-05-01 03:12:02.000000000 +0800
@@ -4,22 +4,22 @@
 # Alex Henrie <alexhenrie24@gmail.com>, 2014.
 #
 msgid ""
 msgstr ""
 "Project-Id-Version: Git\n"
 "Report-Msgid-Bugs-To: Git Mailing List <git@vger.kernel.org>\n"
-"POT-Creation-Date: 2015-01-18 11:24+0800\n"
-"PO-Revision-Date: 2015-01-30 15:01-0700\n"
+"POT-Creation-Date: 2015-04-03 08:13+0800\n"
+"PO-Revision-Date: 2015-04-07 12:26-0700\n"
 "Last-Translator: Alex Henrie <alexhenrie24@gmail.com>\n"
 "Language-Team: Catalan\n"
 "Language: ca\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
 "Plural-Forms: nplurals=2; plural=(n != 1);\n"
-"X-Generator: Poedit 1.7.3\n"
+"X-Generator: Poedit 1.7.5\n"
 
 #: advice.c:55
 #, c-format
 msgid "hint: %.*s\n"
 msgstr "pista: %.*s\n"
 
@@ -30,24 +30,25 @@
 msgstr ""
 "Arregleu-los en l'arbre de treball, i després useu\n"
 "'git add/rm <fitxer>' segons sigui apropiat per a marcar la\n"
 "resolució i feu una comissió."
 
 #: archive.c:11
-msgid "git archive [options] <tree-ish> [<path>...]"
-msgstr "git archive [opcions] <arbre> [<camí>...]"
+msgid "git archive [<options>] <tree-ish> [<path>...]"
+msgstr "git archive [<opcions>] <arbre> [<camí>...]"
 
 #: archive.c:12
 msgid "git archive --list"
 msgstr "git archive --list"
 
 #: archive.c:13
 msgid ""
-"git archive --remote <repo> [--exec <cmd>] [options] <tree-ish> [<path>...]"
+"git archive --remote <repo> [--exec <cmd>] [<options>] <tree-ish> [<path>...]"
 msgstr ""
-"git archive --remote <dipòsit> [--exec <ordre>] [opcions] <arbre> [<camí>...]"
+"git archive --remote <dipòsit> [--exec <ordre>] [<opcions>] <arbre> "
+"[<camí>...]"
 
 #: archive.c:14
 msgid "git archive --remote <repo> [--exec <cmd>] --list"
 msgstr "git archive --remote <dipòsit> [--exec <ordre>] --list"
 
 #: archive.c:342 builtin/add.c:137 builtin/add.c:427 builtin/rm.c:328
@@ -68,16 +69,16 @@
 msgstr "prefix"
 
 #: archive.c:429
 msgid "prepend prefix to each pathname in the archive"
 msgstr "anteposa el prefix a cada nom de camí en l'arxiu"
 
-#: archive.c:430 builtin/archive.c:88 builtin/blame.c:2517
-#: builtin/blame.c:2518 builtin/config.c:57 builtin/fast-export.c:986
+#: archive.c:430 builtin/archive.c:88 builtin/blame.c:2516
+#: builtin/blame.c:2517 builtin/config.c:57 builtin/fast-export.c:986
 #: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:101
-#: builtin/ls-files.c:489 builtin/ls-files.c:492 builtin/notes.c:394
+#: builtin/ls-files.c:446 builtin/ls-files.c:449 builtin/notes.c:394
 #: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:151
 msgid "file"
 msgstr "fitxer"
 
 #: archive.c:431 builtin/archive.c:89
 msgid "write the archive to this file"
@@ -120,13 +121,13 @@
 msgstr "ordre"
 
 #: archive.c:452 builtin/archive.c:93
 msgid "path to the remote git-upload-archive command"
 msgstr "camí a l'ordre git-upload-archive remot"
 
-#: attr.c:258
+#: attr.c:264
 msgid ""
 "Negative patterns are ignored in git attributes\n"
 "Use '\\!' for literal leading exclamation."
 msgstr ""
 "Els patrons negatius s'ignoren en els atributs de git\n"
 "Useu '\\!' per exclamació capdavantera literal."
@@ -257,23 +258,23 @@
 
 #: bundle.c:61
 #, c-format
 msgid "unrecognized header: %s%s (%d)"
 msgstr "capçalera no reconeguda: %s%s (%d)"
 
-#: bundle.c:87 builtin/commit.c:770
+#: bundle.c:87 builtin/commit.c:766
 #, c-format
 msgid "could not open '%s'"
 msgstr "no s'ha pogut obrir '%s'"
 
 #: bundle.c:139
 msgid "Repository lacks these prerequisite commits:"
 msgstr "Al dipòsit li manquen aquestes comissions prerequisits:"
 
-#: bundle.c:163 sequencer.c:645 sequencer.c:1100 builtin/blame.c:2706
-#: builtin/branch.c:652 builtin/commit.c:1049 builtin/log.c:330
+#: bundle.c:163 sequencer.c:650 sequencer.c:1105 builtin/blame.c:2705
+#: builtin/branch.c:659 builtin/commit.c:1045 builtin/log.c:330
 #: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:358
 #: builtin/shortlog.c:158
 msgid "revision walk setup failed"
 msgstr "la configuració del passeig per revisions ha fallat"
 
 #: bundle.c:185
@@ -308,31 +309,31 @@
 
 #: bundle.c:358
 #, c-format
 msgid "ref '%s' is excluded by the rev-list options"
 msgstr "les opcions de la llista de revisions exclouen la referència '%s'"
 
-#: bundle.c:438 builtin/log.c:153 builtin/log.c:1342 builtin/shortlog.c:261
+#: bundle.c:437 builtin/log.c:153 builtin/log.c:1342 builtin/shortlog.c:261
 #, c-format
 msgid "unrecognized argument: %s"
 msgstr "paràmetre no reconegut: %s"
 
-#: bundle.c:444
+#: bundle.c:443
 msgid "Refusing to create empty bundle."
 msgstr "Refusant crear un farcell buit."
 
-#: bundle.c:454
+#: bundle.c:453
 #, c-format
 msgid "cannot create '%s'"
 msgstr "no es pot crear '%s'"
 
-#: bundle.c:475
+#: bundle.c:474
 msgid "index-pack died"
 msgstr "L'index-pack s'ha mort"
 
-#: color.c:259
+#: color.c:260
 #, c-format
 msgid "invalid color value: %.*s"
 msgstr "valor de color no vàlid: %.*s"
 
 #: commit.c:40
 #, c-format
@@ -345,61 +346,61 @@
 msgstr "%s %s no és una comissió!"
 
 #: compat/obstack.c:406 compat/obstack.c:408
 msgid "memory exhausted"
 msgstr "memòria esgotada"
 
-#: config.c:469 config.c:471
+#: config.c:474 config.c:476
 #, c-format
 msgid "bad config file line %d in %s"
 msgstr "línia de fitxer de configuració dolenta %d en %s"
 
-#: config.c:587
+#: config.c:592
 #, c-format
 msgid "bad numeric config value '%s' for '%s' in %s: %s"
 msgstr "valor de configuració numèrica dolent '%s' per '%s' en %s: %s"
 
-#: config.c:589
+#: config.c:594
 #, c-format
 msgid "bad numeric config value '%s' for '%s': %s"
 msgstr "valor de configuració numèrica dolent '%s' per '%s': %s"
 
-#: config.c:674
+#: config.c:679
 #, c-format
 msgid "failed to expand user dir in: '%s'"
 msgstr "s'ha fallat en expandir el directori d'usuari en '%s'"
 
-#: config.c:752 config.c:763
+#: config.c:757 config.c:768
 #, c-format
 msgid "bad zlib compression level %d"
 msgstr "nivell de compressió de zlib dolent %d"
 
-#: config.c:885
+#: config.c:890
 #, c-format
 msgid "invalid mode for object creation: %s"
 msgstr "mode de creació d'objecte no vàlid: %s"
 
-#: config.c:1211
+#: config.c:1216
 msgid "unable to parse command-line config"
 msgstr "no s'ha pogut analitzar la configuració de la línia d'ordres"
 
-#: config.c:1272
+#: config.c:1277
 msgid "unknown error occured while reading the configuration files"
 msgstr "ha ocorregut un error desconegut en llegir els fitxers de configuració"
 
-#: config.c:1596
+#: config.c:1601
 #, c-format
 msgid "unable to parse '%s' from command-line config"
 msgstr "no s'ha pogut analitzar '%s' de la configuració de la línia d'ordres"
 
-#: config.c:1598
+#: config.c:1603
 #, c-format
 msgid "bad config variable '%s' in file '%s' at line %d"
 msgstr "variable de configuració dolenta '%s' en el fitxer '%s' a la línia %d"
 
-#: config.c:1657
+#: config.c:1662
 #, c-format
 msgid "%s has multiple values"
 msgstr "%s té múltiples valors"
 
 #: connected.c:69
 msgid "Could not run 'git rev-list'"
@@ -485,13 +486,13 @@
 
 #: diffcore-order.c:24
 #, c-format
 msgid "failed to read orderfile '%s'"
 msgstr "s'ha fallat en llegir el fitxer d'ordres '%s'"
 
-#: diffcore-rename.c:516
+#: diffcore-rename.c:536
 msgid "Performing inexact rename detection"
 msgstr "Realitzant detecció inexacta de canvis de nom"
 
 #: diff.c:114
 #, c-format
 msgid "  Failed to parse dirstat cut-off percentage '%s'\n"
@@ -514,31 +515,31 @@
 "Found errors in 'diff.dirstat' config variable:\n"
 "%s"
 msgstr ""
 "Errors trobats en la variable de configuració 'diff.dirstat':\n"
 "%s"
 
-#: diff.c:2957
+#: diff.c:2956
 #, c-format
 msgid "external diff died, stopping at %s"
 msgstr "El diff external s'ha mort, aturant a %s"
 
-#: diff.c:3352
+#: diff.c:3351
 msgid "--follow requires exactly one pathspec"
 msgstr "--follow requereix exactament una especificació de camí"
 
-#: diff.c:3515
+#: diff.c:3514
 #, c-format
 msgid ""
 "Failed to parse --dirstat/-X option parameter:\n"
 "%s"
 msgstr ""
 "S'ha fallat en analitzar el paràmetre d'opció de --dirstat/-X:\n"
 "%s"
 
-#: diff.c:3529
+#: diff.c:3528
 #, c-format
 msgid "Failed to parse --submodule option parameter: '%s'"
 msgstr "S'ha fallat en analitzar el paràmetre d'opció de --submodule: %s"
 
 #: gpg-interface.c:129 gpg-interface.c:200
 msgid "could not run gpg."
@@ -885,33 +886,33 @@
 
 #: merge-recursive.c:1853
 #, c-format
 msgid "Unprocessed path??? %s"
 msgstr "Camí no processat??? %s"
 
-#: merge-recursive.c:1898
+#: merge-recursive.c:1901
 msgid "Merging:"
 msgstr "Fusionant:"
 
-#: merge-recursive.c:1911
+#: merge-recursive.c:1914
 #, c-format
 msgid "found %u common ancestor:"
 msgid_plural "found %u common ancestors:"
 msgstr[0] "s'ha trobat %u avantpassat:"
 msgstr[1] "s'han trobat %u avantpassats:"
 
-#: merge-recursive.c:1948
+#: merge-recursive.c:1951
 msgid "merge returned no commit"
 msgstr "la fusió no ha retornat cap comissió"
 
-#: merge-recursive.c:2005
+#: merge-recursive.c:2008
 #, c-format
 msgid "Could not parse object '%s'"
 msgstr "No s'ha pogut analitzar l'objecte '%s'"
 
-#: merge-recursive.c:2016 builtin/merge.c:667
+#: merge-recursive.c:2019 builtin/merge.c:667
 msgid "Unable to write index."
 msgstr "No s'ha pogut escriure l'índex."
 
 #: notes-utils.c:41
 msgid "Cannot commit uninitialized/unreferenced notes tree"
 msgstr "No es pot cometre un arbre de notes no inicialitzat / no referenciat"
@@ -1035,22 +1036,22 @@
 msgstr "no s'ha pogut analitzar el format --pretty"
 
 #: progress.c:225
 msgid "done"
 msgstr "fet"
 
-#: read-cache.c:1267
+#: read-cache.c:1275
 #, c-format
 msgid ""
 "index.version set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "index.version establert, però el valor no és vàlid.\n"
 "Usant la versió %i"
 
-#: read-cache.c:1277
+#: read-cache.c:1285
 #, c-format
 msgid ""
 "GIT_INDEX_VERSION set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "GIT_INDEX_VERSION establert, però el valor no és vàlid.\n"
@@ -1132,29 +1133,37 @@
 "i tenen %d i %d comissions distintes cada una, respectivament.\n"
 
 #: remote.c:2021
 msgid "  (use \"git pull\" to merge the remote branch into yours)\n"
 msgstr "  (useu \"git pull\" per a fusionar la branca remota a la vostra)\n"
 
-#: run-command.c:87
+#: revision.c:2348
+msgid "--first-parent is incompatible with --bisect"
+msgstr "--first-parent és incompatible amb --bisect"
+
+#: run-command.c:83
 msgid "open /dev/null failed"
 msgstr "s'ha fallat en obrir /dev/null"
 
-#: run-command.c:89
+#: run-command.c:85
 #, c-format
 msgid "dup2(%d,%d) failed"
 msgstr "dup2(%d,%d) ha fallat"
 
-#: send-pack.c:268
+#: send-pack.c:272
 msgid "failed to sign the push certificate"
 msgstr "s'ha fallat en firmar el certificat de pujada"
 
-#: send-pack.c:325
+#: send-pack.c:356
 msgid "the receiving end does not support --signed push"
 msgstr "el destí receptor no admet pujar --signed"
 
+#: send-pack.c:366
+msgid "the receiving end does not support --atomic push"
+msgstr "el destí receptor no admet pujar --atomic"
+
 #: sequencer.c:172 builtin/merge.c:782 builtin/merge.c:893 builtin/merge.c:995
 #: builtin/merge.c:1005
 #, c-format
 msgid "Could not open '%s' for writing"
 msgstr "No s'ha pogut obrir '%s' per a escriptura"
 
@@ -1179,13 +1188,13 @@
 "and commit the result with 'git commit'"
 msgstr ""
 "després de resoldre els conflictes, marqueu els camins\n"
 "corregits amb 'git add <camins>' o 'git rm <camins>'\n"
 "i cometeu el resultat amb 'git commit'"
 
-#: sequencer.c:211 sequencer.c:856 sequencer.c:939
+#: sequencer.c:211 sequencer.c:861 sequencer.c:944
 #, c-format
 msgid "Could not write to %s"
 msgstr "No s'ha pogut escriure a %s"
 
 #: sequencer.c:214
 #, c-format
@@ -1215,192 +1224,192 @@
 msgstr "No s'ha pogut resoldre la comissió HEAD\n"
 
 #: sequencer.c:359
 msgid "Unable to update cache tree\n"
 msgstr "No s'ha pogut actualitzar l'arbre cau\n"
 
-#: sequencer.c:406
+#: sequencer.c:411
 #, c-format
 msgid "Could not parse commit %s\n"
 msgstr "No s'ha pogut analitzar la comissió %s\n"
 
-#: sequencer.c:411
+#: sequencer.c:416
 #, c-format
 msgid "Could not parse parent commit %s\n"
 msgstr "No s'ha pogut analitzar la comissió mare %s\n"
 
-#: sequencer.c:477
+#: sequencer.c:482
 msgid "Your index file is unmerged."
 msgstr "El vostre fitxer d'índex està sense fusionar."
 
-#: sequencer.c:496
+#: sequencer.c:501
 #, c-format
 msgid "Commit %s is a merge but no -m option was given."
 msgstr "La comissió %s és una fusió però no s'ha donat cap opció -m."
 
-#: sequencer.c:504
+#: sequencer.c:509
 #, c-format
 msgid "Commit %s does not have parent %d"
 msgstr "La comissió %s no té mare %d"
 
-#: sequencer.c:508
+#: sequencer.c:513
 #, c-format
 msgid "Mainline was specified but commit %s is not a merge."
 msgstr ""
 "S'ha especificat la línia principal però la comissió %s no és una fusió."
 
 #. TRANSLATORS: The first %s will be "revert" or
 #. "cherry-pick", the second %s a SHA1
-#: sequencer.c:521
+#: sequencer.c:526
 #, c-format
 msgid "%s: cannot parse parent commit %s"
 msgstr "%s: no es pot analitzar la comissió mare %s"
 
-#: sequencer.c:525
+#: sequencer.c:530
 #, c-format
 msgid "Cannot get commit message for %s"
 msgstr "No es pot obtenir el missatge de comissió de %s"
 
-#: sequencer.c:611
+#: sequencer.c:616
 #, c-format
 msgid "could not revert %s... %s"
 msgstr "no s'ha pogut revertir %s...%s"
 
-#: sequencer.c:612
+#: sequencer.c:617
 #, c-format
 msgid "could not apply %s... %s"
 msgstr "no s'ha pogut aplicar %s...%s"
 
-#: sequencer.c:648
+#: sequencer.c:653
 msgid "empty commit set passed"
 msgstr "conjunt de comissions buit passat"
 
-#: sequencer.c:656
+#: sequencer.c:661
 #, c-format
 msgid "git %s: failed to read the index"
 msgstr "git %s: s'ha fallat en llegir l'índex"
 
-#: sequencer.c:660
+#: sequencer.c:665
 #, c-format
 msgid "git %s: failed to refresh the index"
 msgstr "git %s: s'ha fallat en actualitzar l'índex"
 
-#: sequencer.c:720
+#: sequencer.c:725
 #, c-format
 msgid "Cannot %s during a %s"
 msgstr "No es pot %s durant un %s"
 
-#: sequencer.c:742
+#: sequencer.c:747
 #, c-format
 msgid "Could not parse line %d."
 msgstr "No s'ha pogut analitzar la línia %d."
 
-#: sequencer.c:747
+#: sequencer.c:752
 msgid "No commits parsed."
 msgstr "Cap comissió analitzada."
 
-#: sequencer.c:760
+#: sequencer.c:765
 #, c-format
 msgid "Could not open %s"
 msgstr "No s'ha pogut obrir %s"
 
-#: sequencer.c:764
+#: sequencer.c:769
 #, c-format
 msgid "Could not read %s."
 msgstr "No s'ha pogut llegir %s."
 
-#: sequencer.c:771
+#: sequencer.c:776
 #, c-format
 msgid "Unusable instruction sheet: %s"
 msgstr "Full d'instruccions inusable: %s"
 
-#: sequencer.c:801
+#: sequencer.c:806
 #, c-format
 msgid "Invalid key: %s"
 msgstr "Clau no vàlida: %s"
 
-#: sequencer.c:804
+#: sequencer.c:809
 #, c-format
 msgid "Invalid value for %s: %s"
 msgstr "Valor no vàlid per a %s: %s"
 
-#: sequencer.c:816
+#: sequencer.c:821
 #, c-format
 msgid "Malformed options sheet: %s"
 msgstr "Full d'opcions mal format: %s"
 
-#: sequencer.c:837
+#: sequencer.c:842
 msgid "a cherry-pick or revert is already in progress"
 msgstr "un recull de cireres o una reversió ja està en curs"
 
-#: sequencer.c:838
+#: sequencer.c:843
 msgid "try \"git cherry-pick (--continue | --quit | --abort)\""
 msgstr "intenteu \"git cherry-pick (--continue | --quit | --abort)\""
 
-#: sequencer.c:842
+#: sequencer.c:847
 #, c-format
 msgid "Could not create sequencer directory %s"
 msgstr "No s'ha pogut crear el directori de seqüenciador %s"
 
-#: sequencer.c:858 sequencer.c:943
+#: sequencer.c:863 sequencer.c:948
 #, c-format
 msgid "Error wrapping up %s."
 msgstr "Error en finalitzar %s."
 
-#: sequencer.c:877 sequencer.c:1013
+#: sequencer.c:882 sequencer.c:1018
 msgid "no cherry-pick or revert in progress"
 msgstr "ni hi ha cap recull de cireres ni cap reversió en curs"
 
-#: sequencer.c:879
+#: sequencer.c:884
 msgid "cannot resolve HEAD"
 msgstr "no es pot resoldre HEAD"
 
-#: sequencer.c:881
+#: sequencer.c:886
 msgid "cannot abort from a branch yet to be born"
 msgstr "no es pot avortar des d'una branca que encara ha de nàixer"
 
-#: sequencer.c:903 builtin/apply.c:4128
+#: sequencer.c:908 builtin/apply.c:4288
 #, c-format
 msgid "cannot open %s: %s"
 msgstr "no es pot obrir %s: %s"
 
-#: sequencer.c:906
+#: sequencer.c:911
 #, c-format
 msgid "cannot read %s: %s"
 msgstr "no es pot llegir %s: %s"
 
-#: sequencer.c:907
+#: sequencer.c:912
 msgid "unexpected end of file"
 msgstr "final de fitxer inesperat"
 
-#: sequencer.c:913
+#: sequencer.c:918
 #, c-format
 msgid "stored pre-cherry-pick HEAD file '%s' is corrupt"
 msgstr ""
 "el fitxer HEAD emmagatzemat abans del recull de cireres '%s' és corrupte"
 
-#: sequencer.c:936
+#: sequencer.c:941
 #, c-format
 msgid "Could not format %s."
 msgstr "No s'ha pogut formatar %s."
 
-#: sequencer.c:1081
+#: sequencer.c:1086
 #, c-format
 msgid "%s: can't cherry-pick a %s"
 msgstr "%s: no es pot recollir com a cirera un %s"
 
-#: sequencer.c:1084
+#: sequencer.c:1089
 #, c-format
 msgid "%s: bad revision"
 msgstr "%s: revisió dolenta"
 
-#: sequencer.c:1118
+#: sequencer.c:1123
 msgid "Can't revert as initial commit"
 msgstr "No es pot revertir com a comissió inicial"
 
-#: sequencer.c:1119
+#: sequencer.c:1124
 msgid "Can't cherry-pick into empty head"
 msgstr "No es pot recollir cireres en un cap buit"
 
 #: sha1_name.c:440
 msgid ""
 "Git normally never creates a ref that ends with 40 hex characters\n"
@@ -1467,44 +1476,44 @@
 msgstr "No s'ha pogut eliminar l'entrada de .gitmodules per a %s"
 
 #: submodule.c:120
 msgid "staging updated .gitmodules failed"
 msgstr "L'allistament del .gitmodules actualitzat ha fallat"
 
-#: submodule.c:1111 builtin/init-db.c:371
+#: submodule.c:1109 builtin/init-db.c:371
 #, c-format
 msgid "Could not create git link %s"
 msgstr "No s'ha pogut crear l'enllaç de git %s"
 
-#: submodule.c:1122
+#: submodule.c:1120
 #, c-format
 msgid "Could not set core.worktree in %s"
 msgstr "No s'ha pogut establir core.worktree en %s"
 
-#: trailer.c:500 trailer.c:504 trailer.c:508 trailer.c:562 trailer.c:566
-#: trailer.c:570
+#: trailer.c:491 trailer.c:495 trailer.c:499 trailer.c:553 trailer.c:557
+#: trailer.c:561
 #, c-format
 msgid "unknown value '%s' for key '%s'"
 msgstr "valor desconegut '%s' per a la clau '%s'"
 
-#: trailer.c:552 trailer.c:557 builtin/remote.c:290
+#: trailer.c:543 trailer.c:548 builtin/remote.c:290
 #, c-format
 msgid "more than one %s"
 msgstr "més d'un %s"
 
-#: trailer.c:590
+#: trailer.c:581
 #, c-format
 msgid "empty trailer token in trailer '%.*s'"
 msgstr "fitxa de remolc buida en el remolc '%.*s'"
 
-#: trailer.c:710
+#: trailer.c:701
 #, c-format
 msgid "could not read input file '%s'"
 msgstr "no s'ha pogut llegir el fitxer d'entrada '%s'"
 
-#: trailer.c:713
+#: trailer.c:704
 msgid "could not read from stdin"
 msgstr "No s'ha pogut llegir des d'stdin"
 
 #: unpack-trees.c:202
 msgid "Checking out files"
 msgstr "Agafant fitxers"
@@ -1535,32 +1544,32 @@
 msgstr "número de port no vàlid"
 
 #: urlmatch.c:322
 msgid "invalid '..' path segment"
 msgstr "segment de camí '..' no vàlid"
 
-#: wrapper.c:509
+#: wrapper.c:523
 #, c-format
 msgid "unable to access '%s': %s"
 msgstr "no s'ha pogut accedir a '%s': %s"
 
-#: wrapper.c:530
+#: wrapper.c:544
 #, c-format
 msgid "unable to access '%s'"
 msgstr "no s'ha pogut accedir a '%s'"
 
-#: wrapper.c:541
+#: wrapper.c:555
 #, c-format
 msgid "unable to look up current user in the passwd file: %s"
 msgstr "no s'ha pogut trobar l'usuari actual en el fitxer passwd: %s"
 
-#: wrapper.c:542
+#: wrapper.c:556
 msgid "no such user"
 msgstr "no hi ha tal usuari"
 
-#: wrapper.c:550
+#: wrapper.c:564
 msgid "unable to get current working directory"
 msgstr "no s'ha pogut obtenir el directori de treball actual"
 
 #: wt-status.c:150
 msgid "Unmerged paths:"
 msgstr "Camins sense fusionar:"
@@ -1585,17 +1594,17 @@
 "resolució)"
 
 #: wt-status.c:187
 msgid "  (use \"git rm <file>...\" to mark resolution)"
 msgstr "  (useu \"git rm <fitxer>...\" per a senyalar resolució)"
 
-#: wt-status.c:198
+#: wt-status.c:198 wt-status.c:878
 msgid "Changes to be committed:"
 msgstr "Canvis a cometre:"
 
-#: wt-status.c:216
+#: wt-status.c:216 wt-status.c:887
 msgid "Changes not staged for commit:"
 msgstr "Canvis no allistats per a cometre:"
 
 #: wt-status.c:220
 msgid "  (use \"git add <file>...\" to update what will be committed)"
 msgstr "  (useu \"git add <fitxer>...\" per a actualitzar què es cometrà)"
@@ -1700,316 +1709,316 @@
 
 #: wt-status.c:391
 #, c-format
 msgid "bug: unhandled diff status %c"
 msgstr "bug: estat de diferència no gestionat %c"
 
-#: wt-status.c:758
+#: wt-status.c:753
 msgid "Submodules changed but not updated:"
 msgstr "Submòduls canviats però no actualitzats:"
 
-#: wt-status.c:760
+#: wt-status.c:755
 msgid "Submodule changes to be committed:"
 msgstr "Canvis de submòdul a cometre:"
 
-#: wt-status.c:839
+#: wt-status.c:835
 msgid ""
 "Do not touch the line above.\n"
 "Everything below will be removed."
 msgstr ""
 "No toqueu la línia de sobre.\n"
 "Tot el que hi ha a sota s'eliminarà."
 
-#: wt-status.c:930
+#: wt-status.c:946
 msgid "You have unmerged paths."
 msgstr "Teniu camins sense fusionar."
 
-#: wt-status.c:933
+#: wt-status.c:949
 msgid "  (fix conflicts and run \"git commit\")"
 msgstr "  (arregleu els conflictes i executeu \"git commit\")"
 
-#: wt-status.c:936
+#: wt-status.c:952
 msgid "All conflicts fixed but you are still merging."
 msgstr "Tots els conflictes estan arreglats però encara esteu fusionant."
 
-#: wt-status.c:939
+#: wt-status.c:955
 msgid "  (use \"git commit\" to conclude merge)"
 msgstr "  (useu \"git commit\" per a concloure la fusió)"
 
-#: wt-status.c:949
+#: wt-status.c:965
 msgid "You are in the middle of an am session."
 msgstr "Esteu enmig d'una sessió am."
 
-#: wt-status.c:952
+#: wt-status.c:968
 msgid "The current patch is empty."
 msgstr "El pedaç actual està buit."
 
-#: wt-status.c:956
+#: wt-status.c:972
 msgid "  (fix conflicts and then run \"git am --continue\")"
 msgstr "  (arregleu els conflictes i després executeu \"git am --continue\")"
 
-#: wt-status.c:958
+#: wt-status.c:974
 msgid "  (use \"git am --skip\" to skip this patch)"
 msgstr "  (useu \"git am --skip\" per a ometre aquest pedaç)"
 
-#: wt-status.c:960
+#: wt-status.c:976
 msgid "  (use \"git am --abort\" to restore the original branch)"
 msgstr "  (useu \"git am --abort\" per a restaurar la branca original)"
 
-#: wt-status.c:1020 wt-status.c:1037
+#: wt-status.c:1036 wt-status.c:1053
 #, c-format
 msgid "You are currently rebasing branch '%s' on '%s'."
 msgstr "Actualment esteu rebasant la branca '%s' en '%s'."
 
-#: wt-status.c:1025 wt-status.c:1042
+#: wt-status.c:1041 wt-status.c:1058
 msgid "You are currently rebasing."
 msgstr "Actualment esteu rebasant."
 
-#: wt-status.c:1028
+#: wt-status.c:1044
 msgid "  (fix conflicts and then run \"git rebase --continue\")"
 msgstr ""
 "  (arregleu els conflictes i després executeu \"git rebase --continue\")"
 
-#: wt-status.c:1030
+#: wt-status.c:1046
 msgid "  (use \"git rebase --skip\" to skip this patch)"
 msgstr "  (useu \"git rebase --skip\" per a saltar aquest pedaç)"
 
-#: wt-status.c:1032
+#: wt-status.c:1048
 msgid "  (use \"git rebase --abort\" to check out the original branch)"
 msgstr "  (useu \"git rebase --abort\" per a agafar la branca original)"
 
-#: wt-status.c:1045
+#: wt-status.c:1061
 msgid "  (all conflicts fixed: run \"git rebase --continue\")"
 msgstr "  (tots els conflictes arreglats: executeu \"git rebase --continue\")"
 
-#: wt-status.c:1049
+#: wt-status.c:1065
 #, c-format
 msgid ""
 "You are currently splitting a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "Actualment esteu dividint una comissió mentre rebaseu la branca '%s' en '%s'."
 
-#: wt-status.c:1054
+#: wt-status.c:1070
 msgid "You are currently splitting a commit during a rebase."
 msgstr "Actualment esteu dividint una comissió durant una rebase."
 
-#: wt-status.c:1057
+#: wt-status.c:1073
 msgid "  (Once your working directory is clean, run \"git rebase --continue\")"
 msgstr ""
 "  (Una vegada que el vostre directori de treball sigui net, executeu \"git "
 "rebase --continue\")"
 
-#: wt-status.c:1061
+#: wt-status.c:1077
 #, c-format
 msgid "You are currently editing a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "Actualment esteu editant una comissió mentre rebaseu la branca '%s' en '%s'."
 
-#: wt-status.c:1066
+#: wt-status.c:1082
 msgid "You are currently editing a commit during a rebase."
 msgstr "Actualment esteu editant una comissió durant una rebase."
 
-#: wt-status.c:1069
+#: wt-status.c:1085
 msgid "  (use \"git commit --amend\" to amend the current commit)"
 msgstr "  (useu \"git commit --amend\" per a esmenar la comissió actual)"
 
-#: wt-status.c:1071
+#: wt-status.c:1087
 msgid ""
 "  (use \"git rebase --continue\" once you are satisfied with your changes)"
 msgstr ""
 "  (useu \"git rebase --continue\" una vegada que esteu satisfet amb els "
 "vostres canvis)"
 
-#: wt-status.c:1081
+#: wt-status.c:1097
 #, c-format
 msgid "You are currently cherry-picking commit %s."
 msgstr "Actualment esteu recollint com a cirera la comissió %s."
 
-#: wt-status.c:1086
+#: wt-status.c:1102
 msgid "  (fix conflicts and run \"git cherry-pick --continue\")"
 msgstr "  (arregleu els conflictes i executeu \"git cherry-pick --continue\")"
 
-#: wt-status.c:1089
+#: wt-status.c:1105
 msgid "  (all conflicts fixed: run \"git cherry-pick --continue\")"
 msgstr ""
 "  (tots els conflictes arreglats: executeu \"git cherry-pick --continue\")"
 
-#: wt-status.c:1091
+#: wt-status.c:1107
 msgid "  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)"
 msgstr ""
 "  (useu \"git cherry-pick --abort\" per a cancel·lar l'operació de recull de "
 "cireres)"
 
-#: wt-status.c:1100
+#: wt-status.c:1116
 #, c-format
 msgid "You are currently reverting commit %s."
 msgstr "Actualment esteu revertint la comissió %s."
 
-#: wt-status.c:1105
+#: wt-status.c:1121
 msgid "  (fix conflicts and run \"git revert --continue\")"
 msgstr "  (arregleu els conflictes i executeu \"git revert --continue\")"
 
-#: wt-status.c:1108
+#: wt-status.c:1124
 msgid "  (all conflicts fixed: run \"git revert --continue\")"
 msgstr ""
 "  (tots els conflictes estan arreglats: executeu \"git revert --continue\")"
 
-#: wt-status.c:1110
+#: wt-status.c:1126
 msgid "  (use \"git revert --abort\" to cancel the revert operation)"
 msgstr ""
 "  (useu \"git revert --abort\" per a cancel·lar l'operació de reversió)"
 
-#: wt-status.c:1121
+#: wt-status.c:1137
 #, c-format
 msgid "You are currently bisecting, started from branch '%s'."
 msgstr "Actualment esteu bisecant, heu començat des de la branca '%s'."
 
-#: wt-status.c:1125
+#: wt-status.c:1141
 msgid "You are currently bisecting."
 msgstr "Actualment esteu bisecant."
 
-#: wt-status.c:1128
+#: wt-status.c:1144
 msgid "  (use \"git bisect reset\" to get back to the original branch)"
 msgstr "  (useu \"git bisect reset\" per a tornar a la branca original)"
 
-#: wt-status.c:1303
+#: wt-status.c:1321
 msgid "On branch "
 msgstr "En la branca "
 
-#: wt-status.c:1310
+#: wt-status.c:1328
 msgid "rebase in progress; onto "
 msgstr "rebase en progrés; en "
 
-#: wt-status.c:1317
+#: wt-status.c:1333
 msgid "HEAD detached at "
 msgstr "HEAD separat a "
 
-#: wt-status.c:1319
+#: wt-status.c:1335
 msgid "HEAD detached from "
 msgstr "HEAD separat de "
 
-#: wt-status.c:1322
+#: wt-status.c:1338
 msgid "Not currently on any branch."
 msgstr "Actualment no en cap branca."
 
-#: wt-status.c:1339
+#: wt-status.c:1355
 msgid "Initial commit"
 msgstr "Comissió inicial"
 
-#: wt-status.c:1353
+#: wt-status.c:1369
 msgid "Untracked files"
 msgstr "Fitxers no seguits"
 
-#: wt-status.c:1355
+#: wt-status.c:1371
 msgid "Ignored files"
 msgstr "Fitxers ignorats"
 
-#: wt-status.c:1359
+#: wt-status.c:1375
 #, c-format
 msgid ""
 "It took %.2f seconds to enumerate untracked files. 'status -uno'\n"
 "may speed it up, but you have to be careful not to forget to add\n"
 "new files yourself (see 'git help status')."
 msgstr ""
 "S'ha trigat %.2f segons a enumerar fitxers no seguits.\n"
 "'status -uno' pot accelerar-ho, però heu d'anar amb compte de no\n"
 "oblidar-vos d'afegir fitxers nous per vós mateix (vegeu\n"
 "'git help status')."
 
-#: wt-status.c:1365
+#: wt-status.c:1381
 #, c-format
 msgid "Untracked files not listed%s"
 msgstr "Els fitxers no seguits no estan llistats%s"
 
-#: wt-status.c:1367
+#: wt-status.c:1383
 msgid " (use -u option to show untracked files)"
 msgstr " (useu l'opció -u per a mostrar els fitxers no seguits)"
 
-#: wt-status.c:1373
+#: wt-status.c:1389
 msgid "No changes"
 msgstr "Sense canvis"
 
-#: wt-status.c:1378
+#: wt-status.c:1394
 #, c-format
 msgid "no changes added to commit (use \"git add\" and/or \"git commit -a\")\n"
 msgstr ""
 "no hi ha canvis afegits a cometre (useu \"git add\" o \"git commit -a\")\n"
 
-#: wt-status.c:1381
+#: wt-status.c:1397
 #, c-format
 msgid "no changes added to commit\n"
 msgstr "no hi ha canvis afegits a cometre\n"
 
-#: wt-status.c:1384
+#: wt-status.c:1400
 #, c-format
 msgid ""
 "nothing added to commit but untracked files present (use \"git add\" to "
 "track)\n"
 msgstr ""
 "no hi ha res afegit a cometre però fitxers no seguits estan presents (useu "
 "\"git add\" per a seguir-los)\n"
 
-#: wt-status.c:1387
+#: wt-status.c:1403
 #, c-format
 msgid "nothing added to commit but untracked files present\n"
 msgstr "no hi ha res afegit a cometre però fitxers no seguits estan presents\n"
 
-#: wt-status.c:1390
+#: wt-status.c:1406
 #, c-format
 msgid "nothing to commit (create/copy files and use \"git add\" to track)\n"
 msgstr ""
 "no hi ha res a cometre (creeu/copieu fitxers i useu \"git add\" per a seguir-"
 "los)\n"
 
-#: wt-status.c:1393 wt-status.c:1398
+#: wt-status.c:1409 wt-status.c:1414
 #, c-format
 msgid "nothing to commit\n"
 msgstr "no hi ha res a cometre\n"
 
-#: wt-status.c:1396
+#: wt-status.c:1412
 #, c-format
 msgid "nothing to commit (use -u to show untracked files)\n"
 msgstr ""
 "no hi ha res a cometre (useu -u per a mostrar els fitxers no seguits)\n"
 
-#: wt-status.c:1400
+#: wt-status.c:1416
 #, c-format
 msgid "nothing to commit, working directory clean\n"
 msgstr "no hi ha res a cometre, directori de treball net\n"
 
-#: wt-status.c:1509
+#: wt-status.c:1525
 msgid "HEAD (no branch)"
 msgstr "HEAD (sense branca)"
 
-#: wt-status.c:1515
+#: wt-status.c:1531
 msgid "Initial commit on "
 msgstr "Comissió inicial en "
 
-#: wt-status.c:1547
+#: wt-status.c:1563
 msgid "gone"
 msgstr "no hi és"
 
-#: wt-status.c:1549 wt-status.c:1557
+#: wt-status.c:1565 wt-status.c:1573
 msgid "behind "
 msgstr "darrere "
 
 #: compat/precompose_utf8.c:55 builtin/clone.c:360
 #, c-format
 msgid "failed to unlink '%s'"
 msgstr "s'ha fallat en desenllaçar '%s'"
 
 #: builtin/add.c:22
-msgid "git add [options] [--] <pathspec>..."
-msgstr "git add [opcions] [--] <especificació-de-camí>..."
+msgid "git add [<options>] [--] <pathspec>..."
+msgstr "git add [<opcions>] [--] <especificació-de-camí>..."
 
 #: builtin/add.c:65
 #, c-format
 msgid "unexpected diff status %c"
 msgstr "estat de diff inesperat %c"
 
-#: builtin/add.c:70 builtin/commit.c:275
+#: builtin/add.c:70 builtin/commit.c:277
 msgid "updating files failed"
 msgstr "s'ha fallat en actualitzar els fitxers"
 
 #: builtin/add.c:80
 #, c-format
 msgid "remove '%s'\n"
@@ -2048,20 +2057,20 @@
 
 #: builtin/add.c:231
 msgid "The following paths are ignored by one of your .gitignore files:\n"
 msgstr ""
 "Els camins següents s'ignoren per un dels vostres fitxers .gitignore:\n"
 
-#: builtin/add.c:248 builtin/clean.c:875 builtin/fetch.c:108 builtin/mv.c:110
-#: builtin/prune-packed.c:55 builtin/push.c:499 builtin/remote.c:1372
+#: builtin/add.c:248 builtin/clean.c:876 builtin/fetch.c:107 builtin/mv.c:110
+#: builtin/prune-packed.c:55 builtin/push.c:508 builtin/remote.c:1372
 #: builtin/rm.c:269
 msgid "dry run"
 msgstr "marxa en sec"
 
-#: builtin/add.c:249 builtin/apply.c:4415 builtin/check-ignore.c:19
-#: builtin/commit.c:1326 builtin/count-objects.c:63 builtin/fsck.c:608
+#: builtin/add.c:249 builtin/apply.c:4577 builtin/check-ignore.c:19
+#: builtin/commit.c:1322 builtin/count-objects.c:63 builtin/fsck.c:608
 #: builtin/log.c:1617 builtin/mv.c:109 builtin/read-tree.c:114
 msgid "be verbose"
 msgstr "sigues detallat"
 
 #: builtin/add.c:251
 msgid "interactive picking"
@@ -2133,84 +2142,84 @@
 
 #: builtin/add.c:358
 #, c-format
 msgid "Maybe you wanted to say 'git add .'?\n"
 msgstr "Potser volíeu dir 'git add .'?\n"
 
-#: builtin/add.c:363 builtin/check-ignore.c:172 builtin/clean.c:919
-#: builtin/commit.c:333 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:299
+#: builtin/add.c:363 builtin/check-ignore.c:172 builtin/clean.c:920
+#: builtin/commit.c:335 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:299
 msgid "index file corrupt"
 msgstr "fitxer d'índex malmès"
 
-#: builtin/add.c:446 builtin/apply.c:4510 builtin/mv.c:279 builtin/rm.c:431
+#: builtin/add.c:446 builtin/apply.c:4675 builtin/mv.c:279 builtin/rm.c:431
 msgid "Unable to write new index file"
 msgstr "no s'ha pogut escriure un fitxer d'índex nou"
 
-#: builtin/apply.c:58
-msgid "git apply [options] [<patch>...]"
-msgstr "git apply [opcions] [<pedaç>...]"
+#: builtin/apply.c:59
+msgid "git apply [<options>] [<patch>...]"
+msgstr "git apply [<opcions>] [<pedaç>...]"
 
-#: builtin/apply.c:111
+#: builtin/apply.c:112
 #, c-format
 msgid "unrecognized whitespace option '%s'"
 msgstr "opció d'espai en blanc '%s' no reconeguda"
 
-#: builtin/apply.c:126
+#: builtin/apply.c:127
 #, c-format
 msgid "unrecognized whitespace ignore option '%s'"
 msgstr "opció d'ignoral d'espai en blanc '%s' no reconeguda"
 
-#: builtin/apply.c:826
+#: builtin/apply.c:822
 #, c-format
 msgid "Cannot prepare timestamp regexp %s"
 msgstr "No es pot preparar l'expressió regular de marca de temps %s"
 
-#: builtin/apply.c:835
+#: builtin/apply.c:831
 #, c-format
 msgid "regexec returned %d for input: %s"
 msgstr "regexec ha retornat %d per l'entrada: %s"
 
-#: builtin/apply.c:916
+#: builtin/apply.c:912
 #, c-format
 msgid "unable to find filename in patch at line %d"
 msgstr "no s'ha pogut trobar el nom de fitxer en el pedaç a la línia %d"
 
-#: builtin/apply.c:948
+#: builtin/apply.c:944
 #, c-format
 msgid "git apply: bad git-diff - expected /dev/null, got %s on line %d"
 msgstr ""
 "git apply: git-diff dolent - /dev/null esperat, %s rebut en la línia %d"
 
-#: builtin/apply.c:952
+#: builtin/apply.c:948
 #, c-format
 msgid "git apply: bad git-diff - inconsistent new filename on line %d"
 msgstr ""
 "git apply: git-diff dolent - nom de fitxer nou inconsistent en la línia %d"
 
-#: builtin/apply.c:953
+#: builtin/apply.c:949
 #, c-format
 msgid "git apply: bad git-diff - inconsistent old filename on line %d"
 msgstr ""
 "git apply: git-diff dolent - nom de fitxer antic inconsistent en la línia %d"
 
-#: builtin/apply.c:960
+#: builtin/apply.c:956
 #, c-format
 msgid "git apply: bad git-diff - expected /dev/null on line %d"
 msgstr "git apply: git-diff dolent - /dev/null esperat en la línia %d"
 
-#: builtin/apply.c:1423
+#: builtin/apply.c:1419
 #, c-format
 msgid "recount: unexpected line: %.*s"
 msgstr "recompte: línia inesperada: %.*s"
 
-#: builtin/apply.c:1480
+#: builtin/apply.c:1476
 #, c-format
 msgid "patch fragment without header at line %d: %.*s"
 msgstr "fragment de pedaç sense capçalera a la línia %d: %.*s"
 
-#: builtin/apply.c:1497
+#: builtin/apply.c:1493
 #, c-format
 msgid ""
 "git diff header lacks filename information when removing %d leading pathname "
 "component (line %d)"
 msgid_plural ""
 "git diff header lacks filename information when removing %d leading pathname "
@@ -2219,409 +2228,428 @@
 "a la capçalera de git diff li manca informació de nom de fitxer en eliminar "
 "%d component de nom de camí inicial (línia %d)"
 msgstr[1] ""
 "a la capçalera de git diff li manca informació de nom de fitxer en eliminar "
 "%d components de nom de camí inicial (línia %d)"
 
-#: builtin/apply.c:1657
+#: builtin/apply.c:1656
 msgid "new file depends on old contents"
 msgstr "el fitxer nou depèn dels continguts antics"
 
-#: builtin/apply.c:1659
+#: builtin/apply.c:1658
 msgid "deleted file still has contents"
 msgstr "el fitxer suprimit encara té continguts"
 
-#: builtin/apply.c:1685
+#: builtin/apply.c:1684
 #, c-format
 msgid "corrupt patch at line %d"
 msgstr "el pedaç és malmès a la línia %d"
 
-#: builtin/apply.c:1721
+#: builtin/apply.c:1720
 #, c-format
 msgid "new file %s depends on old contents"
 msgstr "el fitxer nou %s depèn dels continguts antics"
 
-#: builtin/apply.c:1723
+#: builtin/apply.c:1722
 #, c-format
 msgid "deleted file %s still has contents"
 msgstr "el fitxer suprimit %s encara té continguts"
 
-#: builtin/apply.c:1726
+#: builtin/apply.c:1725
 #, c-format
 msgid "** warning: file %s becomes empty but is not deleted"
 msgstr "** avís: el fitxer %s queda buit però no es suprimeix"
 
-#: builtin/apply.c:1872
+#: builtin/apply.c:1871
 #, c-format
 msgid "corrupt binary patch at line %d: %.*s"
 msgstr "pedaç binari malmès a la línia %d: %.*s"
 
-#: builtin/apply.c:1901
+#: builtin/apply.c:1900
 #, c-format
 msgid "unrecognized binary patch at line %d"
 msgstr "pedaç binari no reconegut a la línia %d"
 
-#: builtin/apply.c:2052
+#: builtin/apply.c:2051
 #, c-format
 msgid "patch with only garbage at line %d"
 msgstr "pedaç amb només escombraries a la línia %d"
 
-#: builtin/apply.c:2142
+#: builtin/apply.c:2141
 #, c-format
 msgid "unable to read symlink %s"
 msgstr "no s'ha pogut llegir l'enllaç simbòlic %s"
 
-#: builtin/apply.c:2146
+#: builtin/apply.c:2145
 #, c-format
 msgid "unable to open or read %s"
 msgstr "no s'ha pogut obrir o llegir %s"
 
-#: builtin/apply.c:2754
+#: builtin/apply.c:2778
 #, c-format
 msgid "invalid start of line: '%c'"
 msgstr "inici de línia no vàlid: '%c'"
 
-#: builtin/apply.c:2872
+#: builtin/apply.c:2897
 #, c-format
 msgid "Hunk #%d succeeded at %d (offset %d line)."
 msgid_plural "Hunk #%d succeeded at %d (offset %d lines)."
 msgstr[0] "El tros #%d ha tingut éxit a %d (desplaçament %d línia)."
 msgstr[1] "El tros #%d ha tingut éxit a %d (desplaçament %d línies)."
 
-#: builtin/apply.c:2884
+#: builtin/apply.c:2909
 #, c-format
 msgid "Context reduced to (%ld/%ld) to apply fragment at %d"
 msgstr "El context s'ha reduït a (%ld/%ld) per a aplicar el fragment a %d"
 
-#: builtin/apply.c:2890
+#: builtin/apply.c:2915
 #, c-format
 msgid ""
 "while searching for:\n"
 "%.*s"
 msgstr ""
 "tot cercant:\n"
 "%.*s"
 
-#: builtin/apply.c:2909
+#: builtin/apply.c:2935
 #, c-format
 msgid "missing binary patch data for '%s'"
 msgstr "manquen les dades de pedaç binari de '%s'"
 
-#: builtin/apply.c:3010
+#: builtin/apply.c:3036
 #, c-format
 msgid "binary patch does not apply to '%s'"
 msgstr "el pedaç binari no s'aplica a '%s'"
 
-#: builtin/apply.c:3016
+#: builtin/apply.c:3042
 #, c-format
 msgid "binary patch to '%s' creates incorrect result (expecting %s, got %s)"
 msgstr ""
 "el pedaç binari a '%s' crea un resultat incorrecte (esperant %s, %s rebut)"
 
-#: builtin/apply.c:3037
+#: builtin/apply.c:3063
 #, c-format
 msgid "patch failed: %s:%ld"
 msgstr "el pedaç ha fallat: %s:%ld"
 
-#: builtin/apply.c:3161
+#: builtin/apply.c:3187
 #, c-format
 msgid "cannot checkout %s"
 msgstr "no es pot agafar %s"
 
-#: builtin/apply.c:3206 builtin/apply.c:3215 builtin/apply.c:3260
+#: builtin/apply.c:3232 builtin/apply.c:3243 builtin/apply.c:3288
 #, c-format
 msgid "read of %s failed"
 msgstr "la lectura de %s ha fallat"
 
-#: builtin/apply.c:3240 builtin/apply.c:3462
+#: builtin/apply.c:3240
+#, c-format
+msgid "reading from '%s' beyond a symbolic link"
+msgstr "llegint de '%s' més enllà d'un enllaç simbòlic"
+
+#: builtin/apply.c:3268 builtin/apply.c:3490
 #, c-format
 msgid "path %s has been renamed/deleted"
 msgstr "el camí %s s'ha canviat de nom / s'ha suprimit"
 
-#: builtin/apply.c:3321 builtin/apply.c:3476
+#: builtin/apply.c:3349 builtin/apply.c:3504
 #, c-format
 msgid "%s: does not exist in index"
 msgstr "%s: no existeix en l'índex"
 
-#: builtin/apply.c:3325 builtin/apply.c:3468 builtin/apply.c:3490
+#: builtin/apply.c:3353 builtin/apply.c:3496 builtin/apply.c:3518
 #, c-format
 msgid "%s: %s"
 msgstr "%s: %s"
 
-#: builtin/apply.c:3330 builtin/apply.c:3484
+#: builtin/apply.c:3358 builtin/apply.c:3512
 #, c-format
 msgid "%s: does not match index"
 msgstr "%s: no coincideix amb l'índex"
 
-#: builtin/apply.c:3432
+#: builtin/apply.c:3460
 msgid "removal patch leaves file contents"
 msgstr "el pedaç de supressió deixa els continguts dels fitxers"
 
-#: builtin/apply.c:3501
+#: builtin/apply.c:3529
 #, c-format
 msgid "%s: wrong type"
 msgstr "%s: tipus erroni"
 
-#: builtin/apply.c:3503
+#: builtin/apply.c:3531
 #, c-format
 msgid "%s has type %o, expected %o"
 msgstr "%s és del tipus %o, s'esperava %o"
 
-#: builtin/apply.c:3604
+#: builtin/apply.c:3690 builtin/apply.c:3692
+#, c-format
+msgid "invalid path '%s'"
+msgstr "camí no vàlid: %s"
+
+#: builtin/apply.c:3747
 #, c-format
 msgid "%s: already exists in index"
 msgstr "%s: ja existeix en l'índex"
 
-#: builtin/apply.c:3607
+#: builtin/apply.c:3750
 #, c-format
 msgid "%s: already exists in working directory"
 msgstr "%s: ja existeix en el directori de treball"
 
-#: builtin/apply.c:3627
+#: builtin/apply.c:3770
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o)"
 msgstr "el mode nou (%o) de %s no coincideix amb el mode antic (%o)"
 
-#: builtin/apply.c:3632
+#: builtin/apply.c:3775
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o) of %s"
 msgstr "el mode nou (%o) de %s no coincideix amb el mode antic (%o) de %s"
 
-#: builtin/apply.c:3640
+#: builtin/apply.c:3795
+#, c-format
+msgid "affected file '%s' is beyond a symbolic link"
+msgstr "el fitxer afectat '%s' és més enllà d'un enllaç simbòlic"
+
+#: builtin/apply.c:3799
 #, c-format
 msgid "%s: patch does not apply"
 msgstr "%s: el pedaç no aplica"
 
-#: builtin/apply.c:3653
+#: builtin/apply.c:3813
 #, c-format
 msgid "Checking patch %s..."
 msgstr "Comprovant el pedaç %s..."
 
-#: builtin/apply.c:3746 builtin/checkout.c:231 builtin/reset.c:135
+#: builtin/apply.c:3906 builtin/checkout.c:231 builtin/reset.c:135
 #, c-format
 msgid "make_cache_entry failed for path '%s'"
 msgstr "make_cache_entry ha fallat per al camí '%s'"
 
-#: builtin/apply.c:3889
+#: builtin/apply.c:4049
 #, c-format
 msgid "unable to remove %s from index"
 msgstr "no s'ha pogut eliminar %s de l'índex"
 
-#: builtin/apply.c:3918
+#: builtin/apply.c:4078
 #, c-format
 msgid "corrupt patch for submodule %s"
 msgstr "pedaç corrupte per al submòdul %s"
 
-#: builtin/apply.c:3922
+#: builtin/apply.c:4082
 #, c-format
 msgid "unable to stat newly created file '%s'"
 msgstr "no s'ha pogut fer stat al fitxer novament creat '%s'"
 
-#: builtin/apply.c:3927
+#: builtin/apply.c:4087
 #, c-format
 msgid "unable to create backing store for newly created file %s"
 msgstr ""
 "no s'ha pogut crear un magatzem de recolzament per al fitxer novament creat "
 "%s"
 
-#: builtin/apply.c:3930 builtin/apply.c:4038
+#: builtin/apply.c:4090 builtin/apply.c:4198
 #, c-format
 msgid "unable to add cache entry for %s"
 msgstr "no s'ha pogut afegir una entrada de cau per a %s"
 
-#: builtin/apply.c:3963
+#: builtin/apply.c:4123
 #, c-format
 msgid "closing file '%s'"
 msgstr "tancant el fitxer '%s'"
 
-#: builtin/apply.c:4012
+#: builtin/apply.c:4172
 #, c-format
 msgid "unable to write file '%s' mode %o"
 msgstr "no s'ha pogut escriure el fitxer '%s' mode %o"
 
-#: builtin/apply.c:4099
+#: builtin/apply.c:4259
 #, c-format
 msgid "Applied patch %s cleanly."
 msgstr "El pedaç %s s'ha aplicat netament."
 
-#: builtin/apply.c:4107
+#: builtin/apply.c:4267
 msgid "internal error"
 msgstr "error intern"
 
-#: builtin/apply.c:4110
+#: builtin/apply.c:4270
 #, c-format
 msgid "Applying patch %%s with %d reject..."
 msgid_plural "Applying patch %%s with %d rejects..."
 msgstr[0] "Aplicant el pedaç %%s amb %d rebuig"
 msgstr[1] "Aplicant el pedaç %%s amb %d rebuitjos"
 
-#: builtin/apply.c:4120
+#: builtin/apply.c:4280
 #, c-format
 msgid "truncating .rej filename to %.*s.rej"
 msgstr "truncant el nom del fitxer .rej a %.*s.rej"
 
-#: builtin/apply.c:4141
+#: builtin/apply.c:4301
 #, c-format
 msgid "Hunk #%d applied cleanly."
 msgstr "El tros #%d s'ha aplicat netament."
 
-#: builtin/apply.c:4144
+#: builtin/apply.c:4304
 #, c-format
 msgid "Rejected hunk #%d."
 msgstr "S'ha rebutjat el tros #%d."
 
-#: builtin/apply.c:4234
+#: builtin/apply.c:4394
 msgid "unrecognized input"
 msgstr "entrada no reconeguda"
 
-#: builtin/apply.c:4245
+#: builtin/apply.c:4405
 msgid "unable to read index file"
 msgstr "no es pot llegir el fitxer d'índex"
 
-#: builtin/apply.c:4362 builtin/apply.c:4365 builtin/clone.c:92
-#: builtin/fetch.c:93
+#: builtin/apply.c:4522 builtin/apply.c:4525 builtin/clone.c:92
+#: builtin/fetch.c:92
 msgid "path"
 msgstr "camí"
 
-#: builtin/apply.c:4363
+#: builtin/apply.c:4523
 msgid "don't apply changes matching the given path"
 msgstr "no apliquis els canvis que coincideixin amb el camí donat"
 
-#: builtin/apply.c:4366
+#: builtin/apply.c:4526
 msgid "apply changes matching the given path"
 msgstr "aplica els canvis que coincideixin amb el camí donat"
 
-#: builtin/apply.c:4368
+#: builtin/apply.c:4528
 msgid "num"
 msgstr "número"
 
-#: builtin/apply.c:4369
+#: builtin/apply.c:4529
 msgid "remove <num> leading slashes from traditional diff paths"
 msgstr ""
 "elimina <nombre> barres obliqües inicials dels camins de diferència "
 "tradicionals"
 
-#: builtin/apply.c:4372
+#: builtin/apply.c:4532
 msgid "ignore additions made by the patch"
 msgstr "ignora afegiments fets pel pedaç"
 
-#: builtin/apply.c:4374
+#: builtin/apply.c:4534
 msgid "instead of applying the patch, output diffstat for the input"
 msgstr ""
 "en lloc d'aplicar el pedaç, emet les estadístiques de diferència de l'entrada"
 
-#: builtin/apply.c:4378
+#: builtin/apply.c:4538
 msgid "show number of added and deleted lines in decimal notation"
 msgstr "mostra el nombre de línies afegides i suprimides en notació decimal"
 
-#: builtin/apply.c:4380
+#: builtin/apply.c:4540
 msgid "instead of applying the patch, output a summary for the input"
 msgstr "en lloc d'aplicar el pedaç, emet un resum de l'entrada"
 
-#: builtin/apply.c:4382
+#: builtin/apply.c:4542
 msgid "instead of applying the patch, see if the patch is applicable"
 msgstr "en lloc d'aplicar el pedaç, veges si el pedaç és aplicable"
 
-#: builtin/apply.c:4384
+#: builtin/apply.c:4544
 msgid "make sure the patch is applicable to the current index"
 msgstr "assegura que el pedaç sigui aplicable a l'índex actual"
 
-#: builtin/apply.c:4386
+#: builtin/apply.c:4546
 msgid "apply a patch without touching the working tree"
 msgstr "aplica un pedaç sense tocar l'arbre de treball"
 
-#: builtin/apply.c:4388
+#: builtin/apply.c:4548
+msgid "accept a patch that touches outside the working area"
+msgstr "accepta un pedaç que toqui fora de l'àrea de treball"
+
+#: builtin/apply.c:4550
 msgid "also apply the patch (use with --stat/--summary/--check)"
 msgstr "aplica el pedaç també (useu amb --stat/--summary/--check)"
 
-#: builtin/apply.c:4390
+#: builtin/apply.c:4552
 msgid "attempt three-way merge if a patch does not apply"
 msgstr "intenta una fusió de tres vies si el pedaç no s'aplica"
 
-#: builtin/apply.c:4392
+#: builtin/apply.c:4554
 msgid "build a temporary index based on embedded index information"
 msgstr "construeix un índex temporal basat en la informació d'índex incrustada"
 
-#: builtin/apply.c:4394 builtin/checkout-index.c:198 builtin/ls-files.c:455
+#: builtin/apply.c:4556 builtin/checkout-index.c:198 builtin/ls-files.c:412
 msgid "paths are separated with NUL character"
 msgstr "els camins es separen amb el caràcter NUL"
 
-#: builtin/apply.c:4397
+#: builtin/apply.c:4559
 msgid "ensure at least <n> lines of context match"
 msgstr "assegura't que almenys <n> línies de context coincideixin"
 
-#: builtin/apply.c:4398
+#: builtin/apply.c:4560
 msgid "action"
 msgstr "acció"
 
-#: builtin/apply.c:4399
+#: builtin/apply.c:4561
 msgid "detect new or modified lines that have whitespace errors"
 msgstr ""
 "detecta les línies noves o modificades que tinguin errors d'espai en blanc"
 
-#: builtin/apply.c:4402 builtin/apply.c:4405
+#: builtin/apply.c:4564 builtin/apply.c:4567
 msgid "ignore changes in whitespace when finding context"
 msgstr "ignora els canvis d'espai en blanc en cercar context"
 
-#: builtin/apply.c:4408
+#: builtin/apply.c:4570
 msgid "apply the patch in reverse"
 msgstr "aplica el pedaç al revés"
 
-#: builtin/apply.c:4410
+#: builtin/apply.c:4572
 msgid "don't expect at least one line of context"
 msgstr "no esperis almenys una línia de context"
 
-#: builtin/apply.c:4412
+#: builtin/apply.c:4574
 msgid "leave the rejected hunks in corresponding *.rej files"
 msgstr "deixa els trossos rebutjats en fitxers *.reg coresspondents"
 
-#: builtin/apply.c:4414
+#: builtin/apply.c:4576
 msgid "allow overlapping hunks"
 msgstr "permet trossos encavalcants"
 
-#: builtin/apply.c:4417
+#: builtin/apply.c:4579
 msgid "tolerate incorrectly detected missing new-line at the end of file"
 msgstr "tolera una línia nova incorrectament detectada al final del fitxer"
 
-#: builtin/apply.c:4420
+#: builtin/apply.c:4582
 msgid "do not trust the line counts in the hunk headers"
 msgstr "no confiïs en els recomptes de línia en les capçaleres dels trossos"
 
-#: builtin/apply.c:4422
+#: builtin/apply.c:4584
 msgid "root"
 msgstr "arrel"
 
-#: builtin/apply.c:4423
+#: builtin/apply.c:4585
 msgid "prepend <root> to all filenames"
 msgstr "anteposa <arrel> a tots els noms de fitxer"
 
-#: builtin/apply.c:4445
+#: builtin/apply.c:4607
 msgid "--3way outside a repository"
 msgstr "--3way fora d'un dipòsit"
 
-#: builtin/apply.c:4453
+#: builtin/apply.c:4615
 msgid "--index outside a repository"
 msgstr "--index fora d'un dipòsit"
 
-#: builtin/apply.c:4456
+#: builtin/apply.c:4618
 msgid "--cached outside a repository"
 msgstr "--cached fora d'un dipòsit"
 
-#: builtin/apply.c:4472
+#: builtin/apply.c:4637
 #, c-format
 msgid "can't open patch '%s'"
 msgstr "no es pot obrir el pedaç '%s'"
 
-#: builtin/apply.c:4486
+#: builtin/apply.c:4651
 #, c-format
 msgid "squelched %d whitespace error"
 msgid_plural "squelched %d whitespace errors"
 msgstr[0] "%d error d'espai en blanc omès"
 msgstr[1] "%d errors d'espai en blanc omesos"
 
-#: builtin/apply.c:4492 builtin/apply.c:4502
+#: builtin/apply.c:4657 builtin/apply.c:4667
 #, c-format
 msgid "%d line adds whitespace errors."
 msgid_plural "%d lines add whitespace errors."
 msgstr[0] "%d línia afegeix errors d'espai en blanc."
 msgstr[1] "%d línies afegeixen errors d'espai en blanc."
 
@@ -2670,142 +2698,142 @@
 
 #: builtin/bisect--helper.c:19
 msgid "update BISECT_HEAD instead of checking out the current commit"
 msgstr "actualitza BISECT_HEAD en lloc d'agafar la comissió actual"
 
 #: builtin/blame.c:30
-msgid "git blame [options] [rev-opts] [rev] [--] file"
-msgstr "git blame [opcions] [opcions-de-revisió] [revisió] [--] fitxer"
+msgid "git blame [<options>] [<rev-opts>] [<rev>] [--] file"
+msgstr "git blame [<opcions>] [<opcions-de-revisió>] [<revisió>] [--] fitxer"
 
 #: builtin/blame.c:35
-msgid "[rev-opts] are documented in git-rev-list(1)"
-msgstr "les [opcions-de-revisió] estan documentades en git-rev-list(1)"
+msgid "<rev-opts> are documented in git-rev-list(1)"
+msgstr "es documenten les <opcions-de-revisió> en git-rev-list(1)"
 
-#: builtin/blame.c:2501
+#: builtin/blame.c:2500
 msgid "Show blame entries as we find them, incrementally"
 msgstr "Mostra les entrades de culpa mentre les trobem, incrementalment"
 
-#: builtin/blame.c:2502
+#: builtin/blame.c:2501
 msgid "Show blank SHA-1 for boundary commits (Default: off)"
 msgstr ""
 "Mostra un SHA-1 en blanc per les comissions de frontera (Per defecte: "
 "desactivat)"
 
-#: builtin/blame.c:2503
+#: builtin/blame.c:2502
 msgid "Do not treat root commits as boundaries (Default: off)"
 msgstr ""
 "No tractis les comissions d'arrel com a límits (Per defecte: desactivat)"
 
-#: builtin/blame.c:2504
+#: builtin/blame.c:2503
 msgid "Show work cost statistics"
 msgstr "Mostra les estadístiques de preu de treball"
 
-#: builtin/blame.c:2505
+#: builtin/blame.c:2504
 msgid "Show output score for blame entries"
 msgstr "Mostra la puntuació de sortida de les entrades de culpa"
 
-#: builtin/blame.c:2506
+#: builtin/blame.c:2505
 msgid "Show original filename (Default: auto)"
 msgstr "Mostra el nom de fitxer original (Per defecte: automàtic)"
 
-#: builtin/blame.c:2507
+#: builtin/blame.c:2506
 msgid "Show original linenumber (Default: off)"
 msgstr "Mostra el número de línia original (Per defecte: desactivat)"
 
-#: builtin/blame.c:2508
+#: builtin/blame.c:2507
 msgid "Show in a format designed for machine consumption"
 msgstr "Presenta en un format dissenyat per consumpció per màquina"
 
-#: builtin/blame.c:2509
+#: builtin/blame.c:2508
 msgid "Show porcelain format with per-line commit information"
 msgstr "Mostra el format de porcellana amb informació de comissió per línia"
 
-#: builtin/blame.c:2510
+#: builtin/blame.c:2509
 msgid "Use the same output mode as git-annotate (Default: off)"
 msgstr ""
 "Usa el mateix mode de sortida que git-annotate (Per defecte: desactivat)"
 
-#: builtin/blame.c:2511
+#: builtin/blame.c:2510
 msgid "Show raw timestamp (Default: off)"
 msgstr "Mostra la marca de temps crua (Per defecte: desactivat)"
 
-#: builtin/blame.c:2512
+#: builtin/blame.c:2511
 msgid "Show long commit SHA1 (Default: off)"
 msgstr "Mostra l'SHA1 de comissió llarg (Per defecte: desactivat)"
 
-#: builtin/blame.c:2513
+#: builtin/blame.c:2512
 msgid "Suppress author name and timestamp (Default: off)"
 msgstr "Omet el nom d'autor i la marca de temps (Per defecte: desactivat)"
 
-#: builtin/blame.c:2514
+#: builtin/blame.c:2513
 msgid "Show author email instead of name (Default: off)"
 msgstr ""
 "Mostra l'adreça de correu electrònic de l'autor en lloc del nom (Per "
 "defecte: desactivat)"
 
-#: builtin/blame.c:2515
+#: builtin/blame.c:2514
 msgid "Ignore whitespace differences"
 msgstr "Ignora les diferencies d'espai en blanc"
 
-#: builtin/blame.c:2516
+#: builtin/blame.c:2515
 msgid "Spend extra cycles to find better match"
 msgstr "Gasta cicles extres per a trobar una coincidència millor"
 
-#: builtin/blame.c:2517
+#: builtin/blame.c:2516
 msgid "Use revisions from <file> instead of calling git-rev-list"
 msgstr "Usa les revisions de <fitxer> en lloc d'invocar git-rev-list"
 
-#: builtin/blame.c:2518
+#: builtin/blame.c:2517
 msgid "Use <file>'s contents as the final image"
 msgstr "Usa els continguts de <fitxer> com a la imatge final"
 
-#: builtin/blame.c:2519 builtin/blame.c:2520
+#: builtin/blame.c:2518 builtin/blame.c:2519
 msgid "score"
 msgstr "puntuació"
 
-#: builtin/blame.c:2519
+#: builtin/blame.c:2518
 msgid "Find line copies within and across files"
 msgstr "Troba còpies de línia dins i a través dels fitxers"
 
-#: builtin/blame.c:2520
+#: builtin/blame.c:2519
 msgid "Find line movements within and across files"
 msgstr "Troba moviments de línia dins i a través dels fitxers"
 
-#: builtin/blame.c:2521
+#: builtin/blame.c:2520
 msgid "n,m"
 msgstr "n,m"
 
-#: builtin/blame.c:2521
+#: builtin/blame.c:2520
 msgid "Process only line range n,m, counting from 1"
 msgstr "Processa només el rang de línies n,m, comptant des de 1"
 
 #. TRANSLATORS: This string is used to tell us the maximum
 #. display width for a relative timestamp in "git blame"
 #. output.  For C locale, "4 years, 11 months ago", which
 #. takes 22 places, is the longest among various forms of
 #. relative timestamps, but your language may need more or
 #. fewer display columns.
-#: builtin/blame.c:2602
+#: builtin/blame.c:2601
 msgid "4 years, 11 months ago"
 msgstr "fa 4 anys i 11 mesos"
 
 #: builtin/branch.c:24
-msgid "git branch [options] [-r | -a] [--merged | --no-merged]"
-msgstr "git branch [opcions] [-r | -a] [--merged | --no-merged]"
+msgid "git branch [<options>] [-r | -a] [--merged | --no-merged]"
+msgstr "git branch [<opcions>] [-r | -a] [--merged | --no-merged]"
 
 #: builtin/branch.c:25
-msgid "git branch [options] [-l] [-f] <branchname> [<start-point>]"
-msgstr "git branch [opcions] [-l] [-f] <nom-de-branca> [<punt-inicial>]"
+msgid "git branch [<options>] [-l] [-f] <branch-name> [<start-point>]"
+msgstr "git branch [<opcions>] [-l] [-f] <nom-de-branca> [<punt-inicial>]"
 
 #: builtin/branch.c:26
-msgid "git branch [options] [-r] (-d | -D) <branchname>..."
-msgstr "git branch [opcions] [-r] (-d | -D) <nom-de-branca>..."
+msgid "git branch [<options>] [-r] (-d | -D) <branch-name>..."
+msgstr "git branch [<opcions>] [-r] (-d | -D) <nom-de-branca>..."
 
 #: builtin/branch.c:27
-msgid "git branch [options] (-m | -M) [<oldbranch>] <newbranch>"
-msgstr "git branch [opcions] (-m | -M) [<branca-antiga>] <branca-nova>"
+msgid "git branch [<options>] (-m | -M) [<old-branch>] <new-branch>"
+msgstr "git branch [<opcions>] (-m | -M) [<branca-antiga>] <branca-nova>"
 
 #: builtin/branch.c:152
 #, c-format
 msgid ""
 "deleting branch '%s' that has been merged to\n"
 "         '%s', but not yet merged to HEAD."
@@ -2941,268 +2969,273 @@
 
 #: builtin/branch.c:590
 #, c-format
 msgid "(no branch, bisect started on %s)"
 msgstr "(cap branca, bisecció començada en %s)"
 
-#: builtin/branch.c:593
+#: builtin/branch.c:596
 #, c-format
-msgid "(detached from %s)"
-msgstr "(separat de %s)"
+msgid "(HEAD detached at %s)"
+msgstr "(HEAD separat a %s)"
 
-#: builtin/branch.c:596
+#: builtin/branch.c:599
+#, c-format
+msgid "(HEAD detached from %s)"
+msgstr "(HEAD separat de %s)"
+
+#: builtin/branch.c:603
 msgid "(no branch)"
 msgstr "(cap branca)"
 
-#: builtin/branch.c:643
+#: builtin/branch.c:650
 #, c-format
 msgid "object '%s' does not point to a commit"
 msgstr "l'objecte '%s' no assenyala cap comissió"
 
-#: builtin/branch.c:691
+#: builtin/branch.c:698
 msgid "some refs could not be read"
 msgstr "no s'han pogut llegir algunes referències"
 
-#: builtin/branch.c:704
+#: builtin/branch.c:711
 msgid "cannot rename the current branch while not on any."
 msgstr "no es pot canviar el nom de la branca actual mentre no s'és a cap."
 
-#: builtin/branch.c:714
+#: builtin/branch.c:721
 #, c-format
 msgid "Invalid branch name: '%s'"
 msgstr "Nom de branca no vàlid: '%s'"
 
-#: builtin/branch.c:729
+#: builtin/branch.c:736
 msgid "Branch rename failed"
 msgstr "El canvi de nom de branca ha fallat"
 
-#: builtin/branch.c:733
+#: builtin/branch.c:740
 #, c-format
 msgid "Renamed a misnamed branch '%s' away"
 msgstr "S'ha canviat el nom de la branca malanomenada '%s'"
 
-#: builtin/branch.c:737
+#: builtin/branch.c:744
 #, c-format
 msgid "Branch renamed to %s, but HEAD is not updated!"
 msgstr "S'ha canviat el nom de la branca a %s, però HEAD no està actualitzat!"
 
-#: builtin/branch.c:744
+#: builtin/branch.c:751
 msgid "Branch is renamed, but update of config-file failed"
 msgstr ""
 "La branca està canviada de nom, però l'actualització del fitxer de "
 "configuració ha fallat"
 
-#: builtin/branch.c:759
+#: builtin/branch.c:766
 #, c-format
 msgid "malformed object name %s"
 msgstr "nom d'objecte %s mal format"
 
-#: builtin/branch.c:783
+#: builtin/branch.c:790
 #, c-format
 msgid "could not write branch description template: %s"
 msgstr "no s'ha pogut escriure la plantilla de descripció de branca: %s"
 
-#: builtin/branch.c:813
+#: builtin/branch.c:820
 msgid "Generic options"
 msgstr "Opcions genèriques"
 
-#: builtin/branch.c:815
+#: builtin/branch.c:822
 msgid "show hash and subject, give twice for upstream branch"
 msgstr "mostra el hash i el tema, doneu dues vegades per la branca font"
 
-#: builtin/branch.c:816
+#: builtin/branch.c:823
 msgid "suppress informational messages"
 msgstr "omet els missatges informatius"
 
-#: builtin/branch.c:817
+#: builtin/branch.c:824
 msgid "set up tracking mode (see git-pull(1))"
 msgstr "configura el mode de seguiment (vegeu git-pull(1))"
 
-#: builtin/branch.c:819
+#: builtin/branch.c:826
 msgid "change upstream info"
 msgstr "canvia la informació de font"
 
-#: builtin/branch.c:823
+#: builtin/branch.c:830
 msgid "use colored output"
 msgstr "usa sortida colorada"
 
-#: builtin/branch.c:824
+#: builtin/branch.c:831
 msgid "act on remote-tracking branches"
 msgstr "actua en branques amb seguiment remot"
 
-#: builtin/branch.c:827 builtin/branch.c:833 builtin/branch.c:854
-#: builtin/branch.c:860 builtin/commit.c:1586 builtin/commit.c:1587
-#: builtin/commit.c:1588 builtin/commit.c:1589 builtin/tag.c:616
+#: builtin/branch.c:834 builtin/branch.c:840 builtin/branch.c:861
+#: builtin/branch.c:867 builtin/commit.c:1582 builtin/commit.c:1583
+#: builtin/commit.c:1584 builtin/commit.c:1585 builtin/tag.c:616
 #: builtin/tag.c:622
 msgid "commit"
 msgstr "comissió"
 
-#: builtin/branch.c:828 builtin/branch.c:834
+#: builtin/branch.c:835 builtin/branch.c:841
 msgid "print only branches that contain the commit"
 msgstr "imprimeix només les branques que continguin la comissió"
 
-#: builtin/branch.c:840
+#: builtin/branch.c:847
 msgid "Specific git-branch actions:"
 msgstr "Accions de git-branch específiques:"
 
-#: builtin/branch.c:841
+#: builtin/branch.c:848
 msgid "list both remote-tracking and local branches"
 msgstr "llista les branques amb seguiment remot i les locals"
 
-#: builtin/branch.c:843
+#: builtin/branch.c:850
 msgid "delete fully merged branch"
 msgstr "suprimeix la branca si és completament fusionada"
 
-#: builtin/branch.c:844
+#: builtin/branch.c:851
 msgid "delete branch (even if not merged)"
 msgstr "suprimeix la branca (encara que no estigui fusionada)"
 
-#: builtin/branch.c:845
+#: builtin/branch.c:852
 msgid "move/rename a branch and its reflog"
 msgstr "mou/canvia de nom una branca i el seu registre de referència"
 
-#: builtin/branch.c:846
+#: builtin/branch.c:853
 msgid "move/rename a branch, even if target exists"
 msgstr "mou/canvia de nom una branca, encara que el destí existeixi"
 
-#: builtin/branch.c:847
+#: builtin/branch.c:854
 msgid "list branch names"
 msgstr "llista els noms de branca"
 
-#: builtin/branch.c:848
+#: builtin/branch.c:855
 msgid "create the branch's reflog"
 msgstr "crea el registre de referència de la branca"
 
-#: builtin/branch.c:850
+#: builtin/branch.c:857
 msgid "edit the description for the branch"
 msgstr "edita la descripció de la branca"
 
-#: builtin/branch.c:851
+#: builtin/branch.c:858
 msgid "force creation, move/rename, deletion"
 msgstr "força creació, moviment/canvi de nom, supressió"
 
-#: builtin/branch.c:854
+#: builtin/branch.c:861
 msgid "print only not merged branches"
 msgstr "imprimeix només les branques sense fusionar"
 
-#: builtin/branch.c:860
+#: builtin/branch.c:867
 msgid "print only merged branches"
 msgstr "imprimeix només les branques fusionades"
 
-#: builtin/branch.c:864
+#: builtin/branch.c:871
 msgid "list branches in columns"
 msgstr "llista les branques en columnes"
 
-#: builtin/branch.c:877
+#: builtin/branch.c:884
 msgid "Failed to resolve HEAD as a valid ref."
 msgstr "S'ha fallat en resoldre HEAD com a referència vàlida."
 
-#: builtin/branch.c:881 builtin/clone.c:637
+#: builtin/branch.c:888 builtin/clone.c:637
 msgid "HEAD not found below refs/heads!"
 msgstr "HEAD no trobat sota refs/heads!"
 
-#: builtin/branch.c:903
+#: builtin/branch.c:910
 msgid "--column and --verbose are incompatible"
 msgstr "--column i --verbose són incompatibles"
 
-#: builtin/branch.c:914 builtin/branch.c:953
+#: builtin/branch.c:921 builtin/branch.c:960
 msgid "branch name required"
 msgstr "cal el nom de branca"
 
-#: builtin/branch.c:929
+#: builtin/branch.c:936
 msgid "Cannot give description to detached HEAD"
 msgstr "No es pot donar descripció a un HEAD separat"
 
-#: builtin/branch.c:934
+#: builtin/branch.c:941
 msgid "cannot edit description of more than one branch"
 msgstr "no es pot editar la descripció de més d'una branca"
 
-#: builtin/branch.c:941
+#: builtin/branch.c:948
 #, c-format
 msgid "No commit on branch '%s' yet."
 msgstr "Encara no hi ha comissió en la branca '%s'."
 
-#: builtin/branch.c:944
+#: builtin/branch.c:951
 #, c-format
 msgid "No branch named '%s'."
 msgstr "No hi ha branca amb nom '%s'."
 
-#: builtin/branch.c:959
+#: builtin/branch.c:966
 msgid "too many branches for a rename operation"
 msgstr "hi ha massa branques per a una operació de canvi de nom"
 
-#: builtin/branch.c:964
+#: builtin/branch.c:971
 msgid "too many branches to set new upstream"
 msgstr "hi ha massa branques per a establir una nova font"
 
-#: builtin/branch.c:968
+#: builtin/branch.c:975
 #, c-format
 msgid ""
 "could not set upstream of HEAD to %s when it does not point to any branch."
 msgstr ""
 "no s'ha pogut establir la font de HEAD com a %s quan no assenyala cap branca."
 
-#: builtin/branch.c:971 builtin/branch.c:993 builtin/branch.c:1014
+#: builtin/branch.c:978 builtin/branch.c:1000 builtin/branch.c:1021
 #, c-format
 msgid "no such branch '%s'"
 msgstr "no hi ha tal branca '%s'"
 
-#: builtin/branch.c:975
+#: builtin/branch.c:982
 #, c-format
 msgid "branch '%s' does not exist"
 msgstr "la branca '%s' no existeix"
 
-#: builtin/branch.c:987
+#: builtin/branch.c:994
 msgid "too many branches to unset upstream"
 msgstr "hi ha massa branques per a desestablir la font"
 
-#: builtin/branch.c:991
+#: builtin/branch.c:998
 msgid "could not unset upstream of HEAD when it does not point to any branch."
 msgstr ""
 "no s'ha pogut desestablir la font de HEAD perquè no assenyala cap branca."
 
-#: builtin/branch.c:997
+#: builtin/branch.c:1004
 #, c-format
 msgid "Branch '%s' has no upstream information"
 msgstr "La branca '%s' no té informació de font"
 
-#: builtin/branch.c:1011
+#: builtin/branch.c:1018
 msgid "it does not make sense to create 'HEAD' manually"
 msgstr "no té sentit crear 'HEAD' manualment"
 
-#: builtin/branch.c:1017
+#: builtin/branch.c:1024
 msgid "-a and -r options to 'git branch' do not make sense with a branch name"
 msgstr ""
 "les opcions -a i -r a 'git branch' no tenen sentit amb un nom de branca"
 
-#: builtin/branch.c:1020
+#: builtin/branch.c:1027
 #, c-format
 msgid ""
 "The --set-upstream flag is deprecated and will be removed. Consider using --"
 "track or --set-upstream-to\n"
 msgstr ""
 "La bandera --set-upstream està desaprovada i s'eliminarà. Considereu usar --"
 "track o --set-upstream-to\n"
 
-#: builtin/branch.c:1037
+#: builtin/branch.c:1044
 #, c-format
 msgid ""
 "\n"
 "If you wanted to make '%s' track '%s', do this:\n"
 "\n"
 msgstr ""
 "\n"
 "Si volíeu fer '%s' seguir '%s', feu això:\n"
 "\n"
 
-#: builtin/branch.c:1038
+#: builtin/branch.c:1045
 #, c-format
 msgid "    git branch -d %s\n"
 msgstr "    git branch -d %s\n"
 
-#: builtin/branch.c:1039
+#: builtin/branch.c:1046
 #, c-format
 msgid "    git branch --set-upstream-to %s\n"
 msgstr "    git branch --set-upstream-to %s\n"
 
 #: builtin/bundle.c:47
 #, c-format
@@ -3214,61 +3247,61 @@
 msgstr "Cal un dipòsit per a fer un farcell."
 
 #: builtin/bundle.c:60
 msgid "Need a repository to unbundle."
 msgstr "Cal un dipòsit per a desfer un farcell."
 
-#: builtin/cat-file.c:328
-msgid "git cat-file (-t|-s|-e|-p|<type>|--textconv) <object>"
-msgstr "git cat-file (-t|-s|-e|-p|<tipus>|--textconv) <objecte>"
-
-#: builtin/cat-file.c:329
-msgid "git cat-file (--batch|--batch-check) < <list_of_objects>"
-msgstr "git cat-file (--batch|--batch-check) < <llista_de_objectes>"
+#: builtin/cat-file.c:326
+msgid "git cat-file (-t | -s | -e | -p | <type> | --textconv) <object>"
+msgstr "git cat-file (-t | -s | -e | -p | <tipus> | --textconv) <objecte>"
+
+#: builtin/cat-file.c:327
+msgid "git cat-file (--batch | --batch-check) < <list-of-objects>"
+msgstr "git cat-file (--batch | --batch-check) < <llista-d'objectes>"
 
-#: builtin/cat-file.c:366
+#: builtin/cat-file.c:364
 msgid "<type> can be one of: blob, tree, commit, tag"
 msgstr "<tipus> pot ser un de: blob, tree, commit, tag"
 
-#: builtin/cat-file.c:367
+#: builtin/cat-file.c:365
 msgid "show object type"
 msgstr "mostra el tipus de l'objecte"
 
-#: builtin/cat-file.c:368
+#: builtin/cat-file.c:366
 msgid "show object size"
 msgstr "mostra la mida de l'objecte"
 
-#: builtin/cat-file.c:370
+#: builtin/cat-file.c:368
 msgid "exit with zero when there's no error"
 msgstr "surt amb zero quan no hi ha error"
 
-#: builtin/cat-file.c:371
+#: builtin/cat-file.c:369
 msgid "pretty-print object's content"
 msgstr "imprimeix bellament el contingut de l'objecte"
 
-#: builtin/cat-file.c:373
+#: builtin/cat-file.c:371
 msgid "for blob objects, run textconv on object's content"
 msgstr "en els objectes de blob, executa textconv en el contingut de l'objecte"
 
-#: builtin/cat-file.c:375
+#: builtin/cat-file.c:373
 msgid "show info and content of objects fed from the standard input"
 msgstr ""
 "mostra la informació i contingut dels objectes rebuts de l'entrada estàndard"
 
-#: builtin/cat-file.c:378
+#: builtin/cat-file.c:376
 msgid "show info about objects fed from the standard input"
 msgstr "mostra informació sobre els objectes rebuts de l'entrada estàndard"
 
 #: builtin/check-attr.c:11
-msgid "git check-attr [-a | --all | attr...] [--] pathname..."
-msgstr "git check-attr [-a | --all | atribut...] [--] nom-de-camí..."
+msgid "git check-attr [-a | --all | <attr>...] [--] <pathname>..."
+msgstr "git check-attr [-a | --all | <atribut>...] [--] <nom-de-camí>..."
 
 #: builtin/check-attr.c:12
-msgid "git check-attr --stdin [-z] [-a | --all | attr...] < <list-of-paths>"
+msgid "git check-attr --stdin [-z] [-a | --all | <attr>...] < <list-of-paths>"
 msgstr ""
-"git check-attr --stdin [-z] [-a | --all | atribut...] < <llista-de-camins>"
+"git check-attr --stdin [-z] [-a | --all | <atribut>...] < <llista-de-camins>"
 
 #: builtin/check-attr.c:19
 msgid "report all attributes set on file"
 msgstr "informa de tots els atributs establerts en el fitxer"
 
 #: builtin/check-attr.c:20
@@ -3317,14 +3350,14 @@
 
 #: builtin/check-ignore.c:168
 msgid "--non-matching is only valid with --verbose"
 msgstr "--non-matching és vàlid només amb --verbose"
 
 #: builtin/check-mailmap.c:8
-msgid "git check-mailmap [options] <contact>..."
-msgstr "git check-mailmap [opcions] <contacte>..."
+msgid "git check-mailmap [<options>] <contact>..."
+msgstr "git check-mailmap [<opcions>] <contacte>..."
 
 #: builtin/check-mailmap.c:13
 msgid "also read contacts from stdin"
 msgstr "també llegeix els contactes des d'stdin"
 
 #: builtin/check-mailmap.c:24
@@ -3334,14 +3367,14 @@
 
 #: builtin/check-mailmap.c:47
 msgid "no contacts specified"
 msgstr "no hi ha contactes especificats"
 
 #: builtin/checkout-index.c:126
-msgid "git checkout-index [options] [--] [<file>...]"
-msgstr "git checkout-index [opcions] [--] [<fitxer>...]"
+msgid "git checkout-index [<options>] [--] [<file>...]"
+msgstr "git checkout-index [<opcions>] [--] [<fitxer>...]"
 
 #: builtin/checkout-index.c:188
 msgid "check out all files in the index"
 msgstr "agafa tots els fitxers en l'índex"
 
 #: builtin/checkout-index.c:189
@@ -3378,18 +3411,18 @@
 
 #: builtin/checkout-index.c:208
 msgid "copy out the files from named stage"
 msgstr "copia els fitxers des de l'etapa anomenada"
 
 #: builtin/checkout.c:25
-msgid "git checkout [options] <branch>"
-msgstr "git checkout [opcions] <branca>"
+msgid "git checkout [<options>] <branch>"
+msgstr "git checkout [<opcions>] <branca>"
 
 #: builtin/checkout.c:26
-msgid "git checkout [options] [<branch>] -- <file>..."
-msgstr "git checkout [opcions] [<branca>] -- <fitxer>..."
+msgid "git checkout [<options>] [<branch>] -- <file>..."
+msgstr "git checkout [<opcions>] [<branca>] -- <fitxer>..."
 
 #: builtin/checkout.c:132 builtin/checkout.c:165
 #, c-format
 msgid "path '%s' does not have our version"
 msgstr "el camí '%s' no té la versió nostra"
 
@@ -3513,19 +3546,19 @@
 #: builtin/checkout.c:747
 #, c-format
 msgid ""
 "If you want to keep them by creating a new branch, this may be a good time\n"
 "to do so with:\n"
 "\n"
-" git branch new_branch_name %s\n"
+" git branch <new-branch-name> %s\n"
 "\n"
 msgstr ""
-"Si els voleu retenir per a crear una branca nova, ara pot ser un bon moment\n"
-"per a fer-ho amb:\n"
+"Si les voleu retenir creant una branca nova, ara pot ser un bon moment per\n"
+"a fer-ho amb:\n"
 "\n"
-" git branch nom_de_branca_nova %s\n"
+" git branch <nom-de-branca-nova> %s\n"
 "\n"
 
 #: builtin/checkout.c:777
 msgid "internal error in revision walk"
 msgstr "error intern en el passeig per revisions"
 
@@ -3635,14 +3668,14 @@
 
 #: builtin/checkout.c:1128
 msgid "do not limit pathspecs to sparse entries only"
 msgstr "no limitis les especificacions de camí només a entrades escasses"
 
 #: builtin/checkout.c:1130
-msgid "second guess 'git checkout no-such-branch'"
-msgstr "dubta 'git checkout cap-branca-així'"
+msgid "second guess 'git checkout <no-such-branch>'"
+msgstr "dubta 'git checkout <cap-branca-així>'"
 
 #: builtin/checkout.c:1153
 msgid "-b, -B and --orphan are mutually exclusive"
 msgstr "-b, -B i --orphan són mutualment exclusius"
 
 #: builtin/checkout.c:1170
@@ -3758,22 +3791,23 @@
 msgstr "AVÍS: No es pot trobar ítems que coincideixin amb: %s"
 
 #: builtin/clean.c:717
 msgid "Select items to delete"
 msgstr "Selecciona els ítems a suprimir"
 
-#: builtin/clean.c:757
+#. TRANSLATORS: Make sure to keep [y/N] as is
+#: builtin/clean.c:758
 #, c-format
-msgid "remove %s? "
-msgstr "eliminar %s? "
+msgid "Remove %s [y/N]? "
+msgstr "Voleu eliminar %s [y/N]? "
 
-#: builtin/clean.c:782
+#: builtin/clean.c:783
 msgid "Bye."
 msgstr "Adéu."
 
-#: builtin/clean.c:790
+#: builtin/clean.c:791
 msgid ""
 "clean               - start cleaning\n"
 "filter by pattern   - exclude items from deletion\n"
 "select by numbers   - select items to be deleted by numbers\n"
 "ask each            - confirm each deletion (like \"rm -i\")\n"
 "quit                - stop cleaning\n"
@@ -3785,89 +3819,89 @@
 "select by numbers   - selecciona ítems a suprimir per números\n"
 "ask each            - confirma cada supressió (com \"rm -i\")\n"
 "quit                - deixa de netejar\n"
 "help                - aquesta pantalla\n"
 "?                   - ajuda de selecció de l'avís"
 
-#: builtin/clean.c:817
+#: builtin/clean.c:818
 msgid "*** Commands ***"
 msgstr "*** Ordres ***"
 
-#: builtin/clean.c:818
+#: builtin/clean.c:819
 msgid "What now"
 msgstr "Què ara"
 
-#: builtin/clean.c:826
+#: builtin/clean.c:827
 msgid "Would remove the following item:"
 msgid_plural "Would remove the following items:"
 msgstr[0] "Eliminaria l'ítem següent:"
 msgstr[1] "Eliminaria els ítems següents:"
 
-#: builtin/clean.c:843
+#: builtin/clean.c:844
 msgid "No more files to clean, exiting."
 msgstr "No hi ha més fitxers a netejar; sortint."
 
-#: builtin/clean.c:874
+#: builtin/clean.c:875
 msgid "do not print names of files removed"
 msgstr "no imprimeixis els noms dels fitxers eliminats"
 
-#: builtin/clean.c:876
+#: builtin/clean.c:877
 msgid "force"
 msgstr "força"
 
-#: builtin/clean.c:877
+#: builtin/clean.c:878
 msgid "interactive cleaning"
 msgstr "neteja interactiva"
 
-#: builtin/clean.c:879
+#: builtin/clean.c:880
 msgid "remove whole directories"
 msgstr "elimina directoris sencers"
 
-#: builtin/clean.c:880 builtin/describe.c:407 builtin/grep.c:714
-#: builtin/ls-files.c:486 builtin/name-rev.c:311 builtin/show-ref.c:185
+#: builtin/clean.c:881 builtin/describe.c:407 builtin/grep.c:714
+#: builtin/ls-files.c:443 builtin/name-rev.c:311 builtin/show-ref.c:185
 msgid "pattern"
 msgstr "patró"
 
-#: builtin/clean.c:881
+#: builtin/clean.c:882
 msgid "add <pattern> to ignore rules"
 msgstr "afegiu <patró> per a ignorar les regles"
 
-#: builtin/clean.c:882
+#: builtin/clean.c:883
 msgid "remove ignored files, too"
 msgstr "elimina els fitxers ignorats, també"
 
-#: builtin/clean.c:884
+#: builtin/clean.c:885
 msgid "remove only ignored files"
 msgstr "elimina només els fitxers ignorats"
 
-#: builtin/clean.c:902
+#: builtin/clean.c:903
 msgid "-x and -X cannot be used together"
 msgstr "-x i -X no es poden usar junts"
 
-#: builtin/clean.c:906
+#: builtin/clean.c:907
 msgid ""
 "clean.requireForce set to true and neither -i, -n, nor -f given; refusing to "
 "clean"
 msgstr ""
 "clean.requireForce està establerta a veritat i ni -i, -n ni -f s'ha donat; "
 "refusant netejar"
 
-#: builtin/clean.c:909
+#: builtin/clean.c:910
 msgid ""
 "clean.requireForce defaults to true and neither -i, -n, nor -f given; "
 "refusing to clean"
 msgstr ""
 "clean.requireForce és per defecte veritat i ni -i, -n ni -f s'ha donat; "
 "refusant netejar"
 
 #: builtin/clone.c:37
-msgid "git clone [options] [--] <repo> [<dir>]"
-msgstr "git clone [opcions] [--] <dipòsit> [<directori>]"
+msgid "git clone [<options>] [--] <repo> [<dir>]"
+msgstr "git clone [<opcions>] [--] <dipòsit> [<directori>]"
 
-#: builtin/clone.c:66 builtin/fetch.c:112 builtin/merge.c:224
-#: builtin/push.c:514
+#: builtin/clone.c:66 builtin/fetch.c:111 builtin/merge.c:224
+#: builtin/push.c:523
 msgid "force progress reporting"
 msgstr "força l'informe de progrés"
 
 #: builtin/clone.c:68
 msgid "don't create a checkout"
 msgstr "no facis cap agafada"
@@ -3921,13 +3955,13 @@
 msgstr "agafa <branca> en lloc del HEAD del remot"
 
 #: builtin/clone.c:93
 msgid "path to git-upload-pack on the remote"
 msgstr "camí a git-upload-pack en el remot"
 
-#: builtin/clone.c:94 builtin/fetch.c:113 builtin/grep.c:659
+#: builtin/clone.c:94 builtin/fetch.c:112 builtin/grep.c:659
 msgid "depth"
 msgstr "profunditat"
 
 #: builtin/clone.c:95
 msgid "create a shallow clone of that depth"
 msgstr "crea un clon superficial de tal profunditat"
@@ -4067,13 +4101,13 @@
 
 #: builtin/clone.c:809
 #, c-format
 msgid "repository '%s' does not exist"
 msgstr "el dipòsit '%s' no existeix"
 
-#: builtin/clone.c:815 builtin/fetch.c:1155
+#: builtin/clone.c:815 builtin/fetch.c:1156
 #, c-format
 msgid "depth %s is not a positive number"
 msgstr "la profunditat %s no és nombre positiu"
 
 #: builtin/clone.c:825
 #, c-format
@@ -4082,65 +4116,65 @@
 
 #: builtin/clone.c:835
 #, c-format
 msgid "working tree '%s' already exists."
 msgstr "l'arbre de treball '%s' ja existeix."
 
-#: builtin/clone.c:848 builtin/clone.c:860
+#: builtin/clone.c:850 builtin/clone.c:861
 #, c-format
 msgid "could not create leading directories of '%s'"
 msgstr "no s'ha pogut crear els directoris inicials de '%s'"
 
-#: builtin/clone.c:851
+#: builtin/clone.c:853
 #, c-format
-msgid "could not create work tree dir '%s'."
-msgstr "no s'ha pogut crear el directori d'arbre de treball '%s'."
+msgid "could not create work tree dir '%s'"
+msgstr "no s'ha pogut crear el directori d'arbre de treball '%s'"
 
-#: builtin/clone.c:870
+#: builtin/clone.c:871
 #, c-format
 msgid "Cloning into bare repository '%s'...\n"
 msgstr "Clonant al dipòsit nu '%s'...\n"
 
-#: builtin/clone.c:872
+#: builtin/clone.c:873
 #, c-format
 msgid "Cloning into '%s'...\n"
 msgstr "Clonant a '%s'...\n"
 
-#: builtin/clone.c:897
+#: builtin/clone.c:898
 msgid "--dissociate given, but there is no --reference"
 msgstr "s'ha donat --dissociate, però no hi ha --reference"
 
-#: builtin/clone.c:912
+#: builtin/clone.c:913
 msgid "--depth is ignored in local clones; use file:// instead."
 msgstr "--depth s'ignora en els clons locals; useu file:// en lloc d'això."
 
-#: builtin/clone.c:915
+#: builtin/clone.c:916
 msgid "source repository is shallow, ignoring --local"
 msgstr "el dipòsit font és superficial, ignorant --local"
 
-#: builtin/clone.c:920
+#: builtin/clone.c:921
 msgid "--local is ignored"
 msgstr "--local s'ignora"
 
-#: builtin/clone.c:924
+#: builtin/clone.c:925
 #, c-format
 msgid "Don't know how to clone %s"
 msgstr "No es sap com clonar %s"
 
-#: builtin/clone.c:975 builtin/clone.c:983
+#: builtin/clone.c:976 builtin/clone.c:984
 #, c-format
 msgid "Remote branch %s not found in upstream %s"
 msgstr "La branca remota %s no es troba en la font %s"
 
-#: builtin/clone.c:986
+#: builtin/clone.c:987
 msgid "You appear to have cloned an empty repository."
 msgstr "Sembla que heu clonat un dipòsit buit."
 
 #: builtin/column.c:9
-msgid "git column [options]"
-msgstr "git column [opcions]"
+msgid "git column [<options>]"
+msgstr "git column [<opcions>]"
 
 #: builtin/column.c:26
 msgid "lookup config vars"
 msgstr "cerca les variables de configuració"
 
 #: builtin/column.c:27 builtin/column.c:28
@@ -4165,18 +4199,18 @@
 
 #: builtin/column.c:51
 msgid "--command must be the first argument"
 msgstr "--command ha de ser el primer paràmetre"
 
 #: builtin/commit.c:37
-msgid "git commit [options] [--] <pathspec>..."
-msgstr "git commit [opcions] [--] <especificació-de-camí>..."
+msgid "git commit [<options>] [--] <pathspec>..."
+msgstr "git commit [<opcions>] [--] <especificació-de-camí>..."
 
 #: builtin/commit.c:42
-msgid "git status [options] [--] <pathspec>..."
-msgstr "git status [opcions] [--] <especificació-de-camí>..."
+msgid "git status [<options>] [--] <pathspec>..."
+msgstr "git status [<opcions>] [--] <especificació-de-camí>..."
 
 #: builtin/commit.c:47
 msgid ""
 "Your name and email address were configured automatically based\n"
 "on your username and hostname. Please check that they are accurate.\n"
 "You can suppress this message by setting them explicitly. Run the\n"
@@ -4270,120 +4304,120 @@
 "\n"
 "    git reset\n"
 "\n"
 "Llavors \"git cherry-pick --continue\" reprendrà recollint\n"
 "com a cireres les comissions restants.\n"
 
-#: builtin/commit.c:302
+#: builtin/commit.c:304
 msgid "failed to unpack HEAD tree object"
 msgstr "s'ha fallat en desempaquetar l'objecte d'arbre HEAD"
 
-#: builtin/commit.c:342
+#: builtin/commit.c:344
 msgid "unable to create temporary index"
 msgstr "no s'ha pogut crear un índex temporal"
 
-#: builtin/commit.c:348
+#: builtin/commit.c:350
 msgid "interactive add failed"
 msgstr "l'afegiment interactiu ha fallat"
 
-#: builtin/commit.c:359
+#: builtin/commit.c:361
 msgid "unable to write index file"
 msgstr "no s'ha pogut escriure el fitxer d'índex"
 
-#: builtin/commit.c:361
+#: builtin/commit.c:363
 msgid "unable to update temporary index"
 msgstr "no s'ha pogut actualitzar l'índex temporal"
 
-#: builtin/commit.c:363
+#: builtin/commit.c:365
 msgid "Failed to update main cache tree"
 msgstr "S'ha fallat en actualitzar l'arbre principal de memòria cau"
 
-#: builtin/commit.c:387 builtin/commit.c:412 builtin/commit.c:461
+#: builtin/commit.c:389 builtin/commit.c:414 builtin/commit.c:463
 msgid "unable to write new_index file"
 msgstr "no s'ha pogut escriure el fitxer new_index"
 
-#: builtin/commit.c:443
+#: builtin/commit.c:445
 msgid "cannot do a partial commit during a merge."
 msgstr "no es pot fer una comissió parcial durant una fusió."
 
-#: builtin/commit.c:445
+#: builtin/commit.c:447
 msgid "cannot do a partial commit during a cherry-pick."
 msgstr "no es pot fer una comissió parcial durant un recull de cireres."
 
-#: builtin/commit.c:454
+#: builtin/commit.c:456
 msgid "cannot read the index"
 msgstr "no es pot llegir l'índex"
 
-#: builtin/commit.c:473
+#: builtin/commit.c:475
 msgid "unable to write temporary index file"
 msgstr "no s'ha pogut escriure un fitxer d'índex temporal"
 
-#: builtin/commit.c:584
+#: builtin/commit.c:580
 #, c-format
 msgid "commit '%s' lacks author header"
 msgstr "a la comissió '%s' li manca la capçalera d'autor"
 
-#: builtin/commit.c:586
+#: builtin/commit.c:582
 #, c-format
 msgid "commit '%s' has malformed author line"
 msgstr "la comissió '%s' té una línia d'autor mal formada"
 
-#: builtin/commit.c:605
+#: builtin/commit.c:601
 msgid "malformed --author parameter"
 msgstr "paràmetre --author mal format"
 
-#: builtin/commit.c:613
+#: builtin/commit.c:609
 #, c-format
 msgid "invalid date format: %s"
 msgstr "format de data no vàlid: %s"
 
-#: builtin/commit.c:657
+#: builtin/commit.c:653
 msgid ""
 "unable to select a comment character that is not used\n"
 "in the current commit message"
 msgstr ""
 "no es pot seleccionar un caràcter de comentari que\n"
 "no sigui usat en el missatge de comissió actual"
 
-#: builtin/commit.c:694 builtin/commit.c:727 builtin/commit.c:1084
+#: builtin/commit.c:690 builtin/commit.c:723 builtin/commit.c:1080
 #, c-format
 msgid "could not lookup commit %s"
 msgstr "no s'ha pogut trobar la comissió %s"
 
-#: builtin/commit.c:706 builtin/shortlog.c:273
+#: builtin/commit.c:702 builtin/shortlog.c:273
 #, c-format
 msgid "(reading log message from standard input)\n"
 msgstr "(llegint el missatge de registre de l'entrada estàndard)\n"
 
-#: builtin/commit.c:708
+#: builtin/commit.c:704
 msgid "could not read log from standard input"
 msgstr "no s'ha pogut llegir de l'entrada estàndard"
 
-#: builtin/commit.c:712
+#: builtin/commit.c:708
 #, c-format
 msgid "could not read log file '%s'"
 msgstr "no s'ha pogut llegir el fitxer de registre '%s'"
 
-#: builtin/commit.c:734
+#: builtin/commit.c:730
 msgid "could not read MERGE_MSG"
 msgstr "no s'ha pogut llegir MERGE_MSG"
 
-#: builtin/commit.c:738
+#: builtin/commit.c:734
 msgid "could not read SQUASH_MSG"
 msgstr "no s'ha pogur llegir SQUASH_MSG"
 
-#: builtin/commit.c:742
+#: builtin/commit.c:738
 #, c-format
 msgid "could not read '%s'"
 msgstr "no s'ha pogut llegir '%s'"
 
-#: builtin/commit.c:789
+#: builtin/commit.c:785
 msgid "could not write commit template"
 msgstr "no s'ha pogut escriure la plantilla de comissió"
 
-#: builtin/commit.c:807
+#: builtin/commit.c:803
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a merge.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
@@ -4392,13 +4426,13 @@
 "\n"
 "Sembla que podeu estar cometent una fusió.\n"
 "Si això no és correcte, si us plau, elimineu el fitxer\n"
 "\t%s\n"
 "i intenteu-ho de nou.\n"
 
-#: builtin/commit.c:812
+#: builtin/commit.c:808
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a cherry-pick.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
@@ -4407,397 +4441,399 @@
 "\n"
 "Sembla que podeu estar cometent un recull de cireres.\n"
 "Si això no és correcte, si us plau elimineu el fitxer\n"
 "\t%s\n"
 "i intenteu-ho de nou.\n"
 
-#: builtin/commit.c:825
+#: builtin/commit.c:821
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be ignored, and an empty message aborts the commit.\n"
 msgstr ""
 "Si us plau, introduïu el missatge de comissió dels vostres canvis.\n"
 "S'ignoraran les línies començant amb '%c', i un missatge de\n"
 "comissió buit avorta la comissió.\n"
 
-#: builtin/commit.c:832
+#: builtin/commit.c:828
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be kept; you may remove them yourself if you want to.\n"
 "An empty message aborts the commit.\n"
 msgstr ""
 "Si us plau, introduïu el missatge de comissió dels vostres canvis.\n"
 "Es retindran les línies començants amb '%c'; podeu eliminar-les per vós\n"
 "mateix si voleu. Un missatge buit avorta la comissió.\n"
 
-#: builtin/commit.c:852
+#: builtin/commit.c:848
 #, c-format
 msgid "%sAuthor:    %.*s <%.*s>"
 msgstr "%sAutor:    %.*s <%.*s>"
 
-#: builtin/commit.c:860
+#: builtin/commit.c:856
 #, c-format
 msgid "%sDate:      %s"
 msgstr "%sData:      %s"
 
-#: builtin/commit.c:867
+#: builtin/commit.c:863
 #, c-format
 msgid "%sCommitter: %.*s <%.*s>"
 msgstr "%sComitent: %.*s <%.*s>"
 
-#: builtin/commit.c:885
+#: builtin/commit.c:881
 msgid "Cannot read index"
 msgstr "No es pot llegir l'índex"
 
-#: builtin/commit.c:942
+#: builtin/commit.c:938
 msgid "Error building trees"
 msgstr "Error en construir arbres"
 
-#: builtin/commit.c:957 builtin/tag.c:495
+#: builtin/commit.c:953 builtin/tag.c:495
 #, c-format
 msgid "Please supply the message using either -m or -F option.\n"
 msgstr "Si us plau, proveïu el missatge per usar o l'opció -m o l'opció -F.\n"
 
-#: builtin/commit.c:1059
+#: builtin/commit.c:1055
 #, c-format
-msgid "No existing author found with '%s'"
-msgstr "Cap autor existent trobat amb '%s'"
+msgid "--author '%s' is not 'Name <email>' and matches no existing author"
+msgstr ""
+"--author '%s' no és 'Nom <adreça-de-correu-electrònic>' i no coincideix amb\n"
+"cap autor existent"
 
-#: builtin/commit.c:1074 builtin/commit.c:1314
+#: builtin/commit.c:1070 builtin/commit.c:1310
 #, c-format
 msgid "Invalid untracked files mode '%s'"
 msgstr "Mode de fitxers no seguits no vàlid '%s'"
 
-#: builtin/commit.c:1111
+#: builtin/commit.c:1107
 msgid "--long and -z are incompatible"
 msgstr "--long i -z són incompatibles"
 
-#: builtin/commit.c:1141
+#: builtin/commit.c:1137
 msgid "Using both --reset-author and --author does not make sense"
 msgstr "Usar ambdós --reset-author i --author no té sentit"
 
-#: builtin/commit.c:1150
+#: builtin/commit.c:1146
 msgid "You have nothing to amend."
 msgstr "No teniu res a esmenar."
 
-#: builtin/commit.c:1153
+#: builtin/commit.c:1149
 msgid "You are in the middle of a merge -- cannot amend."
 msgstr "Esteu enmig d'una fusió -- no es pot esmenar."
 
-#: builtin/commit.c:1155
+#: builtin/commit.c:1151
 msgid "You are in the middle of a cherry-pick -- cannot amend."
 msgstr "Esteu enmig d'un recull de cireres -- no es pot esmenar."
 
-#: builtin/commit.c:1158
+#: builtin/commit.c:1154
 msgid "Options --squash and --fixup cannot be used together"
 msgstr "Les opcions --squash i --fixup no es poden usar juntes"
 
-#: builtin/commit.c:1168
+#: builtin/commit.c:1164
 msgid "Only one of -c/-C/-F/--fixup can be used."
 msgstr "Només un de -c/-C/-F/--fixup es pot usar."
 
-#: builtin/commit.c:1170
+#: builtin/commit.c:1166
 msgid "Option -m cannot be combined with -c/-C/-F/--fixup."
 msgstr "L'opció -m no es pot combinar amb -c/-C/-F/--fixup."
 
-#: builtin/commit.c:1178
+#: builtin/commit.c:1174
 msgid "--reset-author can be used only with -C, -c or --amend."
 msgstr "--reset-author només es pot usar amb -C, -c o --amend."
 
-#: builtin/commit.c:1195
+#: builtin/commit.c:1191
 msgid "Only one of --include/--only/--all/--interactive/--patch can be used."
 msgstr "Només un de --include/--only/--all/--interactive/--patch es pot usar."
 
-#: builtin/commit.c:1197
+#: builtin/commit.c:1193
 msgid "No paths with --include/--only does not make sense."
 msgstr "--include/--only no té sentit sense camí."
 
-#: builtin/commit.c:1199
+#: builtin/commit.c:1195
 msgid "Clever... amending the last one with dirty index."
 msgstr "Intel·ligent... esmenant l'últim amb índex brut."
 
-#: builtin/commit.c:1201
+#: builtin/commit.c:1197
 msgid "Explicit paths specified without -i or -o; assuming --only paths..."
 msgstr ""
 "S'han especificat camins explícits sense -i o -o; presumint camins --only..."
 
-#: builtin/commit.c:1213 builtin/tag.c:728
+#: builtin/commit.c:1209 builtin/tag.c:728
 #, c-format
 msgid "Invalid cleanup mode %s"
 msgstr "Mode de neteja no vàlid %s"
 
-#: builtin/commit.c:1218
+#: builtin/commit.c:1214
 msgid "Paths with -a does not make sense."
 msgstr "-a no té sentit amb camins."
 
-#: builtin/commit.c:1328 builtin/commit.c:1608
+#: builtin/commit.c:1324 builtin/commit.c:1604
 msgid "show status concisely"
 msgstr "mostra l'estat concisament"
 
-#: builtin/commit.c:1330 builtin/commit.c:1610
+#: builtin/commit.c:1326 builtin/commit.c:1606
 msgid "show branch information"
 msgstr "mostra la informació de branca"
 
-#: builtin/commit.c:1332 builtin/commit.c:1612 builtin/push.c:500
+#: builtin/commit.c:1328 builtin/commit.c:1608 builtin/push.c:509
 msgid "machine-readable output"
 msgstr "sortida llegible per màquina"
 
-#: builtin/commit.c:1335 builtin/commit.c:1614
+#: builtin/commit.c:1331 builtin/commit.c:1610
 msgid "show status in long format (default)"
 msgstr "mostra l'estat en format llarg (per defecte)"
 
-#: builtin/commit.c:1338 builtin/commit.c:1617
+#: builtin/commit.c:1334 builtin/commit.c:1613
 msgid "terminate entries with NUL"
 msgstr "acaba les entrades amb NUL"
 
-#: builtin/commit.c:1340 builtin/commit.c:1620 builtin/fast-export.c:980
+#: builtin/commit.c:1336 builtin/commit.c:1616 builtin/fast-export.c:980
 #: builtin/fast-export.c:983 builtin/tag.c:603
 msgid "mode"
 msgstr "mode"
 
-#: builtin/commit.c:1341 builtin/commit.c:1620
+#: builtin/commit.c:1337 builtin/commit.c:1616
 msgid "show untracked files, optional modes: all, normal, no. (Default: all)"
 msgstr ""
 "mostra els fitxers no seguits, modes opcional: all, normal, no. (Per "
 "defecte: all)"
 
-#: builtin/commit.c:1344
+#: builtin/commit.c:1340
 msgid "show ignored files"
 msgstr "mostra els fitxers ignorats"
 
-#: builtin/commit.c:1345 parse-options.h:153
+#: builtin/commit.c:1341 parse-options.h:153
 msgid "when"
 msgstr "quan"
 
-#: builtin/commit.c:1346
+#: builtin/commit.c:1342
 msgid ""
 "ignore changes to submodules, optional when: all, dirty, untracked. "
 "(Default: all)"
 msgstr ""
 "ignora els canvis als submòduls, opcional quan: all, dirty, untracked. (Per "
 "defecte: all)"
 
-#: builtin/commit.c:1348
+#: builtin/commit.c:1344
 msgid "list untracked files in columns"
 msgstr "mostra els fitxers no seguits en columnes"
 
-#: builtin/commit.c:1435
+#: builtin/commit.c:1431
 msgid "couldn't look up newly created commit"
 msgstr "no s'ha pogut trobar la comissió novament creada"
 
-#: builtin/commit.c:1437
+#: builtin/commit.c:1433
 msgid "could not parse newly created commit"
 msgstr "no s'ha pogut analitzar la comissió novament creada"
 
-#: builtin/commit.c:1482
+#: builtin/commit.c:1478
 msgid "detached HEAD"
 msgstr "HEAD separat"
 
-#: builtin/commit.c:1485
+#: builtin/commit.c:1481
 msgid " (root-commit)"
 msgstr " (comissió d'arrel)"
 
-#: builtin/commit.c:1578
+#: builtin/commit.c:1574
 msgid "suppress summary after successful commit"
 msgstr "omet el resum després d'una comissió reeixida"
 
-#: builtin/commit.c:1579
+#: builtin/commit.c:1575
 msgid "show diff in commit message template"
 msgstr "mostra la diferència en la plantilla de missatge de comissió"
 
-#: builtin/commit.c:1581
+#: builtin/commit.c:1577
 msgid "Commit message options"
 msgstr "Opcions de missatge de comissió"
 
-#: builtin/commit.c:1582 builtin/tag.c:601
+#: builtin/commit.c:1578 builtin/tag.c:601
 msgid "read message from file"
 msgstr "llegiu el missatge des d'un fitxer"
 
-#: builtin/commit.c:1583
+#: builtin/commit.c:1579
 msgid "author"
 msgstr "autor"
 
-#: builtin/commit.c:1583
+#: builtin/commit.c:1579
 msgid "override author for commit"
 msgstr "autor corregit de la comissió"
 
-#: builtin/commit.c:1584 builtin/gc.c:275
+#: builtin/commit.c:1580 builtin/gc.c:275
 msgid "date"
 msgstr "data"
 
-#: builtin/commit.c:1584
+#: builtin/commit.c:1580
 msgid "override date for commit"
 msgstr "data corregida de la comissió"
 
-#: builtin/commit.c:1585 builtin/merge.c:218 builtin/notes.c:391
+#: builtin/commit.c:1581 builtin/merge.c:218 builtin/notes.c:391
 #: builtin/notes.c:554 builtin/tag.c:599
 msgid "message"
 msgstr "missatge"
 
-#: builtin/commit.c:1585
+#: builtin/commit.c:1581
 msgid "commit message"
 msgstr "missatge de comissió"
 
-#: builtin/commit.c:1586
+#: builtin/commit.c:1582
 msgid "reuse and edit message from specified commit"
 msgstr "reusa i edita el missatge de la comissió especificada"
 
-#: builtin/commit.c:1587
+#: builtin/commit.c:1583
 msgid "reuse message from specified commit"
 msgstr "reusa el missatge de la comissió especificada"
 
-#: builtin/commit.c:1588
+#: builtin/commit.c:1584
 msgid "use autosquash formatted message to fixup specified commit"
 msgstr ""
 "usa el missatge formatat d'aixafada automàtica per a arreglar la comissió "
 "especificada"
 
-#: builtin/commit.c:1589
+#: builtin/commit.c:1585
 msgid "use autosquash formatted message to squash specified commit"
 msgstr ""
 "usa el missatge formatat d'aixafada automàtica per a aixafar la comissió "
 "especificada"
 
-#: builtin/commit.c:1590
+#: builtin/commit.c:1586
 msgid "the commit is authored by me now (used with -C/-c/--amend)"
 msgstr "l'autor de la comissió ja sóc jo (usat amb -C/-c/--amend)"
 
-#: builtin/commit.c:1591 builtin/log.c:1191 builtin/revert.c:86
+#: builtin/commit.c:1587 builtin/log.c:1191 builtin/revert.c:86
 msgid "add Signed-off-by:"
 msgstr "afegeix Signed-off-by:"
 
-#: builtin/commit.c:1592
+#: builtin/commit.c:1588
 msgid "use specified template file"
 msgstr "usa el fitxer de plantilla especificat"
 
-#: builtin/commit.c:1593
+#: builtin/commit.c:1589
 msgid "force edit of commit"
 msgstr "força l'edició de la comissió"
 
-#: builtin/commit.c:1594
+#: builtin/commit.c:1590
 msgid "default"
 msgstr "per defecte"
 
-#: builtin/commit.c:1594 builtin/tag.c:604
+#: builtin/commit.c:1590 builtin/tag.c:604
 msgid "how to strip spaces and #comments from message"
 msgstr "com despullar els espais i #comentaris del missatge"
 
-#: builtin/commit.c:1595
+#: builtin/commit.c:1591
 msgid "include status in commit message template"
 msgstr "inclou l'estat en la plantilla de missatge de comissió"
 
-#: builtin/commit.c:1596 builtin/merge.c:225 builtin/revert.c:92
+#: builtin/commit.c:1592 builtin/merge.c:225 builtin/revert.c:92
 #: builtin/tag.c:605
 msgid "key-id"
 msgstr "ID de clau"
 
-#: builtin/commit.c:1597 builtin/merge.c:226 builtin/revert.c:93
+#: builtin/commit.c:1593 builtin/merge.c:226 builtin/revert.c:93
 msgid "GPG sign commit"
 msgstr "firma la comissió amb GPG"
 
-#: builtin/commit.c:1600
+#: builtin/commit.c:1596
 msgid "Commit contents options"
 msgstr "Opcions dels continguts de les comissions"
 
-#: builtin/commit.c:1601
+#: builtin/commit.c:1597
 msgid "commit all changed files"
 msgstr "comet tots els fitxers canviats"
 
-#: builtin/commit.c:1602
+#: builtin/commit.c:1598
 msgid "add specified files to index for commit"
 msgstr "afegeix els fitxers especificats a l'índex per a cometre"
 
-#: builtin/commit.c:1603
+#: builtin/commit.c:1599
 msgid "interactively add files"
 msgstr "afegeix els fitxers interactivament"
 
-#: builtin/commit.c:1604
+#: builtin/commit.c:1600
 msgid "interactively add changes"
 msgstr "afegeix els canvis interactivament"
 
-#: builtin/commit.c:1605
+#: builtin/commit.c:1601
 msgid "commit only specified files"
 msgstr "comet només els fitxers especificats"
 
-#: builtin/commit.c:1606
+#: builtin/commit.c:1602
 msgid "bypass pre-commit hook"
 msgstr "evita el ganxo de precomissió"
 
-#: builtin/commit.c:1607
+#: builtin/commit.c:1603
 msgid "show what would be committed"
 msgstr "mostra què es cometria"
 
-#: builtin/commit.c:1618
+#: builtin/commit.c:1614
 msgid "amend previous commit"
 msgstr "esmena la comissió anterior"
 
-#: builtin/commit.c:1619
+#: builtin/commit.c:1615
 msgid "bypass post-rewrite hook"
 msgstr "evita el ganxo de postreescriure"
 
-#: builtin/commit.c:1624
+#: builtin/commit.c:1620
 msgid "ok to record an empty change"
 msgstr "està bé registrar un canvi buit"
 
-#: builtin/commit.c:1626
+#: builtin/commit.c:1622
 msgid "ok to record a change with an empty message"
 msgstr "està bé registrar un canvi amb missatge buit"
 
-#: builtin/commit.c:1655
+#: builtin/commit.c:1651
 msgid "could not parse HEAD commit"
 msgstr "no s'ha pogut analitzar la comissió HEAD"
 
-#: builtin/commit.c:1694 builtin/merge.c:519
+#: builtin/commit.c:1690 builtin/merge.c:519
 #, c-format
 msgid "could not open '%s' for reading"
 msgstr "no s'ha pogut obrir '%s' per a lectura"
 
-#: builtin/commit.c:1701
+#: builtin/commit.c:1697
 #, c-format
 msgid "Corrupt MERGE_HEAD file (%s)"
 msgstr "Fitxer MERGE_HEAD corrupte (%s)"
 
-#: builtin/commit.c:1708
+#: builtin/commit.c:1704
 msgid "could not read MERGE_MODE"
 msgstr "no s'ha pogut llegir MERGE_MODE"
 
-#: builtin/commit.c:1727
+#: builtin/commit.c:1723
 #, c-format
 msgid "could not read commit message: %s"
 msgstr "no s'ha pogut llegir el missatge de comissió: %s"
 
-#: builtin/commit.c:1738
+#: builtin/commit.c:1734
 #, c-format
 msgid "Aborting commit; you did not edit the message.\n"
 msgstr "Avortant la comissió; no heu editat el missatge.\n"
 
-#: builtin/commit.c:1743
+#: builtin/commit.c:1739
 #, c-format
 msgid "Aborting commit due to empty commit message.\n"
 msgstr "Avortant la comissió a causa d'un missatge de comissió buit.\n"
 
-#: builtin/commit.c:1758 builtin/merge.c:851 builtin/merge.c:876
+#: builtin/commit.c:1754 builtin/merge.c:851 builtin/merge.c:876
 msgid "failed to write commit object"
 msgstr "s'ha fallat en escriure l'objecte de comissió"
 
-#: builtin/commit.c:1791
+#: builtin/commit.c:1787
 msgid ""
 "Repository has been updated, but unable to write\n"
 "new_index file. Check that disk is not full and quota is\n"
 "not exceeded, and then \"git reset HEAD\" to recover."
 msgstr ""
 "S'ha actualitzat el dipòsit, però no es pot escriure el\n"
 "fitxer new_index. Comproveu que el disc no estigui ple i\n"
 "que la quota no estigui excedida, i després\n"
 "\"git reset HEAD\" per a recuperar."
 
 #: builtin/config.c:8
-msgid "git config [options]"
-msgstr "git config [opcions]"
+msgid "git config [<options>]"
+msgstr "git config [<opcions>]"
 
 #: builtin/config.c:53
 msgid "Config file location"
 msgstr "Ubicació del fitxer de configuració"
 
 #: builtin/config.c:54
@@ -4947,18 +4983,18 @@
 
 #: builtin/count-objects.c:65
 msgid "print sizes in human readable format"
 msgstr "imprimeix les mides en un format llegible per humans"
 
 #: builtin/describe.c:17
-msgid "git describe [options] <commit-ish>*"
-msgstr "git describe [opcions] <comissió>*"
+msgid "git describe [<options>] [<commit-ish>...]"
+msgstr "git describe [opcions] [<comissió>...]"
 
 #: builtin/describe.c:18
-msgid "git describe [options] --dirty"
-msgstr "git describe [opcions] --dirty"
+msgid "git describe [<options>] --dirty"
+msgstr "git describe [<opcions>] --dirty"
 
 #: builtin/describe.c:217
 #, c-format
 msgid "annotated tag %s not available"
 msgstr "l'etiqueta anotada %s no és disponible"
 
@@ -5167,282 +5203,283 @@
 msgstr "Aplica l'especificació de referència a les referències exportades"
 
 #: builtin/fast-export.c:999
 msgid "anonymize output"
 msgstr "anonimitza la sortida"
 
-#: builtin/fetch.c:20
+#: builtin/fetch.c:19
 msgid "git fetch [<options>] [<repository> [<refspec>...]]"
 msgstr "git fetch [<opcions>] [<dipòsit> [<especificació-de-referència>...]]"
 
-#: builtin/fetch.c:21
+#: builtin/fetch.c:20
 msgid "git fetch [<options>] <group>"
 msgstr "git fetch [<opcions>] <grup>"
 
-#: builtin/fetch.c:22
+#: builtin/fetch.c:21
 msgid "git fetch --multiple [<options>] [(<repository> | <group>)...]"
 msgstr "git fetch --multiple [<opcions>] [(<dipòsit> | <grup>)...]"
 
-#: builtin/fetch.c:23
+#: builtin/fetch.c:22
 msgid "git fetch --all [<options>]"
 msgstr "git fetch --all [<opcions>]"
 
-#: builtin/fetch.c:90
+#: builtin/fetch.c:89
 msgid "fetch from all remotes"
 msgstr "obtén de tots els remots"
 
-#: builtin/fetch.c:92
+#: builtin/fetch.c:91
 msgid "append to .git/FETCH_HEAD instead of overwriting"
 msgstr "annexa a .git/FETCH_HEAD en lloc de sobreescriure"
 
-#: builtin/fetch.c:94
+#: builtin/fetch.c:93
 msgid "path to upload pack on remote end"
-msgstr "camí al qual pujar el paquet en el costat remot"
+msgstr "camí al qual pujar el paquet al costat remot"
 
-#: builtin/fetch.c:95
+#: builtin/fetch.c:94
 msgid "force overwrite of local branch"
 msgstr "força la sobreescriptura de la branca local"
 
-#: builtin/fetch.c:97
+#: builtin/fetch.c:96
 msgid "fetch from multiple remotes"
 msgstr "obtén de múltiples remots"
 
-#: builtin/fetch.c:99
+#: builtin/fetch.c:98
 msgid "fetch all tags and associated objects"
 msgstr "obtén totes les etiquetes i tots els objectes associats"
 
-#: builtin/fetch.c:101
+#: builtin/fetch.c:100
 msgid "do not fetch all tags (--no-tags)"
 msgstr "no obtinguis les etiquetes (--no-tags)"
 
-#: builtin/fetch.c:103
+#: builtin/fetch.c:102
 msgid "prune remote-tracking branches no longer on remote"
 msgstr "poda les branques amb seguiment remot que ja no estiguin en el remot"
 
-#: builtin/fetch.c:104
+#: builtin/fetch.c:103
 msgid "on-demand"
 msgstr "sota demanda"
 
-#: builtin/fetch.c:105
+#: builtin/fetch.c:104
 msgid "control recursive fetching of submodules"
 msgstr "controla l'obteniment recursiu de submòduls"
 
-#: builtin/fetch.c:109
+#: builtin/fetch.c:108
 msgid "keep downloaded pack"
 msgstr "desa el paquet baixat"
 
-#: builtin/fetch.c:111
+#: builtin/fetch.c:110
 msgid "allow updating of HEAD ref"
 msgstr "permet l'actualització de la referència HEAD"
 
-#: builtin/fetch.c:114
+#: builtin/fetch.c:113
 msgid "deepen history of shallow clone"
 msgstr "aprofundeix la història d'un clon superficial"
 
-#: builtin/fetch.c:116
+#: builtin/fetch.c:115
 msgid "convert to a complete repository"
 msgstr "converteix en un dipòsit complet"
 
-#: builtin/fetch.c:118 builtin/log.c:1208
+#: builtin/fetch.c:117 builtin/log.c:1208
 msgid "dir"
 msgstr "directori"
 
-#: builtin/fetch.c:119
+#: builtin/fetch.c:118
 msgid "prepend this to submodule path output"
 msgstr "anteposa això a la sortida de camí del submòdul"
 
-#: builtin/fetch.c:122
+#: builtin/fetch.c:121
 msgid "default mode for recursion"
 msgstr "mode de recursivitat per defecte"
 
-#: builtin/fetch.c:124
+#: builtin/fetch.c:123
 msgid "accept refs that update .git/shallow"
 msgstr "accepta les referències que actualitzin .git/shallow"
 
-#: builtin/fetch.c:125
+#: builtin/fetch.c:124
 msgid "refmap"
 msgstr "mapa de referències"
 
-#: builtin/fetch.c:126
+#: builtin/fetch.c:125
 msgid "specify fetch refmap"
 msgstr "mostra el mapa de referències d'obteniment"
 
-#: builtin/fetch.c:376
+#: builtin/fetch.c:375
 msgid "Couldn't find remote ref HEAD"
 msgstr "No s'ha pogut trobar la referència HEAD remota"
 
-#: builtin/fetch.c:454
+#: builtin/fetch.c:455
 #, c-format
 msgid "object %s not found"
 msgstr "objecte %s no trobat"
 
-#: builtin/fetch.c:459
+#: builtin/fetch.c:460
 msgid "[up to date]"
 msgstr "[al dia]"
 
-#: builtin/fetch.c:473
+#: builtin/fetch.c:474
 #, c-format
 msgid "! %-*s %-*s -> %s  (can't fetch in current branch)"
 msgstr "! %-*s %-*s -> %s  (no es pot obtenir en la branca actual)"
 
-#: builtin/fetch.c:474 builtin/fetch.c:560
+#: builtin/fetch.c:475 builtin/fetch.c:561
 msgid "[rejected]"
 msgstr "[rebutjat]"
 
-#: builtin/fetch.c:485
+#: builtin/fetch.c:486
 msgid "[tag update]"
 msgstr "[actualització d'etiqueta]"
 
-#: builtin/fetch.c:487 builtin/fetch.c:522 builtin/fetch.c:540
+#: builtin/fetch.c:488 builtin/fetch.c:523 builtin/fetch.c:541
 msgid "  (unable to update local ref)"
 msgstr "  (no s'ha pogut actualitzar la referència local)"
 
-#: builtin/fetch.c:505
+#: builtin/fetch.c:506
 msgid "[new tag]"
 msgstr "[etiqueta nova]"
 
-#: builtin/fetch.c:508
+#: builtin/fetch.c:509
 msgid "[new branch]"
 msgstr "[branca nova]"
 
-#: builtin/fetch.c:511
+#: builtin/fetch.c:512
 msgid "[new ref]"
 msgstr "[referència nova]"
 
-#: builtin/fetch.c:556
+#: builtin/fetch.c:557
 msgid "unable to update local ref"
 msgstr "no s'ha pogut actualitzar la referència local"
 
-#: builtin/fetch.c:556
+#: builtin/fetch.c:557
 msgid "forced update"
 msgstr "actualització forçada"
 
-#: builtin/fetch.c:562
+#: builtin/fetch.c:563
 msgid "(non-fast-forward)"
 msgstr "(sense avanç ràpid)"
 
-#: builtin/fetch.c:595 builtin/fetch.c:828
+#: builtin/fetch.c:596 builtin/fetch.c:829
 #, c-format
 msgid "cannot open %s: %s\n"
 msgstr "no es pot obrir %s: %s\n"
 
-#: builtin/fetch.c:604
+#: builtin/fetch.c:605
 #, c-format
 msgid "%s did not send all necessary objects\n"
 msgstr "%s no ha enviat tots els objectes necessaris\n"
 
-#: builtin/fetch.c:622
+#: builtin/fetch.c:623
 #, c-format
 msgid "reject %s because shallow roots are not allowed to be updated"
 msgstr ""
 "rebutja %s perquè no es permet que les arrels superficials s'actualitzin"
 
-#: builtin/fetch.c:710 builtin/fetch.c:793
+#: builtin/fetch.c:711 builtin/fetch.c:794
 #, c-format
 msgid "From %.*s\n"
 msgstr "De %.*s\n"
 
-#: builtin/fetch.c:721
+#: builtin/fetch.c:722
 #, c-format
 msgid ""
 "some local refs could not be updated; try running\n"
 " 'git remote prune %s' to remove any old, conflicting branches"
 msgstr ""
 "algunes referències locals no s'han pogut actualitzar;\n"
 " intenteu executar 'git remote prune %s' per a eliminar\n"
 " qualsevulla branca antiga o conflictiva"
 
-#: builtin/fetch.c:773
+#: builtin/fetch.c:774
 #, c-format
 msgid "   (%s will become dangling)"
 msgstr "   (%s es tornarà penjant)"
 
-#: builtin/fetch.c:774
+#: builtin/fetch.c:775
 #, c-format
 msgid "   (%s has become dangling)"
 msgstr "   (%s s'ha tornat penjant)"
 
-#: builtin/fetch.c:798
+#: builtin/fetch.c:799
 msgid "[deleted]"
 msgstr "[suprimit]"
 
-#: builtin/fetch.c:799 builtin/remote.c:1060
+#: builtin/fetch.c:800 builtin/remote.c:1060
 msgid "(none)"
 msgstr "(cap)"
 
-#: builtin/fetch.c:818
+#: builtin/fetch.c:819
 #, c-format
 msgid "Refusing to fetch into current branch %s of non-bare repository"
 msgstr "Refusant obtenir en la branca actual %s d'un dipòsit no nu"
 
-#: builtin/fetch.c:837
+#: builtin/fetch.c:838
 #, c-format
 msgid "Option \"%s\" value \"%s\" is not valid for %s"
 msgstr "L'opció \"%s\" amb valor \"%s\" no és vàlida per a %s"
 
-#: builtin/fetch.c:840
+#: builtin/fetch.c:841
 #, c-format
 msgid "Option \"%s\" is ignored for %s\n"
 msgstr "S'ignora l'opció \"%s\" per a %s\n"
 
-#: builtin/fetch.c:896
+#: builtin/fetch.c:897
 #, c-format
 msgid "Don't know how to fetch from %s"
 msgstr "No es sap com obtenir de %s"
 
-#: builtin/fetch.c:1058
+#: builtin/fetch.c:1059
 #, c-format
 msgid "Fetching %s\n"
 msgstr "Obtenint %s\n"
 
-#: builtin/fetch.c:1060 builtin/remote.c:90
+#: builtin/fetch.c:1061 builtin/remote.c:90
 #, c-format
 msgid "Could not fetch %s"
 msgstr "No s'ha pogut obtenir %s"
 
-#: builtin/fetch.c:1078
+#: builtin/fetch.c:1079
 msgid ""
 "No remote repository specified.  Please, specify either a URL or a\n"
 "remote name from which new revisions should be fetched."
 msgstr ""
 "Cap dipòsit remot especificat. Si us plau, especifiqueu o un URL o\n"
 "un nom remot del qual es deuen obtenir les revisions noves."
 
-#: builtin/fetch.c:1101
+#: builtin/fetch.c:1102
 msgid "You need to specify a tag name."
 msgstr "Necessiteu especificar un nom d'etiqueta."
 
-#: builtin/fetch.c:1143
+#: builtin/fetch.c:1144
 msgid "--depth and --unshallow cannot be used together"
 msgstr "--depth i --unshallow no es poden usar junts"
 
-#: builtin/fetch.c:1145
+#: builtin/fetch.c:1146
 msgid "--unshallow on a complete repository does not make sense"
 msgstr "--unshallow en un dipòsit complet no té sentit"
 
-#: builtin/fetch.c:1168
+#: builtin/fetch.c:1169
 msgid "fetch --all does not take a repository argument"
 msgstr "fetch --all no accepta un paràmetre de dipòsit"
 
-#: builtin/fetch.c:1170
+#: builtin/fetch.c:1171
 msgid "fetch --all does not make sense with refspecs"
 msgstr "fetch --all no té sentit amb especificacions de referència"
 
-#: builtin/fetch.c:1181
+#: builtin/fetch.c:1182
 #, c-format
 msgid "No such remote or remote group: %s"
 msgstr "No hi ha tal remot ni tal grup remot: %s"
 
-#: builtin/fetch.c:1189
+#: builtin/fetch.c:1190
 msgid "Fetching a group and specifying refspecs does not make sense"
 msgstr "Obtenir un grup i especificar referències no té sentit"
 
 #: builtin/fmt-merge-msg.c:13
-msgid "git fmt-merge-msg [-m <message>] [--log[=<n>]|--no-log] [--file <file>]"
+msgid ""
+"git fmt-merge-msg [-m <message>] [--log[=<n>] | --no-log] [--file <file>]"
 msgstr ""
-"git fmt-merge-msg [-m <missatge>] [--log[=<n>]|--no-log] [--file <fitxer>]"
+"git fmt-merge-msg [-m <missatge>] [--log[=<n>] | --no-log] [--file <fitxer>]"
 
 #: builtin/fmt-merge-msg.c:662 builtin/fmt-merge-msg.c:665 builtin/grep.c:698
 #: builtin/merge.c:198 builtin/repack.c:178 builtin/repack.c:182
 #: builtin/show-branch.c:657 builtin/show-ref.c:178 builtin/tag.c:590
 #: parse-options.h:132 parse-options.h:239
 msgid "n"
@@ -5465,68 +5502,68 @@
 msgstr "usa <text> com a inici de missatge"
 
 #: builtin/fmt-merge-msg.c:671
 msgid "file to read from"
 msgstr "fitxer del qual llegir"
 
-#: builtin/for-each-ref.c:676
+#: builtin/for-each-ref.c:675
 msgid "unable to parse format"
 msgstr "no s'ha pogut analitzar el format"
 
-#: builtin/for-each-ref.c:1064
-msgid "git for-each-ref [options] [<pattern>]"
-msgstr "git for-each-ref [opcions] [<patró>]"
+#: builtin/for-each-ref.c:1063
+msgid "git for-each-ref [<options>] [<pattern>]"
+msgstr "git for-each-ref [<opcions>] [<patró>]"
 
-#: builtin/for-each-ref.c:1079
+#: builtin/for-each-ref.c:1078
 msgid "quote placeholders suitably for shells"
 msgstr ""
 "posa els marcadors de posició entre cometes adequades per als terminals"
 
-#: builtin/for-each-ref.c:1081
+#: builtin/for-each-ref.c:1080
 msgid "quote placeholders suitably for perl"
 msgstr "posa els marcadors de posició entre cometes adequades per a perl"
 
-#: builtin/for-each-ref.c:1083
+#: builtin/for-each-ref.c:1082
 msgid "quote placeholders suitably for python"
 msgstr "posa els marcadors de posició entre cometes adequades per a python"
 
-#: builtin/for-each-ref.c:1085
+#: builtin/for-each-ref.c:1084
 msgid "quote placeholders suitably for Tcl"
 msgstr "posa els marcadors de posició entre cometes adequades per a Tcl"
 
-#: builtin/for-each-ref.c:1088
+#: builtin/for-each-ref.c:1087
 msgid "show only <n> matched refs"
 msgstr "mostra només <n> referències coincidents"
 
-#: builtin/for-each-ref.c:1089 builtin/replace.c:438
+#: builtin/for-each-ref.c:1088 builtin/replace.c:438
 msgid "format"
 msgstr "format"
 
-#: builtin/for-each-ref.c:1089
+#: builtin/for-each-ref.c:1088
 msgid "format to use for the output"
 msgstr "format a usar en la sortida"
 
-#: builtin/for-each-ref.c:1090
+#: builtin/for-each-ref.c:1089
 msgid "key"
 msgstr "clau"
 
-#: builtin/for-each-ref.c:1091
+#: builtin/for-each-ref.c:1090
 msgid "field name to sort on"
 msgstr "nom de camp en el qual ordenar"
 
-#: builtin/fsck.c:147 builtin/prune.c:136
+#: builtin/fsck.c:147 builtin/prune.c:137
 msgid "Checking connectivity"
 msgstr "Comprovant connectivitat"
 
 #: builtin/fsck.c:540
 msgid "Checking object directories"
 msgstr "Comprovant els directoris d'objecte"
 
 #: builtin/fsck.c:603
-msgid "git fsck [options] [<object>...]"
-msgstr "git fsck [opcions] [<objecte>...]"
+msgid "git fsck [<options>] [<object>...]"
+msgstr "git fsck [<opcions>] [<objecte>...]"
 
 #: builtin/fsck.c:609
 msgid "show unreachable objects"
 msgstr "mostra els objectes inabastables"
 
 #: builtin/fsck.c:610
@@ -5567,14 +5604,14 @@
 
 #: builtin/fsck.c:669
 msgid "Checking objects"
 msgstr "Comprovant els objectes"
 
 #: builtin/gc.c:24
-msgid "git gc [options]"
-msgstr "git gc [opcions]"
+msgid "git gc [<options>]"
+msgstr "git gc [<opcions>]"
 
 #: builtin/gc.c:79
 #, c-format
 msgid "Invalid gc.pruneexpire: '%s'"
 msgstr "gc.pruneexpire no vàlid: %s"
 
@@ -5627,14 +5664,14 @@
 "There are too many unreachable loose objects; run 'git prune' to remove them."
 msgstr ""
 "Hi ha massa objectes solts inabastables; executeu 'git prune' per a eliminar-"
 "los."
 
 #: builtin/grep.c:23
-msgid "git grep [options] [-e] <pattern> [<rev>...] [[--] <path>...]"
-msgstr "git grep [opcions] [-e] <patró> [<revisió>...] [[--] <camí>...]"
+msgid "git grep [<options>] [-e] <pattern> [<rev>...] [[--] <path>...]"
+msgstr "git grep [<opcions>] [-e] <patró> [<revisió>...] [[--] <camí>...]"
 
 #: builtin/grep.c:218
 #, c-format
 msgid "grep: failed to create thread: %s"
 msgstr "grep: s'ha fallat en crear fil: %s"
 
@@ -5668,14 +5705,14 @@
 
 #: builtin/grep.c:642
 msgid "search in both tracked and untracked files"
 msgstr "cerca tant en fitxers seguits com en no seguits"
 
 #: builtin/grep.c:644
-msgid "search also in ignored files"
-msgstr "cerca en els fitxers ignorats també"
+msgid "ignore files specified via '.gitignore'"
+msgstr "ignora els fitxers especificats mitjançant '.gitignore'"
 
 #: builtin/grep.c:647
 msgid "show non-matching lines"
 msgstr "mostra les línies no coincidents"
 
 #: builtin/grep.c:649
@@ -5857,23 +5894,23 @@
 #: builtin/grep.c:908
 msgid "both --cached and trees are given."
 msgstr "s'han donat ambdós --caches i arbres."
 
 #: builtin/hash-object.c:82
 msgid ""
-"git hash-object [-t <type>] [-w] [--path=<file>|--no-filters] [--stdin] [--] "
-"<file>..."
+"git hash-object [-t <type>] [-w] [--path=<file> | --no-filters] [--stdin] "
+"[--] <file>..."
 msgstr ""
-"git hash-object [-t <tipus>] [-w] [--path=<fitxer>|--no-filters] [--stdin] "
+"git hash-object [-t <tipus>] [-w] [--path=<fitxer> | --no-filters] [--stdin] "
 "[--] <fitxer>..."
 
 #: builtin/hash-object.c:83
 msgid "git hash-object  --stdin-paths < <list-of-paths>"
 msgstr "git hash-object  --stdin-paths < <llista-de-camins>"
 
-#: builtin/hash-object.c:94 builtin/tag.c:610
+#: builtin/hash-object.c:94 builtin/tag.c:612
 msgid "type"
 msgstr "tipus"
 
 #: builtin/hash-object.c:94
 msgid "object type"
 msgstr "tipus d'objecte"
@@ -5919,14 +5956,14 @@
 
 #: builtin/help.c:46
 msgid "show info page"
 msgstr "mostra la pàgina d'informació"
 
 #: builtin/help.c:52
-msgid "git help [--all] [--guides] [--man|--web|--info] [command]"
-msgstr "git help [--all] [--guides] [--man|--web|--info] [ordre]"
+msgid "git help [--all] [--guides] [--man | --web | --info] [<command>]"
+msgstr "git help [--all] [--guides] [--man | --web | --info] [<ordre>]"
 
 #: builtin/help.c:64
 #, c-format
 msgid "unrecognized help format '%s'"
 msgstr "format d'ajuda no reconegut '%s'"
 
@@ -6128,14 +6165,14 @@
 #: builtin/index-pack.c:686 builtin/index-pack.c:692 builtin/index-pack.c:715
 #: builtin/index-pack.c:749 builtin/index-pack.c:758
 #, c-format
 msgid "SHA1 COLLISION FOUND WITH %s !"
 msgstr "S'HA TROBAT UNA COL·LISIÓ SHA1 AMB %s !"
 
-#: builtin/index-pack.c:689 builtin/pack-objects.c:164
-#: builtin/pack-objects.c:256
+#: builtin/index-pack.c:689 builtin/pack-objects.c:162
+#: builtin/pack-objects.c:254
 #, c-format
 msgid "unable to read %s"
 msgstr "no s'ha pogut llegir %s"
 
 #: builtin/index-pack.c:755
 #, c-format
@@ -6216,103 +6253,103 @@
 #, c-format
 msgid "pack has %d unresolved delta"
 msgid_plural "pack has %d unresolved deltas"
 msgstr[0] "El paquet té %d delta no resolta"
 msgstr[1] "El paquet té %d deltes no resoltes"
 
-#: builtin/index-pack.c:1220
+#: builtin/index-pack.c:1219
 #, c-format
 msgid "unable to deflate appended object (%d)"
 msgstr "no s'ha pogut desinflar l'objecte annexat (%d)"
 
-#: builtin/index-pack.c:1299
+#: builtin/index-pack.c:1298
 #, c-format
 msgid "local object %s is corrupt"
 msgstr "l'objecte local %s és corrupte"
 
-#: builtin/index-pack.c:1323
+#: builtin/index-pack.c:1322
 msgid "error while closing pack file"
 msgstr "error en tancar el fitxer de paquet"
 
-#: builtin/index-pack.c:1336
+#: builtin/index-pack.c:1335
 #, c-format
 msgid "cannot write keep file '%s'"
 msgstr "no es pot escriure el fitxer a retenir '%s'"
 
-#: builtin/index-pack.c:1344
+#: builtin/index-pack.c:1343
 #, c-format
 msgid "cannot close written keep file '%s'"
 msgstr "no es pot tancar el fitxer escrit a retenir '%s'"
 
-#: builtin/index-pack.c:1357
+#: builtin/index-pack.c:1356
 msgid "cannot store pack file"
 msgstr "no es pot emmagatzemar el fitxer de paquet"
 
-#: builtin/index-pack.c:1368
+#: builtin/index-pack.c:1367
 msgid "cannot store index file"
 msgstr "no es pot emmagatzemar el fitxer d'índex"
 
-#: builtin/index-pack.c:1401
+#: builtin/index-pack.c:1400
 #, c-format
 msgid "bad pack.indexversion=%<PRIu32>"
 msgstr "pack.indexversion=%<PRIu32> dolent"
 
-#: builtin/index-pack.c:1407
+#: builtin/index-pack.c:1406
 #, c-format
 msgid "invalid number of threads specified (%d)"
 msgstr "s'ha especificat un nombre de fils no vàlid (%d)"
 
-#: builtin/index-pack.c:1411 builtin/index-pack.c:1590
+#: builtin/index-pack.c:1410 builtin/index-pack.c:1589
 #, c-format
 msgid "no threads support, ignoring %s"
 msgstr "no hi ha suport de fils, ignorant %s"
 
-#: builtin/index-pack.c:1469
+#: builtin/index-pack.c:1468
 #, c-format
 msgid "Cannot open existing pack file '%s'"
 msgstr "No es pot obrir el fitxer de paquet existent '%s'"
 
-#: builtin/index-pack.c:1471
+#: builtin/index-pack.c:1470
 #, c-format
 msgid "Cannot open existing pack idx file for '%s'"
 msgstr "No es pot obrir el fitxer d'índex de paquets existent de '%s'"
 
-#: builtin/index-pack.c:1518
+#: builtin/index-pack.c:1517
 #, c-format
 msgid "non delta: %d object"
 msgid_plural "non delta: %d objects"
 msgstr[0] "sense delta: %d objecte"
 msgstr[1] "sense delta: %d objectes"
 
-#: builtin/index-pack.c:1525
+#: builtin/index-pack.c:1524
 #, c-format
 msgid "chain length = %d: %lu object"
 msgid_plural "chain length = %d: %lu objects"
 msgstr[0] "longitud de cadena = %d: %lu objecte"
 msgstr[1] "longitud de cadena = %d: %lu objectes"
 
-#: builtin/index-pack.c:1554
+#: builtin/index-pack.c:1553
 msgid "Cannot come back to cwd"
 msgstr "No es pot tornar al directori de treball actual"
 
-#: builtin/index-pack.c:1602 builtin/index-pack.c:1605
-#: builtin/index-pack.c:1617 builtin/index-pack.c:1621
+#: builtin/index-pack.c:1601 builtin/index-pack.c:1604
+#: builtin/index-pack.c:1616 builtin/index-pack.c:1620
 #, c-format
 msgid "bad %s"
 msgstr "%s dolent"
 
-#: builtin/index-pack.c:1635
+#: builtin/index-pack.c:1634
 msgid "--fix-thin cannot be used without --stdin"
 msgstr "--fix-thin no es pot usar sense --stdin"
 
-#: builtin/index-pack.c:1639 builtin/index-pack.c:1648
+#: builtin/index-pack.c:1638 builtin/index-pack.c:1647
 #, c-format
 msgid "packfile name '%s' does not end with '.pack'"
 msgstr "el nom de fitxer de paquet '%s' no acaba amb '.pack'"
 
-#: builtin/index-pack.c:1656
+#: builtin/index-pack.c:1655
 msgid "--verify with no packfile name given"
 msgstr "s'ha donat --verify sense nom de fitxer de paquet"
 
 #: builtin/init-db.c:35
 #, c-format
 msgid "Could not make %s writable by group"
@@ -6418,16 +6455,16 @@
 msgid " shared"
 msgstr " compartit"
 
 #: builtin/init-db.c:475
 msgid ""
 "git init [-q | --quiet] [--bare] [--template=<template-directory>] [--"
-"shared[=<permissions>]] [directory]"
+"shared[=<permissions>]] [<directory>]"
 msgstr ""
 "git init [-q | --quiet] [--bare] [--template=<directori-de-plantilla>] [--"
-"shared[=<permisos>]] [directori]"
+"shared[=<permisos>]] [<directori>]"
 
 #: builtin/init-db.c:498
 msgid "permissions"
 msgstr "permisos"
 
 #: builtin/init-db.c:499
@@ -6484,27 +6521,27 @@
 
 #: builtin/log.c:41
 msgid "git log [<options>] [<revision range>] [[--] <path>...]"
 msgstr "git log [<opcions>] [<rang de revisions>] [[--] <camí>...]"
 
 #: builtin/log.c:42
-msgid "git show [options] <object>..."
-msgstr "git show [opcions] <objecte>..."
+msgid "git show [<options>] <object>..."
+msgstr "git show [<opcions>] <objecte>..."
 
 #: builtin/log.c:81
 #, c-format
 msgid "invalid --decorate option: %s"
 msgstr "opció --decorate no vàlida: %s"
 
 #: builtin/log.c:127
 msgid "suppress diff output"
 msgstr "omet la sortida de diferències"
 
 #: builtin/log.c:128
 msgid "show source"
-msgstr "mostra el fons"
+msgstr "mostra el font"
 
 #: builtin/log.c:129
 msgid "Use mail map file"
 msgstr "Usa el fitxer de mapa de correu"
 
 #: builtin/log.c:130
@@ -6563,14 +6600,14 @@
 #: builtin/log.c:998
 #, c-format
 msgid "insane in-reply-to: %s"
 msgstr "in-reply-to boig: %s"
 
 #: builtin/log.c:1026
-msgid "git format-patch [options] [<since> | <revision range>]"
-msgstr "git format-patch [opcions] [<des de> | <rang de revisions>]"
+msgid "git format-patch [<options>] [<since> | <revision-range>]"
+msgstr "git format-patch [<opcions>] [<des-de> | <rang-de-revisions>]"
 
 #: builtin/log.c:1071
 msgid "Two output directories?"
 msgstr "Dos directoris de sortida?"
 
 #: builtin/log.c:1186
@@ -6764,103 +6801,103 @@
 
 #: builtin/log.c:1651 builtin/log.c:1653 builtin/log.c:1665
 #, c-format
 msgid "Unknown commit %s"
 msgstr "Comissió desconeguda %s"
 
-#: builtin/ls-files.c:401
-msgid "git ls-files [options] [<file>...]"
-msgstr "git ls-files [opcions] [<fitxer>...]"
+#: builtin/ls-files.c:358
+msgid "git ls-files [<options>] [<file>...]"
+msgstr "git ls-files [<opcions>] [<fitxer>...]"
 
-#: builtin/ls-files.c:458
+#: builtin/ls-files.c:415
 msgid "identify the file status with tags"
 msgstr "identifica l'estat de fitxer amb etiquetes"
 
-#: builtin/ls-files.c:460
+#: builtin/ls-files.c:417
 msgid "use lowercase letters for 'assume unchanged' files"
 msgstr "usa lletres minúscules per als fitxers 'assume unchanged'"
 
-#: builtin/ls-files.c:462
+#: builtin/ls-files.c:419
 msgid "show cached files in the output (default)"
 msgstr ""
 "mostra en la sortida els fitxers desats en la memòria cau (per defecte)"
 
-#: builtin/ls-files.c:464
+#: builtin/ls-files.c:421
 msgid "show deleted files in the output"
 msgstr "mostra en la sortida els fitxers suprimits"
 
-#: builtin/ls-files.c:466
+#: builtin/ls-files.c:423
 msgid "show modified files in the output"
 msgstr "mostra en la sortida els fitxers modificats"
 
-#: builtin/ls-files.c:468
+#: builtin/ls-files.c:425
 msgid "show other files in the output"
 msgstr "mostra en la sortida els altres fitxers"
 
-#: builtin/ls-files.c:470
+#: builtin/ls-files.c:427
 msgid "show ignored files in the output"
 msgstr "mostra en la sortida els fitxers ignorats"
 
-#: builtin/ls-files.c:473
+#: builtin/ls-files.c:430
 msgid "show staged contents' object name in the output"
 msgstr "mostra en la sortida el nom d'objecte dels continguts allistats"
 
-#: builtin/ls-files.c:475
+#: builtin/ls-files.c:432
 msgid "show files on the filesystem that need to be removed"
 msgstr "mostra els fitxers en el sistema de fitxers que s'han d'eliminar"
 
-#: builtin/ls-files.c:477
+#: builtin/ls-files.c:434
 msgid "show 'other' directories' names only"
 msgstr "mostra només els noms dels directoris 'other'"
 
-#: builtin/ls-files.c:480
+#: builtin/ls-files.c:437
 msgid "don't show empty directories"
 msgstr "no mostris els directoris buits"
 
-#: builtin/ls-files.c:483
+#: builtin/ls-files.c:440
 msgid "show unmerged files in the output"
 msgstr "mostra en la sortida els fitxers sense fusionar"
 
-#: builtin/ls-files.c:485
+#: builtin/ls-files.c:442
 msgid "show resolve-undo information"
 msgstr "mostra la informació de resolució de desfet"
 
-#: builtin/ls-files.c:487
+#: builtin/ls-files.c:444
 msgid "skip files matching pattern"
 msgstr "salta els fitxers coincidents amb el patró"
 
-#: builtin/ls-files.c:490
+#: builtin/ls-files.c:447
 msgid "exclude patterns are read from <file>"
 msgstr "els patrons d'exclusió es llegeixen de <fitxer>"
 
-#: builtin/ls-files.c:493
+#: builtin/ls-files.c:450
 msgid "read additional per-directory exclude patterns in <file>"
 msgstr "llegeix els patrons addicionals d'exclusió per directori en <fitxer>"
 
-#: builtin/ls-files.c:495
+#: builtin/ls-files.c:452
 msgid "add the standard git exclusions"
 msgstr "afegeix les exclusions estàndards de git"
 
-#: builtin/ls-files.c:498
+#: builtin/ls-files.c:455
 msgid "make the output relative to the project top directory"
 msgstr "fes que la sortida sigui relativa al directori superior del projecte"
 
-#: builtin/ls-files.c:501
+#: builtin/ls-files.c:458
 msgid "if any <file> is not in the index, treat this as an error"
 msgstr "si qualsevol <fitxer> no és en l'índex, tracta això com a error"
 
-#: builtin/ls-files.c:502
+#: builtin/ls-files.c:459
 msgid "tree-ish"
 msgstr "arbre"
 
-#: builtin/ls-files.c:503
+#: builtin/ls-files.c:460
 msgid "pretend that paths removed since <tree-ish> are still present"
 msgstr ""
 "pretén que els camins eliminats després de <arbre> encara estiguin presents"
 
-#: builtin/ls-files.c:505
+#: builtin/ls-files.c:462
 msgid "show debugging data"
 msgstr "mostra les dades de depuració"
 
 #: builtin/ls-tree.c:28
 msgid "git ls-tree [<options>] <tree-ish> [<path>...]"
 msgstr "git ls-tree [<opcions>] <arbre> [<camí>...]"
@@ -6896,18 +6933,18 @@
 #: builtin/ls-tree.c:144
 msgid "list entire tree; not just current directory (implies --full-name)"
 msgstr ""
 "llista l'arbre sencer; no només el directori actual (implica --full-name)"
 
 #: builtin/merge.c:45
-msgid "git merge [options] [<commit>...]"
-msgstr "git merge [opcions] [<comissió>...]"
+msgid "git merge [<options>] [<commit>...]"
+msgstr "git merge [<opcions>] [<comissió>...]"
 
 #: builtin/merge.c:46
-msgid "git merge [options] <msg> HEAD <commit>"
-msgstr "git merge [opcions] <missatge> HEAD <comissió>"
+msgid "git merge [<options>] <msg> HEAD <commit>"
+msgstr "git merge [<opcions>] <missatge> HEAD <comissió>"
 
 #: builtin/merge.c:47
 msgid "git merge --abort"
 msgstr "git merge --abort"
 
 #: builtin/merge.c:100
@@ -7251,18 +7288,18 @@
 msgid "Automatic merge went well; stopped before committing as requested\n"
 msgstr ""
 "La fusió automàtica ha sortit bé; s'ha aturat abans de cometre tal i com "
 "s'havia demanat\n"
 
 #: builtin/merge-base.c:29
-msgid "git merge-base [-a|--all] <commit> <commit>..."
-msgstr "git merge-base [-a|--all] <comissió> <comissió>..."
+msgid "git merge-base [-a | --all] <commit> <commit>..."
+msgstr "git merge-base [-a | --all] <comissió> <comissió>..."
 
 #: builtin/merge-base.c:30
-msgid "git merge-base [-a|--all] --octopus <commit>..."
-msgstr "git merge-base [-a|--all] --octopus <comissió>..."
+msgid "git merge-base [-a | --all] --octopus <commit>..."
+msgstr "git merge-base [-a | --all] --octopus <comissió>..."
 
 #: builtin/merge-base.c:31
 msgid "git merge-base --independent <commit>..."
 msgstr "git merge-base --independent <comissió>..."
 
 #: builtin/merge-base.c:32
@@ -7293,17 +7330,17 @@
 msgid "find where <commit> forked from reflog of <ref>"
 msgstr ""
 "troba on <comissió> s'ha bifurcat del registre de referències de <referència>"
 
 #: builtin/merge-file.c:8
 msgid ""
-"git merge-file [options] [-L name1 [-L orig [-L name2]]] file1 orig_file "
-"file2"
+"git merge-file [<options>] [-L <name1> [-L <orig> [-L <name2>]]] <file1> "
+"<orig-file> <file2>"
 msgstr ""
-"git merge-file [opcions] [-L nom1 [-L original [-L nom2]]] fitxer1 "
-"fitxer_original fitxer2"
+"git merge-file [<opcions>] [-L <nom1> [-L <original> [-L <nom2>]]] <fitxer1> "
+"<fitxer-original> <fitxer2>"
 
 #: builtin/merge-file.c:33
 msgid "send results to standard output"
 msgstr "envia els resultats a la sortida estàndard"
 
 #: builtin/merge-file.c:34
@@ -7328,14 +7365,14 @@
 
 #: builtin/merge-file.c:43
 msgid "do not warn about conflicts"
 msgstr "no avisis de conflictes"
 
 #: builtin/merge-file.c:45
-msgid "set labels for file1/orig_file/file2"
-msgstr "estableix les etiquetes per a fitxer1/fitxer_original/fitxer2"
+msgid "set labels for file1/orig-file/file2"
+msgstr "estableix les etiquetes per a fitxer1/fitxer-original/fitxer2"
 
 #: builtin/mktree.c:64
 msgid "git mktree [-z] [--missing] [--batch]"
 msgstr "git mktree [-z] [--missing] [--batch]"
 
 #: builtin/mktree.c:150
@@ -7348,14 +7385,14 @@
 
 #: builtin/mktree.c:152
 msgid "allow creation of more than one tree"
 msgstr "permet la creació de més d'un arbre"
 
 #: builtin/mv.c:15
-msgid "git mv [options] <source>... <destination>"
-msgstr "git mv [opcions] <font>... <destí>"
+msgid "git mv [<options>] <source>... <destination>"
+msgstr "git mv [<opcions>] <font>... <destí>"
 
 #: builtin/mv.c:69
 #, c-format
 msgid "Directory %s is in index and no submodule?"
 msgstr "El directori %s és en l'índex i no hi ha cap submòdul?"
 
@@ -7436,28 +7473,28 @@
 
 #: builtin/mv.c:253
 #, c-format
 msgid "Renaming %s to %s\n"
 msgstr "Canviant el nom de %s a %s\n"
 
-#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:355
+#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:359
 #, c-format
 msgid "renaming '%s' failed"
 msgstr "el canvi del nom de '%s' ha fallat"
 
 #: builtin/name-rev.c:255
-msgid "git name-rev [options] <commit>..."
-msgstr "git name-rev [opcions] <comissió>..."
+msgid "git name-rev [<options>] <commit>..."
+msgstr "git name-rev [<opcions>] <comissió>..."
 
 #: builtin/name-rev.c:256
-msgid "git name-rev [options] --all"
-msgstr "git name-rev [opcions] --all"
+msgid "git name-rev [<options>] --all"
+msgstr "git name-rev [<opcions>] --all"
 
 #: builtin/name-rev.c:257
-msgid "git name-rev [options] --stdin"
-msgstr "git name-rev [opcions] --stdin"
+msgid "git name-rev [<options>] --stdin"
+msgstr "git name-rev [<opcions>] --stdin"
 
 #: builtin/name-rev.c:309
 msgid "print only names (no SHA-1)"
 msgstr "imprimeix només els noms (sense SHA-1)"
 
 #: builtin/name-rev.c:310
@@ -7482,71 +7519,71 @@
 
 #: builtin/name-rev.c:322
 msgid "dereference tags in the input (internal use)"
 msgstr "dereferencia les etiquetes en l'entrada (ús intern)"
 
 #: builtin/notes.c:24
-msgid "git notes [--ref <notes_ref>] [list [<object>]]"
-msgstr "git notes [--ref <referència_de_notes>] [llista [<objecte>]]"
+msgid "git notes [--ref <notes-ref>] [list [<object>]]"
+msgstr "git notes [--ref <referència-de-notes>] [llista [<objecte>]]"
 
 #: builtin/notes.c:25
 msgid ""
-"git notes [--ref <notes_ref>] add [-f] [--allow-empty] [-m <msg> | -F <file> "
+"git notes [--ref <notes-ref>] add [-f] [--allow-empty] [-m <msg> | -F <file> "
 "| (-c | -C) <object>] [<object>]"
 msgstr ""
-"git notes [--ref <referència_de_notes>] add [-f] [--allow-empty] [-m "
+"git notes [--ref <referència-de-notes>] add [-f] [--allow-empty] [-m "
 "<missatge> | -F <fitxer> | (-c | -C) <objecte>] [<objecte>]"
 
 #: builtin/notes.c:26
-msgid "git notes [--ref <notes_ref>] copy [-f] <from-object> <to-object>"
+msgid "git notes [--ref <notes-ref>] copy [-f] <from-object> <to-object>"
 msgstr ""
-"git notes [--ref <referència_de_notes>] copy [-f] <d'objecte> <a-objecte>"
+"git notes [--ref <referència-de-notes>] copy [-f] <d'objecte> <a-objecte>"
 
 #: builtin/notes.c:27
 msgid ""
-"git notes [--ref <notes_ref>] append [--allow-empty] [-m <msg> | -F <file> | "
+"git notes [--ref <notes-ref>] append [--allow-empty] [-m <msg> | -F <file> | "
 "(-c | -C) <object>] [<object>]"
 msgstr ""
-"git notes [--ref <referència_de_notes>] append [--allow-empty] [-m "
+"git notes [--ref <referència-de-notes>] append [--allow-empty] [-m "
 "<missatge> | -F <fitxer> | (-c | -C) <objecte>] [<objecte>]"
 
 #: builtin/notes.c:28
-msgid "git notes [--ref <notes_ref>] edit [--allow-empty] [<object>]"
+msgid "git notes [--ref <notes-ref>] edit [--allow-empty] [<object>]"
 msgstr ""
-"git notes [--ref <referència_de_notes>] edit [--allow-empty] [<objecte>]"
+"git notes [--ref <referència-de-notes>] edit [--allow-empty] [<objecte>]"
 
 #: builtin/notes.c:29
-msgid "git notes [--ref <notes_ref>] show [<object>]"
-msgstr "git notes [--ref <referència_de_notes>] show [<objecte>]"
+msgid "git notes [--ref <notes-ref>] show [<object>]"
+msgstr "git notes [--ref <referència-de-notes>] show [<objecte>]"
 
 #: builtin/notes.c:30
 msgid ""
-"git notes [--ref <notes_ref>] merge [-v | -q] [-s <strategy> ] <notes_ref>"
+"git notes [--ref <notes-ref>] merge [-v | -q] [-s <strategy>] <notes-ref>"
 msgstr ""
-"git notes [--ref <referència_de_notes>] merge [-v | -q] [-s <estratègia> ] "
-"<referència_de_notes>"
+"git notes [--ref <referència-de-notes>] merge [-v | -q] [-s <estratègia>] "
+"<referència-de-notes>"
 
 #: builtin/notes.c:31
 msgid "git notes merge --commit [-v | -q]"
 msgstr "git notes merge --commit [-v | -q]"
 
 #: builtin/notes.c:32
 msgid "git notes merge --abort [-v | -q]"
 msgstr "git notes merge --abort [-v | -q]"
 
 #: builtin/notes.c:33
-msgid "git notes [--ref <notes_ref>] remove [<object>...]"
-msgstr "git notes [--ref <referència_de_notes>] remove [<objecte>...]"
+msgid "git notes [--ref <notes-ref>] remove [<object>...]"
+msgstr "git notes [--ref <referència-de-notes>] remove [<objecte>...]"
 
 #: builtin/notes.c:34
-msgid "git notes [--ref <notes_ref>] prune [-n | -v]"
-msgstr "git notes [--ref <referència_de_notes>] prune [-n | -v]"
+msgid "git notes [--ref <notes-ref>] prune [-n | -v]"
+msgstr "git notes [--ref <referència-de-notes>] prune [-n | -v]"
 
 #: builtin/notes.c:35
-msgid "git notes [--ref <notes_ref>] get-ref"
-msgstr "git notes [--ref <referència_de_notes>] get-ref"
+msgid "git notes [--ref <notes-ref>] get-ref"
+msgstr "git notes [--ref <referència-de-notes>] get-ref"
 
 #: builtin/notes.c:40
 msgid "git notes [list [<object>]]"
 msgstr "git notes [llista [<objecte>]]"
 
 #: builtin/notes.c:45
@@ -7571,14 +7608,14 @@
 
 #: builtin/notes.c:66
 msgid "git notes show [<object>]"
 msgstr "git notes show [<objecte>]"
 
 #: builtin/notes.c:71
-msgid "git notes merge [<options>] <notes_ref>"
-msgstr "git notes merge [<opcions>] <referència_de_notes>"
+msgid "git notes merge [<options>] <notes-ref>"
+msgstr "git notes merge [<opcions>] <referència-de-notes>"
 
 #: builtin/notes.c:72
 msgid "git notes merge --commit [<options>]"
 msgstr "git notes merge --commit [<opcions>]"
 
 #: builtin/notes.c:73
@@ -7811,14 +7848,14 @@
 
 #: builtin/notes.c:953
 msgid "notes-ref"
 msgstr "referència de notes"
 
 #: builtin/notes.c:954
-msgid "use notes from <notes_ref>"
-msgstr "usa les notes de <referència de notes>"
+msgid "use notes from <notes-ref>"
+msgstr "usa les notes de <referència-de-notes>"
 
 #: builtin/notes.c:989 builtin/remote.c:1621
 #, c-format
 msgid "Unknown subcommand: %s"
 msgstr "Subordre desconegut: %s"
 
@@ -7831,215 +7868,215 @@
 #: builtin/pack-objects.c:29
 msgid "git pack-objects [options...] base-name [< ref-list | < object-list]"
 msgstr ""
 "git pack-objects [opcions...] nom-base [< llista-de-referències | < llista-"
 "de-objectes]"
 
-#: builtin/pack-objects.c:177 builtin/pack-objects.c:180
+#: builtin/pack-objects.c:175 builtin/pack-objects.c:178
 #, c-format
 msgid "deflate error (%d)"
 msgstr "error de deflació (%d)"
 
-#: builtin/pack-objects.c:773
+#: builtin/pack-objects.c:771
 msgid "Writing objects"
 msgstr "Escrivint els objectes"
 
-#: builtin/pack-objects.c:1015
+#: builtin/pack-objects.c:1013
 msgid "disabling bitmap writing, as some objects are not being packed"
 msgstr ""
 "inhabilitant l'escriptura de mapes de bits, perquè alguns objectes no "
 "s'estan empaquetant"
 
-#: builtin/pack-objects.c:2175
+#: builtin/pack-objects.c:2173
 msgid "Compressing objects"
 msgstr "Comprimint objectes"
 
-#: builtin/pack-objects.c:2572
+#: builtin/pack-objects.c:2570
 #, c-format
 msgid "unsupported index version %s"
 msgstr "versió d'índex no compatible %s"
 
-#: builtin/pack-objects.c:2576
+#: builtin/pack-objects.c:2574
 #, c-format
 msgid "bad index version '%s'"
 msgstr "versió d'índex dolenta '%s'"
 
-#: builtin/pack-objects.c:2599
+#: builtin/pack-objects.c:2597
 #, c-format
 msgid "option %s does not accept negative form"
 msgstr "l'opció %s no accepta la forma negativa"
 
-#: builtin/pack-objects.c:2603
+#: builtin/pack-objects.c:2601
 #, c-format
 msgid "unable to parse value '%s' for option %s"
 msgstr "no s'ha pogut analitzar el valor '%s' per a l'opció %s"
 
-#: builtin/pack-objects.c:2623
+#: builtin/pack-objects.c:2621
 msgid "do not show progress meter"
 msgstr "no mostris l'indicador de progrés"
 
-#: builtin/pack-objects.c:2625
+#: builtin/pack-objects.c:2623
 msgid "show progress meter"
 msgstr "mostra l'indicador de progrés"
 
-#: builtin/pack-objects.c:2627
+#: builtin/pack-objects.c:2625
 msgid "show progress meter during object writing phase"
 msgstr "mostra l'indicador de progrés durant la fase d'escriptura d'objectes"
 
-#: builtin/pack-objects.c:2630
+#: builtin/pack-objects.c:2628
 msgid "similar to --all-progress when progress meter is shown"
 msgstr "similar a --all-progress quan l'indicador de progrés es mostra"
 
-#: builtin/pack-objects.c:2631
+#: builtin/pack-objects.c:2629
 msgid "version[,offset]"
 msgstr "versió[,desplaçament]"
 
-#: builtin/pack-objects.c:2632
+#: builtin/pack-objects.c:2630
 msgid "write the pack index file in the specified idx format version"
 msgstr ""
 "escriu el fitxer d'índex de paquet en la versió de format d'índex "
 "especificada"
 
-#: builtin/pack-objects.c:2635
+#: builtin/pack-objects.c:2633
 msgid "maximum size of each output pack file"
 msgstr "mida màxima de cada fitxer de paquet de sortida"
 
-#: builtin/pack-objects.c:2637
+#: builtin/pack-objects.c:2635
 msgid "ignore borrowed objects from alternate object store"
 msgstr ""
 "ignora els objectes prestats d'un emmagatzemament d'objectes alternatiu"
 
-#: builtin/pack-objects.c:2639
+#: builtin/pack-objects.c:2637
 msgid "ignore packed objects"
 msgstr "ignora els objectes empaquetats"
 
-#: builtin/pack-objects.c:2641
+#: builtin/pack-objects.c:2639
 msgid "limit pack window by objects"
 msgstr "limita la finestra d'empaquetament per objectes"
 
-#: builtin/pack-objects.c:2643
+#: builtin/pack-objects.c:2641
 msgid "limit pack window by memory in addition to object limit"
 msgstr ""
 "limita la finestra d'empaquetament per memòria a més del límit d'objectes"
 
-#: builtin/pack-objects.c:2645
+#: builtin/pack-objects.c:2643
 msgid "maximum length of delta chain allowed in the resulting pack"
 msgstr "longitud màxima de la cadena de deltes permesa en el paquet resultant"
 
-#: builtin/pack-objects.c:2647
+#: builtin/pack-objects.c:2645
 msgid "reuse existing deltas"
 msgstr "reusa les deltes existents"
 
-#: builtin/pack-objects.c:2649
+#: builtin/pack-objects.c:2647
 msgid "reuse existing objects"
 msgstr "reusa els objectes existents"
 
-#: builtin/pack-objects.c:2651
+#: builtin/pack-objects.c:2649
 msgid "use OFS_DELTA objects"
 msgstr "usa objectes OFS_DELTA"
 
-#: builtin/pack-objects.c:2653
+#: builtin/pack-objects.c:2651
 msgid "use threads when searching for best delta matches"
 msgstr "usa fils en cercar les millores coincidències de delta"
 
-#: builtin/pack-objects.c:2655
+#: builtin/pack-objects.c:2653
 msgid "do not create an empty pack output"
 msgstr "no creïs una emissió de paquet buida"
 
-#: builtin/pack-objects.c:2657
+#: builtin/pack-objects.c:2655
 msgid "read revision arguments from standard input"
 msgstr "llegeix els paràmetres de revisió des de l'entrada estàndard"
 
-#: builtin/pack-objects.c:2659
+#: builtin/pack-objects.c:2657
 msgid "limit the objects to those that are not yet packed"
 msgstr "limita els objectes als que encara no s'hagin empaquetat"
 
-#: builtin/pack-objects.c:2662
+#: builtin/pack-objects.c:2660
 msgid "include objects reachable from any reference"
 msgstr "inclou els objectes abastables de qualsevulla referència"
 
-#: builtin/pack-objects.c:2665
+#: builtin/pack-objects.c:2663
 msgid "include objects referred by reflog entries"
 msgstr ""
 "inclou els objectes als quals facin referència les entrades del registre de "
 "referències"
 
-#: builtin/pack-objects.c:2668
+#: builtin/pack-objects.c:2666
 msgid "include objects referred to by the index"
 msgstr "inclou els objectes als quals faci referència l'índex"
 
-#: builtin/pack-objects.c:2671
+#: builtin/pack-objects.c:2669
 msgid "output pack to stdout"
 msgstr "emet el paquet a stdout"
 
-#: builtin/pack-objects.c:2673
+#: builtin/pack-objects.c:2671
 msgid "include tag objects that refer to objects to be packed"
 msgstr ""
 "inclou els objectes d'etiqueta que facin referència als objectes a empaquetar"
 
-#: builtin/pack-objects.c:2675
+#: builtin/pack-objects.c:2673
 msgid "keep unreachable objects"
 msgstr "retén els objectes inabastables"
 
-#: builtin/pack-objects.c:2676 parse-options.h:140
+#: builtin/pack-objects.c:2674 parse-options.h:140
 msgid "time"
 msgstr "hora"
 
-#: builtin/pack-objects.c:2677
+#: builtin/pack-objects.c:2675
 msgid "unpack unreachable objects newer than <time>"
 msgstr "desempaqueta els objectes inabastables més nous que <hora>"
 
-#: builtin/pack-objects.c:2680
+#: builtin/pack-objects.c:2678
 msgid "create thin packs"
 msgstr "crea paquets prims"
 
-#: builtin/pack-objects.c:2682
+#: builtin/pack-objects.c:2680
 msgid "create packs suitable for shallow fetches"
 msgstr "crea paquets adequats per als obteniments superficials"
 
-#: builtin/pack-objects.c:2684
+#: builtin/pack-objects.c:2682
 msgid "ignore packs that have companion .keep file"
 msgstr "ignora els paquets que tinguin un fitxer .keep corresponent"
 
-#: builtin/pack-objects.c:2686
+#: builtin/pack-objects.c:2684
 msgid "pack compression level"
 msgstr "nivell de compressió de paquet"
 
-#: builtin/pack-objects.c:2688
+#: builtin/pack-objects.c:2686
 msgid "do not hide commits by grafts"
 msgstr "no amaguis les comissions per empelt"
 
-#: builtin/pack-objects.c:2690
+#: builtin/pack-objects.c:2688
 msgid "use a bitmap index if available to speed up counting objects"
 msgstr ""
 "usa un índex de mapa de bits, si està disponible, per a accelerar el "
 "recompte d'objectes"
 
-#: builtin/pack-objects.c:2692
+#: builtin/pack-objects.c:2690
 msgid "write a bitmap index together with the pack index"
 msgstr "escriu un índex de mapa de bits junt amb l'índex de paquet"
 
-#: builtin/pack-objects.c:2783
+#: builtin/pack-objects.c:2781
 msgid "Counting objects"
 msgstr "Comptant els objectes"
 
 #: builtin/pack-refs.c:6
-msgid "git pack-refs [options]"
-msgstr "git pack-refs [opcions]"
+msgid "git pack-refs [<options>]"
+msgstr "git pack-refs [<opcions>]"
 
 #: builtin/pack-refs.c:14
 msgid "pack everything"
 msgstr "empaqueta-ho tot"
 
 #: builtin/pack-refs.c:15
 msgid "prune loose refs (default)"
 msgstr "poda les referències soltes (per defecte)"
 
 #: builtin/prune-packed.c:7
-msgid "git prune-packed [-n|--dry-run] [-q|--quiet]"
-msgstr "git prune-packed [-n|--dry-run] [-q|--quiet]"
+msgid "git prune-packed [-n | --dry-run] [-q | --quiet]"
+msgstr "git prune-packed [-n | --dry-run] [-q | --quiet]"
 
 #: builtin/prune-packed.c:40
 msgid "Removing duplicate objects"
 msgstr "Eliminant objectes duplicats"
 
 #: builtin/prune.c:12
@@ -8312,81 +8349,85 @@
 msgstr "--mirror no es pot combinar amb especificacions de referència"
 
 #: builtin/push.c:422
 msgid "--all and --mirror are incompatible"
 msgstr "--all i --mirror són incompatibles"
 
-#: builtin/push.c:493
+#: builtin/push.c:502
 msgid "repository"
 msgstr "dipòsit"
 
-#: builtin/push.c:494
+#: builtin/push.c:503
 msgid "push all refs"
 msgstr "envia totes les referències"
 
-#: builtin/push.c:495
+#: builtin/push.c:504
 msgid "mirror all refs"
 msgstr "reflecteix totes les referències"
 
-#: builtin/push.c:497
+#: builtin/push.c:506
 msgid "delete refs"
 msgstr "suprimeix les referències"
 
-#: builtin/push.c:498
+#: builtin/push.c:507
 msgid "push tags (can't be used with --all or --mirror)"
 msgstr "envia les etiquetes (no es pot usar amb --all o --mirror)"
 
-#: builtin/push.c:501
+#: builtin/push.c:510
 msgid "force updates"
 msgstr "força les actualitzacions"
 
-#: builtin/push.c:503
+#: builtin/push.c:512
 msgid "refname>:<expect"
 msgstr "nom-de-referència>:<esperat"
 
-#: builtin/push.c:504
+#: builtin/push.c:513
 msgid "require old value of ref to be at this value"
 msgstr "requereix que el valor antic de la referència sigui d'aquest valor"
 
-#: builtin/push.c:507
+#: builtin/push.c:516
 msgid "control recursive pushing of submodules"
 msgstr "controla la pujada recursiva dels submòduls"
 
-#: builtin/push.c:509
+#: builtin/push.c:518
 msgid "use thin pack"
 msgstr "usa el paquet prim"
 
-#: builtin/push.c:510 builtin/push.c:511
+#: builtin/push.c:519 builtin/push.c:520
 msgid "receive pack program"
 msgstr "programa que rep els paquets"
 
-#: builtin/push.c:512
+#: builtin/push.c:521
 msgid "set upstream for git pull/status"
 msgstr "estableix la font per a git pull/status"
 
-#: builtin/push.c:515
+#: builtin/push.c:524
 msgid "prune locally removed refs"
 msgstr "poda les referències eliminades localment"
 
-#: builtin/push.c:517
+#: builtin/push.c:526
 msgid "bypass pre-push hook"
 msgstr "evita el ganxo de prepujada"
 
-#: builtin/push.c:518
+#: builtin/push.c:527
 msgid "push missing but relevant tags"
 msgstr "puja les etiquetes absents però rellevants"
 
-#: builtin/push.c:520
+#: builtin/push.c:529
 msgid "GPG sign the push"
 msgstr "firma la pujada amb GPG"
 
-#: builtin/push.c:529
+#: builtin/push.c:530
+msgid "request atomic transaction on remote side"
+msgstr "demana una transacció atòmica al costat remot"
+
+#: builtin/push.c:539
 msgid "--delete is incompatible with --all, --mirror and --tags"
 msgstr "--delete és incompatible amb --all, --mirror i --tags"
 
-#: builtin/push.c:531
+#: builtin/push.c:541
 msgid "--delete doesn't make sense without any refs"
 msgstr "--delete no té sentit sense referències"
 
 #: builtin/read-tree.c:37
 msgid ""
 "git read-tree [[-m [--trivial] [--aggressive] | --reset | --prefix=<prefix>] "
@@ -8458,45 +8499,45 @@
 msgstr "salta l'aplicació del filtre d'agafament escàs"
 
 #: builtin/read-tree.c:139
 msgid "debug unpack-trees"
 msgstr "depura unpack-trees"
 
-#: builtin/reflog.c:499
+#: builtin/reflog.c:429
 #, c-format
 msgid "%s' for '%s' is not a valid timestamp"
 msgstr "%s' per a '%s' no és una marca de temps vàlida"
 
-#: builtin/reflog.c:615 builtin/reflog.c:620
+#: builtin/reflog.c:546 builtin/reflog.c:551
 #, c-format
 msgid "'%s' is not a valid timestamp"
 msgstr "'%s' no és una marca de temps vàlida"
 
 #: builtin/remote.c:12
 msgid "git remote [-v | --verbose]"
 msgstr "git remote [-v | --verbose]"
 
 #: builtin/remote.c:13
 msgid ""
-"git remote add [-t <branch>] [-m <master>] [-f] [--tags|--no-tags] [--"
+"git remote add [-t <branch>] [-m <master>] [-f] [--tags | --no-tags] [--"
 "mirror=<fetch|push>] <name> <url>"
 msgstr ""
-"git remote add [-t <branca>] [-m <mestra>] [-f] [--tags|--no-tags] [--"
+"git remote add [-t <branca>] [-m <mestra>] [-f] [--tags | --no-tags] [--"
 "mirror=<fetch|push>] <nom> <url>"
 
 #: builtin/remote.c:14 builtin/remote.c:33
 msgid "git remote rename <old> <new>"
 msgstr "git remote rename <antic> <nou>"
 
 #: builtin/remote.c:15 builtin/remote.c:38
 msgid "git remote remove <name>"
 msgstr "git remote remove <nom>"
 
-#: builtin/remote.c:16
-msgid "git remote set-head <name> (-a | --auto | -d | --delete |<branch>)"
-msgstr "git remote set-head <nom> (-a | --auto | -d | --delete |<branca>)"
+#: builtin/remote.c:16 builtin/remote.c:43
+msgid "git remote set-head <name> (-a | --auto | -d | --delete | <branch>)"
+msgstr "git remote set-head <nom> (-a | --auto | -d | --delete | <branca>)"
 
 #: builtin/remote.c:17
 msgid "git remote [-v | --verbose] show [-n] <name>"
 msgstr "git remote [-v | --verbose] show [-n] <nom>"
 
 #: builtin/remote.c:18
@@ -8526,16 +8567,12 @@
 msgstr "git remote set-url --delete <nom> <url>"
 
 #: builtin/remote.c:28
 msgid "git remote add [<options>] <name> <url>"
 msgstr "git remote add [<opcions>] <nom> <url>"
 
-#: builtin/remote.c:43
-msgid "git remote set-head <name> (-a | --auto | -d | --delete | <branch>)"
-msgstr "git remote set-head <nom> (-a | --auto | -d | --delete | <branca>)"
-
 #: builtin/remote.c:48
 msgid "git remote set-branches <name> <branch>..."
 msgstr "git remote set-branches <nom> <branca>..."
 
 #: builtin/remote.c:49
 msgid "git remote set-branches --add <name> <branch>..."
@@ -8969,14 +9006,14 @@
 
 #: builtin/remote.c:1592
 msgid "be verbose; must be placed before a subcommand"
 msgstr "sigues detallat; s'ha de col·locar abans d'una subordre"
 
 #: builtin/repack.c:17
-msgid "git repack [options]"
-msgstr "git repack [opcions]"
+msgid "git repack [<options>]"
+msgstr "git repack [<opcions>]"
 
 #: builtin/repack.c:159
 msgid "pack everything in a single pack"
 msgstr "empaqueta-ho tot en un únic paquet"
 
 #: builtin/repack.c:161
@@ -9038,13 +9075,13 @@
 msgstr "mida màxima de cada fitxer de paquet"
 
 #: builtin/repack.c:187
 msgid "repack objects in packs marked with .keep"
 msgstr "reempaqueta els objectes en paquets marcats amb .keep"
 
-#: builtin/repack.c:371
+#: builtin/repack.c:375
 #, c-format
 msgid "removing '%s' failed"
 msgstr "la supressió de '%s' ha fallat"
 
 #: builtin/replace.c:19
 msgid "git replace [-f] <object> <replacement>"
@@ -9130,14 +9167,14 @@
 
 #: builtin/replace.c:438
 msgid "use this format"
 msgstr "usa aquest format"
 
 #: builtin/rerere.c:12
-msgid "git rerere [clear | forget path... | status | remaining | diff | gc]"
-msgstr "git rerere [clear | forget camí... | status | remaining | diff | gc]"
+msgid "git rerere [clear | forget <path>... | status | remaining | diff | gc]"
+msgstr "git rerere [clear | forget <camí>... | status | remaining | diff | gc]"
 
 #: builtin/rerere.c:57
 msgid "register clean resolutions in index"
 msgstr "registra les resolucions netes en l'índex"
 
 #: builtin/reset.c:26
@@ -9271,14 +9308,14 @@
 
 #: builtin/reset.c:374
 msgid "Could not write new index file."
 msgstr "No s'ha pogut escriure el fitxer d'índex nou."
 
 #: builtin/rev-parse.c:361
-msgid "git rev-parse --parseopt [options] -- [<args>...]"
-msgstr "git rev-parse --parseopt [opcions] -- [<paràmetres>...]"
+msgid "git rev-parse --parseopt [<options>] -- [<args>...]"
+msgstr "git rev-parse --parseopt [<opcions>] -- [<paràmetres>...]"
 
 #: builtin/rev-parse.c:366
 msgid "keep the `--` passed as an arg"
 msgstr "retén el `--` passat com a paràmetre"
 
 #: builtin/rev-parse.c:368
@@ -9288,36 +9325,36 @@
 #: builtin/rev-parse.c:371
 msgid "output in stuck long form"
 msgstr "emet en forma llarga enganxada"
 
 #: builtin/rev-parse.c:499
 msgid ""
-"git rev-parse --parseopt [options] -- [<args>...]\n"
+"git rev-parse --parseopt [<options>] -- [<args>...]\n"
 "   or: git rev-parse --sq-quote [<arg>...]\n"
-"   or: git rev-parse [options] [<arg>...]\n"
+"   or: git rev-parse [<options>] [<arg>...]\n"
 "\n"
 "Run \"git rev-parse --parseopt -h\" for more information on the first usage."
 msgstr ""
-"git rev-parse --parseopt [opcions] -- [<paràmetres>...]\n"
+"git rev-parse --parseopt [<opcions>] -- [<paràmetres>...]\n"
 "   or: git rev-parse --sq-quote [<paràmetre>...]\n"
-"   or: git rev-parse [opcions] [<paràmetre>...]\n"
+"   or: git rev-parse [<opcions>] [<paràmetre>...]\n"
 "\n"
 "Executeu \"git rev-parse --parseopt -h\" per més informació sobre l'ús "
 "inicial."
 
 #: builtin/revert.c:22
-msgid "git revert [options] <commit-ish>..."
-msgstr "git revert [opcions] <comissió>..."
+msgid "git revert [<options>] <commit-ish>..."
+msgstr "git revert [<opcions>] <comissió>..."
 
 #: builtin/revert.c:23
 msgid "git revert <subcommand>"
 msgstr "git revert <subordre>"
 
 #: builtin/revert.c:28
-msgid "git cherry-pick [options] <commit-ish>..."
-msgstr "git cherry-pick [opcions] <comissió>..."
+msgid "git cherry-pick [<options>] <commit-ish>..."
+msgstr "git cherry-pick [<opcions>] <comissió>..."
 
 #: builtin/revert.c:29
 msgid "git cherry-pick <subcommand>"
 msgstr "git cherry-pick <subordre>"
 
 #: builtin/revert.c:71
@@ -9391,14 +9428,14 @@
 
 #: builtin/revert.c:212
 msgid "cherry-pick failed"
 msgstr "el recull de cireres ha fallat"
 
 #: builtin/rm.c:17
-msgid "git rm [options] [--] <file>..."
-msgstr "git rm [opcions] [--] <fitxer>..."
+msgid "git rm [<options>] [--] <file>..."
+msgstr "git rm [<opcions>] [--] <fitxer>..."
 
 #: builtin/rm.c:65
 msgid ""
 "the following submodule (or one of its nested submodules)\n"
 "uses a .git directory:"
 msgid_plural ""
@@ -9495,14 +9532,14 @@
 #: builtin/rm.c:375
 #, c-format
 msgid "git rm: unable to remove %s"
 msgstr "git rm: no s'ha pogut eliminar %s"
 
 #: builtin/shortlog.c:13
-msgid "git shortlog [<options>] [<revision range>] [[--] [<path>...]]"
-msgstr "git shortlog [<opcions>] [<rang de revisions>] [[--] [<camí>...]]"
+msgid "git shortlog [<options>] [<revision-range>] [[--] [<path>...]]"
+msgstr "git shortlog [<opcions>] [<rang-de-revisions>] [[--] [<camí>...]]"
 
 #: builtin/shortlog.c:131
 #, c-format
 msgid "Missing author: %s"
 msgstr "Manca l'autor: %s"
 
@@ -9526,25 +9563,25 @@
 #: builtin/shortlog.c:236
 msgid "Linewrap output"
 msgstr "Ajusta les línies de la sortida"
 
 #: builtin/show-branch.c:9
 msgid ""
-"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
-"\t\t       [--current] [--color[=<when>] | --no-color] [--sparse]\n"
-"\t\t       [--more=<n> | --list | --independent | --merge-base]\n"
-"\t       [--no-name | --sha1-name] [--topics] [(<rev> | <glob>)...]"
+"git show-branch [-a | --all] [-r | --remotes] [--topo-order | --date-order]\n"
+"\t\t[--current] [--color[=<when>] | --no-color] [--sparse]\n"
+"\t\t[--more=<n> | --list | --independent | --merge-base]\n"
+"\t\t[--no-name | --sha1-name] [--topics] [(<rev> | <glob>)...]"
 msgstr ""
-"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
+"git show-branch [-a | --all] [-r | --remotes] [--topo-order | --date-order]\n"
 "\t\t       [--current] [--color[=<quan>] | --no-color] [--sparse]\n"
 "\t\t       [--more=<n> | --list | --independent | --merge-base]\n"
 "\t\t       [--no-name | --sha1-name] [--topics] [(<revisió> | <glob>)...]"
 
 #: builtin/show-branch.c:13
-msgid "git show-branch (-g|--reflog)[=<n>[,<base>]] [--list] [<ref>]"
-msgstr "git show-branch (-g|--reflog)[=<n>[,<base>]] [--list] [<referència>]"
+msgid "git show-branch (-g | --reflog)[=<n>[,<base>]] [--list] [<ref>]"
+msgstr "git show-branch (-g | --reflog)[=<n>[,<base>]] [--list] [<referència>]"
 
 #: builtin/show-branch.c:652
 msgid "show remote-tracking and local branches"
 msgstr "mostra les branques amb seguiment remot i les locals"
 
 #: builtin/show-branch.c:654
@@ -9606,17 +9643,17 @@
 #: builtin/show-branch.c:682
 msgid "show <n> most recent ref-log entries starting at base"
 msgstr "mostra les <n> entrades més recents començant a la base"
 
 #: builtin/show-ref.c:10
 msgid ""
-"git show-ref [-q|--quiet] [--verify] [--head] [-d|--dereference] [-s|--"
-"hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [pattern*] "
+"git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | --"
+"hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<pattern>...]"
 msgstr ""
-"git show-ref [-q|--quiet] [--verify] [--head] [-d|--dereference] [-s|--"
-"hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [patró*] "
+"git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | --"
+"hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<patró>...]"
 
 #: builtin/show-ref.c:11
 msgid "git show-ref --exclude-existing[=pattern] < ref-list"
 msgstr "git show-ref --exclude-existing[=pattern] < llista-de-referències"
 
 #: builtin/show-ref.c:168
@@ -9651,18 +9688,18 @@
 
 #: builtin/show-ref.c:185
 msgid "show refs from stdin that aren't in local repository"
 msgstr "mostra les referències d'stdin que no siguin en el dipòsit local"
 
 #: builtin/symbolic-ref.c:7
-msgid "git symbolic-ref [options] name [ref]"
-msgstr "git symbolic-ref [opcions] nom [referència]"
+msgid "git symbolic-ref [<options>] <name> [<ref>]"
+msgstr "git symbolic-ref [<opcions>] <nom> [<referència>]"
 
 #: builtin/symbolic-ref.c:8
-msgid "git symbolic-ref -d [-q] name"
-msgstr "git symbolic-ref -d [-q] nom"
+msgid "git symbolic-ref -d [-q] <name>"
+msgstr "git symbolic-ref -d [-q] <nom>"
 
 #: builtin/symbolic-ref.c:40
 msgid "suppress error message for non-symbolic (detached) refs"
 msgstr "omet el missatge d'error de referències no simbòliques (separades)"
 
 #: builtin/symbolic-ref.c:41
@@ -9680,27 +9717,28 @@
 #: builtin/symbolic-ref.c:43 builtin/update-ref.c:358
 msgid "reason of the update"
 msgstr "raó de l'actualització"
 
 #: builtin/tag.c:22
 msgid ""
-"git tag [-a|-s|-u <key-id>] [-f] [-m <msg>|-F <file>] <tagname> [<head>]"
+"git tag [-a | -s | -u <key-id>] [-f] [-m <msg> | -F <file>] <tagname> "
+"[<head>]"
 msgstr ""
-"git tag [-a|-s|-u <id-de-clau>] [-f] [-m <missatge>|-F <fitxer>] <nom-"
+"git tag [-a | -s | -u <id-de-clau>] [-f] [-m <missatge> | -F <fitxer>] <nom-"
 "d'etiqueta> [<cap>]"
 
 #: builtin/tag.c:23
 msgid "git tag -d <tagname>..."
 msgstr "git tag -d <nom-d'etiqueta>..."
 
 #: builtin/tag.c:24
 msgid ""
-"git tag -l [-n[<num>]] [--contains <commit>] [--points-at <object>] \n"
+"git tag -l [-n[<num>]] [--contains <commit>] [--points-at <object>]\n"
 "\t\t[<pattern>...]"
 msgstr ""
-"git tag -l [-n[<nombre>]] [--contains <comissió>] \n"
+"git tag -l [-n[<nombre>]] [--contains <comissió>]\n"
 "\t\t[--points-at <objecte>] [<patró>...]"
 
 #: builtin/tag.c:26
 msgid "git tag -v <tagname>..."
 msgstr "git tag -v <nom-d'etiqueta>..."
 
@@ -9838,24 +9876,24 @@
 msgstr "usa una altra clau per a firmar l'etiqueta"
 
 #: builtin/tag.c:607
 msgid "replace the tag if exists"
 msgstr "reemplaça l'etiqueta si existeix"
 
-#: builtin/tag.c:608
+#: builtin/tag.c:609
+msgid "Tag listing options"
+msgstr "Opcions de llistat d'etiquetes"
+
+#: builtin/tag.c:610
 msgid "show tag list in columns"
 msgstr "mostra la llista d'etiquetes en columnes"
 
-#: builtin/tag.c:610
+#: builtin/tag.c:612
 msgid "sort tags"
 msgstr "ordena les etiquetes"
 
-#: builtin/tag.c:614
-msgid "Tag listing options"
-msgstr "Opcions de llistat d'etiquetes"
-
 #: builtin/tag.c:617 builtin/tag.c:623
 msgid "print only tags that contain the commit"
 msgstr "imprimeix només les etiquetes que continguin la comissió"
 
 #: builtin/tag.c:629
 msgid "print only tags of the object"
@@ -9906,144 +9944,144 @@
 
 #: builtin/unpack-objects.c:489
 msgid "Unpacking objects"
 msgstr "Desempaquetant objectes"
 
 #: builtin/update-index.c:403
-msgid "git update-index [options] [--] [<file>...]"
-msgstr "git update-index [opcions] [--] [<fitxer>...]"
+msgid "git update-index [<options>] [--] [<file>...]"
+msgstr "git update-index [<opcions>] [--] [<fitxer>...]"
 
-#: builtin/update-index.c:756
+#: builtin/update-index.c:757
 msgid "continue refresh even when index needs update"
 msgstr ""
 "continua l'actualització encara que l'índex necessiti una actualització"
 
-#: builtin/update-index.c:759
+#: builtin/update-index.c:760
 msgid "refresh: ignore submodules"
 msgstr "actualitza: ignora els submòduls"
 
-#: builtin/update-index.c:762
+#: builtin/update-index.c:763
 msgid "do not ignore new files"
 msgstr "no ignoris els fitxers nous"
 
-#: builtin/update-index.c:764
+#: builtin/update-index.c:765
 msgid "let files replace directories and vice-versa"
 msgstr "deixa que els fitxers reemplacin els directoris i viceversa"
 
-#: builtin/update-index.c:766
+#: builtin/update-index.c:767
 msgid "notice files missing from worktree"
 msgstr "tingues en compte els fitxers absents de l'arbre de treball"
 
-#: builtin/update-index.c:768
+#: builtin/update-index.c:769
 msgid "refresh even if index contains unmerged entries"
 msgstr "actualitza encara que l'índex contingui entrades no fusionades"
 
-#: builtin/update-index.c:771
+#: builtin/update-index.c:772
 msgid "refresh stat information"
 msgstr "actualitza la informació d'estadístiques"
 
-#: builtin/update-index.c:775
+#: builtin/update-index.c:776
 msgid "like --refresh, but ignore assume-unchanged setting"
 msgstr "com --refresh, però ignora l'ajust assume-unchanged"
 
-#: builtin/update-index.c:779
+#: builtin/update-index.c:780
 msgid "<mode>,<object>,<path>"
 msgstr "<mode>,<objecte>,<camí>"
 
-#: builtin/update-index.c:780
+#: builtin/update-index.c:781
 msgid "add the specified entry to the index"
 msgstr "afegeix l'entrada especificada a l'índex"
 
-#: builtin/update-index.c:784
+#: builtin/update-index.c:785
 msgid "(+/-)x"
 msgstr "(+/-)x"
 
-#: builtin/update-index.c:785
+#: builtin/update-index.c:786
 msgid "override the executable bit of the listed files"
 msgstr "passa per alt el bit executable dels fitxers llistats"
 
-#: builtin/update-index.c:789
+#: builtin/update-index.c:790
 msgid "mark files as \"not changing\""
 msgstr "marca els fitxers com a \"not changing\""
 
-#: builtin/update-index.c:792
+#: builtin/update-index.c:793
 msgid "clear assumed-unchanged bit"
 msgstr "neteja el bit assumed-unchanged"
 
-#: builtin/update-index.c:795
+#: builtin/update-index.c:796
 msgid "mark files as \"index-only\""
 msgstr "marca els fitxers com a \"index-only\""
 
-#: builtin/update-index.c:798
+#: builtin/update-index.c:799
 msgid "clear skip-worktree bit"
 msgstr "neteja el bit skip-worktree"
 
-#: builtin/update-index.c:801
+#: builtin/update-index.c:802
 msgid "add to index only; do not add content to object database"
 msgstr ""
 "només afegeix a l'índex; no afegeixis el contingut a la base de dades "
 "d'objectes"
 
-#: builtin/update-index.c:803
+#: builtin/update-index.c:804
 msgid "remove named paths even if present in worktree"
 msgstr ""
 "elimina els camins anomenats encara que estiguin presents en l'arbre de "
 "treball"
 
-#: builtin/update-index.c:805
+#: builtin/update-index.c:806
 msgid "with --stdin: input lines are terminated by null bytes"
 msgstr "amb --stdin: les línies d'entrada acaben amb octets nuls"
 
-#: builtin/update-index.c:807
+#: builtin/update-index.c:808
 msgid "read list of paths to be updated from standard input"
 msgstr "llegeix la llista de camins a actualitzar des de l'entrada estàndard"
 
-#: builtin/update-index.c:811
+#: builtin/update-index.c:812
 msgid "add entries from standard input to the index"
 msgstr "afegeix les entrades de l'entrada estàndard a l'índex"
 
-#: builtin/update-index.c:815
+#: builtin/update-index.c:816
 msgid "repopulate stages #2 and #3 for the listed paths"
 msgstr "reemplena les etapes #2 i #3 per als camins llistats"
 
-#: builtin/update-index.c:819
+#: builtin/update-index.c:820
 msgid "only update entries that differ from HEAD"
 msgstr "només actualitza les entrades que difereixin de HEAD"
 
-#: builtin/update-index.c:823
+#: builtin/update-index.c:824
 msgid "ignore files missing from worktree"
 msgstr "ignora els fitxers absents de l'arbre de treball"
 
-#: builtin/update-index.c:826
+#: builtin/update-index.c:827
 msgid "report actions to standard output"
 msgstr "informa de les accions en la sortida estàndard"
 
-#: builtin/update-index.c:828
+#: builtin/update-index.c:829
 msgid "(for porcelains) forget saved unresolved conflicts"
 msgstr "(per porcellanes) oblida't dels conflictes no resolts ni desats"
 
-#: builtin/update-index.c:832
+#: builtin/update-index.c:833
 msgid "write index in this format"
 msgstr "escriu l'índex en aquest format"
 
-#: builtin/update-index.c:834
+#: builtin/update-index.c:835
 msgid "enable or disable split index"
 msgstr "habilita o inhabilita l'índex dividit"
 
 #: builtin/update-ref.c:9
-msgid "git update-ref [options] -d <refname> [<oldval>]"
-msgstr "git update-ref [opcions] -d <nom-de-referència> [<valor-antic>]"
+msgid "git update-ref [<options>] -d <refname> [<old-val>]"
+msgstr "git update-ref [<opcions>] -d <nom-de-referència> [<valor-antic>]"
 
 #: builtin/update-ref.c:10
-msgid "git update-ref [options]    <refname> <newval> [<oldval>]"
+msgid "git update-ref [<options>]    <refname> <new-val> [<old-val>]"
 msgstr ""
-"git update-ref [opcions]    <nom-de-referència> <valor-nou> [<valor-antic>]"
+"git update-ref [<opcions>]    <nom-de-referència> <valor-nou> [<valor-antic>]"
 
 #: builtin/update-ref.c:11
-msgid "git update-ref [options] --stdin [-z]"
-msgstr "git update-ref [opcions] --stdin [-z]"
+msgid "git update-ref [<options>] --stdin [-z]"
+msgstr "git update-ref [<opcions>] --stdin [-z]"
 
 #: builtin/update-ref.c:359
 msgid "delete the reference"
 msgstr "suprimeix la referència"
 
 #: builtin/update-ref.c:361
@@ -10064,34 +10102,34 @@
 
 #: builtin/update-server-info.c:14
 msgid "update the info files from scratch"
 msgstr "actualitza els fitxers d'informació des de zero"
 
 #: builtin/verify-commit.c:17
-msgid "git verify-commit [-v|--verbose] <commit>..."
-msgstr "git verify-commit [-v|--verbose] <comissió>..."
+msgid "git verify-commit [-v | --verbose] <commit>..."
+msgstr "git verify-commit [-v | --verbose] <comissió>..."
 
 #: builtin/verify-commit.c:75
 msgid "print commit contents"
 msgstr "imprimeix els continguts de la comissió"
 
 #: builtin/verify-pack.c:54
-msgid "git verify-pack [-v|--verbose] [-s|--stat-only] <pack>..."
-msgstr "git verify-pack [-v|--verbose] [-s|--stat-only] <paquet>..."
+msgid "git verify-pack [-v | --verbose] [-s | --stat-only] <pack>..."
+msgstr "git verify-pack [-v | --verbose] [-s | --stat-only] <paquet>..."
 
 #: builtin/verify-pack.c:64
 msgid "verbose"
 msgstr "detallat"
 
 #: builtin/verify-pack.c:66
 msgid "show statistics only"
 msgstr "mostra només estadístiques"
 
 #: builtin/verify-tag.c:17
-msgid "git verify-tag [-v|--verbose] <tag>..."
-msgstr "git verify-tag [-v|--verbose] <etiqueta>..."
+msgid "git verify-tag [-v | --verbose] <tag>..."
+msgstr "git verify-tag [-v | --verbose] <etiqueta>..."
 
 #: builtin/verify-tag.c:73
 msgid "print tag contents"
 msgstr "imprimeix els continguts de l'etiqueta"
 
 #: builtin/write-tree.c:13
@@ -10370,13 +10408,14 @@
 
 #. TRANSLATORS: Make sure to include [y], [n], [e], [v] and [a]
 #. in your translation. The program will only accept English
 #. input at this point.
 #: git-am.sh:807
 msgid "Apply? [y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all "
-msgstr "Aplica? [y]es/[n]o/[e]dita/[v]isualitza el pedaç/[a]ccepta'ls tots "
+msgstr ""
+"Voleu aplicar-lo? [y]es/[n]o/[e]dita/[v]isualitza el pedaç/[a]ccepta'ls tots "
 
 #: git-am.sh:843
 #, sh-format
 msgid "Applying: $FIRSTLINE"
 msgstr "Aplicant: $FIRSTLINE"
 
@@ -10445,13 +10484,13 @@
 msgid "Bad HEAD - I need a HEAD"
 msgstr "HEAD dolent - Cal un HEAD"
 
 #: git-bisect.sh:130
 #, sh-format
 msgid ""
-"Checking out '$start_head' failed. Try 'git bisect reset <validbranch>'."
+"Checking out '$start_head' failed. Try 'git bisect reset <valid-branch>'."
 msgstr ""
 "L'agafament de '$start_head' ha fallat. Proveu 'git bisect reset <branca-"
 "vàlida>'."
 
 #: git-bisect.sh:140
 msgid "won't bisect on cg-seek'ed tree"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/de.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/de.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/de.po	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/de.po	2015-05-01 03:12:02.000000000 +0800
@@ -4,13 +4,13 @@
 # Ralf Thielow <ralf.thielow@gmail.com>, 2010-2015.
 #
 msgid ""
 msgstr ""
 "Project-Id-Version: Git\n"
 "Report-Msgid-Bugs-To: Git Mailing List <git@vger.kernel.org>\n"
-"POT-Creation-Date: 2015-01-21 14:21+0800\n"
+"POT-Creation-Date: 2015-04-03 08:13+0800\n"
 "PO-Revision-Date: 2015-01-21 15:01+0800\n"
 "Last-Translator: Ralf Thielow <ralf.thielow@gmail.com>\n"
 "Language-Team: German <>\n"
 "Language: de\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
@@ -29,25 +29,25 @@
 msgstr ""
 "Korrigieren Sie dies im Arbeitsverzeichnis, und benutzen Sie\n"
 "dann 'git add/rm <Datei>', um die Auflösung entsprechend zu markieren\n"
 "und zu committen."
 
 #: archive.c:11
-msgid "git archive [options] <tree-ish> [<path>...]"
-msgstr "git archive [Optionen] <Commit-Referenz> [<Pfad>...]"
+msgid "git archive [<options>] <tree-ish> [<path>...]"
+msgstr "git archive [<Optionen>] <Commit-Referenz> [<Pfad>...]"
 
 #: archive.c:12
 msgid "git archive --list"
 msgstr "git archive --list"
 
 #: archive.c:13
 msgid ""
-"git archive --remote <repo> [--exec <cmd>] [options] <tree-ish> [<path>...]"
+"git archive --remote <repo> [--exec <cmd>] [<options>] <tree-ish> [<path>...]"
 msgstr ""
-"git archive --remote <Repository> [--exec <Programm>] [Optionen] <Commit-"
-"Referenz> [Pfad...]"
+"git archive --remote <Repository> [--exec <Programm>] [<Optionen>] <Commit-"
+"Referenz> [<Pfad>...]"
 
 #: archive.c:14
 msgid "git archive --remote <repo> [--exec <cmd>] --list"
 msgstr "git archive --remote <Repository> [--exec <Programm>] --list"
 
 #: archive.c:342 builtin/add.c:137 builtin/add.c:427 builtin/rm.c:328
@@ -68,16 +68,16 @@
 msgstr "Präfix"
 
 #: archive.c:429
 msgid "prepend prefix to each pathname in the archive"
 msgstr "einen Präfix vor jeden Pfadnamen in dem Archiv stellen"
 
-#: archive.c:430 builtin/archive.c:88 builtin/blame.c:2517
-#: builtin/blame.c:2518 builtin/config.c:57 builtin/fast-export.c:986
+#: archive.c:430 builtin/archive.c:88 builtin/blame.c:2516
+#: builtin/blame.c:2517 builtin/config.c:57 builtin/fast-export.c:986
 #: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:101
-#: builtin/ls-files.c:489 builtin/ls-files.c:492 builtin/notes.c:394
+#: builtin/ls-files.c:446 builtin/ls-files.c:449 builtin/notes.c:394
 #: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:151
 msgid "file"
 msgstr "Datei"
 
 #: archive.c:431 builtin/archive.c:89
 msgid "write the archive to this file"
@@ -120,13 +120,13 @@
 msgstr "Programm"
 
 #: archive.c:452 builtin/archive.c:93
 msgid "path to the remote git-upload-archive command"
 msgstr "Pfad zum externen \"git-upload-archive\"-Programm"
 
-#: attr.c:258
+#: attr.c:264
 msgid ""
 "Negative patterns are ignored in git attributes\n"
 "Use '\\!' for literal leading exclamation."
 msgstr ""
 "Verneinende Muster werden in Git-Attributen ignoriert.\n"
 "Benutzen Sie '\\!' für führende Ausrufezeichen."
@@ -254,23 +254,23 @@
 
 #: bundle.c:61
 #, c-format
 msgid "unrecognized header: %s%s (%d)"
 msgstr "nicht erkannter Kopfbereich: %s%s (%d)"
 
-#: bundle.c:87 builtin/commit.c:770
+#: bundle.c:87 builtin/commit.c:766
 #, c-format
 msgid "could not open '%s'"
 msgstr "Konnte '%s' nicht öffnen"
 
 #: bundle.c:139
 msgid "Repository lacks these prerequisite commits:"
 msgstr "Dem Repository fehlen folgende vorausgesetzte Commits:"
 
-#: bundle.c:163 sequencer.c:645 sequencer.c:1100 builtin/blame.c:2706
-#: builtin/branch.c:652 builtin/commit.c:1049 builtin/log.c:330
+#: bundle.c:163 sequencer.c:650 sequencer.c:1105 builtin/blame.c:2705
+#: builtin/branch.c:659 builtin/commit.c:1045 builtin/log.c:330
 #: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:358
 #: builtin/shortlog.c:158
 msgid "revision walk setup failed"
 msgstr "Einrichtung des Revisionsgangs fehlgeschlagen"
 
 #: bundle.c:185
@@ -305,27 +305,27 @@
 
 #: bundle.c:358
 #, c-format
 msgid "ref '%s' is excluded by the rev-list options"
 msgstr "Referenz '%s' wird durch \"rev-list\" Optionen ausgeschlossen"
 
-#: bundle.c:438 builtin/log.c:153 builtin/log.c:1342 builtin/shortlog.c:261
+#: bundle.c:437 builtin/log.c:153 builtin/log.c:1342 builtin/shortlog.c:261
 #, c-format
 msgid "unrecognized argument: %s"
 msgstr "nicht erkanntes Argument: %s"
 
-#: bundle.c:444
+#: bundle.c:443
 msgid "Refusing to create empty bundle."
 msgstr "Erstellung eines leeren Pakets zurückgewiesen."
 
-#: bundle.c:454
+#: bundle.c:453
 #, c-format
 msgid "cannot create '%s'"
 msgstr "kann '%s' nicht erstellen"
 
-#: bundle.c:475
+#: bundle.c:474
 msgid "index-pack died"
 msgstr "Erstellung der Paketindexdatei abgebrochen"
 
 #: color.c:260
 #, c-format
 msgid "invalid color value: %.*s"
@@ -342,65 +342,65 @@
 msgstr "%s %s ist kein Commit!"
 
 #: compat/obstack.c:406 compat/obstack.c:408
 msgid "memory exhausted"
 msgstr "Speicher verbraucht"
 
-#: config.c:469 config.c:471
+#: config.c:474 config.c:476
 #, c-format
 msgid "bad config file line %d in %s"
 msgstr "Zeile %d in Konfigurationsdatei %s ist ungültig."
 
-#: config.c:587
+#: config.c:592
 #, c-format
 msgid "bad numeric config value '%s' for '%s' in %s: %s"
 msgstr "Ungültiger numerischer Wert '%s' für Konfiguration '%s' in %s: %s"
 
-#: config.c:589
+#: config.c:594
 #, c-format
 msgid "bad numeric config value '%s' for '%s': %s"
 msgstr "Ungültiger numerischer Wert '%s' für Konfiguration '%s': %s"
 
-#: config.c:674
+#: config.c:679
 #, c-format
 msgid "failed to expand user dir in: '%s'"
 msgstr "Fehler beim Erweitern des Nutzerverzeichnisses in: '%s'"
 
-#: config.c:752 config.c:763
+#: config.c:757 config.c:768
 #, c-format
 msgid "bad zlib compression level %d"
 msgstr "ungültiger zlib Komprimierungsgrad %d"
 
-#: config.c:885
+#: config.c:890
 #, c-format
 msgid "invalid mode for object creation: %s"
 msgstr "Ungültiger Modus für Objekterstellung: %s"
 
-#: config.c:1211
+#: config.c:1216
 msgid "unable to parse command-line config"
 msgstr ""
 "Konnte die über die Kommandozeile angegebene Konfiguration nicht parsen."
 
-#: config.c:1272
+#: config.c:1277
 msgid "unknown error occured while reading the configuration files"
 msgstr ""
 "Es trat ein unbekannter Fehler beim Lesen der Konfigurationsdateien auf."
 
-#: config.c:1596
+#: config.c:1601
 #, c-format
 msgid "unable to parse '%s' from command-line config"
 msgstr ""
 "Konnte Wert '%s' aus der über die Kommandozeile angegebenen\n"
 "Konfiguration nicht parsen."
 
-#: config.c:1598
+#: config.c:1603
 #, c-format
 msgid "bad config variable '%s' in file '%s' at line %d"
 msgstr "ungültige Konfigurationsvariable '%s' in Datei '%s' bei Zeile %d"
 
-#: config.c:1657
+#: config.c:1662
 #, c-format
 msgid "%s has multiple values"
 msgstr "%s hat mehrere Werte"
 
 #: connected.c:69
 msgid "Could not run 'git rev-list'"
@@ -486,13 +486,13 @@
 
 #: diffcore-order.c:24
 #, c-format
 msgid "failed to read orderfile '%s'"
 msgstr "Fehler beim Lesen der Reihenfolgedatei '%s'."
 
-#: diffcore-rename.c:516
+#: diffcore-rename.c:536
 msgid "Performing inexact rename detection"
 msgstr "Führe Erkennung für ungenaue Umbenennung aus"
 
 #: diff.c:114
 #, c-format
 msgid "  Failed to parse dirstat cut-off percentage '%s'\n"
@@ -515,31 +515,31 @@
 "Found errors in 'diff.dirstat' config variable:\n"
 "%s"
 msgstr ""
 "Fehler in 'diff.dirstat' Konfigurationsvariable gefunden:\n"
 "%s"
 
-#: diff.c:2957
+#: diff.c:2956
 #, c-format
 msgid "external diff died, stopping at %s"
 msgstr "externes Diff-Programm unerwartet beendet, angehalten bei %s"
 
-#: diff.c:3352
+#: diff.c:3351
 msgid "--follow requires exactly one pathspec"
 msgstr "--follow erfordert genau eine Pfadspezifikation"
 
-#: diff.c:3515
+#: diff.c:3514
 #, c-format
 msgid ""
 "Failed to parse --dirstat/-X option parameter:\n"
 "%s"
 msgstr ""
 "Fehler beim Parsen des --dirstat/-X Optionsparameters:\n"
 "%s"
 
-#: diff.c:3529
+#: diff.c:3528
 #, c-format
 msgid "Failed to parse --submodule option parameter: '%s'"
 msgstr "Fehler beim Parsen des --submodule Optionsparameters: '%s'"
 
 #: gpg-interface.c:129 gpg-interface.c:200
 msgid "could not run gpg."
@@ -613,13 +613,13 @@
 "Warnung: Sie haben das nicht existierende Git-Kommando '%s' ausgeführt.\n"
 "Setze fort unter der Annahme, dass Sie '%s' gemeint haben."
 
 #: help.c:373
 #, c-format
 msgid "in %0.1f seconds automatically..."
-msgstr "Automatische Ausführung in %0.1f Sekunden..."
+msgstr "Automatische Ausführung in %0.1f Sekunden ..."
 
 #: help.c:380
 #, c-format
 msgid "git: '%s' is not a git command. See 'git --help'."
 msgstr "git: '%s' ist kein Git-Kommando. Siehe 'git --help'."
 
@@ -707,13 +707,13 @@
 msgid "failed to open '%s'"
 msgstr "Fehler beim Öffnen von '%s'"
 
 #: merge-recursive.c:797
 #, c-format
 msgid "failed to symlink '%s'"
-msgstr "Fehler beim Erstellen eines symbolischen Verweises für '%s'"
+msgstr "Fehler beim Erstellen einer symbolischen Verknüpfung für '%s'"
 
 #: merge-recursive.c:800
 #, c-format
 msgid "do not know what to do with %06o %s '%s'"
 msgstr "weiß nicht was mit %06o %s '%s' zu machen ist"
 
@@ -888,33 +888,33 @@
 
 #: merge-recursive.c:1853
 #, c-format
 msgid "Unprocessed path??? %s"
 msgstr "unverarbeiteter Pfad??? %s"
 
-#: merge-recursive.c:1898
+#: merge-recursive.c:1901
 msgid "Merging:"
 msgstr "Merge:"
 
-#: merge-recursive.c:1911
+#: merge-recursive.c:1914
 #, c-format
 msgid "found %u common ancestor:"
 msgid_plural "found %u common ancestors:"
 msgstr[0] "%u gemeinsamen Vorgänger-Commit gefunden"
 msgstr[1] "%u gemeinsame Vorgänger-Commits gefunden"
 
-#: merge-recursive.c:1948
+#: merge-recursive.c:1951
 msgid "merge returned no commit"
 msgstr "Merge hat keinen Commit zurückgegeben"
 
-#: merge-recursive.c:2005
+#: merge-recursive.c:2008
 #, c-format
 msgid "Could not parse object '%s'"
 msgstr "Konnte Objekt '%s' nicht parsen."
 
-#: merge-recursive.c:2016 builtin/merge.c:667
+#: merge-recursive.c:2019 builtin/merge.c:667
 msgid "Unable to write index."
 msgstr "Konnte Staging-Area nicht schreiben."
 
 #: notes-utils.c:41
 msgid "Cannot commit uninitialized/unreferenced notes tree"
 msgstr ""
@@ -1022,13 +1022,13 @@
 msgstr ""
 "%s: Pfadspezifikationsangabe wird von diesem Kommando nicht unterstützt: %s"
 
 #: pathspec.c:432
 #, c-format
 msgid "pathspec '%s' is beyond a symbolic link"
-msgstr "Pfadspezifikation '%s' ist hinter einem symbolischen Verweis"
+msgstr "Pfadspezifikation '%s' ist hinter einer symbolischen Verknüpfung"
 
 #: pathspec.c:441
 msgid ""
 "There is nothing to exclude from by :(exclude) patterns.\n"
 "Perhaps you forgot to add either ':/' or '.' ?"
 msgstr ""
@@ -1040,22 +1040,22 @@
 msgstr "Konnte --pretty Format nicht parsen."
 
 #: progress.c:225
 msgid "done"
 msgstr "Fertig"
 
-#: read-cache.c:1267
+#: read-cache.c:1275
 #, c-format
 msgid ""
 "index.version set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "index.version gesetzt, aber Wert ungültig.\n"
 "Verwende Version %i"
 
-#: read-cache.c:1277
+#: read-cache.c:1285
 #, c-format
 msgid ""
 "GIT_INDEX_VERSION set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "GIT_INDEX_VERSION gesetzt, aber Wert ungültig.\n"
@@ -1138,30 +1138,39 @@
 #: remote.c:2021
 msgid "  (use \"git pull\" to merge the remote branch into yours)\n"
 msgstr ""
 "  (benutzen Sie \"git pull\", um Ihren Branch mit dem Remote-Branch "
 "zusammenzuführen)\n"
 
-#: run-command.c:87
+#: revision.c:2348
+msgid "--first-parent is incompatible with --bisect"
+msgstr "Die Optionen --first-parent und --bisect sind inkompatibel."
+
+#: run-command.c:83
 msgid "open /dev/null failed"
 msgstr "Öffnen von /dev/null fehlgeschlagen"
 
-#: run-command.c:89
+#: run-command.c:85
 #, c-format
 msgid "dup2(%d,%d) failed"
 msgstr "dup2(%d,%d) fehlgeschlagen"
 
-#: send-pack.c:268
+#: send-pack.c:272
 msgid "failed to sign the push certificate"
 msgstr "Fehler beim Signieren des \"push\"-Zertifikates"
 
-#: send-pack.c:325
+#: send-pack.c:356
 msgid "the receiving end does not support --signed push"
 msgstr ""
 "die Gegenseite unterstützt keinen signierten Versand (\"--signed push\")"
 
+#: send-pack.c:366
+msgid "the receiving end does not support --atomic push"
+msgstr ""
+"die Gegenseite unterstützt keinen atomaren Versand (\"--atomic push\")"
+
 #: sequencer.c:172 builtin/merge.c:782 builtin/merge.c:893 builtin/merge.c:995
 #: builtin/merge.c:1005
 #, c-format
 msgid "Could not open '%s' for writing"
 msgstr "Konnte '%s' nicht zum Schreiben öffnen."
 
@@ -1186,13 +1195,13 @@
 "and commit the result with 'git commit'"
 msgstr ""
 "nach Auflösung der Konflikte, markieren Sie die korrigierten Pfade\n"
 "mit 'git add <Pfade>' oder 'git rm <Pfade>'und tragen Sie das Ergebnis mit\n"
 "'git commit' ein"
 
-#: sequencer.c:211 sequencer.c:856 sequencer.c:939
+#: sequencer.c:211 sequencer.c:861 sequencer.c:944
 #, c-format
 msgid "Could not write to %s"
 msgstr "Konnte nicht nach %s schreiben"
 
 #: sequencer.c:214
 #, c-format
@@ -1224,190 +1233,190 @@
 msgstr "Konnte Commit von HEAD nicht auflösen\n"
 
 #: sequencer.c:359
 msgid "Unable to update cache tree\n"
 msgstr "Konnte Cache-Verzeichnis nicht aktualisieren\n"
 
-#: sequencer.c:406
+#: sequencer.c:411
 #, c-format
 msgid "Could not parse commit %s\n"
 msgstr "Konnte Commit %s nicht parsen\n"
 
-#: sequencer.c:411
+#: sequencer.c:416
 #, c-format
 msgid "Could not parse parent commit %s\n"
 msgstr "Konnte Eltern-Commit %s nicht parsen\n"
 
-#: sequencer.c:477
+#: sequencer.c:482
 msgid "Your index file is unmerged."
 msgstr "Ihre Staging-Area-Datei ist nicht zusammengeführt."
 
-#: sequencer.c:496
+#: sequencer.c:501
 #, c-format
 msgid "Commit %s is a merge but no -m option was given."
 msgstr "Commit %s ist ein Merge, aber die Option -m wurde nicht angegeben."
 
-#: sequencer.c:504
+#: sequencer.c:509
 #, c-format
 msgid "Commit %s does not have parent %d"
 msgstr "Commit %s hat keinen Elternteil %d"
 
-#: sequencer.c:508
+#: sequencer.c:513
 #, c-format
 msgid "Mainline was specified but commit %s is not a merge."
 msgstr "Hauptlinie wurde spezifiziert, aber Commit %s ist kein Merge."
 
 #. TRANSLATORS: The first %s will be "revert" or
 #. "cherry-pick", the second %s a SHA1
-#: sequencer.c:521
+#: sequencer.c:526
 #, c-format
 msgid "%s: cannot parse parent commit %s"
 msgstr "%s: kann Eltern-Commit %s nicht parsen"
 
-#: sequencer.c:525
+#: sequencer.c:530
 #, c-format
 msgid "Cannot get commit message for %s"
 msgstr "Kann keine Commit-Beschreibung für %s bekommen"
 
-#: sequencer.c:611
+#: sequencer.c:616
 #, c-format
 msgid "could not revert %s... %s"
-msgstr "Konnte \"revert\" nicht auf %s ausführen... %s"
+msgstr "Konnte \"revert\" nicht auf %s... (%s) ausführen"
 
-#: sequencer.c:612
+#: sequencer.c:617
 #, c-format
 msgid "could not apply %s... %s"
-msgstr "Konnte %s nicht anwenden... %s"
+msgstr "Konnte %s... (%s) nicht anwenden"
 
-#: sequencer.c:648
+#: sequencer.c:653
 msgid "empty commit set passed"
 msgstr "leere Menge von Commits übergeben"
 
-#: sequencer.c:656
+#: sequencer.c:661
 #, c-format
 msgid "git %s: failed to read the index"
 msgstr "git %s: Fehler beim Lesen der Staging-Area"
 
-#: sequencer.c:660
+#: sequencer.c:665
 #, c-format
 msgid "git %s: failed to refresh the index"
 msgstr "git %s: Fehler beim Aktualisieren der Staging-Area"
 
-#: sequencer.c:720
+#: sequencer.c:725
 #, c-format
 msgid "Cannot %s during a %s"
 msgstr "Kann %s nicht während eines %s durchführen"
 
-#: sequencer.c:742
+#: sequencer.c:747
 #, c-format
 msgid "Could not parse line %d."
 msgstr "Konnte Zeile %d nicht parsen."
 
-#: sequencer.c:747
+#: sequencer.c:752
 msgid "No commits parsed."
 msgstr "Keine Commits geparst."
 
-#: sequencer.c:760
+#: sequencer.c:765
 #, c-format
 msgid "Could not open %s"
 msgstr "Konnte %s nicht öffnen"
 
-#: sequencer.c:764
+#: sequencer.c:769
 #, c-format
 msgid "Could not read %s."
 msgstr "Konnte %s nicht lesen."
 
-#: sequencer.c:771
+#: sequencer.c:776
 #, c-format
 msgid "Unusable instruction sheet: %s"
 msgstr "Unbenutzbares Instruktionsblatt: %s"
 
-#: sequencer.c:801
+#: sequencer.c:806
 #, c-format
 msgid "Invalid key: %s"
 msgstr "Ungültiger Schlüssel: %s"
 
-#: sequencer.c:804
+#: sequencer.c:809
 #, c-format
 msgid "Invalid value for %s: %s"
 msgstr "Ungültiger Wert für %s: %s"
 
-#: sequencer.c:816
+#: sequencer.c:821
 #, c-format
 msgid "Malformed options sheet: %s"
 msgstr "Fehlerhaftes Optionsblatt: %s"
 
-#: sequencer.c:837
+#: sequencer.c:842
 msgid "a cherry-pick or revert is already in progress"
 msgstr "\"cherry-pick\" oder \"revert\" ist bereits im Gang"
 
-#: sequencer.c:838
+#: sequencer.c:843
 msgid "try \"git cherry-pick (--continue | --quit | --abort)\""
 msgstr "versuchen Sie \"git cherry-pick (--continue | --quit | --abort)\""
 
-#: sequencer.c:842
+#: sequencer.c:847
 #, c-format
 msgid "Could not create sequencer directory %s"
 msgstr "Konnte \"sequencer\"-Verzeichnis %s nicht erstellen"
 
-#: sequencer.c:858 sequencer.c:943
+#: sequencer.c:863 sequencer.c:948
 #, c-format
 msgid "Error wrapping up %s."
 msgstr "Fehler beim Einpacken von %s."
 
-#: sequencer.c:877 sequencer.c:1013
+#: sequencer.c:882 sequencer.c:1018
 msgid "no cherry-pick or revert in progress"
 msgstr "kein \"cherry-pick\" oder \"revert\" im Gang"
 
-#: sequencer.c:879
+#: sequencer.c:884
 msgid "cannot resolve HEAD"
 msgstr "kann HEAD nicht auflösen"
 
-#: sequencer.c:881
+#: sequencer.c:886
 msgid "cannot abort from a branch yet to be born"
 msgstr "kann nicht abbrechen: bin auf einem Branch, der noch geboren wird"
 
-#: sequencer.c:903 builtin/apply.c:4128
+#: sequencer.c:908 builtin/apply.c:4288
 #, c-format
 msgid "cannot open %s: %s"
 msgstr "Kann %s nicht öffnen: %s"
 
-#: sequencer.c:906
+#: sequencer.c:911
 #, c-format
 msgid "cannot read %s: %s"
 msgstr "Kann %s nicht lesen: %s"
 
-#: sequencer.c:907
+#: sequencer.c:912
 msgid "unexpected end of file"
 msgstr "Unerwartetes Dateiende"
 
-#: sequencer.c:913
+#: sequencer.c:918
 #, c-format
 msgid "stored pre-cherry-pick HEAD file '%s' is corrupt"
 msgstr "gespeicherte \"pre-cherry-pick\" HEAD Datei '%s' ist beschädigt"
 
-#: sequencer.c:936
+#: sequencer.c:941
 #, c-format
 msgid "Could not format %s."
 msgstr "Konnte %s nicht formatieren."
 
-#: sequencer.c:1081
+#: sequencer.c:1086
 #, c-format
 msgid "%s: can't cherry-pick a %s"
 msgstr "%s: %s kann nicht in \"cherry-pick\" benutzt werden"
 
-#: sequencer.c:1084
+#: sequencer.c:1089
 #, c-format
 msgid "%s: bad revision"
 msgstr "%s: ungültiger Commit"
 
-#: sequencer.c:1118
+#: sequencer.c:1123
 msgid "Can't revert as initial commit"
 msgstr "Kann nicht als allerersten Commit einen Revert ausführen."
 
-#: sequencer.c:1119
+#: sequencer.c:1124
 msgid "Can't cherry-pick into empty head"
 msgstr "Kann nicht als allerersten Commit einen Cherry-Pick ausführen."
 
 #: sha1_name.c:440
 msgid ""
 "Git normally never creates a ref that ends with 40 hex characters\n"
@@ -1474,44 +1483,44 @@
 msgstr "Konnte Eintrag '%s' nicht aus .gitmodules entfernen"
 
 #: submodule.c:120
 msgid "staging updated .gitmodules failed"
 msgstr "Konnte aktualisierte .gitmodules-Datei nicht zum Commit vormerken"
 
-#: submodule.c:1111 builtin/init-db.c:371
+#: submodule.c:1109 builtin/init-db.c:371
 #, c-format
 msgid "Could not create git link %s"
 msgstr "Konnte git-Verweis %s nicht erstellen"
 
-#: submodule.c:1122
+#: submodule.c:1120
 #, c-format
 msgid "Could not set core.worktree in %s"
 msgstr "Konnte core.worktree in '%s' nicht setzen."
 
-#: trailer.c:500 trailer.c:504 trailer.c:508 trailer.c:562 trailer.c:566
-#: trailer.c:570
+#: trailer.c:491 trailer.c:495 trailer.c:499 trailer.c:553 trailer.c:557
+#: trailer.c:561
 #, c-format
 msgid "unknown value '%s' for key '%s'"
 msgstr "unbekannter Wert '%s' für Schlüssel %s"
 
-#: trailer.c:552 trailer.c:557 builtin/remote.c:290
+#: trailer.c:543 trailer.c:548 builtin/remote.c:290
 #, c-format
 msgid "more than one %s"
 msgstr "mehr als ein %s"
 
-#: trailer.c:590
+#: trailer.c:581
 #, c-format
 msgid "empty trailer token in trailer '%.*s'"
 msgstr "leerer Anhang-Token in Anhang '%.*s'"
 
-#: trailer.c:710
+#: trailer.c:701
 #, c-format
 msgid "could not read input file '%s'"
 msgstr "Konnte Eingabe-Datei '%s' nicht lesen"
 
-#: trailer.c:713
+#: trailer.c:704
 msgid "could not read from stdin"
 msgstr "konnte nicht von der Standard-Eingabe lesen"
 
 #: unpack-trees.c:202
 msgid "Checking out files"
 msgstr "Checke Dateien aus"
@@ -1542,32 +1551,32 @@
 msgstr "ungültige Portnummer"
 
 #: urlmatch.c:322
 msgid "invalid '..' path segment"
 msgstr "ungültiges '..' Pfadsegment"
 
-#: wrapper.c:509
+#: wrapper.c:523
 #, c-format
 msgid "unable to access '%s': %s"
 msgstr "konnte nicht auf '%s' zugreifen: %s"
 
-#: wrapper.c:530
+#: wrapper.c:544
 #, c-format
 msgid "unable to access '%s'"
 msgstr "konnte nicht auf '%s' zugreifen"
 
-#: wrapper.c:541
+#: wrapper.c:555
 #, c-format
 msgid "unable to look up current user in the passwd file: %s"
 msgstr "konnte aktuellen Benutzer nicht in Passwort-Datei finden: %s"
 
-#: wrapper.c:542
+#: wrapper.c:556
 msgid "no such user"
 msgstr "kein solcher Benutzer"
 
-#: wrapper.c:550
+#: wrapper.c:564
 msgid "unable to get current working directory"
 msgstr "Konnte aktuelles Arbeitsverzeichnis nicht bekommen."
 
 #: wt-status.c:150
 msgid "Unmerged paths:"
 msgstr "Nicht zusammengeführte Pfade:"
@@ -1598,17 +1607,17 @@
 
 #: wt-status.c:187
 msgid "  (use \"git rm <file>...\" to mark resolution)"
 msgstr ""
 "  (benutzen Sie \"git add/rm <Datei>...\", um die Auflösung zu markieren)"
 
-#: wt-status.c:198
+#: wt-status.c:198 wt-status.c:878
 msgid "Changes to be committed:"
 msgstr "zum Commit vorgemerkte Änderungen:"
 
-#: wt-status.c:216
+#: wt-status.c:216 wt-status.c:887
 msgid "Changes not staged for commit:"
 msgstr "Änderungen, die nicht zum Commit vorgemerkt sind:"
 
 #: wt-status.c:220
 msgid "  (use \"git add <file>...\" to update what will be committed)"
 msgstr ""
@@ -1720,332 +1729,332 @@
 
 #: wt-status.c:391
 #, c-format
 msgid "bug: unhandled diff status %c"
 msgstr "Fehler: unbehandelter Differenz-Status %c"
 
-#: wt-status.c:758
+#: wt-status.c:753
 msgid "Submodules changed but not updated:"
 msgstr "Submodule geändert, aber nicht aktualisiert:"
 
-#: wt-status.c:760
+#: wt-status.c:755
 msgid "Submodule changes to be committed:"
 msgstr "Änderungen in Submodul zum Committen:"
 
-#: wt-status.c:839
+#: wt-status.c:835
 msgid ""
 "Do not touch the line above.\n"
 "Everything below will be removed."
 msgstr ""
 "Ändern Sie nicht die obige Zeile.\n"
 "Alles unterhalb von ihr wird entfernt."
 
-#: wt-status.c:930
+#: wt-status.c:946
 msgid "You have unmerged paths."
 msgstr "Sie haben nicht zusammengeführte Pfade."
 
-#: wt-status.c:933
+#: wt-status.c:949
 msgid "  (fix conflicts and run \"git commit\")"
 msgstr " (beheben Sie die Konflikte und führen Sie \"git commit\" aus)"
 
-#: wt-status.c:936
+#: wt-status.c:952
 msgid "All conflicts fixed but you are still merging."
 msgstr "Alle Konflikte sind behoben, aber Sie sind immer noch beim Merge."
 
-#: wt-status.c:939
+#: wt-status.c:955
 msgid "  (use \"git commit\" to conclude merge)"
 msgstr "  (benutzen Sie \"git commit\", um den Merge abzuschließen)"
 
-#: wt-status.c:949
+#: wt-status.c:965
 msgid "You are in the middle of an am session."
 msgstr "Eine \"am\"-Sitzung ist im Gange."
 
-#: wt-status.c:952
+#: wt-status.c:968
 msgid "The current patch is empty."
 msgstr "Der aktuelle Patch ist leer."
 
-#: wt-status.c:956
+#: wt-status.c:972
 msgid "  (fix conflicts and then run \"git am --continue\")"
 msgstr ""
 "  (beheben Sie die Konflikte und führen Sie dann \"git am --continue\" aus)"
 
-#: wt-status.c:958
+#: wt-status.c:974
 msgid "  (use \"git am --skip\" to skip this patch)"
 msgstr "  (benutzen Sie \"git am --skip\", um diesen Patch auszulassen)"
 
-#: wt-status.c:960
+#: wt-status.c:976
 msgid "  (use \"git am --abort\" to restore the original branch)"
 msgstr ""
 "  (benutzen Sie \"git am --abort\", um den ursprünglichen Branch "
 "wiederherzustellen)"
 
-#: wt-status.c:1020 wt-status.c:1037
+#: wt-status.c:1036 wt-status.c:1053
 #, c-format
 msgid "You are currently rebasing branch '%s' on '%s'."
 msgstr "Sie sind gerade beim Rebase von Branch '%s' auf '%s'."
 
-#: wt-status.c:1025 wt-status.c:1042
+#: wt-status.c:1041 wt-status.c:1058
 msgid "You are currently rebasing."
 msgstr "Sie sind gerade beim Rebase."
 
-#: wt-status.c:1028
+#: wt-status.c:1044
 msgid "  (fix conflicts and then run \"git rebase --continue\")"
 msgstr ""
 "  (beheben Sie die Konflikte und führen Sie dann \"git rebase --continue\" "
 "aus)"
 
-#: wt-status.c:1030
+#: wt-status.c:1046
 msgid "  (use \"git rebase --skip\" to skip this patch)"
 msgstr "  (benutzen Sie \"git rebase --skip\", um diesen Patch auszulassen)"
 
-#: wt-status.c:1032
+#: wt-status.c:1048
 msgid "  (use \"git rebase --abort\" to check out the original branch)"
 msgstr ""
 "  (benutzen Sie \"git rebase --abort\", um den ursprünglichen Branch "
 "auszuchecken)"
 
-#: wt-status.c:1045
+#: wt-status.c:1061
 msgid "  (all conflicts fixed: run \"git rebase --continue\")"
 msgstr "  (alle Konflikte behoben: führen Sie \"git rebase --continue\" aus)"
 
-#: wt-status.c:1049
+#: wt-status.c:1065
 #, c-format
 msgid ""
 "You are currently splitting a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "Sie teilen gerade einen Commit auf, während ein Rebase von Branch '%s' auf "
 "'%s' im Gange ist."
 
-#: wt-status.c:1054
+#: wt-status.c:1070
 msgid "You are currently splitting a commit during a rebase."
 msgstr "Sie teilen gerade einen Commit während eines Rebase auf."
 
-#: wt-status.c:1057
+#: wt-status.c:1073
 msgid "  (Once your working directory is clean, run \"git rebase --continue\")"
 msgstr ""
 "  (Sobald Ihr Arbeitsverzeichnis unverändert ist, führen Sie \"git rebase --"
 "continue\" aus)"
 
-#: wt-status.c:1061
+#: wt-status.c:1077
 #, c-format
 msgid "You are currently editing a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "Sie editieren gerade einen Commit während eines Rebase von Branch '%s' auf "
 "'%s'."
 
-#: wt-status.c:1066
+#: wt-status.c:1082
 msgid "You are currently editing a commit during a rebase."
 msgstr "Sie editieren gerade einen Commit während eines Rebase."
 
-#: wt-status.c:1069
+#: wt-status.c:1085
 msgid "  (use \"git commit --amend\" to amend the current commit)"
 msgstr ""
 "  (benutzen Sie \"git commit --amend\", um den aktuellen Commit "
 "nachzubessern)"
 
-#: wt-status.c:1071
+#: wt-status.c:1087
 msgid ""
 "  (use \"git rebase --continue\" once you are satisfied with your changes)"
 msgstr ""
 "  (benutzen Sie \"git rebase --continue\" sobald Ihre Änderungen "
 "abgeschlossen sind)"
 
-#: wt-status.c:1081
+#: wt-status.c:1097
 #, c-format
 msgid "You are currently cherry-picking commit %s."
 msgstr "Sie führen gerade \"cherry-pick\" von Commit %s aus."
 
-#: wt-status.c:1086
+#: wt-status.c:1102
 msgid "  (fix conflicts and run \"git cherry-pick --continue\")"
 msgstr ""
 "  (beheben Sie die Konflikte und führen Sie dann \"git cherry-pick --continue"
 "\" aus)"
 
-#: wt-status.c:1089
+#: wt-status.c:1105
 msgid "  (all conflicts fixed: run \"git cherry-pick --continue\")"
 msgstr ""
 "  (alle Konflikte behoben: führen Sie \"git cherry-pick --continue\" aus)"
 
-#: wt-status.c:1091
+#: wt-status.c:1107
 msgid "  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)"
 msgstr ""
 "  (benutzen Sie \"git cherry-pick --abort\", um die Cherry-Pick-Operation "
 "abzubrechen)"
 
-#: wt-status.c:1100
+#: wt-status.c:1116
 #, c-format
 msgid "You are currently reverting commit %s."
 msgstr "Sie sind gerade an einem Revert von Commit '%s'."
 
-#: wt-status.c:1105
+#: wt-status.c:1121
 msgid "  (fix conflicts and run \"git revert --continue\")"
 msgstr ""
 "  (beheben Sie die Konflikte und führen Sie dann \"git revert --continue\" "
 "aus)"
 
-#: wt-status.c:1108
+#: wt-status.c:1124
 msgid "  (all conflicts fixed: run \"git revert --continue\")"
 msgstr "  (alle Konflikte behoben: führen Sie \"git revert --continue\" aus)"
 
-#: wt-status.c:1110
+#: wt-status.c:1126
 msgid "  (use \"git revert --abort\" to cancel the revert operation)"
 msgstr ""
 "  (benutzen Sie \"git revert --abort\", um die Revert-Operation abzubrechen)"
 
-#: wt-status.c:1121
+#: wt-status.c:1137
 #, c-format
 msgid "You are currently bisecting, started from branch '%s'."
 msgstr "Sie sind gerade bei einer binären Suche, gestartet von Branch '%s'."
 
-#: wt-status.c:1125
+#: wt-status.c:1141
 msgid "You are currently bisecting."
 msgstr "Sie sind gerade bei einer binären Suche."
 
-#: wt-status.c:1128
+#: wt-status.c:1144
 msgid "  (use \"git bisect reset\" to get back to the original branch)"
 msgstr ""
 "  (benutzen Sie \"git bisect reset\", um zum ursprünglichen Branch "
 "zurückzukehren)"
 
-#: wt-status.c:1303
+#: wt-status.c:1321
 msgid "On branch "
 msgstr "Auf Branch "
 
-#: wt-status.c:1310
+#: wt-status.c:1328
 msgid "rebase in progress; onto "
 msgstr "Rebase im Gange; auf "
 
-#: wt-status.c:1317
+#: wt-status.c:1333
 msgid "HEAD detached at "
 msgstr "HEAD losgelöst bei "
 
-#: wt-status.c:1319
+#: wt-status.c:1335
 msgid "HEAD detached from "
 msgstr "HEAD losgelöst von "
 
-#: wt-status.c:1322
+#: wt-status.c:1338
 msgid "Not currently on any branch."
 msgstr "Im Moment auf keinem Branch."
 
-#: wt-status.c:1339
+#: wt-status.c:1355
 msgid "Initial commit"
 msgstr "Initialer Commit"
 
-#: wt-status.c:1353
+#: wt-status.c:1369
 msgid "Untracked files"
 msgstr "Unversionierte Dateien"
 
-#: wt-status.c:1355
+#: wt-status.c:1371
 msgid "Ignored files"
 msgstr "Ignorierte Dateien"
 
-#: wt-status.c:1359
+#: wt-status.c:1375
 #, c-format
 msgid ""
 "It took %.2f seconds to enumerate untracked files. 'status -uno'\n"
 "may speed it up, but you have to be careful not to forget to add\n"
 "new files yourself (see 'git help status')."
 msgstr ""
 "Es dauerte %.2f Sekunden die unversionierten Dateien zu bestimmen.\n"
 "'status -uno' könnte das beschleunigen, aber Sie müssen darauf achten,\n"
 "neue Dateien selbstständig hinzuzufügen (siehe 'git help status')."
 
-#: wt-status.c:1365
+#: wt-status.c:1381
 #, c-format
 msgid "Untracked files not listed%s"
 msgstr "Unversionierte Dateien nicht aufgelistet%s"
 
-#: wt-status.c:1367
+#: wt-status.c:1383
 msgid " (use -u option to show untracked files)"
 msgstr " (benutzen Sie die Option -u, um unversionierte Dateien anzuzeigen)"
 
-#: wt-status.c:1373
+#: wt-status.c:1389
 msgid "No changes"
 msgstr "Keine Änderungen"
 
-#: wt-status.c:1378
+#: wt-status.c:1394
 #, c-format
 msgid "no changes added to commit (use \"git add\" and/or \"git commit -a\")\n"
 msgstr ""
 "keine Änderungen zum Commit vorgemerkt (benutzen Sie \"git add\" und/oder "
 "\"git commit -a\")\n"
 
-#: wt-status.c:1381
+#: wt-status.c:1397
 #, c-format
 msgid "no changes added to commit\n"
 msgstr "keine Änderungen zum Commit vorgemerkt\n"
 
-#: wt-status.c:1384
+#: wt-status.c:1400
 #, c-format
 msgid ""
 "nothing added to commit but untracked files present (use \"git add\" to "
 "track)\n"
 msgstr ""
 "nichts zum Commit vorgemerkt, aber es gibt unversionierte Dateien (benutzen "
 "Sie \"git add\" zum Versionieren)\n"
 
-#: wt-status.c:1387
+#: wt-status.c:1403
 #, c-format
 msgid "nothing added to commit but untracked files present\n"
 msgstr "nichts zum Commit vorgemerkt, aber es gibt unversionierte Dateien\n"
 
-#: wt-status.c:1390
+#: wt-status.c:1406
 #, c-format
 msgid "nothing to commit (create/copy files and use \"git add\" to track)\n"
 msgstr ""
 "nichts zu committen (Erstellen/Kopieren Sie Dateien und benutzen Sie \"git "
 "add\" zum Versionieren)\n"
 
-#: wt-status.c:1393 wt-status.c:1398
+#: wt-status.c:1409 wt-status.c:1414
 #, c-format
 msgid "nothing to commit\n"
 msgstr "nichts zu committen\n"
 
-#: wt-status.c:1396
+#: wt-status.c:1412
 #, c-format
 msgid "nothing to commit (use -u to show untracked files)\n"
 msgstr ""
 "nichts zu committen (benutzen Sie die Option -u, um unversionierte Dateien "
 "anzuzeigen)\n"
 
-#: wt-status.c:1400
+#: wt-status.c:1416
 #, c-format
 msgid "nothing to commit, working directory clean\n"
 msgstr "nichts zu committen, Arbeitsverzeichnis unverändert\n"
 
-#: wt-status.c:1509
+#: wt-status.c:1525
 msgid "HEAD (no branch)"
 msgstr "HEAD (kein Branch)"
 
-#: wt-status.c:1515
+#: wt-status.c:1531
 msgid "Initial commit on "
 msgstr "Initialer Commit auf "
 
-#: wt-status.c:1547
+#: wt-status.c:1563
 msgid "gone"
 msgstr "entfernt"
 
-#: wt-status.c:1549 wt-status.c:1557
+#: wt-status.c:1565 wt-status.c:1573
 msgid "behind "
 msgstr "hinterher "
 
 #: compat/precompose_utf8.c:55 builtin/clone.c:360
 #, c-format
 msgid "failed to unlink '%s'"
 msgstr "Konnte '%s' nicht entfernen."
 
 #: builtin/add.c:22
-msgid "git add [options] [--] <pathspec>..."
-msgstr "git add [Optionen] [--] [<Pfadspezifikation>...]"
+msgid "git add [<options>] [--] <pathspec>..."
+msgstr "git add [<Optionen>] [--] <Pfadspezifikation>..."
 
 #: builtin/add.c:65
 #, c-format
 msgid "unexpected diff status %c"
 msgstr "unerwarteter Differenz-Status %c"
 
-#: builtin/add.c:70 builtin/commit.c:275
+#: builtin/add.c:70 builtin/commit.c:277
 msgid "updating files failed"
 msgstr "Aktualisierung der Dateien fehlgeschlagen"
 
 #: builtin/add.c:80
 #, c-format
 msgid "remove '%s'\n"
@@ -2086,20 +2095,20 @@
 #: builtin/add.c:231
 msgid "The following paths are ignored by one of your .gitignore files:\n"
 msgstr ""
 "Die folgenden Pfade werden durch eine Ihrer \".gitignore\" Dateien "
 "ignoriert:\n"
 
-#: builtin/add.c:248 builtin/clean.c:875 builtin/fetch.c:108 builtin/mv.c:110
-#: builtin/prune-packed.c:55 builtin/push.c:499 builtin/remote.c:1372
+#: builtin/add.c:248 builtin/clean.c:876 builtin/fetch.c:107 builtin/mv.c:110
+#: builtin/prune-packed.c:55 builtin/push.c:508 builtin/remote.c:1372
 #: builtin/rm.c:269
 msgid "dry run"
 msgstr "Probelauf"
 
-#: builtin/add.c:249 builtin/apply.c:4415 builtin/check-ignore.c:19
-#: builtin/commit.c:1326 builtin/count-objects.c:63 builtin/fsck.c:608
+#: builtin/add.c:249 builtin/apply.c:4577 builtin/check-ignore.c:19
+#: builtin/commit.c:1322 builtin/count-objects.c:63 builtin/fsck.c:608
 #: builtin/log.c:1617 builtin/mv.c:109 builtin/read-tree.c:114
 msgid "be verbose"
 msgstr "erweiterte Ausgaben"
 
 #: builtin/add.c:251
 msgid "interactive picking"
@@ -2173,85 +2182,85 @@
 
 #: builtin/add.c:358
 #, c-format
 msgid "Maybe you wanted to say 'git add .'?\n"
 msgstr "Wollten Sie vielleicht 'git add .' sagen?\n"
 
-#: builtin/add.c:363 builtin/check-ignore.c:172 builtin/clean.c:919
-#: builtin/commit.c:333 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:299
+#: builtin/add.c:363 builtin/check-ignore.c:172 builtin/clean.c:920
+#: builtin/commit.c:335 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:299
 msgid "index file corrupt"
 msgstr "Staging-Area-Datei beschädigt"
 
-#: builtin/add.c:446 builtin/apply.c:4510 builtin/mv.c:279 builtin/rm.c:431
+#: builtin/add.c:446 builtin/apply.c:4675 builtin/mv.c:279 builtin/rm.c:431
 msgid "Unable to write new index file"
 msgstr "Konnte neue Staging-Area-Datei nicht schreiben."
 
-#: builtin/apply.c:58
-msgid "git apply [options] [<patch>...]"
-msgstr "git apply [Optionen] [<Patch>...]"
+#: builtin/apply.c:59
+msgid "git apply [<options>] [<patch>...]"
+msgstr "git apply [<Optionen>] [<Patch>...]"
 
-#: builtin/apply.c:111
+#: builtin/apply.c:112
 #, c-format
 msgid "unrecognized whitespace option '%s'"
 msgstr "nicht erkannte Whitespace-Option: '%s'"
 
-#: builtin/apply.c:126
+#: builtin/apply.c:127
 #, c-format
 msgid "unrecognized whitespace ignore option '%s'"
 msgstr "nicht erkannte Option zum Ignorieren von Whitespace: '%s'"
 
-#: builtin/apply.c:826
+#: builtin/apply.c:822
 #, c-format
 msgid "Cannot prepare timestamp regexp %s"
 msgstr "Kann regulären Ausdruck für Zeitstempel %s nicht verarbeiten"
 
-#: builtin/apply.c:835
+#: builtin/apply.c:831
 #, c-format
 msgid "regexec returned %d for input: %s"
 msgstr "Ausführung des regulären Ausdrucks gab %d zurück. Eingabe: %s"
 
-#: builtin/apply.c:916
+#: builtin/apply.c:912
 #, c-format
 msgid "unable to find filename in patch at line %d"
 msgstr "Konnte keinen Dateinamen in Zeile %d des Patches finden."
 
-#: builtin/apply.c:948
+#: builtin/apply.c:944
 #, c-format
 msgid "git apply: bad git-diff - expected /dev/null, got %s on line %d"
 msgstr ""
 "git apply: ungültiges 'git-diff' - erwartete /dev/null, erhielt %s in Zeile "
 "%d"
 
-#: builtin/apply.c:952
+#: builtin/apply.c:948
 #, c-format
 msgid "git apply: bad git-diff - inconsistent new filename on line %d"
 msgstr ""
 "git apply: ungültiges 'git-diff' - Inkonsistenter neuer Dateiname in Zeile %d"
 
-#: builtin/apply.c:953
+#: builtin/apply.c:949
 #, c-format
 msgid "git apply: bad git-diff - inconsistent old filename on line %d"
 msgstr ""
 "git apply: ungültiges 'git-diff' - Inkonsistenter alter Dateiname in Zeile %d"
 
-#: builtin/apply.c:960
+#: builtin/apply.c:956
 #, c-format
 msgid "git apply: bad git-diff - expected /dev/null on line %d"
 msgstr "git apply: ungültiges 'git-diff' - erwartete /dev/null in Zeile %d"
 
-#: builtin/apply.c:1423
+#: builtin/apply.c:1419
 #, c-format
 msgid "recount: unexpected line: %.*s"
 msgstr "recount: unerwartete Zeile: %.*s"
 
-#: builtin/apply.c:1480
+#: builtin/apply.c:1476
 #, c-format
 msgid "patch fragment without header at line %d: %.*s"
 msgstr "Patch-Fragment ohne Kopfbereich bei Zeile %d: %.*s"
 
-#: builtin/apply.c:1497
+#: builtin/apply.c:1493
 #, c-format
 msgid ""
 "git diff header lacks filename information when removing %d leading pathname "
 "component (line %d)"
 msgid_plural ""
 "git diff header lacks filename information when removing %d leading pathname "
@@ -2260,421 +2269,441 @@
 "Dem Kopfbereich von \"git diff\" fehlen Informationen zum Dateinamen, wenn "
 "%d vorangestellter Teil des Pfades entfernt wird (Zeile %d)"
 msgstr[1] ""
 "Dem Kopfbereich von \"git diff\" fehlen Informationen zum Dateinamen, wenn "
 "%d vorangestellte Teile des Pfades entfernt werden (Zeile %d)"
 
-#: builtin/apply.c:1657
+#: builtin/apply.c:1656
 msgid "new file depends on old contents"
 msgstr "neue Datei hängt von alten Inhalten ab"
 
-#: builtin/apply.c:1659
+#: builtin/apply.c:1658
 msgid "deleted file still has contents"
 msgstr "entfernte Datei hat noch Inhalte"
 
-#: builtin/apply.c:1685
+#: builtin/apply.c:1684
 #, c-format
 msgid "corrupt patch at line %d"
 msgstr "fehlerhafter Patch bei Zeile %d"
 
-#: builtin/apply.c:1721
+#: builtin/apply.c:1720
 #, c-format
 msgid "new file %s depends on old contents"
 msgstr "neue Datei %s hängt von alten Inhalten ab"
 
-#: builtin/apply.c:1723
+#: builtin/apply.c:1722
 #, c-format
 msgid "deleted file %s still has contents"
 msgstr "entfernte Datei %s hat noch Inhalte"
 
-#: builtin/apply.c:1726
+#: builtin/apply.c:1725
 #, c-format
 msgid "** warning: file %s becomes empty but is not deleted"
 msgstr "** Warnung: Datei %s wird leer, aber nicht entfernt."
 
-#: builtin/apply.c:1872
+#: builtin/apply.c:1871
 #, c-format
 msgid "corrupt binary patch at line %d: %.*s"
 msgstr "fehlerhafter Binär-Patch bei Zeile %d: %.*s"
 
-#: builtin/apply.c:1901
+#: builtin/apply.c:1900
 #, c-format
 msgid "unrecognized binary patch at line %d"
 msgstr "nicht erkannter Binär-Patch bei Zeile %d"
 
-#: builtin/apply.c:2052
+#: builtin/apply.c:2051
 #, c-format
 msgid "patch with only garbage at line %d"
 msgstr "Patch mit nutzlosen Informationen bei Zeile %d"
 
-#: builtin/apply.c:2142
+#: builtin/apply.c:2141
 #, c-format
 msgid "unable to read symlink %s"
-msgstr "konnte symbolischen Verweis %s nicht lesen"
+msgstr "konnte symbolische Verknüpfung %s nicht lesen"
 
-#: builtin/apply.c:2146
+#: builtin/apply.c:2145
 #, c-format
 msgid "unable to open or read %s"
 msgstr "konnte %s nicht öffnen oder lesen"
 
-#: builtin/apply.c:2754
+#: builtin/apply.c:2778
 #, c-format
 msgid "invalid start of line: '%c'"
 msgstr "Ungültiger Zeilenanfang: '%c'"
 
-#: builtin/apply.c:2872
+#: builtin/apply.c:2897
 #, c-format
 msgid "Hunk #%d succeeded at %d (offset %d line)."
 msgid_plural "Hunk #%d succeeded at %d (offset %d lines)."
 msgstr[0] "Patch-Bereich #%d erfolgreich angewendet bei %d (%d Zeile versetzt)"
 msgstr[1] ""
 "Patch-Bereich #%d erfolgreich angewendet bei %d (%d Zeilen versetzt)"
 
-#: builtin/apply.c:2884
+#: builtin/apply.c:2909
 #, c-format
 msgid "Context reduced to (%ld/%ld) to apply fragment at %d"
 msgstr "Kontext reduziert zu (%ld/%ld), um Patch-Bereich bei %d anzuwenden"
 
-#: builtin/apply.c:2890
+#: builtin/apply.c:2915
 #, c-format
 msgid ""
 "while searching for:\n"
 "%.*s"
 msgstr ""
 "bei der Suche nach:\n"
 "%.*s"
 
-#: builtin/apply.c:2909
+#: builtin/apply.c:2935
 #, c-format
 msgid "missing binary patch data for '%s'"
 msgstr "keine Daten in Binär-Patch für '%s'"
 
-#: builtin/apply.c:3010
+#: builtin/apply.c:3036
 #, c-format
 msgid "binary patch does not apply to '%s'"
 msgstr "Konnte Binär-Patch nicht auf '%s' anwenden"
 
-#: builtin/apply.c:3016
+#: builtin/apply.c:3042
 #, c-format
 msgid "binary patch to '%s' creates incorrect result (expecting %s, got %s)"
 msgstr ""
 "Binär-Patch für '%s' erzeugt falsches Ergebnis (erwartete %s, bekam %s)"
 
-#: builtin/apply.c:3037
+#: builtin/apply.c:3063
 #, c-format
 msgid "patch failed: %s:%ld"
 msgstr "Anwendung des Patches fehlgeschlagen: %s:%ld"
 
-#: builtin/apply.c:3161
+#: builtin/apply.c:3187
 #, c-format
 msgid "cannot checkout %s"
 msgstr "kann %s nicht auschecken"
 
-#: builtin/apply.c:3206 builtin/apply.c:3215 builtin/apply.c:3260
+#: builtin/apply.c:3232 builtin/apply.c:3243 builtin/apply.c:3288
 #, c-format
 msgid "read of %s failed"
 msgstr "Konnte %s nicht lesen"
 
-#: builtin/apply.c:3240 builtin/apply.c:3462
+#: builtin/apply.c:3240
+#, c-format
+msgid "reading from '%s' beyond a symbolic link"
+msgstr "'%s' ist hinter einer symbolischen Verknüpfung"
+
+#: builtin/apply.c:3268 builtin/apply.c:3490
 #, c-format
 msgid "path %s has been renamed/deleted"
 msgstr "Pfad %s wurde umbenannt/gelöscht"
 
-#: builtin/apply.c:3321 builtin/apply.c:3476
+#: builtin/apply.c:3349 builtin/apply.c:3504
 #, c-format
 msgid "%s: does not exist in index"
 msgstr "%s ist nicht in der Staging-Area"
 
-#: builtin/apply.c:3325 builtin/apply.c:3468 builtin/apply.c:3490
+#: builtin/apply.c:3353 builtin/apply.c:3496 builtin/apply.c:3518
 #, c-format
 msgid "%s: %s"
 msgstr "%s: %s"
 
-#: builtin/apply.c:3330 builtin/apply.c:3484
+#: builtin/apply.c:3358 builtin/apply.c:3512
 #, c-format
 msgid "%s: does not match index"
 msgstr "%s entspricht nicht der Version in der Staging-Area"
 
-#: builtin/apply.c:3432
+#: builtin/apply.c:3460
 msgid "removal patch leaves file contents"
 msgstr "Lösch-Patch hinterlässt Dateiinhalte"
 
-#: builtin/apply.c:3501
+#: builtin/apply.c:3529
 #, c-format
 msgid "%s: wrong type"
 msgstr "%s: falscher Typ"
 
-#: builtin/apply.c:3503
+#: builtin/apply.c:3531
 #, c-format
 msgid "%s has type %o, expected %o"
 msgstr "%s ist vom Typ %o, erwartete %o"
 
-#: builtin/apply.c:3604
+#: builtin/apply.c:3690 builtin/apply.c:3692
+#, c-format
+msgid "invalid path '%s'"
+msgstr "Ungültiger Pfad '%s'"
+
+#: builtin/apply.c:3747
 #, c-format
 msgid "%s: already exists in index"
 msgstr "%s ist bereits bereitgestellt"
 
-#: builtin/apply.c:3607
+#: builtin/apply.c:3750
 #, c-format
 msgid "%s: already exists in working directory"
 msgstr "%s existiert bereits im Arbeitsverzeichnis"
 
-#: builtin/apply.c:3627
+#: builtin/apply.c:3770
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o)"
 msgstr "neuer Modus (%o) von %s entspricht nicht dem alten Modus (%o)"
 
-#: builtin/apply.c:3632
+#: builtin/apply.c:3775
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o) of %s"
 msgstr "neuer Modus (%o) von %s entspricht nicht dem alten Modus (%o) von %s"
 
-#: builtin/apply.c:3640
+#: builtin/apply.c:3795
+#, c-format
+msgid "affected file '%s' is beyond a symbolic link"
+msgstr "betroffene Datei '%s' ist hinter einer symbolischen Verknüpfung"
+
+#: builtin/apply.c:3799
 #, c-format
 msgid "%s: patch does not apply"
 msgstr "%s: Patch konnte nicht angewendet werden"
 
-#: builtin/apply.c:3653
+#: builtin/apply.c:3813
 #, c-format
 msgid "Checking patch %s..."
-msgstr "Prüfe Patch %s..."
+msgstr "Prüfe Patch %s ..."
 
-#: builtin/apply.c:3746 builtin/checkout.c:231 builtin/reset.c:135
+#: builtin/apply.c:3906 builtin/checkout.c:231 builtin/reset.c:135
 #, c-format
 msgid "make_cache_entry failed for path '%s'"
 msgstr "make_cache_entry für Pfad '%s' fehlgeschlagen"
 
-#: builtin/apply.c:3889
+#: builtin/apply.c:4049
 #, c-format
 msgid "unable to remove %s from index"
 msgstr "konnte %s nicht aus der Staging-Area entfernen"
 
-#: builtin/apply.c:3918
+#: builtin/apply.c:4078
 #, c-format
 msgid "corrupt patch for submodule %s"
 msgstr "fehlerhafter Patch für Submodul %s"
 
-#: builtin/apply.c:3922
+#: builtin/apply.c:4082
 #, c-format
 msgid "unable to stat newly created file '%s'"
 msgstr "konnte neu erstellte Datei '%s' nicht lesen"
 
-#: builtin/apply.c:3927
+#: builtin/apply.c:4087
 #, c-format
 msgid "unable to create backing store for newly created file %s"
 msgstr "kann internen Speicher für eben erstellte Datei %s nicht erzeugen"
 
-#: builtin/apply.c:3930 builtin/apply.c:4038
+#: builtin/apply.c:4090 builtin/apply.c:4198
 #, c-format
 msgid "unable to add cache entry for %s"
 msgstr "kann für %s keinen Eintrag in den Zwischenspeicher hinzufügen"
 
-#: builtin/apply.c:3963
+#: builtin/apply.c:4123
 #, c-format
 msgid "closing file '%s'"
 msgstr "schließe Datei '%s'"
 
-#: builtin/apply.c:4012
+#: builtin/apply.c:4172
 #, c-format
 msgid "unable to write file '%s' mode %o"
 msgstr "konnte Datei '%s' mit Modus %o nicht schreiben"
 
-#: builtin/apply.c:4099
+#: builtin/apply.c:4259
 #, c-format
 msgid "Applied patch %s cleanly."
 msgstr "Patch %s sauber angewendet"
 
-#: builtin/apply.c:4107
+#: builtin/apply.c:4267
 msgid "internal error"
 msgstr "interner Fehler"
 
-#: builtin/apply.c:4110
+#: builtin/apply.c:4270
 #, c-format
 msgid "Applying patch %%s with %d reject..."
 msgid_plural "Applying patch %%s with %d rejects..."
 msgstr[0] "Wende Patch %%s mit %d Zurückweisung an..."
 msgstr[1] "Wende Patch %%s mit %d Zurückweisungen an..."
 
-#: builtin/apply.c:4120
+#: builtin/apply.c:4280
 #, c-format
 msgid "truncating .rej filename to %.*s.rej"
 msgstr "Verkürze Name von .rej Datei zu %.*s.rej"
 
-#: builtin/apply.c:4141
+#: builtin/apply.c:4301
 #, c-format
 msgid "Hunk #%d applied cleanly."
 msgstr "Patch-Bereich #%d sauber angewendet."
 
-#: builtin/apply.c:4144
+#: builtin/apply.c:4304
 #, c-format
 msgid "Rejected hunk #%d."
 msgstr "Patch-Block #%d zurückgewiesen."
 
-#: builtin/apply.c:4234
+#: builtin/apply.c:4394
 msgid "unrecognized input"
 msgstr "nicht erkannte Eingabe"
 
-#: builtin/apply.c:4245
+#: builtin/apply.c:4405
 msgid "unable to read index file"
 msgstr "Konnte Staging-Area-Datei nicht lesen"
 
-#: builtin/apply.c:4362 builtin/apply.c:4365 builtin/clone.c:92
-#: builtin/fetch.c:93
+#: builtin/apply.c:4522 builtin/apply.c:4525 builtin/clone.c:92
+#: builtin/fetch.c:92
 msgid "path"
 msgstr "Pfad"
 
-#: builtin/apply.c:4363
+#: builtin/apply.c:4523
 msgid "don't apply changes matching the given path"
 msgstr "keine Änderungen im angegebenen Pfad anwenden"
 
-#: builtin/apply.c:4366
+#: builtin/apply.c:4526
 msgid "apply changes matching the given path"
 msgstr "Änderungen nur im angegebenen Pfad anwenden"
 
-#: builtin/apply.c:4368
+#: builtin/apply.c:4528
 msgid "num"
 msgstr "Anzahl"
 
-#: builtin/apply.c:4369
+#: builtin/apply.c:4529
 msgid "remove <num> leading slashes from traditional diff paths"
 msgstr ""
 "<Anzahl> vorangestellte Schrägstriche von herkömmlichen Differenzpfaden "
 "entfernen"
 
-#: builtin/apply.c:4372
+#: builtin/apply.c:4532
 msgid "ignore additions made by the patch"
 msgstr "hinzugefügte Zeilen des Patches ignorieren"
 
-#: builtin/apply.c:4374
+#: builtin/apply.c:4534
 msgid "instead of applying the patch, output diffstat for the input"
 msgstr ""
 "anstatt der Anwendung des Patches, den \"diffstat\" für die Eingabe "
 "ausgegeben"
 
-#: builtin/apply.c:4378
+#: builtin/apply.c:4538
 msgid "show number of added and deleted lines in decimal notation"
 msgstr ""
 "die Anzahl von hinzugefügten/entfernten Zeilen in Dezimalnotation anzeigen"
 
-#: builtin/apply.c:4380
+#: builtin/apply.c:4540
 msgid "instead of applying the patch, output a summary for the input"
 msgstr ""
 "anstatt der Anwendung des Patches, eine Zusammenfassung für die Eingabe "
 "ausgeben"
 
-#: builtin/apply.c:4382
+#: builtin/apply.c:4542
 msgid "instead of applying the patch, see if the patch is applicable"
 msgstr ""
 "anstatt der Anwendung des Patches, zeige ob Patch angewendet werden kann"
 
-#: builtin/apply.c:4384
+#: builtin/apply.c:4544
 msgid "make sure the patch is applicable to the current index"
 msgstr ""
 "sicherstellen, dass der Patch in der aktuellen Staging-Area angewendet "
 "werden kann"
 
-#: builtin/apply.c:4386
+#: builtin/apply.c:4546
 msgid "apply a patch without touching the working tree"
 msgstr "Patch anwenden, ohne Änderungen im Arbeitsverzeichnis vorzunehmen"
 
-#: builtin/apply.c:4388
+#: builtin/apply.c:4548
+msgid "accept a patch that touches outside the working area"
+msgstr ""
+"Patch anwenden, der Änderungen außerhalb des Arbeitsverzeichnisses vornimmt"
+
+#: builtin/apply.c:4550
 msgid "also apply the patch (use with --stat/--summary/--check)"
 msgstr "Patch anwenden (Benutzung mit --stat/--summary/--check)"
 
-#: builtin/apply.c:4390
+#: builtin/apply.c:4552
 msgid "attempt three-way merge if a patch does not apply"
 msgstr "versuche 3-Wege-Merge, wenn der Patch nicht angewendet werden konnte"
 
-#: builtin/apply.c:4392
+#: builtin/apply.c:4554
 msgid "build a temporary index based on embedded index information"
 msgstr ""
 "eine temporäre Staging-Area, basierend auf den integrierten Staging-Area-"
 "Informationen, erstellen"
 
-#: builtin/apply.c:4394 builtin/checkout-index.c:198 builtin/ls-files.c:455
+#: builtin/apply.c:4556 builtin/checkout-index.c:198 builtin/ls-files.c:412
 msgid "paths are separated with NUL character"
 msgstr "Pfade sind getrennt durch NUL Zeichen"
 
-#: builtin/apply.c:4397
+#: builtin/apply.c:4559
 msgid "ensure at least <n> lines of context match"
 msgstr ""
 "sicher stellen, dass mindestens <n> Zeilen des Kontextes übereinstimmen"
 
-#: builtin/apply.c:4398
+#: builtin/apply.c:4560
 msgid "action"
 msgstr "Aktion"
 
-#: builtin/apply.c:4399
+#: builtin/apply.c:4561
 msgid "detect new or modified lines that have whitespace errors"
 msgstr "neue oder geänderte Zeilen, die Whitespace-Fehler haben, ermitteln"
 
-#: builtin/apply.c:4402 builtin/apply.c:4405
+#: builtin/apply.c:4564 builtin/apply.c:4567
 msgid "ignore changes in whitespace when finding context"
 msgstr "Änderungen im Whitespace bei der Suche des Kontextes ignorieren"
 
-#: builtin/apply.c:4408
+#: builtin/apply.c:4570
 msgid "apply the patch in reverse"
 msgstr "den Patch in umgekehrter Reihenfolge anwenden"
 
-#: builtin/apply.c:4410
+#: builtin/apply.c:4572
 msgid "don't expect at least one line of context"
 msgstr "keinen Kontext erwarten"
 
-#: builtin/apply.c:4412
+#: builtin/apply.c:4574
 msgid "leave the rejected hunks in corresponding *.rej files"
 msgstr ""
 "zurückgewiesene Patch-Blöcke in entsprechenden *.rej Dateien hinterlassen"
 
-#: builtin/apply.c:4414
+#: builtin/apply.c:4576
 msgid "allow overlapping hunks"
 msgstr "sich überlappende Patch-Blöcke erlauben"
 
-#: builtin/apply.c:4417
+#: builtin/apply.c:4579
 msgid "tolerate incorrectly detected missing new-line at the end of file"
 msgstr "fehlerhaft erkannten fehlenden Zeilenumbruch am Dateiende tolerieren"
 
-#: builtin/apply.c:4420
+#: builtin/apply.c:4582
 msgid "do not trust the line counts in the hunk headers"
 msgstr "den Zeilennummern im Kopf des Patch-Blocks nicht vertrauen"
 
-#: builtin/apply.c:4422
+#: builtin/apply.c:4584
 msgid "root"
 msgstr "Wurzelverzeichnis"
 
-#: builtin/apply.c:4423
+#: builtin/apply.c:4585
 msgid "prepend <root> to all filenames"
 msgstr "<Wurzelverzeichnis> vor alle Dateinamen stellen"
 
-#: builtin/apply.c:4445
+#: builtin/apply.c:4607
 msgid "--3way outside a repository"
 msgstr ""
 "Die Option --3way kann nicht außerhalb eines Repositories verwendet werden."
 
-#: builtin/apply.c:4453
+#: builtin/apply.c:4615
 msgid "--index outside a repository"
 msgstr ""
 "Die Option --index kann nicht außerhalb eines Repositories verwendet werden."
 
-#: builtin/apply.c:4456
+#: builtin/apply.c:4618
 msgid "--cached outside a repository"
 msgstr ""
 "Die Option --cached kann nicht außerhalb eines Repositories verwendet werden."
 
-#: builtin/apply.c:4472
+#: builtin/apply.c:4637
 #, c-format
 msgid "can't open patch '%s'"
 msgstr "kann Patch '%s' nicht öffnen"
 
-#: builtin/apply.c:4486
+#: builtin/apply.c:4651
 #, c-format
 msgid "squelched %d whitespace error"
 msgid_plural "squelched %d whitespace errors"
 msgstr[0] "unterdrückte %d Whitespace-Fehler"
 msgstr[1] "unterdrückte %d Whitespace-Fehler"
 
-#: builtin/apply.c:4492 builtin/apply.c:4502
+#: builtin/apply.c:4657 builtin/apply.c:4667
 #, c-format
 msgid "%d line adds whitespace errors."
 msgid_plural "%d lines add whitespace errors."
 msgstr[0] "%d Zeile fügt Whitespace-Fehler hinzu."
 msgstr[1] "%d Zeilen fügen Whitespace-Fehler hinzu."
 
@@ -2723,139 +2752,139 @@
 
 #: builtin/bisect--helper.c:19
 msgid "update BISECT_HEAD instead of checking out the current commit"
 msgstr "BISECT_HEAD aktualisieren, anstatt den aktuellen Commit auszuchecken"
 
 #: builtin/blame.c:30
-msgid "git blame [options] [rev-opts] [rev] [--] file"
-msgstr "git blame [Optionen] [rev-opts] [rev] [--] Datei"
+msgid "git blame [<options>] [<rev-opts>] [<rev>] [--] file"
+msgstr "git blame [<Optionen>] [<rev-opts>] [<Commit>] [--] Datei"
 
 #: builtin/blame.c:35
-msgid "[rev-opts] are documented in git-rev-list(1)"
-msgstr "[rev-opts] sind dokumentiert in git-rev-list(1)"
+msgid "<rev-opts> are documented in git-rev-list(1)"
+msgstr "<rev-opts> sind dokumentiert in git-rev-list(1)"
 
-#: builtin/blame.c:2501
+#: builtin/blame.c:2500
 msgid "Show blame entries as we find them, incrementally"
 msgstr "\"blame\"-Einträge schrittweise anzeigen, während wir sie generieren"
 
-#: builtin/blame.c:2502
+#: builtin/blame.c:2501
 msgid "Show blank SHA-1 for boundary commits (Default: off)"
 msgstr "leere SHA-1 für Grenz-Commits anzeigen (Standard: aus)"
 
-#: builtin/blame.c:2503
+#: builtin/blame.c:2502
 msgid "Do not treat root commits as boundaries (Default: off)"
 msgstr "Ursprungs-Commit nicht als Grenzen behandeln (Standard: aus)"
 
-#: builtin/blame.c:2504
+#: builtin/blame.c:2503
 msgid "Show work cost statistics"
 msgstr "Statistiken zum Arbeitsaufwand anzeigen"
 
-#: builtin/blame.c:2505
+#: builtin/blame.c:2504
 msgid "Show output score for blame entries"
 msgstr "Ausgabebewertung für \"blame\"-Einträge anzeigen"
 
-#: builtin/blame.c:2506
+#: builtin/blame.c:2505
 msgid "Show original filename (Default: auto)"
 msgstr "ursprünglichen Dateinamen anzeigen (Standard: auto)"
 
-#: builtin/blame.c:2507
+#: builtin/blame.c:2506
 msgid "Show original linenumber (Default: off)"
 msgstr "ursprüngliche Zeilennummer anzeigen (Standard: aus)"
 
-#: builtin/blame.c:2508
+#: builtin/blame.c:2507
 msgid "Show in a format designed for machine consumption"
 msgstr "Anzeige in einem Format für maschinelle Auswertung"
 
-#: builtin/blame.c:2509
+#: builtin/blame.c:2508
 msgid "Show porcelain format with per-line commit information"
 msgstr ""
 "Anzeige in Format für Fremdprogramme mit Commit-Informationen pro Zeile"
 
-#: builtin/blame.c:2510
+#: builtin/blame.c:2509
 msgid "Use the same output mode as git-annotate (Default: off)"
 msgstr ""
 "Den gleichen Ausgabemodus benutzen wie \"git-annotate\" (Standard: aus)"
 
-#: builtin/blame.c:2511
+#: builtin/blame.c:2510
 msgid "Show raw timestamp (Default: off)"
 msgstr "Unbearbeiteten Zeitstempel anzeigen (Standard: aus)"
 
-#: builtin/blame.c:2512
+#: builtin/blame.c:2511
 msgid "Show long commit SHA1 (Default: off)"
 msgstr "Langen Commit-SHA1 anzeigen (Standard: aus)"
 
-#: builtin/blame.c:2513
+#: builtin/blame.c:2512
 msgid "Suppress author name and timestamp (Default: off)"
 msgstr "Den Namen des Autors und den Zeitstempel unterdrücken (Standard: aus)"
 
-#: builtin/blame.c:2514
+#: builtin/blame.c:2513
 msgid "Show author email instead of name (Default: off)"
 msgstr ""
 "Anstatt des Namens die E-Mail-Adresse des Autors anzeigen (Standard: aus)"
 
-#: builtin/blame.c:2515
+#: builtin/blame.c:2514
 msgid "Ignore whitespace differences"
 msgstr "Unterschiede im Whitespace ignorieren"
 
-#: builtin/blame.c:2516
+#: builtin/blame.c:2515
 msgid "Spend extra cycles to find better match"
 msgstr "Länger arbeiten, um bessere Übereinstimmungen zu finden"
 
-#: builtin/blame.c:2517
+#: builtin/blame.c:2516
 msgid "Use revisions from <file> instead of calling git-rev-list"
 msgstr "Commits von <Datei> benutzen, anstatt \"git-rev-list\" aufzurufen"
 
-#: builtin/blame.c:2518
+#: builtin/blame.c:2517
 msgid "Use <file>'s contents as the final image"
 msgstr "Inhalte der <Datei>en als endgültiges Abbild benutzen"
 
-#: builtin/blame.c:2519 builtin/blame.c:2520
+#: builtin/blame.c:2518 builtin/blame.c:2519
 msgid "score"
 msgstr "Bewertung"
 
-#: builtin/blame.c:2519
+#: builtin/blame.c:2518
 msgid "Find line copies within and across files"
 msgstr "kopierte Zeilen innerhalb oder zwischen Dateien finden"
 
-#: builtin/blame.c:2520
+#: builtin/blame.c:2519
 msgid "Find line movements within and across files"
 msgstr "verschobene Zeilen innerhalb oder zwischen Dateien finden"
 
-#: builtin/blame.c:2521
+#: builtin/blame.c:2520
 msgid "n,m"
 msgstr "n,m"
 
-#: builtin/blame.c:2521
+#: builtin/blame.c:2520
 msgid "Process only line range n,m, counting from 1"
 msgstr "nur Zeilen im Bereich n,m verarbeiten, gezählt von 1"
 
 #. TRANSLATORS: This string is used to tell us the maximum
 #. display width for a relative timestamp in "git blame"
 #. output.  For C locale, "4 years, 11 months ago", which
 #. takes 22 places, is the longest among various forms of
 #. relative timestamps, but your language may need more or
 #. fewer display columns.
-#: builtin/blame.c:2602
+#: builtin/blame.c:2601
 msgid "4 years, 11 months ago"
 msgstr "vor 4 Jahren, und 11 Monaten"
 
 #: builtin/branch.c:24
-msgid "git branch [options] [-r | -a] [--merged | --no-merged]"
-msgstr "git branch [Optionen] [-r | -a] [--merged | --no-merged]"
+msgid "git branch [<options>] [-r | -a] [--merged | --no-merged]"
+msgstr "git branch [<Optionen>] [-r | -a] [--merged | --no-merged]"
 
 #: builtin/branch.c:25
-msgid "git branch [options] [-l] [-f] <branchname> [<start-point>]"
-msgstr "git branch [Optionen] [-l] [-f] <Branchname> [<Startpunkt>]"
+msgid "git branch [<options>] [-l] [-f] <branch-name> [<start-point>]"
+msgstr "git branch [<Optionen>] [-l] [-f] <Branchname> [<Startpunkt>]"
 
 #: builtin/branch.c:26
-msgid "git branch [options] [-r] (-d | -D) <branchname>..."
-msgstr "git branch [Optionen] [-r] (-d | -D) <Branchname>..."
+msgid "git branch [<options>] [-r] (-d | -D) <branch-name>..."
+msgstr "git branch [<Optionen>] [-r] (-d | -D) <Branchname>..."
 
 #: builtin/branch.c:27
-msgid "git branch [options] (-m | -M) [<oldbranch>] <newbranch>"
-msgstr "git branch [Optionen] (-m | -M) [<alterBranch>] <neuerBranch>"
+msgid "git branch [<options>] (-m | -M) [<old-branch>] <new-branch>"
+msgstr "git branch [<Optionen>] (-m | -M) [<alter-Branch>] <neuer-Branch>"
 
 #: builtin/branch.c:152
 #, c-format
 msgid ""
 "deleting branch '%s' that has been merged to\n"
 "         '%s', but not yet merged to HEAD."
@@ -2991,274 +3020,279 @@
 
 #: builtin/branch.c:590
 #, c-format
 msgid "(no branch, bisect started on %s)"
 msgstr "(kein Branch, binäre Suche begonnen bei %s)"
 
-#: builtin/branch.c:593
+#: builtin/branch.c:596
 #, c-format
-msgid "(detached from %s)"
-msgstr "(losgelöst von %s)"
+msgid "(HEAD detached at %s)"
+msgstr "(HEAD losgelöst bei %s)"
 
-#: builtin/branch.c:596
+#: builtin/branch.c:599
+#, c-format
+msgid "(HEAD detached from %s)"
+msgstr "(HEAD losgelöst von %s)"
+
+#: builtin/branch.c:603
 msgid "(no branch)"
 msgstr "(kein Branch)"
 
-#: builtin/branch.c:643
+#: builtin/branch.c:650
 #, c-format
 msgid "object '%s' does not point to a commit"
 msgstr "Objekt '%s' zeigt auf keinen Commit"
 
-#: builtin/branch.c:691
+#: builtin/branch.c:698
 msgid "some refs could not be read"
 msgstr "Konnte einige Referenzen nicht lesen"
 
-#: builtin/branch.c:704
+#: builtin/branch.c:711
 msgid "cannot rename the current branch while not on any."
 msgstr ""
 "Kann aktuellen Branch nicht umbenennen, solange Sie sich auf keinem befinden."
 
-#: builtin/branch.c:714
+#: builtin/branch.c:721
 #, c-format
 msgid "Invalid branch name: '%s'"
 msgstr "Ungültiger Branchname: '%s'"
 
-#: builtin/branch.c:729
+#: builtin/branch.c:736
 msgid "Branch rename failed"
 msgstr "Umbenennung des Branches fehlgeschlagen"
 
-#: builtin/branch.c:733
+#: builtin/branch.c:740
 #, c-format
 msgid "Renamed a misnamed branch '%s' away"
 msgstr "falsch benannten Branch '%s' umbenannt"
 
-#: builtin/branch.c:737
+#: builtin/branch.c:744
 #, c-format
 msgid "Branch renamed to %s, but HEAD is not updated!"
 msgstr "Branch umbenannt zu %s, aber HEAD ist nicht aktualisiert!"
 
-#: builtin/branch.c:744
+#: builtin/branch.c:751
 msgid "Branch is renamed, but update of config-file failed"
 msgstr ""
 "Branch ist umbenannt, aber die Aktualisierung der Konfigurationsdatei ist "
 "fehlgeschlagen."
 
-#: builtin/branch.c:759
+#: builtin/branch.c:766
 #, c-format
 msgid "malformed object name %s"
 msgstr "Missgebildeter Objektname %s"
 
-#: builtin/branch.c:783
+#: builtin/branch.c:790
 #, c-format
 msgid "could not write branch description template: %s"
 msgstr "Konnte Beschreibungsvorlage für Branch nicht schreiben: %s"
 
-#: builtin/branch.c:813
+#: builtin/branch.c:820
 msgid "Generic options"
 msgstr "Allgemeine Optionen"
 
-#: builtin/branch.c:815
+#: builtin/branch.c:822
 msgid "show hash and subject, give twice for upstream branch"
 msgstr "Hash und Betreff anzeigen; -vv: zusätzlich Upstream-Branch"
 
-#: builtin/branch.c:816
+#: builtin/branch.c:823
 msgid "suppress informational messages"
 msgstr "Informationsmeldungen unterdrücken"
 
-#: builtin/branch.c:817
+#: builtin/branch.c:824
 msgid "set up tracking mode (see git-pull(1))"
 msgstr "den Übernahmemodus einstellen (siehe git-pull(1))"
 
-#: builtin/branch.c:819
+#: builtin/branch.c:826
 msgid "change upstream info"
 msgstr "Informationen zum Upstream-Branch ändern"
 
-#: builtin/branch.c:823
+#: builtin/branch.c:830
 msgid "use colored output"
 msgstr "farbige Ausgaben verwenden"
 
-#: builtin/branch.c:824
+#: builtin/branch.c:831
 msgid "act on remote-tracking branches"
 msgstr "auf Remote-Tracking-Branches wirken"
 
-#: builtin/branch.c:827 builtin/branch.c:833 builtin/branch.c:854
-#: builtin/branch.c:860 builtin/commit.c:1586 builtin/commit.c:1587
-#: builtin/commit.c:1588 builtin/commit.c:1589 builtin/tag.c:616
+#: builtin/branch.c:834 builtin/branch.c:840 builtin/branch.c:861
+#: builtin/branch.c:867 builtin/commit.c:1582 builtin/commit.c:1583
+#: builtin/commit.c:1584 builtin/commit.c:1585 builtin/tag.c:616
 #: builtin/tag.c:622
 msgid "commit"
 msgstr "Commit"
 
-#: builtin/branch.c:828 builtin/branch.c:834
+#: builtin/branch.c:835 builtin/branch.c:841
 msgid "print only branches that contain the commit"
 msgstr "nur Branches ausgeben, welche diesen Commit beinhalten"
 
-#: builtin/branch.c:840
+#: builtin/branch.c:847
 msgid "Specific git-branch actions:"
 msgstr "spezifische Aktionen für \"git-branch\":"
 
-#: builtin/branch.c:841
+#: builtin/branch.c:848
 msgid "list both remote-tracking and local branches"
 msgstr "Remote-Tracking und lokale Branches auflisten"
 
-#: builtin/branch.c:843
+#: builtin/branch.c:850
 msgid "delete fully merged branch"
 msgstr "vollständig zusammengeführten Branch entfernen"
 
-#: builtin/branch.c:844
+#: builtin/branch.c:851
 msgid "delete branch (even if not merged)"
 msgstr "Branch löschen (auch wenn nicht zusammengeführt)"
 
-#: builtin/branch.c:845
+#: builtin/branch.c:852
 msgid "move/rename a branch and its reflog"
 msgstr "einen Branch und dessen Reflog verschieben/umbenennen"
 
-#: builtin/branch.c:846
+#: builtin/branch.c:853
 msgid "move/rename a branch, even if target exists"
 msgstr ""
 "einen Branch verschieben/umbenennen, auch wenn das Ziel bereits existiert"
 
-#: builtin/branch.c:847
+#: builtin/branch.c:854
 msgid "list branch names"
 msgstr "Branchnamen auflisten"
 
-#: builtin/branch.c:848
+#: builtin/branch.c:855
 msgid "create the branch's reflog"
 msgstr "das Reflog des Branches erzeugen"
 
-#: builtin/branch.c:850
+#: builtin/branch.c:857
 msgid "edit the description for the branch"
 msgstr "die Beschreibung für den Branch bearbeiten"
 
-#: builtin/branch.c:851
+#: builtin/branch.c:858
 msgid "force creation, move/rename, deletion"
 msgstr "Erstellung, Verschiebung/Umbenennung oder Löschung erzwingen"
 
-#: builtin/branch.c:854
+#: builtin/branch.c:861
 msgid "print only not merged branches"
 msgstr "nur Branches ausgeben, die nicht zusammengeführt sind"
 
-#: builtin/branch.c:860
+#: builtin/branch.c:867
 msgid "print only merged branches"
 msgstr "nur Branches ausgeben, die zusammengeführt sind"
 
-#: builtin/branch.c:864
+#: builtin/branch.c:871
 msgid "list branches in columns"
 msgstr "Branches in Spalten auflisten"
 
-#: builtin/branch.c:877
+#: builtin/branch.c:884
 msgid "Failed to resolve HEAD as a valid ref."
 msgstr "Konnte HEAD nicht als gültige Referenz auflösen."
 
-#: builtin/branch.c:881 builtin/clone.c:637
+#: builtin/branch.c:888 builtin/clone.c:637
 msgid "HEAD not found below refs/heads!"
 msgstr "HEAD wurde nicht unter \"refs/heads\" gefunden!"
 
-#: builtin/branch.c:903
+#: builtin/branch.c:910
 msgid "--column and --verbose are incompatible"
 msgstr "Die Optionen --column und --verbose sind inkompatibel."
 
-#: builtin/branch.c:914 builtin/branch.c:953
+#: builtin/branch.c:921 builtin/branch.c:960
 msgid "branch name required"
 msgstr "Branchname erforderlich"
 
-#: builtin/branch.c:929
+#: builtin/branch.c:936
 msgid "Cannot give description to detached HEAD"
 msgstr "zu losgelöstem HEAD kann keine Beschreibung hinterlegt werden"
 
-#: builtin/branch.c:934
+#: builtin/branch.c:941
 msgid "cannot edit description of more than one branch"
 msgstr "Beschreibung von mehr als einem Branch kann nicht bearbeitet werden"
 
-#: builtin/branch.c:941
+#: builtin/branch.c:948
 #, c-format
 msgid "No commit on branch '%s' yet."
 msgstr "Noch kein Commit in Branch '%s'."
 
-#: builtin/branch.c:944
+#: builtin/branch.c:951
 #, c-format
 msgid "No branch named '%s'."
 msgstr "Branch '%s' nicht vorhanden."
 
-#: builtin/branch.c:959
+#: builtin/branch.c:966
 msgid "too many branches for a rename operation"
 msgstr "zu viele Branches für eine Umbenennen-Operation angegeben"
 
-#: builtin/branch.c:964
+#: builtin/branch.c:971
 msgid "too many branches to set new upstream"
 msgstr "zu viele Branches angegeben, um Upstream-Branch zu setzen"
 
-#: builtin/branch.c:968
+#: builtin/branch.c:975
 #, c-format
 msgid ""
 "could not set upstream of HEAD to %s when it does not point to any branch."
 msgstr ""
 "Konnte keinen neuen Upstream-Branch von HEAD zu %s setzen, da dieser auf\n"
 "keinen Branch zeigt."
 
-#: builtin/branch.c:971 builtin/branch.c:993 builtin/branch.c:1014
+#: builtin/branch.c:978 builtin/branch.c:1000 builtin/branch.c:1021
 #, c-format
 msgid "no such branch '%s'"
 msgstr "Kein solcher Branch '%s'"
 
-#: builtin/branch.c:975
+#: builtin/branch.c:982
 #, c-format
 msgid "branch '%s' does not exist"
 msgstr "Branch '%s' existiert nicht"
 
-#: builtin/branch.c:987
+#: builtin/branch.c:994
 msgid "too many branches to unset upstream"
 msgstr ""
 "zu viele Branches angegeben, um Konfiguration zu Upstream-Branch zu entfernen"
 
-#: builtin/branch.c:991
+#: builtin/branch.c:998
 msgid "could not unset upstream of HEAD when it does not point to any branch."
 msgstr ""
 "Konnte Konfiguration zu Upstream-Branch von HEAD nicht entfernen, da dieser\n"
 "auf keinen Branch zeigt."
 
-#: builtin/branch.c:997
+#: builtin/branch.c:1004
 #, c-format
 msgid "Branch '%s' has no upstream information"
 msgstr "Branch '%s' hat keinen Upstream-Branch gesetzt"
 
-#: builtin/branch.c:1011
+#: builtin/branch.c:1018
 msgid "it does not make sense to create 'HEAD' manually"
 msgstr "'HEAD' darf nicht manuell erstellt werden"
 
-#: builtin/branch.c:1017
+#: builtin/branch.c:1024
 msgid "-a and -r options to 'git branch' do not make sense with a branch name"
 msgstr ""
 "Die Optionen -a und -r bei 'git branch' können nicht gemeimsam mit einem "
 "Branchnamen verwendet werden."
 
-#: builtin/branch.c:1020
+#: builtin/branch.c:1027
 #, c-format
 msgid ""
 "The --set-upstream flag is deprecated and will be removed. Consider using --"
 "track or --set-upstream-to\n"
 msgstr ""
 "Die --set-upstream Option ist veraltet und wird entfernt. Benutzen Sie --"
 "track oder --set-upstream-to\n"
 
-#: builtin/branch.c:1037
+#: builtin/branch.c:1044
 #, c-format
 msgid ""
 "\n"
 "If you wanted to make '%s' track '%s', do this:\n"
 "\n"
 msgstr ""
 "\n"
 "Wenn Sie wollten, dass '%s' den Branch '%s' als Upstream-Branch hat, führen "
 "Sie aus:\n"
 
-#: builtin/branch.c:1038
+#: builtin/branch.c:1045
 #, c-format
 msgid "    git branch -d %s\n"
 msgstr "    git branch -d %s\n"
 
-#: builtin/branch.c:1039
+#: builtin/branch.c:1046
 #, c-format
 msgid "    git branch --set-upstream-to %s\n"
 msgstr "    git branch --set-upstream-to %s\n"
 
 #: builtin/bundle.c:47
 #, c-format
@@ -3270,63 +3304,63 @@
 msgstr "Um ein Paket zu erstellen wird ein Repository benötigt."
 
 #: builtin/bundle.c:60
 msgid "Need a repository to unbundle."
 msgstr "Zum Entpacken wird ein Repository benötigt."
 
-#: builtin/cat-file.c:328
-msgid "git cat-file (-t|-s|-e|-p|<type>|--textconv) <object>"
-msgstr "git cat-file (-t|-s|-e|-p|<Art>|--textconv) <Objekt>"
-
-#: builtin/cat-file.c:329
-msgid "git cat-file (--batch|--batch-check) < <list_of_objects>"
-msgstr "git cat-file (--batch|--batch-check) < <Liste_von_Objekten>"
+#: builtin/cat-file.c:326
+msgid "git cat-file (-t | -s | -e | -p | <type> | --textconv) <object>"
+msgstr "git cat-file (-t | -s | -e | -p | <Art> | --textconv) <Objekt>"
+
+#: builtin/cat-file.c:327
+msgid "git cat-file (--batch | --batch-check) < <list-of-objects>"
+msgstr "git cat-file (--batch | --batch-check) < <Liste-von-Objekten>"
 
-#: builtin/cat-file.c:366
+#: builtin/cat-file.c:364
 msgid "<type> can be one of: blob, tree, commit, tag"
 msgstr "<Art> kann sein: blob, tree, commit, tag"
 
-#: builtin/cat-file.c:367
+#: builtin/cat-file.c:365
 msgid "show object type"
 msgstr "Objektart anzeigen"
 
-#: builtin/cat-file.c:368
+#: builtin/cat-file.c:366
 msgid "show object size"
 msgstr "Objektgröße anzeigen"
 
-#: builtin/cat-file.c:370
+#: builtin/cat-file.c:368
 msgid "exit with zero when there's no error"
 msgstr "mit Rückgabewert 0 beenden, wenn kein Fehler aufgetreten ist"
 
-#: builtin/cat-file.c:371
+#: builtin/cat-file.c:369
 msgid "pretty-print object's content"
 msgstr "ansprechende Anzeige des Objektinhaltes"
 
-#: builtin/cat-file.c:373
+#: builtin/cat-file.c:371
 msgid "for blob objects, run textconv on object's content"
 msgstr "eine Textkonvertierung auf den Inhalt von Blob-Objekten ausführen"
 
-#: builtin/cat-file.c:375
+#: builtin/cat-file.c:373
 msgid "show info and content of objects fed from the standard input"
 msgstr ""
 "Anzeige von Informationen und Inhalt von Objekten, gelesen von der Standard-"
 "Eingabe"
 
-#: builtin/cat-file.c:378
+#: builtin/cat-file.c:376
 msgid "show info about objects fed from the standard input"
 msgstr ""
 "Anzeige von Informationen über Objekte, gelesen von der Standard-Eingabe"
 
 #: builtin/check-attr.c:11
-msgid "git check-attr [-a | --all | attr...] [--] pathname..."
-msgstr "git check-attr [-a | --all | Attribut...] [--] Pfadname..."
+msgid "git check-attr [-a | --all | <attr>...] [--] <pathname>..."
+msgstr "git check-attr [-a | --all | <Attribut>...] [--] <Pfadname>..."
 
 #: builtin/check-attr.c:12
-msgid "git check-attr --stdin [-z] [-a | --all | attr...] < <list-of-paths>"
+msgid "git check-attr --stdin [-z] [-a | --all | <attr>...] < <list-of-paths>"
 msgstr ""
-"git check-attr --stdin [-z] [-a | --all | Attribut...] < <Liste-von-Pfaden>"
+"git check-attr --stdin [-z] [-a | --all | <Attribut>...] < <Liste-von-Pfaden>"
 
 #: builtin/check-attr.c:19
 msgid "report all attributes set on file"
 msgstr "alle Attribute einer Datei ausgeben"
 
 #: builtin/check-attr.c:20
@@ -3376,14 +3410,14 @@
 
 #: builtin/check-ignore.c:168
 msgid "--non-matching is only valid with --verbose"
 msgstr "--non-matching ist nur mit --verbose zulässig"
 
 #: builtin/check-mailmap.c:8
-msgid "git check-mailmap [options] <contact>..."
-msgstr "git check-mailmap [Optionen] <Kontakt>..."
+msgid "git check-mailmap [<options>] <contact>..."
+msgstr "git check-mailmap [<Optionen>] <Kontakt>..."
 
 #: builtin/check-mailmap.c:13
 msgid "also read contacts from stdin"
 msgstr "ebenfalls Kontakte von der Standard-Eingabe lesen"
 
 #: builtin/check-mailmap.c:24
@@ -3393,14 +3427,14 @@
 
 #: builtin/check-mailmap.c:47
 msgid "no contacts specified"
 msgstr "keine Kontakte angegeben"
 
 #: builtin/checkout-index.c:126
-msgid "git checkout-index [options] [--] [<file>...]"
-msgstr "git checkout-index [Optionen] [--] [<Datei>...]"
+msgid "git checkout-index [<options>] [--] [<file>...]"
+msgstr "git checkout-index [<Optionen>] [--] [<Datei>...]"
 
 #: builtin/checkout-index.c:188
 msgid "check out all files in the index"
 msgstr "alle Dateien in der Staging-Area auschecken"
 
 #: builtin/checkout-index.c:189
@@ -3440,18 +3474,18 @@
 
 #: builtin/checkout-index.c:208
 msgid "copy out the files from named stage"
 msgstr "Dateien von dem benannten Stand kopieren"
 
 #: builtin/checkout.c:25
-msgid "git checkout [options] <branch>"
-msgstr "git checkout [Optionen] <Branch>"
+msgid "git checkout [<options>] <branch>"
+msgstr "git checkout [<Optionen>] <Branch>"
 
 #: builtin/checkout.c:26
-msgid "git checkout [options] [<branch>] -- <file>..."
-msgstr "git checkout [Optionen] [<Branch>] -- <Datei>..."
+msgid "git checkout [<options>] [<branch>] -- <file>..."
+msgstr "git checkout [<Optionen>] [<Branch>] -- <Datei>..."
 
 #: builtin/checkout.c:132 builtin/checkout.c:165
 #, c-format
 msgid "path '%s' does not have our version"
 msgstr "Pfad '%s' hat nicht unsere Version."
 
@@ -3575,19 +3609,19 @@
 #: builtin/checkout.c:747
 #, c-format
 msgid ""
 "If you want to keep them by creating a new branch, this may be a good time\n"
 "to do so with:\n"
 "\n"
-" git branch new_branch_name %s\n"
+" git branch <new-branch-name> %s\n"
 "\n"
 msgstr ""
 "Wenn Sie diese durch einen neuen Branch behalten möchten, dann könnte jetzt\n"
 "ein guter Zeitpunkt sein dies zu tun mit:\n"
 "\n"
-" git branch neuer_branch_name %s\n"
+" git branch <neuer-Branchname> %s\n"
 "\n"
 
 #: builtin/checkout.c:777
 msgid "internal error in revision walk"
 msgstr "interner Fehler im Revisionsgang"
 
@@ -3697,14 +3731,14 @@
 
 #: builtin/checkout.c:1128
 msgid "do not limit pathspecs to sparse entries only"
 msgstr "keine Einschränkung bei Pfadspezifikationen zum partiellen Auschecken"
 
 #: builtin/checkout.c:1130
-msgid "second guess 'git checkout no-such-branch'"
-msgstr "second guess 'git checkout no-such-branch'"
+msgid "second guess 'git checkout <no-such-branch>'"
+msgstr "second guess 'git checkout <no-such-branch>'"
 
 #: builtin/checkout.c:1153
 msgid "-b, -B and --orphan are mutually exclusive"
 msgstr "Die Optionen -b, -B und --orphan schließen sich gegenseitig aus."
 
 #: builtin/checkout.c:1170
@@ -3821,22 +3855,23 @@
 msgstr "WARNUNG: Kann keine Einträge finden die Muster entsprechen: %s"
 
 #: builtin/clean.c:717
 msgid "Select items to delete"
 msgstr "Wählen Sie Einträge zum Löschen"
 
-#: builtin/clean.c:757
+#. TRANSLATORS: Make sure to keep [y/N] as is
+#: builtin/clean.c:758
 #, c-format
-msgid "remove %s? "
-msgstr "'%s' löschen? "
+msgid "Remove %s [y/N]? "
+msgstr "'%s' löschen [y/N]? "
 
-#: builtin/clean.c:782
+#: builtin/clean.c:783
 msgid "Bye."
 msgstr "Tschüss."
 
-#: builtin/clean.c:790
+#: builtin/clean.c:791
 msgid ""
 "clean               - start cleaning\n"
 "filter by pattern   - exclude items from deletion\n"
 "select by numbers   - select items to be deleted by numbers\n"
 "ask each            - confirm each deletion (like \"rm -i\")\n"
 "quit                - stop cleaning\n"
@@ -3848,89 +3883,89 @@
 "select by numbers   - Auswahl von Einträgen über Nummern\n"
 "ask each            - jede Löschung bestätigen (wie \"rm -i\")\n"
 "quit                - Clean beenden\n"
 "help                - diese Meldung anzeigen\n"
 "?                   - Hilfe zur Auswahl mittels Eingabe anzeigen"
 
-#: builtin/clean.c:817
+#: builtin/clean.c:818
 msgid "*** Commands ***"
 msgstr "*** Kommandos ***"
 
-#: builtin/clean.c:818
+#: builtin/clean.c:819
 msgid "What now"
 msgstr "Was nun"
 
-#: builtin/clean.c:826
+#: builtin/clean.c:827
 msgid "Would remove the following item:"
 msgid_plural "Would remove the following items:"
 msgstr[0] "Würde das folgende Element entfernen:"
 msgstr[1] "Würde die folgenden Elemente entfernen:"
 
-#: builtin/clean.c:843
+#: builtin/clean.c:844
 msgid "No more files to clean, exiting."
 msgstr "Keine Dateien mehr zum Löschen, beende."
 
-#: builtin/clean.c:874
+#: builtin/clean.c:875
 msgid "do not print names of files removed"
 msgstr "keine Namen von gelöschten Dateien ausgeben"
 
-#: builtin/clean.c:876
+#: builtin/clean.c:877
 msgid "force"
 msgstr "Aktion erzwingen"
 
-#: builtin/clean.c:877
+#: builtin/clean.c:878
 msgid "interactive cleaning"
 msgstr "interaktives Clean"
 
-#: builtin/clean.c:879
+#: builtin/clean.c:880
 msgid "remove whole directories"
 msgstr "ganze Verzeichnisse löschen"
 
-#: builtin/clean.c:880 builtin/describe.c:407 builtin/grep.c:714
-#: builtin/ls-files.c:486 builtin/name-rev.c:311 builtin/show-ref.c:185
+#: builtin/clean.c:881 builtin/describe.c:407 builtin/grep.c:714
+#: builtin/ls-files.c:443 builtin/name-rev.c:311 builtin/show-ref.c:185
 msgid "pattern"
 msgstr "Muster"
 
-#: builtin/clean.c:881
+#: builtin/clean.c:882
 msgid "add <pattern> to ignore rules"
 msgstr "<Muster> zu den Regeln für ignorierte Pfade hinzufügen"
 
-#: builtin/clean.c:882
+#: builtin/clean.c:883
 msgid "remove ignored files, too"
 msgstr "auch ignorierte Dateien löschen"
 
-#: builtin/clean.c:884
+#: builtin/clean.c:885
 msgid "remove only ignored files"
 msgstr "nur ignorierte Dateien löschen"
 
-#: builtin/clean.c:902
+#: builtin/clean.c:903
 msgid "-x and -X cannot be used together"
 msgstr "Die Optionen -x und -X können nicht gemeinsam verwendet werden."
 
-#: builtin/clean.c:906
+#: builtin/clean.c:907
 msgid ""
 "clean.requireForce set to true and neither -i, -n, nor -f given; refusing to "
 "clean"
 msgstr ""
 "clean.requireForce auf \"true\" gesetzt und weder -i, -n noch -f gegeben; "
 "\"clean\" verweigert"
 
-#: builtin/clean.c:909
+#: builtin/clean.c:910
 msgid ""
 "clean.requireForce defaults to true and neither -i, -n, nor -f given; "
 "refusing to clean"
 msgstr ""
 "clean.requireForce standardmäßig auf \"true\" gesetzt und weder -i, -n noch -"
 "f gegeben; \"clean\" verweigert"
 
 #: builtin/clone.c:37
-msgid "git clone [options] [--] <repo> [<dir>]"
-msgstr "git clone [Optionen] [--] <Repository> [<Verzeichnis>]"
+msgid "git clone [<options>] [--] <repo> [<dir>]"
+msgstr "git clone [<Optionen>] [--] <Repository> [<Verzeichnis>]"
 
-#: builtin/clone.c:66 builtin/fetch.c:112 builtin/merge.c:224
-#: builtin/push.c:514
+#: builtin/clone.c:66 builtin/fetch.c:111 builtin/merge.c:224
+#: builtin/push.c:523
 msgid "force progress reporting"
 msgstr "Fortschrittsanzeige erzwingen"
 
 #: builtin/clone.c:68
 msgid "don't create a checkout"
 msgstr "kein Auschecken"
@@ -3984,13 +4019,13 @@
 msgstr "<Branch> auschecken, anstatt HEAD des Remote-Repositories"
 
 #: builtin/clone.c:93
 msgid "path to git-upload-pack on the remote"
 msgstr "Pfad zu \"git-upload-pack\" auf der Gegenseite"
 
-#: builtin/clone.c:94 builtin/fetch.c:113 builtin/grep.c:659
+#: builtin/clone.c:94 builtin/fetch.c:112 builtin/grep.c:659
 msgid "depth"
 msgstr "Tiefe"
 
 #: builtin/clone.c:95
 msgid "create a shallow clone of that depth"
 msgstr ""
@@ -4088,13 +4123,13 @@
 msgid "Could not find remote branch %s to clone."
 msgstr "Konnte zu klonenden Remote-Branch %s nicht finden."
 
 #: builtin/clone.c:561
 #, c-format
 msgid "Checking connectivity... "
-msgstr "Prüfe Konnektivität... "
+msgstr "Prüfe Konnektivität ... "
 
 #: builtin/clone.c:564
 msgid "remote did not send all necessary objects"
 msgstr "Remote-Repository hat nicht alle erforderlichen Objekte gesendet."
 
 #: builtin/clone.c:628
@@ -4134,13 +4169,13 @@
 
 #: builtin/clone.c:809
 #, c-format
 msgid "repository '%s' does not exist"
 msgstr "Repository '%s' existiert nicht."
 
-#: builtin/clone.c:815 builtin/fetch.c:1155
+#: builtin/clone.c:815 builtin/fetch.c:1156
 #, c-format
 msgid "depth %s is not a positive number"
 msgstr "Tiefe %s ist keine positive Zahl"
 
 #: builtin/clone.c:825
 #, c-format
@@ -4149,69 +4184,69 @@
 
 #: builtin/clone.c:835
 #, c-format
 msgid "working tree '%s' already exists."
 msgstr "Arbeitsverzeichnis '%s' existiert bereits."
 
-#: builtin/clone.c:848 builtin/clone.c:860
+#: builtin/clone.c:850 builtin/clone.c:861
 #, c-format
 msgid "could not create leading directories of '%s'"
 msgstr "Konnte führende Verzeichnisse von '%s' nicht erstellen."
 
-#: builtin/clone.c:851
+#: builtin/clone.c:853
 #, c-format
-msgid "could not create work tree dir '%s'."
-msgstr "Konnte Arbeitsverzeichnis '%s' nicht erstellen."
+msgid "could not create work tree dir '%s'"
+msgstr "Konnte Arbeitsverzeichnis '%s' nicht erstellen"
 
-#: builtin/clone.c:870
+#: builtin/clone.c:871
 #, c-format
 msgid "Cloning into bare repository '%s'...\n"
-msgstr "Klone in Bare-Repository '%s'...\n"
+msgstr "Klone in Bare-Repository '%s' ...\n"
 
-#: builtin/clone.c:872
+#: builtin/clone.c:873
 #, c-format
 msgid "Cloning into '%s'...\n"
-msgstr "Klone nach '%s'...\n"
+msgstr "Klone nach '%s' ...\n"
 
-#: builtin/clone.c:897
+#: builtin/clone.c:898
 msgid "--dissociate given, but there is no --reference"
 msgstr "--dissociate ohne --reference angegeben"
 
-#: builtin/clone.c:912
+#: builtin/clone.c:913
 msgid "--depth is ignored in local clones; use file:// instead."
 msgstr ""
 "Die Option --depth wird in lokalen Klonen ignoriert; benutzen Sie "
 "stattdessen file://"
 
-#: builtin/clone.c:915
+#: builtin/clone.c:916
 msgid "source repository is shallow, ignoring --local"
 msgstr ""
 "Quelle ist ein Repository mit unvollständiger Historie (shallow),ignoriere --"
 "local"
 
-#: builtin/clone.c:920
+#: builtin/clone.c:921
 msgid "--local is ignored"
 msgstr "--local wird ignoriert"
 
-#: builtin/clone.c:924
+#: builtin/clone.c:925
 #, c-format
 msgid "Don't know how to clone %s"
 msgstr "Weiß nicht wie %s zu klonen ist."
 
-#: builtin/clone.c:975 builtin/clone.c:983
+#: builtin/clone.c:976 builtin/clone.c:984
 #, c-format
 msgid "Remote branch %s not found in upstream %s"
 msgstr "Remote-Branch %s nicht im Upstream-Repository %s gefunden"
 
-#: builtin/clone.c:986
+#: builtin/clone.c:987
 msgid "You appear to have cloned an empty repository."
 msgstr "Sie scheinen ein leeres Repository geklont zu haben."
 
 #: builtin/column.c:9
-msgid "git column [options]"
-msgstr "git column [Optionen]"
+msgid "git column [<options>]"
+msgstr "git column [<Optionen>]"
 
 #: builtin/column.c:26
 msgid "lookup config vars"
 msgstr "Konfigurationsvariablen nachschlagen"
 
 #: builtin/column.c:27 builtin/column.c:28
@@ -4236,18 +4271,18 @@
 
 #: builtin/column.c:51
 msgid "--command must be the first argument"
 msgstr "Die Option --command muss an erster Stelle stehen."
 
 #: builtin/commit.c:37
-msgid "git commit [options] [--] <pathspec>..."
-msgstr "git commit [Optionen] [--] <Pfadspezifikation>..."
+msgid "git commit [<options>] [--] <pathspec>..."
+msgstr "git commit [<Optionen>] [--] <Pfadspezifikation>..."
 
 #: builtin/commit.c:42
-msgid "git status [options] [--] <pathspec>..."
-msgstr "git status [Optionen] [--] <Pfadspezifikation>..."
+msgid "git status [<options>] [--] <pathspec>..."
+msgstr "git status [<Optionen>] [--] <Pfadspezifikation>..."
 
 #: builtin/commit.c:47
 msgid ""
 "Your name and email address were configured automatically based\n"
 "on your username and hostname. Please check that they are accurate.\n"
 "You can suppress this message by setting them explicitly. Run the\n"
@@ -4342,121 +4377,121 @@
 "\n"
 "    git reset\n"
 "\n"
 "Benutzen Sie anschließend \"git cherry-pick --continue\", um die\n"
 "Cherry-Pick-Operation mit den verbleibenden Commits fortzusetzen.\n"
 
-#: builtin/commit.c:302
+#: builtin/commit.c:304
 msgid "failed to unpack HEAD tree object"
 msgstr "Fehler beim Entpacken des \"Tree\"-Objektes von HEAD."
 
-#: builtin/commit.c:342
+#: builtin/commit.c:344
 msgid "unable to create temporary index"
 msgstr "Konnte temporäre Staging-Area nicht erstellen."
 
-#: builtin/commit.c:348
+#: builtin/commit.c:350
 msgid "interactive add failed"
 msgstr "interaktives Hinzufügen fehlgeschlagen"
 
-#: builtin/commit.c:359
+#: builtin/commit.c:361
 msgid "unable to write index file"
 msgstr "Konnte Staging-Area-Datei nicht schreiben."
 
-#: builtin/commit.c:361
+#: builtin/commit.c:363
 msgid "unable to update temporary index"
 msgstr "Konnte temporäre Staging-Area nicht aktualisieren."
 
-#: builtin/commit.c:363
+#: builtin/commit.c:365
 msgid "Failed to update main cache tree"
 msgstr "Konnte Haupt-Cache-Verzeichnis nicht aktualisieren"
 
-#: builtin/commit.c:387 builtin/commit.c:412 builtin/commit.c:461
+#: builtin/commit.c:389 builtin/commit.c:414 builtin/commit.c:463
 msgid "unable to write new_index file"
 msgstr "Konnte new_index Datei nicht schreiben"
 
-#: builtin/commit.c:443
+#: builtin/commit.c:445
 msgid "cannot do a partial commit during a merge."
 msgstr "Kann keinen Teil-Commit durchführen, während ein Merge im Gange ist."
 
-#: builtin/commit.c:445
+#: builtin/commit.c:447
 msgid "cannot do a partial commit during a cherry-pick."
 msgstr ""
 "Kann keinen Teil-Commit durchführen, während \"cherry-pick\" im Gange ist."
 
-#: builtin/commit.c:454
+#: builtin/commit.c:456
 msgid "cannot read the index"
 msgstr "Kann Staging-Area nicht lesen"
 
-#: builtin/commit.c:473
+#: builtin/commit.c:475
 msgid "unable to write temporary index file"
 msgstr "Konnte temporäre Staging-Area-Datei nicht schreiben."
 
-#: builtin/commit.c:584
+#: builtin/commit.c:580
 #, c-format
 msgid "commit '%s' lacks author header"
 msgstr "Commit '%s' fehlt Autor-Kopfbereich"
 
-#: builtin/commit.c:586
+#: builtin/commit.c:582
 #, c-format
 msgid "commit '%s' has malformed author line"
 msgstr "Commit '%s' hat fehlerhafte Autor-Zeile"
 
-#: builtin/commit.c:605
+#: builtin/commit.c:601
 msgid "malformed --author parameter"
 msgstr "Fehlerhafter --author Parameter"
 
-#: builtin/commit.c:613
+#: builtin/commit.c:609
 #, c-format
 msgid "invalid date format: %s"
 msgstr "Ungültiges Datumsformat: %s"
 
-#: builtin/commit.c:657
+#: builtin/commit.c:653
 msgid ""
 "unable to select a comment character that is not used\n"
 "in the current commit message"
 msgstr ""
 "Konnte kein Kommentar-Zeichen auswählen, das nicht in\n"
 "der aktuellen Commit-Beschreibung verwendet wird."
 
-#: builtin/commit.c:694 builtin/commit.c:727 builtin/commit.c:1084
+#: builtin/commit.c:690 builtin/commit.c:723 builtin/commit.c:1080
 #, c-format
 msgid "could not lookup commit %s"
 msgstr "Konnte Commit %s nicht nachschlagen"
 
-#: builtin/commit.c:706 builtin/shortlog.c:273
+#: builtin/commit.c:702 builtin/shortlog.c:273
 #, c-format
 msgid "(reading log message from standard input)\n"
 msgstr "(lese Log-Nachricht von Standard-Eingabe)\n"
 
-#: builtin/commit.c:708
+#: builtin/commit.c:704
 msgid "could not read log from standard input"
 msgstr "Konnte Log nicht von Standard-Eingabe lesen."
 
-#: builtin/commit.c:712
+#: builtin/commit.c:708
 #, c-format
 msgid "could not read log file '%s'"
 msgstr "Konnte Log-Datei '%s' nicht lesen"
 
-#: builtin/commit.c:734
+#: builtin/commit.c:730
 msgid "could not read MERGE_MSG"
 msgstr "Konnte MERGE_MSG nicht lesen"
 
-#: builtin/commit.c:738
+#: builtin/commit.c:734
 msgid "could not read SQUASH_MSG"
 msgstr "Konnte SQUASH_MSG nicht lesen"
 
-#: builtin/commit.c:742
+#: builtin/commit.c:738
 #, c-format
 msgid "could not read '%s'"
 msgstr "Konnte '%s' nicht lesen"
 
-#: builtin/commit.c:789
+#: builtin/commit.c:785
 msgid "could not write commit template"
 msgstr "Konnte Commit-Vorlage nicht schreiben"
 
-#: builtin/commit.c:807
+#: builtin/commit.c:803
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a merge.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
@@ -4465,13 +4500,13 @@
 "\n"
 "Es sieht so aus, als committen Sie einen Merge.\n"
 "Falls das nicht korrekt ist, löschen Sie bitte die Datei\n"
 "\t%s\n"
 "und versuchen Sie es erneut.\n"
 
-#: builtin/commit.c:812
+#: builtin/commit.c:808
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a cherry-pick.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
@@ -4480,409 +4515,411 @@
 "\n"
 "Es sieht so aus, als committen Sie einen \"cherry-pick\".\n"
 "Falls das nicht korrekt ist, löschen Sie bitte die Datei\n"
 "\t%s\n"
 "und versuchen Sie es erneut.\n"
 
-#: builtin/commit.c:825
+#: builtin/commit.c:821
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be ignored, and an empty message aborts the commit.\n"
 msgstr ""
 "Bitte geben Sie eine Commit-Beschreibung für Ihre Änderungen ein. Zeilen,\n"
 "die mit '%c' beginnen, werden ignoriert, und eine leere Beschreibung\n"
 "bricht den Commit ab.\n"
 
-#: builtin/commit.c:832
+#: builtin/commit.c:828
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be kept; you may remove them yourself if you want to.\n"
 "An empty message aborts the commit.\n"
 msgstr ""
 "Bitte geben Sie eine Commit-Beschreibung für Ihre Änderungen ein. Zeilen, "
 "die\n"
 "mit '%c' beginnen, werden beibehalten; wenn Sie möchten, können Sie diese "
 "entfernen.\n"
 "Eine leere Beschreibung bricht den Commit ab.\n"
 
-#: builtin/commit.c:852
+#: builtin/commit.c:848
 #, c-format
 msgid "%sAuthor:    %.*s <%.*s>"
 msgstr "%sAutor:           %.*s <%.*s>"
 
-#: builtin/commit.c:860
+#: builtin/commit.c:856
 #, c-format
 msgid "%sDate:      %s"
 msgstr "%sDatum:            %s"
 
-#: builtin/commit.c:867
+#: builtin/commit.c:863
 #, c-format
 msgid "%sCommitter: %.*s <%.*s>"
 msgstr "%sCommit-Ersteller: %.*s <%.*s>"
 
-#: builtin/commit.c:885
+#: builtin/commit.c:881
 msgid "Cannot read index"
 msgstr "Kann Staging-Area nicht lesen"
 
-#: builtin/commit.c:942
+#: builtin/commit.c:938
 msgid "Error building trees"
 msgstr "Fehler beim Erzeugen der \"Tree\"-Objekte"
 
-#: builtin/commit.c:957 builtin/tag.c:495
+#: builtin/commit.c:953 builtin/tag.c:495
 #, c-format
 msgid "Please supply the message using either -m or -F option.\n"
 msgstr ""
 "Bitte liefern Sie eine Beschreibung entweder mit der Option -m oder -F.\n"
 
-#: builtin/commit.c:1059
+#: builtin/commit.c:1055
 #, c-format
-msgid "No existing author found with '%s'"
-msgstr "Kein existierender Autor mit '%s' gefunden."
+msgid "--author '%s' is not 'Name <email>' and matches no existing author"
+msgstr ""
+"--author '%s' ist nicht im Format 'Name <E-Mail>' und stimmt mit keinem "
+"vorhandenen Autor überein"
 
-#: builtin/commit.c:1074 builtin/commit.c:1314
+#: builtin/commit.c:1070 builtin/commit.c:1310
 #, c-format
 msgid "Invalid untracked files mode '%s'"
 msgstr "Ungültiger Modus '%s' für unversionierte Dateien"
 
-#: builtin/commit.c:1111
+#: builtin/commit.c:1107
 msgid "--long and -z are incompatible"
 msgstr "Die Optionen --long und -z sind inkompatibel."
 
-#: builtin/commit.c:1141
+#: builtin/commit.c:1137
 msgid "Using both --reset-author and --author does not make sense"
 msgstr ""
 "Die Optionen --reset-author und --author können nicht gemeinsam verwendet "
 "werden."
 
-#: builtin/commit.c:1150
+#: builtin/commit.c:1146
 msgid "You have nothing to amend."
 msgstr "Sie haben nichts für \"--amend\"."
 
-#: builtin/commit.c:1153
+#: builtin/commit.c:1149
 msgid "You are in the middle of a merge -- cannot amend."
 msgstr "Ein Merge ist im Gange -- kann \"--amend\" nicht ausführen."
 
-#: builtin/commit.c:1155
+#: builtin/commit.c:1151
 msgid "You are in the middle of a cherry-pick -- cannot amend."
 msgstr "\"cherry-pick\" ist im Gange -- kann \"--amend\" nicht ausführen."
 
-#: builtin/commit.c:1158
+#: builtin/commit.c:1154
 msgid "Options --squash and --fixup cannot be used together"
 msgstr ""
 "Die Optionen --squash und --fixup können nicht gemeinsam verwendet werden."
 
-#: builtin/commit.c:1168
+#: builtin/commit.c:1164
 msgid "Only one of -c/-C/-F/--fixup can be used."
 msgstr "Es kann nur eine Option von -c/-C/-F/--fixup verwendet werden."
 
-#: builtin/commit.c:1170
+#: builtin/commit.c:1166
 msgid "Option -m cannot be combined with -c/-C/-F/--fixup."
 msgstr "Die Option -m kann nicht mit -c/-C/-F/--fixup kombiniert werden."
 
-#: builtin/commit.c:1178
+#: builtin/commit.c:1174
 msgid "--reset-author can be used only with -C, -c or --amend."
 msgstr ""
 "Die Option --reset--author kann nur mit -C, -c oder --amend verwendet werden."
 
-#: builtin/commit.c:1195
+#: builtin/commit.c:1191
 msgid "Only one of --include/--only/--all/--interactive/--patch can be used."
 msgstr ""
 "Es kann nur eine Option von --include/--only/--all/--interactive/--patch "
 "verwendet werden."
 
-#: builtin/commit.c:1197
+#: builtin/commit.c:1193
 msgid "No paths with --include/--only does not make sense."
 msgstr ""
 "Die Optionen --include und --only können nur mit der Angabe von Pfaden "
 "verwendet werden."
 
-#: builtin/commit.c:1199
+#: builtin/commit.c:1195
 msgid "Clever... amending the last one with dirty index."
 msgstr ""
-"Klug... den letzten Commit mit einer geänderten Staging-Area nachbessern."
+"Klug ... den letzten Commit mit einer geänderten Staging-Area nachbessern."
 
-#: builtin/commit.c:1201
+#: builtin/commit.c:1197
 msgid "Explicit paths specified without -i or -o; assuming --only paths..."
 msgstr "Explizite Pfade ohne -i oder -o angegeben; nehme --only an"
 
-#: builtin/commit.c:1213 builtin/tag.c:728
+#: builtin/commit.c:1209 builtin/tag.c:728
 #, c-format
 msgid "Invalid cleanup mode %s"
 msgstr "Ungültiger \"cleanup\" Modus %s"
 
-#: builtin/commit.c:1218
+#: builtin/commit.c:1214
 msgid "Paths with -a does not make sense."
-msgstr "Die Option -a kann nur mit der Angabe von Pfaden verwendet werden."
+msgstr "Die Option -a kann nicht mit der Angabe von Pfaden verwendet werden."
 
-#: builtin/commit.c:1328 builtin/commit.c:1608
+#: builtin/commit.c:1324 builtin/commit.c:1604
 msgid "show status concisely"
 msgstr "Status im Kurzformat anzeigen"
 
-#: builtin/commit.c:1330 builtin/commit.c:1610
+#: builtin/commit.c:1326 builtin/commit.c:1606
 msgid "show branch information"
 msgstr "Branchinformationen anzeigen"
 
-#: builtin/commit.c:1332 builtin/commit.c:1612 builtin/push.c:500
+#: builtin/commit.c:1328 builtin/commit.c:1608 builtin/push.c:509
 msgid "machine-readable output"
 msgstr "maschinenlesbare Ausgabe"
 
-#: builtin/commit.c:1335 builtin/commit.c:1614
+#: builtin/commit.c:1331 builtin/commit.c:1610
 msgid "show status in long format (default)"
 msgstr "Status im Langformat anzeigen (Standard)"
 
-#: builtin/commit.c:1338 builtin/commit.c:1617
+#: builtin/commit.c:1334 builtin/commit.c:1613
 msgid "terminate entries with NUL"
 msgstr "Einträge mit NUL-Zeichen abschließen"
 
-#: builtin/commit.c:1340 builtin/commit.c:1620 builtin/fast-export.c:980
+#: builtin/commit.c:1336 builtin/commit.c:1616 builtin/fast-export.c:980
 #: builtin/fast-export.c:983 builtin/tag.c:603
 msgid "mode"
 msgstr "Modus"
 
-#: builtin/commit.c:1341 builtin/commit.c:1620
+#: builtin/commit.c:1337 builtin/commit.c:1616
 msgid "show untracked files, optional modes: all, normal, no. (Default: all)"
 msgstr ""
 "unversionierte Dateien anzeigen, optionale Modi: all, normal, no. (Standard: "
 "all)"
 
-#: builtin/commit.c:1344
+#: builtin/commit.c:1340
 msgid "show ignored files"
 msgstr "ignorierte Dateien anzeigen"
 
-#: builtin/commit.c:1345 parse-options.h:153
+#: builtin/commit.c:1341 parse-options.h:153
 msgid "when"
 msgstr "wann"
 
-#: builtin/commit.c:1346
+#: builtin/commit.c:1342
 msgid ""
 "ignore changes to submodules, optional when: all, dirty, untracked. "
 "(Default: all)"
 msgstr ""
 "Änderungen in Submodulen ignorieren, optional wenn: all, dirty, untracked. "
 "(Standard: all)"
 
-#: builtin/commit.c:1348
+#: builtin/commit.c:1344
 msgid "list untracked files in columns"
 msgstr "unversionierte Dateien in Spalten auflisten"
 
-#: builtin/commit.c:1435
+#: builtin/commit.c:1431
 msgid "couldn't look up newly created commit"
 msgstr "Konnte neu erstellten Commit nicht nachschlagen."
 
-#: builtin/commit.c:1437
+#: builtin/commit.c:1433
 msgid "could not parse newly created commit"
 msgstr "Konnte neulich erstellten Commit nicht analysieren."
 
-#: builtin/commit.c:1482
+#: builtin/commit.c:1478
 msgid "detached HEAD"
 msgstr "losgelöster HEAD"
 
-#: builtin/commit.c:1485
+#: builtin/commit.c:1481
 msgid " (root-commit)"
 msgstr " (Basis-Commit)"
 
-#: builtin/commit.c:1578
+#: builtin/commit.c:1574
 msgid "suppress summary after successful commit"
 msgstr "Zusammenfassung nach erfolgreichem Commit unterdrücken"
 
-#: builtin/commit.c:1579
+#: builtin/commit.c:1575
 msgid "show diff in commit message template"
 msgstr "Unterschiede in Commit-Beschreibungsvorlage anzeigen"
 
-#: builtin/commit.c:1581
+#: builtin/commit.c:1577
 msgid "Commit message options"
 msgstr "Optionen für Commit-Beschreibung"
 
-#: builtin/commit.c:1582 builtin/tag.c:601
+#: builtin/commit.c:1578 builtin/tag.c:601
 msgid "read message from file"
 msgstr "Beschreibung von Datei lesen"
 
-#: builtin/commit.c:1583
+#: builtin/commit.c:1579
 msgid "author"
 msgstr "Autor"
 
-#: builtin/commit.c:1583
+#: builtin/commit.c:1579
 msgid "override author for commit"
 msgstr "Autor eines Commits überschreiben"
 
-#: builtin/commit.c:1584 builtin/gc.c:275
+#: builtin/commit.c:1580 builtin/gc.c:275
 msgid "date"
 msgstr "Datum"
 
-#: builtin/commit.c:1584
+#: builtin/commit.c:1580
 msgid "override date for commit"
 msgstr "Datum eines Commits überschreiben"
 
-#: builtin/commit.c:1585 builtin/merge.c:218 builtin/notes.c:391
+#: builtin/commit.c:1581 builtin/merge.c:218 builtin/notes.c:391
 #: builtin/notes.c:554 builtin/tag.c:599
 msgid "message"
 msgstr "Beschreibung"
 
-#: builtin/commit.c:1585
+#: builtin/commit.c:1581
 msgid "commit message"
 msgstr "Commit-Beschreibung"
 
-#: builtin/commit.c:1586
+#: builtin/commit.c:1582
 msgid "reuse and edit message from specified commit"
 msgstr "Beschreibung des angegebenen Commits wiederverwenden und editieren"
 
-#: builtin/commit.c:1587
+#: builtin/commit.c:1583
 msgid "reuse message from specified commit"
 msgstr "Beschreibung des angegebenen Commits wiederverwenden"
 
-#: builtin/commit.c:1588
+#: builtin/commit.c:1584
 msgid "use autosquash formatted message to fixup specified commit"
 msgstr ""
 "eine automatisch zusammengesetzte Beschreibung zum Nachbessern des "
 "angegebenen Commits verwenden"
 
-#: builtin/commit.c:1589
+#: builtin/commit.c:1585
 msgid "use autosquash formatted message to squash specified commit"
 msgstr ""
 "eine automatisch zusammengesetzte Beschreibung beim \"squash\" des "
 "angegebenen Commits verwenden"
 
-#: builtin/commit.c:1590
+#: builtin/commit.c:1586
 msgid "the commit is authored by me now (used with -C/-c/--amend)"
 msgstr "Sie als Autor des Commits setzen (verwendet mit -C/-c/--amend)"
 
-#: builtin/commit.c:1591 builtin/log.c:1191 builtin/revert.c:86
+#: builtin/commit.c:1587 builtin/log.c:1191 builtin/revert.c:86
 msgid "add Signed-off-by:"
 msgstr "'Signed-off-by:'-Zeile hinzufügen"
 
-#: builtin/commit.c:1592
+#: builtin/commit.c:1588
 msgid "use specified template file"
 msgstr "angegebene Vorlagendatei verwenden"
 
-#: builtin/commit.c:1593
+#: builtin/commit.c:1589
 msgid "force edit of commit"
 msgstr "Bearbeitung des Commits erzwingen"
 
-#: builtin/commit.c:1594
+#: builtin/commit.c:1590
 msgid "default"
 msgstr "Standard"
 
-#: builtin/commit.c:1594 builtin/tag.c:604
+#: builtin/commit.c:1590 builtin/tag.c:604
 msgid "how to strip spaces and #comments from message"
 msgstr ""
 "wie Leerzeichen und #Kommentare von der Beschreibung getrennt werden sollen"
 
-#: builtin/commit.c:1595
+#: builtin/commit.c:1591
 msgid "include status in commit message template"
 msgstr "Status in die Commit-Beschreibungsvorlage einfügen"
 
-#: builtin/commit.c:1596 builtin/merge.c:225 builtin/revert.c:92
+#: builtin/commit.c:1592 builtin/merge.c:225 builtin/revert.c:92
 #: builtin/tag.c:605
 msgid "key-id"
 msgstr "GPG-Schlüsselkennung"
 
-#: builtin/commit.c:1597 builtin/merge.c:226 builtin/revert.c:93
+#: builtin/commit.c:1593 builtin/merge.c:226 builtin/revert.c:93
 msgid "GPG sign commit"
 msgstr "Commit mit GPG signieren"
 
-#: builtin/commit.c:1600
+#: builtin/commit.c:1596
 msgid "Commit contents options"
 msgstr "Optionen für Commit-Inhalt"
 
-#: builtin/commit.c:1601
+#: builtin/commit.c:1597
 msgid "commit all changed files"
 msgstr "alle geänderten Dateien committen"
 
-#: builtin/commit.c:1602
+#: builtin/commit.c:1598
 msgid "add specified files to index for commit"
 msgstr "die angegebenen Dateien zusätzlich zum Commit vormerken"
 
-#: builtin/commit.c:1603
+#: builtin/commit.c:1599
 msgid "interactively add files"
 msgstr "interaktives Hinzufügen von Dateien"
 
-#: builtin/commit.c:1604
+#: builtin/commit.c:1600
 msgid "interactively add changes"
 msgstr "interaktives Hinzufügen von Änderungen"
 
-#: builtin/commit.c:1605
+#: builtin/commit.c:1601
 msgid "commit only specified files"
 msgstr "nur die angegebenen Dateien committen"
 
-#: builtin/commit.c:1606
+#: builtin/commit.c:1602
 msgid "bypass pre-commit hook"
 msgstr "\"pre-commit hook\" umgehen"
 
-#: builtin/commit.c:1607
+#: builtin/commit.c:1603
 msgid "show what would be committed"
 msgstr "anzeigen, was committet werden würde"
 
-#: builtin/commit.c:1618
+#: builtin/commit.c:1614
 msgid "amend previous commit"
 msgstr "vorherigen Commit ändern"
 
-#: builtin/commit.c:1619
+#: builtin/commit.c:1615
 msgid "bypass post-rewrite hook"
 msgstr "\"post-rewrite hook\" umgehen"
 
-#: builtin/commit.c:1624
+#: builtin/commit.c:1620
 msgid "ok to record an empty change"
 msgstr "Aufzeichnung einer leeren Änderung erlauben"
 
-#: builtin/commit.c:1626
+#: builtin/commit.c:1622
 msgid "ok to record a change with an empty message"
 msgstr "Aufzeichnung einer Änderung mit einer leeren Beschreibung erlauben"
 
-#: builtin/commit.c:1655
+#: builtin/commit.c:1651
 msgid "could not parse HEAD commit"
 msgstr "Konnte Commit von HEAD nicht analysieren."
 
-#: builtin/commit.c:1694 builtin/merge.c:519
+#: builtin/commit.c:1690 builtin/merge.c:519
 #, c-format
 msgid "could not open '%s' for reading"
 msgstr "Konnte '%s' nicht zum Lesen öffnen."
 
-#: builtin/commit.c:1701
+#: builtin/commit.c:1697
 #, c-format
 msgid "Corrupt MERGE_HEAD file (%s)"
 msgstr "Beschädigte MERGE_HEAD-Datei (%s)"
 
-#: builtin/commit.c:1708
+#: builtin/commit.c:1704
 msgid "could not read MERGE_MODE"
 msgstr "Konnte MERGE_MODE nicht lesen"
 
-#: builtin/commit.c:1727
+#: builtin/commit.c:1723
 #, c-format
 msgid "could not read commit message: %s"
 msgstr "Konnte Commit-Beschreibung nicht lesen: %s"
 
-#: builtin/commit.c:1738
+#: builtin/commit.c:1734
 #, c-format
 msgid "Aborting commit; you did not edit the message.\n"
 msgstr "Commit abgebrochen; Sie haben die Beschreibung nicht editiert.\n"
 
-#: builtin/commit.c:1743
+#: builtin/commit.c:1739
 #, c-format
 msgid "Aborting commit due to empty commit message.\n"
 msgstr "Commit aufgrund leerer Beschreibung abgebrochen.\n"
 
-#: builtin/commit.c:1758 builtin/merge.c:851 builtin/merge.c:876
+#: builtin/commit.c:1754 builtin/merge.c:851 builtin/merge.c:876
 msgid "failed to write commit object"
 msgstr "Fehler beim Schreiben des Commit-Objektes."
 
-#: builtin/commit.c:1791
+#: builtin/commit.c:1787
 msgid ""
 "Repository has been updated, but unable to write\n"
 "new_index file. Check that disk is not full and quota is\n"
 "not exceeded, and then \"git reset HEAD\" to recover."
 msgstr ""
 "Das Repository wurde aktualisiert, aber die \"new_index\"-Datei\n"
 "konnte nicht geschrieben werden. Prüfen Sie, dass Ihre Festplatte nicht\n"
 "voll und Ihr Kontingent nicht aufgebraucht ist und führen Sie\n"
 "anschließend \"git reset HEAD\" zu Wiederherstellung aus."
 
 #: builtin/config.c:8
-msgid "git config [options]"
-msgstr "git config [Optionen]"
+msgid "git config [<options>]"
+msgstr "git config [<Optionen>]"
 
 #: builtin/config.c:53
 msgid "Config file location"
 msgstr "Ort der Konfigurationsdatei"
 
 #: builtin/config.c:54
@@ -5031,18 +5068,18 @@
 
 #: builtin/count-objects.c:65
 msgid "print sizes in human readable format"
 msgstr "gibt Größenangaben in menschenlesbaren Format aus"
 
 #: builtin/describe.c:17
-msgid "git describe [options] <commit-ish>*"
-msgstr "git describe [Optionen] <commit-ish>*"
+msgid "git describe [<options>] [<commit-ish>...]"
+msgstr "git describe [<Optionen>] [<Commit-Angabe>...]"
 
 #: builtin/describe.c:18
-msgid "git describe [options] --dirty"
-msgstr "git describe [Optionen] --dirty"
+msgid "git describe [<options>] --dirty"
+msgstr "git describe [<Optionen>] --dirty"
 
 #: builtin/describe.c:217
 #, c-format
 msgid "annotated tag %s not available"
 msgstr "annotiertes Tag %s ist nicht verfügbar"
 
@@ -5175,13 +5212,13 @@
 msgid "--dirty is incompatible with commit-ishes"
 msgstr "Die Option --dirty kann nicht mit Commits verwendet werden."
 
 #: builtin/diff.c:86
 #, c-format
 msgid "'%s': not a regular file or symlink"
-msgstr "'%s': keine reguläre Datei oder symbolischer Verweis"
+msgstr "'%s': keine reguläre Datei oder symbolische Verknüpfung"
 
 #: builtin/diff.c:237
 #, c-format
 msgid "invalid option: %s"
 msgstr "Ungültige Option: %s"
 
@@ -5253,294 +5290,296 @@
 msgstr "Refspec auf exportierte Referenzen anwenden"
 
 #: builtin/fast-export.c:999
 msgid "anonymize output"
 msgstr "Ausgabe anonymisieren"
 
-#: builtin/fetch.c:20
+#: builtin/fetch.c:19
 msgid "git fetch [<options>] [<repository> [<refspec>...]]"
 msgstr "git fetch [<Optionen>] [<Repository> [<Refspec>...]]"
 
-#: builtin/fetch.c:21
+#: builtin/fetch.c:20
 msgid "git fetch [<options>] <group>"
 msgstr "git fetch [<Optionen>] <Gruppe>"
 
-#: builtin/fetch.c:22
+#: builtin/fetch.c:21
 msgid "git fetch --multiple [<options>] [(<repository> | <group>)...]"
 msgstr "git fetch --multiple [<Optionen>] [(<Repository> | <Gruppe>)...]"
 
-#: builtin/fetch.c:23
+#: builtin/fetch.c:22
 msgid "git fetch --all [<options>]"
 msgstr "git fetch --all [<Optionen>]"
 
-#: builtin/fetch.c:90
+#: builtin/fetch.c:89
 msgid "fetch from all remotes"
 msgstr "fordert von allen Remote-Repositories an"
 
-#: builtin/fetch.c:92
+#: builtin/fetch.c:91
 msgid "append to .git/FETCH_HEAD instead of overwriting"
 msgstr "an .git/FETCH_HEAD anhängen, anstatt zu überschreiben"
 
-#: builtin/fetch.c:94
+#: builtin/fetch.c:93
 msgid "path to upload pack on remote end"
 msgstr "Pfad des Programms zum Hochladen von Paketen auf der Gegenseite"
 
-#: builtin/fetch.c:95
+#: builtin/fetch.c:94
 msgid "force overwrite of local branch"
 msgstr "das Überschreiben von lokalen Branches erzwingen"
 
-#: builtin/fetch.c:97
+#: builtin/fetch.c:96
 msgid "fetch from multiple remotes"
 msgstr "von mehreren Remote-Repositories anfordern"
 
-#: builtin/fetch.c:99
+#: builtin/fetch.c:98
 msgid "fetch all tags and associated objects"
 msgstr "alle Tags und verbundene Objekte anfordern"
 
-#: builtin/fetch.c:101
+#: builtin/fetch.c:100
 msgid "do not fetch all tags (--no-tags)"
 msgstr "nicht alle Tags anfordern (--no-tags)"
 
-#: builtin/fetch.c:103
+#: builtin/fetch.c:102
 msgid "prune remote-tracking branches no longer on remote"
 msgstr ""
 "Remote-Tracking-Branches entfernen, die sich nicht mehr im Remote-Repository "
 "befinden"
 
-#: builtin/fetch.c:104
+#: builtin/fetch.c:103
 msgid "on-demand"
 msgstr "bei-Bedarf"
 
-#: builtin/fetch.c:105
+#: builtin/fetch.c:104
 msgid "control recursive fetching of submodules"
 msgstr "rekursive Anforderungen von Submodulen kontrollieren"
 
-#: builtin/fetch.c:109
+#: builtin/fetch.c:108
 msgid "keep downloaded pack"
 msgstr "heruntergeladenes Paket behalten"
 
-#: builtin/fetch.c:111
+#: builtin/fetch.c:110
 msgid "allow updating of HEAD ref"
 msgstr "Aktualisierung der \"HEAD\"-Referenz erlauben"
 
-#: builtin/fetch.c:114
+#: builtin/fetch.c:113
 msgid "deepen history of shallow clone"
 msgstr ""
 "die Historie eines Klons mit unvollständiger Historie (shallow) vertiefen"
 
-#: builtin/fetch.c:116
+#: builtin/fetch.c:115
 msgid "convert to a complete repository"
 msgstr "zu einem vollständigen Repository konvertieren"
 
-#: builtin/fetch.c:118 builtin/log.c:1208
+#: builtin/fetch.c:117 builtin/log.c:1208
 msgid "dir"
 msgstr "Verzeichnis"
 
-#: builtin/fetch.c:119
+#: builtin/fetch.c:118
 msgid "prepend this to submodule path output"
 msgstr "dies an die Ausgabe der Submodul-Pfade voranstellen"
 
-#: builtin/fetch.c:122
+#: builtin/fetch.c:121
 msgid "default mode for recursion"
 msgstr "Standard-Modus für Rekursion"
 
-#: builtin/fetch.c:124
+#: builtin/fetch.c:123
 msgid "accept refs that update .git/shallow"
 msgstr "Referenzen, die .git/shallow aktualisieren, akzeptieren"
 
-#: builtin/fetch.c:125
+#: builtin/fetch.c:124
 msgid "refmap"
 msgstr "Refmap"
 
-#: builtin/fetch.c:126
+#: builtin/fetch.c:125
 msgid "specify fetch refmap"
 msgstr "Refmap für 'fetch' angeben"
 
-#: builtin/fetch.c:376
+#: builtin/fetch.c:375
 msgid "Couldn't find remote ref HEAD"
 msgstr "Konnte Remote-Referenz von HEAD nicht finden."
 
-#: builtin/fetch.c:454
+#: builtin/fetch.c:455
 #, c-format
 msgid "object %s not found"
 msgstr "Objekt %s nicht gefunden"
 
-#: builtin/fetch.c:459
+#: builtin/fetch.c:460
 msgid "[up to date]"
 msgstr "[aktuell]"
 
-#: builtin/fetch.c:473
+#: builtin/fetch.c:474
 #, c-format
 msgid "! %-*s %-*s -> %s  (can't fetch in current branch)"
 msgstr ""
 "! %-*s %-*s -> %s  (kann \"fetch\" im aktuellen Branch nicht ausführen)"
 
-#: builtin/fetch.c:474 builtin/fetch.c:560
+#: builtin/fetch.c:475 builtin/fetch.c:561
 msgid "[rejected]"
 msgstr "[zurückgewiesen]"
 
-#: builtin/fetch.c:485
+#: builtin/fetch.c:486
 msgid "[tag update]"
 msgstr "[Tag Aktualisierung]"
 
-#: builtin/fetch.c:487 builtin/fetch.c:522 builtin/fetch.c:540
+#: builtin/fetch.c:488 builtin/fetch.c:523 builtin/fetch.c:541
 msgid "  (unable to update local ref)"
 msgstr "  (kann lokale Referenz nicht aktualisieren)"
 
-#: builtin/fetch.c:505
+#: builtin/fetch.c:506
 msgid "[new tag]"
 msgstr "[neues Tag]"
 
-#: builtin/fetch.c:508
+#: builtin/fetch.c:509
 msgid "[new branch]"
 msgstr "[neuer Branch]"
 
-#: builtin/fetch.c:511
+#: builtin/fetch.c:512
 msgid "[new ref]"
 msgstr "[neue Referenz]"
 
-#: builtin/fetch.c:556
+#: builtin/fetch.c:557
 msgid "unable to update local ref"
 msgstr "kann lokale Referenz nicht aktualisieren"
 
-#: builtin/fetch.c:556
+#: builtin/fetch.c:557
 msgid "forced update"
 msgstr "Aktualisierung erzwungen"
 
-#: builtin/fetch.c:562
+#: builtin/fetch.c:563
 msgid "(non-fast-forward)"
 msgstr "(kein Vorspulen)"
 
-#: builtin/fetch.c:595 builtin/fetch.c:828
+#: builtin/fetch.c:596 builtin/fetch.c:829
 #, c-format
 msgid "cannot open %s: %s\n"
 msgstr "kann %s nicht öffnen: %s\n"
 
-#: builtin/fetch.c:604
+#: builtin/fetch.c:605
 #, c-format
 msgid "%s did not send all necessary objects\n"
 msgstr "%s hat nicht alle erforderlichen Objekte gesendet\n"
 
-#: builtin/fetch.c:622
+#: builtin/fetch.c:623
 #, c-format
 msgid "reject %s because shallow roots are not allowed to be updated"
 msgstr ""
 "%s wurde zurückgewiesen, da Ursprungs-Commits von Repositoriesmit "
 "unvollständiger Historie (shallow) nicht aktualisiert werden dürfen."
 
-#: builtin/fetch.c:710 builtin/fetch.c:793
+#: builtin/fetch.c:711 builtin/fetch.c:794
 #, c-format
 msgid "From %.*s\n"
 msgstr "Von %.*s\n"
 
-#: builtin/fetch.c:721
+#: builtin/fetch.c:722
 #, c-format
 msgid ""
 "some local refs could not be updated; try running\n"
 " 'git remote prune %s' to remove any old, conflicting branches"
 msgstr ""
 "Einige lokale Referenzen konnten nicht aktualisiert werden; versuchen Sie\n"
 "'git remote prune %s', um jeden älteren, widersprüchlichen Branch zu löschen."
 
-#: builtin/fetch.c:773
+#: builtin/fetch.c:774
 #, c-format
 msgid "   (%s will become dangling)"
 msgstr "   (%s wird unreferenziert)"
 
-#: builtin/fetch.c:774
+#: builtin/fetch.c:775
 #, c-format
 msgid "   (%s has become dangling)"
 msgstr "   (%s wurde unreferenziert)"
 
-#: builtin/fetch.c:798
+#: builtin/fetch.c:799
 msgid "[deleted]"
 msgstr "[gelöscht]"
 
-#: builtin/fetch.c:799 builtin/remote.c:1060
+#: builtin/fetch.c:800 builtin/remote.c:1060
 msgid "(none)"
 msgstr "(nichts)"
 
-#: builtin/fetch.c:818
+#: builtin/fetch.c:819
 #, c-format
 msgid "Refusing to fetch into current branch %s of non-bare repository"
 msgstr ""
 "Der \"fetch\" in den aktuellen Branch %s von einem nicht-Bare-Repository "
 "wurde verweigert."
 
-#: builtin/fetch.c:837
+#: builtin/fetch.c:838
 #, c-format
 msgid "Option \"%s\" value \"%s\" is not valid for %s"
 msgstr "Option \"%s\" Wert \"%s\" ist nicht gültig für %s"
 
-#: builtin/fetch.c:840
+#: builtin/fetch.c:841
 #, c-format
 msgid "Option \"%s\" is ignored for %s\n"
 msgstr "Option \"%s\" wird ignoriert für %s\n"
 
-#: builtin/fetch.c:896
+#: builtin/fetch.c:897
 #, c-format
 msgid "Don't know how to fetch from %s"
 msgstr "Weiß nicht wie von %s angefordert wird."
 
-#: builtin/fetch.c:1058
+#: builtin/fetch.c:1059
 #, c-format
 msgid "Fetching %s\n"
 msgstr "Fordere an von %s\n"
 
-#: builtin/fetch.c:1060 builtin/remote.c:90
+#: builtin/fetch.c:1061 builtin/remote.c:90
 #, c-format
 msgid "Could not fetch %s"
 msgstr "Konnte nicht von %s anfordern"
 
-#: builtin/fetch.c:1078
+#: builtin/fetch.c:1079
 msgid ""
 "No remote repository specified.  Please, specify either a URL or a\n"
 "remote name from which new revisions should be fetched."
 msgstr ""
 "Kein Remote-Repository angegeben. Bitte geben Sie entweder eine URL\n"
 "oder den Namen des Remote-Repositories an, von welchem neue\n"
 "Commits angefordert werden sollen."
 
-#: builtin/fetch.c:1101
+#: builtin/fetch.c:1102
 msgid "You need to specify a tag name."
 msgstr "Sie müssen den Namen des Tags angeben."
 
-#: builtin/fetch.c:1143
+#: builtin/fetch.c:1144
 msgid "--depth and --unshallow cannot be used together"
 msgstr ""
 "Die Optionen --depth und --unshallow können nicht gemeinsam verwendet werden."
 
-#: builtin/fetch.c:1145
+#: builtin/fetch.c:1146
 msgid "--unshallow on a complete repository does not make sense"
 msgstr ""
 "Die Option --unshallow kann nicht in einem Repository mit unvollständiger "
 "Historie verwendet werden."
 
-#: builtin/fetch.c:1168
+#: builtin/fetch.c:1169
 msgid "fetch --all does not take a repository argument"
 msgstr "fetch --all akzeptiert kein Repository als Argument"
 
-#: builtin/fetch.c:1170
+#: builtin/fetch.c:1171
 msgid "fetch --all does not make sense with refspecs"
 msgstr "fetch --all kann nicht mit Refspecs verwendet werden."
 
-#: builtin/fetch.c:1181
+#: builtin/fetch.c:1182
 #, c-format
 msgid "No such remote or remote group: %s"
 msgstr "Kein Remote-Repository (einzeln oder Gruppe): %s"
 
-#: builtin/fetch.c:1189
+#: builtin/fetch.c:1190
 msgid "Fetching a group and specifying refspecs does not make sense"
 msgstr ""
 "Das Abholen einer Gruppe von Remote-Repositories kann nicht mit der Angabe\n"
 "von Refspecs verwendet werden."
 
 #: builtin/fmt-merge-msg.c:13
-msgid "git fmt-merge-msg [-m <message>] [--log[=<n>]|--no-log] [--file <file>]"
+msgid ""
+"git fmt-merge-msg [-m <message>] [--log[=<n>] | --no-log] [--file <file>]"
 msgstr ""
-"git fmt-merge-msg [-m <Beschreibung>] [--log[=<n>]|--no-log] [--file <Datei>]"
+"git fmt-merge-msg [-m <Beschreibung>] [--log[=<n>] | --no-log] [--file "
+"<Datei>]"
 
 #: builtin/fmt-merge-msg.c:662 builtin/fmt-merge-msg.c:665 builtin/grep.c:698
 #: builtin/merge.c:198 builtin/repack.c:178 builtin/repack.c:182
 #: builtin/show-branch.c:657 builtin/show-ref.c:178 builtin/tag.c:590
 #: parse-options.h:132 parse-options.h:239
 msgid "n"
@@ -5563,67 +5602,67 @@
 msgstr "<Text> als Beschreibungsanfang verwenden"
 
 #: builtin/fmt-merge-msg.c:671
 msgid "file to read from"
 msgstr "Datei zum Einlesen"
 
-#: builtin/for-each-ref.c:676
+#: builtin/for-each-ref.c:675
 msgid "unable to parse format"
 msgstr "Konnte Format nicht parsen."
 
-#: builtin/for-each-ref.c:1064
-msgid "git for-each-ref [options] [<pattern>]"
-msgstr "git for-each-ref [Optionen] [<Muster>]"
+#: builtin/for-each-ref.c:1063
+msgid "git for-each-ref [<options>] [<pattern>]"
+msgstr "git for-each-ref [<Optionen>] [<Muster>]"
 
-#: builtin/for-each-ref.c:1079
+#: builtin/for-each-ref.c:1078
 msgid "quote placeholders suitably for shells"
 msgstr "Platzhalter als Shell-String formatieren"
 
-#: builtin/for-each-ref.c:1081
+#: builtin/for-each-ref.c:1080
 msgid "quote placeholders suitably for perl"
 msgstr "Platzhalter als Perl-String formatieren"
 
-#: builtin/for-each-ref.c:1083
+#: builtin/for-each-ref.c:1082
 msgid "quote placeholders suitably for python"
 msgstr "Platzhalter als Python-String formatieren"
 
-#: builtin/for-each-ref.c:1085
+#: builtin/for-each-ref.c:1084
 msgid "quote placeholders suitably for Tcl"
 msgstr "Platzhalter als Tcl-String formatieren"
 
-#: builtin/for-each-ref.c:1088
+#: builtin/for-each-ref.c:1087
 msgid "show only <n> matched refs"
 msgstr "nur <n> passende Referenzen anzeigen"
 
-#: builtin/for-each-ref.c:1089 builtin/replace.c:438
+#: builtin/for-each-ref.c:1088 builtin/replace.c:438
 msgid "format"
 msgstr "Format"
 
-#: builtin/for-each-ref.c:1089
+#: builtin/for-each-ref.c:1088
 msgid "format to use for the output"
 msgstr "für die Ausgabe zu verwendendes Format"
 
-#: builtin/for-each-ref.c:1090
+#: builtin/for-each-ref.c:1089
 msgid "key"
 msgstr "Schüssel"
 
-#: builtin/for-each-ref.c:1091
+#: builtin/for-each-ref.c:1090
 msgid "field name to sort on"
 msgstr "sortiere nach diesem Feld"
 
-#: builtin/fsck.c:147 builtin/prune.c:136
+#: builtin/fsck.c:147 builtin/prune.c:137
 msgid "Checking connectivity"
 msgstr "Prüfe Konnektivität"
 
 #: builtin/fsck.c:540
 msgid "Checking object directories"
 msgstr "Prüfe Objekt-Verzeichnisse"
 
 #: builtin/fsck.c:603
-msgid "git fsck [options] [<object>...]"
-msgstr "git fsck [Optionen] [<Objekt>...]"
+msgid "git fsck [<options>] [<object>...]"
+msgstr "git fsck [<Optionen>] [<Objekt>...]"
 
 #: builtin/fsck.c:609
 msgid "show unreachable objects"
 msgstr "unerreichbare Objekte anzeigen"
 
 #: builtin/fsck.c:610
@@ -5664,14 +5703,14 @@
 
 #: builtin/fsck.c:669
 msgid "Checking objects"
 msgstr "Prüfe Objekte"
 
 #: builtin/gc.c:24
-msgid "git gc [options]"
-msgstr "git gc [Optionen]"
+msgid "git gc [<options>]"
+msgstr "git gc [<Optionen>]"
 
 #: builtin/gc.c:79
 #, c-format
 msgid "Invalid gc.pruneexpire: '%s'"
 msgstr "Ungültiges Wert für \"gc.pruneexpire\": '%s'"
 
@@ -5730,14 +5769,14 @@
 "There are too many unreachable loose objects; run 'git prune' to remove them."
 msgstr ""
 "Es gibt zu viele unerreichbare lose Objekte; führen Sie 'git prune' aus, um "
 "diese zu löschen."
 
 #: builtin/grep.c:23
-msgid "git grep [options] [-e] <pattern> [<rev>...] [[--] <path>...]"
-msgstr "git grep [Optionen] [-e] <Muster> [<Commit>...] [[--] <Pfad>...]"
+msgid "git grep [<options>] [-e] <pattern> [<rev>...] [[--] <path>...]"
+msgstr "git grep [<Optionen>] [-e] <Muster> [<Commit>...] [[--] <Pfad>...]"
 
 #: builtin/grep.c:218
 #, c-format
 msgid "grep: failed to create thread: %s"
 msgstr "grep: Fehler beim Erzeugen eines Thread: %s"
 
@@ -5771,14 +5810,14 @@
 
 #: builtin/grep.c:642
 msgid "search in both tracked and untracked files"
 msgstr "in versionierten und unversionierten Dateien suchen"
 
 #: builtin/grep.c:644
-msgid "search also in ignored files"
-msgstr "auch in ignorierten Dateien suchen"
+msgid "ignore files specified via '.gitignore'"
+msgstr "Dateien, die über '.gitignore' angegeben sind, ignorieren"
 
 #: builtin/grep.c:647
 msgid "show non-matching lines"
 msgstr "Zeilen ohne Übereinstimmungen anzeigen"
 
 #: builtin/grep.c:649
@@ -5968,23 +6007,23 @@
 #: builtin/grep.c:908
 msgid "both --cached and trees are given."
 msgstr "Die Option --cached kann nicht mit \"Tree\"-Objekten verwendet werden."
 
 #: builtin/hash-object.c:82
 msgid ""
-"git hash-object [-t <type>] [-w] [--path=<file>|--no-filters] [--stdin] [--] "
-"<file>..."
+"git hash-object [-t <type>] [-w] [--path=<file> | --no-filters] [--stdin] "
+"[--] <file>..."
 msgstr ""
-"git hash-object [-t <Art>] [-w] [--path=<Datei>|--no-filters] [--stdin] [--] "
-"<Datei>..."
+"git hash-object [-t <Art>] [-w] [--path=<Datei> | --no-filters] [--stdin] "
+"[--] <Datei>..."
 
 #: builtin/hash-object.c:83
 msgid "git hash-object  --stdin-paths < <list-of-paths>"
 msgstr "git hash-object  --stdin-paths < <Liste-von-Pfaden>"
 
-#: builtin/hash-object.c:94 builtin/tag.c:610
+#: builtin/hash-object.c:94 builtin/tag.c:612
 msgid "type"
 msgstr "Art"
 
 #: builtin/hash-object.c:94
 msgid "object type"
 msgstr "Art des Objektes"
@@ -6030,14 +6069,14 @@
 
 #: builtin/help.c:46
 msgid "show info page"
 msgstr "Info-Seite anzeigen"
 
 #: builtin/help.c:52
-msgid "git help [--all] [--guides] [--man|--web|--info] [command]"
-msgstr "git help [--all] [--guides] [--man|--web|--info] [Kommando]"
+msgid "git help [--all] [--guides] [--man | --web | --info] [<command>]"
+msgstr "git help [--all] [--guides] [--man | --web | --info] [<Kommando>]"
 
 #: builtin/help.c:64
 #, c-format
 msgid "unrecognized help format '%s'"
 msgstr "nicht erkanntes Hilfeformat: %s"
 
@@ -6240,14 +6279,14 @@
 #: builtin/index-pack.c:686 builtin/index-pack.c:692 builtin/index-pack.c:715
 #: builtin/index-pack.c:749 builtin/index-pack.c:758
 #, c-format
 msgid "SHA1 COLLISION FOUND WITH %s !"
 msgstr "SHA1 KOLLISION MIT %s GEFUNDEN !"
 
-#: builtin/index-pack.c:689 builtin/pack-objects.c:164
-#: builtin/pack-objects.c:256
+#: builtin/index-pack.c:689 builtin/pack-objects.c:162
+#: builtin/pack-objects.c:254
 #, c-format
 msgid "unable to read %s"
 msgstr "kann %s nicht lesen"
 
 #: builtin/index-pack.c:755
 #, c-format
@@ -6328,103 +6367,103 @@
 #, c-format
 msgid "pack has %d unresolved delta"
 msgid_plural "pack has %d unresolved deltas"
 msgstr[0] "Paket hat %d unaufgelöste Unterschied"
 msgstr[1] "Paket hat %d unaufgelöste Unterschiede"
 
-#: builtin/index-pack.c:1220
+#: builtin/index-pack.c:1219
 #, c-format
 msgid "unable to deflate appended object (%d)"
 msgstr "Konnte angehängtes Objekt (%d) nicht komprimieren"
 
-#: builtin/index-pack.c:1299
+#: builtin/index-pack.c:1298
 #, c-format
 msgid "local object %s is corrupt"
 msgstr "lokales Objekt %s ist beschädigt"
 
-#: builtin/index-pack.c:1323
+#: builtin/index-pack.c:1322
 msgid "error while closing pack file"
 msgstr "Fehler beim Schließen der Paketdatei"
 
-#: builtin/index-pack.c:1336
+#: builtin/index-pack.c:1335
 #, c-format
 msgid "cannot write keep file '%s'"
 msgstr "Kann Paketbeschreibungsdatei '%s' nicht schreiben"
 
-#: builtin/index-pack.c:1344
+#: builtin/index-pack.c:1343
 #, c-format
 msgid "cannot close written keep file '%s'"
 msgstr "Kann eben erstellte Paketbeschreibungsdatei '%s' nicht schließen"
 
-#: builtin/index-pack.c:1357
+#: builtin/index-pack.c:1356
 msgid "cannot store pack file"
 msgstr "Kann Paketdatei nicht speichern"
 
-#: builtin/index-pack.c:1368
+#: builtin/index-pack.c:1367
 msgid "cannot store index file"
 msgstr "Kann Indexdatei nicht speichern"
 
-#: builtin/index-pack.c:1401
+#: builtin/index-pack.c:1400
 #, c-format
 msgid "bad pack.indexversion=%<PRIu32>"
 msgstr "\"pack.indexversion=%<PRIu32>\" ist ungültig"
 
-#: builtin/index-pack.c:1407
+#: builtin/index-pack.c:1406
 #, c-format
 msgid "invalid number of threads specified (%d)"
 msgstr "ungültige Anzahl von Threads angegeben (%d)"
 
-#: builtin/index-pack.c:1411 builtin/index-pack.c:1590
+#: builtin/index-pack.c:1410 builtin/index-pack.c:1589
 #, c-format
 msgid "no threads support, ignoring %s"
 msgstr "keine Unterstützung von Threads, '%s' wird ignoriert"
 
-#: builtin/index-pack.c:1469
+#: builtin/index-pack.c:1468
 #, c-format
 msgid "Cannot open existing pack file '%s'"
 msgstr "Kann existierende Paketdatei '%s' nicht öffnen"
 
-#: builtin/index-pack.c:1471
+#: builtin/index-pack.c:1470
 #, c-format
 msgid "Cannot open existing pack idx file for '%s'"
 msgstr "Kann existierende Indexdatei für Paket '%s' nicht öffnen"
 
-#: builtin/index-pack.c:1518
+#: builtin/index-pack.c:1517
 #, c-format
 msgid "non delta: %d object"
 msgid_plural "non delta: %d objects"
 msgstr[0] "kein Unterschied: %d Objekt"
 msgstr[1] "kein Unterschied: %d Objekte"
 
-#: builtin/index-pack.c:1525
+#: builtin/index-pack.c:1524
 #, c-format
 msgid "chain length = %d: %lu object"
 msgid_plural "chain length = %d: %lu objects"
 msgstr[0] "Länge der Objekt-Liste = %d: %lu Objekt"
 msgstr[1] "Länge der Objekt-Liste = %d: %lu Objekte"
 
-#: builtin/index-pack.c:1554
+#: builtin/index-pack.c:1553
 msgid "Cannot come back to cwd"
 msgstr "Kann nicht zurück zu Arbeitsverzeichnis wechseln"
 
-#: builtin/index-pack.c:1602 builtin/index-pack.c:1605
-#: builtin/index-pack.c:1617 builtin/index-pack.c:1621
+#: builtin/index-pack.c:1601 builtin/index-pack.c:1604
+#: builtin/index-pack.c:1616 builtin/index-pack.c:1620
 #, c-format
 msgid "bad %s"
 msgstr "%s ist ungültig"
 
-#: builtin/index-pack.c:1635
+#: builtin/index-pack.c:1634
 msgid "--fix-thin cannot be used without --stdin"
 msgstr "Die Option --fix-thin kann nicht ohne --stdin verwendet werden."
 
-#: builtin/index-pack.c:1639 builtin/index-pack.c:1648
+#: builtin/index-pack.c:1638 builtin/index-pack.c:1647
 #, c-format
 msgid "packfile name '%s' does not end with '.pack'"
 msgstr "Name der Paketdatei '%s' endet nicht mit '.pack'"
 
-#: builtin/index-pack.c:1656
+#: builtin/index-pack.c:1655
 msgid "--verify with no packfile name given"
 msgstr "Die Option --verify wurde ohne Namen der Paketdatei angegeben."
 
 #: builtin/init-db.c:35
 #, c-format
 msgid "Could not make %s writable by group"
@@ -6455,18 +6494,18 @@
 msgid "cannot readlink '%s'"
 msgstr "kann Verweis '%s' nicht lesen"
 
 #: builtin/init-db.c:99
 #, c-format
 msgid "insanely long symlink %s"
-msgstr "zu langer symbolischer Verweis %s"
+msgstr "zu lange symbolische Verknüpfung %s"
 
 #: builtin/init-db.c:102
 #, c-format
 msgid "cannot symlink '%s' '%s'"
-msgstr "kann symbolischen Verweis '%s' auf '%s' nicht erstellen"
+msgstr "kann symbolische Verknüpfung '%s' auf '%s' nicht erstellen"
 
 #: builtin/init-db.c:106
 #, c-format
 msgid "cannot copy '%s' to '%s'"
 msgstr "kann '%s' nicht nach '%s' kopieren"
 
@@ -6530,16 +6569,16 @@
 msgid " shared"
 msgstr " gemeinsames"
 
 #: builtin/init-db.c:475
 msgid ""
 "git init [-q | --quiet] [--bare] [--template=<template-directory>] [--"
-"shared[=<permissions>]] [directory]"
+"shared[=<permissions>]] [<directory>]"
 msgstr ""
 "git init [-q | --quiet] [--bare] [--template=<Vorlagenverzeichnis>] [--"
-"shared[=<Berechtigungen>]] [Verzeichnis]"
+"shared[=<Berechtigungen>]] [<Verzeichnis>]"
 
 #: builtin/init-db.c:498
 msgid "permissions"
 msgstr "Berechtigungen"
 
 #: builtin/init-db.c:499
@@ -6596,14 +6635,14 @@
 
 #: builtin/log.c:41
 msgid "git log [<options>] [<revision range>] [[--] <path>...]"
 msgstr "git log [<Optionen>] [<Commitbereich>] [[--] <Pfad>...]"
 
 #: builtin/log.c:42
-msgid "git show [options] <object>..."
-msgstr "git show [Optionen] <Objekt>..."
+msgid "git show [<options>] <object>..."
+msgstr "git show [<Optionen>] <Objekt>..."
 
 #: builtin/log.c:81
 #, c-format
 msgid "invalid --decorate option: %s"
 msgstr "Ungültige Option für --decorate: %s"
 
@@ -6675,14 +6714,14 @@
 #: builtin/log.c:998
 #, c-format
 msgid "insane in-reply-to: %s"
 msgstr "ungültiges in-reply-to: %s"
 
 #: builtin/log.c:1026
-msgid "git format-patch [options] [<since> | <revision range>]"
-msgstr "git format-patch [Optionen] [<seit> | <Commitbereich>]"
+msgid "git format-patch [<options>] [<since> | <revision-range>]"
+msgstr "git format-patch [<Optionen>] [<seit> | <Commitbereich>]"
 
 #: builtin/log.c:1071
 msgid "Two output directories?"
 msgstr "Zwei Ausgabeverzeichnisse?"
 
 #: builtin/log.c:1186
@@ -6877,108 +6916,108 @@
 
 #: builtin/log.c:1651 builtin/log.c:1653 builtin/log.c:1665
 #, c-format
 msgid "Unknown commit %s"
 msgstr "Unbekannter Commit %s"
 
-#: builtin/ls-files.c:401
-msgid "git ls-files [options] [<file>...]"
-msgstr "git ls-files [Optionen] [<Datei>...]"
+#: builtin/ls-files.c:358
+msgid "git ls-files [<options>] [<file>...]"
+msgstr "git ls-files [<Optionen>] [<Datei>...]"
 
-#: builtin/ls-files.c:458
+#: builtin/ls-files.c:415
 msgid "identify the file status with tags"
 msgstr "den Dateistatus mit Tags anzeigen"
 
-#: builtin/ls-files.c:460
+#: builtin/ls-files.c:417
 msgid "use lowercase letters for 'assume unchanged' files"
 msgstr ""
 "Kleinbuchstaben für Dateien mit 'assume unchanged' Markierung verwenden"
 
-#: builtin/ls-files.c:462
+#: builtin/ls-files.c:419
 msgid "show cached files in the output (default)"
 msgstr "zwischengespeicherte Dateien in der Ausgabe anzeigen (Standard)"
 
-#: builtin/ls-files.c:464
+#: builtin/ls-files.c:421
 msgid "show deleted files in the output"
 msgstr "entfernte Dateien in der Ausgabe anzeigen"
 
-#: builtin/ls-files.c:466
+#: builtin/ls-files.c:423
 msgid "show modified files in the output"
 msgstr "geänderte Dateien in der Ausgabe anzeigen"
 
-#: builtin/ls-files.c:468
+#: builtin/ls-files.c:425
 msgid "show other files in the output"
 msgstr "sonstige Dateien in der Ausgabe anzeigen"
 
-#: builtin/ls-files.c:470
+#: builtin/ls-files.c:427
 msgid "show ignored files in the output"
 msgstr "ignorierte Dateien in der Ausgabe anzeigen"
 
-#: builtin/ls-files.c:473
+#: builtin/ls-files.c:430
 msgid "show staged contents' object name in the output"
 msgstr ""
 "Objektnamen von Inhalten, die zum Commit vorgemerkt sind, in der Ausgabe "
 "anzeigen"
 
-#: builtin/ls-files.c:475
+#: builtin/ls-files.c:432
 msgid "show files on the filesystem that need to be removed"
 msgstr "Dateien im Dateisystem, die gelöscht werden müssen, anzeigen"
 
-#: builtin/ls-files.c:477
+#: builtin/ls-files.c:434
 msgid "show 'other' directories' names only"
 msgstr "nur Namen von 'sonstigen' Verzeichnissen anzeigen"
 
-#: builtin/ls-files.c:480
+#: builtin/ls-files.c:437
 msgid "don't show empty directories"
 msgstr "keine leeren Verzeichnisse anzeigen"
 
-#: builtin/ls-files.c:483
+#: builtin/ls-files.c:440
 msgid "show unmerged files in the output"
 msgstr "nicht zusammengeführte Dateien in der Ausgabe anzeigen"
 
-#: builtin/ls-files.c:485
+#: builtin/ls-files.c:442
 msgid "show resolve-undo information"
 msgstr "'resolve-undo' Informationen anzeigen"
 
-#: builtin/ls-files.c:487
+#: builtin/ls-files.c:444
 msgid "skip files matching pattern"
 msgstr "Dateien auslassen, die einem Muster entsprechen"
 
-#: builtin/ls-files.c:490
+#: builtin/ls-files.c:447
 msgid "exclude patterns are read from <file>"
 msgstr "Muster, gelesen von <Datei>, ausschließen"
 
-#: builtin/ls-files.c:493
+#: builtin/ls-files.c:450
 msgid "read additional per-directory exclude patterns in <file>"
 msgstr "zusätzliche pro-Verzeichnis Auschlussmuster aus <Datei> auslesen"
 
-#: builtin/ls-files.c:495
+#: builtin/ls-files.c:452
 msgid "add the standard git exclusions"
 msgstr "die standardmäßigen Git-Ausschlüsse hinzufügen"
 
-#: builtin/ls-files.c:498
+#: builtin/ls-files.c:455
 msgid "make the output relative to the project top directory"
 msgstr "Ausgabe relativ zum Projektverzeichnis"
 
-#: builtin/ls-files.c:501
+#: builtin/ls-files.c:458
 msgid "if any <file> is not in the index, treat this as an error"
 msgstr ""
 "als Fehler behandeln, wenn sich eine <Datei> nicht in der Staging-Area "
 "befindet"
 
-#: builtin/ls-files.c:502
+#: builtin/ls-files.c:459
 msgid "tree-ish"
 msgstr "Commit-Referenz"
 
-#: builtin/ls-files.c:503
+#: builtin/ls-files.c:460
 msgid "pretend that paths removed since <tree-ish> are still present"
 msgstr ""
 "vorgeben, dass Pfade, die seit <Commit-Referenz> gelöscht wurden, immer noch "
 "vorhanden sind"
 
-#: builtin/ls-files.c:505
+#: builtin/ls-files.c:462
 msgid "show debugging data"
 msgstr "Ausgaben zur Fehlersuche anzeigen"
 
 #: builtin/ls-tree.c:28
 msgid "git ls-tree [<options>] <tree-ish> [<path>...]"
 msgstr "git ls-tree [<Optionen>] <Commit-Referenz> [<Pfad>...]"
@@ -7015,18 +7054,18 @@
 msgid "list entire tree; not just current directory (implies --full-name)"
 msgstr ""
 "das gesamte Verzeichnis auflisten; nicht nur das aktuelle Verzeichnis "
 "(impliziert --full-name)"
 
 #: builtin/merge.c:45
-msgid "git merge [options] [<commit>...]"
-msgstr "git merge [Optionen] [<Commit>...]"
+msgid "git merge [<options>] [<commit>...]"
+msgstr "git merge [<Optionen>] [<Commit>...]"
 
 #: builtin/merge.c:46
-msgid "git merge [options] <msg> HEAD <commit>"
-msgstr "git merge [Optionen] <Beschreibung> HEAD <Commit>"
+msgid "git merge [<options>] <msg> HEAD <commit>"
+msgstr "git merge [<Optionen>] <Beschreibung> HEAD <Commit>"
 
 #: builtin/merge.c:47
 msgid "git merge --abort"
 msgstr "git merge --abort"
 
 #: builtin/merge.c:100
@@ -7332,13 +7371,13 @@
 msgid "Updating %s..%s\n"
 msgstr "Aktualisiere %s..%s\n"
 
 #: builtin/merge.c:1388
 #, c-format
 msgid "Trying really trivial in-index merge...\n"
-msgstr "Probiere wirklich trivialen \"in-index\"-Merge...\n"
+msgstr "Probiere wirklich trivialen \"in-index\"-Merge ...\n"
 
 #: builtin/merge.c:1395
 #, c-format
 msgid "Nope.\n"
 msgstr "Nein.\n"
 
@@ -7346,18 +7385,18 @@
 msgid "Not possible to fast-forward, aborting."
 msgstr "Vorspulen nicht möglich, breche ab."
 
 #: builtin/merge.c:1450 builtin/merge.c:1529
 #, c-format
 msgid "Rewinding the tree to pristine...\n"
-msgstr "Rücklauf des Verzeichnisses bis zum Ursprung...\n"
+msgstr "Rücklauf des Verzeichnisses bis zum Ursprung ...\n"
 
 #: builtin/merge.c:1454
 #, c-format
 msgid "Trying merge strategy %s...\n"
-msgstr "Probiere Merge-Strategie %s...\n"
+msgstr "Probiere Merge-Strategie %s ...\n"
 
 #: builtin/merge.c:1520
 #, c-format
 msgid "No merge strategy handled the merge.\n"
 msgstr "Keine Merge-Strategie behandelt diesen Merge.\n"
 
@@ -7375,18 +7414,18 @@
 #, c-format
 msgid "Automatic merge went well; stopped before committing as requested\n"
 msgstr ""
 "Automatischer Merge abgeschlossen; halte, wie gewünscht, vor dem Commit an\n"
 
 #: builtin/merge-base.c:29
-msgid "git merge-base [-a|--all] <commit> <commit>..."
-msgstr "git merge-base [-a|--all] <Commit> <Commit>..."
+msgid "git merge-base [-a | --all] <commit> <commit>..."
+msgstr "git merge-base [-a | --all] <Commit> <Commit>..."
 
 #: builtin/merge-base.c:30
-msgid "git merge-base [-a|--all] --octopus <commit>..."
-msgstr "git merge-base [-a|--all] --octopus <Commit>..."
+msgid "git merge-base [-a | --all] --octopus <commit>..."
+msgstr "git merge-base [-a | --all] --octopus <Commit>..."
 
 #: builtin/merge-base.c:31
 msgid "git merge-base --independent <commit>..."
 msgstr "git merge-base --independent <Commit>..."
 
 #: builtin/merge-base.c:32
@@ -7416,17 +7455,17 @@
 #: builtin/merge-base.c:222
 msgid "find where <commit> forked from reflog of <ref>"
 msgstr "<Commit> finden, von wo Reflog von <Referenz> abgespalten wurde"
 
 #: builtin/merge-file.c:8
 msgid ""
-"git merge-file [options] [-L name1 [-L orig [-L name2]]] file1 orig_file "
-"file2"
+"git merge-file [<options>] [-L <name1> [-L <orig> [-L <name2>]]] <file1> "
+"<orig-file> <file2>"
 msgstr ""
-"git merge-file [Optionen] [-L Name1 [-L orig [-L Name2]]] Datei1 orig_Datei "
-"Datei2"
+"git merge-file [<Optionen>] [-L <Name1> [-L <orig> [-L <Name2>]]] <Datei1> "
+"<orig-Datei> <Datei2>"
 
 #: builtin/merge-file.c:33
 msgid "send results to standard output"
 msgstr "Ergebnisse zur Standard-Ausgabe senden"
 
 #: builtin/merge-file.c:34
@@ -7451,14 +7490,14 @@
 
 #: builtin/merge-file.c:43
 msgid "do not warn about conflicts"
 msgstr "keine Warnung bei Konflikten"
 
 #: builtin/merge-file.c:45
-msgid "set labels for file1/orig_file/file2"
-msgstr "Beschriftung für Datei1/orig_Datei/Datei2 setzen"
+msgid "set labels for file1/orig-file/file2"
+msgstr "Beschriftung für Datei1/orig-Datei/Datei2 setzen"
 
 #: builtin/mktree.c:64
 msgid "git mktree [-z] [--missing] [--batch]"
 msgstr "git mktree [-z] [--missing] [--batch]"
 
 #: builtin/mktree.c:150
@@ -7471,14 +7510,14 @@
 
 #: builtin/mktree.c:152
 msgid "allow creation of more than one tree"
 msgstr "die Erstellung von mehr als einem \"Tree\"-Objekt erlauben"
 
 #: builtin/mv.c:15
-msgid "git mv [options] <source>... <destination>"
-msgstr "git mv [Optionen] <Quelle>... <Ziel>"
+msgid "git mv [<options>] <source>... <destination>"
+msgstr "git mv [<Optionen>] <Quelle>... <Ziel>"
 
 #: builtin/mv.c:69
 #, c-format
 msgid "Directory %s is in index and no submodule?"
 msgstr "Verzeichnis %s ist zum Commit vorgemerkt und kein Submodul?"
 
@@ -7560,28 +7599,28 @@
 
 #: builtin/mv.c:253
 #, c-format
 msgid "Renaming %s to %s\n"
 msgstr "Benenne %s nach %s um\n"
 
-#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:355
+#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:359
 #, c-format
 msgid "renaming '%s' failed"
 msgstr "Umbenennung von '%s' fehlgeschlagen"
 
 #: builtin/name-rev.c:255
-msgid "git name-rev [options] <commit>..."
-msgstr "git name-rev [Optionen] <Commit>..."
+msgid "git name-rev [<options>] <commit>..."
+msgstr "git name-rev [<Optionen>] <Commit>..."
 
 #: builtin/name-rev.c:256
-msgid "git name-rev [options] --all"
-msgstr "git name-rev [Optionen] --all"
+msgid "git name-rev [<options>] --all"
+msgstr "git name-rev [<Optionen>] --all"
 
 #: builtin/name-rev.c:257
-msgid "git name-rev [options] --stdin"
-msgstr "git name-rev [Optionen] --stdin"
+msgid "git name-rev [<options>] --stdin"
+msgstr "git name-rev [<Optionen>] --stdin"
 
 #: builtin/name-rev.c:309
 msgid "print only names (no SHA-1)"
 msgstr "nur Namen anzeigen (keine SHA-1)"
 
 #: builtin/name-rev.c:310
@@ -7606,69 +7645,69 @@
 
 #: builtin/name-rev.c:322
 msgid "dereference tags in the input (internal use)"
 msgstr "Tags in der Eingabe dereferenzieren (interne Verwendung)"
 
 #: builtin/notes.c:24
-msgid "git notes [--ref <notes_ref>] [list [<object>]]"
+msgid "git notes [--ref <notes-ref>] [list [<object>]]"
 msgstr "git notes [--ref <Notiz-Referenz>] [list [<Objekt>]]"
 
 #: builtin/notes.c:25
 msgid ""
-"git notes [--ref <notes_ref>] add [-f] [--allow-empty] [-m <msg> | -F <file> "
+"git notes [--ref <notes-ref>] add [-f] [--allow-empty] [-m <msg> | -F <file> "
 "| (-c | -C) <object>] [<object>]"
 msgstr ""
 "git notes [--ref <Notiz-Referenz>] add [-f] [--allow-empty] [-m "
 "<Beschreibung> | -F <Datei> | (-c | -C) <Objekt>] [<Objekt>]"
 
 #: builtin/notes.c:26
-msgid "git notes [--ref <notes_ref>] copy [-f] <from-object> <to-object>"
+msgid "git notes [--ref <notes-ref>] copy [-f] <from-object> <to-object>"
 msgstr ""
 "git notes [--ref <Notiz-Referenz>] copy [-f] <von-Objekt> <nach-Objekt>"
 
 #: builtin/notes.c:27
 msgid ""
-"git notes [--ref <notes_ref>] append [--allow-empty] [-m <msg> | -F <file> | "
+"git notes [--ref <notes-ref>] append [--allow-empty] [-m <msg> | -F <file> | "
 "(-c | -C) <object>] [<object>]"
 msgstr ""
 "git notes [--ref <Notiz-Referenz>] append [--allow-empty] [-m <Beschreibung> "
 "| -F <Datei> | (-c | -C) <Objekt>] [<Objekt>]"
 
 #: builtin/notes.c:28
-msgid "git notes [--ref <notes_ref>] edit [--allow-empty] [<object>]"
+msgid "git notes [--ref <notes-ref>] edit [--allow-empty] [<object>]"
 msgstr "git notes [--ref <Notiz-Referenz>] edit [--allow-empty] [<Objekt>]"
 
 #: builtin/notes.c:29
-msgid "git notes [--ref <notes_ref>] show [<object>]"
+msgid "git notes [--ref <notes-ref>] show [<object>]"
 msgstr "git notes [--ref <Notiz-Referenz>] show [<Objekt>]"
 
 #: builtin/notes.c:30
 msgid ""
-"git notes [--ref <notes_ref>] merge [-v | -q] [-s <strategy> ] <notes_ref>"
+"git notes [--ref <notes-ref>] merge [-v | -q] [-s <strategy>] <notes-ref>"
 msgstr ""
-"git notes [--ref <Notiz-Referenz>] merge [-v | -q] [-s <Strategie> ] <Notiz-"
+"git notes [--ref <Notiz-Referenz>] merge [-v | -q] [-s <Strategie>] <Notiz-"
 "Referenz>"
 
 #: builtin/notes.c:31
 msgid "git notes merge --commit [-v | -q]"
 msgstr "git notes merge --commit [-v | -q]"
 
 #: builtin/notes.c:32
 msgid "git notes merge --abort [-v | -q]"
 msgstr "git notes merge --abort [-v | -q]"
 
 #: builtin/notes.c:33
-msgid "git notes [--ref <notes_ref>] remove [<object>...]"
+msgid "git notes [--ref <notes-ref>] remove [<object>...]"
 msgstr "git notes [--ref <Notiz-Referenz>] remove [<Objekt>...]"
 
 #: builtin/notes.c:34
-msgid "git notes [--ref <notes_ref>] prune [-n | -v]"
+msgid "git notes [--ref <notes-ref>] prune [-n | -v]"
 msgstr "git notes [--ref <Notiz-Referenz>] prune [-n | -v]"
 
 #: builtin/notes.c:35
-msgid "git notes [--ref <notes_ref>] get-ref"
+msgid "git notes [--ref <notes-ref>] get-ref"
 msgstr "git notes [--ref <Notiz-Referenz>] get-ref"
 
 #: builtin/notes.c:40
 msgid "git notes [list [<object>]]"
 msgstr "git notes [list [<Objekt>]]"
 
@@ -7694,13 +7733,13 @@
 
 #: builtin/notes.c:66
 msgid "git notes show [<object>]"
 msgstr "git notes show [<Objekt>]"
 
 #: builtin/notes.c:71
-msgid "git notes merge [<options>] <notes_ref>"
+msgid "git notes merge [<options>] <notes-ref>"
 msgstr "git notes merge [<Optionen>] <Notiz-Referenz>"
 
 #: builtin/notes.c:72
 msgid "git notes merge --commit [<options>]"
 msgstr "git notes merge --commit [<Optionen>]"
 
@@ -7936,13 +7975,13 @@
 
 #: builtin/notes.c:953
 msgid "notes-ref"
 msgstr "Notiz-Referenz"
 
 #: builtin/notes.c:954
-msgid "use notes from <notes_ref>"
+msgid "use notes from <notes-ref>"
 msgstr "Notizen von <Notiz-Referenz> verwenden"
 
 #: builtin/notes.c:989 builtin/remote.c:1621
 #, c-format
 msgid "Unknown subcommand: %s"
 msgstr "Unbekanntes Unterkommando: %s"
@@ -7954,215 +7993,215 @@
 
 #: builtin/pack-objects.c:29
 msgid "git pack-objects [options...] base-name [< ref-list | < object-list]"
 msgstr ""
 "git pack-objects [Optionen...] Basis-Name [< Referenzliste | < Objektliste]"
 
-#: builtin/pack-objects.c:177 builtin/pack-objects.c:180
+#: builtin/pack-objects.c:175 builtin/pack-objects.c:178
 #, c-format
 msgid "deflate error (%d)"
 msgstr "Fehler beim Komprimieren (%d)"
 
-#: builtin/pack-objects.c:773
+#: builtin/pack-objects.c:771
 msgid "Writing objects"
 msgstr "Schreibe Objekte"
 
-#: builtin/pack-objects.c:1015
+#: builtin/pack-objects.c:1013
 msgid "disabling bitmap writing, as some objects are not being packed"
 msgstr ""
 "Deaktiviere Schreiben des Bitmap-Index, da einige Objekte nicht in\n"
 "eine Pack-Datei geschrieben wurden"
 
-#: builtin/pack-objects.c:2175
+#: builtin/pack-objects.c:2173
 msgid "Compressing objects"
 msgstr "Komprimiere Objekte"
 
-#: builtin/pack-objects.c:2572
+#: builtin/pack-objects.c:2570
 #, c-format
 msgid "unsupported index version %s"
 msgstr "Nicht unterstützte Staging-Area-Version %s"
 
-#: builtin/pack-objects.c:2576
+#: builtin/pack-objects.c:2574
 #, c-format
 msgid "bad index version '%s'"
 msgstr "Ungültige Staging-Area-Version '%s'"
 
-#: builtin/pack-objects.c:2599
+#: builtin/pack-objects.c:2597
 #, c-format
 msgid "option %s does not accept negative form"
 msgstr "Option %s akzeptiert keine negative Form"
 
-#: builtin/pack-objects.c:2603
+#: builtin/pack-objects.c:2601
 #, c-format
 msgid "unable to parse value '%s' for option %s"
 msgstr "konnte Wert '%s' für Option %s nicht parsen"
 
-#: builtin/pack-objects.c:2623
+#: builtin/pack-objects.c:2621
 msgid "do not show progress meter"
 msgstr "keine Fortschrittsanzeige anzeigen"
 
-#: builtin/pack-objects.c:2625
+#: builtin/pack-objects.c:2623
 msgid "show progress meter"
 msgstr "Fortschrittsanzeige anzeigen"
 
-#: builtin/pack-objects.c:2627
+#: builtin/pack-objects.c:2625
 msgid "show progress meter during object writing phase"
 msgstr ""
 "Forschrittsanzeige während der Phase des Schreibens der Objekte anzeigen"
 
-#: builtin/pack-objects.c:2630
+#: builtin/pack-objects.c:2628
 msgid "similar to --all-progress when progress meter is shown"
 msgstr "ähnlich zu --all-progress wenn Fortschrittsanzeige darstellt wird"
 
-#: builtin/pack-objects.c:2631
+#: builtin/pack-objects.c:2629
 msgid "version[,offset]"
 msgstr "version[,offset]"
 
-#: builtin/pack-objects.c:2632
+#: builtin/pack-objects.c:2630
 msgid "write the pack index file in the specified idx format version"
 msgstr ""
 "die Index-Datei des Paketes in der angegebenen Indexformat-Version schreiben"
 
-#: builtin/pack-objects.c:2635
+#: builtin/pack-objects.c:2633
 msgid "maximum size of each output pack file"
 msgstr "maximale Größe für jede ausgegebene Paketdatei"
 
-#: builtin/pack-objects.c:2637
+#: builtin/pack-objects.c:2635
 msgid "ignore borrowed objects from alternate object store"
 msgstr "geliehene Objekte von alternativem Objektspeicher ignorieren"
 
-#: builtin/pack-objects.c:2639
+#: builtin/pack-objects.c:2637
 msgid "ignore packed objects"
 msgstr "gepackte Objekte ignorieren"
 
-#: builtin/pack-objects.c:2641
+#: builtin/pack-objects.c:2639
 msgid "limit pack window by objects"
 msgstr "Paketfenster durch Objekte begrenzen"
 
-#: builtin/pack-objects.c:2643
+#: builtin/pack-objects.c:2641
 msgid "limit pack window by memory in addition to object limit"
 msgstr ""
 "Paketfenster, zusätzlich zur Objektbegrenzung, durch Speicher begrenzen"
 
-#: builtin/pack-objects.c:2645
+#: builtin/pack-objects.c:2643
 msgid "maximum length of delta chain allowed in the resulting pack"
 msgstr ""
 "maximale Länge der erlaubten Differenzverkettung im resultierenden Paket"
 
-#: builtin/pack-objects.c:2647
+#: builtin/pack-objects.c:2645
 msgid "reuse existing deltas"
 msgstr "existierende Unterschiede wiederverwenden"
 
-#: builtin/pack-objects.c:2649
+#: builtin/pack-objects.c:2647
 msgid "reuse existing objects"
 msgstr "existierende Objekte wiederverwenden"
 
-#: builtin/pack-objects.c:2651
+#: builtin/pack-objects.c:2649
 msgid "use OFS_DELTA objects"
 msgstr "OFS_DELTA Objekte verwenden"
 
-#: builtin/pack-objects.c:2653
+#: builtin/pack-objects.c:2651
 msgid "use threads when searching for best delta matches"
 msgstr ""
 "Threads bei der Suche nach den besten Übereinstimmungen bei Unterschieden "
 "verwenden"
 
-#: builtin/pack-objects.c:2655
+#: builtin/pack-objects.c:2653
 msgid "do not create an empty pack output"
 msgstr "keine leeren Pakete erzeugen"
 
-#: builtin/pack-objects.c:2657
+#: builtin/pack-objects.c:2655
 msgid "read revision arguments from standard input"
 msgstr "Argumente bezüglich Commits von der Standard-Eingabe lesen"
 
-#: builtin/pack-objects.c:2659
+#: builtin/pack-objects.c:2657
 msgid "limit the objects to those that are not yet packed"
 msgstr "die Objekte zu solchen, die noch nicht gepackt wurden, begrenzen"
 
-#: builtin/pack-objects.c:2662
+#: builtin/pack-objects.c:2660
 msgid "include objects reachable from any reference"
 msgstr "Objekte einschließen, die von jeder Referenz erreichbar sind"
 
-#: builtin/pack-objects.c:2665
+#: builtin/pack-objects.c:2663
 msgid "include objects referred by reflog entries"
 msgstr ""
 "Objekte einschließen, die von Einträgen des Reflogs referenziert werden"
 
-#: builtin/pack-objects.c:2668
+#: builtin/pack-objects.c:2666
 msgid "include objects referred to by the index"
 msgstr "Objekte einschließen, die von der Staging-Area referenziert werden"
 
-#: builtin/pack-objects.c:2671
+#: builtin/pack-objects.c:2669
 msgid "output pack to stdout"
 msgstr "Paket in die Standard-Ausgabe schreiben"
 
-#: builtin/pack-objects.c:2673
+#: builtin/pack-objects.c:2671
 msgid "include tag objects that refer to objects to be packed"
 msgstr "Tag-Objekte einschließen, die auf gepackte Objekte referenzieren"
 
-#: builtin/pack-objects.c:2675
+#: builtin/pack-objects.c:2673
 msgid "keep unreachable objects"
 msgstr "nicht erreichbare Objekte behalten"
 
-#: builtin/pack-objects.c:2676 parse-options.h:140
+#: builtin/pack-objects.c:2674 parse-options.h:140
 msgid "time"
 msgstr "Zeit"
 
-#: builtin/pack-objects.c:2677
+#: builtin/pack-objects.c:2675
 msgid "unpack unreachable objects newer than <time>"
 msgstr "nicht erreichbare Objekte entpacken, die neuer als <Zeit> sind"
 
-#: builtin/pack-objects.c:2680
+#: builtin/pack-objects.c:2678
 msgid "create thin packs"
 msgstr "dünnere Pakete erzeugen"
 
-#: builtin/pack-objects.c:2682
+#: builtin/pack-objects.c:2680
 msgid "create packs suitable for shallow fetches"
 msgstr ""
 "Pakete geeignet für Abholung mit unvollständiger Historie (shallow) erzeugen"
 
-#: builtin/pack-objects.c:2684
+#: builtin/pack-objects.c:2682
 msgid "ignore packs that have companion .keep file"
 msgstr "Pakete ignorieren, die .keep Dateien haben"
 
-#: builtin/pack-objects.c:2686
+#: builtin/pack-objects.c:2684
 msgid "pack compression level"
 msgstr "Komprimierungsgrad für Paketierung"
 
-#: builtin/pack-objects.c:2688
+#: builtin/pack-objects.c:2686
 msgid "do not hide commits by grafts"
 msgstr "keine künstlichen Vorgänger-Commits (\"grafts\") verbergen"
 
-#: builtin/pack-objects.c:2690
+#: builtin/pack-objects.c:2688
 msgid "use a bitmap index if available to speed up counting objects"
 msgstr ""
 "Bitmap-Index (falls verfügbar) zur Optimierung der Objektzählung benutzen"
 
-#: builtin/pack-objects.c:2692
+#: builtin/pack-objects.c:2690
 msgid "write a bitmap index together with the pack index"
 msgstr "Bitmap-Index zusammen mit Pack-Index schreiben"
 
-#: builtin/pack-objects.c:2783
+#: builtin/pack-objects.c:2781
 msgid "Counting objects"
 msgstr "Zähle Objekte"
 
 #: builtin/pack-refs.c:6
-msgid "git pack-refs [options]"
-msgstr "git pack-refs [Optionen]"
+msgid "git pack-refs [<options>]"
+msgstr "git pack-refs [<Optionen>]"
 
 #: builtin/pack-refs.c:14
 msgid "pack everything"
 msgstr "alles packen"
 
 #: builtin/pack-refs.c:15
 msgid "prune loose refs (default)"
 msgstr "lose Referenzen entfernen (Standard)"
 
 #: builtin/prune-packed.c:7
-msgid "git prune-packed [-n|--dry-run] [-q|--quiet]"
-msgstr "git prune-packed [-n|--dry-run] [-q|--quiet]"
+msgid "git prune-packed [-n | --dry-run] [-q | --quiet]"
+msgstr "git prune-packed [-n | --dry-run] [-q | --quiet]"
 
 #: builtin/prune-packed.c:40
 msgid "Removing duplicate objects"
 msgstr "Lösche doppelte Objekte"
 
 #: builtin/prune.c:12
@@ -8449,81 +8488,85 @@
 msgstr "Die Option --mirror kann nicht mit Refspecs kombiniert werden."
 
 #: builtin/push.c:422
 msgid "--all and --mirror are incompatible"
 msgstr "Die Optionen --all und --mirror sind inkompatibel."
 
-#: builtin/push.c:493
+#: builtin/push.c:502
 msgid "repository"
 msgstr "Repository"
 
-#: builtin/push.c:494
+#: builtin/push.c:503
 msgid "push all refs"
 msgstr "alle Referenzen versenden"
 
-#: builtin/push.c:495
+#: builtin/push.c:504
 msgid "mirror all refs"
 msgstr "alle Referenzen spiegeln"
 
-#: builtin/push.c:497
+#: builtin/push.c:506
 msgid "delete refs"
 msgstr "Referenzen löschen"
 
-#: builtin/push.c:498
+#: builtin/push.c:507
 msgid "push tags (can't be used with --all or --mirror)"
 msgstr "Tags versenden (kann nicht mit --all oder --mirror verwendet werden)"
 
-#: builtin/push.c:501
+#: builtin/push.c:510
 msgid "force updates"
 msgstr "Aktualisierung erzwingen"
 
-#: builtin/push.c:503
+#: builtin/push.c:512
 msgid "refname>:<expect"
 msgstr "Referenzname>:<Erwartungswert"
 
-#: builtin/push.c:504
+#: builtin/push.c:513
 msgid "require old value of ref to be at this value"
 msgstr "Referenz muss sich auf dem angegebenen Wert befinden"
 
-#: builtin/push.c:507
+#: builtin/push.c:516
 msgid "control recursive pushing of submodules"
 msgstr "rekursiven \"push\" von Submodulen steuern"
 
-#: builtin/push.c:509
+#: builtin/push.c:518
 msgid "use thin pack"
 msgstr "kleinere Pakete verwenden"
 
-#: builtin/push.c:510 builtin/push.c:511
+#: builtin/push.c:519 builtin/push.c:520
 msgid "receive pack program"
 msgstr "'receive pack' Programm"
 
-#: builtin/push.c:512
+#: builtin/push.c:521
 msgid "set upstream for git pull/status"
 msgstr "Upstream für \"git pull/status\" setzen"
 
-#: builtin/push.c:515
+#: builtin/push.c:524
 msgid "prune locally removed refs"
 msgstr "lokal gelöschte Referenzen entfernen"
 
-#: builtin/push.c:517
+#: builtin/push.c:526
 msgid "bypass pre-push hook"
 msgstr "\"pre-push hook\" umgehen"
 
-#: builtin/push.c:518
+#: builtin/push.c:527
 msgid "push missing but relevant tags"
 msgstr "fehlende, aber relevante Tags versenden"
 
-#: builtin/push.c:520
+#: builtin/push.c:529
 msgid "GPG sign the push"
 msgstr "signiert \"push\" mit GPG"
 
-#: builtin/push.c:529
+#: builtin/push.c:530
+msgid "request atomic transaction on remote side"
+msgstr "Referenzen atomar versenden"
+
+#: builtin/push.c:539
 msgid "--delete is incompatible with --all, --mirror and --tags"
 msgstr "Die Option --delete ist inkompatibel mit --all, --mirror und --tags."
 
-#: builtin/push.c:531
+#: builtin/push.c:541
 msgid "--delete doesn't make sense without any refs"
 msgstr "Die Option --delete kann nur mit Referenzen verwendet werden."
 
 #: builtin/read-tree.c:37
 msgid ""
 "git read-tree [[-m [--trivial] [--aggressive] | --reset | --prefix=<prefix>] "
@@ -8596,44 +8639,44 @@
 msgstr "Anwendung des Filters für spärliches Auschecken überspringen"
 
 #: builtin/read-tree.c:139
 msgid "debug unpack-trees"
 msgstr "Entpacken der Bäume protokollieren"
 
-#: builtin/reflog.c:499
+#: builtin/reflog.c:429
 #, c-format
 msgid "%s' for '%s' is not a valid timestamp"
 msgstr "'%s' für '%s' ist kein gültiger Zeitstempel"
 
-#: builtin/reflog.c:615 builtin/reflog.c:620
+#: builtin/reflog.c:546 builtin/reflog.c:551
 #, c-format
 msgid "'%s' is not a valid timestamp"
 msgstr "'%s' ist kein gültiger Zeitstempel"
 
 #: builtin/remote.c:12
 msgid "git remote [-v | --verbose]"
 msgstr "git remote [-v | --verbose]"
 
 #: builtin/remote.c:13
 msgid ""
-"git remote add [-t <branch>] [-m <master>] [-f] [--tags|--no-tags] [--"
+"git remote add [-t <branch>] [-m <master>] [-f] [--tags | --no-tags] [--"
 "mirror=<fetch|push>] <name> <url>"
 msgstr ""
-"git remote add [-t <Branch>] [-m <master>] [-f] [--tags|--no-tags] [--"
+"git remote add [-t <Branch>] [-m <master>] [-f] [--tags | --no-tags] [--"
 "mirror=<fetch|push>] <Name> <URL>"
 
 #: builtin/remote.c:14 builtin/remote.c:33
 msgid "git remote rename <old> <new>"
 msgstr "git remote rename <alt> <neu>"
 
 #: builtin/remote.c:15 builtin/remote.c:38
 msgid "git remote remove <name>"
 msgstr "git remote remove <Name>"
 
-#: builtin/remote.c:16
-msgid "git remote set-head <name> (-a | --auto | -d | --delete |<branch>)"
+#: builtin/remote.c:16 builtin/remote.c:43
+msgid "git remote set-head <name> (-a | --auto | -d | --delete | <branch>)"
 msgstr "git remote set-head <Name> (-a | --auto | -d | --delete | <Branch>)"
 
 #: builtin/remote.c:17
 msgid "git remote [-v | --verbose] show [-n] <name>"
 msgstr "git remote [-v | --verbose] show [-n] <Name>"
 
@@ -8664,16 +8707,12 @@
 msgstr "git remote set-url --delete <Name> <URL>"
 
 #: builtin/remote.c:28
 msgid "git remote add [<options>] <name> <url>"
 msgstr "git remote add [<Optionen>] <Name> <URL>"
 
-#: builtin/remote.c:43
-msgid "git remote set-head <name> (-a | --auto | -d | --delete | <branch>)"
-msgstr "git remote set-head <Name> (-a | --auto | -d | --delete | <Branch>)"
-
 #: builtin/remote.c:48
 msgid "git remote set-branches <name> <branch>..."
 msgstr "git remote set-branches <Name> <Branch>..."
 
 #: builtin/remote.c:49
 msgid "git remote set-branches --add <name> <branch>..."
@@ -9113,14 +9152,14 @@
 
 #: builtin/remote.c:1592
 msgid "be verbose; must be placed before a subcommand"
 msgstr "erweiterte Ausgaben; muss vor einem Unterkommando angegeben werden"
 
 #: builtin/repack.c:17
-msgid "git repack [options]"
-msgstr "git repack [Optionen]"
+msgid "git repack [<options>]"
+msgstr "git repack [<Optionen>]"
 
 #: builtin/repack.c:159
 msgid "pack everything in a single pack"
 msgstr "alles in eine einzige Pack-Datei packen"
 
 #: builtin/repack.c:161
@@ -9183,13 +9222,13 @@
 
 #: builtin/repack.c:187
 msgid "repack objects in packs marked with .keep"
 msgstr ""
 "Objekte umpacken, die sich in mit .keep markierten Pack-Dateien befinden"
 
-#: builtin/repack.c:371
+#: builtin/repack.c:375
 #, c-format
 msgid "removing '%s' failed"
 msgstr "Löschen von '%s' fehlgeschlagen"
 
 #: builtin/replace.c:19
 msgid "git replace [-f] <object> <replacement>"
@@ -9275,14 +9314,14 @@
 
 #: builtin/replace.c:438
 msgid "use this format"
 msgstr "das angegebene Format benutzen"
 
 #: builtin/rerere.c:12
-msgid "git rerere [clear | forget path... | status | remaining | diff | gc]"
-msgstr "git rerere [clean | forget path... | status | remaining | diff | gc]"
+msgid "git rerere [clear | forget <path>... | status | remaining | diff | gc]"
+msgstr "git rerere [clean | forget <Pfad>... | status | remaining | diff | gc]"
 
 #: builtin/rerere.c:57
 msgid "register clean resolutions in index"
 msgstr "saubere Auflösungen in der Staging-Area registrieren"
 
 #: builtin/reset.c:26
@@ -9416,14 +9455,14 @@
 
 #: builtin/reset.c:374
 msgid "Could not write new index file."
 msgstr "Konnte neue Staging-Area-Datei nicht schreiben."
 
 #: builtin/rev-parse.c:361
-msgid "git rev-parse --parseopt [options] -- [<args>...]"
-msgstr "git rev-parse --parseopt [Optionen] -- [<Argumente>...]"
+msgid "git rev-parse --parseopt [<options>] -- [<args>...]"
+msgstr "git rev-parse --parseopt [<Optionen>] -- [<Argumente>...]"
 
 #: builtin/rev-parse.c:366
 msgid "keep the `--` passed as an arg"
 msgstr "`--` als Argument lassen"
 
 #: builtin/rev-parse.c:368
@@ -9434,36 +9473,36 @@
 msgid "output in stuck long form"
 msgstr ""
 "Ausgabe in Langform mit Argumenten an den Optionen (getrennt durch '=')"
 
 #: builtin/rev-parse.c:499
 msgid ""
-"git rev-parse --parseopt [options] -- [<args>...]\n"
+"git rev-parse --parseopt [<options>] -- [<args>...]\n"
 "   or: git rev-parse --sq-quote [<arg>...]\n"
-"   or: git rev-parse [options] [<arg>...]\n"
+"   or: git rev-parse [<options>] [<arg>...]\n"
 "\n"
 "Run \"git rev-parse --parseopt -h\" for more information on the first usage."
 msgstr ""
-"git rev-parse --parseopt [Optionen] -- [<Argumente>...]\n"
+"git rev-parse --parseopt [<Optionen>] -- [<Argumente>...]\n"
 "   oder: git rev-parse --sq-quote [<Argumente>...]\n"
-"   oder: git rev-parse [Optionen] [<Argumente>...]\n"
+"   oder: git rev-parse [<Optionen>] [<Argumente>...]\n"
 "\n"
 "Führen Sie \"git rev-parse --parseopt -h\" für weitere Informationen bei "
 "erster Verwendung aus."
 
 #: builtin/revert.c:22
-msgid "git revert [options] <commit-ish>..."
-msgstr "git revert [Optionen] <Commit-Angabe>..."
+msgid "git revert [<options>] <commit-ish>..."
+msgstr "git revert [<Optionen>] <Commit-Angabe>..."
 
 #: builtin/revert.c:23
 msgid "git revert <subcommand>"
 msgstr "git revert <Unterkommando>"
 
 #: builtin/revert.c:28
-msgid "git cherry-pick [options] <commit-ish>..."
-msgstr "git cherry-pick [Optionen] <Commit-Angabe>..."
+msgid "git cherry-pick [<options>] <commit-ish>..."
+msgstr "git cherry-pick [<Optionen>] <Commit-Angabe>..."
 
 #: builtin/revert.c:29
 msgid "git cherry-pick <subcommand>"
 msgstr "git cherry-pick <Unterkommando>"
 
 #: builtin/revert.c:71
@@ -9537,14 +9576,14 @@
 
 #: builtin/revert.c:212
 msgid "cherry-pick failed"
 msgstr "\"cherry-pick\" fehlgeschlagen"
 
 #: builtin/rm.c:17
-msgid "git rm [options] [--] <file>..."
-msgstr "git rm [Optionen] [--] [<Datei>...]"
+msgid "git rm [<options>] [--] <file>..."
+msgstr "git rm [<Optionen>] [--] <Datei>..."
 
 #: builtin/rm.c:65
 msgid ""
 "the following submodule (or one of its nested submodules)\n"
 "uses a .git directory:"
 msgid_plural ""
@@ -9645,14 +9684,14 @@
 #: builtin/rm.c:375
 #, c-format
 msgid "git rm: unable to remove %s"
 msgstr "git rm: konnte %s nicht löschen"
 
 #: builtin/shortlog.c:13
-msgid "git shortlog [<options>] [<revision range>] [[--] [<path>...]]"
-msgstr "git shortlog [<Optionen>] [Commitbereich] [[--] <Pfad>...]"
+msgid "git shortlog [<options>] [<revision-range>] [[--] [<path>...]]"
+msgstr "git shortlog [<Optionen>] [<Commitbereich>] [[--] [<Pfad>...]]"
 
 #: builtin/shortlog.c:131
 #, c-format
 msgid "Missing author: %s"
 msgstr "fehlender Autor: %s"
 
@@ -9675,25 +9714,25 @@
 #: builtin/shortlog.c:236
 msgid "Linewrap output"
 msgstr "Ausgabe mit Zeilenumbrüchen"
 
 #: builtin/show-branch.c:9
 msgid ""
-"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
+"git show-branch [-a | --all] [-r | --remotes] [--topo-order | --date-order]\n"
 "\t\t[--current] [--color[=<when>] | --no-color] [--sparse]\n"
 "\t\t[--more=<n> | --list | --independent | --merge-base]\n"
 "\t\t[--no-name | --sha1-name] [--topics] [(<rev> | <glob>)...]"
 msgstr ""
-"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
+"git show-branch [-a | --all] [-r | --remotes] [--topo-order | --date-order]\n"
 "\t\t[--current] [--color[=<Wann>] | --no-color] [--sparse]\n"
 "\t\t[--more=<n> | --list | --independent | --merge-base]\n"
 "\t\t[--no-name | --sha1-name] [--topics] [(<Commit> | <glob>)...]"
 
 #: builtin/show-branch.c:13
-msgid "git show-branch (-g|--reflog)[=<n>[,<base>]] [--list] [<ref>]"
-msgstr "git show-branch (-g|--reflog)[=<n>[,<Basis>]] [--list] [<Referenz>]"
+msgid "git show-branch (-g | --reflog)[=<n>[,<base>]] [--list] [<ref>]"
+msgstr "git show-branch (-g | --reflog)[=<n>[,<Basis>]] [--list] [<Referenz>]"
 
 #: builtin/show-branch.c:652
 msgid "show remote-tracking and local branches"
 msgstr "Remote-Tracking und lokale Branches anzeigen"
 
 #: builtin/show-branch.c:654
@@ -9756,17 +9795,17 @@
 #: builtin/show-branch.c:682
 msgid "show <n> most recent ref-log entries starting at base"
 msgstr "die <n> jüngsten Einträge im Reflog, beginnend an der Basis, anzeigen"
 
 #: builtin/show-ref.c:10
 msgid ""
-"git show-ref [-q|--quiet] [--verify] [--head] [-d|--dereference] [-s|--"
-"hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [pattern*] "
+"git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | --"
+"hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<pattern>...]"
 msgstr ""
-"git show-ref [-q|--quiet] [--verify] [--head] [-d|--dereference] [-s|--"
-"hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [pattern*] "
+"git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | --"
+"hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<Muster>...] "
 
 #: builtin/show-ref.c:11
 msgid "git show-ref --exclude-existing[=pattern] < ref-list"
 msgstr "git show-ref --exclude-existing[=Muster] < ref-list"
 
 #: builtin/show-ref.c:168
@@ -9803,18 +9842,18 @@
 msgid "show refs from stdin that aren't in local repository"
 msgstr ""
 "Referenzen von der Standard-Eingabe anzeigen, die sich nicht im lokalen "
 "Repository befinden"
 
 #: builtin/symbolic-ref.c:7
-msgid "git symbolic-ref [options] name [ref]"
-msgstr "git symbolic-ref [Optionen] name [ref]"
+msgid "git symbolic-ref [<options>] <name> [<ref>]"
+msgstr "git symbolic-ref [<Optionen>] <Name> [<Referenz>]"
 
 #: builtin/symbolic-ref.c:8
-msgid "git symbolic-ref -d [-q] name"
-msgstr "git symbolic-ref -d [-q] name"
+msgid "git symbolic-ref -d [-q] <name>"
+msgstr "git symbolic-ref -d [-q] <Name>"
 
 #: builtin/symbolic-ref.c:40
 msgid "suppress error message for non-symbolic (detached) refs"
 msgstr ""
 "Fehlermeldungen für nicht-symbolische (losgelöste) Referenzen unterdrücken"
 
@@ -9833,27 +9872,28 @@
 #: builtin/symbolic-ref.c:43 builtin/update-ref.c:358
 msgid "reason of the update"
 msgstr "Grund für die Aktualisierung"
 
 #: builtin/tag.c:22
 msgid ""
-"git tag [-a|-s|-u <key-id>] [-f] [-m <msg>|-F <file>] <tagname> [<head>]"
+"git tag [-a | -s | -u <key-id>] [-f] [-m <msg> | -F <file>] <tagname> "
+"[<head>]"
 msgstr ""
-"git tag [-a|-s|-u <Schlüssel-id>] [-f] [-m <Beschreibung>|-F <Datei>] "
+"git tag [-a | -s | -u <Schlüssel-id>] [-f] [-m <Beschreibung> | -F <Datei>] "
 "<Tagname> [<Commit>]"
 
 #: builtin/tag.c:23
 msgid "git tag -d <tagname>..."
 msgstr "git tag -d <Tagname>..."
 
 #: builtin/tag.c:24
 msgid ""
-"git tag -l [-n[<num>]] [--contains <commit>] [--points-at <object>] \n"
+"git tag -l [-n[<num>]] [--contains <commit>] [--points-at <object>]\n"
 "\t\t[<pattern>...]"
 msgstr ""
-"git tag -l [-n[<Nummer>]] [--contains <Commit>] [--points-at <Objekt>] \n"
+"git tag -l [-n[<Nummer>]] [--contains <Commit>] [--points-at <Objekt>]\n"
 "\t\t[<Muster>...]"
 
 #: builtin/tag.c:26
 msgid "git tag -v <tagname>..."
 msgstr "git tag -v <Tagname>..."
 
@@ -9991,24 +10031,24 @@
 msgstr "einen anderen Schlüssel verwenden, um das Tag zu signieren"
 
 #: builtin/tag.c:607
 msgid "replace the tag if exists"
 msgstr "das Tag ersetzen, wenn es existiert"
 
-#: builtin/tag.c:608
+#: builtin/tag.c:609
+msgid "Tag listing options"
+msgstr "Optionen für Auflistung der Tags"
+
+#: builtin/tag.c:610
 msgid "show tag list in columns"
 msgstr "Liste der Tags in Spalten anzeigen"
 
-#: builtin/tag.c:610
+#: builtin/tag.c:612
 msgid "sort tags"
 msgstr "Tags sortieren"
 
-#: builtin/tag.c:614
-msgid "Tag listing options"
-msgstr "Optionen für Auflistung der Tags"
-
 #: builtin/tag.c:617 builtin/tag.c:623
 msgid "print only tags that contain the commit"
 msgstr "nur Tags ausgeben, die diesen Commit beinhalten"
 
 #: builtin/tag.c:629
 msgid "print only tags of the object"
@@ -10059,146 +10099,147 @@
 
 #: builtin/unpack-objects.c:489
 msgid "Unpacking objects"
 msgstr "Entpacke Objekte"
 
 #: builtin/update-index.c:403
-msgid "git update-index [options] [--] [<file>...]"
-msgstr "git update-index [Optionen] [--] [<Datei>...]"
+msgid "git update-index [<options>] [--] [<file>...]"
+msgstr "git update-index [<Optionen>] [--] [<Datei>...]"
 
-#: builtin/update-index.c:756
+#: builtin/update-index.c:757
 msgid "continue refresh even when index needs update"
 msgstr ""
 "Aktualisierung fortsetzen, auch wenn die Staging-Area aktualisiert werden "
 "muss"
 
-#: builtin/update-index.c:759
+#: builtin/update-index.c:760
 msgid "refresh: ignore submodules"
 msgstr "Aktualisierung: ignoriert Submodule"
 
-#: builtin/update-index.c:762
+#: builtin/update-index.c:763
 msgid "do not ignore new files"
 msgstr "keine neuen Dateien ignorieren"
 
-#: builtin/update-index.c:764
+#: builtin/update-index.c:765
 msgid "let files replace directories and vice-versa"
 msgstr "Dateien Verzeichnisse ersetzen lassen, und umgedreht"
 
-#: builtin/update-index.c:766
+#: builtin/update-index.c:767
 msgid "notice files missing from worktree"
 msgstr "fehlende Dateien im Arbeitsverzeichnis beachten"
 
-#: builtin/update-index.c:768
+#: builtin/update-index.c:769
 msgid "refresh even if index contains unmerged entries"
 msgstr ""
 "aktualisieren, auch wenn die Staging-Area nicht zusammengeführte Einträge "
 "beinhaltet"
 
-#: builtin/update-index.c:771
+#: builtin/update-index.c:772
 msgid "refresh stat information"
 msgstr "Dateiinformationen aktualisieren"
 
-#: builtin/update-index.c:775
+#: builtin/update-index.c:776
 msgid "like --refresh, but ignore assume-unchanged setting"
 msgstr "wie --refresh, ignoriert aber \"assume-unchanged\" Einstellung"
 
-#: builtin/update-index.c:779
+#: builtin/update-index.c:780
 msgid "<mode>,<object>,<path>"
 msgstr "<Modus>,<Objekt>,<Pfad>"
 
-#: builtin/update-index.c:780
+#: builtin/update-index.c:781
 msgid "add the specified entry to the index"
 msgstr "den angegebenen Eintrag zum Commit vormerken"
 
-#: builtin/update-index.c:784
+#: builtin/update-index.c:785
 msgid "(+/-)x"
 msgstr "(+/-)x"
 
-#: builtin/update-index.c:785
+#: builtin/update-index.c:786
 msgid "override the executable bit of the listed files"
 msgstr "das \"ausführbar\"-Bit der aufgelisteten Dateien überschreiben"
 
-#: builtin/update-index.c:789
+#: builtin/update-index.c:790
 msgid "mark files as \"not changing\""
 msgstr "diese Datei immer als unverändert betrachten"
 
-#: builtin/update-index.c:792
+#: builtin/update-index.c:793
 msgid "clear assumed-unchanged bit"
 msgstr "\"assumed-unchanged\"-Bit löschen"
 
-#: builtin/update-index.c:795
+#: builtin/update-index.c:796
 msgid "mark files as \"index-only\""
 msgstr "Dateien als \"index-only\" markieren"
 
-#: builtin/update-index.c:798
+#: builtin/update-index.c:799
 msgid "clear skip-worktree bit"
 msgstr "\"skip-worktree\"-Bit löschen"
 
-#: builtin/update-index.c:801
+#: builtin/update-index.c:802
 msgid "add to index only; do not add content to object database"
 msgstr ""
 "die Änderungen nur zum Commit vormerken; Inhalt wird nicht der Objekt-"
 "Datenbank hinzugefügt"
 
-#: builtin/update-index.c:803
+#: builtin/update-index.c:804
 msgid "remove named paths even if present in worktree"
 msgstr ""
 "benannte Pfade löschen, auch wenn sie sich im Arbeitsverzeichnis befinden"
 
-#: builtin/update-index.c:805
+#: builtin/update-index.c:806
 msgid "with --stdin: input lines are terminated by null bytes"
 msgstr "mit --stdin: eingegebene Zeilen sind durch NUL-Bytes abgeschlossen"
 
-#: builtin/update-index.c:807
+#: builtin/update-index.c:808
 msgid "read list of paths to be updated from standard input"
 msgstr "Liste der zu aktualisierenden Pfade von der Standard-Eingabe lesen"
 
-#: builtin/update-index.c:811
+#: builtin/update-index.c:812
 msgid "add entries from standard input to the index"
 msgstr "Einträge von der Standard-Eingabe zum Commit vormerken"
 
-#: builtin/update-index.c:815
+#: builtin/update-index.c:816
 msgid "repopulate stages #2 and #3 for the listed paths"
 msgstr ""
 "wiederholtes Einpflegen der Zustände #2 und #3 für die aufgelisteten Pfade"
 
-#: builtin/update-index.c:819
+#: builtin/update-index.c:820
 msgid "only update entries that differ from HEAD"
 msgstr "nur Einträge aktualisieren, die unterschiedlich zu HEAD sind"
 
-#: builtin/update-index.c:823
+#: builtin/update-index.c:824
 msgid "ignore files missing from worktree"
 msgstr "fehlende Dateien im Arbeitsverzeichnis ignorieren"
 
-#: builtin/update-index.c:826
+#: builtin/update-index.c:827
 msgid "report actions to standard output"
 msgstr "die Aktionen in der Standard-Ausgabe ausgeben"
 
-#: builtin/update-index.c:828
+#: builtin/update-index.c:829
 msgid "(for porcelains) forget saved unresolved conflicts"
 msgstr "(für Fremdprogramme) keine gespeicherten, nicht aufgelöste Konflikte"
 
-#: builtin/update-index.c:832
+#: builtin/update-index.c:833
 msgid "write index in this format"
 msgstr "Staging-Area-Datei in diesem Format schreiben"
 
-#: builtin/update-index.c:834
+#: builtin/update-index.c:835
 msgid "enable or disable split index"
 msgstr "Aktivierung oder Deaktivierung des Splittings der Staging-Area"
 
 #: builtin/update-ref.c:9
-msgid "git update-ref [options] -d <refname> [<oldval>]"
-msgstr "git update-ref [Optionen] -d <Referenzname> [<alterWert>]"
+msgid "git update-ref [<options>] -d <refname> [<old-val>]"
+msgstr "git update-ref [<Optionen>] -d <Referenzname> [<alter-Wert>]"
 
 #: builtin/update-ref.c:10
-msgid "git update-ref [options]    <refname> <newval> [<oldval>]"
-msgstr "git update-ref [Optionen]    <Referenzname> <neuerWert> [<alterWert>]"
+msgid "git update-ref [<options>]    <refname> <new-val> [<old-val>]"
+msgstr ""
+"git update-ref [<Optionen>]    <Referenzname> <neuer-Wert> [<alter-Wert>]"
 
 #: builtin/update-ref.c:11
-msgid "git update-ref [options] --stdin [-z]"
-msgstr "git update-ref [Optionen] --stdin [-z]"
+msgid "git update-ref [<options>] --stdin [-z]"
+msgstr "git update-ref [<Optionen>] --stdin [-z]"
 
 #: builtin/update-ref.c:359
 msgid "delete the reference"
 msgstr "diese Referenz löschen"
 
 #: builtin/update-ref.c:361
@@ -10219,34 +10260,34 @@
 
 #: builtin/update-server-info.c:14
 msgid "update the info files from scratch"
 msgstr "die Informationsdateien von Grund auf aktualisieren"
 
 #: builtin/verify-commit.c:17
-msgid "git verify-commit [-v|--verbose] <commit>..."
-msgstr "git verify-commit [-v|--verbose] <Commit>..."
+msgid "git verify-commit [-v | --verbose] <commit>..."
+msgstr "git verify-commit [-v | --verbose] <Commit>..."
 
 #: builtin/verify-commit.c:75
 msgid "print commit contents"
 msgstr "Commit-Inhalte ausgeben"
 
 #: builtin/verify-pack.c:54
-msgid "git verify-pack [-v|--verbose] [-s|--stat-only] <pack>..."
-msgstr "git verify-pack [-v|--verbose] [-s|--stat-only] <Paket>..."
+msgid "git verify-pack [-v | --verbose] [-s | --stat-only] <pack>..."
+msgstr "git verify-pack [-v | --verbose] [-s | --stat-only] <Paket>..."
 
 #: builtin/verify-pack.c:64
 msgid "verbose"
 msgstr "erweiterte Ausgaben"
 
 #: builtin/verify-pack.c:66
 msgid "show statistics only"
 msgstr "nur Statistiken anzeigen"
 
 #: builtin/verify-tag.c:17
-msgid "git verify-tag [-v|--verbose] <tag>..."
-msgstr "git verify-tag [-v|--verbose] <Tag>..."
+msgid "git verify-tag [-v | --verbose] <tag>..."
+msgstr "git verify-tag [-v | --verbose] <Tag>..."
 
 #: builtin/verify-tag.c:73
 msgid "print tag contents"
 msgstr "Tag-Inhalte ausgeben"
 
 #: builtin/write-tree.c:13
@@ -10331,13 +10372,13 @@
 msgid "Join two or more development histories together"
 msgstr "zwei oder mehr Entwicklungszweige zusammenführen"
 
 #: common-cmds.h:20
 msgid "Move or rename a file, a directory, or a symlink"
 msgstr ""
-"eine Datei, ein Verzeichnis, oder einen symbolischen Verweis verschieben "
+"eine Datei, ein Verzeichnis, oder eine symbolische Verknüpfung verschieben "
 "oder umbenennen"
 
 #: common-cmds.h:21
 msgid "Fetch from and integrate with another repository or a local branch"
 msgstr ""
 "Objekte von einem externen Repository anfordern und sie mit einem anderen "
@@ -10447,13 +10488,13 @@
 msgstr ""
 "Haben Sie den Patch per Hand editiert?\n"
 "Er kann nicht auf die Blobs in seiner 'index' Zeile angewendet werden."
 
 #: git-am.sh:166
 msgid "Falling back to patching base and 3-way merge..."
-msgstr "Falle zurück zum Patchen der Basis und des 3-Wege-Merges..."
+msgstr "Falle zurück zum Patchen der Basis und des 3-Wege-Merges ..."
 
 #: git-am.sh:182
 msgid "Failed to merge in the changes."
 msgstr "Merge der Änderungen fehlgeschlagen"
 
 #: git-am.sh:277
@@ -10611,16 +10652,16 @@
 msgid "Bad HEAD - I need a HEAD"
 msgstr "Ungültiger HEAD - HEAD wird benötigt"
 
 #: git-bisect.sh:130
 #, sh-format
 msgid ""
-"Checking out '$start_head' failed. Try 'git bisect reset <validbranch>'."
+"Checking out '$start_head' failed. Try 'git bisect reset <valid-branch>'."
 msgstr ""
 "Auschecken von '$start_head' fehlgeschlagen. Versuchen Sie 'git bisect reset "
-"<gueltigerbranch>'."
+"<gültiger-Branch>'."
 
 #: git-bisect.sh:140
 msgid "won't bisect on cg-seek'ed tree"
 msgstr ""
 "binäre Suche auf einem durch 'cg-seek' geändertem Verzeichnis nicht möglich"
 
@@ -10940,13 +10981,13 @@
 msgstr "Änderungen von $mb zu $onto:"
 
 #: git-rebase.sh:610
 msgid "First, rewinding head to replay your work on top of it..."
 msgstr ""
 "Zunächst wird der Branch zurückgespult, um Ihre Änderungen\n"
-"darauf neu anzuwenden..."
+"darauf neu anzuwenden ..."
 
 #: git-rebase.sh:620
 #, sh-format
 msgid "Fast-forwarded $branch_name to $onto_name."
 msgstr "$branch_name zu $onto_name vorgespult."
 
@@ -11394,12 +11435,28 @@
 
 #: git-submodule.sh:1331
 #, sh-format
 msgid "Synchronizing submodule url for '$displaypath'"
 msgstr "Synchronisiere Submodul-URL für '$displaypath'"
 
+#~ msgid "server does not support --atomic push"
+#~ msgstr ""
+#~ "die Gegenseite unterstützt keinen atomaren Versand (\"--atomic push\")"
+
+#~ msgid "(detached from %s)"
+#~ msgstr "(losgelöst von %s)"
+
+#~ msgid "search also in ignored files"
+#~ msgstr "auch in ignorierten Dateien suchen"
+
+#~ msgid "No existing author found with '%s'"
+#~ msgstr "Kein existierender Autor mit '%s' gefunden."
+
+#~ msgid "git remote set-head <name> (-a | --auto | -d | --delete |<branch>)"
+#~ msgstr "git remote set-head <Name> (-a | --auto | -d | --delete | <Branch>)"
+
 #~ msgid "no files added"
 #~ msgstr "keine Dateien hinzugefügt"
 
 #~ msgid "force creation (when already exists)"
 #~ msgstr "Branch auch erzeugen, wenn dieser bereits existiert"
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/fr.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/fr.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/fr.po	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/fr.po	2015-05-01 03:12:02.000000000 +0800
@@ -70,14 +70,14 @@
 #   work(ing) tree   |  copie de travail
 #
 msgid ""
 msgstr ""
 "Project-Id-Version: git\n"
 "Report-Msgid-Bugs-To: Git Mailing List <git@vger.kernel.org>\n"
-"POT-Creation-Date: 2015-01-21 14:21+0800\n"
-"PO-Revision-Date: 2015-01-21 14:57+0800\n"
+"POT-Creation-Date: 2015-04-03 08:13+0800\n"
+"PO-Revision-Date: 2015-04-04 18:03+0200\n"
 "Last-Translator: Jean-Noël Avila <jn.avila@free.fr>\n"
 "Language-Team: Jean-Noël Avila <jn.avila@free.fr>\n"
 "Language: fr\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
@@ -95,24 +95,24 @@
 msgstr ""
 "Corrigez-les dans la copie de travail,\n"
 "puis utilisez 'git add/rm <fichier>' si\n"
 "nécessaire pour marquer la résolution et valider."
 
 #: archive.c:11
-msgid "git archive [options] <tree-ish> [<path>...]"
-msgstr "git archive [options] <arbre ou apparenté> [<chemin>...]"
+msgid "git archive [<options>] <tree-ish> [<path>...]"
+msgstr "git archive [<options>] <arbre ou apparenté> [<chemin>...]"
 
 #: archive.c:12
 msgid "git archive --list"
 msgstr "git archive --list"
 
 #: archive.c:13
 msgid ""
-"git archive --remote <repo> [--exec <cmd>] [options] <tree-ish> [<path>...]"
+"git archive --remote <repo> [--exec <cmd>] [<options>] <tree-ish> [<path>...]"
 msgstr ""
-"git archive --remote <dépôt> [--exec <commande>] [options] <arbre ou "
+"git archive --remote <dépôt> [--exec <commande>] [<options>] <arbre ou "
 "apparenté> [<chemin>...]"
 
 #: archive.c:14
 msgid "git archive --remote <repo> [--exec <cmd>] --list"
 msgstr "git archive --remote <dépôt> [--exec <commande>] --list"
 
@@ -134,16 +134,16 @@
 msgstr "préfixe"
 
 #: archive.c:429
 msgid "prepend prefix to each pathname in the archive"
 msgstr "préfixer chaque chemin de fichier dans l'archive"
 
-#: archive.c:430 builtin/archive.c:88 builtin/blame.c:2517
-#: builtin/blame.c:2518 builtin/config.c:57 builtin/fast-export.c:986
+#: archive.c:430 builtin/archive.c:88 builtin/blame.c:2516
+#: builtin/blame.c:2517 builtin/config.c:57 builtin/fast-export.c:986
 #: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:101
-#: builtin/ls-files.c:489 builtin/ls-files.c:492 builtin/notes.c:394
+#: builtin/ls-files.c:446 builtin/ls-files.c:449 builtin/notes.c:394
 #: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:151
 msgid "file"
 msgstr "fichier"
 
 #: archive.c:431 builtin/archive.c:89
 msgid "write the archive to this file"
@@ -186,13 +186,13 @@
 msgstr "commande"
 
 #: archive.c:452 builtin/archive.c:93
 msgid "path to the remote git-upload-archive command"
 msgstr "chemin vers la commande distante git-upload-archive"
 
-#: attr.c:258
+#: attr.c:264
 msgid ""
 "Negative patterns are ignored in git attributes\n"
 "Use '\\!' for literal leading exclamation."
 msgstr ""
 "Les motifs de négation sont ignorés dans les attributs git\n"
 "Utilisez '\\!' pour un point d'exclamation littéral."
@@ -322,23 +322,23 @@
 
 #: bundle.c:61
 #, c-format
 msgid "unrecognized header: %s%s (%d)"
 msgstr "en-tête non reconnu : %s%s (%d)"
 
-#: bundle.c:87 builtin/commit.c:770
+#: bundle.c:87 builtin/commit.c:766
 #, c-format
 msgid "could not open '%s'"
 msgstr "impossible d'ouvrir '%s'"
 
 #: bundle.c:139
 msgid "Repository lacks these prerequisite commits:"
 msgstr "Le dépôt ne dispose pas des commits prérequis suivants :"
 
-#: bundle.c:163 sequencer.c:645 sequencer.c:1100 builtin/blame.c:2706
-#: builtin/branch.c:652 builtin/commit.c:1049 builtin/log.c:330
+#: bundle.c:163 sequencer.c:650 sequencer.c:1105 builtin/blame.c:2705
+#: builtin/branch.c:659 builtin/commit.c:1045 builtin/log.c:330
 #: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:358
 #: builtin/shortlog.c:158
 msgid "revision walk setup failed"
 msgstr "échec de la préparation du parcours des révisions"
 
 #: bundle.c:185
@@ -373,27 +373,27 @@
 
 #: bundle.c:358
 #, c-format
 msgid "ref '%s' is excluded by the rev-list options"
 msgstr "la référence '%s' est exclue par les options de rev-list"
 
-#: bundle.c:438 builtin/log.c:153 builtin/log.c:1342 builtin/shortlog.c:261
+#: bundle.c:437 builtin/log.c:153 builtin/log.c:1342 builtin/shortlog.c:261
 #, c-format
 msgid "unrecognized argument: %s"
 msgstr "argument non reconnu : %s"
 
-#: bundle.c:444
+#: bundle.c:443
 msgid "Refusing to create empty bundle."
 msgstr "Refus de créer un colis vide."
 
-#: bundle.c:454
+#: bundle.c:453
 #, c-format
 msgid "cannot create '%s'"
 msgstr "impossible de créer '%s'"
 
-#: bundle.c:475
+#: bundle.c:474
 msgid "index-pack died"
 msgstr "l'index de groupe a disparu"
 
 #: color.c:260
 #, c-format
 msgid "invalid color value: %.*s"
@@ -410,64 +410,64 @@
 msgstr "%s %s n'est pas un commit !"
 
 #: compat/obstack.c:406 compat/obstack.c:408
 msgid "memory exhausted"
 msgstr "plus de mémoire"
 
-#: config.c:469 config.c:471
+#: config.c:474 config.c:476
 #, c-format
 msgid "bad config file line %d in %s"
 msgstr "ligne %d de fichier de config incorrecte dans %s"
 
-#: config.c:587
+#: config.c:592
 #, c-format
 msgid "bad numeric config value '%s' for '%s' in %s: %s"
 msgstr ""
 "valeur numérique de configuration incorrecte '%s' pour '%s' dans %s : %s"
 
-#: config.c:589
+#: config.c:594
 #, c-format
 msgid "bad numeric config value '%s' for '%s': %s"
 msgstr "valeur numérique de configuration invalide '%s' pour '%s' : %s"
 
-#: config.c:674
+#: config.c:679
 #, c-format
 msgid "failed to expand user dir in: '%s'"
 msgstr "impossible d'étendre le répertoire utilisateur dans : '%s'"
 
-#: config.c:752 config.c:763
+#: config.c:757 config.c:768
 #, c-format
 msgid "bad zlib compression level %d"
 msgstr "niveau de compression zlib incorrect %d"
 
-#: config.c:885
+#: config.c:890
 #, c-format
 msgid "invalid mode for object creation: %s"
 msgstr "mode invalide pour la création d'objet : %s"
 
-#: config.c:1211
+#: config.c:1216
 msgid "unable to parse command-line config"
 msgstr "lecture de la configuration de ligne de commande impossible"
 
-#: config.c:1272
+#: config.c:1277
 msgid "unknown error occured while reading the configuration files"
 msgstr "erreur inconnue pendant la lecture des fichiers de configuration"
 
-#: config.c:1596
+#: config.c:1601
 #, c-format
 msgid "unable to parse '%s' from command-line config"
 msgstr ""
 "impossible d'analyser '%s' depuis le configuration en ligne de commande"
 
-#: config.c:1598
+#: config.c:1603
 #, c-format
 msgid "bad config variable '%s' in file '%s' at line %d"
 msgstr ""
 "variable de configuration '%s' incorrecte dans le fichier '%s' à la ligne %d"
 
-#: config.c:1657
+#: config.c:1662
 #, c-format
 msgid "%s has multiple values"
 msgstr "%s a des valeurs multiples"
 
 #: connected.c:69
 msgid "Could not run 'git rev-list'"
@@ -553,13 +553,13 @@
 
 #: diffcore-order.c:24
 #, c-format
 msgid "failed to read orderfile '%s'"
 msgstr "impossible de lire le fichier de commande '%s'"
 
-#: diffcore-rename.c:516
+#: diffcore-rename.c:536
 msgid "Performing inexact rename detection"
 msgstr "Détection de renommage inexact en cours"
 
 #: diff.c:114
 #, c-format
 msgid "  Failed to parse dirstat cut-off percentage '%s'\n"
@@ -583,31 +583,31 @@
 "Found errors in 'diff.dirstat' config variable:\n"
 "%s"
 msgstr ""
 "Erreurs dans la variable de configuration 'diff.dirstat' :\n"
 "%s"
 
-#: diff.c:2957
+#: diff.c:2956
 #, c-format
 msgid "external diff died, stopping at %s"
 msgstr "l'application de diff externe a disparu, arrêt à %s"
 
-#: diff.c:3352
+#: diff.c:3351
 msgid "--follow requires exactly one pathspec"
 msgstr "--follow a besoin d'une spécification de chemin unique"
 
-#: diff.c:3515
+#: diff.c:3514
 #, c-format
 msgid ""
 "Failed to parse --dirstat/-X option parameter:\n"
 "%s"
 msgstr ""
 "Impossible d'analyser le paramètre de l'option --dirstat/-X :\n"
 "%s"
 
-#: diff.c:3529
+#: diff.c:3528
 #, c-format
 msgid "Failed to parse --submodule option parameter: '%s'"
 msgstr "Impossible d'analyser le paramètre de l'option --submodule : '%s'"
 
 #: gpg-interface.c:129 gpg-interface.c:200
 msgid "could not run gpg."
@@ -955,33 +955,33 @@
 
 #: merge-recursive.c:1853
 #, c-format
 msgid "Unprocessed path??? %s"
 msgstr "Chemin non traité ??? %s"
 
-#: merge-recursive.c:1898
+#: merge-recursive.c:1901
 msgid "Merging:"
 msgstr "Fusion :"
 
-#: merge-recursive.c:1911
+#: merge-recursive.c:1914
 #, c-format
 msgid "found %u common ancestor:"
 msgid_plural "found %u common ancestors:"
 msgstr[0] "%u ancêtre commun trouvé :"
 msgstr[1] "%u ancêtres communs trouvés :"
 
-#: merge-recursive.c:1948
+#: merge-recursive.c:1951
 msgid "merge returned no commit"
 msgstr "la fusion n'a pas retourné de commit"
 
-#: merge-recursive.c:2005
+#: merge-recursive.c:2008
 #, c-format
 msgid "Could not parse object '%s'"
 msgstr "Impossible d'analyser l'objet '%s'"
 
-#: merge-recursive.c:2016 builtin/merge.c:667
+#: merge-recursive.c:2019 builtin/merge.c:667
 msgid "Unable to write index."
 msgstr "Impossible d'écrire l'index."
 
 #: notes-utils.c:41
 msgid "Cannot commit uninitialized/unreferenced notes tree"
 msgstr "Impossible de valider un arbre de notes non initialisé/référencé"
@@ -1106,22 +1106,22 @@
 msgstr "impossible d'analyser le format --pretty"
 
 #: progress.c:225
 msgid "done"
 msgstr "fait"
 
-#: read-cache.c:1267
+#: read-cache.c:1275
 #, c-format
 msgid ""
 "index.version set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "version d'index renseignée, mais la valeur est invalide.\n"
 "Utilisation de la version %i"
 
-#: read-cache.c:1277
+#: read-cache.c:1285
 #, c-format
 msgid ""
 "GIT_INDEX_VERSION set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "GIT_INDEX_VERSION est renseigné, mais la valeur est invalide.\n"
@@ -1204,29 +1204,37 @@
 
 #: remote.c:2021
 msgid "  (use \"git pull\" to merge the remote branch into yours)\n"
 msgstr ""
 "  (utilisez \"git pull\" pour fusionner la branche distante dans la vôtre)\n"
 
-#: run-command.c:87
+#: revision.c:2348
+msgid "--first-parent is incompatible with --bisect"
+msgstr "--first-parent est incompatible avec --bisect"
+
+#: run-command.c:83
 msgid "open /dev/null failed"
 msgstr "échec de l'ouverture de /dev/null"
 
-#: run-command.c:89
+#: run-command.c:85
 #, c-format
 msgid "dup2(%d,%d) failed"
 msgstr "échec de dup2(%d,%d)"
 
-#: send-pack.c:268
+#: send-pack.c:272
 msgid "failed to sign the push certificate"
 msgstr "impossible de signer le certificat de poussée"
 
-#: send-pack.c:325
+#: send-pack.c:356
 msgid "the receiving end does not support --signed push"
 msgstr "Le receveur ne gère pas les poussées avec --signed"
 
+#: send-pack.c:366
+msgid "the receiving end does not support --atomic push"
+msgstr "Le receveur ne gère pas les poussées avec --atomic"
+
 #: sequencer.c:172 builtin/merge.c:782 builtin/merge.c:893 builtin/merge.c:995
 #: builtin/merge.c:1005
 #, c-format
 msgid "Could not open '%s' for writing"
 msgstr "Impossible d'ouvrir '%s' en écriture"
 
@@ -1251,13 +1259,13 @@
 "and commit the result with 'git commit'"
 msgstr ""
 "après résolution des conflits, marquez les chemins corrigés\n"
 "avec 'git add <chemins>' ou 'git rm <chemins>'\n"
 "puis validez le résultat avec 'git commit'"
 
-#: sequencer.c:211 sequencer.c:856 sequencer.c:939
+#: sequencer.c:211 sequencer.c:861 sequencer.c:944
 #, c-format
 msgid "Could not write to %s"
 msgstr "Impossible d'écrire dans %s"
 
 #: sequencer.c:214
 #, c-format
@@ -1287,192 +1295,192 @@
 msgstr "Impossible de résoudre le commit HEAD\n"
 
 #: sequencer.c:359
 msgid "Unable to update cache tree\n"
 msgstr "Impossible de mettre à jour l'arbre de cache\n"
 
-#: sequencer.c:406
+#: sequencer.c:411
 #, c-format
 msgid "Could not parse commit %s\n"
 msgstr "Impossible d'analyser le commit %s\n"
 
-#: sequencer.c:411
+#: sequencer.c:416
 #, c-format
 msgid "Could not parse parent commit %s\n"
 msgstr "Impossible d'analyser le commit parent %s\n"
 
-#: sequencer.c:477
+#: sequencer.c:482
 msgid "Your index file is unmerged."
 msgstr "Votre fichier d'index n'est pas fusionné."
 
-#: sequencer.c:496
+#: sequencer.c:501
 #, c-format
 msgid "Commit %s is a merge but no -m option was given."
 msgstr "Le commit %s est une fusion mais l'option -m n'a pas été spécifiée."
 
-#: sequencer.c:504
+#: sequencer.c:509
 #, c-format
 msgid "Commit %s does not have parent %d"
 msgstr "Le commit %s n'a pas le parent %d"
 
-#: sequencer.c:508
+#: sequencer.c:513
 #, c-format
 msgid "Mainline was specified but commit %s is not a merge."
 msgstr ""
 "Une branche principale a été spécifiée mais le commit %s n'est pas une "
 "fusion."
 
 #. TRANSLATORS: The first %s will be "revert" or
 #. "cherry-pick", the second %s a SHA1
-#: sequencer.c:521
+#: sequencer.c:526
 #, c-format
 msgid "%s: cannot parse parent commit %s"
 msgstr "%s : impossible d'analyser le commit parent %s"
 
-#: sequencer.c:525
+#: sequencer.c:530
 #, c-format
 msgid "Cannot get commit message for %s"
 msgstr "Impossible d'obtenir un message de validation pour %s"
 
-#: sequencer.c:611
+#: sequencer.c:616
 #, c-format
 msgid "could not revert %s... %s"
 msgstr "impossible d'annuler %s... %s"
 
-#: sequencer.c:612
+#: sequencer.c:617
 #, c-format
 msgid "could not apply %s... %s"
 msgstr "impossible d'appliquer %s... %s"
 
-#: sequencer.c:648
+#: sequencer.c:653
 msgid "empty commit set passed"
 msgstr "l'ensemble de commits spécifié est vide"
 
-#: sequencer.c:656
+#: sequencer.c:661
 #, c-format
 msgid "git %s: failed to read the index"
 msgstr "git %s : échec à la lecture de l'index"
 
-#: sequencer.c:660
+#: sequencer.c:665
 #, c-format
 msgid "git %s: failed to refresh the index"
 msgstr "git %s : échec du rafraîchissement de l'index"
 
-#: sequencer.c:720
+#: sequencer.c:725
 #, c-format
 msgid "Cannot %s during a %s"
 msgstr "Impossible de %s pendant un %s"
 
-#: sequencer.c:742
+#: sequencer.c:747
 #, c-format
 msgid "Could not parse line %d."
 msgstr "Impossible d'analyser la ligne %d."
 
-#: sequencer.c:747
+#: sequencer.c:752
 msgid "No commits parsed."
 msgstr "Aucun commit analysé."
 
-#: sequencer.c:760
+#: sequencer.c:765
 #, c-format
 msgid "Could not open %s"
 msgstr "Impossible d'ouvrir %s"
 
-#: sequencer.c:764
+#: sequencer.c:769
 #, c-format
 msgid "Could not read %s."
 msgstr "Impossible de lire %s."
 
-#: sequencer.c:771
+#: sequencer.c:776
 #, c-format
 msgid "Unusable instruction sheet: %s"
 msgstr "Feuille d'instruction inutilisable : %s"
 
-#: sequencer.c:801
+#: sequencer.c:806
 #, c-format
 msgid "Invalid key: %s"
 msgstr "Clé invalide: %s"
 
-#: sequencer.c:804
+#: sequencer.c:809
 #, c-format
 msgid "Invalid value for %s: %s"
 msgstr "Valeur invalide pour %s : %s"
 
-#: sequencer.c:816
+#: sequencer.c:821
 #, c-format
 msgid "Malformed options sheet: %s"
 msgstr "Feuille d'options malformée : %s"
 
-#: sequencer.c:837
+#: sequencer.c:842
 msgid "a cherry-pick or revert is already in progress"
 msgstr "un picorage ou un retour est déjà en cours"
 
-#: sequencer.c:838
+#: sequencer.c:843
 msgid "try \"git cherry-pick (--continue | --quit | --abort)\""
 msgstr "essayez \"git cherry-pick (--continue|--quit|-- abort)\""
 
-#: sequencer.c:842
+#: sequencer.c:847
 #, c-format
 msgid "Could not create sequencer directory %s"
 msgstr "Impossible de créer le répertoire de séquenceur %s"
 
-#: sequencer.c:858 sequencer.c:943
+#: sequencer.c:863 sequencer.c:948
 #, c-format
 msgid "Error wrapping up %s."
 msgstr "Erreur lors de l'emballage de %s."
 
-#: sequencer.c:877 sequencer.c:1013
+#: sequencer.c:882 sequencer.c:1018
 msgid "no cherry-pick or revert in progress"
 msgstr "aucun picorage ou retour en cours"
 
-#: sequencer.c:879
+#: sequencer.c:884
 msgid "cannot resolve HEAD"
 msgstr "impossible de résoudre HEAD"
 
-#: sequencer.c:881
+#: sequencer.c:886
 msgid "cannot abort from a branch yet to be born"
 msgstr "impossible d'abandonner depuis une branche non encore créée"
 
-#: sequencer.c:903 builtin/apply.c:4128
+#: sequencer.c:908 builtin/apply.c:4288
 #, c-format
 msgid "cannot open %s: %s"
 msgstr "impossible d'ouvrir %s : %s"
 
-#: sequencer.c:906
+#: sequencer.c:911
 #, c-format
 msgid "cannot read %s: %s"
 msgstr "impossible de lire %s : %s"
 
-#: sequencer.c:907
+#: sequencer.c:912
 msgid "unexpected end of file"
 msgstr "fin de fichier inattendue"
 
-#: sequencer.c:913
+#: sequencer.c:918
 #, c-format
 msgid "stored pre-cherry-pick HEAD file '%s' is corrupt"
 msgstr "le fichier HEAD de préparation de picorage '%s' est corrompu"
 
-#: sequencer.c:936
+#: sequencer.c:941
 #, c-format
 msgid "Could not format %s."
 msgstr "Impossible de formater %s."
 
-#: sequencer.c:1081
+#: sequencer.c:1086
 #, c-format
 msgid "%s: can't cherry-pick a %s"
 msgstr "%s : impossible de picorer un %s"
 
-#: sequencer.c:1084
+#: sequencer.c:1089
 #, c-format
 msgid "%s: bad revision"
 msgstr "%s : mauvaise révision"
 
-#: sequencer.c:1118
+#: sequencer.c:1123
 msgid "Can't revert as initial commit"
 msgstr "Impossible d'annuler en tant que commit initial"
 
-#: sequencer.c:1119
+#: sequencer.c:1124
 msgid "Can't cherry-pick into empty head"
 msgstr "Impossible de picorer vers une HEAD vide"
 
 #: sha1_name.c:440
 msgid ""
 "Git normally never creates a ref that ends with 40 hex characters\n"
@@ -1540,44 +1548,44 @@
 msgstr "Impossible de supprimer l'élément de .gitmodules pour %s"
 
 #: submodule.c:120
 msgid "staging updated .gitmodules failed"
 msgstr "échec de la mise en index du .gitmodules mis à jour"
 
-#: submodule.c:1111 builtin/init-db.c:371
+#: submodule.c:1109 builtin/init-db.c:371
 #, c-format
 msgid "Could not create git link %s"
 msgstr "Impossible de créer le lien git %s"
 
-#: submodule.c:1122
+#: submodule.c:1120
 #, c-format
 msgid "Could not set core.worktree in %s"
 msgstr "Impossible de paramétrer core.worktree dans %s"
 
-#: trailer.c:500 trailer.c:504 trailer.c:508 trailer.c:562 trailer.c:566
-#: trailer.c:570
+#: trailer.c:491 trailer.c:495 trailer.c:499 trailer.c:553 trailer.c:557
+#: trailer.c:561
 #, c-format
 msgid "unknown value '%s' for key '%s'"
 msgstr "valeur inconnue '%s' pour la clé '%s'"
 
-#: trailer.c:552 trailer.c:557 builtin/remote.c:290
+#: trailer.c:543 trailer.c:548 builtin/remote.c:290
 #, c-format
 msgid "more than one %s"
 msgstr "plus d'un %s"
 
-#: trailer.c:590
+#: trailer.c:581
 #, c-format
 msgid "empty trailer token in trailer '%.*s'"
 msgstr "symbole vide dans la ligne de fin '%.*s'"
 
-#: trailer.c:710
+#: trailer.c:701
 #, c-format
 msgid "could not read input file '%s'"
 msgstr "impossible de lire le fichier d'entrée '%s'"
 
-#: trailer.c:713
+#: trailer.c:704
 msgid "could not read from stdin"
 msgstr "Impossible de lire depuis l'entrée standard"
 
 #: unpack-trees.c:202
 msgid "Checking out files"
 msgstr "Extraction des fichiers"
@@ -1608,34 +1616,34 @@
 msgstr "numéro de port invalide"
 
 #: urlmatch.c:322
 msgid "invalid '..' path segment"
 msgstr "segment de chemin '..' invalide"
 
-#: wrapper.c:509
+#: wrapper.c:523
 #, c-format
 msgid "unable to access '%s': %s"
 msgstr "impossible d'accéder à '%s' : %s"
 
-#: wrapper.c:530
+#: wrapper.c:544
 #, c-format
 msgid "unable to access '%s'"
 msgstr "impossible d'accéder à '%s'"
 
-#: wrapper.c:541
+#: wrapper.c:555
 #, c-format
 msgid "unable to look up current user in the passwd file: %s"
 msgstr ""
 "impossible de rechercher l'utilisateur actuel dans le fichier de mots de "
 "passe : %s"
 
-#: wrapper.c:542
+#: wrapper.c:556
 msgid "no such user"
 msgstr "utilisateur inconnu"
 
-#: wrapper.c:550
+#: wrapper.c:564
 msgid "unable to get current working directory"
 msgstr "impossible d'accéder au répertoire de travail courant"
 
 #: wt-status.c:150
 msgid "Unmerged paths:"
 msgstr "Chemins non fusionnés :"
@@ -1660,17 +1668,17 @@
 "résolu)"
 
 #: wt-status.c:187
 msgid "  (use \"git rm <file>...\" to mark resolution)"
 msgstr "  (utilisez \"git rm <fichier>...\" pour marquer comme résolu)"
 
-#: wt-status.c:198
+#: wt-status.c:198 wt-status.c:878
 msgid "Changes to be committed:"
 msgstr "Modifications qui seront validées :"
 
-#: wt-status.c:216
+#: wt-status.c:216 wt-status.c:887
 msgid "Changes not staged for commit:"
 msgstr "Modifications qui ne seront pas validées :"
 
 #: wt-status.c:220
 msgid "  (use \"git add <file>...\" to update what will be committed)"
 msgstr ""
@@ -1779,317 +1787,317 @@
 
 #: wt-status.c:391
 #, c-format
 msgid "bug: unhandled diff status %c"
 msgstr "bogue : état de diff non géré %c"
 
-#: wt-status.c:758
+#: wt-status.c:753
 msgid "Submodules changed but not updated:"
 msgstr "Sous-modules modifiés mais non mis à jour :"
 
-#: wt-status.c:760
+#: wt-status.c:755
 msgid "Submodule changes to be committed:"
 msgstr "Changements du sous-module à valider :"
 
-#: wt-status.c:839
+#: wt-status.c:835
 msgid ""
 "Do not touch the line above.\n"
 "Everything below will be removed."
 msgstr ""
 "Ne touchez pas à la ligne ci-dessus\n"
 "Tout se qui suit sera éliminé."
 
-#: wt-status.c:930
+#: wt-status.c:946
 msgid "You have unmerged paths."
 msgstr "Vous avez des chemins non fusionnés."
 
-#: wt-status.c:933
+#: wt-status.c:949
 msgid "  (fix conflicts and run \"git commit\")"
 msgstr "  (réglez les conflits puis lancez \"git commit\")"
 
-#: wt-status.c:936
+#: wt-status.c:952
 msgid "All conflicts fixed but you are still merging."
 msgstr "Tous les conflits sont réglés mais la fusion n'est pas terminée."
 
-#: wt-status.c:939
+#: wt-status.c:955
 msgid "  (use \"git commit\" to conclude merge)"
 msgstr "  (utilisez \"git commit\" pour terminer la fusion)"
 
-#: wt-status.c:949
+#: wt-status.c:965
 msgid "You are in the middle of an am session."
 msgstr "Vous êtes au milieu d'une session am."
 
-#: wt-status.c:952
+#: wt-status.c:968
 msgid "The current patch is empty."
 msgstr "Le patch actuel est vide."
 
-#: wt-status.c:956
+#: wt-status.c:972
 msgid "  (fix conflicts and then run \"git am --continue\")"
 msgstr "  (réglez les conflits puis lancez \"git am --continue\")"
 
-#: wt-status.c:958
+#: wt-status.c:974
 msgid "  (use \"git am --skip\" to skip this patch)"
 msgstr "  (utilisez \"git am --skip\" pour sauter ce patch)"
 
-#: wt-status.c:960
+#: wt-status.c:976
 msgid "  (use \"git am --abort\" to restore the original branch)"
 msgstr "  (utilisez \"git am --abort\" pour restaurer la branche d'origine)"
 
-#: wt-status.c:1020 wt-status.c:1037
+#: wt-status.c:1036 wt-status.c:1053
 #, c-format
 msgid "You are currently rebasing branch '%s' on '%s'."
 msgstr "Vous êtes en train de rebaser la branche '%s' sur '%s'."
 
-#: wt-status.c:1025 wt-status.c:1042
+#: wt-status.c:1041 wt-status.c:1058
 msgid "You are currently rebasing."
 msgstr "Vous êtes en train de rebaser."
 
-#: wt-status.c:1028
+#: wt-status.c:1044
 msgid "  (fix conflicts and then run \"git rebase --continue\")"
 msgstr "  (réglez les conflits puis lancez \"git rebase --continue\")"
 
-#: wt-status.c:1030
+#: wt-status.c:1046
 msgid "  (use \"git rebase --skip\" to skip this patch)"
 msgstr "  (utilisez \"git rebase --skip\" pour sauter ce patch)"
 
-#: wt-status.c:1032
+#: wt-status.c:1048
 msgid "  (use \"git rebase --abort\" to check out the original branch)"
 msgstr "  (utilisez \"git rebase --abort\" pour extraire la branche d'origine)"
 
-#: wt-status.c:1045
+#: wt-status.c:1061
 msgid "  (all conflicts fixed: run \"git rebase --continue\")"
 msgstr "  (tous les conflits sont réglés : lancez \"git rebase --continue\")"
 
-#: wt-status.c:1049
+#: wt-status.c:1065
 #, c-format
 msgid ""
 "You are currently splitting a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "Vous êtes actuellement en train de fractionner un commit pendant un rebasage "
 "de la branche '%s' sur '%s'."
 
-#: wt-status.c:1054
+#: wt-status.c:1070
 msgid "You are currently splitting a commit during a rebase."
 msgstr ""
 "Vous êtes actuellement en train de fractionner un commit pendant un rebasage."
 
-#: wt-status.c:1057
+#: wt-status.c:1073
 msgid "  (Once your working directory is clean, run \"git rebase --continue\")"
 msgstr ""
 "  (Une fois la copie de travail nettoyée, lancez \"git rebase --continue\")"
 
-#: wt-status.c:1061
+#: wt-status.c:1077
 #, c-format
 msgid "You are currently editing a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "Vous êtes actuellement en train d'éditer un commit pendant un rebasage de la "
 "branche '%s' sur '%s'."
 
-#: wt-status.c:1066
+#: wt-status.c:1082
 msgid "You are currently editing a commit during a rebase."
 msgstr ""
 "Vous êtes actuellement en train d'éditer un commit pendant un rebasage."
 
-#: wt-status.c:1069
+#: wt-status.c:1085
 msgid "  (use \"git commit --amend\" to amend the current commit)"
 msgstr "  (utilisez \"git commit --amend\" pour corriger le commit actuel)"
 
-#: wt-status.c:1071
+#: wt-status.c:1087
 msgid ""
 "  (use \"git rebase --continue\" once you are satisfied with your changes)"
 msgstr ""
 "  (utilisez \"git rebase --continue\" quand vous êtes satisfait de vos "
 "modifications)"
 
-#: wt-status.c:1081
+#: wt-status.c:1097
 #, c-format
 msgid "You are currently cherry-picking commit %s."
 msgstr "Vous êtes actuellement en train de picorer le commit %s."
 
-#: wt-status.c:1086
+#: wt-status.c:1102
 msgid "  (fix conflicts and run \"git cherry-pick --continue\")"
 msgstr "  (réglez les conflits puis lancez \"git cherry-pick --continue\")"
 
-#: wt-status.c:1089
+#: wt-status.c:1105
 msgid "  (all conflicts fixed: run \"git cherry-pick --continue\")"
 msgstr ""
 "  (tous les conflits sont réglés : lancez \"git cherry-pick --continue\")"
 
-#: wt-status.c:1091
+#: wt-status.c:1107
 msgid "  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)"
 msgstr "  (utilisez \"git cherry-pick --abort\" pour annuler le picorage)"
 
-#: wt-status.c:1100
+#: wt-status.c:1116
 #, c-format
 msgid "You are currently reverting commit %s."
 msgstr "Vous êtes actuellement en train de rétablir le commit %s."
 
-#: wt-status.c:1105
+#: wt-status.c:1121
 msgid "  (fix conflicts and run \"git revert --continue\")"
 msgstr "  (réglez les conflits puis lancez \"git revert --continue\")"
 
-#: wt-status.c:1108
+#: wt-status.c:1124
 msgid "  (all conflicts fixed: run \"git revert --continue\")"
 msgstr "  (tous les conflits sont réglés : lancez \"git revert --continue\")"
 
-#: wt-status.c:1110
+#: wt-status.c:1126
 msgid "  (use \"git revert --abort\" to cancel the revert operation)"
 msgstr "  (utilisez \"git revert --abort\" pour annuler le rétablissement)"
 
-#: wt-status.c:1121
+#: wt-status.c:1137
 #, c-format
 msgid "You are currently bisecting, started from branch '%s'."
 msgstr "Vous êtes en cours de bissection, depuis la branche '%s'."
 
-#: wt-status.c:1125
+#: wt-status.c:1141
 msgid "You are currently bisecting."
 msgstr "Vous êtes en cours de bissection."
 
-#: wt-status.c:1128
+#: wt-status.c:1144
 msgid "  (use \"git bisect reset\" to get back to the original branch)"
 msgstr "  (utilisez \"git bisect reset\" pour revenir à la branche d'origine)"
 
-#: wt-status.c:1303
+#: wt-status.c:1321
 msgid "On branch "
 msgstr "Sur la branche "
 
-#: wt-status.c:1310
+#: wt-status.c:1328
 msgid "rebase in progress; onto "
 msgstr "rebasage en cours ; sur "
 
-#: wt-status.c:1317
+#: wt-status.c:1333
 msgid "HEAD detached at "
 msgstr "HEAD détachée sur "
 
-#: wt-status.c:1319
+#: wt-status.c:1335
 msgid "HEAD detached from "
 msgstr "HEAD détachée depuis "
 
-#: wt-status.c:1322
+#: wt-status.c:1338
 msgid "Not currently on any branch."
 msgstr "Actuellement sur aucun branche."
 
-#: wt-status.c:1339
+#: wt-status.c:1355
 msgid "Initial commit"
 msgstr "Validation initiale"
 
-#: wt-status.c:1353
+#: wt-status.c:1369
 msgid "Untracked files"
 msgstr "Fichiers non suivis"
 
-#: wt-status.c:1355
+#: wt-status.c:1371
 msgid "Ignored files"
 msgstr "Fichiers ignorés"
 
-#: wt-status.c:1359
+#: wt-status.c:1375
 #, c-format
 msgid ""
 "It took %.2f seconds to enumerate untracked files. 'status -uno'\n"
 "may speed it up, but you have to be careful not to forget to add\n"
 "new files yourself (see 'git help status')."
 msgstr ""
 "L'énumération des fichiers non suivis a duré %.2f secondes. 'status -uno'\n"
 "peut l'accélérer, mais vous devez alors faire attention à ne pas\n"
 "oublier d'ajouter les nouveaux fichiers par vous-même (voir 'git help "
 "status')."
 
-#: wt-status.c:1365
+#: wt-status.c:1381
 #, c-format
 msgid "Untracked files not listed%s"
 msgstr "Fichiers non suivis non affichés%s"
 
-#: wt-status.c:1367
+#: wt-status.c:1383
 msgid " (use -u option to show untracked files)"
 msgstr " (utilisez -u pour afficher les fichiers non suivis)"
 
-#: wt-status.c:1373
+#: wt-status.c:1389
 msgid "No changes"
 msgstr "Aucune modification"
 
-#: wt-status.c:1378
+#: wt-status.c:1394
 #, c-format
 msgid "no changes added to commit (use \"git add\" and/or \"git commit -a\")\n"
 msgstr ""
 "aucune modification n'a été ajoutée à la validation (utilisez \"git add\" ou "
 "\"git commit -a\")\n"
 
-#: wt-status.c:1381
+#: wt-status.c:1397
 #, c-format
 msgid "no changes added to commit\n"
 msgstr "aucune modification ajoutée à la validation\n"
 
-#: wt-status.c:1384
+#: wt-status.c:1400
 #, c-format
 msgid ""
 "nothing added to commit but untracked files present (use \"git add\" to "
 "track)\n"
 msgstr ""
 "aucune modification ajoutée à la validation mais des fichiers non suivis "
 "sont présents (utilisez \"git add\" pour les suivre)\n"
 
-#: wt-status.c:1387
+#: wt-status.c:1403
 #, c-format
 msgid "nothing added to commit but untracked files present\n"
 msgstr ""
 "aucune modification ajoutée à la validation mais des fichiers non suivis "
 "sont présents\n"
 
-#: wt-status.c:1390
+#: wt-status.c:1406
 #, c-format
 msgid "nothing to commit (create/copy files and use \"git add\" to track)\n"
 msgstr ""
 "rien à valider (créez/copiez des fichiers et utilisez \"git add\" pour les "
 "suivre)\n"
 
-#: wt-status.c:1393 wt-status.c:1398
+#: wt-status.c:1409 wt-status.c:1414
 #, c-format
 msgid "nothing to commit\n"
 msgstr "rien à valider\n"
 
-#: wt-status.c:1396
+#: wt-status.c:1412
 #, c-format
 msgid "nothing to commit (use -u to show untracked files)\n"
 msgstr "rien à valider (utilisez -u pour afficher les fichiers non suivis)\n"
 
-#: wt-status.c:1400
+#: wt-status.c:1416
 #, c-format
 msgid "nothing to commit, working directory clean\n"
 msgstr "rien à valider, la copie de travail est propre\n"
 
-#: wt-status.c:1509
+#: wt-status.c:1525
 msgid "HEAD (no branch)"
 msgstr "HEAD (aucune branche)"
 
-#: wt-status.c:1515
+#: wt-status.c:1531
 msgid "Initial commit on "
 msgstr "Validation initiale sur "
 
 # à priori on parle d'une branche ici
-#: wt-status.c:1547
+#: wt-status.c:1563
 msgid "gone"
 msgstr "disparue"
 
-#: wt-status.c:1549 wt-status.c:1557
+#: wt-status.c:1565 wt-status.c:1573
 msgid "behind "
 msgstr "derrière "
 
 #: compat/precompose_utf8.c:55 builtin/clone.c:360
 #, c-format
 msgid "failed to unlink '%s'"
 msgstr "échec lors de l'unlink de '%s'"
 
 #: builtin/add.c:22
-msgid "git add [options] [--] <pathspec>..."
-msgstr "git add [options] [--] <chemin>..."
+msgid "git add [<options>] [--] <pathspec>..."
+msgstr "git add [<options>] [--] <chemin>..."
 
 #: builtin/add.c:65
 #, c-format
 msgid "unexpected diff status %c"
 msgstr "status de diff inattendu %c"
 
-#: builtin/add.c:70 builtin/commit.c:275
+#: builtin/add.c:70 builtin/commit.c:277
 msgid "updating files failed"
 msgstr "échec de la mise à jour des fichiers"
 
 #: builtin/add.c:80
 #, c-format
 msgid "remove '%s'\n"
@@ -2128,20 +2136,20 @@
 
 #: builtin/add.c:231
 msgid "The following paths are ignored by one of your .gitignore files:\n"
 msgstr ""
 "Les chemins suivants sont ignorés par un de vos fichiers .gitignore :\n"
 
-#: builtin/add.c:248 builtin/clean.c:875 builtin/fetch.c:108 builtin/mv.c:110
-#: builtin/prune-packed.c:55 builtin/push.c:499 builtin/remote.c:1372
+#: builtin/add.c:248 builtin/clean.c:876 builtin/fetch.c:107 builtin/mv.c:110
+#: builtin/prune-packed.c:55 builtin/push.c:508 builtin/remote.c:1372
 #: builtin/rm.c:269
 msgid "dry run"
 msgstr "simuler l'action"
 
-#: builtin/add.c:249 builtin/apply.c:4415 builtin/check-ignore.c:19
-#: builtin/commit.c:1326 builtin/count-objects.c:63 builtin/fsck.c:608
+#: builtin/add.c:249 builtin/apply.c:4577 builtin/check-ignore.c:19
+#: builtin/commit.c:1322 builtin/count-objects.c:63 builtin/fsck.c:608
 #: builtin/log.c:1617 builtin/mv.c:109 builtin/read-tree.c:114
 msgid "be verbose"
 msgstr "mode verbeux"
 
 #: builtin/add.c:251
 msgid "interactive picking"
@@ -2215,88 +2223,88 @@
 
 #: builtin/add.c:358
 #, c-format
 msgid "Maybe you wanted to say 'git add .'?\n"
 msgstr "Vous vouliez sûrement dire 'git add .' ?\n"
 
-#: builtin/add.c:363 builtin/check-ignore.c:172 builtin/clean.c:919
-#: builtin/commit.c:333 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:299
+#: builtin/add.c:363 builtin/check-ignore.c:172 builtin/clean.c:920
+#: builtin/commit.c:335 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:299
 msgid "index file corrupt"
 msgstr "fichier d'index corrompu"
 
-#: builtin/add.c:446 builtin/apply.c:4510 builtin/mv.c:279 builtin/rm.c:431
+#: builtin/add.c:446 builtin/apply.c:4675 builtin/mv.c:279 builtin/rm.c:431
 msgid "Unable to write new index file"
 msgstr "Impossible d'écrire le nouveau fichier d'index"
 
-#: builtin/apply.c:58
-msgid "git apply [options] [<patch>...]"
-msgstr "git apply [options] [<patch>...]"
+#: builtin/apply.c:59
+msgid "git apply [<options>] [<patch>...]"
+msgstr "git apply [<options>] [<patch>...]"
 
-#: builtin/apply.c:111
+#: builtin/apply.c:112
 #, c-format
 msgid "unrecognized whitespace option '%s'"
 msgstr "option d'espace non reconnue '%s'"
 
-#: builtin/apply.c:126
+#: builtin/apply.c:127
 #, c-format
 msgid "unrecognized whitespace ignore option '%s'"
 msgstr "option d'ignorance d'espace non reconnue '%s'"
 
-#: builtin/apply.c:826
+#: builtin/apply.c:822
 #, c-format
 msgid "Cannot prepare timestamp regexp %s"
 msgstr "Impossible de préparer la regexp d'horodatage %s"
 
-#: builtin/apply.c:835
+#: builtin/apply.c:831
 #, c-format
 msgid "regexec returned %d for input: %s"
 msgstr "regexec a retourné %d pour l'entrée : %s"
 
-#: builtin/apply.c:916
+#: builtin/apply.c:912
 #, c-format
 msgid "unable to find filename in patch at line %d"
 msgstr "nom de fichier du patch introuvable à la ligne %d"
 
-#: builtin/apply.c:948
+#: builtin/apply.c:944
 #, c-format
 msgid "git apply: bad git-diff - expected /dev/null, got %s on line %d"
 msgstr ""
 "git apply : mauvais format de git-diff - /dev/null attendu, %s trouvé à la "
 "ligne %d"
 
-#: builtin/apply.c:952
+#: builtin/apply.c:948
 #, c-format
 msgid "git apply: bad git-diff - inconsistent new filename on line %d"
 msgstr ""
 "git apply : mauvais format de git-diff - nouveau nom de fichier inconsistant "
 "à la ligne %d"
 
-#: builtin/apply.c:953
+#: builtin/apply.c:949
 #, c-format
 msgid "git apply: bad git-diff - inconsistent old filename on line %d"
 msgstr ""
 "git apply : mauvais format de git-diff - ancien nom de fichier inconsistant "
 "à la ligne %d"
 
-#: builtin/apply.c:960
+#: builtin/apply.c:956
 #, c-format
 msgid "git apply: bad git-diff - expected /dev/null on line %d"
 msgstr ""
 "git apply : mauvais format de git-diff - /dev/null attendu à la ligne %d"
 
-#: builtin/apply.c:1423
+#: builtin/apply.c:1419
 #, c-format
 msgid "recount: unexpected line: %.*s"
 msgstr "recomptage : ligne inattendue : %.*s"
 
-#: builtin/apply.c:1480
+#: builtin/apply.c:1476
 #, c-format
 msgid "patch fragment without header at line %d: %.*s"
 msgstr "fragment de patch sans en-tête à la ligne %d : %.*s"
 
-#: builtin/apply.c:1497
+#: builtin/apply.c:1493
 #, c-format
 msgid ""
 "git diff header lacks filename information when removing %d leading pathname "
 "component (line %d)"
 msgid_plural ""
 "git diff header lacks filename information when removing %d leading pathname "
@@ -2305,413 +2313,432 @@
 "information de nom de fichier manquante dans l'en-tête de git diff lors de "
 "la suppression de %d composant de préfixe de chemin (ligne %d)"
 msgstr[1] ""
 "information de nom de fichier manquante dans l'en-tête de git diff lors de "
 "la suppression de %d composants de préfixe de chemin (ligne %d)"
 
-#: builtin/apply.c:1657
+#: builtin/apply.c:1656
 msgid "new file depends on old contents"
 msgstr "le nouveau fichier dépend de contenus anciens"
 
-#: builtin/apply.c:1659
+#: builtin/apply.c:1658
 msgid "deleted file still has contents"
 msgstr "le fichier supprimé a encore du contenu"
 
-#: builtin/apply.c:1685
+#: builtin/apply.c:1684
 #, c-format
 msgid "corrupt patch at line %d"
 msgstr "patch corrompu à la ligne %d"
 
-#: builtin/apply.c:1721
+#: builtin/apply.c:1720
 #, c-format
 msgid "new file %s depends on old contents"
 msgstr "le nouveau fichier %s dépend de contenus anciens"
 
-#: builtin/apply.c:1723
+#: builtin/apply.c:1722
 #, c-format
 msgid "deleted file %s still has contents"
 msgstr "le fichier supprimé %s a encore du contenu"
 
-#: builtin/apply.c:1726
+#: builtin/apply.c:1725
 #, c-format
 msgid "** warning: file %s becomes empty but is not deleted"
 msgstr "** attention : le fichier %s devient vide mais n'est pas supprimé"
 
-#: builtin/apply.c:1872
+#: builtin/apply.c:1871
 #, c-format
 msgid "corrupt binary patch at line %d: %.*s"
 msgstr "patch binaire corrompu à la ligne %d : %.*s"
 
-#: builtin/apply.c:1901
+#: builtin/apply.c:1900
 #, c-format
 msgid "unrecognized binary patch at line %d"
 msgstr "patch binaire non reconnu à la ligne %d"
 
-#: builtin/apply.c:2052
+#: builtin/apply.c:2051
 #, c-format
 msgid "patch with only garbage at line %d"
 msgstr "patch totalement incompréhensible à la ligne %d"
 
-#: builtin/apply.c:2142
+#: builtin/apply.c:2141
 #, c-format
 msgid "unable to read symlink %s"
 msgstr "lecture du lien symbolique %s impossible"
 
-#: builtin/apply.c:2146
+#: builtin/apply.c:2145
 #, c-format
 msgid "unable to open or read %s"
 msgstr "ouverture ou lecture de %s impossible"
 
-#: builtin/apply.c:2754
+#: builtin/apply.c:2778
 #, c-format
 msgid "invalid start of line: '%c'"
 msgstr "début de ligne invalide : '%c'"
 
-#: builtin/apply.c:2872
+#: builtin/apply.c:2897
 #, c-format
 msgid "Hunk #%d succeeded at %d (offset %d line)."
 msgid_plural "Hunk #%d succeeded at %d (offset %d lines)."
 msgstr[0] "La section n°%d a réussi à la ligne %d (offset %d ligne)."
 msgstr[1] "La section n°%d a réussi à la ligne %d (offset %d lignes)."
 
-#: builtin/apply.c:2884
+#: builtin/apply.c:2909
 #, c-format
 msgid "Context reduced to (%ld/%ld) to apply fragment at %d"
 msgstr "Contexte réduit à (%ld/%ld) pour appliquer le fragment à la ligne %d"
 
-#: builtin/apply.c:2890
+#: builtin/apply.c:2915
 #, c-format
 msgid ""
 "while searching for:\n"
 "%.*s"
 msgstr ""
 "pendant la recherche de :\n"
 "%.*s"
 
-#: builtin/apply.c:2909
+#: builtin/apply.c:2935
 #, c-format
 msgid "missing binary patch data for '%s'"
 msgstr "données de patch binaire manquantes pour '%s'"
 
-#: builtin/apply.c:3010
+#: builtin/apply.c:3036
 #, c-format
 msgid "binary patch does not apply to '%s'"
 msgstr "le patch binaire ne s'applique par correctement à '%s'"
 
-#: builtin/apply.c:3016
+#: builtin/apply.c:3042
 #, c-format
 msgid "binary patch to '%s' creates incorrect result (expecting %s, got %s)"
 msgstr ""
 "le patch binaire sur '%s' crée un résultat incorrect (%s attendu, mais %s "
 "trouvé)"
 
-#: builtin/apply.c:3037
+#: builtin/apply.c:3063
 #, c-format
 msgid "patch failed: %s:%ld"
 msgstr "le patch a échoué : %s:%ld"
 
-#: builtin/apply.c:3161
+#: builtin/apply.c:3187
 #, c-format
 msgid "cannot checkout %s"
 msgstr "extraction de %s impossible"
 
-#: builtin/apply.c:3206 builtin/apply.c:3215 builtin/apply.c:3260
+#: builtin/apply.c:3232 builtin/apply.c:3243 builtin/apply.c:3288
 #, c-format
 msgid "read of %s failed"
 msgstr "échec de la lecture de %s"
 
-#: builtin/apply.c:3240 builtin/apply.c:3462
+#: builtin/apply.c:3240
+#, c-format
+msgid "reading from '%s' beyond a symbolic link"
+msgstr "lecture depuis '%s' au-delà d'un lien symbolique"
+
+#: builtin/apply.c:3268 builtin/apply.c:3490
 #, c-format
 msgid "path %s has been renamed/deleted"
 msgstr "le chemin %s a été renommé/supprimé"
 
-#: builtin/apply.c:3321 builtin/apply.c:3476
+#: builtin/apply.c:3349 builtin/apply.c:3504
 #, c-format
 msgid "%s: does not exist in index"
 msgstr "%s : n'existe pas dans l'index"
 
-#: builtin/apply.c:3325 builtin/apply.c:3468 builtin/apply.c:3490
+#: builtin/apply.c:3353 builtin/apply.c:3496 builtin/apply.c:3518
 #, c-format
 msgid "%s: %s"
 msgstr "%s : %s"
 
-#: builtin/apply.c:3330 builtin/apply.c:3484
+#: builtin/apply.c:3358 builtin/apply.c:3512
 #, c-format
 msgid "%s: does not match index"
 msgstr "%s : ne correspond pas à l'index"
 
-#: builtin/apply.c:3432
+#: builtin/apply.c:3460
 msgid "removal patch leaves file contents"
 msgstr "le patch de suppression laisse un contenu dans le fichier"
 
-#: builtin/apply.c:3501
+#: builtin/apply.c:3529
 #, c-format
 msgid "%s: wrong type"
 msgstr "%s : type erroné"
 
-#: builtin/apply.c:3503
+#: builtin/apply.c:3531
 #, c-format
 msgid "%s has type %o, expected %o"
 msgstr "%s est de type %o, mais %o attendu"
 
-#: builtin/apply.c:3604
+#: builtin/apply.c:3690 builtin/apply.c:3692
+#, c-format
+msgid "invalid path '%s'"
+msgstr "chemin invalide '%s'"
+
+#: builtin/apply.c:3747
 #, c-format
 msgid "%s: already exists in index"
 msgstr "%s : existe déjà dans l'index"
 
-#: builtin/apply.c:3607
+#: builtin/apply.c:3750
 #, c-format
 msgid "%s: already exists in working directory"
 msgstr "%s : existe déjà dans la copie de travail"
 
-#: builtin/apply.c:3627
+#: builtin/apply.c:3770
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o)"
 msgstr "le nouveau mode (%o) de %s ne correspond pas à l'ancien mode (%o)"
 
-#: builtin/apply.c:3632
+#: builtin/apply.c:3775
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o) of %s"
 msgstr ""
 "le nouveau mode (%o) de %s ne correspond pas à l'ancien mode (%o) de %s"
 
-#: builtin/apply.c:3640
+#: builtin/apply.c:3795
+#, c-format
+msgid "affected file '%s' is beyond a symbolic link"
+msgstr "le fichier affecté '%s' est au-delà d'un lien symbolique"
+
+#: builtin/apply.c:3799
 #, c-format
 msgid "%s: patch does not apply"
 msgstr "%s : le patch ne s'applique pas"
 
-#: builtin/apply.c:3653
+#: builtin/apply.c:3813
 #, c-format
 msgid "Checking patch %s..."
 msgstr "Vérification du patch %s..."
 
-#: builtin/apply.c:3746 builtin/checkout.c:231 builtin/reset.c:135
+#: builtin/apply.c:3906 builtin/checkout.c:231 builtin/reset.c:135
 #, c-format
 msgid "make_cache_entry failed for path '%s'"
 msgstr "échec de make_cache_entry pour le chemin '%s'"
 
-#: builtin/apply.c:3889
+#: builtin/apply.c:4049
 #, c-format
 msgid "unable to remove %s from index"
 msgstr "suppression de %s dans l'index impossible"
 
-#: builtin/apply.c:3918
+#: builtin/apply.c:4078
 #, c-format
 msgid "corrupt patch for submodule %s"
 msgstr "patch corrompu pour le sous-module %s"
 
-#: builtin/apply.c:3922
+#: builtin/apply.c:4082
 #, c-format
 msgid "unable to stat newly created file '%s'"
 msgstr "stat du fichier nouvellement créé '%s' impossible"
 
-#: builtin/apply.c:3927
+#: builtin/apply.c:4087
 #, c-format
 msgid "unable to create backing store for newly created file %s"
 msgstr ""
 "création du magasin de stockage pour le fichier nouvellement créé %s "
 "impossible"
 
-#: builtin/apply.c:3930 builtin/apply.c:4038
+#: builtin/apply.c:4090 builtin/apply.c:4198
 #, c-format
 msgid "unable to add cache entry for %s"
 msgstr "ajout de l'élément de cache %s impossible"
 
-#: builtin/apply.c:3963
+#: builtin/apply.c:4123
 #, c-format
 msgid "closing file '%s'"
 msgstr "fermeture du fichier '%s'"
 
-#: builtin/apply.c:4012
+#: builtin/apply.c:4172
 #, c-format
 msgid "unable to write file '%s' mode %o"
 msgstr "écriture du fichier '%s' mode %o impossible"
 
-#: builtin/apply.c:4099
+#: builtin/apply.c:4259
 #, c-format
 msgid "Applied patch %s cleanly."
 msgstr "Patch %s appliqué proprement."
 
-#: builtin/apply.c:4107
+#: builtin/apply.c:4267
 msgid "internal error"
 msgstr "erreur interne"
 
-#: builtin/apply.c:4110
+#: builtin/apply.c:4270
 #, c-format
 msgid "Applying patch %%s with %d reject..."
 msgid_plural "Applying patch %%s with %d rejects..."
 msgstr[0] "Application du patch %%s avec %d rejet..."
 msgstr[1] "Application du patch %%s avec %d rejets..."
 
-#: builtin/apply.c:4120
+#: builtin/apply.c:4280
 #, c-format
 msgid "truncating .rej filename to %.*s.rej"
 msgstr "troncature du nom de fichier .rej en %.*s.rej"
 
-#: builtin/apply.c:4141
+#: builtin/apply.c:4301
 #, c-format
 msgid "Hunk #%d applied cleanly."
 msgstr "Section n°%d appliquée proprement."
 
-#: builtin/apply.c:4144
+#: builtin/apply.c:4304
 #, c-format
 msgid "Rejected hunk #%d."
 msgstr "Section n°%d rejetée."
 
-#: builtin/apply.c:4234
+#: builtin/apply.c:4394
 msgid "unrecognized input"
 msgstr "entrée non reconnue"
 
-#: builtin/apply.c:4245
+#: builtin/apply.c:4405
 msgid "unable to read index file"
 msgstr "lecture du fichier d'index impossible"
 
-#: builtin/apply.c:4362 builtin/apply.c:4365 builtin/clone.c:92
-#: builtin/fetch.c:93
+#: builtin/apply.c:4522 builtin/apply.c:4525 builtin/clone.c:92
+#: builtin/fetch.c:92
 msgid "path"
 msgstr "chemin"
 
-#: builtin/apply.c:4363
+#: builtin/apply.c:4523
 msgid "don't apply changes matching the given path"
 msgstr "ne pas appliquer les modifications qui correspondent au chemin donné"
 
-#: builtin/apply.c:4366
+#: builtin/apply.c:4526
 msgid "apply changes matching the given path"
 msgstr "appliquer les modifications qui correspondent au chemin donné"
 
-#: builtin/apply.c:4368
+#: builtin/apply.c:4528
 msgid "num"
 msgstr "num"
 
-#: builtin/apply.c:4369
+#: builtin/apply.c:4529
 msgid "remove <num> leading slashes from traditional diff paths"
 msgstr "supprimer <num> barres obliques des chemins traditionnels de diff"
 
-#: builtin/apply.c:4372
+#: builtin/apply.c:4532
 msgid "ignore additions made by the patch"
 msgstr "ignorer les additions réalisées par le patch"
 
-#: builtin/apply.c:4374
+#: builtin/apply.c:4534
 msgid "instead of applying the patch, output diffstat for the input"
 msgstr "au lieu d'appliquer le patch, afficher le diffstat de l'entrée"
 
-#: builtin/apply.c:4378
+#: builtin/apply.c:4538
 msgid "show number of added and deleted lines in decimal notation"
 msgstr ""
 "afficher le nombre de lignes ajoutées et supprimées en notation décimale"
 
-#: builtin/apply.c:4380
+#: builtin/apply.c:4540
 msgid "instead of applying the patch, output a summary for the input"
 msgstr "au lieu d'appliquer le patch, afficher un résumer de l'entrée"
 
-#: builtin/apply.c:4382
+#: builtin/apply.c:4542
 msgid "instead of applying the patch, see if the patch is applicable"
 msgstr "au lieu d'appliquer le patch, voir si le patch est applicable"
 
-#: builtin/apply.c:4384
+#: builtin/apply.c:4544
 msgid "make sure the patch is applicable to the current index"
 msgstr "s'assurer que le patch est applicable sur l'index actuel"
 
-#: builtin/apply.c:4386
+#: builtin/apply.c:4546
 msgid "apply a patch without touching the working tree"
 msgstr "appliquer les patch sans toucher à la copie de travail"
 
-#: builtin/apply.c:4388
+#: builtin/apply.c:4548
+msgid "accept a patch that touches outside the working area"
+msgstr "accepter un patch qui touche hors de la copie de travail"
+
+#: builtin/apply.c:4550
 msgid "also apply the patch (use with --stat/--summary/--check)"
 msgstr "appliquer aussi le patch (à utiliser avec ---stat/--summary/--check)"
 
-#: builtin/apply.c:4390
+#: builtin/apply.c:4552
 msgid "attempt three-way merge if a patch does not apply"
 msgstr "tenter une fusion à 3 points si le patch ne s'applique pas proprement"
 
-#: builtin/apply.c:4392
+#: builtin/apply.c:4554
 msgid "build a temporary index based on embedded index information"
 msgstr ""
 "construire un index temporaire fondé sur l'information de l'index embarqué"
 
-#: builtin/apply.c:4394 builtin/checkout-index.c:198 builtin/ls-files.c:455
+#: builtin/apply.c:4556 builtin/checkout-index.c:198 builtin/ls-files.c:412
 msgid "paths are separated with NUL character"
 msgstr "les chemins sont séparés par un caractère NUL"
 
-#: builtin/apply.c:4397
+#: builtin/apply.c:4559
 msgid "ensure at least <n> lines of context match"
 msgstr "s'assurer d'au moins <n> lignes de correspondance de contexte"
 
-#: builtin/apply.c:4398
+#: builtin/apply.c:4560
 msgid "action"
 msgstr "action"
 
-#: builtin/apply.c:4399
+#: builtin/apply.c:4561
 msgid "detect new or modified lines that have whitespace errors"
 msgstr ""
 "détecter des lignes nouvelles ou modifiées qui contiennent des erreurs "
 "d'espace"
 
-#: builtin/apply.c:4402 builtin/apply.c:4405
+#: builtin/apply.c:4564 builtin/apply.c:4567
 msgid "ignore changes in whitespace when finding context"
 msgstr "ignorer des modifications d'espace lors de la recherche de contexte"
 
-#: builtin/apply.c:4408
+#: builtin/apply.c:4570
 msgid "apply the patch in reverse"
 msgstr "appliquer le patch en sens inverse"
 
-#: builtin/apply.c:4410
+#: builtin/apply.c:4572
 msgid "don't expect at least one line of context"
 msgstr "ne pas s'attendre à au moins une ligne de contexte"
 
-#: builtin/apply.c:4412
+#: builtin/apply.c:4574
 msgid "leave the rejected hunks in corresponding *.rej files"
 msgstr "laisser les sections rejetées dans les fichiers *.rej correspondants"
 
-#: builtin/apply.c:4414
+#: builtin/apply.c:4576
 msgid "allow overlapping hunks"
 msgstr "accepter les recouvrements de sections"
 
-#: builtin/apply.c:4417
+#: builtin/apply.c:4579
 msgid "tolerate incorrectly detected missing new-line at the end of file"
 msgstr ""
 "tolérer des erreurs de détection de retours chariot manquants en fin de "
 "fichier"
 
-#: builtin/apply.c:4420
+#: builtin/apply.c:4582
 msgid "do not trust the line counts in the hunk headers"
 msgstr "ne pas se fier au compte de lignes dans les en-têtes de section"
 
-#: builtin/apply.c:4422
+#: builtin/apply.c:4584
 msgid "root"
 msgstr "racine"
 
-#: builtin/apply.c:4423
+#: builtin/apply.c:4585
 msgid "prepend <root> to all filenames"
 msgstr "préfixer tous les noms de fichier avec <root>"
 
-#: builtin/apply.c:4445
+#: builtin/apply.c:4607
 msgid "--3way outside a repository"
 msgstr "--3way hors d'un dépôt"
 
-#: builtin/apply.c:4453
+#: builtin/apply.c:4615
 msgid "--index outside a repository"
 msgstr "--index hors d'un dépôt"
 
-#: builtin/apply.c:4456
+#: builtin/apply.c:4618
 msgid "--cached outside a repository"
 msgstr "--cached hors d'un dépôt"
 
-#: builtin/apply.c:4472
+#: builtin/apply.c:4637
 #, c-format
 msgid "can't open patch '%s'"
 msgstr "ouverture impossible du patch '%s'"
 
-#: builtin/apply.c:4486
+#: builtin/apply.c:4651
 #, c-format
 msgid "squelched %d whitespace error"
 msgid_plural "squelched %d whitespace errors"
 msgstr[0] "%d erreur d'espace ignorée"
 msgstr[1] "%d erreurs d'espace ignorées"
 
-#: builtin/apply.c:4492 builtin/apply.c:4502
+#: builtin/apply.c:4657 builtin/apply.c:4667
 #, c-format
 msgid "%d line adds whitespace errors."
 msgid_plural "%d lines add whitespace errors."
 msgstr[0] "%d ligne a ajouté des erreurs d'espace."
 msgstr[1] "%d lignes ont ajouté des erreurs d'espace."
 
@@ -2760,142 +2787,143 @@
 
 #: builtin/bisect--helper.c:19
 msgid "update BISECT_HEAD instead of checking out the current commit"
 msgstr "mettre à jour BISECT_HEAD au lieu d'extraire le commit actuel"
 
 #: builtin/blame.c:30
-msgid "git blame [options] [rev-opts] [rev] [--] file"
-msgstr "git blame [options] [options-de-révision] [rev] [--] fichier"
+msgid "git blame [<options>] [<rev-opts>] [<rev>] [--] file"
+msgstr "git blame [<options>] [<options-de-révision>] [<rev>] [--] fichier"
 
 #: builtin/blame.c:35
-msgid "[rev-opts] are documented in git-rev-list(1)"
-msgstr "[options-de-révision] sont documentés dans git-rev-list(1)"
+msgid "<rev-opts> are documented in git-rev-list(1)"
+msgstr "<options-de-révision> sont documentés dans git-rev-list(1)"
 
-#: builtin/blame.c:2501
+#: builtin/blame.c:2500
 msgid "Show blame entries as we find them, incrementally"
 msgstr ""
 "Montrer les éléments de blâme au fur et à mesure de leur découverte, de "
 "manière incrémentale"
 
-#: builtin/blame.c:2502
+#: builtin/blame.c:2501
 msgid "Show blank SHA-1 for boundary commits (Default: off)"
 msgstr "Montrer un SHA-1 blanc pour les commits de limite (Défaut : désactivé)"
 
-#: builtin/blame.c:2503
+#: builtin/blame.c:2502
 msgid "Do not treat root commits as boundaries (Default: off)"
 msgstr ""
 "Ne pas traiter les commits racine comme des limites (Défaut : désactivé)"
 
-#: builtin/blame.c:2504
+#: builtin/blame.c:2503
 msgid "Show work cost statistics"
 msgstr "Montrer les statistiques de coût d'activité"
 
-#: builtin/blame.c:2505
+#: builtin/blame.c:2504
 msgid "Show output score for blame entries"
 msgstr "Montrer le score de sortie pour les éléments de blâme"
 
-#: builtin/blame.c:2506
+#: builtin/blame.c:2505
 msgid "Show original filename (Default: auto)"
 msgstr "Montrer les noms de fichier originaux (Défaut : auto)"
 
-#: builtin/blame.c:2507
+#: builtin/blame.c:2506
 msgid "Show original linenumber (Default: off)"
 msgstr "Montrer les numéros de lignes originaux (Défaut : désactivé)"
 
-#: builtin/blame.c:2508
+#: builtin/blame.c:2507
 msgid "Show in a format designed for machine consumption"
 msgstr "Afficher dans un format propice à la consommation par machine"
 
-#: builtin/blame.c:2509
+#: builtin/blame.c:2508
 msgid "Show porcelain format with per-line commit information"
 msgstr "Afficher en format porcelaine avec l'information de commit par ligne"
 
-#: builtin/blame.c:2510
+#: builtin/blame.c:2509
 msgid "Use the same output mode as git-annotate (Default: off)"
 msgstr "Utiliser le même mode de sortie que git-annotate (Défaut : désactivé)"
 
-#: builtin/blame.c:2511
+#: builtin/blame.c:2510
 msgid "Show raw timestamp (Default: off)"
 msgstr "Afficher les horodatages bruts (Défaut : désactivé)"
 
-#: builtin/blame.c:2512
+#: builtin/blame.c:2511
 msgid "Show long commit SHA1 (Default: off)"
 msgstr "Afficher les longs SHA1 de commits (Défaut : désactivé)"
 
-#: builtin/blame.c:2513
+#: builtin/blame.c:2512
 msgid "Suppress author name and timestamp (Default: off)"
 msgstr "Supprimer le nom de l'auteur et l'horodatage (Défaut : désactivé)"
 
-#: builtin/blame.c:2514
+#: builtin/blame.c:2513
 msgid "Show author email instead of name (Default: off)"
 msgstr "Afficher l'e-mail de l'auteur au lieu du nom (Défaut : désactivé)"
 
-#: builtin/blame.c:2515
+#: builtin/blame.c:2514
 msgid "Ignore whitespace differences"
 msgstr "Ignorer les différences d'espace"
 
-#: builtin/blame.c:2516
+#: builtin/blame.c:2515
 msgid "Spend extra cycles to find better match"
 msgstr ""
 "Dépenser des cycles supplémentaires pour trouver une meilleure correspondance"
 
-#: builtin/blame.c:2517
+#: builtin/blame.c:2516
 msgid "Use revisions from <file> instead of calling git-rev-list"
 msgstr ""
 "Utiliser les révisions du fichier <fichier> au lieu d'appeler git-rev-list"
 
-#: builtin/blame.c:2518
+#: builtin/blame.c:2517
 msgid "Use <file>'s contents as the final image"
 msgstr "Utiliser le contenu de <fichier> comme image finale"
 
-#: builtin/blame.c:2519 builtin/blame.c:2520
+#: builtin/blame.c:2518 builtin/blame.c:2519
 msgid "score"
 msgstr "score"
 
-#: builtin/blame.c:2519
+#: builtin/blame.c:2518
 msgid "Find line copies within and across files"
 msgstr "Trouver les copies de ligne dans et entre les fichiers"
 
-#: builtin/blame.c:2520
+#: builtin/blame.c:2519
 msgid "Find line movements within and across files"
 msgstr "Trouver les mouvements de ligne dans et entre les fichiers"
 
-#: builtin/blame.c:2521
+#: builtin/blame.c:2520
 msgid "n,m"
 msgstr "n,m"
 
-#: builtin/blame.c:2521
+#: builtin/blame.c:2520
 msgid "Process only line range n,m, counting from 1"
 msgstr ""
 "Traiter seulement l'intervalle de ligne n,m en commençant le compte à 1"
 
 #. TRANSLATORS: This string is used to tell us the maximum
 #. display width for a relative timestamp in "git blame"
 #. output.  For C locale, "4 years, 11 months ago", which
 #. takes 22 places, is the longest among various forms of
 #. relative timestamps, but your language may need more or
 #. fewer display columns.
-#: builtin/blame.c:2602
+#: builtin/blame.c:2601
 msgid "4 years, 11 months ago"
 msgstr "il y a 10 ans et 11 mois"
 
 #: builtin/branch.c:24
-msgid "git branch [options] [-r | -a] [--merged | --no-merged]"
-msgstr "git branch [options] [-r | -a] [--merged | --no-merged]"
+msgid "git branch [<options>] [-r | -a] [--merged | --no-merged]"
+msgstr "git branch [<options>] [-r | -a] [--merged | --no-merged]"
 
 #: builtin/branch.c:25
-msgid "git branch [options] [-l] [-f] <branchname> [<start-point>]"
-msgstr "git branch [options] [-l] [-f] <nomdebranche> [<point-de-départ>]"
+msgid "git branch [<options>] [-l] [-f] <branch-name> [<start-point>]"
+msgstr "git branch [<options] [-l] [-f] <nom-de-branche> [<point-de-départ>]"
 
 #: builtin/branch.c:26
-msgid "git branch [options] [-r] (-d | -D) <branchname>..."
-msgstr "git branch [options] [-r] (-d | -D) <nomdebranche>..."
+msgid "git branch [<options>] [-r] (-d | -D) <branch-name>..."
+msgstr "git branch [<options>] [-r] (-d | -D) <nom-de-branche>..."
 
 #: builtin/branch.c:27
-msgid "git branch [options] (-m | -M) [<oldbranch>] <newbranch>"
-msgstr "git branch [options] (-m | -M) [<anciennebranche>] <nouvellebranche>"
+msgid "git branch [<options>] (-m | -M) [<old-branch>] <new-branch>"
+msgstr ""
+"git branch [<options>] (-m | -M) [<ancienne-branche>] <nouvelle-branche>"
 
 #: builtin/branch.c:152
 #, c-format
 msgid ""
 "deleting branch '%s' that has been merged to\n"
 "         '%s', but not yet merged to HEAD."
@@ -3030,270 +3058,275 @@
 
 #: builtin/branch.c:590
 #, c-format
 msgid "(no branch, bisect started on %s)"
 msgstr "(aucune branche, bisect a démarré sur %s)"
 
-#: builtin/branch.c:593
+#: builtin/branch.c:596
+#, c-format
+msgid "(HEAD detached at %s)"
+msgstr "(HEAD détachée sur %s)"
+
+#: builtin/branch.c:599
 #, c-format
-msgid "(detached from %s)"
-msgstr "(détaché de %s)"
+msgid "(HEAD detached from %s)"
+msgstr "(HEAD détachée depuis %s)"
 
-#: builtin/branch.c:596
+#: builtin/branch.c:603
 msgid "(no branch)"
 msgstr "(aucune branche)"
 
-#: builtin/branch.c:643
+#: builtin/branch.c:650
 #, c-format
 msgid "object '%s' does not point to a commit"
 msgstr "l'objet '%s' ne pointe pas sur un commit"
 
-#: builtin/branch.c:691
+#: builtin/branch.c:698
 msgid "some refs could not be read"
 msgstr "des références n'ont pas pu être lues"
 
-#: builtin/branch.c:704
+#: builtin/branch.c:711
 msgid "cannot rename the current branch while not on any."
 msgstr "impossible de renommer la branche actuelle, il n'y en a pas."
 
-#: builtin/branch.c:714
+#: builtin/branch.c:721
 #, c-format
 msgid "Invalid branch name: '%s'"
 msgstr "Nom de branche invalide : '%s'"
 
-#: builtin/branch.c:729
+#: builtin/branch.c:736
 msgid "Branch rename failed"
 msgstr "Échec de renommage de la branche"
 
-#: builtin/branch.c:733
+#: builtin/branch.c:740
 #, c-format
 msgid "Renamed a misnamed branch '%s' away"
 msgstr "Renommage d'un branche mal nommée '%s'"
 
-#: builtin/branch.c:737
+#: builtin/branch.c:744
 #, c-format
 msgid "Branch renamed to %s, but HEAD is not updated!"
 msgstr "La branche a été renommée en %s, mais HEAD n'est pas mise à jour !"
 
-#: builtin/branch.c:744
+#: builtin/branch.c:751
 msgid "Branch is renamed, but update of config-file failed"
 msgstr ""
 "La branche est renommée, mais la mise à jour du fichier de configuration a "
 "échoué"
 
-#: builtin/branch.c:759
+#: builtin/branch.c:766
 #, c-format
 msgid "malformed object name %s"
 msgstr "nom d'objet malformé %s"
 
-#: builtin/branch.c:783
+#: builtin/branch.c:790
 #, c-format
 msgid "could not write branch description template: %s"
 msgstr "impossible d'écrire le modèle de description de branche : %s"
 
-#: builtin/branch.c:813
+#: builtin/branch.c:820
 msgid "Generic options"
 msgstr "Options génériques"
 
-#: builtin/branch.c:815
+#: builtin/branch.c:822
 msgid "show hash and subject, give twice for upstream branch"
 msgstr "afficher le hachage et le sujet, doublé pour la branche amont"
 
-#: builtin/branch.c:816
+#: builtin/branch.c:823
 msgid "suppress informational messages"
 msgstr "supprimer les messages d'information"
 
-#: builtin/branch.c:817
+#: builtin/branch.c:824
 msgid "set up tracking mode (see git-pull(1))"
 msgstr "régler le mode de suivi (voir git-pull(1))"
 
-#: builtin/branch.c:819
+#: builtin/branch.c:826
 msgid "change upstream info"
 msgstr "modifier l'information amont"
 
-#: builtin/branch.c:823
+#: builtin/branch.c:830
 msgid "use colored output"
 msgstr "utiliser la coloration dans la sortie"
 
-#: builtin/branch.c:824
+#: builtin/branch.c:831
 msgid "act on remote-tracking branches"
 msgstr "agir sur les branches de suivi distantes"
 
-#: builtin/branch.c:827 builtin/branch.c:833 builtin/branch.c:854
-#: builtin/branch.c:860 builtin/commit.c:1586 builtin/commit.c:1587
-#: builtin/commit.c:1588 builtin/commit.c:1589 builtin/tag.c:616
+#: builtin/branch.c:834 builtin/branch.c:840 builtin/branch.c:861
+#: builtin/branch.c:867 builtin/commit.c:1582 builtin/commit.c:1583
+#: builtin/commit.c:1584 builtin/commit.c:1585 builtin/tag.c:616
 #: builtin/tag.c:622
 msgid "commit"
 msgstr "commit"
 
-#: builtin/branch.c:828 builtin/branch.c:834
+#: builtin/branch.c:835 builtin/branch.c:841
 msgid "print only branches that contain the commit"
 msgstr "afficher seulement les branches qui contiennent le commit"
 
-#: builtin/branch.c:840
+#: builtin/branch.c:847
 msgid "Specific git-branch actions:"
 msgstr "Actions spécifiques à git-branch :"
 
-#: builtin/branch.c:841
+#: builtin/branch.c:848
 msgid "list both remote-tracking and local branches"
 msgstr "afficher à la fois les branches de suivi et les branches locales"
 
-#: builtin/branch.c:843
+#: builtin/branch.c:850
 msgid "delete fully merged branch"
 msgstr "supprimer une branche totalement fusionnée"
 
-#: builtin/branch.c:844
+#: builtin/branch.c:851
 msgid "delete branch (even if not merged)"
 msgstr "supprimer une branche (même non fusionnée)"
 
-#: builtin/branch.c:845
+#: builtin/branch.c:852
 msgid "move/rename a branch and its reflog"
 msgstr "déplacer/renommer une branche et son reflog"
 
-#: builtin/branch.c:846
+#: builtin/branch.c:853
 msgid "move/rename a branch, even if target exists"
 msgstr "déplacer/renommer une branche, même si la cible existe"
 
-#: builtin/branch.c:847
+#: builtin/branch.c:854
 msgid "list branch names"
 msgstr "afficher les noms des branches"
 
-#: builtin/branch.c:848
+#: builtin/branch.c:855
 msgid "create the branch's reflog"
 msgstr "créer le reflog de la branche"
 
-#: builtin/branch.c:850
+#: builtin/branch.c:857
 msgid "edit the description for the branch"
 msgstr "éditer la description de la branche"
 
-#: builtin/branch.c:851
+#: builtin/branch.c:858
 msgid "force creation, move/rename, deletion"
 msgstr "forcer la création, le déplacement/renommage, ou la suppression"
 
-#: builtin/branch.c:854
+#: builtin/branch.c:861
 msgid "print only not merged branches"
 msgstr "afficher seulement les branches non fusionnées"
 
-#: builtin/branch.c:860
+#: builtin/branch.c:867
 msgid "print only merged branches"
 msgstr "afficher seulement les branches fusionnées"
 
-#: builtin/branch.c:864
+#: builtin/branch.c:871
 msgid "list branches in columns"
 msgstr "afficher les branches en colonnes"
 
-#: builtin/branch.c:877
+#: builtin/branch.c:884
 msgid "Failed to resolve HEAD as a valid ref."
 msgstr "Échec de résolution de HEAD comme référence valide."
 
-#: builtin/branch.c:881 builtin/clone.c:637
+#: builtin/branch.c:888 builtin/clone.c:637
 msgid "HEAD not found below refs/heads!"
 msgstr "HEAD non trouvée sous refs/heads !"
 
-#: builtin/branch.c:903
+#: builtin/branch.c:910
 msgid "--column and --verbose are incompatible"
 msgstr "--column et --verbose sont incompatibles"
 
-#: builtin/branch.c:914 builtin/branch.c:953
+#: builtin/branch.c:921 builtin/branch.c:960
 msgid "branch name required"
 msgstr "le nom de branche est requis"
 
-#: builtin/branch.c:929
+#: builtin/branch.c:936
 msgid "Cannot give description to detached HEAD"
 msgstr "Impossible de décrire une HEAD détachée"
 
-#: builtin/branch.c:934
+#: builtin/branch.c:941
 msgid "cannot edit description of more than one branch"
 msgstr "impossible d'éditer la description de plus d'une branche"
 
-#: builtin/branch.c:941
+#: builtin/branch.c:948
 #, c-format
 msgid "No commit on branch '%s' yet."
 msgstr "Aucun commit sur la branche '%s'."
 
-#: builtin/branch.c:944
+#: builtin/branch.c:951
 #, c-format
 msgid "No branch named '%s'."
 msgstr "Aucune branche nommée '%s'."
 
-#: builtin/branch.c:959
+#: builtin/branch.c:966
 msgid "too many branches for a rename operation"
 msgstr "trop de branches pour une opération de renommage"
 
-#: builtin/branch.c:964
+#: builtin/branch.c:971
 msgid "too many branches to set new upstream"
 msgstr "trop de branches pour spécifier une branche amont"
 
-#: builtin/branch.c:968
+#: builtin/branch.c:975
 #, c-format
 msgid ""
 "could not set upstream of HEAD to %s when it does not point to any branch."
 msgstr ""
 "impossible de spécifier une branche amont de HEAD par %s qui ne pointe sur "
 "aucune branche."
 
-#: builtin/branch.c:971 builtin/branch.c:993 builtin/branch.c:1014
+#: builtin/branch.c:978 builtin/branch.c:1000 builtin/branch.c:1021
 #, c-format
 msgid "no such branch '%s'"
 msgstr "pas de branche '%s'"
 
-#: builtin/branch.c:975
+#: builtin/branch.c:982
 #, c-format
 msgid "branch '%s' does not exist"
 msgstr "la branche '%s' n'existe pas"
 
-#: builtin/branch.c:987
+#: builtin/branch.c:994
 msgid "too many branches to unset upstream"
 msgstr "trop de branches pour désactiver un amont"
 
-#: builtin/branch.c:991
+#: builtin/branch.c:998
 msgid "could not unset upstream of HEAD when it does not point to any branch."
 msgstr ""
 "impossible de désactiver une branche amont de HEAD quand elle ne pointe sur "
 "aucune branche."
 
-#: builtin/branch.c:997
+#: builtin/branch.c:1004
 #, c-format
 msgid "Branch '%s' has no upstream information"
 msgstr "La branche '%s' n'a aucune information de branche amont"
 
-#: builtin/branch.c:1011
+#: builtin/branch.c:1018
 msgid "it does not make sense to create 'HEAD' manually"
 msgstr "créer manuellement 'HEAD' n'a pas de sens"
 
-#: builtin/branch.c:1017
+#: builtin/branch.c:1024
 msgid "-a and -r options to 'git branch' do not make sense with a branch name"
 msgstr ""
 "les options -a et -r de 'git branch' n'ont pas de sens avec un nom de branche"
 
-#: builtin/branch.c:1020
+#: builtin/branch.c:1027
 #, c-format
 msgid ""
 "The --set-upstream flag is deprecated and will be removed. Consider using --"
 "track or --set-upstream-to\n"
 msgstr ""
 "l'option --set-upstream est obsolète et va disparaître. Utilisez plutôt --"
 "track ou --set-upstream-to\n"
 
-#: builtin/branch.c:1037
+#: builtin/branch.c:1044
 #, c-format
 msgid ""
 "\n"
 "If you wanted to make '%s' track '%s', do this:\n"
 "\n"
 msgstr ""
 "\n"
 "Si vous vouliez que '%s' suive '%s', faîtes ceci :\n"
 "\n"
 
-#: builtin/branch.c:1038
+#: builtin/branch.c:1045
 #, c-format
 msgid "    git branch -d %s\n"
 msgstr "    git branch -d %s\n"
 
-#: builtin/branch.c:1039
+#: builtin/branch.c:1046
 #, c-format
 msgid "    git branch --set-upstream-to %s\n"
 msgstr "    git branch --set-upstream-to %s\n"
 
 #: builtin/bundle.c:47
 #, c-format
@@ -3305,61 +3338,61 @@
 msgstr "La création d'un colis requiert un dépôt."
 
 #: builtin/bundle.c:60
 msgid "Need a repository to unbundle."
 msgstr "Le dépaquetage d'un colis requiert un dépôt."
 
-#: builtin/cat-file.c:328
-msgid "git cat-file (-t|-s|-e|-p|<type>|--textconv) <object>"
-msgstr "git cat-file (-t|-s|-e|-p|<type>|--textconv) <objet>"
-
-#: builtin/cat-file.c:329
-msgid "git cat-file (--batch|--batch-check) < <list_of_objects>"
-msgstr "git cat-file (--batch|--batch-check) < <liste_d_objets>"
+#: builtin/cat-file.c:326
+msgid "git cat-file (-t | -s | -e | -p | <type> | --textconv) <object>"
+msgstr "git cat-file (-t | -s | -e | -p | <type> | --textconv) <objet>"
+
+#: builtin/cat-file.c:327
+msgid "git cat-file (--batch | --batch-check) < <list-of-objects>"
+msgstr "git cat-file (--batch | --batch-check) < <liste-d-objets>"
 
-#: builtin/cat-file.c:366
+#: builtin/cat-file.c:364
 msgid "<type> can be one of: blob, tree, commit, tag"
 msgstr "<type> peut être : blob, tree, commit ou tag"
 
-#: builtin/cat-file.c:367
+#: builtin/cat-file.c:365
 msgid "show object type"
 msgstr "afficher le type de l'objet"
 
-#: builtin/cat-file.c:368
+#: builtin/cat-file.c:366
 msgid "show object size"
 msgstr "afficher la taille de l'objet"
 
-#: builtin/cat-file.c:370
+#: builtin/cat-file.c:368
 msgid "exit with zero when there's no error"
 msgstr "sortir avec un code d'erreur nul quand il n'y a aucune erreur"
 
-#: builtin/cat-file.c:371
+#: builtin/cat-file.c:369
 msgid "pretty-print object's content"
 msgstr "afficher avec mise en forme le contenu de l'objet"
 
-#: builtin/cat-file.c:373
+#: builtin/cat-file.c:371
 msgid "for blob objects, run textconv on object's content"
 msgstr "pour les objets blob, lancer textconv sur le contenu de l'objet"
 
-#: builtin/cat-file.c:375
+#: builtin/cat-file.c:373
 msgid "show info and content of objects fed from the standard input"
 msgstr ""
 "afficher l'information et le contenu des objets passés en entrée standard"
 
-#: builtin/cat-file.c:378
+#: builtin/cat-file.c:376
 msgid "show info about objects fed from the standard input"
 msgstr "afficher l'information des objets passés en entrée standard"
 
 #: builtin/check-attr.c:11
-msgid "git check-attr [-a | --all | attr...] [--] pathname..."
-msgstr "git check-attr [-a | --all | attr...] [--] chemin..."
+msgid "git check-attr [-a | --all | <attr>...] [--] <pathname>..."
+msgstr "git check-attr [-a | --all | <attr>...] [--] <chemin>..."
 
 #: builtin/check-attr.c:12
-msgid "git check-attr --stdin [-z] [-a | --all | attr...] < <list-of-paths>"
+msgid "git check-attr --stdin [-z] [-a | --all | <attr>...] < <list-of-paths>"
 msgstr ""
-"git check-attr --stdin [-z] [-a | --all | attr...] < <liste-de-chemins>"
+"git check-attr --stdin [-z] [-a | --all | <attr>...] < <liste-de-chemins>"
 
 #: builtin/check-attr.c:19
 msgid "report all attributes set on file"
 msgstr "afficher tous les attributs associés au fichier"
 
 #: builtin/check-attr.c:20
@@ -3409,14 +3442,14 @@
 
 #: builtin/check-ignore.c:168
 msgid "--non-matching is only valid with --verbose"
 msgstr "--non-matching n'est valide qu'avec --verbose"
 
 #: builtin/check-mailmap.c:8
-msgid "git check-mailmap [options] <contact>..."
-msgstr "git check-mailmap [options] <contact>..."
+msgid "git check-mailmap [<options>] <contact>..."
+msgstr "git check-mailmap [<options>] <contact>..."
 
 #: builtin/check-mailmap.c:13
 msgid "also read contacts from stdin"
 msgstr "lire aussi les contacts depuis l'entrée standard"
 
 #: builtin/check-mailmap.c:24
@@ -3426,14 +3459,14 @@
 
 #: builtin/check-mailmap.c:47
 msgid "no contacts specified"
 msgstr "aucun contact spécifié"
 
 #: builtin/checkout-index.c:126
-msgid "git checkout-index [options] [--] [<file>...]"
-msgstr "git checkout-index [options] [--] [<fichier>...]"
+msgid "git checkout-index [<options>] [--] [<file>...]"
+msgstr "git checkout-index [<options>] [--] [<fichier>...]"
 
 #: builtin/checkout-index.c:188
 msgid "check out all files in the index"
 msgstr "extraire tous les fichiers présents dans l'index"
 
 #: builtin/checkout-index.c:189
@@ -3472,18 +3505,18 @@
 
 #: builtin/checkout-index.c:208
 msgid "copy out the files from named stage"
 msgstr "copier les fichiers depuis l'index nommé"
 
 #: builtin/checkout.c:25
-msgid "git checkout [options] <branch>"
-msgstr "git checkout [options] <branche>"
+msgid "git checkout [<options>] <branch>"
+msgstr "git checkout [<options>] <branche>"
 
 #: builtin/checkout.c:26
-msgid "git checkout [options] [<branch>] -- <file>..."
-msgstr "git checkout [options] [<branche>] -- <fichier>..."
+msgid "git checkout [<options>] [<branch>] -- <file>..."
+msgstr "git checkout [<options>] [<branche>] -- <fichier>..."
 
 #: builtin/checkout.c:132 builtin/checkout.c:165
 #, c-format
 msgid "path '%s' does not have our version"
 msgstr "le chemin '%s' n'a pas notre version"
 
@@ -3608,20 +3641,20 @@
 #: builtin/checkout.c:747
 #, c-format
 msgid ""
 "If you want to keep them by creating a new branch, this may be a good time\n"
 "to do so with:\n"
 "\n"
-" git branch new_branch_name %s\n"
+" git branch <new-branch-name> %s\n"
 "\n"
 msgstr ""
 "Si vous souhaitez les garder en créant une nouvelle branche, c'est le bon "
 "moment\n"
 "pour le faire avec :\n"
 "\n"
-"git branch nouvelle_branche %s\n"
+"git branch <nouvelle-branche> %s\n"
 "\n"
 
 #: builtin/checkout.c:777
 msgid "internal error in revision walk"
 msgstr "erreur interne lors du parcours des révisions"
 
@@ -3731,14 +3764,14 @@
 
 #: builtin/checkout.c:1128
 msgid "do not limit pathspecs to sparse entries only"
 msgstr "ne pas limiter les spécificateurs de chemins aux seuls éléments creux"
 
 #: builtin/checkout.c:1130
-msgid "second guess 'git checkout no-such-branch'"
-msgstr "deuxième chance 'git checkout branche-inexistante'"
+msgid "second guess 'git checkout <no-such-branch>'"
+msgstr "réessayer d'interpréter 'git checkout <branche-inexistante>'"
 
 #: builtin/checkout.c:1153
 msgid "-b, -B and --orphan are mutually exclusive"
 msgstr "-b, -B et --orphan sont mutuellement exclusifs"
 
 #: builtin/checkout.c:1170
@@ -3855,22 +3888,23 @@
 msgstr "ATTENTION : Impossible de trouver les éléments correspondant à : %s"
 
 #: builtin/clean.c:717
 msgid "Select items to delete"
 msgstr "Sélectionner les éléments à supprimer"
 
-#: builtin/clean.c:757
+#. TRANSLATORS: Make sure to keep [y/N] as is
+#: builtin/clean.c:758
 #, c-format
-msgid "remove %s? "
-msgstr "supprimer %s ? "
+msgid "Remove %s [y/N]? "
+msgstr "Supprimer %s [y/N] ? "
 
-#: builtin/clean.c:782
+#: builtin/clean.c:783
 msgid "Bye."
 msgstr "Au revoir."
 
-#: builtin/clean.c:790
+#: builtin/clean.c:791
 msgid ""
 "clean               - start cleaning\n"
 "filter by pattern   - exclude items from deletion\n"
 "select by numbers   - select items to be deleted by numbers\n"
 "ask each            - confirm each deletion (like \"rm -i\")\n"
 "quit                - stop cleaning\n"
@@ -3882,89 +3916,89 @@
 "select by numbers   - sélectionner les éléments à supprimer par numéros\n"
 "ask each            - confirmer chaque suppression (comme \"rm -i\")\n"
 "quit                - arrêter le nettoyage\n"
 "help                - cet écran\n"
 "?                   - aide pour la sélection en ligne"
 
-#: builtin/clean.c:817
+#: builtin/clean.c:818
 msgid "*** Commands ***"
 msgstr "*** Commandes ***"
 
-#: builtin/clean.c:818
+#: builtin/clean.c:819
 msgid "What now"
 msgstr "Et maintenant ?"
 
-#: builtin/clean.c:826
+#: builtin/clean.c:827
 msgid "Would remove the following item:"
 msgid_plural "Would remove the following items:"
 msgstr[0] "Supprimerait l'élément suivant :"
 msgstr[1] "Supprimerait les éléments suivants :"
 
-#: builtin/clean.c:843
+#: builtin/clean.c:844
 msgid "No more files to clean, exiting."
 msgstr "Plus de fichier à nettoyer, sortie."
 
-#: builtin/clean.c:874
+#: builtin/clean.c:875
 msgid "do not print names of files removed"
 msgstr "ne pas afficher les noms des fichiers supprimés"
 
-#: builtin/clean.c:876
+#: builtin/clean.c:877
 msgid "force"
 msgstr "forcer"
 
-#: builtin/clean.c:877
+#: builtin/clean.c:878
 msgid "interactive cleaning"
 msgstr "nettoyage interactif"
 
-#: builtin/clean.c:879
+#: builtin/clean.c:880
 msgid "remove whole directories"
 msgstr "supprimer les répertoires entiers"
 
-#: builtin/clean.c:880 builtin/describe.c:407 builtin/grep.c:714
-#: builtin/ls-files.c:486 builtin/name-rev.c:311 builtin/show-ref.c:185
+#: builtin/clean.c:881 builtin/describe.c:407 builtin/grep.c:714
+#: builtin/ls-files.c:443 builtin/name-rev.c:311 builtin/show-ref.c:185
 msgid "pattern"
 msgstr "motif"
 
-#: builtin/clean.c:881
+#: builtin/clean.c:882
 msgid "add <pattern> to ignore rules"
 msgstr "ajouter <motif> aux règles ignore"
 
-#: builtin/clean.c:882
+#: builtin/clean.c:883
 msgid "remove ignored files, too"
 msgstr "supprimer les fichiers ignorés, aussi"
 
-#: builtin/clean.c:884
+#: builtin/clean.c:885
 msgid "remove only ignored files"
 msgstr "supprimer seulement les fichiers ignorés"
 
-#: builtin/clean.c:902
+#: builtin/clean.c:903
 msgid "-x and -X cannot be used together"
 msgstr "-x et -X ne peuvent pas être utilisés ensemble"
 
-#: builtin/clean.c:906
+#: builtin/clean.c:907
 msgid ""
 "clean.requireForce set to true and neither -i, -n, nor -f given; refusing to "
 "clean"
 msgstr ""
 "clean.requireForce positionné à true et ni -i, -n ou -f fourni ; refus de "
 "nettoyer"
 
-#: builtin/clean.c:909
+#: builtin/clean.c:910
 msgid ""
 "clean.requireForce defaults to true and neither -i, -n, nor -f given; "
 "refusing to clean"
 msgstr ""
 "clean.requireForce à true par défaut et ni -i, -n ou -f fourni ; refus de "
 "nettoyer"
 
 #: builtin/clone.c:37
-msgid "git clone [options] [--] <repo> [<dir>]"
-msgstr "git clone [options] [--] <dépôt> [<répertoire>]"
+msgid "git clone [<options>] [--] <repo> [<dir>]"
+msgstr "git clone [<options>] [--] <dépôt> [<répertoire>]"
 
-#: builtin/clone.c:66 builtin/fetch.c:112 builtin/merge.c:224
-#: builtin/push.c:514
+#: builtin/clone.c:66 builtin/fetch.c:111 builtin/merge.c:224
+#: builtin/push.c:523
 msgid "force progress reporting"
 msgstr "forcer l'affichage de l'état d'avancement"
 
 #: builtin/clone.c:68
 msgid "don't create a checkout"
 msgstr "ne pas créer d'extraction"
@@ -4018,13 +4052,13 @@
 msgstr "extraire <branche> au lieu de la HEAD du répertoire distant"
 
 #: builtin/clone.c:93
 msgid "path to git-upload-pack on the remote"
 msgstr "chemin vers git-upload-pack sur le serveur distant"
 
-#: builtin/clone.c:94 builtin/fetch.c:113 builtin/grep.c:659
+#: builtin/clone.c:94 builtin/fetch.c:112 builtin/grep.c:659
 msgid "depth"
 msgstr "profondeur"
 
 #: builtin/clone.c:95
 msgid "create a shallow clone of that depth"
 msgstr "créer un clone superficiel de cette profondeur"
@@ -4164,13 +4198,13 @@
 
 #: builtin/clone.c:809
 #, c-format
 msgid "repository '%s' does not exist"
 msgstr "le dépôt '%s' n'existe pas"
 
-#: builtin/clone.c:815 builtin/fetch.c:1155
+#: builtin/clone.c:815 builtin/fetch.c:1156
 #, c-format
 msgid "depth %s is not a positive number"
 msgstr "la profondeur %s n'est pas un entier positif"
 
 #: builtin/clone.c:825
 #, c-format
@@ -4180,66 +4214,66 @@
 
 #: builtin/clone.c:835
 #, c-format
 msgid "working tree '%s' already exists."
 msgstr "la copie de travail '%s' existe déjà."
 
-#: builtin/clone.c:848 builtin/clone.c:860
+#: builtin/clone.c:850 builtin/clone.c:861
 #, c-format
 msgid "could not create leading directories of '%s'"
 msgstr "impossible de créer les répertoires de premier niveau dans '%s'"
 
-#: builtin/clone.c:851
+#: builtin/clone.c:853
 #, c-format
-msgid "could not create work tree dir '%s'."
-msgstr "impossible de créer le répertoire de la copie de travail '%s'."
+msgid "could not create work tree dir '%s'"
+msgstr "impossible de créer le répertoire de la copie de travail '%s'"
 
-#: builtin/clone.c:870
+#: builtin/clone.c:871
 #, c-format
 msgid "Cloning into bare repository '%s'...\n"
 msgstr "Clonage dans le dépôt nu '%s'\n"
 
-#: builtin/clone.c:872
+#: builtin/clone.c:873
 #, c-format
 msgid "Cloning into '%s'...\n"
 msgstr "Clonage dans '%s'...\n"
 
-#: builtin/clone.c:897
+#: builtin/clone.c:898
 msgid "--dissociate given, but there is no --reference"
 msgstr "--dissociate est spécifié, mais --reference est absent"
 
-#: builtin/clone.c:912
+#: builtin/clone.c:913
 msgid "--depth is ignored in local clones; use file:// instead."
 msgstr ""
 "--depth est ignoré dans les clones locaux : utilisez plutôt \"file://\"."
 
-#: builtin/clone.c:915
+#: builtin/clone.c:916
 msgid "source repository is shallow, ignoring --local"
 msgstr "le dépôt source est superficiel, option --local ignorée"
 
-#: builtin/clone.c:920
+#: builtin/clone.c:921
 msgid "--local is ignored"
 msgstr "--local est ignoré"
 
-#: builtin/clone.c:924
+#: builtin/clone.c:925
 #, c-format
 msgid "Don't know how to clone %s"
 msgstr "Je ne sais pas cloner %s"
 
-#: builtin/clone.c:975 builtin/clone.c:983
+#: builtin/clone.c:976 builtin/clone.c:984
 #, c-format
 msgid "Remote branch %s not found in upstream %s"
 msgstr "La branche distante %s n'a pas été trouvée dans le dépôt amont %s"
 
-#: builtin/clone.c:986
+#: builtin/clone.c:987
 msgid "You appear to have cloned an empty repository."
 msgstr "Vous semblez avoir cloné un dépôt vide."
 
 #: builtin/column.c:9
-msgid "git column [options]"
-msgstr "git column [options]"
+msgid "git column [<options>]"
+msgstr "git column [<options>]"
 
 #: builtin/column.c:26
 msgid "lookup config vars"
 msgstr "rechercher les variables de configuration"
 
 #: builtin/column.c:27 builtin/column.c:28
@@ -4264,18 +4298,18 @@
 
 #: builtin/column.c:51
 msgid "--command must be the first argument"
 msgstr "--command doit être le premier argument"
 
 #: builtin/commit.c:37
-msgid "git commit [options] [--] <pathspec>..."
-msgstr "git commit [options] [--] <spécification-de-chemin>..."
+msgid "git commit [<options>] [--] <pathspec>..."
+msgstr "git commit [<options>] [--] <spécification-de-chemin>..."
 
 #: builtin/commit.c:42
-msgid "git status [options] [--] <pathspec>..."
-msgstr "git status [options] [--] <spécification-de-chemin>..."
+msgid "git status [<options>] [--] <pathspec>..."
+msgstr "git status [<options>] [--] <spécification-de-chemin>..."
 
 #: builtin/commit.c:47
 msgid ""
 "Your name and email address were configured automatically based\n"
 "on your username and hostname. Please check that they are accurate.\n"
 "You can suppress this message by setting them explicitly. Run the\n"
@@ -4370,120 +4404,120 @@
 "\n"
 "    git reset\n"
 "\n"
 "Puis \"git cherry-pick --continue\" continuera le picorage \n"
 "des commits restants.\n"
 
-#: builtin/commit.c:302
+#: builtin/commit.c:304
 msgid "failed to unpack HEAD tree object"
 msgstr "échec du dépaquetage de l'objet arbre HEAD"
 
-#: builtin/commit.c:342
+#: builtin/commit.c:344
 msgid "unable to create temporary index"
 msgstr "impossible de créer l'index temporaire"
 
-#: builtin/commit.c:348
+#: builtin/commit.c:350
 msgid "interactive add failed"
 msgstr "échec de l'ajout interactif"
 
-#: builtin/commit.c:359
+#: builtin/commit.c:361
 msgid "unable to write index file"
 msgstr "impossible d'écrire le fichier d'index"
 
-#: builtin/commit.c:361
+#: builtin/commit.c:363
 msgid "unable to update temporary index"
 msgstr "impossible de mettre à jour l'index temporaire"
 
-#: builtin/commit.c:363
+#: builtin/commit.c:365
 msgid "Failed to update main cache tree"
 msgstr "Impossible de mettre à jour l'arbre de cache principal"
 
-#: builtin/commit.c:387 builtin/commit.c:412 builtin/commit.c:461
+#: builtin/commit.c:389 builtin/commit.c:414 builtin/commit.c:463
 msgid "unable to write new_index file"
 msgstr "impossible d'écrire le fichier new_index"
 
-#: builtin/commit.c:443
+#: builtin/commit.c:445
 msgid "cannot do a partial commit during a merge."
 msgstr "impossible de faire une validation partielle pendant une fusion."
 
-#: builtin/commit.c:445
+#: builtin/commit.c:447
 msgid "cannot do a partial commit during a cherry-pick."
 msgstr "impossible de faire une validation partielle pendant un picorage."
 
-#: builtin/commit.c:454
+#: builtin/commit.c:456
 msgid "cannot read the index"
 msgstr "impossible de lire l'index"
 
-#: builtin/commit.c:473
+#: builtin/commit.c:475
 msgid "unable to write temporary index file"
 msgstr "impossible d'écrire le fichier d'index temporaire"
 
-#: builtin/commit.c:584
+#: builtin/commit.c:580
 #, c-format
 msgid "commit '%s' lacks author header"
 msgstr "entête d'auteur manquant dans le commit '%s'"
 
-#: builtin/commit.c:586
+#: builtin/commit.c:582
 #, c-format
 msgid "commit '%s' has malformed author line"
 msgstr "le commit '%s' a une ligne d'auteur malformée"
 
-#: builtin/commit.c:605
+#: builtin/commit.c:601
 msgid "malformed --author parameter"
 msgstr "paramètre --author mal formé"
 
-#: builtin/commit.c:613
+#: builtin/commit.c:609
 #, c-format
 msgid "invalid date format: %s"
 msgstr "format de date invalide : %s"
 
-#: builtin/commit.c:657
+#: builtin/commit.c:653
 msgid ""
 "unable to select a comment character that is not used\n"
 "in the current commit message"
 msgstr ""
 "impossible de sélectionner un caractère de commentaire\n"
 "qui n'est pas utilisé dans le message de validation actuel"
 
-#: builtin/commit.c:694 builtin/commit.c:727 builtin/commit.c:1084
+#: builtin/commit.c:690 builtin/commit.c:723 builtin/commit.c:1080
 #, c-format
 msgid "could not lookup commit %s"
 msgstr "impossible de rechercher le commit %s"
 
-#: builtin/commit.c:706 builtin/shortlog.c:273
+#: builtin/commit.c:702 builtin/shortlog.c:273
 #, c-format
 msgid "(reading log message from standard input)\n"
 msgstr "(lecture du message de journal depuis l'entrée standard)\n"
 
-#: builtin/commit.c:708
+#: builtin/commit.c:704
 msgid "could not read log from standard input"
 msgstr "impossible de lire le journal depuis l'entrée standard"
 
-#: builtin/commit.c:712
+#: builtin/commit.c:708
 #, c-format
 msgid "could not read log file '%s'"
 msgstr "impossible de lire le fichier de journal '%s'"
 
-#: builtin/commit.c:734
+#: builtin/commit.c:730
 msgid "could not read MERGE_MSG"
 msgstr "impossible de lire MERGE_MSG"
 
-#: builtin/commit.c:738
+#: builtin/commit.c:734
 msgid "could not read SQUASH_MSG"
 msgstr "impossible de lire SQUASH_MSG"
 
-#: builtin/commit.c:742
+#: builtin/commit.c:738
 #, c-format
 msgid "could not read '%s'"
 msgstr "impossible de lire '%s'"
 
-#: builtin/commit.c:789
+#: builtin/commit.c:785
 msgid "could not write commit template"
 msgstr "impossible d'écrire le modèle de commit"
 
-#: builtin/commit.c:807
+#: builtin/commit.c:803
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a merge.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
@@ -4492,13 +4526,13 @@
 "\n"
 "Il semble que vous validiez une fusion.\n"
 "Si ce n'est pas le cas, veuillez supprimer le fichier\n"
 "\t%s\n"
 "et essayez à nouveau.\n"
 
-#: builtin/commit.c:812
+#: builtin/commit.c:808
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a cherry-pick.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
@@ -4507,396 +4541,398 @@
 "\n"
 "Il semble que vous validiez un picorage.\n"
 "Si ce n'est pas le cas, veuillez supprimer le fichier\n"
 "\t%s\n"
 "et essayez à nouveau.\n"
 
-#: builtin/commit.c:825
+#: builtin/commit.c:821
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be ignored, and an empty message aborts the commit.\n"
 msgstr ""
 "Veuillez saisir le message de validation pour vos modifications. Les lignes\n"
 "commençant par '%c' seront ignorées, et un message vide abandonne la "
 "validation.\n"
 
-#: builtin/commit.c:832
+#: builtin/commit.c:828
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be kept; you may remove them yourself if you want to.\n"
 "An empty message aborts the commit.\n"
 msgstr ""
 "Veuillez saisir le message de validation pour vos modifications. Les lignes\n"
 "commençant par '%c' seront conservées ; vous pouvez les supprimer vous-même\n"
 "si vous le souhaitez. Un message vide abandonne la validation.\n"
 
-#: builtin/commit.c:852
+#: builtin/commit.c:848
 #, c-format
 msgid "%sAuthor:    %.*s <%.*s>"
 msgstr "%sAuteur :     %.*s <%.*s>"
 
-#: builtin/commit.c:860
+#: builtin/commit.c:856
 #, c-format
 msgid "%sDate:      %s"
 msgstr "%sDate :       %s"
 
-#: builtin/commit.c:867
+#: builtin/commit.c:863
 #, c-format
 msgid "%sCommitter: %.*s <%.*s>"
 msgstr "%sValidateur : %.*s <%.*s>"
 
-#: builtin/commit.c:885
+#: builtin/commit.c:881
 msgid "Cannot read index"
 msgstr "Impossible de lire l'index"
 
-#: builtin/commit.c:942
+#: builtin/commit.c:938
 msgid "Error building trees"
 msgstr "Erreur lors de la construction des arbres"
 
-#: builtin/commit.c:957 builtin/tag.c:495
+#: builtin/commit.c:953 builtin/tag.c:495
 #, c-format
 msgid "Please supply the message using either -m or -F option.\n"
 msgstr "Veuillez fournir le message en utilisant l'option -m ou -F.\n"
 
-#: builtin/commit.c:1059
+#: builtin/commit.c:1055
 #, c-format
-msgid "No existing author found with '%s'"
-msgstr "Aucun auteur existant trouvé avec '%s'"
+msgid "--author '%s' is not 'Name <email>' and matches no existing author"
+msgstr ""
+"--author '%s' n'est pas de la forme 'Nom <email>' ni ne correspond à aucun "
+"auteur existant"
 
-#: builtin/commit.c:1074 builtin/commit.c:1314
+#: builtin/commit.c:1070 builtin/commit.c:1310
 #, c-format
 msgid "Invalid untracked files mode '%s'"
 msgstr "Mode de fichier non suivi invalide '%s'"
 
-#: builtin/commit.c:1111
+#: builtin/commit.c:1107
 msgid "--long and -z are incompatible"
 msgstr "--long et -z sont incompatibles"
 
-#: builtin/commit.c:1141
+#: builtin/commit.c:1137
 msgid "Using both --reset-author and --author does not make sense"
 msgstr "L'utilisation simultanée de --reset-author et --author n'a pas de sens"
 
-#: builtin/commit.c:1150
+#: builtin/commit.c:1146
 msgid "You have nothing to amend."
 msgstr "Il n'y a rien à corriger."
 
-#: builtin/commit.c:1153
+#: builtin/commit.c:1149
 msgid "You are in the middle of a merge -- cannot amend."
 msgstr "Vous êtes en pleine fusion -- impossible de corriger (amend)."
 
-#: builtin/commit.c:1155
+#: builtin/commit.c:1151
 msgid "You are in the middle of a cherry-pick -- cannot amend."
 msgstr "Vous êtes en plein picorage -- impossible de corriger (amend)."
 
-#: builtin/commit.c:1158
+#: builtin/commit.c:1154
 msgid "Options --squash and --fixup cannot be used together"
 msgstr "Les options --squash et --fixup ne peuvent pas être utilisées ensemble"
 
-#: builtin/commit.c:1168
+#: builtin/commit.c:1164
 msgid "Only one of -c/-C/-F/--fixup can be used."
 msgstr "Une seule option parmi -c/-C/-F/--fixup peut être utilisée."
 
-#: builtin/commit.c:1170
+#: builtin/commit.c:1166
 msgid "Option -m cannot be combined with -c/-C/-F/--fixup."
 msgstr "L'option -m ne peut pas être combinée avec -c/-C/-F/--fixup."
 
-#: builtin/commit.c:1178
+#: builtin/commit.c:1174
 msgid "--reset-author can be used only with -C, -c or --amend."
 msgstr "--reset-author ne peut être utilisé qu'avec -C, -c ou --amend."
 
-#: builtin/commit.c:1195
+#: builtin/commit.c:1191
 msgid "Only one of --include/--only/--all/--interactive/--patch can be used."
 msgstr ""
 "Une seule option parmi --include/--only/--all/--interactive/--patch peut "
 "être utilisée."
 
-#: builtin/commit.c:1197
+#: builtin/commit.c:1193
 msgid "No paths with --include/--only does not make sense."
 msgstr "Aucun chemin avec les options --include/--only n'a pas de sens."
 
-#: builtin/commit.c:1199
+#: builtin/commit.c:1195
 msgid "Clever... amending the last one with dirty index."
 msgstr "Malin... correction du dernier avec un index sale."
 
-#: builtin/commit.c:1201
+#: builtin/commit.c:1197
 msgid "Explicit paths specified without -i or -o; assuming --only paths..."
 msgstr "Chemins explicites spécifiés sans -i ni -o ; --only supposé..."
 
-#: builtin/commit.c:1213 builtin/tag.c:728
+#: builtin/commit.c:1209 builtin/tag.c:728
 #, c-format
 msgid "Invalid cleanup mode %s"
 msgstr "Mode de nettoyage invalide %s"
 
-#: builtin/commit.c:1218
+#: builtin/commit.c:1214
 msgid "Paths with -a does not make sense."
 msgstr "Spécifier des chemins avec l'option -a n'a pas de sens."
 
-#: builtin/commit.c:1328 builtin/commit.c:1608
+#: builtin/commit.c:1324 builtin/commit.c:1604
 msgid "show status concisely"
 msgstr "afficher le statut avec concision"
 
-#: builtin/commit.c:1330 builtin/commit.c:1610
+#: builtin/commit.c:1326 builtin/commit.c:1606
 msgid "show branch information"
 msgstr "afficher l'information de branche"
 
-#: builtin/commit.c:1332 builtin/commit.c:1612 builtin/push.c:500
+#: builtin/commit.c:1328 builtin/commit.c:1608 builtin/push.c:509
 msgid "machine-readable output"
 msgstr "sortie pour traitement automatique"
 
-#: builtin/commit.c:1335 builtin/commit.c:1614
+#: builtin/commit.c:1331 builtin/commit.c:1610
 msgid "show status in long format (default)"
 msgstr "afficher le statut en format long (par défaut)"
 
-#: builtin/commit.c:1338 builtin/commit.c:1617
+#: builtin/commit.c:1334 builtin/commit.c:1613
 msgid "terminate entries with NUL"
 msgstr "terminer les éléments par NUL"
 
-#: builtin/commit.c:1340 builtin/commit.c:1620 builtin/fast-export.c:980
+#: builtin/commit.c:1336 builtin/commit.c:1616 builtin/fast-export.c:980
 #: builtin/fast-export.c:983 builtin/tag.c:603
 msgid "mode"
 msgstr "mode"
 
-#: builtin/commit.c:1341 builtin/commit.c:1620
+#: builtin/commit.c:1337 builtin/commit.c:1616
 msgid "show untracked files, optional modes: all, normal, no. (Default: all)"
 msgstr ""
 "afficher les fichiers non suivis, \"mode\" facultatif : all (tous), normal, "
 "no. (Défaut : all)"
 
-#: builtin/commit.c:1344
+#: builtin/commit.c:1340
 msgid "show ignored files"
 msgstr "afficher les fichiers ignorés"
 
-#: builtin/commit.c:1345 parse-options.h:153
+#: builtin/commit.c:1341 parse-options.h:153
 msgid "when"
 msgstr "quand"
 
-#: builtin/commit.c:1346
+#: builtin/commit.c:1342
 msgid ""
 "ignore changes to submodules, optional when: all, dirty, untracked. "
 "(Default: all)"
 msgstr ""
 "ignorer les modifications dans les sous-modules, \"quand\" facultatif : all "
 "(tous), dirty (sale), untracked (non suivi). (Défaut : all)"
 
-#: builtin/commit.c:1348
+#: builtin/commit.c:1344
 msgid "list untracked files in columns"
 msgstr "afficher les fichiers non suivis en colonnes"
 
-#: builtin/commit.c:1435
+#: builtin/commit.c:1431
 msgid "couldn't look up newly created commit"
 msgstr "impossible de retrouver le commit nouvellement créé"
 
-#: builtin/commit.c:1437
+#: builtin/commit.c:1433
 msgid "could not parse newly created commit"
 msgstr "impossible d'analyser le commit nouvellement créé"
 
-#: builtin/commit.c:1482
+#: builtin/commit.c:1478
 msgid "detached HEAD"
 msgstr "HEAD détachée"
 
-#: builtin/commit.c:1485
+#: builtin/commit.c:1481
 msgid " (root-commit)"
 msgstr " (commit racine)"
 
-#: builtin/commit.c:1578
+#: builtin/commit.c:1574
 msgid "suppress summary after successful commit"
 msgstr "supprimer le résumé après une validation réussie"
 
-#: builtin/commit.c:1579
+#: builtin/commit.c:1575
 msgid "show diff in commit message template"
 msgstr "afficher les diff dans le modèle de message de validation"
 
-#: builtin/commit.c:1581
+#: builtin/commit.c:1577
 msgid "Commit message options"
 msgstr "Options du message de validation"
 
-#: builtin/commit.c:1582 builtin/tag.c:601
+#: builtin/commit.c:1578 builtin/tag.c:601
 msgid "read message from file"
 msgstr "lire le message depuis un fichier"
 
-#: builtin/commit.c:1583
+#: builtin/commit.c:1579
 msgid "author"
 msgstr "auteur"
 
-#: builtin/commit.c:1583
+#: builtin/commit.c:1579
 msgid "override author for commit"
 msgstr "remplacer l'auteur pour la validation"
 
-#: builtin/commit.c:1584 builtin/gc.c:275
+#: builtin/commit.c:1580 builtin/gc.c:275
 msgid "date"
 msgstr "date"
 
-#: builtin/commit.c:1584
+#: builtin/commit.c:1580
 msgid "override date for commit"
 msgstr "remplacer la date pour la validation"
 
-#: builtin/commit.c:1585 builtin/merge.c:218 builtin/notes.c:391
+#: builtin/commit.c:1581 builtin/merge.c:218 builtin/notes.c:391
 #: builtin/notes.c:554 builtin/tag.c:599
 msgid "message"
 msgstr "message"
 
-#: builtin/commit.c:1585
+#: builtin/commit.c:1581
 msgid "commit message"
 msgstr "message de validation"
 
-#: builtin/commit.c:1586
+#: builtin/commit.c:1582
 msgid "reuse and edit message from specified commit"
 msgstr "réutiliser et éditer le message du commit spécifié"
 
-#: builtin/commit.c:1587
+#: builtin/commit.c:1583
 msgid "reuse message from specified commit"
 msgstr "réutiliser le message du commit spécifié"
 
-#: builtin/commit.c:1588
+#: builtin/commit.c:1584
 msgid "use autosquash formatted message to fixup specified commit"
 msgstr ""
 "utiliser un message au format autosquash pour corriger le commit spécifié"
 
-#: builtin/commit.c:1589
+#: builtin/commit.c:1585
 msgid "use autosquash formatted message to squash specified commit"
 msgstr ""
 "utiliser un message au format autosquash pour compresser le commit spécifié"
 
-#: builtin/commit.c:1590
+#: builtin/commit.c:1586
 msgid "the commit is authored by me now (used with -C/-c/--amend)"
 msgstr ""
 "à présent je suis l'auteur de la validation (utilisé avec -C/-c/--amend)"
 
-#: builtin/commit.c:1591 builtin/log.c:1191 builtin/revert.c:86
+#: builtin/commit.c:1587 builtin/log.c:1191 builtin/revert.c:86
 msgid "add Signed-off-by:"
 msgstr "ajouter une entrée Signed-off-by :"
 
-#: builtin/commit.c:1592
+#: builtin/commit.c:1588
 msgid "use specified template file"
 msgstr "utiliser le fichier de modèle spécifié"
 
-#: builtin/commit.c:1593
+#: builtin/commit.c:1589
 msgid "force edit of commit"
 msgstr "forcer l'édition du commit"
 
-#: builtin/commit.c:1594
+#: builtin/commit.c:1590
 msgid "default"
 msgstr "défaut"
 
-#: builtin/commit.c:1594 builtin/tag.c:604
+#: builtin/commit.c:1590 builtin/tag.c:604
 msgid "how to strip spaces and #comments from message"
 msgstr "comment éliminer les espaces et les commentaires # du message"
 
-#: builtin/commit.c:1595
+#: builtin/commit.c:1591
 msgid "include status in commit message template"
 msgstr "inclure le statut dans le modèle de message de validation"
 
-#: builtin/commit.c:1596 builtin/merge.c:225 builtin/revert.c:92
+#: builtin/commit.c:1592 builtin/merge.c:225 builtin/revert.c:92
 #: builtin/tag.c:605
 msgid "key-id"
 msgstr "id de clé"
 
-#: builtin/commit.c:1597 builtin/merge.c:226 builtin/revert.c:93
+#: builtin/commit.c:1593 builtin/merge.c:226 builtin/revert.c:93
 msgid "GPG sign commit"
 msgstr "signer la validation avec GPG"
 
-#: builtin/commit.c:1600
+#: builtin/commit.c:1596
 msgid "Commit contents options"
 msgstr "Valider les options des contenus"
 
-#: builtin/commit.c:1601
+#: builtin/commit.c:1597
 msgid "commit all changed files"
 msgstr "valider tous les fichiers modifiés"
 
-#: builtin/commit.c:1602
+#: builtin/commit.c:1598
 msgid "add specified files to index for commit"
 msgstr "ajouter les fichiers spécifiés à l'index pour la validation"
 
-#: builtin/commit.c:1603
+#: builtin/commit.c:1599
 msgid "interactively add files"
 msgstr "ajouter des fichiers en mode interactif"
 
-#: builtin/commit.c:1604
+#: builtin/commit.c:1600
 msgid "interactively add changes"
 msgstr "ajouter les modifications en mode interactif"
 
-#: builtin/commit.c:1605
+#: builtin/commit.c:1601
 msgid "commit only specified files"
 msgstr "valider seulement les fichiers spécifiés"
 
-#: builtin/commit.c:1606
+#: builtin/commit.c:1602
 msgid "bypass pre-commit hook"
 msgstr "éviter d'utiliser le crochet pre-commit"
 
-#: builtin/commit.c:1607
+#: builtin/commit.c:1603
 msgid "show what would be committed"
 msgstr "afficher ce qui serait validé"
 
-#: builtin/commit.c:1618
+#: builtin/commit.c:1614
 msgid "amend previous commit"
 msgstr "corriger la validation précédente"
 
-#: builtin/commit.c:1619
+#: builtin/commit.c:1615
 msgid "bypass post-rewrite hook"
 msgstr "éviter d'utiliser le crochet post-rewrite"
 
-#: builtin/commit.c:1624
+#: builtin/commit.c:1620
 msgid "ok to record an empty change"
 msgstr "accepter d'enregistrer une modification vide"
 
-#: builtin/commit.c:1626
+#: builtin/commit.c:1622
 msgid "ok to record a change with an empty message"
 msgstr "accepter d'enregistrer une modification avec un message vide"
 
-#: builtin/commit.c:1655
+#: builtin/commit.c:1651
 msgid "could not parse HEAD commit"
 msgstr "impossible d'analyser le commit HEAD"
 
-#: builtin/commit.c:1694 builtin/merge.c:519
+#: builtin/commit.c:1690 builtin/merge.c:519
 #, c-format
 msgid "could not open '%s' for reading"
 msgstr "impossible d'ouvrir '%s' en lecture"
 
-#: builtin/commit.c:1701
+#: builtin/commit.c:1697
 #, c-format
 msgid "Corrupt MERGE_HEAD file (%s)"
 msgstr "Fichier MERGE_HEAD corrompu (%s)"
 
-#: builtin/commit.c:1708
+#: builtin/commit.c:1704
 msgid "could not read MERGE_MODE"
 msgstr "impossible de lire MERGE_MODE"
 
-#: builtin/commit.c:1727
+#: builtin/commit.c:1723
 #, c-format
 msgid "could not read commit message: %s"
 msgstr "impossible de lire le message de validation : %s"
 
-#: builtin/commit.c:1738
+#: builtin/commit.c:1734
 #, c-format
 msgid "Aborting commit; you did not edit the message.\n"
 msgstr "Abandon de la validation ; vous n'avez pas édité le message\n"
 
-#: builtin/commit.c:1743
+#: builtin/commit.c:1739
 #, c-format
 msgid "Aborting commit due to empty commit message.\n"
 msgstr "Abandon de la validation du à un message de validation vide\n"
 
-#: builtin/commit.c:1758 builtin/merge.c:851 builtin/merge.c:876
+#: builtin/commit.c:1754 builtin/merge.c:851 builtin/merge.c:876
 msgid "failed to write commit object"
 msgstr "échec de l'écriture de l'objet commit"
 
-#: builtin/commit.c:1791
+#: builtin/commit.c:1787
 msgid ""
 "Repository has been updated, but unable to write\n"
 "new_index file. Check that disk is not full and quota is\n"
 "not exceeded, and then \"git reset HEAD\" to recover."
 msgstr ""
 "Le dépôt a été mis à jour, mais impossible d'écrire le fichier\n"
 "new_index. Vérifiez que le disque n'est pas plein ou que le quota\n"
 "n'a pas été dépassé, puis lancez \"git reset HEAD\" pour réparer."
 
 #: builtin/config.c:8
-msgid "git config [options]"
-msgstr "git config [options]"
+msgid "git config [<options>]"
+msgstr "git config [<options>]"
 
 #: builtin/config.c:53
 msgid "Config file location"
 msgstr "Emplacement du fichier de configuration"
 
 #: builtin/config.c:54
@@ -5046,18 +5082,18 @@
 
 #: builtin/count-objects.c:65
 msgid "print sizes in human readable format"
 msgstr "affiche les tailles dans un format humainement lisible"
 
 #: builtin/describe.c:17
-msgid "git describe [options] <commit-ish>*"
-msgstr "git describe [options] <commit ou apparenté>*"
+msgid "git describe [<options>] [<commit-ish>...]"
+msgstr "git describe [<options>] <commit ou apparenté>*"
 
 #: builtin/describe.c:18
-msgid "git describe [options] --dirty"
-msgstr "git describe [options] --dirty"
+msgid "git describe [<options>] --dirty"
+msgstr "git describe [<options>] --dirty"
 
 #: builtin/describe.c:217
 #, c-format
 msgid "annotated tag %s not available"
 msgstr "l'étiquette annotée %s n'est pas disponible"
 
@@ -5269,285 +5305,286 @@
 msgstr "Appliquer le spécificateur de référence aux références exportées"
 
 #: builtin/fast-export.c:999
 msgid "anonymize output"
 msgstr "anonymise la sortie"
 
-#: builtin/fetch.c:20
+#: builtin/fetch.c:19
 msgid "git fetch [<options>] [<repository> [<refspec>...]]"
 msgstr "git fetch [<options>] [<dépôt> [<spécification-de-référence>...]]"
 
-#: builtin/fetch.c:21
+#: builtin/fetch.c:20
 msgid "git fetch [<options>] <group>"
 msgstr "git fetch [<options>] <groupe>"
 
-#: builtin/fetch.c:22
+#: builtin/fetch.c:21
 msgid "git fetch --multiple [<options>] [(<repository> | <group>)...]"
 msgstr "git fetch --multiple [<options>] [(<dépôt> | <groupe>)...]"
 
-#: builtin/fetch.c:23
+#: builtin/fetch.c:22
 msgid "git fetch --all [<options>]"
 msgstr "git fetch --all [<options>]"
 
-#: builtin/fetch.c:90
+#: builtin/fetch.c:89
 msgid "fetch from all remotes"
 msgstr "récupérer depuis tous le dépôts distants"
 
-#: builtin/fetch.c:92
+#: builtin/fetch.c:91
 msgid "append to .git/FETCH_HEAD instead of overwriting"
 msgstr "ajouter à .git/FETCH_HEAD au lieu de l'écraser"
 
-#: builtin/fetch.c:94
+#: builtin/fetch.c:93
 msgid "path to upload pack on remote end"
 msgstr "chemin vers lequel télécharger le paquet sur le poste distant"
 
-#: builtin/fetch.c:95
+#: builtin/fetch.c:94
 msgid "force overwrite of local branch"
 msgstr "forcer l'écrasement de la branche locale"
 
-#: builtin/fetch.c:97
+#: builtin/fetch.c:96
 msgid "fetch from multiple remotes"
 msgstr "récupérer depuis plusieurs dépôts distants"
 
-#: builtin/fetch.c:99
+#: builtin/fetch.c:98
 msgid "fetch all tags and associated objects"
 msgstr "récupérer toutes les étiquettes et leurs objets associés"
 
-#: builtin/fetch.c:101
+#: builtin/fetch.c:100
 msgid "do not fetch all tags (--no-tags)"
 msgstr "ne pas récupérer toutes les étiquettes (--no-tags)"
 
-#: builtin/fetch.c:103
+#: builtin/fetch.c:102
 msgid "prune remote-tracking branches no longer on remote"
 msgstr ""
 "éliminer les branches de suivi distant si la branche n'existe plus dans le "
 "dépôt distant"
 
-#: builtin/fetch.c:104
+#: builtin/fetch.c:103
 msgid "on-demand"
 msgstr "à la demande"
 
-#: builtin/fetch.c:105
+#: builtin/fetch.c:104
 msgid "control recursive fetching of submodules"
 msgstr "contrôler la récupération récursive dans les sous-modules"
 
-#: builtin/fetch.c:109
+#: builtin/fetch.c:108
 msgid "keep downloaded pack"
 msgstr "conserver le paquet téléchargé"
 
-#: builtin/fetch.c:111
+#: builtin/fetch.c:110
 msgid "allow updating of HEAD ref"
 msgstr "permettre la mise à jour de la référence HEAD"
 
-#: builtin/fetch.c:114
+#: builtin/fetch.c:113
 msgid "deepen history of shallow clone"
 msgstr "approfondir l'historique d'un clone superficiel"
 
-#: builtin/fetch.c:116
+#: builtin/fetch.c:115
 msgid "convert to a complete repository"
 msgstr "convertir en un dépôt complet"
 
-#: builtin/fetch.c:118 builtin/log.c:1208
+#: builtin/fetch.c:117 builtin/log.c:1208
 msgid "dir"
 msgstr "dir"
 
-#: builtin/fetch.c:119
+#: builtin/fetch.c:118
 msgid "prepend this to submodule path output"
 msgstr "préfixer ceci à la sortie du chemin du sous-module"
 
-#: builtin/fetch.c:122
+#: builtin/fetch.c:121
 msgid "default mode for recursion"
 msgstr "mode par défaut pour la récursion"
 
-#: builtin/fetch.c:124
+#: builtin/fetch.c:123
 msgid "accept refs that update .git/shallow"
 msgstr "accepter les références qui mettent à jour .git/shallow"
 
-#: builtin/fetch.c:125
+#: builtin/fetch.c:124
 msgid "refmap"
 msgstr "correspondance de référence"
 
-#: builtin/fetch.c:126
+#: builtin/fetch.c:125
 msgid "specify fetch refmap"
 msgstr "spécifier une correspondance de référence pour la récupération"
 
-#: builtin/fetch.c:376
+#: builtin/fetch.c:375
 msgid "Couldn't find remote ref HEAD"
 msgstr "impossible de trouver la référence HEAD distante"
 
-#: builtin/fetch.c:454
+#: builtin/fetch.c:455
 #, c-format
 msgid "object %s not found"
 msgstr "objet %s non trouvé"
 
-#: builtin/fetch.c:459
+#: builtin/fetch.c:460
 msgid "[up to date]"
 msgstr "[à jour]"
 
-#: builtin/fetch.c:473
+#: builtin/fetch.c:474
 #, c-format
 msgid "! %-*s %-*s -> %s  (can't fetch in current branch)"
 msgstr "! %-*s %-*s -> %s  (impossible de récupérer la branche actuelle)"
 
-#: builtin/fetch.c:474 builtin/fetch.c:560
+#: builtin/fetch.c:475 builtin/fetch.c:561
 msgid "[rejected]"
 msgstr "[rejeté]"
 
-#: builtin/fetch.c:485
+#: builtin/fetch.c:486
 msgid "[tag update]"
 msgstr "[mise à jour de l'étiquette]"
 
-#: builtin/fetch.c:487 builtin/fetch.c:522 builtin/fetch.c:540
+#: builtin/fetch.c:488 builtin/fetch.c:523 builtin/fetch.c:541
 msgid "  (unable to update local ref)"
 msgstr "  (impossible de mettre à jour la référence locale)"
 
-#: builtin/fetch.c:505
+#: builtin/fetch.c:506
 msgid "[new tag]"
 msgstr "[nouvelle étiquette]"
 
-#: builtin/fetch.c:508
+#: builtin/fetch.c:509
 msgid "[new branch]"
 msgstr "[nouvelle branche]"
 
-#: builtin/fetch.c:511
+#: builtin/fetch.c:512
 msgid "[new ref]"
 msgstr "[nouvelle référence]"
 
-#: builtin/fetch.c:556
+#: builtin/fetch.c:557
 msgid "unable to update local ref"
 msgstr "impossible de mettre à jour la référence locale"
 
-#: builtin/fetch.c:556
+#: builtin/fetch.c:557
 msgid "forced update"
 msgstr "mise à jour forcée"
 
-#: builtin/fetch.c:562
+#: builtin/fetch.c:563
 msgid "(non-fast-forward)"
 msgstr "(pas d'avance rapide)"
 
-#: builtin/fetch.c:595 builtin/fetch.c:828
+#: builtin/fetch.c:596 builtin/fetch.c:829
 #, c-format
 msgid "cannot open %s: %s\n"
 msgstr "impossible d'ouvrir %s : %s\n"
 
-#: builtin/fetch.c:604
+#: builtin/fetch.c:605
 #, c-format
 msgid "%s did not send all necessary objects\n"
 msgstr "%s n'a pas envoyé tous les objets nécessaires\n"
 
-#: builtin/fetch.c:622
+#: builtin/fetch.c:623
 #, c-format
 msgid "reject %s because shallow roots are not allowed to be updated"
 msgstr ""
 "%s rejeté parce que les racines superficielles ne sont pas mises à jour"
 
-#: builtin/fetch.c:710 builtin/fetch.c:793
+#: builtin/fetch.c:711 builtin/fetch.c:794
 #, c-format
 msgid "From %.*s\n"
 msgstr "Depuis %.*s\n"
 
-#: builtin/fetch.c:721
+#: builtin/fetch.c:722
 #, c-format
 msgid ""
 "some local refs could not be updated; try running\n"
 " 'git remote prune %s' to remove any old, conflicting branches"
 msgstr ""
 "des références locales n'ont pas pu être mises à jour ; essayez de lancer\n"
 " 'git remote prune %s' pour supprimer des branches anciennes en conflit"
 
-#: builtin/fetch.c:773
+#: builtin/fetch.c:774
 #, c-format
 msgid "   (%s will become dangling)"
 msgstr "   (%s sera en suspens)"
 
-#: builtin/fetch.c:774
+#: builtin/fetch.c:775
 #, c-format
 msgid "   (%s has become dangling)"
 msgstr "   (%s est devenu en suspens)"
 
-#: builtin/fetch.c:798
+#: builtin/fetch.c:799
 msgid "[deleted]"
 msgstr "[supprimé]"
 
-#: builtin/fetch.c:799 builtin/remote.c:1060
+#: builtin/fetch.c:800 builtin/remote.c:1060
 msgid "(none)"
 msgstr "(aucun(e))"
 
-#: builtin/fetch.c:818
+#: builtin/fetch.c:819
 #, c-format
 msgid "Refusing to fetch into current branch %s of non-bare repository"
 msgstr "Refus de récupérer dans la branche courant %s d'un dépôt non nu"
 
-#: builtin/fetch.c:837
+#: builtin/fetch.c:838
 #, c-format
 msgid "Option \"%s\" value \"%s\" is not valid for %s"
 msgstr "La valeur \"%2$s\" de l'option \"%1$s\" est invalide pour %3$s"
 
-#: builtin/fetch.c:840
+#: builtin/fetch.c:841
 #, c-format
 msgid "Option \"%s\" is ignored for %s\n"
 msgstr "L'option \"%s\" est ignorée pour %s\n"
 
-#: builtin/fetch.c:896
+#: builtin/fetch.c:897
 #, c-format
 msgid "Don't know how to fetch from %s"
 msgstr "Je ne sais pas récupérer depuis %s"
 
-#: builtin/fetch.c:1058
+#: builtin/fetch.c:1059
 #, c-format
 msgid "Fetching %s\n"
 msgstr "Récupération de %s\n"
 
-#: builtin/fetch.c:1060 builtin/remote.c:90
+#: builtin/fetch.c:1061 builtin/remote.c:90
 #, c-format
 msgid "Could not fetch %s"
 msgstr "Impossible de récupérer %s"
 
-#: builtin/fetch.c:1078
+#: builtin/fetch.c:1079
 msgid ""
 "No remote repository specified.  Please, specify either a URL or a\n"
 "remote name from which new revisions should be fetched."
 msgstr ""
 "Aucun dépôt distant spécifié. Veuillez spécifier une URL ou un nom\n"
 "distant depuis lesquels les nouvelles révisions devraient être récupérées."
 
-#: builtin/fetch.c:1101
+#: builtin/fetch.c:1102
 msgid "You need to specify a tag name."
 msgstr "Vous devez spécifier un nom d'étiquette."
 
-#: builtin/fetch.c:1143
+#: builtin/fetch.c:1144
 msgid "--depth and --unshallow cannot be used together"
 msgstr "--depth et --unshallow ne peuvent pas être utilisés ensemble"
 
-#: builtin/fetch.c:1145
+#: builtin/fetch.c:1146
 msgid "--unshallow on a complete repository does not make sense"
 msgstr "--unshallow sur un dépôt complet n'a pas de sens"
 
-#: builtin/fetch.c:1168
+#: builtin/fetch.c:1169
 msgid "fetch --all does not take a repository argument"
 msgstr "fetch --all n'accepte pas d'argument de dépôt"
 
-#: builtin/fetch.c:1170
+#: builtin/fetch.c:1171
 msgid "fetch --all does not make sense with refspecs"
 msgstr "fetch --all n'a pas de sens avec des spécifications de référence"
 
-#: builtin/fetch.c:1181
+#: builtin/fetch.c:1182
 #, c-format
 msgid "No such remote or remote group: %s"
 msgstr "distant ou groupe distant inexistant : %s"
 
-#: builtin/fetch.c:1189
+#: builtin/fetch.c:1190
 msgid "Fetching a group and specifying refspecs does not make sense"
 msgstr ""
 "La récupération d'un groupe et les spécifications de référence n'ont pas de "
 "sens"
 
 #: builtin/fmt-merge-msg.c:13
-msgid "git fmt-merge-msg [-m <message>] [--log[=<n>]|--no-log] [--file <file>]"
+msgid ""
+"git fmt-merge-msg [-m <message>] [--log[=<n>] | --no-log] [--file <file>]"
 msgstr ""
-"git fmt-merge-msg [-m <message>] [--log[=<n>]|--no-log] [--file <fichier>]"
+"git fmt-merge-msg [-m <message>] [--log[=<n>] | --no-log] [--file <fichier>]"
 
 #: builtin/fmt-merge-msg.c:662 builtin/fmt-merge-msg.c:665 builtin/grep.c:698
 #: builtin/merge.c:198 builtin/repack.c:178 builtin/repack.c:182
 #: builtin/show-branch.c:657 builtin/show-ref.c:178 builtin/tag.c:590
 #: parse-options.h:132 parse-options.h:239
 msgid "n"
@@ -5570,67 +5607,67 @@
 msgstr "utiliser <texte> comme début de message"
 
 #: builtin/fmt-merge-msg.c:671
 msgid "file to read from"
 msgstr "fichier d'où lire"
 
-#: builtin/for-each-ref.c:676
+#: builtin/for-each-ref.c:675
 msgid "unable to parse format"
 msgstr "impossible d'analyser le format"
 
-#: builtin/for-each-ref.c:1064
-msgid "git for-each-ref [options] [<pattern>]"
-msgstr "git for-each-ref [options] [<motif>]"
+#: builtin/for-each-ref.c:1063
+msgid "git for-each-ref [<options>] [<pattern>]"
+msgstr "git for-each-ref [<options>] [<motif>]"
 
-#: builtin/for-each-ref.c:1079
+#: builtin/for-each-ref.c:1078
 msgid "quote placeholders suitably for shells"
 msgstr "échapper les champs réservés pour les interpréteurs de commandes"
 
-#: builtin/for-each-ref.c:1081
+#: builtin/for-each-ref.c:1080
 msgid "quote placeholders suitably for perl"
 msgstr "échapper les champs réservés pour perl"
 
-#: builtin/for-each-ref.c:1083
+#: builtin/for-each-ref.c:1082
 msgid "quote placeholders suitably for python"
 msgstr "échapper les champs réservés pour python"
 
-#: builtin/for-each-ref.c:1085
+#: builtin/for-each-ref.c:1084
 msgid "quote placeholders suitably for Tcl"
 msgstr "échapper les champs réservés pour compatibilité avec Tcl"
 
-#: builtin/for-each-ref.c:1088
+#: builtin/for-each-ref.c:1087
 msgid "show only <n> matched refs"
 msgstr "n'afficher que <n> références correspondant"
 
-#: builtin/for-each-ref.c:1089 builtin/replace.c:438
+#: builtin/for-each-ref.c:1088 builtin/replace.c:438
 msgid "format"
 msgstr "format"
 
-#: builtin/for-each-ref.c:1089
+#: builtin/for-each-ref.c:1088
 msgid "format to use for the output"
 msgstr "format à utiliser pour la sortie"
 
-#: builtin/for-each-ref.c:1090
+#: builtin/for-each-ref.c:1089
 msgid "key"
 msgstr "clé"
 
-#: builtin/for-each-ref.c:1091
+#: builtin/for-each-ref.c:1090
 msgid "field name to sort on"
 msgstr "nom du champ servant à trier"
 
-#: builtin/fsck.c:147 builtin/prune.c:136
+#: builtin/fsck.c:147 builtin/prune.c:137
 msgid "Checking connectivity"
 msgstr "Vérification de la connectivité"
 
 #: builtin/fsck.c:540
 msgid "Checking object directories"
 msgstr "Vérification des répertoires d'objet"
 
 #: builtin/fsck.c:603
-msgid "git fsck [options] [<object>...]"
-msgstr "git fsck [options] [<objet>...]"
+msgid "git fsck [<options>] [<object>...]"
+msgstr "git fsck [<options>] [<objet>...]"
 
 #: builtin/fsck.c:609
 msgid "show unreachable objects"
 msgstr "afficher les objets inaccessibles"
 
 #: builtin/fsck.c:610
@@ -5672,14 +5709,14 @@
 
 #: builtin/fsck.c:669
 msgid "Checking objects"
 msgstr "Vérification des objets"
 
 #: builtin/gc.c:24
-msgid "git gc [options]"
-msgstr "git gc [options]"
+msgid "git gc [<options>]"
+msgstr "git gc [<options>]"
 
 #: builtin/gc.c:79
 #, c-format
 msgid "Invalid gc.pruneexpire: '%s'"
 msgstr "gc.pruneexpire invalide : '%s'"
 
@@ -5736,14 +5773,14 @@
 "There are too many unreachable loose objects; run 'git prune' to remove them."
 msgstr ""
 "Il y a trop d'objets seuls inaccessibles ; lancez 'git prune' pour les "
 "supprimer."
 
 #: builtin/grep.c:23
-msgid "git grep [options] [-e] <pattern> [<rev>...] [[--] <path>...]"
-msgstr "git grep [options] [-e] <motif> [<révision>...] [[--] <chemin>...]"
+msgid "git grep [<options>] [-e] <pattern> [<rev>...] [[--] <path>...]"
+msgstr "git grep [<options>] [-e] <motif> [<révision>...] [[--] <chemin>...]"
 
 #: builtin/grep.c:218
 #, c-format
 msgid "grep: failed to create thread: %s"
 msgstr "grep : échec de création du fil: %s"
 
@@ -5777,14 +5814,14 @@
 
 #: builtin/grep.c:642
 msgid "search in both tracked and untracked files"
 msgstr "rechercher dans les fichiers suivis et non-suivis"
 
 #: builtin/grep.c:644
-msgid "search also in ignored files"
-msgstr "rechercher aussi dans les fichiers ignorés"
+msgid "ignore files specified via '.gitignore'"
+msgstr "ignorer les fichiers spécifiés via '.gitignore'"
 
 #: builtin/grep.c:647
 msgid "show non-matching lines"
 msgstr "afficher les lignes qui ne correspondent pas"
 
 #: builtin/grep.c:649
@@ -5971,23 +6008,23 @@
 #: builtin/grep.c:908
 msgid "both --cached and trees are given."
 msgstr "--cached et des arbres sont fournis en même temps."
 
 #: builtin/hash-object.c:82
 msgid ""
-"git hash-object [-t <type>] [-w] [--path=<file>|--no-filters] [--stdin] [--] "
-"<file>..."
+"git hash-object [-t <type>] [-w] [--path=<file> | --no-filters] [--stdin] "
+"[--] <file>..."
 msgstr ""
-"git hash-object [-t <type>] [-w] [--path=<fichier>|--no-filters] [--stdin] "
+"git hash-object [-t <type>] [-w] [--path=<fichier> | --no-filters] [--stdin] "
 "[--] <fichier>..."
 
 #: builtin/hash-object.c:83
 msgid "git hash-object  --stdin-paths < <list-of-paths>"
 msgstr "git hash-object  --stdin-paths < <liste-de-chemins>"
 
-#: builtin/hash-object.c:94 builtin/tag.c:610
+#: builtin/hash-object.c:94 builtin/tag.c:612
 msgid "type"
 msgstr "type"
 
 #: builtin/hash-object.c:94
 msgid "object type"
 msgstr "type d'objet"
@@ -6033,14 +6070,14 @@
 
 #: builtin/help.c:46
 msgid "show info page"
 msgstr "afficher la page info"
 
 #: builtin/help.c:52
-msgid "git help [--all] [--guides] [--man|--web|--info] [command]"
-msgstr "git help [--all] [--guides] [--man|--web|--info] [commande]"
+msgid "git help [--all] [--guides] [--man | --web | --info] [<command>]"
+msgstr "git help [--all] [--guides] [--man | --web | --info] [<commande>]"
 
 #: builtin/help.c:64
 #, c-format
 msgid "unrecognized help format '%s'"
 msgstr "format d'aide non reconnu '%s'"
 
@@ -6243,14 +6280,14 @@
 #: builtin/index-pack.c:686 builtin/index-pack.c:692 builtin/index-pack.c:715
 #: builtin/index-pack.c:749 builtin/index-pack.c:758
 #, c-format
 msgid "SHA1 COLLISION FOUND WITH %s !"
 msgstr "COLLISION SHA1 TROUVÉE AVEC %s !"
 
-#: builtin/index-pack.c:689 builtin/pack-objects.c:164
-#: builtin/pack-objects.c:256
+#: builtin/index-pack.c:689 builtin/pack-objects.c:162
+#: builtin/pack-objects.c:254
 #, c-format
 msgid "unable to read %s"
 msgstr "impossible de lire %s"
 
 #: builtin/index-pack.c:755
 #, c-format
@@ -6332,103 +6369,103 @@
 #, c-format
 msgid "pack has %d unresolved delta"
 msgid_plural "pack has %d unresolved deltas"
 msgstr[0] "le paquet a %d delta non résolu"
 msgstr[1] "le paquet a %d deltas non résolus"
 
-#: builtin/index-pack.c:1220
+#: builtin/index-pack.c:1219
 #, c-format
 msgid "unable to deflate appended object (%d)"
 msgstr "impossible de compresser l'objet ajouté (%d)"
 
-#: builtin/index-pack.c:1299
+#: builtin/index-pack.c:1298
 #, c-format
 msgid "local object %s is corrupt"
 msgstr "l'objet local %s est corrompu"
 
-#: builtin/index-pack.c:1323
+#: builtin/index-pack.c:1322
 msgid "error while closing pack file"
 msgstr "erreur en fermeture du fichier paquet"
 
-#: builtin/index-pack.c:1336
+#: builtin/index-pack.c:1335
 #, c-format
 msgid "cannot write keep file '%s'"
 msgstr "impossible d'écrire le fichier \"keep\" '%s'"
 
-#: builtin/index-pack.c:1344
+#: builtin/index-pack.c:1343
 #, c-format
 msgid "cannot close written keep file '%s'"
 msgstr "impossible de fermer le fichier \"keep\" '%s'"
 
-#: builtin/index-pack.c:1357
+#: builtin/index-pack.c:1356
 msgid "cannot store pack file"
 msgstr "impossible de stocker le fichier paquet"
 
-#: builtin/index-pack.c:1368
+#: builtin/index-pack.c:1367
 msgid "cannot store index file"
 msgstr "impossible de stocker le fichier d'index"
 
-#: builtin/index-pack.c:1401
+#: builtin/index-pack.c:1400
 #, c-format
 msgid "bad pack.indexversion=%<PRIu32>"
 msgstr "mauvais pack.indexversion=%<PRIu32>"
 
-#: builtin/index-pack.c:1407
+#: builtin/index-pack.c:1406
 #, c-format
 msgid "invalid number of threads specified (%d)"
 msgstr "nombre de fils spécifié invalide (%d)"
 
-#: builtin/index-pack.c:1411 builtin/index-pack.c:1590
+#: builtin/index-pack.c:1410 builtin/index-pack.c:1589
 #, c-format
 msgid "no threads support, ignoring %s"
 msgstr "pas de support des fils, ignore %s"
 
-#: builtin/index-pack.c:1469
+#: builtin/index-pack.c:1468
 #, c-format
 msgid "Cannot open existing pack file '%s'"
 msgstr "Impossible d'ouvrir le fichier paquet existant '%s'"
 
-#: builtin/index-pack.c:1471
+#: builtin/index-pack.c:1470
 #, c-format
 msgid "Cannot open existing pack idx file for '%s'"
 msgstr "Impossible d'ouvrir le fichier paquet d'index existant pour '%s'"
 
-#: builtin/index-pack.c:1518
+#: builtin/index-pack.c:1517
 #, c-format
 msgid "non delta: %d object"
 msgid_plural "non delta: %d objects"
 msgstr[0] "pas un delta : %d objet"
 msgstr[1] "pas un delta : %d objets"
 
-#: builtin/index-pack.c:1525
+#: builtin/index-pack.c:1524
 #, c-format
 msgid "chain length = %d: %lu object"
 msgid_plural "chain length = %d: %lu objects"
 msgstr[0] "longueur chaînée = %d : %lu objet"
 msgstr[1] "longueur chaînée = %d : %lu objets"
 
-#: builtin/index-pack.c:1554
+#: builtin/index-pack.c:1553
 msgid "Cannot come back to cwd"
 msgstr "Impossible de revenir au répertoire de travail courant"
 
-#: builtin/index-pack.c:1602 builtin/index-pack.c:1605
-#: builtin/index-pack.c:1617 builtin/index-pack.c:1621
+#: builtin/index-pack.c:1601 builtin/index-pack.c:1604
+#: builtin/index-pack.c:1616 builtin/index-pack.c:1620
 #, c-format
 msgid "bad %s"
 msgstr "mauvais %s"
 
-#: builtin/index-pack.c:1635
+#: builtin/index-pack.c:1634
 msgid "--fix-thin cannot be used without --stdin"
 msgstr "--fix-thin ne peut pas être utilisé sans --stdin"
 
-#: builtin/index-pack.c:1639 builtin/index-pack.c:1648
+#: builtin/index-pack.c:1638 builtin/index-pack.c:1647
 #, c-format
 msgid "packfile name '%s' does not end with '.pack'"
 msgstr "le nom de fichier paquet '%s' ne se termine pas par '.pack'"
 
-#: builtin/index-pack.c:1656
+#: builtin/index-pack.c:1655
 msgid "--verify with no packfile name given"
 msgstr "--verify sans nom de fichier paquet donné"
 
 #: builtin/init-db.c:35
 #, c-format
 msgid "Could not make %s writable by group"
@@ -6535,16 +6572,16 @@
 msgid " shared"
 msgstr " partagé"
 
 #: builtin/init-db.c:475
 msgid ""
 "git init [-q | --quiet] [--bare] [--template=<template-directory>] [--"
-"shared[=<permissions>]] [directory]"
+"shared[=<permissions>]] [<directory>]"
 msgstr ""
 "git init [-q | --quiet] [--bare] [--template=<répertoire-modèle>] [--"
-"shared[=<permissions>]] [répertoire]"
+"shared[=<permissions>]] [<répertoire>]"
 
 #: builtin/init-db.c:498
 msgid "permissions"
 msgstr "permissions"
 
 #: builtin/init-db.c:499
@@ -6601,14 +6638,14 @@
 
 #: builtin/log.c:41
 msgid "git log [<options>] [<revision range>] [[--] <path>...]"
 msgstr "git log [<options>] [<plage de révisions>] [[--] <chemin>...]"
 
 #: builtin/log.c:42
-msgid "git show [options] <object>..."
-msgstr "git show [options] <objet>..."
+msgid "git show [<options>] <object>..."
+msgstr "git show [<options>] <objet>..."
 
 #: builtin/log.c:81
 #, c-format
 msgid "invalid --decorate option: %s"
 msgstr "option --decorate invalide : %s"
 
@@ -6682,14 +6719,14 @@
 #: builtin/log.c:998
 #, c-format
 msgid "insane in-reply-to: %s"
 msgstr "in-reply-to aberrant : %s"
 
 #: builtin/log.c:1026
-msgid "git format-patch [options] [<since> | <revision range>]"
-msgstr "git format-patch [options] [<depuis> | <plage de révisions>]"
+msgid "git format-patch [<options>] [<since> | <revision-range>]"
+msgstr "git format-patch [<options>] [<depuis> | <plage de révisions>]"
 
 #: builtin/log.c:1071
 msgid "Two output directories?"
 msgstr "Deux répertoires de sortie ?"
 
 #: builtin/log.c:1186
@@ -6884,104 +6921,104 @@
 
 #: builtin/log.c:1651 builtin/log.c:1653 builtin/log.c:1665
 #, c-format
 msgid "Unknown commit %s"
 msgstr "Commit inconnu %s"
 
-#: builtin/ls-files.c:401
-msgid "git ls-files [options] [<file>...]"
-msgstr "git ls-files [options] [<fichier>...]"
+#: builtin/ls-files.c:358
+msgid "git ls-files [<options>] [<file>...]"
+msgstr "git ls-files [<options>] [<fichier>...]"
 
-#: builtin/ls-files.c:458
+#: builtin/ls-files.c:415
 msgid "identify the file status with tags"
 msgstr "identifier le statut de fichier avec les étiquettes"
 
-#: builtin/ls-files.c:460
+#: builtin/ls-files.c:417
 msgid "use lowercase letters for 'assume unchanged' files"
 msgstr "utiliser des minuscules pour les fichier 'assumés inchangés'"
 
-#: builtin/ls-files.c:462
+#: builtin/ls-files.c:419
 msgid "show cached files in the output (default)"
 msgstr "afficher les fichiers mis en cache dans la sortie (défaut)"
 
-#: builtin/ls-files.c:464
+#: builtin/ls-files.c:421
 msgid "show deleted files in the output"
 msgstr "afficher les fichiers supprimés dans la sortie"
 
-#: builtin/ls-files.c:466
+#: builtin/ls-files.c:423
 msgid "show modified files in the output"
 msgstr "afficher les fichiers modifiés dans la sortie"
 
-#: builtin/ls-files.c:468
+#: builtin/ls-files.c:425
 msgid "show other files in the output"
 msgstr "afficher les autres fichiers dans la sortie"
 
-#: builtin/ls-files.c:470
+#: builtin/ls-files.c:427
 msgid "show ignored files in the output"
 msgstr "afficher les fichiers ignorés dans la sortie"
 
-#: builtin/ls-files.c:473
+#: builtin/ls-files.c:430
 msgid "show staged contents' object name in the output"
 msgstr "afficher les nom des objets indexés dans la sortie"
 
-#: builtin/ls-files.c:475
+#: builtin/ls-files.c:432
 msgid "show files on the filesystem that need to be removed"
 msgstr ""
 "afficher les fichiers du système de fichiers qui ont besoin d'être supprimés"
 
-#: builtin/ls-files.c:477
+#: builtin/ls-files.c:434
 msgid "show 'other' directories' names only"
 msgstr "afficher seulement les noms des répertoires 'other'"
 
-#: builtin/ls-files.c:480
+#: builtin/ls-files.c:437
 msgid "don't show empty directories"
 msgstr "ne pas afficher les répertoires vides"
 
-#: builtin/ls-files.c:483
+#: builtin/ls-files.c:440
 msgid "show unmerged files in the output"
 msgstr "afficher les fichiers non fusionnés dans la sortie"
 
-#: builtin/ls-files.c:485
+#: builtin/ls-files.c:442
 msgid "show resolve-undo information"
 msgstr "afficher l'information resolv-undo"
 
-#: builtin/ls-files.c:487
+#: builtin/ls-files.c:444
 msgid "skip files matching pattern"
 msgstr "sauter les fichiers correspondant au motif"
 
-#: builtin/ls-files.c:490
+#: builtin/ls-files.c:447
 msgid "exclude patterns are read from <file>"
 msgstr "les motifs d'exclusion sont lus depuis <fichier>"
 
-#: builtin/ls-files.c:493
+#: builtin/ls-files.c:450
 msgid "read additional per-directory exclude patterns in <file>"
 msgstr "lire des motifs d'exclusion additionnels par répertoire dans <fichier>"
 
-#: builtin/ls-files.c:495
+#: builtin/ls-files.c:452
 msgid "add the standard git exclusions"
 msgstr "ajouter les exclusions git standard"
 
-#: builtin/ls-files.c:498
+#: builtin/ls-files.c:455
 msgid "make the output relative to the project top directory"
 msgstr "afficher en relatif par rapport au répertoire racine du projet"
 
-#: builtin/ls-files.c:501
+#: builtin/ls-files.c:458
 msgid "if any <file> is not in the index, treat this as an error"
 msgstr "si un <fichier> n'est pas dans l'index, traiter cela comme une erreur"
 
-#: builtin/ls-files.c:502
+#: builtin/ls-files.c:459
 msgid "tree-ish"
 msgstr "arbre ou apparenté"
 
-#: builtin/ls-files.c:503
+#: builtin/ls-files.c:460
 msgid "pretend that paths removed since <tree-ish> are still present"
 msgstr ""
 "considérer que les chemins supprimés depuis <arbre ou apparenté> sont "
 "toujours présents"
 
-#: builtin/ls-files.c:505
+#: builtin/ls-files.c:462
 msgid "show debugging data"
 msgstr "afficher les données de débogage"
 
 #: builtin/ls-tree.c:28
 msgid "git ls-tree [<options>] <tree-ish> [<path>...]"
 msgstr "git ls-tree [<options>] <arbre ou apparenté> [<chemin>...]"
@@ -7018,18 +7055,18 @@
 msgid "list entire tree; not just current directory (implies --full-name)"
 msgstr ""
 "afficher l'arbre entier ; pas seulement le répertoire courant (implique --"
 "full-name)"
 
 #: builtin/merge.c:45
-msgid "git merge [options] [<commit>...]"
-msgstr "git merge [options] [<commit>...]"
+msgid "git merge [<options>] [<commit>...]"
+msgstr "git merge [<options>] [<commit>...]"
 
 #: builtin/merge.c:46
-msgid "git merge [options] <msg> HEAD <commit>"
-msgstr "git merge [options] <message> HEAD <commit>"
+msgid "git merge [<options>] <msg> HEAD <commit>"
+msgstr "git merge [<options>] <message> HEAD <commit>"
 
 #: builtin/merge.c:47
 msgid "git merge --abort"
 msgstr "git merge --abort"
 
 #: builtin/merge.c:100
@@ -7375,18 +7412,18 @@
 #, c-format
 msgid "Automatic merge went well; stopped before committing as requested\n"
 msgstr ""
 "La fusion automatique a réussi ; stoppée avant la validation comme demandé\n"
 
 #: builtin/merge-base.c:29
-msgid "git merge-base [-a|--all] <commit> <commit>..."
-msgstr "git merge-base [-a|--all] <validation> <validation>..."
+msgid "git merge-base [-a | --all] <commit> <commit>..."
+msgstr "git merge-base [-a | --all] <commit> <commit>..."
 
 #: builtin/merge-base.c:30
-msgid "git merge-base [-a|--all] --octopus <commit>..."
-msgstr "git merge-base [-a|--all] --octopus <validation>..."
+msgid "git merge-base [-a | --all] --octopus <commit>..."
+msgstr "git merge-base [-a | --all] --octopus <commit>..."
 
 #: builtin/merge-base.c:31
 msgid "git merge-base --independent <commit>..."
 msgstr "git merge-base --independent <validation>..."
 
 #: builtin/merge-base.c:32
@@ -7416,17 +7453,17 @@
 #: builtin/merge-base.c:222
 msgid "find where <commit> forked from reflog of <ref>"
 msgstr "trouver où <validation> a divergé du reflog de <référence>"
 
 #: builtin/merge-file.c:8
 msgid ""
-"git merge-file [options] [-L name1 [-L orig [-L name2]]] file1 orig_file "
-"file2"
+"git merge-file [<options>] [-L <name1> [-L <orig> [-L <name2>]]] <file1> "
+"<orig-file> <file2>"
 msgstr ""
-"git merge-file [options] [-L nom1 [-L orig [-L nom2]]] fichier1 orig_file "
-"fichier2"
+"git merge-file [<options>] [-L <nom1> [-L <orig> [-L <nom2>]]] <fichier1> "
+"<fichier-orig> <fichier2>"
 
 #: builtin/merge-file.c:33
 msgid "send results to standard output"
 msgstr "envoyer les résultats sur la sortie standard"
 
 #: builtin/merge-file.c:34
@@ -7451,14 +7488,14 @@
 
 #: builtin/merge-file.c:43
 msgid "do not warn about conflicts"
 msgstr "ne pas avertir à propos des conflits"
 
 #: builtin/merge-file.c:45
-msgid "set labels for file1/orig_file/file2"
-msgstr "définir les labels pour fichier1/orig_file/fichier2"
+msgid "set labels for file1/orig-file/file2"
+msgstr "définir les labels pour fichier1/fichier-orig/fichier2"
 
 #: builtin/mktree.c:64
 msgid "git mktree [-z] [--missing] [--batch]"
 msgstr "git mktree [-z] [--missing] [--batch]"
 
 #: builtin/mktree.c:150
@@ -7471,14 +7508,14 @@
 
 #: builtin/mktree.c:152
 msgid "allow creation of more than one tree"
 msgstr "autoriser la création de plus d'un arbre"
 
 #: builtin/mv.c:15
-msgid "git mv [options] <source>... <destination>"
-msgstr "git mv [options] <source>... <destination>"
+msgid "git mv [<options>] <source>... <destination>"
+msgstr "git mv [<options>] <source>... <destination>"
 
 #: builtin/mv.c:69
 #, c-format
 msgid "Directory %s is in index and no submodule?"
 msgstr "Le répertoire %s est dans l'index et pourtant aucun sous-module ?"
 
@@ -7559,28 +7596,28 @@
 
 #: builtin/mv.c:253
 #, c-format
 msgid "Renaming %s to %s\n"
 msgstr "Renommage de %s en %s\n"
 
-#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:355
+#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:359
 #, c-format
 msgid "renaming '%s' failed"
 msgstr "le renommage de '%s' a échoué"
 
 #: builtin/name-rev.c:255
-msgid "git name-rev [options] <commit>..."
-msgstr "git name-rev [options] <validation>..."
+msgid "git name-rev [<options>] <commit>..."
+msgstr "git name-rev [<options>] <validation>..."
 
 #: builtin/name-rev.c:256
-msgid "git name-rev [options] --all"
-msgstr "git name-rev [options] --all"
+msgid "git name-rev [<options>] --all"
+msgstr "git name-rev [<options>] --all"
 
 #: builtin/name-rev.c:257
-msgid "git name-rev [options] --stdin"
-msgstr "git name-rev [options] --stdin"
+msgid "git name-rev [<options>] --stdin"
+msgstr "git name-rev [<options>] --stdin"
 
 #: builtin/name-rev.c:309
 msgid "print only names (no SHA-1)"
 msgstr "afficher seulement les noms (pas de SHA-1)"
 
 #: builtin/name-rev.c:310
@@ -7606,70 +7643,70 @@
 
 #: builtin/name-rev.c:322
 msgid "dereference tags in the input (internal use)"
 msgstr "déréférencer les étiquettes en entrée (usage interne)"
 
 #: builtin/notes.c:24
-msgid "git notes [--ref <notes_ref>] [list [<object>]]"
-msgstr "git notes [--ref <références_notes>] [list [<object>]]"
+msgid "git notes [--ref <notes-ref>] [list [<object>]]"
+msgstr "git notes [--ref <références-notes>] [list [<object>]]"
 
 #: builtin/notes.c:25
 msgid ""
-"git notes [--ref <notes_ref>] add [-f] [--allow-empty] [-m <msg> | -F <file> "
+"git notes [--ref <notes-ref>] add [-f] [--allow-empty] [-m <msg> | -F <file> "
 "| (-c | -C) <object>] [<object>]"
 msgstr ""
-"git notes [--ref <références_notes>] add [-f] [--allow-empty] [-m <message> "
+"git notes [--ref <références-notes>] add [-f] [--allow-empty] [-m <message> "
 "| -F <fichier> | (-c | -C) <objet>] [<objet>]"
 
 #: builtin/notes.c:26
-msgid "git notes [--ref <notes_ref>] copy [-f] <from-object> <to-object>"
+msgid "git notes [--ref <notes-ref>] copy [-f] <from-object> <to-object>"
 msgstr ""
-"git notes [--ref <références_notes>] copy [-f] <depuis-objet> <vers-objet>"
+"git notes [--ref <références-notes>] copy [-f] <depuis-objet> <vers-objet>"
 
 #: builtin/notes.c:27
 msgid ""
-"git notes [--ref <notes_ref>] append [--allow-empty] [-m <msg> | -F <file> | "
+"git notes [--ref <notes-ref>] append [--allow-empty] [-m <msg> | -F <file> | "
 "(-c | -C) <object>] [<object>]"
 msgstr ""
-"git notes [--ref <références_notes>] append [--allow-empty] [-m <message> | -"
+"git notes [--ref <références-notes>] append [--allow-empty] [-m <message> | -"
 "F <fichier> | (-c | -C) <objet>] [<objet>]"
 
 #: builtin/notes.c:28
-msgid "git notes [--ref <notes_ref>] edit [--allow-empty] [<object>]"
-msgstr "git notes [--ref <références_notes>] edit [--allow-empty] [<objet>]"
+msgid "git notes [--ref <notes-ref>] edit [--allow-empty] [<object>]"
+msgstr "git notes [--ref <références-notes>] edit [--allow-empty] [<objet>]"
 
 #: builtin/notes.c:29
-msgid "git notes [--ref <notes_ref>] show [<object>]"
-msgstr "git notes [--ref <références_notes>] show [<objet>]"
+msgid "git notes [--ref <notes-ref>] show [<object>]"
+msgstr "git notes [--ref <références-notes>] show [<objet>]"
 
 #: builtin/notes.c:30
 msgid ""
-"git notes [--ref <notes_ref>] merge [-v | -q] [-s <strategy> ] <notes_ref>"
+"git notes [--ref <notes-ref>] merge [-v | -q] [-s <strategy>] <notes-ref>"
 msgstr ""
-"git notes [--ref <références_notes>] merge [-v | -q] [-s <stratégie> ] "
-"<références_notes>"
+"git notes [--ref <références-notes>] merge [-v | -q] [-s <stratégie> ] "
+"<références-notes>"
 
 #: builtin/notes.c:31
 msgid "git notes merge --commit [-v | -q]"
 msgstr "git notes merge --commit [-v | -q]"
 
 #: builtin/notes.c:32
 msgid "git notes merge --abort [-v | -q]"
 msgstr "git notes merge --abort [-v | -q]"
 
 #: builtin/notes.c:33
-msgid "git notes [--ref <notes_ref>] remove [<object>...]"
-msgstr "git notes [--ref <références_notes>] remove [<objet>...]"
+msgid "git notes [--ref <notes-ref>] remove [<object>...]"
+msgstr "git notes [--ref <références-notes>] remove [<objet>...]"
 
 #: builtin/notes.c:34
-msgid "git notes [--ref <notes_ref>] prune [-n | -v]"
-msgstr "git notes [--ref <références_notes>] prune [-n | -v]"
+msgid "git notes [--ref <notes-ref>] prune [-n | -v]"
+msgstr "git notes [--ref <références-notes>] prune [-n | -v]"
 
 #: builtin/notes.c:35
-msgid "git notes [--ref <notes_ref>] get-ref"
-msgstr "git notes [--ref <références_notes>] get-ref"
+msgid "git notes [--ref <notes-ref>] get-ref"
+msgstr "git notes [--ref <références-notes>] get-ref"
 
 #: builtin/notes.c:40
 msgid "git notes [list [<object>]]"
 msgstr "git notes [list [<objet>]]"
 
 #: builtin/notes.c:45
@@ -7694,14 +7731,14 @@
 
 #: builtin/notes.c:66
 msgid "git notes show [<object>]"
 msgstr "git notes show [<objet>]"
 
 #: builtin/notes.c:71
-msgid "git notes merge [<options>] <notes_ref>"
-msgstr "git notes merge [<options>] <références_notes>"
+msgid "git notes merge [<options>] <notes-ref>"
+msgstr "git notes merge [<options>] <références-notes>"
 
 #: builtin/notes.c:72
 msgid "git notes merge --commit [<options>]"
 msgstr "git notes merge --commit [<options>]"
 
 #: builtin/notes.c:73
@@ -7933,14 +7970,14 @@
 
 #: builtin/notes.c:953
 msgid "notes-ref"
 msgstr "références-notes"
 
 #: builtin/notes.c:954
-msgid "use notes from <notes_ref>"
-msgstr "utiliser les notes depuis <références_notes>"
+msgid "use notes from <notes-ref>"
+msgstr "utiliser les notes depuis <références-notes>"
 
 #: builtin/notes.c:989 builtin/remote.c:1621
 #, c-format
 msgid "Unknown subcommand: %s"
 msgstr "Sous-commande inconnue : %s"
 
@@ -7951,214 +7988,214 @@
 
 #: builtin/pack-objects.c:29
 msgid "git pack-objects [options...] base-name [< ref-list | < object-list]"
 msgstr ""
 "git pack-objects [options...] base-name [< liste-références | < liste-objets]"
 
-#: builtin/pack-objects.c:177 builtin/pack-objects.c:180
+#: builtin/pack-objects.c:175 builtin/pack-objects.c:178
 #, c-format
 msgid "deflate error (%d)"
 msgstr "erreur de compression (%d)"
 
-#: builtin/pack-objects.c:773
+#: builtin/pack-objects.c:771
 msgid "Writing objects"
 msgstr "Écriture des objets"
 
-#: builtin/pack-objects.c:1015
+#: builtin/pack-objects.c:1013
 msgid "disabling bitmap writing, as some objects are not being packed"
 msgstr ""
 "désactivation de l'écriture en bitmap car certains objets ne sont pas "
 "compressés"
 
-#: builtin/pack-objects.c:2175
+#: builtin/pack-objects.c:2173
 msgid "Compressing objects"
 msgstr "Compression des objets"
 
-#: builtin/pack-objects.c:2572
+#: builtin/pack-objects.c:2570
 #, c-format
 msgid "unsupported index version %s"
 msgstr "version d'index non supportée %s"
 
-#: builtin/pack-objects.c:2576
+#: builtin/pack-objects.c:2574
 #, c-format
 msgid "bad index version '%s'"
 msgstr "mauvaise version d'index '%s'"
 
-#: builtin/pack-objects.c:2599
+#: builtin/pack-objects.c:2597
 #, c-format
 msgid "option %s does not accept negative form"
 msgstr "l'option %s n'accepte pas de valeur négative"
 
-#: builtin/pack-objects.c:2603
+#: builtin/pack-objects.c:2601
 #, c-format
 msgid "unable to parse value '%s' for option %s"
 msgstr "impossible d'analyser la valeur '%s' pour l'option %s"
 
-#: builtin/pack-objects.c:2623
+#: builtin/pack-objects.c:2621
 msgid "do not show progress meter"
 msgstr "ne pas afficher la barre de progression"
 
-#: builtin/pack-objects.c:2625
+#: builtin/pack-objects.c:2623
 msgid "show progress meter"
 msgstr "afficher la barre de progression"
 
-#: builtin/pack-objects.c:2627
+#: builtin/pack-objects.c:2625
 msgid "show progress meter during object writing phase"
 msgstr "afficher la barre de progression durant la phase d'écrite des objets"
 
-#: builtin/pack-objects.c:2630
+#: builtin/pack-objects.c:2628
 msgid "similar to --all-progress when progress meter is shown"
 msgstr "similaire à --all-progress quand la barre de progression est affichée"
 
-#: builtin/pack-objects.c:2631
+#: builtin/pack-objects.c:2629
 msgid "version[,offset]"
 msgstr "version[,offset]"
 
-#: builtin/pack-objects.c:2632
+#: builtin/pack-objects.c:2630
 msgid "write the pack index file in the specified idx format version"
 msgstr ""
 "écrire le fichier d'index du paquet dans le format d'index de version "
 "spécifié"
 
-#: builtin/pack-objects.c:2635
+#: builtin/pack-objects.c:2633
 msgid "maximum size of each output pack file"
 msgstr "taille maximum de chaque fichier paquet en sortie"
 
-#: builtin/pack-objects.c:2637
+#: builtin/pack-objects.c:2635
 msgid "ignore borrowed objects from alternate object store"
 msgstr "ignorer les objets empruntés à un autre magasin d'objets"
 
-#: builtin/pack-objects.c:2639
+#: builtin/pack-objects.c:2637
 msgid "ignore packed objects"
 msgstr "ignorer les objets empaquetés"
 
-#: builtin/pack-objects.c:2641
+#: builtin/pack-objects.c:2639
 msgid "limit pack window by objects"
 msgstr "limiter la fenêtre d'empaquetage par objets"
 
-#: builtin/pack-objects.c:2643
+#: builtin/pack-objects.c:2641
 msgid "limit pack window by memory in addition to object limit"
 msgstr ""
 "limiter la fenêtre d'empaquetage par mémoire en plus de la limite d'objets"
 
-#: builtin/pack-objects.c:2645
+#: builtin/pack-objects.c:2643
 msgid "maximum length of delta chain allowed in the resulting pack"
 msgstr ""
 "longueur maximum de la chaîne de delta autorisée dans le paquet résultant"
 
-#: builtin/pack-objects.c:2647
+#: builtin/pack-objects.c:2645
 msgid "reuse existing deltas"
 msgstr "réutiliser les deltas existants"
 
-#: builtin/pack-objects.c:2649
+#: builtin/pack-objects.c:2647
 msgid "reuse existing objects"
 msgstr "réutiliser les objets existants"
 
-#: builtin/pack-objects.c:2651
+#: builtin/pack-objects.c:2649
 msgid "use OFS_DELTA objects"
 msgstr "utiliser les objets OFS_DELTA"
 
-#: builtin/pack-objects.c:2653
+#: builtin/pack-objects.c:2651
 msgid "use threads when searching for best delta matches"
 msgstr ""
 "utiliser des fils lors de la recherche pour une meilleurs correspondance des "
 "deltas"
 
-#: builtin/pack-objects.c:2655
+#: builtin/pack-objects.c:2653
 msgid "do not create an empty pack output"
 msgstr "ne pas créer un paquet vide"
 
-#: builtin/pack-objects.c:2657
+#: builtin/pack-objects.c:2655
 msgid "read revision arguments from standard input"
 msgstr "lire les paramètres de révision depuis l'entrée standard"
 
-#: builtin/pack-objects.c:2659
+#: builtin/pack-objects.c:2657
 msgid "limit the objects to those that are not yet packed"
 msgstr "limiter les objets à ceux qui ne sont pas encore empaquetés"
 
-#: builtin/pack-objects.c:2662
+#: builtin/pack-objects.c:2660
 msgid "include objects reachable from any reference"
 msgstr "inclure les objets accessibles depuis toute référence"
 
-#: builtin/pack-objects.c:2665
+#: builtin/pack-objects.c:2663
 msgid "include objects referred by reflog entries"
 msgstr "inclure les objets référencés par les éléments de reflog"
 
-#: builtin/pack-objects.c:2668
+#: builtin/pack-objects.c:2666
 msgid "include objects referred to by the index"
 msgstr "inclure les objets référencés par l'index"
 
-#: builtin/pack-objects.c:2671
+#: builtin/pack-objects.c:2669
 msgid "output pack to stdout"
 msgstr "afficher l'empaquetage sur la sortie standard"
 
-#: builtin/pack-objects.c:2673
+#: builtin/pack-objects.c:2671
 msgid "include tag objects that refer to objects to be packed"
 msgstr "inclure les objets d'étiquettes qui réfèrent à des objets à empaqueter"
 
-#: builtin/pack-objects.c:2675
+#: builtin/pack-objects.c:2673
 msgid "keep unreachable objects"
 msgstr "garder les objets inaccessibles"
 
-#: builtin/pack-objects.c:2676 parse-options.h:140
+#: builtin/pack-objects.c:2674 parse-options.h:140
 msgid "time"
 msgstr "heure"
 
-#: builtin/pack-objects.c:2677
+#: builtin/pack-objects.c:2675
 msgid "unpack unreachable objects newer than <time>"
 msgstr "dépaqueter les objets inaccessibles plus récents que <heure>"
 
-#: builtin/pack-objects.c:2680
+#: builtin/pack-objects.c:2678
 msgid "create thin packs"
 msgstr "créer des paquets légers"
 
-#: builtin/pack-objects.c:2682
+#: builtin/pack-objects.c:2680
 msgid "create packs suitable for shallow fetches"
 msgstr "créer des paquets permettant des récupérations superficielles"
 
-#: builtin/pack-objects.c:2684
+#: builtin/pack-objects.c:2682
 msgid "ignore packs that have companion .keep file"
 msgstr "ignorer les paquets qui ont un fichier .keep"
 
-#: builtin/pack-objects.c:2686
+#: builtin/pack-objects.c:2684
 msgid "pack compression level"
 msgstr "niveau de compression du paquet"
 
-#: builtin/pack-objects.c:2688
+#: builtin/pack-objects.c:2686
 msgid "do not hide commits by grafts"
 msgstr "ne pas cacher les validations par greffes"
 
-#: builtin/pack-objects.c:2690
+#: builtin/pack-objects.c:2688
 msgid "use a bitmap index if available to speed up counting objects"
 msgstr ""
 "utiliser un index en bitmap si disponible pour accélerer le décompte des "
 "objets"
 
-#: builtin/pack-objects.c:2692
+#: builtin/pack-objects.c:2690
 msgid "write a bitmap index together with the pack index"
 msgstr "écrire un index en bitmap associé à l'index de paquet"
 
-#: builtin/pack-objects.c:2783
+#: builtin/pack-objects.c:2781
 msgid "Counting objects"
 msgstr "Décompte des objets"
 
 #: builtin/pack-refs.c:6
-msgid "git pack-refs [options]"
-msgstr "git pack-refs [options]"
+msgid "git pack-refs [<options>]"
+msgstr "git pack-refs [<options>]"
 
 #: builtin/pack-refs.c:14
 msgid "pack everything"
 msgstr "empaqueter tout"
 
 #: builtin/pack-refs.c:15
 msgid "prune loose refs (default)"
 msgstr "éliminer les références perdues (défaut)"
 
 #: builtin/prune-packed.c:7
-msgid "git prune-packed [-n|--dry-run] [-q|--quiet]"
-msgstr "git prune-packed [-n|--dry-run] [-q|--quiet]"
+msgid "git prune-packed [-n | --dry-run] [-q | --quiet]"
+msgstr "git prune-packed [-n | --dry-run] [-q | --quiet]"
 
 #: builtin/prune-packed.c:40
 msgid "Removing duplicate objects"
 msgstr "Suppression des objets dupliqués"
 
 #: builtin/prune.c:12
@@ -8447,82 +8484,86 @@
 msgstr "--mirror ne peut pas être combiné avec des spécifications de référence"
 
 #: builtin/push.c:422
 msgid "--all and --mirror are incompatible"
 msgstr "--all et --mirror sont incompatibles"
 
-#: builtin/push.c:493
+#: builtin/push.c:502
 msgid "repository"
 msgstr "dépôt"
 
-#: builtin/push.c:494
+#: builtin/push.c:503
 msgid "push all refs"
 msgstr "pousser toutes les références"
 
-#: builtin/push.c:495
+#: builtin/push.c:504
 msgid "mirror all refs"
 msgstr "refléter toutes les références"
 
-#: builtin/push.c:497
+#: builtin/push.c:506
 msgid "delete refs"
 msgstr "supprimer les références"
 
-#: builtin/push.c:498
+#: builtin/push.c:507
 msgid "push tags (can't be used with --all or --mirror)"
 msgstr ""
 "pousser les étiquettes (ne peut pas être utilisé avec --all ou --mirror)"
 
-#: builtin/push.c:501
+#: builtin/push.c:510
 msgid "force updates"
 msgstr "forcer les mises à jour"
 
-#: builtin/push.c:503
+#: builtin/push.c:512
 msgid "refname>:<expect"
 msgstr "nom de référence>:<attendu"
 
-#: builtin/push.c:504
+#: builtin/push.c:513
 msgid "require old value of ref to be at this value"
 msgstr "exiger que l'ancienne valeur de la référence soit à cette valeur"
 
-#: builtin/push.c:507
+#: builtin/push.c:516
 msgid "control recursive pushing of submodules"
 msgstr "contrôler la poussée récursive des sous-modules"
 
-#: builtin/push.c:509
+#: builtin/push.c:518
 msgid "use thin pack"
 msgstr "utiliser un empaquetage léger"
 
-#: builtin/push.c:510 builtin/push.c:511
+#: builtin/push.c:519 builtin/push.c:520
 msgid "receive pack program"
 msgstr "recevoir le programme d'empaquetage"
 
-#: builtin/push.c:512
+#: builtin/push.c:521
 msgid "set upstream for git pull/status"
 msgstr "définir la branche amont pour git pull/status"
 
-#: builtin/push.c:515
+#: builtin/push.c:524
 msgid "prune locally removed refs"
 msgstr "éliminer les références locales supprimées"
 
-#: builtin/push.c:517
+#: builtin/push.c:526
 msgid "bypass pre-push hook"
 msgstr "éviter d'utiliser le crochet pre-push"
 
-#: builtin/push.c:518
+#: builtin/push.c:527
 msgid "push missing but relevant tags"
 msgstr "pousser les étiquettes manquantes mais pertinentes"
 
-#: builtin/push.c:520
+#: builtin/push.c:529
 msgid "GPG sign the push"
 msgstr "signer la poussée avec GPG"
 
-#: builtin/push.c:529
+#: builtin/push.c:530
+msgid "request atomic transaction on remote side"
+msgstr "demande une transaction atomique sur le serveur distant"
+
+#: builtin/push.c:539
 msgid "--delete is incompatible with --all, --mirror and --tags"
 msgstr "--delete est incompatible avec --all, --mirror et --tags"
 
-#: builtin/push.c:531
+#: builtin/push.c:541
 msgid "--delete doesn't make sense without any refs"
 msgstr "--delete n'a pas de sens sans aucune référence"
 
 #: builtin/read-tree.c:37
 msgid ""
 "git read-tree [[-m [--trivial] [--aggressive] | --reset | --prefix=<prefix>] "
@@ -8595,45 +8636,45 @@
 msgstr "sauter l'application du filtre d'extraction creuse"
 
 #: builtin/read-tree.c:139
 msgid "debug unpack-trees"
 msgstr "déboguer unpack-trees"
 
-#: builtin/reflog.c:499
+#: builtin/reflog.c:429
 #, c-format
 msgid "%s' for '%s' is not a valid timestamp"
 msgstr "%s' pour '%s' n'est pas un horodatage valide"
 
-#: builtin/reflog.c:615 builtin/reflog.c:620
+#: builtin/reflog.c:546 builtin/reflog.c:551
 #, c-format
 msgid "'%s' is not a valid timestamp"
 msgstr "'%s' n'est pas un horodatage valide"
 
 #: builtin/remote.c:12
 msgid "git remote [-v | --verbose]"
 msgstr "git remote [-v | --verbose]"
 
 #: builtin/remote.c:13
 msgid ""
-"git remote add [-t <branch>] [-m <master>] [-f] [--tags|--no-tags] [--"
+"git remote add [-t <branch>] [-m <master>] [-f] [--tags | --no-tags] [--"
 "mirror=<fetch|push>] <name> <url>"
 msgstr ""
-"git remote add [-t <branche>] [-m <maîtresse>] [-f] [--tags|--no-tags] [--"
-"mirror=<fetch|push>] <nom> <URL>"
+"git remote add [-t <branche>] [-m <master>] [-f] [--tags | --no-tags] [--"
+"mirror=<fetch|push>] <nom> <url>"
 
 #: builtin/remote.c:14 builtin/remote.c:33
 msgid "git remote rename <old> <new>"
 msgstr "git remote rename <ancienne> <nouvelle>"
 
 #: builtin/remote.c:15 builtin/remote.c:38
 msgid "git remote remove <name>"
 msgstr "git remote remove <nom>"
 
-#: builtin/remote.c:16
-msgid "git remote set-head <name> (-a | --auto | -d | --delete |<branch>)"
-msgstr "git remote set-head <nom> (-a | --auto | -d | --delete |<branche>)"
+#: builtin/remote.c:16 builtin/remote.c:43
+msgid "git remote set-head <name> (-a | --auto | -d | --delete | <branch>)"
+msgstr "git remote set-head <nom> (-a | --auto | -d | --delete | <branche>)"
 
 #: builtin/remote.c:17
 msgid "git remote [-v | --verbose] show [-n] <name>"
 msgstr "git remote [-v | --verbose] show [-n] <nom>"
 
 #: builtin/remote.c:18
@@ -8664,16 +8705,12 @@
 msgstr "git remote set-url --delete <nom> <URL>"
 
 #: builtin/remote.c:28
 msgid "git remote add [<options>] <name> <url>"
 msgstr "git remote add [<options>] <nom> <URL>"
 
-#: builtin/remote.c:43
-msgid "git remote set-head <name> (-a | --auto | -d | --delete | <branch>)"
-msgstr "git remote set-head <nom> (-a | --auto | -d | --delete | <branche>)"
-
 #: builtin/remote.c:48
 msgid "git remote set-branches <name> <branch>..."
 msgstr "git remote set-branches <nom> <branche>..."
 
 #: builtin/remote.c:49
 msgid "git remote set-branches --add <name> <branch>..."
@@ -9111,14 +9148,14 @@
 
 #: builtin/remote.c:1592
 msgid "be verbose; must be placed before a subcommand"
 msgstr "être verbeux : doit être placé avant une sous-commande"
 
 #: builtin/repack.c:17
-msgid "git repack [options]"
-msgstr "git repack [options]"
+msgid "git repack [<options>]"
+msgstr "git repack [<options>]"
 
 #: builtin/repack.c:159
 msgid "pack everything in a single pack"
 msgstr "empaqueter tout dans un seul paquet"
 
 #: builtin/repack.c:161
@@ -9179,13 +9216,13 @@
 msgstr "taille maximum de chaque fichier paquet"
 
 #: builtin/repack.c:187
 msgid "repack objects in packs marked with .keep"
 msgstr "réempaqueter les objets dans des paquets marqués avec .keep"
 
-#: builtin/repack.c:371
+#: builtin/repack.c:375
 #, c-format
 msgid "removing '%s' failed"
 msgstr "la suppression de '%s' a échoué"
 
 #: builtin/replace.c:19
 msgid "git replace [-f] <object> <replacement>"
@@ -9271,14 +9308,15 @@
 
 #: builtin/replace.c:438
 msgid "use this format"
 msgstr "utiliser ce format"
 
 #: builtin/rerere.c:12
-msgid "git rerere [clear | forget path... | status | remaining | diff | gc]"
-msgstr "git rerere [clear | forget chemin... | status | remaining | diff | gc]"
+msgid "git rerere [clear | forget <path>... | status | remaining | diff | gc]"
+msgstr ""
+"git rerere [clear | forget <chemin>... | status | remaining | diff | gc]"
 
 #: builtin/rerere.c:57
 msgid "register clean resolutions in index"
 msgstr "enregistrer des résolutions propres dans l'index"
 
 #: builtin/reset.c:26
@@ -9414,14 +9452,14 @@
 
 #: builtin/reset.c:374
 msgid "Could not write new index file."
 msgstr "Impossible d'écrire le nouveau fichier d'index."
 
 #: builtin/rev-parse.c:361
-msgid "git rev-parse --parseopt [options] -- [<args>...]"
-msgstr "git rev-parse --parseopt [options] -- [<arguments>...]"
+msgid "git rev-parse --parseopt [<options>] -- [<args>...]"
+msgstr "git rev-parse --parseopt [<options>] -- [<arguments>...]"
 
 #: builtin/rev-parse.c:366
 msgid "keep the `--` passed as an arg"
 msgstr "garder le `--` passé en argument"
 
 #: builtin/rev-parse.c:368
@@ -9431,36 +9469,36 @@
 #: builtin/rev-parse.c:371
 msgid "output in stuck long form"
 msgstr "sortie en forme longue fixée"
 
 #: builtin/rev-parse.c:499
 msgid ""
-"git rev-parse --parseopt [options] -- [<args>...]\n"
+"git rev-parse --parseopt [<options>] -- [<args>...]\n"
 "   or: git rev-parse --sq-quote [<arg>...]\n"
-"   or: git rev-parse [options] [<arg>...]\n"
+"   or: git rev-parse [<options>] [<arg>...]\n"
 "\n"
 "Run \"git rev-parse --parseopt -h\" for more information on the first usage."
 msgstr ""
-"git rev-parse --parseopt [options] -- [<arguments>...]\n"
+"git rev-parse --parseopt [<options>] -- [<arguments>...]\n"
 "   ou : git rev-parse --sq-quote [<argument>...]\n"
 "   ou : git rev-parse [options] [<argument>...]\n"
 "\n"
 "Lancez \"git rev-parse --parseopt -h\" pour plus d'information sur "
 "l'utilisation principale."
 
 #: builtin/revert.c:22
-msgid "git revert [options] <commit-ish>..."
-msgstr "git revert [options] <commit ou apparenté>..."
+msgid "git revert [<options>] <commit-ish>..."
+msgstr "git revert [<options>] <commit ou apparenté>..."
 
 #: builtin/revert.c:23
 msgid "git revert <subcommand>"
 msgstr "git revert <sous-commande>"
 
 #: builtin/revert.c:28
-msgid "git cherry-pick [options] <commit-ish>..."
-msgstr "git cherry-pick [options] <commit ou apparenté>..."
+msgid "git cherry-pick [<options>] <commit-ish>..."
+msgstr "git cherry-pick [<options>] <commit ou apparenté>..."
 
 #: builtin/revert.c:29
 msgid "git cherry-pick <subcommand>"
 msgstr "git cherry-pick <sous-commande>"
 
 #: builtin/revert.c:71
@@ -9534,14 +9572,14 @@
 
 #: builtin/revert.c:212
 msgid "cherry-pick failed"
 msgstr "le picorage a échoué"
 
 #: builtin/rm.c:17
-msgid "git rm [options] [--] <file>..."
-msgstr "git rm [options] [--] <fichier>..."
+msgid "git rm [<options>] [--] <file>..."
+msgstr "git rm [<options>] [--] <fichier>..."
 
 #: builtin/rm.c:65
 msgid ""
 "the following submodule (or one of its nested submodules)\n"
 "uses a .git directory:"
 msgid_plural ""
@@ -9639,14 +9677,14 @@
 #: builtin/rm.c:375
 #, c-format
 msgid "git rm: unable to remove %s"
 msgstr "git rm : impossible de supprimer %s"
 
 #: builtin/shortlog.c:13
-msgid "git shortlog [<options>] [<revision range>] [[--] [<path>...]]"
-msgstr "git shortlog [<options>] [<intervalle révisions>] [[--] [<chemin>...]]"
+msgid "git shortlog [<options>] [<revision-range>] [[--] [<path>...]]"
+msgstr "git shortlog [<options>] [<intervalle-révisions>] [[--] [<chemin>...]]"
 
 #: builtin/shortlog.c:131
 #, c-format
 msgid "Missing author: %s"
 msgstr "Auteur manquant : %s"
 
@@ -9671,25 +9709,25 @@
 #: builtin/shortlog.c:236
 msgid "Linewrap output"
 msgstr "Couper les lignes"
 
 #: builtin/show-branch.c:9
 msgid ""
-"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
+"git show-branch [-a | --all] [-r | --remotes] [--topo-order | --date-order]\n"
 "\t\t[--current] [--color[=<when>] | --no-color] [--sparse]\n"
 "\t\t[--more=<n> | --list | --independent | --merge-base]\n"
 "\t\t[--no-name | --sha1-name] [--topics] [(<rev> | <glob>)...]"
 msgstr ""
-"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
+"git show-branch [-a | --all] [-r|--remotes] [--topo-order | --date-order]\n"
 "\t\t[--current] [--color[=<quand>] | --no-color] [--sparse]\n"
 "\t\t[--more=<n> | --list | --independent | --merge-base]\n"
 "\t\t[--no-name | --sha1-name] [--topics] [(<rév> | <glob>)...]"
 
 #: builtin/show-branch.c:13
-msgid "git show-branch (-g|--reflog)[=<n>[,<base>]] [--list] [<ref>]"
-msgstr "git show-branch (-g|--reflog)[=<n>[,<base>]] [--list] [<référence>]"
+msgid "git show-branch (-g | --reflog)[=<n>[,<base>]] [--list] [<ref>]"
+msgstr "git show-branch (-g | --reflog)[=<n>[,<base>]] [--list] [<référence>]"
 
 #: builtin/show-branch.c:652
 msgid "show remote-tracking and local branches"
 msgstr "afficher les branches de suivi distantes et les branches locales"
 
 #: builtin/show-branch.c:654
@@ -9753,17 +9791,17 @@
 msgid "show <n> most recent ref-log entries starting at base"
 msgstr ""
 "afficher les <n> plus récents éléments de ref-log en commençant à la base"
 
 #: builtin/show-ref.c:10
 msgid ""
-"git show-ref [-q|--quiet] [--verify] [--head] [-d|--dereference] [-s|--"
-"hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [pattern*] "
+"git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | --"
+"hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<pattern>...]"
 msgstr ""
-"git show-ref [-q|--quiet] [--verify] [--head] [-d|--dereference] [-s|--"
-"hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [motif*] "
+"git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | --"
+"hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<motif>...]"
 
 #: builtin/show-ref.c:11
 msgid "git show-ref --exclude-existing[=pattern] < ref-list"
 msgstr "git show-ref --exclude-existing[=motif] < liste-références"
 
 #: builtin/show-ref.c:168
@@ -9801,18 +9839,18 @@
 msgid "show refs from stdin that aren't in local repository"
 msgstr ""
 "afficher les références de l'entrée standard qui ne sont pas dans le dépôt "
 "local"
 
 #: builtin/symbolic-ref.c:7
-msgid "git symbolic-ref [options] name [ref]"
-msgstr "git symbolic-ref [options] nom [référence]"
+msgid "git symbolic-ref [<options>] <name> [<ref>]"
+msgstr "git symbolic-ref [<options>] nom [<référence>]"
 
 #: builtin/symbolic-ref.c:8
-msgid "git symbolic-ref -d [-q] name"
-msgstr "git symbolic-ref -d [-q] nom"
+msgid "git symbolic-ref -d [-q] <name>"
+msgstr "git symbolic-ref -d [-q] <nom>"
 
 #: builtin/symbolic-ref.c:40
 msgid "suppress error message for non-symbolic (detached) refs"
 msgstr ""
 "supprimer le message d'erreur pour une référence non symbolique (détachée)"
 
@@ -9831,27 +9869,28 @@
 #: builtin/symbolic-ref.c:43 builtin/update-ref.c:358
 msgid "reason of the update"
 msgstr "raison de la mise à jour"
 
 #: builtin/tag.c:22
 msgid ""
-"git tag [-a|-s|-u <key-id>] [-f] [-m <msg>|-F <file>] <tagname> [<head>]"
-msgstr ""
-"git tag [-a|-s|-u <id-clé>] [-f] [-m <message>|-F <file>] <nométiquette> "
+"git tag [-a | -s | -u <key-id>] [-f] [-m <msg> | -F <file>] <tagname> "
 "[<head>]"
+msgstr ""
+"git tag [-a | -s | -u <id-clé>] [-f] [-m <message> | -F <file>] <nom-"
+"étiquette> [<head>]"
 
 #: builtin/tag.c:23
 msgid "git tag -d <tagname>..."
 msgstr "git tag -d <nométiquette>..."
 
 #: builtin/tag.c:24
 msgid ""
-"git tag -l [-n[<num>]] [--contains <commit>] [--points-at <object>] \n"
+"git tag -l [-n[<num>]] [--contains <commit>] [--points-at <object>]\n"
 "\t\t[<pattern>...]"
 msgstr ""
-"git tag -l [-n[<num>]] [--contains <commit>] [--points-at <objet>] \n"
+"git tag -l [-n[<num>]] [--contains <commit>] [--points-at <objet>]\n"
 "\t\t[<motif>...]"
 
 #: builtin/tag.c:26
 msgid "git tag -v <tagname>..."
 msgstr "git tag -v <nométiquette>..."
 
@@ -9989,24 +10028,24 @@
 msgstr "utiliser une autre clé pour signer l'étiquette"
 
 #: builtin/tag.c:607
 msgid "replace the tag if exists"
 msgstr "remplacer l'étiquette si elle existe"
 
-#: builtin/tag.c:608
+#: builtin/tag.c:609
+msgid "Tag listing options"
+msgstr "Options d'affichage des étiquettes"
+
+#: builtin/tag.c:610
 msgid "show tag list in columns"
 msgstr "afficher la liste des étiquettes sous forme de colonnes"
 
-#: builtin/tag.c:610
+#: builtin/tag.c:612
 msgid "sort tags"
 msgstr "trier les étiquettes"
 
-#: builtin/tag.c:614
-msgid "Tag listing options"
-msgstr "Options d'affichage des étiquettes"
-
 #: builtin/tag.c:617 builtin/tag.c:623
 msgid "print only tags that contain the commit"
 msgstr "afficher seulement les étiquettes qui contiennent la validation"
 
 #: builtin/tag.c:629
 msgid "print only tags of the object"
@@ -10057,144 +10096,144 @@
 
 #: builtin/unpack-objects.c:489
 msgid "Unpacking objects"
 msgstr "Dépaquetage des objets"
 
 #: builtin/update-index.c:403
-msgid "git update-index [options] [--] [<file>...]"
-msgstr "git update-index [options] [--] [<fichier>...]"
+msgid "git update-index [<options>] [--] [<file>...]"
+msgstr "git update-index [<options>] [--] [<fichier>...]"
 
-#: builtin/update-index.c:756
+#: builtin/update-index.c:757
 msgid "continue refresh even when index needs update"
 msgstr "continuer de rafraîchir même si l'index a besoin d'une mise à jour"
 
-#: builtin/update-index.c:759
+#: builtin/update-index.c:760
 msgid "refresh: ignore submodules"
 msgstr "rafraîchir : ignorer les sous-modules"
 
-#: builtin/update-index.c:762
+#: builtin/update-index.c:763
 msgid "do not ignore new files"
 msgstr "ne pas ignorer les nouveaux fichiers"
 
-#: builtin/update-index.c:764
+#: builtin/update-index.c:765
 msgid "let files replace directories and vice-versa"
 msgstr "laisser les fichiers remplacer des répertoires et vice-versa"
 
-#: builtin/update-index.c:766
+#: builtin/update-index.c:767
 msgid "notice files missing from worktree"
 msgstr "aviser des fichiers manquants dans la copie de travail"
 
-#: builtin/update-index.c:768
+#: builtin/update-index.c:769
 msgid "refresh even if index contains unmerged entries"
 msgstr "rafraîchir même si l'index contient des éléments non fusionnés"
 
-#: builtin/update-index.c:771
+#: builtin/update-index.c:772
 msgid "refresh stat information"
 msgstr "rafraîchir l'information de stat"
 
-#: builtin/update-index.c:775
+#: builtin/update-index.c:776
 msgid "like --refresh, but ignore assume-unchanged setting"
 msgstr "comme --refresh, mais en ignorant l'option assume-unchanged"
 
-#: builtin/update-index.c:779
+#: builtin/update-index.c:780
 msgid "<mode>,<object>,<path>"
 msgstr "<mode>, <objet>, <chemin>"
 
-#: builtin/update-index.c:780
+#: builtin/update-index.c:781
 msgid "add the specified entry to the index"
 msgstr "ajouter l'élément spécifié dans l'index"
 
-#: builtin/update-index.c:784
+#: builtin/update-index.c:785
 msgid "(+/-)x"
 msgstr "(+/-)x"
 
-#: builtin/update-index.c:785
+#: builtin/update-index.c:786
 msgid "override the executable bit of the listed files"
 msgstr "outrepasser le bit exécutable pour les fichiers listés"
 
-#: builtin/update-index.c:789
+#: builtin/update-index.c:790
 msgid "mark files as \"not changing\""
 msgstr "marquer les fichiers comme \"non changeants\""
 
-#: builtin/update-index.c:792
+#: builtin/update-index.c:793
 msgid "clear assumed-unchanged bit"
 msgstr "mettre à zéro le bit supposé-non-modifié"
 
-#: builtin/update-index.c:795
+#: builtin/update-index.c:796
 msgid "mark files as \"index-only\""
 msgstr "marquer les fichiers comme \"index seulement\""
 
-#: builtin/update-index.c:798
+#: builtin/update-index.c:799
 msgid "clear skip-worktree bit"
 msgstr "mettre à zéro le bit sauter-la-copie-de travail"
 
-#: builtin/update-index.c:801
+#: builtin/update-index.c:802
 msgid "add to index only; do not add content to object database"
 msgstr ""
 "ajouter seulement à l'index ; ne pas ajouter le contenu dans la base de "
 "données des objets"
 
-#: builtin/update-index.c:803
+#: builtin/update-index.c:804
 msgid "remove named paths even if present in worktree"
 msgstr ""
 "supprimer les chemins nommés même s'ils sont présents dans la copie de "
 "travail"
 
-#: builtin/update-index.c:805
+#: builtin/update-index.c:806
 msgid "with --stdin: input lines are terminated by null bytes"
 msgstr "avec --stdin : les lignes en entrée sont terminées par des octets nuls"
 
-#: builtin/update-index.c:807
+#: builtin/update-index.c:808
 msgid "read list of paths to be updated from standard input"
 msgstr "lire la liste des chemins à mettre à jour depuis l'entrée standard"
 
-#: builtin/update-index.c:811
+#: builtin/update-index.c:812
 msgid "add entries from standard input to the index"
 msgstr "ajouter les éléments depuis l'entrée standard à l'index"
 
-#: builtin/update-index.c:815
+#: builtin/update-index.c:816
 msgid "repopulate stages #2 and #3 for the listed paths"
 msgstr "repeupler les étapes n°2 et n°3 pour les chemins listés"
 
-#: builtin/update-index.c:819
+#: builtin/update-index.c:820
 msgid "only update entries that differ from HEAD"
 msgstr "mettre à jour seulement les éléments qui diffèrent de HEAD"
 
-#: builtin/update-index.c:823
+#: builtin/update-index.c:824
 msgid "ignore files missing from worktree"
 msgstr "ignorer les fichiers manquants dans la copie de travail"
 
-#: builtin/update-index.c:826
+#: builtin/update-index.c:827
 msgid "report actions to standard output"
 msgstr "afficher les actions sur la sortie standard"
 
-#: builtin/update-index.c:828
+#: builtin/update-index.c:829
 msgid "(for porcelains) forget saved unresolved conflicts"
 msgstr "(pour porcelaines) oublier les conflits sauvés et non résolus"
 
-#: builtin/update-index.c:832
+#: builtin/update-index.c:833
 msgid "write index in this format"
 msgstr "écrire l'index dans ce format"
 
-#: builtin/update-index.c:834
+#: builtin/update-index.c:835
 msgid "enable or disable split index"
 msgstr "activer ou désactiver l'index divisé"
 
 #: builtin/update-ref.c:9
-msgid "git update-ref [options] -d <refname> [<oldval>]"
-msgstr "git update-ref [options] -d <nomréférence> [<anciennevaleur>]"
+msgid "git update-ref [<options>] -d <refname> [<old-val>]"
+msgstr "git update-ref [<options>] -d <nom-référence> [<ancienne-valeur>]"
 
 #: builtin/update-ref.c:10
-msgid "git update-ref [options]    <refname> <newval> [<oldval>]"
+msgid "git update-ref [<options>]    <refname> <new-val> [<old-val>]"
 msgstr ""
-"git update-ref [options]    <nomréférence> <nouvellevaleur> "
-"[<anciennevaleur>]"
+"git update-ref [<options>]    <nom-référence> <nouvelle-valeur> [<ancienne-"
+"valeur>]"
 
 #: builtin/update-ref.c:11
-msgid "git update-ref [options] --stdin [-z]"
-msgstr "git update-ref [options] --stdin [-z]"
+msgid "git update-ref [<options>] --stdin [-z]"
+msgstr "git update-ref [<options>] --stdin [-z]"
 
 #: builtin/update-ref.c:359
 msgid "delete the reference"
 msgstr "supprimer la référence"
 
 #: builtin/update-ref.c:361
@@ -10215,34 +10254,34 @@
 
 #: builtin/update-server-info.c:14
 msgid "update the info files from scratch"
 msgstr "mettre à jour les fichiers d'information à partir de zéro"
 
 #: builtin/verify-commit.c:17
-msgid "git verify-commit [-v|--verbose] <commit>..."
-msgstr "git verify-commit [-v|--verbose] <commit>..."
+msgid "git verify-commit [-v | --verbose] <commit>..."
+msgstr "git verify-commit [-v | --verbose] <commit>..."
 
 #: builtin/verify-commit.c:75
 msgid "print commit contents"
 msgstr "afficher le contenu du commit"
 
 #: builtin/verify-pack.c:54
-msgid "git verify-pack [-v|--verbose] [-s|--stat-only] <pack>..."
-msgstr "git verify-pack [-v|--verbose] [-s|--stat-only] <pack>..."
+msgid "git verify-pack [-v | --verbose] [-s | --stat-only] <pack>..."
+msgstr "git verify-pack [-v | --verbose] [-s | --stat-only] <pack>..."
 
 #: builtin/verify-pack.c:64
 msgid "verbose"
 msgstr "verbeux"
 
 #: builtin/verify-pack.c:66
 msgid "show statistics only"
 msgstr "afficher seulement les statistiques"
 
 #: builtin/verify-tag.c:17
-msgid "git verify-tag [-v|--verbose] <tag>..."
-msgstr "git verify-tag [-v|--verbose] <étiquette>..."
+msgid "git verify-tag [-v | --verbose] <tag>..."
+msgstr "git verify-tag [-v | --verbose] <étiquette>..."
 
 #: builtin/verify-tag.c:73
 msgid "print tag contents"
 msgstr "afficher le contenu de l'étiquette"
 
 #: builtin/write-tree.c:13
@@ -10597,16 +10636,16 @@
 msgid "Bad HEAD - I need a HEAD"
 msgstr "Mauvaise HEAD - j'ai besoin d'une HEAD"
 
 #: git-bisect.sh:130
 #, sh-format
 msgid ""
-"Checking out '$start_head' failed. Try 'git bisect reset <validbranch>'."
+"Checking out '$start_head' failed. Try 'git bisect reset <valid-branch>'."
 msgstr ""
-"L'extraction de '$start_head' a échoué. Essayez 'git bisect reset "
-"<branchevalide>'."
+"L'extraction de '$start_head' a échoué. Essayez 'git bisect reset <branche-"
+"valide>'."
 
 #: git-bisect.sh:140
 msgid "won't bisect on cg-seek'ed tree"
 msgstr "refus de bissecter sur un arbre 'cg-seeked'"
 
 #: git-bisect.sh:144
@@ -11378,12 +11417,27 @@
 
 #: git-submodule.sh:1331
 #, sh-format
 msgid "Synchronizing submodule url for '$displaypath'"
 msgstr "Synchronisation de l'URL sous-module pour '$displaypath'"
 
+#~ msgid "server does not support --atomic push"
+#~ msgstr "le serveur ne gère pas push --atomic"
+
+#~ msgid "(detached from %s)"
+#~ msgstr "(détaché de %s)"
+
+#~ msgid "No existing author found with '%s'"
+#~ msgstr "Aucun auteur existant trouvé avec '%s'"
+
+#~ msgid "search also in ignored files"
+#~ msgstr "rechercher aussi dans les fichiers ignorés"
+
+#~ msgid "git remote set-head <name> (-a | --auto | -d | --delete |<branch>)"
+#~ msgstr "git remote set-head <nom> (-a | --auto | -d | --delete |<branche>)"
+
 #~ msgid "no files added"
 #~ msgstr "aucun fichier ajouté"
 
 #~ msgid "force creation (when already exists)"
 #~ msgstr "forcer la création (même si la cible existe)"
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/git.pot /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/git.pot
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/git.pot	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/git.pot	2015-05-01 03:12:02.000000000 +0800
@@ -5,13 +5,13 @@
 #
 #, fuzzy
 msgid ""
 msgstr ""
 "Project-Id-Version: PACKAGE VERSION\n"
 "Report-Msgid-Bugs-To: Git Mailing List <git@vger.kernel.org>\n"
-"POT-Creation-Date: 2015-01-21 14:21+0800\n"
+"POT-Creation-Date: 2015-04-03 08:13+0800\n"
 "PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
 "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
 "Language-Team: LANGUAGE <LL@li.org>\n"
 "Language: \n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=CHARSET\n"
@@ -27,22 +27,22 @@
 msgid ""
 "Fix them up in the work tree, and then use 'git add/rm <file>'\n"
 "as appropriate to mark resolution and make a commit."
 msgstr ""
 
 #: archive.c:11
-msgid "git archive [options] <tree-ish> [<path>...]"
+msgid "git archive [<options>] <tree-ish> [<path>...]"
 msgstr ""
 
 #: archive.c:12
 msgid "git archive --list"
 msgstr ""
 
 #: archive.c:13
 msgid ""
-"git archive --remote <repo> [--exec <cmd>] [options] <tree-ish> [<path>...]"
+"git archive --remote <repo> [--exec <cmd>] [<options>] <tree-ish> [<path>...]"
 msgstr ""
 
 #: archive.c:14
 msgid "git archive --remote <repo> [--exec <cmd>] --list"
 msgstr ""
 
@@ -64,16 +64,16 @@
 msgstr ""
 
 #: archive.c:429
 msgid "prepend prefix to each pathname in the archive"
 msgstr ""
 
-#: archive.c:430 builtin/archive.c:88 builtin/blame.c:2517
-#: builtin/blame.c:2518 builtin/config.c:57 builtin/fast-export.c:986
+#: archive.c:430 builtin/archive.c:88 builtin/blame.c:2516
+#: builtin/blame.c:2517 builtin/config.c:57 builtin/fast-export.c:986
 #: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:101
-#: builtin/ls-files.c:489 builtin/ls-files.c:492 builtin/notes.c:394
+#: builtin/ls-files.c:446 builtin/ls-files.c:449 builtin/notes.c:394
 #: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:151
 msgid "file"
 msgstr ""
 
 #: archive.c:431 builtin/archive.c:89
 msgid "write the archive to this file"
@@ -116,13 +116,13 @@
 msgstr ""
 
 #: archive.c:452 builtin/archive.c:93
 msgid "path to the remote git-upload-archive command"
 msgstr ""
 
-#: attr.c:258
+#: attr.c:264
 msgid ""
 "Negative patterns are ignored in git attributes\n"
 "Use '\\!' for literal leading exclamation."
 msgstr ""
 
 #: branch.c:60
@@ -233,23 +233,23 @@
 
 #: bundle.c:61
 #, c-format
 msgid "unrecognized header: %s%s (%d)"
 msgstr ""
 
-#: bundle.c:87 builtin/commit.c:770
+#: bundle.c:87 builtin/commit.c:766
 #, c-format
 msgid "could not open '%s'"
 msgstr ""
 
 #: bundle.c:139
 msgid "Repository lacks these prerequisite commits:"
 msgstr ""
 
-#: bundle.c:163 sequencer.c:645 sequencer.c:1100 builtin/blame.c:2706
-#: builtin/branch.c:652 builtin/commit.c:1049 builtin/log.c:330
+#: bundle.c:163 sequencer.c:650 sequencer.c:1105 builtin/blame.c:2705
+#: builtin/branch.c:659 builtin/commit.c:1045 builtin/log.c:330
 #: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:358
 #: builtin/shortlog.c:158
 msgid "revision walk setup failed"
 msgstr ""
 
 #: bundle.c:185
@@ -284,27 +284,27 @@
 
 #: bundle.c:358
 #, c-format
 msgid "ref '%s' is excluded by the rev-list options"
 msgstr ""
 
-#: bundle.c:438 builtin/log.c:153 builtin/log.c:1342 builtin/shortlog.c:261
+#: bundle.c:437 builtin/log.c:153 builtin/log.c:1342 builtin/shortlog.c:261
 #, c-format
 msgid "unrecognized argument: %s"
 msgstr ""
 
-#: bundle.c:444
+#: bundle.c:443
 msgid "Refusing to create empty bundle."
 msgstr ""
 
-#: bundle.c:454
+#: bundle.c:453
 #, c-format
 msgid "cannot create '%s'"
 msgstr ""
 
-#: bundle.c:475
+#: bundle.c:474
 msgid "index-pack died"
 msgstr ""
 
 #: color.c:260
 #, c-format
 msgid "invalid color value: %.*s"
@@ -321,61 +321,61 @@
 msgstr ""
 
 #: compat/obstack.c:406 compat/obstack.c:408
 msgid "memory exhausted"
 msgstr ""
 
-#: config.c:469 config.c:471
+#: config.c:474 config.c:476
 #, c-format
 msgid "bad config file line %d in %s"
 msgstr ""
 
-#: config.c:587
+#: config.c:592
 #, c-format
 msgid "bad numeric config value '%s' for '%s' in %s: %s"
 msgstr ""
 
-#: config.c:589
+#: config.c:594
 #, c-format
 msgid "bad numeric config value '%s' for '%s': %s"
 msgstr ""
 
-#: config.c:674
+#: config.c:679
 #, c-format
 msgid "failed to expand user dir in: '%s'"
 msgstr ""
 
-#: config.c:752 config.c:763
+#: config.c:757 config.c:768
 #, c-format
 msgid "bad zlib compression level %d"
 msgstr ""
 
-#: config.c:885
+#: config.c:890
 #, c-format
 msgid "invalid mode for object creation: %s"
 msgstr ""
 
-#: config.c:1211
+#: config.c:1216
 msgid "unable to parse command-line config"
 msgstr ""
 
-#: config.c:1272
+#: config.c:1277
 msgid "unknown error occured while reading the configuration files"
 msgstr ""
 
-#: config.c:1596
+#: config.c:1601
 #, c-format
 msgid "unable to parse '%s' from command-line config"
 msgstr ""
 
-#: config.c:1598
+#: config.c:1603
 #, c-format
 msgid "bad config variable '%s' in file '%s' at line %d"
 msgstr ""
 
-#: config.c:1657
+#: config.c:1662
 #, c-format
 msgid "%s has multiple values"
 msgstr ""
 
 #: connected.c:69
 msgid "Could not run 'git rev-list'"
@@ -461,13 +461,13 @@
 
 #: diffcore-order.c:24
 #, c-format
 msgid "failed to read orderfile '%s'"
 msgstr ""
 
-#: diffcore-rename.c:516
+#: diffcore-rename.c:536
 msgid "Performing inexact rename detection"
 msgstr ""
 
 #: diff.c:114
 #, c-format
 msgid "  Failed to parse dirstat cut-off percentage '%s'\n"
@@ -487,29 +487,29 @@
 #, c-format
 msgid ""
 "Found errors in 'diff.dirstat' config variable:\n"
 "%s"
 msgstr ""
 
-#: diff.c:2957
+#: diff.c:2956
 #, c-format
 msgid "external diff died, stopping at %s"
 msgstr ""
 
-#: diff.c:3352
+#: diff.c:3351
 msgid "--follow requires exactly one pathspec"
 msgstr ""
 
-#: diff.c:3515
+#: diff.c:3514
 #, c-format
 msgid ""
 "Failed to parse --dirstat/-X option parameter:\n"
 "%s"
 msgstr ""
 
-#: diff.c:3529
+#: diff.c:3528
 #, c-format
 msgid "Failed to parse --submodule option parameter: '%s'"
 msgstr ""
 
 #: gpg-interface.c:129 gpg-interface.c:200
 msgid "could not run gpg."
@@ -838,33 +838,33 @@
 
 #: merge-recursive.c:1853
 #, c-format
 msgid "Unprocessed path??? %s"
 msgstr ""
 
-#: merge-recursive.c:1898
+#: merge-recursive.c:1901
 msgid "Merging:"
 msgstr ""
 
-#: merge-recursive.c:1911
+#: merge-recursive.c:1914
 #, c-format
 msgid "found %u common ancestor:"
 msgid_plural "found %u common ancestors:"
 msgstr[0] ""
 msgstr[1] ""
 
-#: merge-recursive.c:1948
+#: merge-recursive.c:1951
 msgid "merge returned no commit"
 msgstr ""
 
-#: merge-recursive.c:2005
+#: merge-recursive.c:2008
 #, c-format
 msgid "Could not parse object '%s'"
 msgstr ""
 
-#: merge-recursive.c:2016 builtin/merge.c:667
+#: merge-recursive.c:2019 builtin/merge.c:667
 msgid "Unable to write index."
 msgstr ""
 
 #: notes-utils.c:41
 msgid "Cannot commit uninitialized/unreferenced notes tree"
 msgstr ""
@@ -981,20 +981,20 @@
 msgstr ""
 
 #: progress.c:225
 msgid "done"
 msgstr ""
 
-#: read-cache.c:1267
+#: read-cache.c:1275
 #, c-format
 msgid ""
 "index.version set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 
-#: read-cache.c:1277
+#: read-cache.c:1285
 #, c-format
 msgid ""
 "GIT_INDEX_VERSION set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 
@@ -1066,29 +1066,37 @@
 msgstr[1] ""
 
 #: remote.c:2021
 msgid "  (use \"git pull\" to merge the remote branch into yours)\n"
 msgstr ""
 
-#: run-command.c:87
+#: revision.c:2348
+msgid "--first-parent is incompatible with --bisect"
+msgstr ""
+
+#: run-command.c:83
 msgid "open /dev/null failed"
 msgstr ""
 
-#: run-command.c:89
+#: run-command.c:85
 #, c-format
 msgid "dup2(%d,%d) failed"
 msgstr ""
 
-#: send-pack.c:268
+#: send-pack.c:272
 msgid "failed to sign the push certificate"
 msgstr ""
 
-#: send-pack.c:325
+#: send-pack.c:356
 msgid "the receiving end does not support --signed push"
 msgstr ""
 
+#: send-pack.c:366
+msgid "the receiving end does not support --atomic push"
+msgstr ""
+
 #: sequencer.c:172 builtin/merge.c:782 builtin/merge.c:893 builtin/merge.c:995
 #: builtin/merge.c:1005
 #, c-format
 msgid "Could not open '%s' for writing"
 msgstr ""
 
@@ -1108,13 +1116,13 @@
 msgid ""
 "after resolving the conflicts, mark the corrected paths\n"
 "with 'git add <paths>' or 'git rm <paths>'\n"
 "and commit the result with 'git commit'"
 msgstr ""
 
-#: sequencer.c:211 sequencer.c:856 sequencer.c:939
+#: sequencer.c:211 sequencer.c:861 sequencer.c:944
 #, c-format
 msgid "Could not write to %s"
 msgstr ""
 
 #: sequencer.c:214
 #, c-format
@@ -1144,190 +1152,190 @@
 msgstr ""
 
 #: sequencer.c:359
 msgid "Unable to update cache tree\n"
 msgstr ""
 
-#: sequencer.c:406
+#: sequencer.c:411
 #, c-format
 msgid "Could not parse commit %s\n"
 msgstr ""
 
-#: sequencer.c:411
+#: sequencer.c:416
 #, c-format
 msgid "Could not parse parent commit %s\n"
 msgstr ""
 
-#: sequencer.c:477
+#: sequencer.c:482
 msgid "Your index file is unmerged."
 msgstr ""
 
-#: sequencer.c:496
+#: sequencer.c:501
 #, c-format
 msgid "Commit %s is a merge but no -m option was given."
 msgstr ""
 
-#: sequencer.c:504
+#: sequencer.c:509
 #, c-format
 msgid "Commit %s does not have parent %d"
 msgstr ""
 
-#: sequencer.c:508
+#: sequencer.c:513
 #, c-format
 msgid "Mainline was specified but commit %s is not a merge."
 msgstr ""
 
 #. TRANSLATORS: The first %s will be "revert" or
 #. "cherry-pick", the second %s a SHA1
-#: sequencer.c:521
+#: sequencer.c:526
 #, c-format
 msgid "%s: cannot parse parent commit %s"
 msgstr ""
 
-#: sequencer.c:525
+#: sequencer.c:530
 #, c-format
 msgid "Cannot get commit message for %s"
 msgstr ""
 
-#: sequencer.c:611
+#: sequencer.c:616
 #, c-format
 msgid "could not revert %s... %s"
 msgstr ""
 
-#: sequencer.c:612
+#: sequencer.c:617
 #, c-format
 msgid "could not apply %s... %s"
 msgstr ""
 
-#: sequencer.c:648
+#: sequencer.c:653
 msgid "empty commit set passed"
 msgstr ""
 
-#: sequencer.c:656
+#: sequencer.c:661
 #, c-format
 msgid "git %s: failed to read the index"
 msgstr ""
 
-#: sequencer.c:660
+#: sequencer.c:665
 #, c-format
 msgid "git %s: failed to refresh the index"
 msgstr ""
 
-#: sequencer.c:720
+#: sequencer.c:725
 #, c-format
 msgid "Cannot %s during a %s"
 msgstr ""
 
-#: sequencer.c:742
+#: sequencer.c:747
 #, c-format
 msgid "Could not parse line %d."
 msgstr ""
 
-#: sequencer.c:747
+#: sequencer.c:752
 msgid "No commits parsed."
 msgstr ""
 
-#: sequencer.c:760
+#: sequencer.c:765
 #, c-format
 msgid "Could not open %s"
 msgstr ""
 
-#: sequencer.c:764
+#: sequencer.c:769
 #, c-format
 msgid "Could not read %s."
 msgstr ""
 
-#: sequencer.c:771
+#: sequencer.c:776
 #, c-format
 msgid "Unusable instruction sheet: %s"
 msgstr ""
 
-#: sequencer.c:801
+#: sequencer.c:806
 #, c-format
 msgid "Invalid key: %s"
 msgstr ""
 
-#: sequencer.c:804
+#: sequencer.c:809
 #, c-format
 msgid "Invalid value for %s: %s"
 msgstr ""
 
-#: sequencer.c:816
+#: sequencer.c:821
 #, c-format
 msgid "Malformed options sheet: %s"
 msgstr ""
 
-#: sequencer.c:837
+#: sequencer.c:842
 msgid "a cherry-pick or revert is already in progress"
 msgstr ""
 
-#: sequencer.c:838
+#: sequencer.c:843
 msgid "try \"git cherry-pick (--continue | --quit | --abort)\""
 msgstr ""
 
-#: sequencer.c:842
+#: sequencer.c:847
 #, c-format
 msgid "Could not create sequencer directory %s"
 msgstr ""
 
-#: sequencer.c:858 sequencer.c:943
+#: sequencer.c:863 sequencer.c:948
 #, c-format
 msgid "Error wrapping up %s."
 msgstr ""
 
-#: sequencer.c:877 sequencer.c:1013
+#: sequencer.c:882 sequencer.c:1018
 msgid "no cherry-pick or revert in progress"
 msgstr ""
 
-#: sequencer.c:879
+#: sequencer.c:884
 msgid "cannot resolve HEAD"
 msgstr ""
 
-#: sequencer.c:881
+#: sequencer.c:886
 msgid "cannot abort from a branch yet to be born"
 msgstr ""
 
-#: sequencer.c:903 builtin/apply.c:4128
+#: sequencer.c:908 builtin/apply.c:4288
 #, c-format
 msgid "cannot open %s: %s"
 msgstr ""
 
-#: sequencer.c:906
+#: sequencer.c:911
 #, c-format
 msgid "cannot read %s: %s"
 msgstr ""
 
-#: sequencer.c:907
+#: sequencer.c:912
 msgid "unexpected end of file"
 msgstr ""
 
-#: sequencer.c:913
+#: sequencer.c:918
 #, c-format
 msgid "stored pre-cherry-pick HEAD file '%s' is corrupt"
 msgstr ""
 
-#: sequencer.c:936
+#: sequencer.c:941
 #, c-format
 msgid "Could not format %s."
 msgstr ""
 
-#: sequencer.c:1081
+#: sequencer.c:1086
 #, c-format
 msgid "%s: can't cherry-pick a %s"
 msgstr ""
 
-#: sequencer.c:1084
+#: sequencer.c:1089
 #, c-format
 msgid "%s: bad revision"
 msgstr ""
 
-#: sequencer.c:1118
+#: sequencer.c:1123
 msgid "Can't revert as initial commit"
 msgstr ""
 
-#: sequencer.c:1119
+#: sequencer.c:1124
 msgid "Can't cherry-pick into empty head"
 msgstr ""
 
 #: sha1_name.c:440
 msgid ""
 "Git normally never creates a ref that ends with 40 hex characters\n"
@@ -1380,44 +1388,44 @@
 msgstr ""
 
 #: submodule.c:120
 msgid "staging updated .gitmodules failed"
 msgstr ""
 
-#: submodule.c:1111 builtin/init-db.c:371
+#: submodule.c:1109 builtin/init-db.c:371
 #, c-format
 msgid "Could not create git link %s"
 msgstr ""
 
-#: submodule.c:1122
+#: submodule.c:1120
 #, c-format
 msgid "Could not set core.worktree in %s"
 msgstr ""
 
-#: trailer.c:500 trailer.c:504 trailer.c:508 trailer.c:562 trailer.c:566
-#: trailer.c:570
+#: trailer.c:491 trailer.c:495 trailer.c:499 trailer.c:553 trailer.c:557
+#: trailer.c:561
 #, c-format
 msgid "unknown value '%s' for key '%s'"
 msgstr ""
 
-#: trailer.c:552 trailer.c:557 builtin/remote.c:290
+#: trailer.c:543 trailer.c:548 builtin/remote.c:290
 #, c-format
 msgid "more than one %s"
 msgstr ""
 
-#: trailer.c:590
+#: trailer.c:581
 #, c-format
 msgid "empty trailer token in trailer '%.*s'"
 msgstr ""
 
-#: trailer.c:710
+#: trailer.c:701
 #, c-format
 msgid "could not read input file '%s'"
 msgstr ""
 
-#: trailer.c:713
+#: trailer.c:704
 msgid "could not read from stdin"
 msgstr ""
 
 #: unpack-trees.c:202
 msgid "Checking out files"
 msgstr ""
@@ -1448,32 +1456,32 @@
 msgstr ""
 
 #: urlmatch.c:322
 msgid "invalid '..' path segment"
 msgstr ""
 
-#: wrapper.c:509
+#: wrapper.c:523
 #, c-format
 msgid "unable to access '%s': %s"
 msgstr ""
 
-#: wrapper.c:530
+#: wrapper.c:544
 #, c-format
 msgid "unable to access '%s'"
 msgstr ""
 
-#: wrapper.c:541
+#: wrapper.c:555
 #, c-format
 msgid "unable to look up current user in the passwd file: %s"
 msgstr ""
 
-#: wrapper.c:542
+#: wrapper.c:556
 msgid "no such user"
 msgstr ""
 
-#: wrapper.c:550
+#: wrapper.c:564
 msgid "unable to get current working directory"
 msgstr ""
 
 #: wt-status.c:150
 msgid "Unmerged paths:"
 msgstr ""
@@ -1496,17 +1504,17 @@
 msgstr ""
 
 #: wt-status.c:187
 msgid "  (use \"git rm <file>...\" to mark resolution)"
 msgstr ""
 
-#: wt-status.c:198
+#: wt-status.c:198 wt-status.c:878
 msgid "Changes to be committed:"
 msgstr ""
 
-#: wt-status.c:216
+#: wt-status.c:216 wt-status.c:887
 msgid "Changes not staged for commit:"
 msgstr ""
 
 #: wt-status.c:220
 msgid "  (use \"git add <file>...\" to update what will be committed)"
 msgstr ""
@@ -1608,292 +1616,292 @@
 
 #: wt-status.c:391
 #, c-format
 msgid "bug: unhandled diff status %c"
 msgstr ""
 
-#: wt-status.c:758
+#: wt-status.c:753
 msgid "Submodules changed but not updated:"
 msgstr ""
 
-#: wt-status.c:760
+#: wt-status.c:755
 msgid "Submodule changes to be committed:"
 msgstr ""
 
-#: wt-status.c:839
+#: wt-status.c:835
 msgid ""
 "Do not touch the line above.\n"
 "Everything below will be removed."
 msgstr ""
 
-#: wt-status.c:930
+#: wt-status.c:946
 msgid "You have unmerged paths."
 msgstr ""
 
-#: wt-status.c:933
+#: wt-status.c:949
 msgid "  (fix conflicts and run \"git commit\")"
 msgstr ""
 
-#: wt-status.c:936
+#: wt-status.c:952
 msgid "All conflicts fixed but you are still merging."
 msgstr ""
 
-#: wt-status.c:939
+#: wt-status.c:955
 msgid "  (use \"git commit\" to conclude merge)"
 msgstr ""
 
-#: wt-status.c:949
+#: wt-status.c:965
 msgid "You are in the middle of an am session."
 msgstr ""
 
-#: wt-status.c:952
+#: wt-status.c:968
 msgid "The current patch is empty."
 msgstr ""
 
-#: wt-status.c:956
+#: wt-status.c:972
 msgid "  (fix conflicts and then run \"git am --continue\")"
 msgstr ""
 
-#: wt-status.c:958
+#: wt-status.c:974
 msgid "  (use \"git am --skip\" to skip this patch)"
 msgstr ""
 
-#: wt-status.c:960
+#: wt-status.c:976
 msgid "  (use \"git am --abort\" to restore the original branch)"
 msgstr ""
 
-#: wt-status.c:1020 wt-status.c:1037
+#: wt-status.c:1036 wt-status.c:1053
 #, c-format
 msgid "You are currently rebasing branch '%s' on '%s'."
 msgstr ""
 
-#: wt-status.c:1025 wt-status.c:1042
+#: wt-status.c:1041 wt-status.c:1058
 msgid "You are currently rebasing."
 msgstr ""
 
-#: wt-status.c:1028
+#: wt-status.c:1044
 msgid "  (fix conflicts and then run \"git rebase --continue\")"
 msgstr ""
 
-#: wt-status.c:1030
+#: wt-status.c:1046
 msgid "  (use \"git rebase --skip\" to skip this patch)"
 msgstr ""
 
-#: wt-status.c:1032
+#: wt-status.c:1048
 msgid "  (use \"git rebase --abort\" to check out the original branch)"
 msgstr ""
 
-#: wt-status.c:1045
+#: wt-status.c:1061
 msgid "  (all conflicts fixed: run \"git rebase --continue\")"
 msgstr ""
 
-#: wt-status.c:1049
+#: wt-status.c:1065
 #, c-format
 msgid ""
 "You are currently splitting a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 
-#: wt-status.c:1054
+#: wt-status.c:1070
 msgid "You are currently splitting a commit during a rebase."
 msgstr ""
 
-#: wt-status.c:1057
+#: wt-status.c:1073
 msgid "  (Once your working directory is clean, run \"git rebase --continue\")"
 msgstr ""
 
-#: wt-status.c:1061
+#: wt-status.c:1077
 #, c-format
 msgid "You are currently editing a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 
-#: wt-status.c:1066
+#: wt-status.c:1082
 msgid "You are currently editing a commit during a rebase."
 msgstr ""
 
-#: wt-status.c:1069
+#: wt-status.c:1085
 msgid "  (use \"git commit --amend\" to amend the current commit)"
 msgstr ""
 
-#: wt-status.c:1071
+#: wt-status.c:1087
 msgid ""
 "  (use \"git rebase --continue\" once you are satisfied with your changes)"
 msgstr ""
 
-#: wt-status.c:1081
+#: wt-status.c:1097
 #, c-format
 msgid "You are currently cherry-picking commit %s."
 msgstr ""
 
-#: wt-status.c:1086
+#: wt-status.c:1102
 msgid "  (fix conflicts and run \"git cherry-pick --continue\")"
 msgstr ""
 
-#: wt-status.c:1089
+#: wt-status.c:1105
 msgid "  (all conflicts fixed: run \"git cherry-pick --continue\")"
 msgstr ""
 
-#: wt-status.c:1091
+#: wt-status.c:1107
 msgid "  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)"
 msgstr ""
 
-#: wt-status.c:1100
+#: wt-status.c:1116
 #, c-format
 msgid "You are currently reverting commit %s."
 msgstr ""
 
-#: wt-status.c:1105
+#: wt-status.c:1121
 msgid "  (fix conflicts and run \"git revert --continue\")"
 msgstr ""
 
-#: wt-status.c:1108
+#: wt-status.c:1124
 msgid "  (all conflicts fixed: run \"git revert --continue\")"
 msgstr ""
 
-#: wt-status.c:1110
+#: wt-status.c:1126
 msgid "  (use \"git revert --abort\" to cancel the revert operation)"
 msgstr ""
 
-#: wt-status.c:1121
+#: wt-status.c:1137
 #, c-format
 msgid "You are currently bisecting, started from branch '%s'."
 msgstr ""
 
-#: wt-status.c:1125
+#: wt-status.c:1141
 msgid "You are currently bisecting."
 msgstr ""
 
-#: wt-status.c:1128
+#: wt-status.c:1144
 msgid "  (use \"git bisect reset\" to get back to the original branch)"
 msgstr ""
 
-#: wt-status.c:1303
+#: wt-status.c:1321
 msgid "On branch "
 msgstr ""
 
-#: wt-status.c:1310
+#: wt-status.c:1328
 msgid "rebase in progress; onto "
 msgstr ""
 
-#: wt-status.c:1317
+#: wt-status.c:1333
 msgid "HEAD detached at "
 msgstr ""
 
-#: wt-status.c:1319
+#: wt-status.c:1335
 msgid "HEAD detached from "
 msgstr ""
 
-#: wt-status.c:1322
+#: wt-status.c:1338
 msgid "Not currently on any branch."
 msgstr ""
 
-#: wt-status.c:1339
+#: wt-status.c:1355
 msgid "Initial commit"
 msgstr ""
 
-#: wt-status.c:1353
+#: wt-status.c:1369
 msgid "Untracked files"
 msgstr ""
 
-#: wt-status.c:1355
+#: wt-status.c:1371
 msgid "Ignored files"
 msgstr ""
 
-#: wt-status.c:1359
+#: wt-status.c:1375
 #, c-format
 msgid ""
 "It took %.2f seconds to enumerate untracked files. 'status -uno'\n"
 "may speed it up, but you have to be careful not to forget to add\n"
 "new files yourself (see 'git help status')."
 msgstr ""
 
-#: wt-status.c:1365
+#: wt-status.c:1381
 #, c-format
 msgid "Untracked files not listed%s"
 msgstr ""
 
-#: wt-status.c:1367
+#: wt-status.c:1383
 msgid " (use -u option to show untracked files)"
 msgstr ""
 
-#: wt-status.c:1373
+#: wt-status.c:1389
 msgid "No changes"
 msgstr ""
 
-#: wt-status.c:1378
+#: wt-status.c:1394
 #, c-format
 msgid "no changes added to commit (use \"git add\" and/or \"git commit -a\")\n"
 msgstr ""
 
-#: wt-status.c:1381
+#: wt-status.c:1397
 #, c-format
 msgid "no changes added to commit\n"
 msgstr ""
 
-#: wt-status.c:1384
+#: wt-status.c:1400
 #, c-format
 msgid ""
 "nothing added to commit but untracked files present (use \"git add\" to "
 "track)\n"
 msgstr ""
 
-#: wt-status.c:1387
+#: wt-status.c:1403
 #, c-format
 msgid "nothing added to commit but untracked files present\n"
 msgstr ""
 
-#: wt-status.c:1390
+#: wt-status.c:1406
 #, c-format
 msgid "nothing to commit (create/copy files and use \"git add\" to track)\n"
 msgstr ""
 
-#: wt-status.c:1393 wt-status.c:1398
+#: wt-status.c:1409 wt-status.c:1414
 #, c-format
 msgid "nothing to commit\n"
 msgstr ""
 
-#: wt-status.c:1396
+#: wt-status.c:1412
 #, c-format
 msgid "nothing to commit (use -u to show untracked files)\n"
 msgstr ""
 
-#: wt-status.c:1400
+#: wt-status.c:1416
 #, c-format
 msgid "nothing to commit, working directory clean\n"
 msgstr ""
 
-#: wt-status.c:1509
+#: wt-status.c:1525
 msgid "HEAD (no branch)"
 msgstr ""
 
-#: wt-status.c:1515
+#: wt-status.c:1531
 msgid "Initial commit on "
 msgstr ""
 
-#: wt-status.c:1547
+#: wt-status.c:1563
 msgid "gone"
 msgstr ""
 
-#: wt-status.c:1549 wt-status.c:1557
+#: wt-status.c:1565 wt-status.c:1573
 msgid "behind "
 msgstr ""
 
 #: compat/precompose_utf8.c:55 builtin/clone.c:360
 #, c-format
 msgid "failed to unlink '%s'"
 msgstr ""
 
 #: builtin/add.c:22
-msgid "git add [options] [--] <pathspec>..."
+msgid "git add [<options>] [--] <pathspec>..."
 msgstr ""
 
 #: builtin/add.c:65
 #, c-format
 msgid "unexpected diff status %c"
 msgstr ""
 
-#: builtin/add.c:70 builtin/commit.c:275
+#: builtin/add.c:70 builtin/commit.c:277
 msgid "updating files failed"
 msgstr ""
 
 #: builtin/add.c:80
 #, c-format
 msgid "remove '%s'\n"
@@ -1931,20 +1939,20 @@
 msgstr ""
 
 #: builtin/add.c:231
 msgid "The following paths are ignored by one of your .gitignore files:\n"
 msgstr ""
 
-#: builtin/add.c:248 builtin/clean.c:875 builtin/fetch.c:108 builtin/mv.c:110
-#: builtin/prune-packed.c:55 builtin/push.c:499 builtin/remote.c:1372
+#: builtin/add.c:248 builtin/clean.c:876 builtin/fetch.c:107 builtin/mv.c:110
+#: builtin/prune-packed.c:55 builtin/push.c:508 builtin/remote.c:1372
 #: builtin/rm.c:269
 msgid "dry run"
 msgstr ""
 
-#: builtin/add.c:249 builtin/apply.c:4415 builtin/check-ignore.c:19
-#: builtin/commit.c:1326 builtin/count-objects.c:63 builtin/fsck.c:608
+#: builtin/add.c:249 builtin/apply.c:4577 builtin/check-ignore.c:19
+#: builtin/commit.c:1322 builtin/count-objects.c:63 builtin/fsck.c:608
 #: builtin/log.c:1617 builtin/mv.c:109 builtin/read-tree.c:114
 msgid "be verbose"
 msgstr ""
 
 #: builtin/add.c:251
 msgid "interactive picking"
@@ -2014,479 +2022,498 @@
 
 #: builtin/add.c:358
 #, c-format
 msgid "Maybe you wanted to say 'git add .'?\n"
 msgstr ""
 
-#: builtin/add.c:363 builtin/check-ignore.c:172 builtin/clean.c:919
-#: builtin/commit.c:333 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:299
+#: builtin/add.c:363 builtin/check-ignore.c:172 builtin/clean.c:920
+#: builtin/commit.c:335 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:299
 msgid "index file corrupt"
 msgstr ""
 
-#: builtin/add.c:446 builtin/apply.c:4510 builtin/mv.c:279 builtin/rm.c:431
+#: builtin/add.c:446 builtin/apply.c:4675 builtin/mv.c:279 builtin/rm.c:431
 msgid "Unable to write new index file"
 msgstr ""
 
-#: builtin/apply.c:58
-msgid "git apply [options] [<patch>...]"
+#: builtin/apply.c:59
+msgid "git apply [<options>] [<patch>...]"
 msgstr ""
 
-#: builtin/apply.c:111
+#: builtin/apply.c:112
 #, c-format
 msgid "unrecognized whitespace option '%s'"
 msgstr ""
 
-#: builtin/apply.c:126
+#: builtin/apply.c:127
 #, c-format
 msgid "unrecognized whitespace ignore option '%s'"
 msgstr ""
 
-#: builtin/apply.c:826
+#: builtin/apply.c:822
 #, c-format
 msgid "Cannot prepare timestamp regexp %s"
 msgstr ""
 
-#: builtin/apply.c:835
+#: builtin/apply.c:831
 #, c-format
 msgid "regexec returned %d for input: %s"
 msgstr ""
 
-#: builtin/apply.c:916
+#: builtin/apply.c:912
 #, c-format
 msgid "unable to find filename in patch at line %d"
 msgstr ""
 
-#: builtin/apply.c:948
+#: builtin/apply.c:944
 #, c-format
 msgid "git apply: bad git-diff - expected /dev/null, got %s on line %d"
 msgstr ""
 
-#: builtin/apply.c:952
+#: builtin/apply.c:948
 #, c-format
 msgid "git apply: bad git-diff - inconsistent new filename on line %d"
 msgstr ""
 
-#: builtin/apply.c:953
+#: builtin/apply.c:949
 #, c-format
 msgid "git apply: bad git-diff - inconsistent old filename on line %d"
 msgstr ""
 
-#: builtin/apply.c:960
+#: builtin/apply.c:956
 #, c-format
 msgid "git apply: bad git-diff - expected /dev/null on line %d"
 msgstr ""
 
-#: builtin/apply.c:1423
+#: builtin/apply.c:1419
 #, c-format
 msgid "recount: unexpected line: %.*s"
 msgstr ""
 
-#: builtin/apply.c:1480
+#: builtin/apply.c:1476
 #, c-format
 msgid "patch fragment without header at line %d: %.*s"
 msgstr ""
 
-#: builtin/apply.c:1497
+#: builtin/apply.c:1493
 #, c-format
 msgid ""
 "git diff header lacks filename information when removing %d leading pathname "
 "component (line %d)"
 msgid_plural ""
 "git diff header lacks filename information when removing %d leading pathname "
 "components (line %d)"
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/apply.c:1657
+#: builtin/apply.c:1656
 msgid "new file depends on old contents"
 msgstr ""
 
-#: builtin/apply.c:1659
+#: builtin/apply.c:1658
 msgid "deleted file still has contents"
 msgstr ""
 
-#: builtin/apply.c:1685
+#: builtin/apply.c:1684
 #, c-format
 msgid "corrupt patch at line %d"
 msgstr ""
 
-#: builtin/apply.c:1721
+#: builtin/apply.c:1720
 #, c-format
 msgid "new file %s depends on old contents"
 msgstr ""
 
-#: builtin/apply.c:1723
+#: builtin/apply.c:1722
 #, c-format
 msgid "deleted file %s still has contents"
 msgstr ""
 
-#: builtin/apply.c:1726
+#: builtin/apply.c:1725
 #, c-format
 msgid "** warning: file %s becomes empty but is not deleted"
 msgstr ""
 
-#: builtin/apply.c:1872
+#: builtin/apply.c:1871
 #, c-format
 msgid "corrupt binary patch at line %d: %.*s"
 msgstr ""
 
-#: builtin/apply.c:1901
+#: builtin/apply.c:1900
 #, c-format
 msgid "unrecognized binary patch at line %d"
 msgstr ""
 
-#: builtin/apply.c:2052
+#: builtin/apply.c:2051
 #, c-format
 msgid "patch with only garbage at line %d"
 msgstr ""
 
-#: builtin/apply.c:2142
+#: builtin/apply.c:2141
 #, c-format
 msgid "unable to read symlink %s"
 msgstr ""
 
-#: builtin/apply.c:2146
+#: builtin/apply.c:2145
 #, c-format
 msgid "unable to open or read %s"
 msgstr ""
 
-#: builtin/apply.c:2754
+#: builtin/apply.c:2778
 #, c-format
 msgid "invalid start of line: '%c'"
 msgstr ""
 
-#: builtin/apply.c:2872
+#: builtin/apply.c:2897
 #, c-format
 msgid "Hunk #%d succeeded at %d (offset %d line)."
 msgid_plural "Hunk #%d succeeded at %d (offset %d lines)."
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/apply.c:2884
+#: builtin/apply.c:2909
 #, c-format
 msgid "Context reduced to (%ld/%ld) to apply fragment at %d"
 msgstr ""
 
-#: builtin/apply.c:2890
+#: builtin/apply.c:2915
 #, c-format
 msgid ""
 "while searching for:\n"
 "%.*s"
 msgstr ""
 
-#: builtin/apply.c:2909
+#: builtin/apply.c:2935
 #, c-format
 msgid "missing binary patch data for '%s'"
 msgstr ""
 
-#: builtin/apply.c:3010
+#: builtin/apply.c:3036
 #, c-format
 msgid "binary patch does not apply to '%s'"
 msgstr ""
 
-#: builtin/apply.c:3016
+#: builtin/apply.c:3042
 #, c-format
 msgid "binary patch to '%s' creates incorrect result (expecting %s, got %s)"
 msgstr ""
 
-#: builtin/apply.c:3037
+#: builtin/apply.c:3063
 #, c-format
 msgid "patch failed: %s:%ld"
 msgstr ""
 
-#: builtin/apply.c:3161
+#: builtin/apply.c:3187
 #, c-format
 msgid "cannot checkout %s"
 msgstr ""
 
-#: builtin/apply.c:3206 builtin/apply.c:3215 builtin/apply.c:3260
+#: builtin/apply.c:3232 builtin/apply.c:3243 builtin/apply.c:3288
 #, c-format
 msgid "read of %s failed"
 msgstr ""
 
-#: builtin/apply.c:3240 builtin/apply.c:3462
+#: builtin/apply.c:3240
+#, c-format
+msgid "reading from '%s' beyond a symbolic link"
+msgstr ""
+
+#: builtin/apply.c:3268 builtin/apply.c:3490
 #, c-format
 msgid "path %s has been renamed/deleted"
 msgstr ""
 
-#: builtin/apply.c:3321 builtin/apply.c:3476
+#: builtin/apply.c:3349 builtin/apply.c:3504
 #, c-format
 msgid "%s: does not exist in index"
 msgstr ""
 
-#: builtin/apply.c:3325 builtin/apply.c:3468 builtin/apply.c:3490
+#: builtin/apply.c:3353 builtin/apply.c:3496 builtin/apply.c:3518
 #, c-format
 msgid "%s: %s"
 msgstr ""
 
-#: builtin/apply.c:3330 builtin/apply.c:3484
+#: builtin/apply.c:3358 builtin/apply.c:3512
 #, c-format
 msgid "%s: does not match index"
 msgstr ""
 
-#: builtin/apply.c:3432
+#: builtin/apply.c:3460
 msgid "removal patch leaves file contents"
 msgstr ""
 
-#: builtin/apply.c:3501
+#: builtin/apply.c:3529
 #, c-format
 msgid "%s: wrong type"
 msgstr ""
 
-#: builtin/apply.c:3503
+#: builtin/apply.c:3531
 #, c-format
 msgid "%s has type %o, expected %o"
 msgstr ""
 
-#: builtin/apply.c:3604
+#: builtin/apply.c:3690 builtin/apply.c:3692
+#, c-format
+msgid "invalid path '%s'"
+msgstr ""
+
+#: builtin/apply.c:3747
 #, c-format
 msgid "%s: already exists in index"
 msgstr ""
 
-#: builtin/apply.c:3607
+#: builtin/apply.c:3750
 #, c-format
 msgid "%s: already exists in working directory"
 msgstr ""
 
-#: builtin/apply.c:3627
+#: builtin/apply.c:3770
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o)"
 msgstr ""
 
-#: builtin/apply.c:3632
+#: builtin/apply.c:3775
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o) of %s"
 msgstr ""
 
-#: builtin/apply.c:3640
+#: builtin/apply.c:3795
+#, c-format
+msgid "affected file '%s' is beyond a symbolic link"
+msgstr ""
+
+#: builtin/apply.c:3799
 #, c-format
 msgid "%s: patch does not apply"
 msgstr ""
 
-#: builtin/apply.c:3653
+#: builtin/apply.c:3813
 #, c-format
 msgid "Checking patch %s..."
 msgstr ""
 
-#: builtin/apply.c:3746 builtin/checkout.c:231 builtin/reset.c:135
+#: builtin/apply.c:3906 builtin/checkout.c:231 builtin/reset.c:135
 #, c-format
 msgid "make_cache_entry failed for path '%s'"
 msgstr ""
 
-#: builtin/apply.c:3889
+#: builtin/apply.c:4049
 #, c-format
 msgid "unable to remove %s from index"
 msgstr ""
 
-#: builtin/apply.c:3918
+#: builtin/apply.c:4078
 #, c-format
 msgid "corrupt patch for submodule %s"
 msgstr ""
 
-#: builtin/apply.c:3922
+#: builtin/apply.c:4082
 #, c-format
 msgid "unable to stat newly created file '%s'"
 msgstr ""
 
-#: builtin/apply.c:3927
+#: builtin/apply.c:4087
 #, c-format
 msgid "unable to create backing store for newly created file %s"
 msgstr ""
 
-#: builtin/apply.c:3930 builtin/apply.c:4038
+#: builtin/apply.c:4090 builtin/apply.c:4198
 #, c-format
 msgid "unable to add cache entry for %s"
 msgstr ""
 
-#: builtin/apply.c:3963
+#: builtin/apply.c:4123
 #, c-format
 msgid "closing file '%s'"
 msgstr ""
 
-#: builtin/apply.c:4012
+#: builtin/apply.c:4172
 #, c-format
 msgid "unable to write file '%s' mode %o"
 msgstr ""
 
-#: builtin/apply.c:4099
+#: builtin/apply.c:4259
 #, c-format
 msgid "Applied patch %s cleanly."
 msgstr ""
 
-#: builtin/apply.c:4107
+#: builtin/apply.c:4267
 msgid "internal error"
 msgstr ""
 
-#: builtin/apply.c:4110
+#: builtin/apply.c:4270
 #, c-format
 msgid "Applying patch %%s with %d reject..."
 msgid_plural "Applying patch %%s with %d rejects..."
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/apply.c:4120
+#: builtin/apply.c:4280
 #, c-format
 msgid "truncating .rej filename to %.*s.rej"
 msgstr ""
 
-#: builtin/apply.c:4141
+#: builtin/apply.c:4301
 #, c-format
 msgid "Hunk #%d applied cleanly."
 msgstr ""
 
-#: builtin/apply.c:4144
+#: builtin/apply.c:4304
 #, c-format
 msgid "Rejected hunk #%d."
 msgstr ""
 
-#: builtin/apply.c:4234
+#: builtin/apply.c:4394
 msgid "unrecognized input"
 msgstr ""
 
-#: builtin/apply.c:4245
+#: builtin/apply.c:4405
 msgid "unable to read index file"
 msgstr ""
 
-#: builtin/apply.c:4362 builtin/apply.c:4365 builtin/clone.c:92
-#: builtin/fetch.c:93
+#: builtin/apply.c:4522 builtin/apply.c:4525 builtin/clone.c:92
+#: builtin/fetch.c:92
 msgid "path"
 msgstr ""
 
-#: builtin/apply.c:4363
+#: builtin/apply.c:4523
 msgid "don't apply changes matching the given path"
 msgstr ""
 
-#: builtin/apply.c:4366
+#: builtin/apply.c:4526
 msgid "apply changes matching the given path"
 msgstr ""
 
-#: builtin/apply.c:4368
+#: builtin/apply.c:4528
 msgid "num"
 msgstr ""
 
-#: builtin/apply.c:4369
+#: builtin/apply.c:4529
 msgid "remove <num> leading slashes from traditional diff paths"
 msgstr ""
 
-#: builtin/apply.c:4372
+#: builtin/apply.c:4532
 msgid "ignore additions made by the patch"
 msgstr ""
 
-#: builtin/apply.c:4374
+#: builtin/apply.c:4534
 msgid "instead of applying the patch, output diffstat for the input"
 msgstr ""
 
-#: builtin/apply.c:4378
+#: builtin/apply.c:4538
 msgid "show number of added and deleted lines in decimal notation"
 msgstr ""
 
-#: builtin/apply.c:4380
+#: builtin/apply.c:4540
 msgid "instead of applying the patch, output a summary for the input"
 msgstr ""
 
-#: builtin/apply.c:4382
+#: builtin/apply.c:4542
 msgid "instead of applying the patch, see if the patch is applicable"
 msgstr ""
 
-#: builtin/apply.c:4384
+#: builtin/apply.c:4544
 msgid "make sure the patch is applicable to the current index"
 msgstr ""
 
-#: builtin/apply.c:4386
+#: builtin/apply.c:4546
 msgid "apply a patch without touching the working tree"
 msgstr ""
 
-#: builtin/apply.c:4388
+#: builtin/apply.c:4548
+msgid "accept a patch that touches outside the working area"
+msgstr ""
+
+#: builtin/apply.c:4550
 msgid "also apply the patch (use with --stat/--summary/--check)"
 msgstr ""
 
-#: builtin/apply.c:4390
+#: builtin/apply.c:4552
 msgid "attempt three-way merge if a patch does not apply"
 msgstr ""
 
-#: builtin/apply.c:4392
+#: builtin/apply.c:4554
 msgid "build a temporary index based on embedded index information"
 msgstr ""
 
-#: builtin/apply.c:4394 builtin/checkout-index.c:198 builtin/ls-files.c:455
+#: builtin/apply.c:4556 builtin/checkout-index.c:198 builtin/ls-files.c:412
 msgid "paths are separated with NUL character"
 msgstr ""
 
-#: builtin/apply.c:4397
+#: builtin/apply.c:4559
 msgid "ensure at least <n> lines of context match"
 msgstr ""
 
-#: builtin/apply.c:4398
+#: builtin/apply.c:4560
 msgid "action"
 msgstr ""
 
-#: builtin/apply.c:4399
+#: builtin/apply.c:4561
 msgid "detect new or modified lines that have whitespace errors"
 msgstr ""
 
-#: builtin/apply.c:4402 builtin/apply.c:4405
+#: builtin/apply.c:4564 builtin/apply.c:4567
 msgid "ignore changes in whitespace when finding context"
 msgstr ""
 
-#: builtin/apply.c:4408
+#: builtin/apply.c:4570
 msgid "apply the patch in reverse"
 msgstr ""
 
-#: builtin/apply.c:4410
+#: builtin/apply.c:4572
 msgid "don't expect at least one line of context"
 msgstr ""
 
-#: builtin/apply.c:4412
+#: builtin/apply.c:4574
 msgid "leave the rejected hunks in corresponding *.rej files"
 msgstr ""
 
-#: builtin/apply.c:4414
+#: builtin/apply.c:4576
 msgid "allow overlapping hunks"
 msgstr ""
 
-#: builtin/apply.c:4417
+#: builtin/apply.c:4579
 msgid "tolerate incorrectly detected missing new-line at the end of file"
 msgstr ""
 
-#: builtin/apply.c:4420
+#: builtin/apply.c:4582
 msgid "do not trust the line counts in the hunk headers"
 msgstr ""
 
-#: builtin/apply.c:4422
+#: builtin/apply.c:4584
 msgid "root"
 msgstr ""
 
-#: builtin/apply.c:4423
+#: builtin/apply.c:4585
 msgid "prepend <root> to all filenames"
 msgstr ""
 
-#: builtin/apply.c:4445
+#: builtin/apply.c:4607
 msgid "--3way outside a repository"
 msgstr ""
 
-#: builtin/apply.c:4453
+#: builtin/apply.c:4615
 msgid "--index outside a repository"
 msgstr ""
 
-#: builtin/apply.c:4456
+#: builtin/apply.c:4618
 msgid "--cached outside a repository"
 msgstr ""
 
-#: builtin/apply.c:4472
+#: builtin/apply.c:4637
 #, c-format
 msgid "can't open patch '%s'"
 msgstr ""
 
-#: builtin/apply.c:4486
+#: builtin/apply.c:4651
 #, c-format
 msgid "squelched %d whitespace error"
 msgid_plural "squelched %d whitespace errors"
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/apply.c:4492 builtin/apply.c:4502
+#: builtin/apply.c:4657 builtin/apply.c:4667
 #, c-format
 msgid "%d line adds whitespace errors."
 msgid_plural "%d lines add whitespace errors."
 msgstr[0] ""
 msgstr[1] ""
 
@@ -2535,135 +2562,135 @@
 
 #: builtin/bisect--helper.c:19
 msgid "update BISECT_HEAD instead of checking out the current commit"
 msgstr ""
 
 #: builtin/blame.c:30
-msgid "git blame [options] [rev-opts] [rev] [--] file"
+msgid "git blame [<options>] [<rev-opts>] [<rev>] [--] file"
 msgstr ""
 
 #: builtin/blame.c:35
-msgid "[rev-opts] are documented in git-rev-list(1)"
+msgid "<rev-opts> are documented in git-rev-list(1)"
 msgstr ""
 
-#: builtin/blame.c:2501
+#: builtin/blame.c:2500
 msgid "Show blame entries as we find them, incrementally"
 msgstr ""
 
-#: builtin/blame.c:2502
+#: builtin/blame.c:2501
 msgid "Show blank SHA-1 for boundary commits (Default: off)"
 msgstr ""
 
-#: builtin/blame.c:2503
+#: builtin/blame.c:2502
 msgid "Do not treat root commits as boundaries (Default: off)"
 msgstr ""
 
-#: builtin/blame.c:2504
+#: builtin/blame.c:2503
 msgid "Show work cost statistics"
 msgstr ""
 
-#: builtin/blame.c:2505
+#: builtin/blame.c:2504
 msgid "Show output score for blame entries"
 msgstr ""
 
-#: builtin/blame.c:2506
+#: builtin/blame.c:2505
 msgid "Show original filename (Default: auto)"
 msgstr ""
 
-#: builtin/blame.c:2507
+#: builtin/blame.c:2506
 msgid "Show original linenumber (Default: off)"
 msgstr ""
 
-#: builtin/blame.c:2508
+#: builtin/blame.c:2507
 msgid "Show in a format designed for machine consumption"
 msgstr ""
 
-#: builtin/blame.c:2509
+#: builtin/blame.c:2508
 msgid "Show porcelain format with per-line commit information"
 msgstr ""
 
-#: builtin/blame.c:2510
+#: builtin/blame.c:2509
 msgid "Use the same output mode as git-annotate (Default: off)"
 msgstr ""
 
-#: builtin/blame.c:2511
+#: builtin/blame.c:2510
 msgid "Show raw timestamp (Default: off)"
 msgstr ""
 
-#: builtin/blame.c:2512
+#: builtin/blame.c:2511
 msgid "Show long commit SHA1 (Default: off)"
 msgstr ""
 
-#: builtin/blame.c:2513
+#: builtin/blame.c:2512
 msgid "Suppress author name and timestamp (Default: off)"
 msgstr ""
 
-#: builtin/blame.c:2514
+#: builtin/blame.c:2513
 msgid "Show author email instead of name (Default: off)"
 msgstr ""
 
-#: builtin/blame.c:2515
+#: builtin/blame.c:2514
 msgid "Ignore whitespace differences"
 msgstr ""
 
-#: builtin/blame.c:2516
+#: builtin/blame.c:2515
 msgid "Spend extra cycles to find better match"
 msgstr ""
 
-#: builtin/blame.c:2517
+#: builtin/blame.c:2516
 msgid "Use revisions from <file> instead of calling git-rev-list"
 msgstr ""
 
-#: builtin/blame.c:2518
+#: builtin/blame.c:2517
 msgid "Use <file>'s contents as the final image"
 msgstr ""
 
-#: builtin/blame.c:2519 builtin/blame.c:2520
+#: builtin/blame.c:2518 builtin/blame.c:2519
 msgid "score"
 msgstr ""
 
-#: builtin/blame.c:2519
+#: builtin/blame.c:2518
 msgid "Find line copies within and across files"
 msgstr ""
 
-#: builtin/blame.c:2520
+#: builtin/blame.c:2519
 msgid "Find line movements within and across files"
 msgstr ""
 
-#: builtin/blame.c:2521
+#: builtin/blame.c:2520
 msgid "n,m"
 msgstr ""
 
-#: builtin/blame.c:2521
+#: builtin/blame.c:2520
 msgid "Process only line range n,m, counting from 1"
 msgstr ""
 
 #. TRANSLATORS: This string is used to tell us the maximum
 #. display width for a relative timestamp in "git blame"
 #. output.  For C locale, "4 years, 11 months ago", which
 #. takes 22 places, is the longest among various forms of
 #. relative timestamps, but your language may need more or
 #. fewer display columns.
-#: builtin/blame.c:2602
+#: builtin/blame.c:2601
 msgid "4 years, 11 months ago"
 msgstr ""
 
 #: builtin/branch.c:24
-msgid "git branch [options] [-r | -a] [--merged | --no-merged]"
+msgid "git branch [<options>] [-r | -a] [--merged | --no-merged]"
 msgstr ""
 
 #: builtin/branch.c:25
-msgid "git branch [options] [-l] [-f] <branchname> [<start-point>]"
+msgid "git branch [<options>] [-l] [-f] <branch-name> [<start-point>]"
 msgstr ""
 
 #: builtin/branch.c:26
-msgid "git branch [options] [-r] (-d | -D) <branchname>..."
+msgid "git branch [<options>] [-r] (-d | -D) <branch-name>..."
 msgstr ""
 
 #: builtin/branch.c:27
-msgid "git branch [options] (-m | -M) [<oldbranch>] <newbranch>"
+msgid "git branch [<options>] (-m | -M) [<old-branch>] <new-branch>"
 msgstr ""
 
 #: builtin/branch.c:152
 #, c-format
 msgid ""
 "deleting branch '%s' that has been merged to\n"
@@ -2792,258 +2819,263 @@
 
 #: builtin/branch.c:590
 #, c-format
 msgid "(no branch, bisect started on %s)"
 msgstr ""
 
-#: builtin/branch.c:593
+#: builtin/branch.c:596
 #, c-format
-msgid "(detached from %s)"
+msgid "(HEAD detached at %s)"
 msgstr ""
 
-#: builtin/branch.c:596
+#: builtin/branch.c:599
+#, c-format
+msgid "(HEAD detached from %s)"
+msgstr ""
+
+#: builtin/branch.c:603
 msgid "(no branch)"
 msgstr ""
 
-#: builtin/branch.c:643
+#: builtin/branch.c:650
 #, c-format
 msgid "object '%s' does not point to a commit"
 msgstr ""
 
-#: builtin/branch.c:691
+#: builtin/branch.c:698
 msgid "some refs could not be read"
 msgstr ""
 
-#: builtin/branch.c:704
+#: builtin/branch.c:711
 msgid "cannot rename the current branch while not on any."
 msgstr ""
 
-#: builtin/branch.c:714
+#: builtin/branch.c:721
 #, c-format
 msgid "Invalid branch name: '%s'"
 msgstr ""
 
-#: builtin/branch.c:729
+#: builtin/branch.c:736
 msgid "Branch rename failed"
 msgstr ""
 
-#: builtin/branch.c:733
+#: builtin/branch.c:740
 #, c-format
 msgid "Renamed a misnamed branch '%s' away"
 msgstr ""
 
-#: builtin/branch.c:737
+#: builtin/branch.c:744
 #, c-format
 msgid "Branch renamed to %s, but HEAD is not updated!"
 msgstr ""
 
-#: builtin/branch.c:744
+#: builtin/branch.c:751
 msgid "Branch is renamed, but update of config-file failed"
 msgstr ""
 
-#: builtin/branch.c:759
+#: builtin/branch.c:766
 #, c-format
 msgid "malformed object name %s"
 msgstr ""
 
-#: builtin/branch.c:783
+#: builtin/branch.c:790
 #, c-format
 msgid "could not write branch description template: %s"
 msgstr ""
 
-#: builtin/branch.c:813
+#: builtin/branch.c:820
 msgid "Generic options"
 msgstr ""
 
-#: builtin/branch.c:815
+#: builtin/branch.c:822
 msgid "show hash and subject, give twice for upstream branch"
 msgstr ""
 
-#: builtin/branch.c:816
+#: builtin/branch.c:823
 msgid "suppress informational messages"
 msgstr ""
 
-#: builtin/branch.c:817
+#: builtin/branch.c:824
 msgid "set up tracking mode (see git-pull(1))"
 msgstr ""
 
-#: builtin/branch.c:819
+#: builtin/branch.c:826
 msgid "change upstream info"
 msgstr ""
 
-#: builtin/branch.c:823
+#: builtin/branch.c:830
 msgid "use colored output"
 msgstr ""
 
-#: builtin/branch.c:824
+#: builtin/branch.c:831
 msgid "act on remote-tracking branches"
 msgstr ""
 
-#: builtin/branch.c:827 builtin/branch.c:833 builtin/branch.c:854
-#: builtin/branch.c:860 builtin/commit.c:1586 builtin/commit.c:1587
-#: builtin/commit.c:1588 builtin/commit.c:1589 builtin/tag.c:616
+#: builtin/branch.c:834 builtin/branch.c:840 builtin/branch.c:861
+#: builtin/branch.c:867 builtin/commit.c:1582 builtin/commit.c:1583
+#: builtin/commit.c:1584 builtin/commit.c:1585 builtin/tag.c:616
 #: builtin/tag.c:622
 msgid "commit"
 msgstr ""
 
-#: builtin/branch.c:828 builtin/branch.c:834
+#: builtin/branch.c:835 builtin/branch.c:841
 msgid "print only branches that contain the commit"
 msgstr ""
 
-#: builtin/branch.c:840
+#: builtin/branch.c:847
 msgid "Specific git-branch actions:"
 msgstr ""
 
-#: builtin/branch.c:841
+#: builtin/branch.c:848
 msgid "list both remote-tracking and local branches"
 msgstr ""
 
-#: builtin/branch.c:843
+#: builtin/branch.c:850
 msgid "delete fully merged branch"
 msgstr ""
 
-#: builtin/branch.c:844
+#: builtin/branch.c:851
 msgid "delete branch (even if not merged)"
 msgstr ""
 
-#: builtin/branch.c:845
+#: builtin/branch.c:852
 msgid "move/rename a branch and its reflog"
 msgstr ""
 
-#: builtin/branch.c:846
+#: builtin/branch.c:853
 msgid "move/rename a branch, even if target exists"
 msgstr ""
 
-#: builtin/branch.c:847
+#: builtin/branch.c:854
 msgid "list branch names"
 msgstr ""
 
-#: builtin/branch.c:848
+#: builtin/branch.c:855
 msgid "create the branch's reflog"
 msgstr ""
 
-#: builtin/branch.c:850
+#: builtin/branch.c:857
 msgid "edit the description for the branch"
 msgstr ""
 
-#: builtin/branch.c:851
+#: builtin/branch.c:858
 msgid "force creation, move/rename, deletion"
 msgstr ""
 
-#: builtin/branch.c:854
+#: builtin/branch.c:861
 msgid "print only not merged branches"
 msgstr ""
 
-#: builtin/branch.c:860
+#: builtin/branch.c:867
 msgid "print only merged branches"
 msgstr ""
 
-#: builtin/branch.c:864
+#: builtin/branch.c:871
 msgid "list branches in columns"
 msgstr ""
 
-#: builtin/branch.c:877
+#: builtin/branch.c:884
 msgid "Failed to resolve HEAD as a valid ref."
 msgstr ""
 
-#: builtin/branch.c:881 builtin/clone.c:637
+#: builtin/branch.c:888 builtin/clone.c:637
 msgid "HEAD not found below refs/heads!"
 msgstr ""
 
-#: builtin/branch.c:903
+#: builtin/branch.c:910
 msgid "--column and --verbose are incompatible"
 msgstr ""
 
-#: builtin/branch.c:914 builtin/branch.c:953
+#: builtin/branch.c:921 builtin/branch.c:960
 msgid "branch name required"
 msgstr ""
 
-#: builtin/branch.c:929
+#: builtin/branch.c:936
 msgid "Cannot give description to detached HEAD"
 msgstr ""
 
-#: builtin/branch.c:934
+#: builtin/branch.c:941
 msgid "cannot edit description of more than one branch"
 msgstr ""
 
-#: builtin/branch.c:941
+#: builtin/branch.c:948
 #, c-format
 msgid "No commit on branch '%s' yet."
 msgstr ""
 
-#: builtin/branch.c:944
+#: builtin/branch.c:951
 #, c-format
 msgid "No branch named '%s'."
 msgstr ""
 
-#: builtin/branch.c:959
+#: builtin/branch.c:966
 msgid "too many branches for a rename operation"
 msgstr ""
 
-#: builtin/branch.c:964
+#: builtin/branch.c:971
 msgid "too many branches to set new upstream"
 msgstr ""
 
-#: builtin/branch.c:968
+#: builtin/branch.c:975
 #, c-format
 msgid ""
 "could not set upstream of HEAD to %s when it does not point to any branch."
 msgstr ""
 
-#: builtin/branch.c:971 builtin/branch.c:993 builtin/branch.c:1014
+#: builtin/branch.c:978 builtin/branch.c:1000 builtin/branch.c:1021
 #, c-format
 msgid "no such branch '%s'"
 msgstr ""
 
-#: builtin/branch.c:975
+#: builtin/branch.c:982
 #, c-format
 msgid "branch '%s' does not exist"
 msgstr ""
 
-#: builtin/branch.c:987
+#: builtin/branch.c:994
 msgid "too many branches to unset upstream"
 msgstr ""
 
-#: builtin/branch.c:991
+#: builtin/branch.c:998
 msgid "could not unset upstream of HEAD when it does not point to any branch."
 msgstr ""
 
-#: builtin/branch.c:997
+#: builtin/branch.c:1004
 #, c-format
 msgid "Branch '%s' has no upstream information"
 msgstr ""
 
-#: builtin/branch.c:1011
+#: builtin/branch.c:1018
 msgid "it does not make sense to create 'HEAD' manually"
 msgstr ""
 
-#: builtin/branch.c:1017
+#: builtin/branch.c:1024
 msgid "-a and -r options to 'git branch' do not make sense with a branch name"
 msgstr ""
 
-#: builtin/branch.c:1020
+#: builtin/branch.c:1027
 #, c-format
 msgid ""
 "The --set-upstream flag is deprecated and will be removed. Consider using --"
 "track or --set-upstream-to\n"
 msgstr ""
 
-#: builtin/branch.c:1037
+#: builtin/branch.c:1044
 #, c-format
 msgid ""
 "\n"
 "If you wanted to make '%s' track '%s', do this:\n"
 "\n"
 msgstr ""
 
-#: builtin/branch.c:1038
+#: builtin/branch.c:1045
 #, c-format
 msgid "    git branch -d %s\n"
 msgstr ""
 
-#: builtin/branch.c:1039
+#: builtin/branch.c:1046
 #, c-format
 msgid "    git branch --set-upstream-to %s\n"
 msgstr ""
 
 #: builtin/bundle.c:47
 #, c-format
@@ -3055,58 +3087,58 @@
 msgstr ""
 
 #: builtin/bundle.c:60
 msgid "Need a repository to unbundle."
 msgstr ""
 
-#: builtin/cat-file.c:328
-msgid "git cat-file (-t|-s|-e|-p|<type>|--textconv) <object>"
+#: builtin/cat-file.c:326
+msgid "git cat-file (-t | -s | -e | -p | <type> | --textconv) <object>"
 msgstr ""
 
-#: builtin/cat-file.c:329
-msgid "git cat-file (--batch|--batch-check) < <list_of_objects>"
+#: builtin/cat-file.c:327
+msgid "git cat-file (--batch | --batch-check) < <list-of-objects>"
 msgstr ""
 
-#: builtin/cat-file.c:366
+#: builtin/cat-file.c:364
 msgid "<type> can be one of: blob, tree, commit, tag"
 msgstr ""
 
-#: builtin/cat-file.c:367
+#: builtin/cat-file.c:365
 msgid "show object type"
 msgstr ""
 
-#: builtin/cat-file.c:368
+#: builtin/cat-file.c:366
 msgid "show object size"
 msgstr ""
 
-#: builtin/cat-file.c:370
+#: builtin/cat-file.c:368
 msgid "exit with zero when there's no error"
 msgstr ""
 
-#: builtin/cat-file.c:371
+#: builtin/cat-file.c:369
 msgid "pretty-print object's content"
 msgstr ""
 
-#: builtin/cat-file.c:373
+#: builtin/cat-file.c:371
 msgid "for blob objects, run textconv on object's content"
 msgstr ""
 
-#: builtin/cat-file.c:375
+#: builtin/cat-file.c:373
 msgid "show info and content of objects fed from the standard input"
 msgstr ""
 
-#: builtin/cat-file.c:378
+#: builtin/cat-file.c:376
 msgid "show info about objects fed from the standard input"
 msgstr ""
 
 #: builtin/check-attr.c:11
-msgid "git check-attr [-a | --all | attr...] [--] pathname..."
+msgid "git check-attr [-a | --all | <attr>...] [--] <pathname>..."
 msgstr ""
 
 #: builtin/check-attr.c:12
-msgid "git check-attr --stdin [-z] [-a | --all | attr...] < <list-of-paths>"
+msgid "git check-attr --stdin [-z] [-a | --all | <attr>...] < <list-of-paths>"
 msgstr ""
 
 #: builtin/check-attr.c:19
 msgid "report all attributes set on file"
 msgstr ""
 
@@ -3156,13 +3188,13 @@
 
 #: builtin/check-ignore.c:168
 msgid "--non-matching is only valid with --verbose"
 msgstr ""
 
 #: builtin/check-mailmap.c:8
-msgid "git check-mailmap [options] <contact>..."
+msgid "git check-mailmap [<options>] <contact>..."
 msgstr ""
 
 #: builtin/check-mailmap.c:13
 msgid "also read contacts from stdin"
 msgstr ""
 
@@ -3173,13 +3205,13 @@
 
 #: builtin/check-mailmap.c:47
 msgid "no contacts specified"
 msgstr ""
 
 #: builtin/checkout-index.c:126
-msgid "git checkout-index [options] [--] [<file>...]"
+msgid "git checkout-index [<options>] [--] [<file>...]"
 msgstr ""
 
 #: builtin/checkout-index.c:188
 msgid "check out all files in the index"
 msgstr ""
 
@@ -3217,17 +3249,17 @@
 
 #: builtin/checkout-index.c:208
 msgid "copy out the files from named stage"
 msgstr ""
 
 #: builtin/checkout.c:25
-msgid "git checkout [options] <branch>"
+msgid "git checkout [<options>] <branch>"
 msgstr ""
 
 #: builtin/checkout.c:26
-msgid "git checkout [options] [<branch>] -- <file>..."
+msgid "git checkout [<options>] [<branch>] -- <file>..."
 msgstr ""
 
 #: builtin/checkout.c:132 builtin/checkout.c:165
 #, c-format
 msgid "path '%s' does not have our version"
 msgstr ""
@@ -3343,13 +3375,13 @@
 #: builtin/checkout.c:747
 #, c-format
 msgid ""
 "If you want to keep them by creating a new branch, this may be a good time\n"
 "to do so with:\n"
 "\n"
-" git branch new_branch_name %s\n"
+" git branch <new-branch-name> %s\n"
 "\n"
 msgstr ""
 
 #: builtin/checkout.c:777
 msgid "internal error in revision walk"
 msgstr ""
@@ -3460,13 +3492,13 @@
 
 #: builtin/checkout.c:1128
 msgid "do not limit pathspecs to sparse entries only"
 msgstr ""
 
 #: builtin/checkout.c:1130
-msgid "second guess 'git checkout no-such-branch'"
+msgid "second guess 'git checkout <no-such-branch>'"
 msgstr ""
 
 #: builtin/checkout.c:1153
 msgid "-b, -B and --orphan are mutually exclusive"
 msgstr ""
 
@@ -3566,105 +3598,106 @@
 msgstr ""
 
 #: builtin/clean.c:717
 msgid "Select items to delete"
 msgstr ""
 
-#: builtin/clean.c:757
+#. TRANSLATORS: Make sure to keep [y/N] as is
+#: builtin/clean.c:758
 #, c-format
-msgid "remove %s? "
+msgid "Remove %s [y/N]? "
 msgstr ""
 
-#: builtin/clean.c:782
+#: builtin/clean.c:783
 msgid "Bye."
 msgstr ""
 
-#: builtin/clean.c:790
+#: builtin/clean.c:791
 msgid ""
 "clean               - start cleaning\n"
 "filter by pattern   - exclude items from deletion\n"
 "select by numbers   - select items to be deleted by numbers\n"
 "ask each            - confirm each deletion (like \"rm -i\")\n"
 "quit                - stop cleaning\n"
 "help                - this screen\n"
 "?                   - help for prompt selection"
 msgstr ""
 
-#: builtin/clean.c:817
+#: builtin/clean.c:818
 msgid "*** Commands ***"
 msgstr ""
 
-#: builtin/clean.c:818
+#: builtin/clean.c:819
 msgid "What now"
 msgstr ""
 
-#: builtin/clean.c:826
+#: builtin/clean.c:827
 msgid "Would remove the following item:"
 msgid_plural "Would remove the following items:"
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/clean.c:843
+#: builtin/clean.c:844
 msgid "No more files to clean, exiting."
 msgstr ""
 
-#: builtin/clean.c:874
+#: builtin/clean.c:875
 msgid "do not print names of files removed"
 msgstr ""
 
-#: builtin/clean.c:876
+#: builtin/clean.c:877
 msgid "force"
 msgstr ""
 
-#: builtin/clean.c:877
+#: builtin/clean.c:878
 msgid "interactive cleaning"
 msgstr ""
 
-#: builtin/clean.c:879
+#: builtin/clean.c:880
 msgid "remove whole directories"
 msgstr ""
 
-#: builtin/clean.c:880 builtin/describe.c:407 builtin/grep.c:714
-#: builtin/ls-files.c:486 builtin/name-rev.c:311 builtin/show-ref.c:185
+#: builtin/clean.c:881 builtin/describe.c:407 builtin/grep.c:714
+#: builtin/ls-files.c:443 builtin/name-rev.c:311 builtin/show-ref.c:185
 msgid "pattern"
 msgstr ""
 
-#: builtin/clean.c:881
+#: builtin/clean.c:882
 msgid "add <pattern> to ignore rules"
 msgstr ""
 
-#: builtin/clean.c:882
+#: builtin/clean.c:883
 msgid "remove ignored files, too"
 msgstr ""
 
-#: builtin/clean.c:884
+#: builtin/clean.c:885
 msgid "remove only ignored files"
 msgstr ""
 
-#: builtin/clean.c:902
+#: builtin/clean.c:903
 msgid "-x and -X cannot be used together"
 msgstr ""
 
-#: builtin/clean.c:906
+#: builtin/clean.c:907
 msgid ""
 "clean.requireForce set to true and neither -i, -n, nor -f given; refusing to "
 "clean"
 msgstr ""
 
-#: builtin/clean.c:909
+#: builtin/clean.c:910
 msgid ""
 "clean.requireForce defaults to true and neither -i, -n, nor -f given; "
 "refusing to clean"
 msgstr ""
 
 #: builtin/clone.c:37
-msgid "git clone [options] [--] <repo> [<dir>]"
+msgid "git clone [<options>] [--] <repo> [<dir>]"
 msgstr ""
 
-#: builtin/clone.c:66 builtin/fetch.c:112 builtin/merge.c:224
-#: builtin/push.c:514
+#: builtin/clone.c:66 builtin/fetch.c:111 builtin/merge.c:224
+#: builtin/push.c:523
 msgid "force progress reporting"
 msgstr ""
 
 #: builtin/clone.c:68
 msgid "don't create a checkout"
 msgstr ""
@@ -3718,13 +3751,13 @@
 msgstr ""
 
 #: builtin/clone.c:93
 msgid "path to git-upload-pack on the remote"
 msgstr ""
 
-#: builtin/clone.c:94 builtin/fetch.c:113 builtin/grep.c:659
+#: builtin/clone.c:94 builtin/fetch.c:112 builtin/grep.c:659
 msgid "depth"
 msgstr ""
 
 #: builtin/clone.c:95
 msgid "create a shallow clone of that depth"
 msgstr ""
@@ -3859,13 +3892,13 @@
 
 #: builtin/clone.c:809
 #, c-format
 msgid "repository '%s' does not exist"
 msgstr ""
 
-#: builtin/clone.c:815 builtin/fetch.c:1155
+#: builtin/clone.c:815 builtin/fetch.c:1156
 #, c-format
 msgid "depth %s is not a positive number"
 msgstr ""
 
 #: builtin/clone.c:825
 #, c-format
@@ -3874,64 +3907,64 @@
 
 #: builtin/clone.c:835
 #, c-format
 msgid "working tree '%s' already exists."
 msgstr ""
 
-#: builtin/clone.c:848 builtin/clone.c:860
+#: builtin/clone.c:850 builtin/clone.c:861
 #, c-format
 msgid "could not create leading directories of '%s'"
 msgstr ""
 
-#: builtin/clone.c:851
+#: builtin/clone.c:853
 #, c-format
-msgid "could not create work tree dir '%s'."
+msgid "could not create work tree dir '%s'"
 msgstr ""
 
-#: builtin/clone.c:870
+#: builtin/clone.c:871
 #, c-format
 msgid "Cloning into bare repository '%s'...\n"
 msgstr ""
 
-#: builtin/clone.c:872
+#: builtin/clone.c:873
 #, c-format
 msgid "Cloning into '%s'...\n"
 msgstr ""
 
-#: builtin/clone.c:897
+#: builtin/clone.c:898
 msgid "--dissociate given, but there is no --reference"
 msgstr ""
 
-#: builtin/clone.c:912
+#: builtin/clone.c:913
 msgid "--depth is ignored in local clones; use file:// instead."
 msgstr ""
 
-#: builtin/clone.c:915
+#: builtin/clone.c:916
 msgid "source repository is shallow, ignoring --local"
 msgstr ""
 
-#: builtin/clone.c:920
+#: builtin/clone.c:921
 msgid "--local is ignored"
 msgstr ""
 
-#: builtin/clone.c:924
+#: builtin/clone.c:925
 #, c-format
 msgid "Don't know how to clone %s"
 msgstr ""
 
-#: builtin/clone.c:975 builtin/clone.c:983
+#: builtin/clone.c:976 builtin/clone.c:984
 #, c-format
 msgid "Remote branch %s not found in upstream %s"
 msgstr ""
 
-#: builtin/clone.c:986
+#: builtin/clone.c:987
 msgid "You appear to have cloned an empty repository."
 msgstr ""
 
 #: builtin/column.c:9
-msgid "git column [options]"
+msgid "git column [<options>]"
 msgstr ""
 
 #: builtin/column.c:26
 msgid "lookup config vars"
 msgstr ""
 
@@ -3957,17 +3990,17 @@
 
 #: builtin/column.c:51
 msgid "--command must be the first argument"
 msgstr ""
 
 #: builtin/commit.c:37
-msgid "git commit [options] [--] <pathspec>..."
+msgid "git commit [<options>] [--] <pathspec>..."
 msgstr ""
 
 #: builtin/commit.c:42
-msgid "git status [options] [--] <pathspec>..."
+msgid "git status [<options>] [--] <pathspec>..."
 msgstr ""
 
 #: builtin/commit.c:47
 msgid ""
 "Your name and email address were configured automatically based\n"
 "on your username and hostname. Please check that they are accurate.\n"
@@ -4023,502 +4056,502 @@
 "    git reset\n"
 "\n"
 "Then \"git cherry-pick --continue\" will resume cherry-picking\n"
 "the remaining commits.\n"
 msgstr ""
 
-#: builtin/commit.c:302
+#: builtin/commit.c:304
 msgid "failed to unpack HEAD tree object"
 msgstr ""
 
-#: builtin/commit.c:342
+#: builtin/commit.c:344
 msgid "unable to create temporary index"
 msgstr ""
 
-#: builtin/commit.c:348
+#: builtin/commit.c:350
 msgid "interactive add failed"
 msgstr ""
 
-#: builtin/commit.c:359
+#: builtin/commit.c:361
 msgid "unable to write index file"
 msgstr ""
 
-#: builtin/commit.c:361
+#: builtin/commit.c:363
 msgid "unable to update temporary index"
 msgstr ""
 
-#: builtin/commit.c:363
+#: builtin/commit.c:365
 msgid "Failed to update main cache tree"
 msgstr ""
 
-#: builtin/commit.c:387 builtin/commit.c:412 builtin/commit.c:461
+#: builtin/commit.c:389 builtin/commit.c:414 builtin/commit.c:463
 msgid "unable to write new_index file"
 msgstr ""
 
-#: builtin/commit.c:443
+#: builtin/commit.c:445
 msgid "cannot do a partial commit during a merge."
 msgstr ""
 
-#: builtin/commit.c:445
+#: builtin/commit.c:447
 msgid "cannot do a partial commit during a cherry-pick."
 msgstr ""
 
-#: builtin/commit.c:454
+#: builtin/commit.c:456
 msgid "cannot read the index"
 msgstr ""
 
-#: builtin/commit.c:473
+#: builtin/commit.c:475
 msgid "unable to write temporary index file"
 msgstr ""
 
-#: builtin/commit.c:584
+#: builtin/commit.c:580
 #, c-format
 msgid "commit '%s' lacks author header"
 msgstr ""
 
-#: builtin/commit.c:586
+#: builtin/commit.c:582
 #, c-format
 msgid "commit '%s' has malformed author line"
 msgstr ""
 
-#: builtin/commit.c:605
+#: builtin/commit.c:601
 msgid "malformed --author parameter"
 msgstr ""
 
-#: builtin/commit.c:613
+#: builtin/commit.c:609
 #, c-format
 msgid "invalid date format: %s"
 msgstr ""
 
-#: builtin/commit.c:657
+#: builtin/commit.c:653
 msgid ""
 "unable to select a comment character that is not used\n"
 "in the current commit message"
 msgstr ""
 
-#: builtin/commit.c:694 builtin/commit.c:727 builtin/commit.c:1084
+#: builtin/commit.c:690 builtin/commit.c:723 builtin/commit.c:1080
 #, c-format
 msgid "could not lookup commit %s"
 msgstr ""
 
-#: builtin/commit.c:706 builtin/shortlog.c:273
+#: builtin/commit.c:702 builtin/shortlog.c:273
 #, c-format
 msgid "(reading log message from standard input)\n"
 msgstr ""
 
-#: builtin/commit.c:708
+#: builtin/commit.c:704
 msgid "could not read log from standard input"
 msgstr ""
 
-#: builtin/commit.c:712
+#: builtin/commit.c:708
 #, c-format
 msgid "could not read log file '%s'"
 msgstr ""
 
-#: builtin/commit.c:734
+#: builtin/commit.c:730
 msgid "could not read MERGE_MSG"
 msgstr ""
 
-#: builtin/commit.c:738
+#: builtin/commit.c:734
 msgid "could not read SQUASH_MSG"
 msgstr ""
 
-#: builtin/commit.c:742
+#: builtin/commit.c:738
 #, c-format
 msgid "could not read '%s'"
 msgstr ""
 
-#: builtin/commit.c:789
+#: builtin/commit.c:785
 msgid "could not write commit template"
 msgstr ""
 
-#: builtin/commit.c:807
+#: builtin/commit.c:803
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a merge.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
 "and try again.\n"
 msgstr ""
 
-#: builtin/commit.c:812
+#: builtin/commit.c:808
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a cherry-pick.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
 "and try again.\n"
 msgstr ""
 
-#: builtin/commit.c:825
+#: builtin/commit.c:821
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be ignored, and an empty message aborts the commit.\n"
 msgstr ""
 
-#: builtin/commit.c:832
+#: builtin/commit.c:828
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be kept; you may remove them yourself if you want to.\n"
 "An empty message aborts the commit.\n"
 msgstr ""
 
-#: builtin/commit.c:852
+#: builtin/commit.c:848
 #, c-format
 msgid "%sAuthor:    %.*s <%.*s>"
 msgstr ""
 
-#: builtin/commit.c:860
+#: builtin/commit.c:856
 #, c-format
 msgid "%sDate:      %s"
 msgstr ""
 
-#: builtin/commit.c:867
+#: builtin/commit.c:863
 #, c-format
 msgid "%sCommitter: %.*s <%.*s>"
 msgstr ""
 
-#: builtin/commit.c:885
+#: builtin/commit.c:881
 msgid "Cannot read index"
 msgstr ""
 
-#: builtin/commit.c:942
+#: builtin/commit.c:938
 msgid "Error building trees"
 msgstr ""
 
-#: builtin/commit.c:957 builtin/tag.c:495
+#: builtin/commit.c:953 builtin/tag.c:495
 #, c-format
 msgid "Please supply the message using either -m or -F option.\n"
 msgstr ""
 
-#: builtin/commit.c:1059
+#: builtin/commit.c:1055
 #, c-format
-msgid "No existing author found with '%s'"
+msgid "--author '%s' is not 'Name <email>' and matches no existing author"
 msgstr ""
 
-#: builtin/commit.c:1074 builtin/commit.c:1314
+#: builtin/commit.c:1070 builtin/commit.c:1310
 #, c-format
 msgid "Invalid untracked files mode '%s'"
 msgstr ""
 
-#: builtin/commit.c:1111
+#: builtin/commit.c:1107
 msgid "--long and -z are incompatible"
 msgstr ""
 
-#: builtin/commit.c:1141
+#: builtin/commit.c:1137
 msgid "Using both --reset-author and --author does not make sense"
 msgstr ""
 
-#: builtin/commit.c:1150
+#: builtin/commit.c:1146
 msgid "You have nothing to amend."
 msgstr ""
 
-#: builtin/commit.c:1153
+#: builtin/commit.c:1149
 msgid "You are in the middle of a merge -- cannot amend."
 msgstr ""
 
-#: builtin/commit.c:1155
+#: builtin/commit.c:1151
 msgid "You are in the middle of a cherry-pick -- cannot amend."
 msgstr ""
 
-#: builtin/commit.c:1158
+#: builtin/commit.c:1154
 msgid "Options --squash and --fixup cannot be used together"
 msgstr ""
 
-#: builtin/commit.c:1168
+#: builtin/commit.c:1164
 msgid "Only one of -c/-C/-F/--fixup can be used."
 msgstr ""
 
-#: builtin/commit.c:1170
+#: builtin/commit.c:1166
 msgid "Option -m cannot be combined with -c/-C/-F/--fixup."
 msgstr ""
 
-#: builtin/commit.c:1178
+#: builtin/commit.c:1174
 msgid "--reset-author can be used only with -C, -c or --amend."
 msgstr ""
 
-#: builtin/commit.c:1195
+#: builtin/commit.c:1191
 msgid "Only one of --include/--only/--all/--interactive/--patch can be used."
 msgstr ""
 
-#: builtin/commit.c:1197
+#: builtin/commit.c:1193
 msgid "No paths with --include/--only does not make sense."
 msgstr ""
 
-#: builtin/commit.c:1199
+#: builtin/commit.c:1195
 msgid "Clever... amending the last one with dirty index."
 msgstr ""
 
-#: builtin/commit.c:1201
+#: builtin/commit.c:1197
 msgid "Explicit paths specified without -i or -o; assuming --only paths..."
 msgstr ""
 
-#: builtin/commit.c:1213 builtin/tag.c:728
+#: builtin/commit.c:1209 builtin/tag.c:728
 #, c-format
 msgid "Invalid cleanup mode %s"
 msgstr ""
 
-#: builtin/commit.c:1218
+#: builtin/commit.c:1214
 msgid "Paths with -a does not make sense."
 msgstr ""
 
-#: builtin/commit.c:1328 builtin/commit.c:1608
+#: builtin/commit.c:1324 builtin/commit.c:1604
 msgid "show status concisely"
 msgstr ""
 
-#: builtin/commit.c:1330 builtin/commit.c:1610
+#: builtin/commit.c:1326 builtin/commit.c:1606
 msgid "show branch information"
 msgstr ""
 
-#: builtin/commit.c:1332 builtin/commit.c:1612 builtin/push.c:500
+#: builtin/commit.c:1328 builtin/commit.c:1608 builtin/push.c:509
 msgid "machine-readable output"
 msgstr ""
 
-#: builtin/commit.c:1335 builtin/commit.c:1614
+#: builtin/commit.c:1331 builtin/commit.c:1610
 msgid "show status in long format (default)"
 msgstr ""
 
-#: builtin/commit.c:1338 builtin/commit.c:1617
+#: builtin/commit.c:1334 builtin/commit.c:1613
 msgid "terminate entries with NUL"
 msgstr ""
 
-#: builtin/commit.c:1340 builtin/commit.c:1620 builtin/fast-export.c:980
+#: builtin/commit.c:1336 builtin/commit.c:1616 builtin/fast-export.c:980
 #: builtin/fast-export.c:983 builtin/tag.c:603
 msgid "mode"
 msgstr ""
 
-#: builtin/commit.c:1341 builtin/commit.c:1620
+#: builtin/commit.c:1337 builtin/commit.c:1616
 msgid "show untracked files, optional modes: all, normal, no. (Default: all)"
 msgstr ""
 
-#: builtin/commit.c:1344
+#: builtin/commit.c:1340
 msgid "show ignored files"
 msgstr ""
 
-#: builtin/commit.c:1345 parse-options.h:153
+#: builtin/commit.c:1341 parse-options.h:153
 msgid "when"
 msgstr ""
 
-#: builtin/commit.c:1346
+#: builtin/commit.c:1342
 msgid ""
 "ignore changes to submodules, optional when: all, dirty, untracked. "
 "(Default: all)"
 msgstr ""
 
-#: builtin/commit.c:1348
+#: builtin/commit.c:1344
 msgid "list untracked files in columns"
 msgstr ""
 
-#: builtin/commit.c:1435
+#: builtin/commit.c:1431
 msgid "couldn't look up newly created commit"
 msgstr ""
 
-#: builtin/commit.c:1437
+#: builtin/commit.c:1433
 msgid "could not parse newly created commit"
 msgstr ""
 
-#: builtin/commit.c:1482
+#: builtin/commit.c:1478
 msgid "detached HEAD"
 msgstr ""
 
-#: builtin/commit.c:1485
+#: builtin/commit.c:1481
 msgid " (root-commit)"
 msgstr ""
 
-#: builtin/commit.c:1578
+#: builtin/commit.c:1574
 msgid "suppress summary after successful commit"
 msgstr ""
 
-#: builtin/commit.c:1579
+#: builtin/commit.c:1575
 msgid "show diff in commit message template"
 msgstr ""
 
-#: builtin/commit.c:1581
+#: builtin/commit.c:1577
 msgid "Commit message options"
 msgstr ""
 
-#: builtin/commit.c:1582 builtin/tag.c:601
+#: builtin/commit.c:1578 builtin/tag.c:601
 msgid "read message from file"
 msgstr ""
 
-#: builtin/commit.c:1583
+#: builtin/commit.c:1579
 msgid "author"
 msgstr ""
 
-#: builtin/commit.c:1583
+#: builtin/commit.c:1579
 msgid "override author for commit"
 msgstr ""
 
-#: builtin/commit.c:1584 builtin/gc.c:275
+#: builtin/commit.c:1580 builtin/gc.c:275
 msgid "date"
 msgstr ""
 
-#: builtin/commit.c:1584
+#: builtin/commit.c:1580
 msgid "override date for commit"
 msgstr ""
 
-#: builtin/commit.c:1585 builtin/merge.c:218 builtin/notes.c:391
+#: builtin/commit.c:1581 builtin/merge.c:218 builtin/notes.c:391
 #: builtin/notes.c:554 builtin/tag.c:599
 msgid "message"
 msgstr ""
 
-#: builtin/commit.c:1585
+#: builtin/commit.c:1581
 msgid "commit message"
 msgstr ""
 
-#: builtin/commit.c:1586
+#: builtin/commit.c:1582
 msgid "reuse and edit message from specified commit"
 msgstr ""
 
-#: builtin/commit.c:1587
+#: builtin/commit.c:1583
 msgid "reuse message from specified commit"
 msgstr ""
 
-#: builtin/commit.c:1588
+#: builtin/commit.c:1584
 msgid "use autosquash formatted message to fixup specified commit"
 msgstr ""
 
-#: builtin/commit.c:1589
+#: builtin/commit.c:1585
 msgid "use autosquash formatted message to squash specified commit"
 msgstr ""
 
-#: builtin/commit.c:1590
+#: builtin/commit.c:1586
 msgid "the commit is authored by me now (used with -C/-c/--amend)"
 msgstr ""
 
-#: builtin/commit.c:1591 builtin/log.c:1191 builtin/revert.c:86
+#: builtin/commit.c:1587 builtin/log.c:1191 builtin/revert.c:86
 msgid "add Signed-off-by:"
 msgstr ""
 
-#: builtin/commit.c:1592
+#: builtin/commit.c:1588
 msgid "use specified template file"
 msgstr ""
 
-#: builtin/commit.c:1593
+#: builtin/commit.c:1589
 msgid "force edit of commit"
 msgstr ""
 
-#: builtin/commit.c:1594
+#: builtin/commit.c:1590
 msgid "default"
 msgstr ""
 
-#: builtin/commit.c:1594 builtin/tag.c:604
+#: builtin/commit.c:1590 builtin/tag.c:604
 msgid "how to strip spaces and #comments from message"
 msgstr ""
 
-#: builtin/commit.c:1595
+#: builtin/commit.c:1591
 msgid "include status in commit message template"
 msgstr ""
 
-#: builtin/commit.c:1596 builtin/merge.c:225 builtin/revert.c:92
+#: builtin/commit.c:1592 builtin/merge.c:225 builtin/revert.c:92
 #: builtin/tag.c:605
 msgid "key-id"
 msgstr ""
 
-#: builtin/commit.c:1597 builtin/merge.c:226 builtin/revert.c:93
+#: builtin/commit.c:1593 builtin/merge.c:226 builtin/revert.c:93
 msgid "GPG sign commit"
 msgstr ""
 
-#: builtin/commit.c:1600
+#: builtin/commit.c:1596
 msgid "Commit contents options"
 msgstr ""
 
-#: builtin/commit.c:1601
+#: builtin/commit.c:1597
 msgid "commit all changed files"
 msgstr ""
 
-#: builtin/commit.c:1602
+#: builtin/commit.c:1598
 msgid "add specified files to index for commit"
 msgstr ""
 
-#: builtin/commit.c:1603
+#: builtin/commit.c:1599
 msgid "interactively add files"
 msgstr ""
 
-#: builtin/commit.c:1604
+#: builtin/commit.c:1600
 msgid "interactively add changes"
 msgstr ""
 
-#: builtin/commit.c:1605
+#: builtin/commit.c:1601
 msgid "commit only specified files"
 msgstr ""
 
-#: builtin/commit.c:1606
+#: builtin/commit.c:1602
 msgid "bypass pre-commit hook"
 msgstr ""
 
-#: builtin/commit.c:1607
+#: builtin/commit.c:1603
 msgid "show what would be committed"
 msgstr ""
 
-#: builtin/commit.c:1618
+#: builtin/commit.c:1614
 msgid "amend previous commit"
 msgstr ""
 
-#: builtin/commit.c:1619
+#: builtin/commit.c:1615
 msgid "bypass post-rewrite hook"
 msgstr ""
 
-#: builtin/commit.c:1624
+#: builtin/commit.c:1620
 msgid "ok to record an empty change"
 msgstr ""
 
-#: builtin/commit.c:1626
+#: builtin/commit.c:1622
 msgid "ok to record a change with an empty message"
 msgstr ""
 
-#: builtin/commit.c:1655
+#: builtin/commit.c:1651
 msgid "could not parse HEAD commit"
 msgstr ""
 
-#: builtin/commit.c:1694 builtin/merge.c:519
+#: builtin/commit.c:1690 builtin/merge.c:519
 #, c-format
 msgid "could not open '%s' for reading"
 msgstr ""
 
-#: builtin/commit.c:1701
+#: builtin/commit.c:1697
 #, c-format
 msgid "Corrupt MERGE_HEAD file (%s)"
 msgstr ""
 
-#: builtin/commit.c:1708
+#: builtin/commit.c:1704
 msgid "could not read MERGE_MODE"
 msgstr ""
 
-#: builtin/commit.c:1727
+#: builtin/commit.c:1723
 #, c-format
 msgid "could not read commit message: %s"
 msgstr ""
 
-#: builtin/commit.c:1738
+#: builtin/commit.c:1734
 #, c-format
 msgid "Aborting commit; you did not edit the message.\n"
 msgstr ""
 
-#: builtin/commit.c:1743
+#: builtin/commit.c:1739
 #, c-format
 msgid "Aborting commit due to empty commit message.\n"
 msgstr ""
 
-#: builtin/commit.c:1758 builtin/merge.c:851 builtin/merge.c:876
+#: builtin/commit.c:1754 builtin/merge.c:851 builtin/merge.c:876
 msgid "failed to write commit object"
 msgstr ""
 
-#: builtin/commit.c:1791
+#: builtin/commit.c:1787
 msgid ""
 "Repository has been updated, but unable to write\n"
 "new_index file. Check that disk is not full and quota is\n"
 "not exceeded, and then \"git reset HEAD\" to recover."
 msgstr ""
 
 #: builtin/config.c:8
-msgid "git config [options]"
+msgid "git config [<options>]"
 msgstr ""
 
 #: builtin/config.c:53
 msgid "Config file location"
 msgstr ""
 
@@ -4663,17 +4696,17 @@
 
 #: builtin/count-objects.c:65
 msgid "print sizes in human readable format"
 msgstr ""
 
 #: builtin/describe.c:17
-msgid "git describe [options] <commit-ish>*"
+msgid "git describe [<options>] [<commit-ish>...]"
 msgstr ""
 
 #: builtin/describe.c:18
-msgid "git describe [options] --dirty"
+msgid "git describe [<options>] --dirty"
 msgstr ""
 
 #: builtin/describe.c:217
 #, c-format
 msgid "annotated tag %s not available"
 msgstr ""
@@ -4877,274 +4910,275 @@
 msgstr ""
 
 #: builtin/fast-export.c:999
 msgid "anonymize output"
 msgstr ""
 
-#: builtin/fetch.c:20
+#: builtin/fetch.c:19
 msgid "git fetch [<options>] [<repository> [<refspec>...]]"
 msgstr ""
 
-#: builtin/fetch.c:21
+#: builtin/fetch.c:20
 msgid "git fetch [<options>] <group>"
 msgstr ""
 
-#: builtin/fetch.c:22
+#: builtin/fetch.c:21
 msgid "git fetch --multiple [<options>] [(<repository> | <group>)...]"
 msgstr ""
 
-#: builtin/fetch.c:23
+#: builtin/fetch.c:22
 msgid "git fetch --all [<options>]"
 msgstr ""
 
-#: builtin/fetch.c:90
+#: builtin/fetch.c:89
 msgid "fetch from all remotes"
 msgstr ""
 
-#: builtin/fetch.c:92
+#: builtin/fetch.c:91
 msgid "append to .git/FETCH_HEAD instead of overwriting"
 msgstr ""
 
-#: builtin/fetch.c:94
+#: builtin/fetch.c:93
 msgid "path to upload pack on remote end"
 msgstr ""
 
-#: builtin/fetch.c:95
+#: builtin/fetch.c:94
 msgid "force overwrite of local branch"
 msgstr ""
 
-#: builtin/fetch.c:97
+#: builtin/fetch.c:96
 msgid "fetch from multiple remotes"
 msgstr ""
 
-#: builtin/fetch.c:99
+#: builtin/fetch.c:98
 msgid "fetch all tags and associated objects"
 msgstr ""
 
-#: builtin/fetch.c:101
+#: builtin/fetch.c:100
 msgid "do not fetch all tags (--no-tags)"
 msgstr ""
 
-#: builtin/fetch.c:103
+#: builtin/fetch.c:102
 msgid "prune remote-tracking branches no longer on remote"
 msgstr ""
 
-#: builtin/fetch.c:104
+#: builtin/fetch.c:103
 msgid "on-demand"
 msgstr ""
 
-#: builtin/fetch.c:105
+#: builtin/fetch.c:104
 msgid "control recursive fetching of submodules"
 msgstr ""
 
-#: builtin/fetch.c:109
+#: builtin/fetch.c:108
 msgid "keep downloaded pack"
 msgstr ""
 
-#: builtin/fetch.c:111
+#: builtin/fetch.c:110
 msgid "allow updating of HEAD ref"
 msgstr ""
 
-#: builtin/fetch.c:114
+#: builtin/fetch.c:113
 msgid "deepen history of shallow clone"
 msgstr ""
 
-#: builtin/fetch.c:116
+#: builtin/fetch.c:115
 msgid "convert to a complete repository"
 msgstr ""
 
-#: builtin/fetch.c:118 builtin/log.c:1208
+#: builtin/fetch.c:117 builtin/log.c:1208
 msgid "dir"
 msgstr ""
 
-#: builtin/fetch.c:119
+#: builtin/fetch.c:118
 msgid "prepend this to submodule path output"
 msgstr ""
 
-#: builtin/fetch.c:122
+#: builtin/fetch.c:121
 msgid "default mode for recursion"
 msgstr ""
 
-#: builtin/fetch.c:124
+#: builtin/fetch.c:123
 msgid "accept refs that update .git/shallow"
 msgstr ""
 
-#: builtin/fetch.c:125
+#: builtin/fetch.c:124
 msgid "refmap"
 msgstr ""
 
-#: builtin/fetch.c:126
+#: builtin/fetch.c:125
 msgid "specify fetch refmap"
 msgstr ""
 
-#: builtin/fetch.c:376
+#: builtin/fetch.c:375
 msgid "Couldn't find remote ref HEAD"
 msgstr ""
 
-#: builtin/fetch.c:454
+#: builtin/fetch.c:455
 #, c-format
 msgid "object %s not found"
 msgstr ""
 
-#: builtin/fetch.c:459
+#: builtin/fetch.c:460
 msgid "[up to date]"
 msgstr ""
 
-#: builtin/fetch.c:473
+#: builtin/fetch.c:474
 #, c-format
 msgid "! %-*s %-*s -> %s  (can't fetch in current branch)"
 msgstr ""
 
-#: builtin/fetch.c:474 builtin/fetch.c:560
+#: builtin/fetch.c:475 builtin/fetch.c:561
 msgid "[rejected]"
 msgstr ""
 
-#: builtin/fetch.c:485
+#: builtin/fetch.c:486
 msgid "[tag update]"
 msgstr ""
 
-#: builtin/fetch.c:487 builtin/fetch.c:522 builtin/fetch.c:540
+#: builtin/fetch.c:488 builtin/fetch.c:523 builtin/fetch.c:541
 msgid "  (unable to update local ref)"
 msgstr ""
 
-#: builtin/fetch.c:505
+#: builtin/fetch.c:506
 msgid "[new tag]"
 msgstr ""
 
-#: builtin/fetch.c:508
+#: builtin/fetch.c:509
 msgid "[new branch]"
 msgstr ""
 
-#: builtin/fetch.c:511
+#: builtin/fetch.c:512
 msgid "[new ref]"
 msgstr ""
 
-#: builtin/fetch.c:556
+#: builtin/fetch.c:557
 msgid "unable to update local ref"
 msgstr ""
 
-#: builtin/fetch.c:556
+#: builtin/fetch.c:557
 msgid "forced update"
 msgstr ""
 
-#: builtin/fetch.c:562
+#: builtin/fetch.c:563
 msgid "(non-fast-forward)"
 msgstr ""
 
-#: builtin/fetch.c:595 builtin/fetch.c:828
+#: builtin/fetch.c:596 builtin/fetch.c:829
 #, c-format
 msgid "cannot open %s: %s\n"
 msgstr ""
 
-#: builtin/fetch.c:604
+#: builtin/fetch.c:605
 #, c-format
 msgid "%s did not send all necessary objects\n"
 msgstr ""
 
-#: builtin/fetch.c:622
+#: builtin/fetch.c:623
 #, c-format
 msgid "reject %s because shallow roots are not allowed to be updated"
 msgstr ""
 
-#: builtin/fetch.c:710 builtin/fetch.c:793
+#: builtin/fetch.c:711 builtin/fetch.c:794
 #, c-format
 msgid "From %.*s\n"
 msgstr ""
 
-#: builtin/fetch.c:721
+#: builtin/fetch.c:722
 #, c-format
 msgid ""
 "some local refs could not be updated; try running\n"
 " 'git remote prune %s' to remove any old, conflicting branches"
 msgstr ""
 
-#: builtin/fetch.c:773
+#: builtin/fetch.c:774
 #, c-format
 msgid "   (%s will become dangling)"
 msgstr ""
 
-#: builtin/fetch.c:774
+#: builtin/fetch.c:775
 #, c-format
 msgid "   (%s has become dangling)"
 msgstr ""
 
-#: builtin/fetch.c:798
+#: builtin/fetch.c:799
 msgid "[deleted]"
 msgstr ""
 
-#: builtin/fetch.c:799 builtin/remote.c:1060
+#: builtin/fetch.c:800 builtin/remote.c:1060
 msgid "(none)"
 msgstr ""
 
-#: builtin/fetch.c:818
+#: builtin/fetch.c:819
 #, c-format
 msgid "Refusing to fetch into current branch %s of non-bare repository"
 msgstr ""
 
-#: builtin/fetch.c:837
+#: builtin/fetch.c:838
 #, c-format
 msgid "Option \"%s\" value \"%s\" is not valid for %s"
 msgstr ""
 
-#: builtin/fetch.c:840
+#: builtin/fetch.c:841
 #, c-format
 msgid "Option \"%s\" is ignored for %s\n"
 msgstr ""
 
-#: builtin/fetch.c:896
+#: builtin/fetch.c:897
 #, c-format
 msgid "Don't know how to fetch from %s"
 msgstr ""
 
-#: builtin/fetch.c:1058
+#: builtin/fetch.c:1059
 #, c-format
 msgid "Fetching %s\n"
 msgstr ""
 
-#: builtin/fetch.c:1060 builtin/remote.c:90
+#: builtin/fetch.c:1061 builtin/remote.c:90
 #, c-format
 msgid "Could not fetch %s"
 msgstr ""
 
-#: builtin/fetch.c:1078
+#: builtin/fetch.c:1079
 msgid ""
 "No remote repository specified.  Please, specify either a URL or a\n"
 "remote name from which new revisions should be fetched."
 msgstr ""
 
-#: builtin/fetch.c:1101
+#: builtin/fetch.c:1102
 msgid "You need to specify a tag name."
 msgstr ""
 
-#: builtin/fetch.c:1143
+#: builtin/fetch.c:1144
 msgid "--depth and --unshallow cannot be used together"
 msgstr ""
 
-#: builtin/fetch.c:1145
+#: builtin/fetch.c:1146
 msgid "--unshallow on a complete repository does not make sense"
 msgstr ""
 
-#: builtin/fetch.c:1168
+#: builtin/fetch.c:1169
 msgid "fetch --all does not take a repository argument"
 msgstr ""
 
-#: builtin/fetch.c:1170
+#: builtin/fetch.c:1171
 msgid "fetch --all does not make sense with refspecs"
 msgstr ""
 
-#: builtin/fetch.c:1181
+#: builtin/fetch.c:1182
 #, c-format
 msgid "No such remote or remote group: %s"
 msgstr ""
 
-#: builtin/fetch.c:1189
+#: builtin/fetch.c:1190
 msgid "Fetching a group and specifying refspecs does not make sense"
 msgstr ""
 
 #: builtin/fmt-merge-msg.c:13
-msgid "git fmt-merge-msg [-m <message>] [--log[=<n>]|--no-log] [--file <file>]"
+msgid ""
+"git fmt-merge-msg [-m <message>] [--log[=<n>] | --no-log] [--file <file>]"
 msgstr ""
 
 #: builtin/fmt-merge-msg.c:662 builtin/fmt-merge-msg.c:665 builtin/grep.c:698
 #: builtin/merge.c:198 builtin/repack.c:178 builtin/repack.c:182
 #: builtin/show-branch.c:657 builtin/show-ref.c:178 builtin/tag.c:590
 #: parse-options.h:132 parse-options.h:239
@@ -5168,66 +5202,66 @@
 msgstr ""
 
 #: builtin/fmt-merge-msg.c:671
 msgid "file to read from"
 msgstr ""
 
-#: builtin/for-each-ref.c:676
+#: builtin/for-each-ref.c:675
 msgid "unable to parse format"
 msgstr ""
 
-#: builtin/for-each-ref.c:1064
-msgid "git for-each-ref [options] [<pattern>]"
+#: builtin/for-each-ref.c:1063
+msgid "git for-each-ref [<options>] [<pattern>]"
 msgstr ""
 
-#: builtin/for-each-ref.c:1079
+#: builtin/for-each-ref.c:1078
 msgid "quote placeholders suitably for shells"
 msgstr ""
 
-#: builtin/for-each-ref.c:1081
+#: builtin/for-each-ref.c:1080
 msgid "quote placeholders suitably for perl"
 msgstr ""
 
-#: builtin/for-each-ref.c:1083
+#: builtin/for-each-ref.c:1082
 msgid "quote placeholders suitably for python"
 msgstr ""
 
-#: builtin/for-each-ref.c:1085
+#: builtin/for-each-ref.c:1084
 msgid "quote placeholders suitably for Tcl"
 msgstr ""
 
-#: builtin/for-each-ref.c:1088
+#: builtin/for-each-ref.c:1087
 msgid "show only <n> matched refs"
 msgstr ""
 
-#: builtin/for-each-ref.c:1089 builtin/replace.c:438
+#: builtin/for-each-ref.c:1088 builtin/replace.c:438
 msgid "format"
 msgstr ""
 
-#: builtin/for-each-ref.c:1089
+#: builtin/for-each-ref.c:1088
 msgid "format to use for the output"
 msgstr ""
 
-#: builtin/for-each-ref.c:1090
+#: builtin/for-each-ref.c:1089
 msgid "key"
 msgstr ""
 
-#: builtin/for-each-ref.c:1091
+#: builtin/for-each-ref.c:1090
 msgid "field name to sort on"
 msgstr ""
 
-#: builtin/fsck.c:147 builtin/prune.c:136
+#: builtin/fsck.c:147 builtin/prune.c:137
 msgid "Checking connectivity"
 msgstr ""
 
 #: builtin/fsck.c:540
 msgid "Checking object directories"
 msgstr ""
 
 #: builtin/fsck.c:603
-msgid "git fsck [options] [<object>...]"
+msgid "git fsck [<options>] [<object>...]"
 msgstr ""
 
 #: builtin/fsck.c:609
 msgid "show unreachable objects"
 msgstr ""
 
@@ -5269,13 +5303,13 @@
 
 #: builtin/fsck.c:669
 msgid "Checking objects"
 msgstr ""
 
 #: builtin/gc.c:24
-msgid "git gc [options]"
+msgid "git gc [<options>]"
 msgstr ""
 
 #: builtin/gc.c:79
 #, c-format
 msgid "Invalid gc.pruneexpire: '%s'"
 msgstr ""
@@ -5325,13 +5359,13 @@
 #: builtin/gc.c:364
 msgid ""
 "There are too many unreachable loose objects; run 'git prune' to remove them."
 msgstr ""
 
 #: builtin/grep.c:23
-msgid "git grep [options] [-e] <pattern> [<rev>...] [[--] <path>...]"
+msgid "git grep [<options>] [-e] <pattern> [<rev>...] [[--] <path>...]"
 msgstr ""
 
 #: builtin/grep.c:218
 #, c-format
 msgid "grep: failed to create thread: %s"
 msgstr ""
@@ -5366,13 +5400,13 @@
 
 #: builtin/grep.c:642
 msgid "search in both tracked and untracked files"
 msgstr ""
 
 #: builtin/grep.c:644
-msgid "search also in ignored files"
+msgid "ignore files specified via '.gitignore'"
 msgstr ""
 
 #: builtin/grep.c:647
 msgid "show non-matching lines"
 msgstr ""
 
@@ -5551,21 +5585,21 @@
 #: builtin/grep.c:908
 msgid "both --cached and trees are given."
 msgstr ""
 
 #: builtin/hash-object.c:82
 msgid ""
-"git hash-object [-t <type>] [-w] [--path=<file>|--no-filters] [--stdin] [--] "
-"<file>..."
+"git hash-object [-t <type>] [-w] [--path=<file> | --no-filters] [--stdin] "
+"[--] <file>..."
 msgstr ""
 
 #: builtin/hash-object.c:83
 msgid "git hash-object  --stdin-paths < <list-of-paths>"
 msgstr ""
 
-#: builtin/hash-object.c:94 builtin/tag.c:610
+#: builtin/hash-object.c:94 builtin/tag.c:612
 msgid "type"
 msgstr ""
 
 #: builtin/hash-object.c:94
 msgid "object type"
 msgstr ""
@@ -5609,13 +5643,13 @@
 
 #: builtin/help.c:46
 msgid "show info page"
 msgstr ""
 
 #: builtin/help.c:52
-msgid "git help [--all] [--guides] [--man|--web|--info] [command]"
+msgid "git help [--all] [--guides] [--man | --web | --info] [<command>]"
 msgstr ""
 
 #: builtin/help.c:64
 #, c-format
 msgid "unrecognized help format '%s'"
 msgstr ""
@@ -5814,14 +5848,14 @@
 #: builtin/index-pack.c:686 builtin/index-pack.c:692 builtin/index-pack.c:715
 #: builtin/index-pack.c:749 builtin/index-pack.c:758
 #, c-format
 msgid "SHA1 COLLISION FOUND WITH %s !"
 msgstr ""
 
-#: builtin/index-pack.c:689 builtin/pack-objects.c:164
-#: builtin/pack-objects.c:256
+#: builtin/index-pack.c:689 builtin/pack-objects.c:162
+#: builtin/pack-objects.c:254
 #, c-format
 msgid "unable to read %s"
 msgstr ""
 
 #: builtin/index-pack.c:755
 #, c-format
@@ -5902,103 +5936,103 @@
 #, c-format
 msgid "pack has %d unresolved delta"
 msgid_plural "pack has %d unresolved deltas"
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/index-pack.c:1220
+#: builtin/index-pack.c:1219
 #, c-format
 msgid "unable to deflate appended object (%d)"
 msgstr ""
 
-#: builtin/index-pack.c:1299
+#: builtin/index-pack.c:1298
 #, c-format
 msgid "local object %s is corrupt"
 msgstr ""
 
-#: builtin/index-pack.c:1323
+#: builtin/index-pack.c:1322
 msgid "error while closing pack file"
 msgstr ""
 
-#: builtin/index-pack.c:1336
+#: builtin/index-pack.c:1335
 #, c-format
 msgid "cannot write keep file '%s'"
 msgstr ""
 
-#: builtin/index-pack.c:1344
+#: builtin/index-pack.c:1343
 #, c-format
 msgid "cannot close written keep file '%s'"
 msgstr ""
 
-#: builtin/index-pack.c:1357
+#: builtin/index-pack.c:1356
 msgid "cannot store pack file"
 msgstr ""
 
-#: builtin/index-pack.c:1368
+#: builtin/index-pack.c:1367
 msgid "cannot store index file"
 msgstr ""
 
-#: builtin/index-pack.c:1401
+#: builtin/index-pack.c:1400
 #, c-format
 msgid "bad pack.indexversion=%<PRIu32>"
 msgstr ""
 
-#: builtin/index-pack.c:1407
+#: builtin/index-pack.c:1406
 #, c-format
 msgid "invalid number of threads specified (%d)"
 msgstr ""
 
-#: builtin/index-pack.c:1411 builtin/index-pack.c:1590
+#: builtin/index-pack.c:1410 builtin/index-pack.c:1589
 #, c-format
 msgid "no threads support, ignoring %s"
 msgstr ""
 
-#: builtin/index-pack.c:1469
+#: builtin/index-pack.c:1468
 #, c-format
 msgid "Cannot open existing pack file '%s'"
 msgstr ""
 
-#: builtin/index-pack.c:1471
+#: builtin/index-pack.c:1470
 #, c-format
 msgid "Cannot open existing pack idx file for '%s'"
 msgstr ""
 
-#: builtin/index-pack.c:1518
+#: builtin/index-pack.c:1517
 #, c-format
 msgid "non delta: %d object"
 msgid_plural "non delta: %d objects"
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/index-pack.c:1525
+#: builtin/index-pack.c:1524
 #, c-format
 msgid "chain length = %d: %lu object"
 msgid_plural "chain length = %d: %lu objects"
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/index-pack.c:1554
+#: builtin/index-pack.c:1553
 msgid "Cannot come back to cwd"
 msgstr ""
 
-#: builtin/index-pack.c:1602 builtin/index-pack.c:1605
-#: builtin/index-pack.c:1617 builtin/index-pack.c:1621
+#: builtin/index-pack.c:1601 builtin/index-pack.c:1604
+#: builtin/index-pack.c:1616 builtin/index-pack.c:1620
 #, c-format
 msgid "bad %s"
 msgstr ""
 
-#: builtin/index-pack.c:1635
+#: builtin/index-pack.c:1634
 msgid "--fix-thin cannot be used without --stdin"
 msgstr ""
 
-#: builtin/index-pack.c:1639 builtin/index-pack.c:1648
+#: builtin/index-pack.c:1638 builtin/index-pack.c:1647
 #, c-format
 msgid "packfile name '%s' does not end with '.pack'"
 msgstr ""
 
-#: builtin/index-pack.c:1656
+#: builtin/index-pack.c:1655
 msgid "--verify with no packfile name given"
 msgstr ""
 
 #: builtin/init-db.c:35
 #, c-format
 msgid "Could not make %s writable by group"
@@ -6104,13 +6138,13 @@
 msgid " shared"
 msgstr ""
 
 #: builtin/init-db.c:475
 msgid ""
 "git init [-q | --quiet] [--bare] [--template=<template-directory>] [--"
-"shared[=<permissions>]] [directory]"
+"shared[=<permissions>]] [<directory>]"
 msgstr ""
 
 #: builtin/init-db.c:498
 msgid "permissions"
 msgstr ""
 
@@ -6164,13 +6198,13 @@
 
 #: builtin/log.c:41
 msgid "git log [<options>] [<revision range>] [[--] <path>...]"
 msgstr ""
 
 #: builtin/log.c:42
-msgid "git show [options] <object>..."
+msgid "git show [<options>] <object>..."
 msgstr ""
 
 #: builtin/log.c:81
 #, c-format
 msgid "invalid --decorate option: %s"
 msgstr ""
@@ -6243,13 +6277,13 @@
 #: builtin/log.c:998
 #, c-format
 msgid "insane in-reply-to: %s"
 msgstr ""
 
 #: builtin/log.c:1026
-msgid "git format-patch [options] [<since> | <revision range>]"
+msgid "git format-patch [<options>] [<since> | <revision-range>]"
 msgstr ""
 
 #: builtin/log.c:1071
 msgid "Two output directories?"
 msgstr ""
 
@@ -6440,101 +6474,101 @@
 
 #: builtin/log.c:1651 builtin/log.c:1653 builtin/log.c:1665
 #, c-format
 msgid "Unknown commit %s"
 msgstr ""
 
-#: builtin/ls-files.c:401
-msgid "git ls-files [options] [<file>...]"
+#: builtin/ls-files.c:358
+msgid "git ls-files [<options>] [<file>...]"
 msgstr ""
 
-#: builtin/ls-files.c:458
+#: builtin/ls-files.c:415
 msgid "identify the file status with tags"
 msgstr ""
 
-#: builtin/ls-files.c:460
+#: builtin/ls-files.c:417
 msgid "use lowercase letters for 'assume unchanged' files"
 msgstr ""
 
-#: builtin/ls-files.c:462
+#: builtin/ls-files.c:419
 msgid "show cached files in the output (default)"
 msgstr ""
 
-#: builtin/ls-files.c:464
+#: builtin/ls-files.c:421
 msgid "show deleted files in the output"
 msgstr ""
 
-#: builtin/ls-files.c:466
+#: builtin/ls-files.c:423
 msgid "show modified files in the output"
 msgstr ""
 
-#: builtin/ls-files.c:468
+#: builtin/ls-files.c:425
 msgid "show other files in the output"
 msgstr ""
 
-#: builtin/ls-files.c:470
+#: builtin/ls-files.c:427
 msgid "show ignored files in the output"
 msgstr ""
 
-#: builtin/ls-files.c:473
+#: builtin/ls-files.c:430
 msgid "show staged contents' object name in the output"
 msgstr ""
 
-#: builtin/ls-files.c:475
+#: builtin/ls-files.c:432
 msgid "show files on the filesystem that need to be removed"
 msgstr ""
 
-#: builtin/ls-files.c:477
+#: builtin/ls-files.c:434
 msgid "show 'other' directories' names only"
 msgstr ""
 
-#: builtin/ls-files.c:480
+#: builtin/ls-files.c:437
 msgid "don't show empty directories"
 msgstr ""
 
-#: builtin/ls-files.c:483
+#: builtin/ls-files.c:440
 msgid "show unmerged files in the output"
 msgstr ""
 
-#: builtin/ls-files.c:485
+#: builtin/ls-files.c:442
 msgid "show resolve-undo information"
 msgstr ""
 
-#: builtin/ls-files.c:487
+#: builtin/ls-files.c:444
 msgid "skip files matching pattern"
 msgstr ""
 
-#: builtin/ls-files.c:490
+#: builtin/ls-files.c:447
 msgid "exclude patterns are read from <file>"
 msgstr ""
 
-#: builtin/ls-files.c:493
+#: builtin/ls-files.c:450
 msgid "read additional per-directory exclude patterns in <file>"
 msgstr ""
 
-#: builtin/ls-files.c:495
+#: builtin/ls-files.c:452
 msgid "add the standard git exclusions"
 msgstr ""
 
-#: builtin/ls-files.c:498
+#: builtin/ls-files.c:455
 msgid "make the output relative to the project top directory"
 msgstr ""
 
-#: builtin/ls-files.c:501
+#: builtin/ls-files.c:458
 msgid "if any <file> is not in the index, treat this as an error"
 msgstr ""
 
-#: builtin/ls-files.c:502
+#: builtin/ls-files.c:459
 msgid "tree-ish"
 msgstr ""
 
-#: builtin/ls-files.c:503
+#: builtin/ls-files.c:460
 msgid "pretend that paths removed since <tree-ish> are still present"
 msgstr ""
 
-#: builtin/ls-files.c:505
+#: builtin/ls-files.c:462
 msgid "show debugging data"
 msgstr ""
 
 #: builtin/ls-tree.c:28
 msgid "git ls-tree [<options>] <tree-ish> [<path>...]"
 msgstr ""
@@ -6569,17 +6603,17 @@
 
 #: builtin/ls-tree.c:144
 msgid "list entire tree; not just current directory (implies --full-name)"
 msgstr ""
 
 #: builtin/merge.c:45
-msgid "git merge [options] [<commit>...]"
+msgid "git merge [<options>] [<commit>...]"
 msgstr ""
 
 #: builtin/merge.c:46
-msgid "git merge [options] <msg> HEAD <commit>"
+msgid "git merge [<options>] <msg> HEAD <commit>"
 msgstr ""
 
 #: builtin/merge.c:47
 msgid "git merge --abort"
 msgstr ""
 
@@ -6905,17 +6939,17 @@
 #: builtin/merge.c:1543
 #, c-format
 msgid "Automatic merge went well; stopped before committing as requested\n"
 msgstr ""
 
 #: builtin/merge-base.c:29
-msgid "git merge-base [-a|--all] <commit> <commit>..."
+msgid "git merge-base [-a | --all] <commit> <commit>..."
 msgstr ""
 
 #: builtin/merge-base.c:30
-msgid "git merge-base [-a|--all] --octopus <commit>..."
+msgid "git merge-base [-a | --all] --octopus <commit>..."
 msgstr ""
 
 #: builtin/merge-base.c:31
 msgid "git merge-base --independent <commit>..."
 msgstr ""
 
@@ -6946,14 +6980,14 @@
 #: builtin/merge-base.c:222
 msgid "find where <commit> forked from reflog of <ref>"
 msgstr ""
 
 #: builtin/merge-file.c:8
 msgid ""
-"git merge-file [options] [-L name1 [-L orig [-L name2]]] file1 orig_file "
-"file2"
+"git merge-file [<options>] [-L <name1> [-L <orig> [-L <name2>]]] <file1> "
+"<orig-file> <file2>"
 msgstr ""
 
 #: builtin/merge-file.c:33
 msgid "send results to standard output"
 msgstr ""
 
@@ -6979,13 +7013,13 @@
 
 #: builtin/merge-file.c:43
 msgid "do not warn about conflicts"
 msgstr ""
 
 #: builtin/merge-file.c:45
-msgid "set labels for file1/orig_file/file2"
+msgid "set labels for file1/orig-file/file2"
 msgstr ""
 
 #: builtin/mktree.c:64
 msgid "git mktree [-z] [--missing] [--batch]"
 msgstr ""
 
@@ -6999,13 +7033,13 @@
 
 #: builtin/mktree.c:152
 msgid "allow creation of more than one tree"
 msgstr ""
 
 #: builtin/mv.c:15
-msgid "git mv [options] <source>... <destination>"
+msgid "git mv [<options>] <source>... <destination>"
 msgstr ""
 
 #: builtin/mv.c:69
 #, c-format
 msgid "Directory %s is in index and no submodule?"
 msgstr ""
@@ -7085,27 +7119,27 @@
 
 #: builtin/mv.c:253
 #, c-format
 msgid "Renaming %s to %s\n"
 msgstr ""
 
-#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:355
+#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:359
 #, c-format
 msgid "renaming '%s' failed"
 msgstr ""
 
 #: builtin/name-rev.c:255
-msgid "git name-rev [options] <commit>..."
+msgid "git name-rev [<options>] <commit>..."
 msgstr ""
 
 #: builtin/name-rev.c:256
-msgid "git name-rev [options] --all"
+msgid "git name-rev [<options>] --all"
 msgstr ""
 
 #: builtin/name-rev.c:257
-msgid "git name-rev [options] --stdin"
+msgid "git name-rev [<options>] --stdin"
 msgstr ""
 
 #: builtin/name-rev.c:309
 msgid "print only names (no SHA-1)"
 msgstr ""
 
@@ -7131,62 +7165,62 @@
 
 #: builtin/name-rev.c:322
 msgid "dereference tags in the input (internal use)"
 msgstr ""
 
 #: builtin/notes.c:24
-msgid "git notes [--ref <notes_ref>] [list [<object>]]"
+msgid "git notes [--ref <notes-ref>] [list [<object>]]"
 msgstr ""
 
 #: builtin/notes.c:25
 msgid ""
-"git notes [--ref <notes_ref>] add [-f] [--allow-empty] [-m <msg> | -F <file> "
+"git notes [--ref <notes-ref>] add [-f] [--allow-empty] [-m <msg> | -F <file> "
 "| (-c | -C) <object>] [<object>]"
 msgstr ""
 
 #: builtin/notes.c:26
-msgid "git notes [--ref <notes_ref>] copy [-f] <from-object> <to-object>"
+msgid "git notes [--ref <notes-ref>] copy [-f] <from-object> <to-object>"
 msgstr ""
 
 #: builtin/notes.c:27
 msgid ""
-"git notes [--ref <notes_ref>] append [--allow-empty] [-m <msg> | -F <file> | "
+"git notes [--ref <notes-ref>] append [--allow-empty] [-m <msg> | -F <file> | "
 "(-c | -C) <object>] [<object>]"
 msgstr ""
 
 #: builtin/notes.c:28
-msgid "git notes [--ref <notes_ref>] edit [--allow-empty] [<object>]"
+msgid "git notes [--ref <notes-ref>] edit [--allow-empty] [<object>]"
 msgstr ""
 
 #: builtin/notes.c:29
-msgid "git notes [--ref <notes_ref>] show [<object>]"
+msgid "git notes [--ref <notes-ref>] show [<object>]"
 msgstr ""
 
 #: builtin/notes.c:30
 msgid ""
-"git notes [--ref <notes_ref>] merge [-v | -q] [-s <strategy> ] <notes_ref>"
+"git notes [--ref <notes-ref>] merge [-v | -q] [-s <strategy>] <notes-ref>"
 msgstr ""
 
 #: builtin/notes.c:31
 msgid "git notes merge --commit [-v | -q]"
 msgstr ""
 
 #: builtin/notes.c:32
 msgid "git notes merge --abort [-v | -q]"
 msgstr ""
 
 #: builtin/notes.c:33
-msgid "git notes [--ref <notes_ref>] remove [<object>...]"
+msgid "git notes [--ref <notes-ref>] remove [<object>...]"
 msgstr ""
 
 #: builtin/notes.c:34
-msgid "git notes [--ref <notes_ref>] prune [-n | -v]"
+msgid "git notes [--ref <notes-ref>] prune [-n | -v]"
 msgstr ""
 
 #: builtin/notes.c:35
-msgid "git notes [--ref <notes_ref>] get-ref"
+msgid "git notes [--ref <notes-ref>] get-ref"
 msgstr ""
 
 #: builtin/notes.c:40
 msgid "git notes [list [<object>]]"
 msgstr ""
 
@@ -7212,13 +7246,13 @@
 
 #: builtin/notes.c:66
 msgid "git notes show [<object>]"
 msgstr ""
 
 #: builtin/notes.c:71
-msgid "git notes merge [<options>] <notes_ref>"
+msgid "git notes merge [<options>] <notes-ref>"
 msgstr ""
 
 #: builtin/notes.c:72
 msgid "git notes merge --commit [<options>]"
 msgstr ""
 
@@ -7441,13 +7475,13 @@
 
 #: builtin/notes.c:953
 msgid "notes-ref"
 msgstr ""
 
 #: builtin/notes.c:954
-msgid "use notes from <notes_ref>"
+msgid "use notes from <notes-ref>"
 msgstr ""
 
 #: builtin/notes.c:989 builtin/remote.c:1621
 #, c-format
 msgid "Unknown subcommand: %s"
 msgstr ""
@@ -7457,203 +7491,203 @@
 msgstr ""
 
 #: builtin/pack-objects.c:29
 msgid "git pack-objects [options...] base-name [< ref-list | < object-list]"
 msgstr ""
 
-#: builtin/pack-objects.c:177 builtin/pack-objects.c:180
+#: builtin/pack-objects.c:175 builtin/pack-objects.c:178
 #, c-format
 msgid "deflate error (%d)"
 msgstr ""
 
-#: builtin/pack-objects.c:773
+#: builtin/pack-objects.c:771
 msgid "Writing objects"
 msgstr ""
 
-#: builtin/pack-objects.c:1015
+#: builtin/pack-objects.c:1013
 msgid "disabling bitmap writing, as some objects are not being packed"
 msgstr ""
 
-#: builtin/pack-objects.c:2175
+#: builtin/pack-objects.c:2173
 msgid "Compressing objects"
 msgstr ""
 
-#: builtin/pack-objects.c:2572
+#: builtin/pack-objects.c:2570
 #, c-format
 msgid "unsupported index version %s"
 msgstr ""
 
-#: builtin/pack-objects.c:2576
+#: builtin/pack-objects.c:2574
 #, c-format
 msgid "bad index version '%s'"
 msgstr ""
 
-#: builtin/pack-objects.c:2599
+#: builtin/pack-objects.c:2597
 #, c-format
 msgid "option %s does not accept negative form"
 msgstr ""
 
-#: builtin/pack-objects.c:2603
+#: builtin/pack-objects.c:2601
 #, c-format
 msgid "unable to parse value '%s' for option %s"
 msgstr ""
 
-#: builtin/pack-objects.c:2623
+#: builtin/pack-objects.c:2621
 msgid "do not show progress meter"
 msgstr ""
 
-#: builtin/pack-objects.c:2625
+#: builtin/pack-objects.c:2623
 msgid "show progress meter"
 msgstr ""
 
-#: builtin/pack-objects.c:2627
+#: builtin/pack-objects.c:2625
 msgid "show progress meter during object writing phase"
 msgstr ""
 
-#: builtin/pack-objects.c:2630
+#: builtin/pack-objects.c:2628
 msgid "similar to --all-progress when progress meter is shown"
 msgstr ""
 
-#: builtin/pack-objects.c:2631
+#: builtin/pack-objects.c:2629
 msgid "version[,offset]"
 msgstr ""
 
-#: builtin/pack-objects.c:2632
+#: builtin/pack-objects.c:2630
 msgid "write the pack index file in the specified idx format version"
 msgstr ""
 
-#: builtin/pack-objects.c:2635
+#: builtin/pack-objects.c:2633
 msgid "maximum size of each output pack file"
 msgstr ""
 
-#: builtin/pack-objects.c:2637
+#: builtin/pack-objects.c:2635
 msgid "ignore borrowed objects from alternate object store"
 msgstr ""
 
-#: builtin/pack-objects.c:2639
+#: builtin/pack-objects.c:2637
 msgid "ignore packed objects"
 msgstr ""
 
-#: builtin/pack-objects.c:2641
+#: builtin/pack-objects.c:2639
 msgid "limit pack window by objects"
 msgstr ""
 
-#: builtin/pack-objects.c:2643
+#: builtin/pack-objects.c:2641
 msgid "limit pack window by memory in addition to object limit"
 msgstr ""
 
-#: builtin/pack-objects.c:2645
+#: builtin/pack-objects.c:2643
 msgid "maximum length of delta chain allowed in the resulting pack"
 msgstr ""
 
-#: builtin/pack-objects.c:2647
+#: builtin/pack-objects.c:2645
 msgid "reuse existing deltas"
 msgstr ""
 
-#: builtin/pack-objects.c:2649
+#: builtin/pack-objects.c:2647
 msgid "reuse existing objects"
 msgstr ""
 
-#: builtin/pack-objects.c:2651
+#: builtin/pack-objects.c:2649
 msgid "use OFS_DELTA objects"
 msgstr ""
 
-#: builtin/pack-objects.c:2653
+#: builtin/pack-objects.c:2651
 msgid "use threads when searching for best delta matches"
 msgstr ""
 
-#: builtin/pack-objects.c:2655
+#: builtin/pack-objects.c:2653
 msgid "do not create an empty pack output"
 msgstr ""
 
-#: builtin/pack-objects.c:2657
+#: builtin/pack-objects.c:2655
 msgid "read revision arguments from standard input"
 msgstr ""
 
-#: builtin/pack-objects.c:2659
+#: builtin/pack-objects.c:2657
 msgid "limit the objects to those that are not yet packed"
 msgstr ""
 
-#: builtin/pack-objects.c:2662
+#: builtin/pack-objects.c:2660
 msgid "include objects reachable from any reference"
 msgstr ""
 
-#: builtin/pack-objects.c:2665
+#: builtin/pack-objects.c:2663
 msgid "include objects referred by reflog entries"
 msgstr ""
 
-#: builtin/pack-objects.c:2668
+#: builtin/pack-objects.c:2666
 msgid "include objects referred to by the index"
 msgstr ""
 
-#: builtin/pack-objects.c:2671
+#: builtin/pack-objects.c:2669
 msgid "output pack to stdout"
 msgstr ""
 
-#: builtin/pack-objects.c:2673
+#: builtin/pack-objects.c:2671
 msgid "include tag objects that refer to objects to be packed"
 msgstr ""
 
-#: builtin/pack-objects.c:2675
+#: builtin/pack-objects.c:2673
 msgid "keep unreachable objects"
 msgstr ""
 
-#: builtin/pack-objects.c:2676 parse-options.h:140
+#: builtin/pack-objects.c:2674 parse-options.h:140
 msgid "time"
 msgstr ""
 
-#: builtin/pack-objects.c:2677
+#: builtin/pack-objects.c:2675
 msgid "unpack unreachable objects newer than <time>"
 msgstr ""
 
-#: builtin/pack-objects.c:2680
+#: builtin/pack-objects.c:2678
 msgid "create thin packs"
 msgstr ""
 
-#: builtin/pack-objects.c:2682
+#: builtin/pack-objects.c:2680
 msgid "create packs suitable for shallow fetches"
 msgstr ""
 
-#: builtin/pack-objects.c:2684
+#: builtin/pack-objects.c:2682
 msgid "ignore packs that have companion .keep file"
 msgstr ""
 
-#: builtin/pack-objects.c:2686
+#: builtin/pack-objects.c:2684
 msgid "pack compression level"
 msgstr ""
 
-#: builtin/pack-objects.c:2688
+#: builtin/pack-objects.c:2686
 msgid "do not hide commits by grafts"
 msgstr ""
 
-#: builtin/pack-objects.c:2690
+#: builtin/pack-objects.c:2688
 msgid "use a bitmap index if available to speed up counting objects"
 msgstr ""
 
-#: builtin/pack-objects.c:2692
+#: builtin/pack-objects.c:2690
 msgid "write a bitmap index together with the pack index"
 msgstr ""
 
-#: builtin/pack-objects.c:2783
+#: builtin/pack-objects.c:2781
 msgid "Counting objects"
 msgstr ""
 
 #: builtin/pack-refs.c:6
-msgid "git pack-refs [options]"
+msgid "git pack-refs [<options>]"
 msgstr ""
 
 #: builtin/pack-refs.c:14
 msgid "pack everything"
 msgstr ""
 
 #: builtin/pack-refs.c:15
 msgid "prune loose refs (default)"
 msgstr ""
 
 #: builtin/prune-packed.c:7
-msgid "git prune-packed [-n|--dry-run] [-q|--quiet]"
+msgid "git prune-packed [-n | --dry-run] [-q | --quiet]"
 msgstr ""
 
 #: builtin/prune-packed.c:40
 msgid "Removing duplicate objects"
 msgstr ""
 
@@ -7849,81 +7883,85 @@
 msgstr ""
 
 #: builtin/push.c:422
 msgid "--all and --mirror are incompatible"
 msgstr ""
 
-#: builtin/push.c:493
+#: builtin/push.c:502
 msgid "repository"
 msgstr ""
 
-#: builtin/push.c:494
+#: builtin/push.c:503
 msgid "push all refs"
 msgstr ""
 
-#: builtin/push.c:495
+#: builtin/push.c:504
 msgid "mirror all refs"
 msgstr ""
 
-#: builtin/push.c:497
+#: builtin/push.c:506
 msgid "delete refs"
 msgstr ""
 
-#: builtin/push.c:498
+#: builtin/push.c:507
 msgid "push tags (can't be used with --all or --mirror)"
 msgstr ""
 
-#: builtin/push.c:501
+#: builtin/push.c:510
 msgid "force updates"
 msgstr ""
 
-#: builtin/push.c:503
+#: builtin/push.c:512
 msgid "refname>:<expect"
 msgstr ""
 
-#: builtin/push.c:504
+#: builtin/push.c:513
 msgid "require old value of ref to be at this value"
 msgstr ""
 
-#: builtin/push.c:507
+#: builtin/push.c:516
 msgid "control recursive pushing of submodules"
 msgstr ""
 
-#: builtin/push.c:509
+#: builtin/push.c:518
 msgid "use thin pack"
 msgstr ""
 
-#: builtin/push.c:510 builtin/push.c:511
+#: builtin/push.c:519 builtin/push.c:520
 msgid "receive pack program"
 msgstr ""
 
-#: builtin/push.c:512
+#: builtin/push.c:521
 msgid "set upstream for git pull/status"
 msgstr ""
 
-#: builtin/push.c:515
+#: builtin/push.c:524
 msgid "prune locally removed refs"
 msgstr ""
 
-#: builtin/push.c:517
+#: builtin/push.c:526
 msgid "bypass pre-push hook"
 msgstr ""
 
-#: builtin/push.c:518
+#: builtin/push.c:527
 msgid "push missing but relevant tags"
 msgstr ""
 
-#: builtin/push.c:520
+#: builtin/push.c:529
 msgid "GPG sign the push"
 msgstr ""
 
-#: builtin/push.c:529
+#: builtin/push.c:530
+msgid "request atomic transaction on remote side"
+msgstr ""
+
+#: builtin/push.c:539
 msgid "--delete is incompatible with --all, --mirror and --tags"
 msgstr ""
 
-#: builtin/push.c:531
+#: builtin/push.c:541
 msgid "--delete doesn't make sense without any refs"
 msgstr ""
 
 #: builtin/read-tree.c:37
 msgid ""
 "git read-tree [[-m [--trivial] [--aggressive] | --reset | --prefix=<prefix>] "
@@ -7992,42 +8030,42 @@
 msgstr ""
 
 #: builtin/read-tree.c:139
 msgid "debug unpack-trees"
 msgstr ""
 
-#: builtin/reflog.c:499
+#: builtin/reflog.c:429
 #, c-format
 msgid "%s' for '%s' is not a valid timestamp"
 msgstr ""
 
-#: builtin/reflog.c:615 builtin/reflog.c:620
+#: builtin/reflog.c:546 builtin/reflog.c:551
 #, c-format
 msgid "'%s' is not a valid timestamp"
 msgstr ""
 
 #: builtin/remote.c:12
 msgid "git remote [-v | --verbose]"
 msgstr ""
 
 #: builtin/remote.c:13
 msgid ""
-"git remote add [-t <branch>] [-m <master>] [-f] [--tags|--no-tags] [--"
+"git remote add [-t <branch>] [-m <master>] [-f] [--tags | --no-tags] [--"
 "mirror=<fetch|push>] <name> <url>"
 msgstr ""
 
 #: builtin/remote.c:14 builtin/remote.c:33
 msgid "git remote rename <old> <new>"
 msgstr ""
 
 #: builtin/remote.c:15 builtin/remote.c:38
 msgid "git remote remove <name>"
 msgstr ""
 
-#: builtin/remote.c:16
-msgid "git remote set-head <name> (-a | --auto | -d | --delete |<branch>)"
+#: builtin/remote.c:16 builtin/remote.c:43
+msgid "git remote set-head <name> (-a | --auto | -d | --delete | <branch>)"
 msgstr ""
 
 #: builtin/remote.c:17
 msgid "git remote [-v | --verbose] show [-n] <name>"
 msgstr ""
 
@@ -8057,16 +8095,12 @@
 msgstr ""
 
 #: builtin/remote.c:28
 msgid "git remote add [<options>] <name> <url>"
 msgstr ""
 
-#: builtin/remote.c:43
-msgid "git remote set-head <name> (-a | --auto | -d | --delete | <branch>)"
-msgstr ""
-
 #: builtin/remote.c:48
 msgid "git remote set-branches <name> <branch>..."
 msgstr ""
 
 #: builtin/remote.c:49
 msgid "git remote set-branches --add <name> <branch>..."
@@ -8484,13 +8518,13 @@
 
 #: builtin/remote.c:1592
 msgid "be verbose; must be placed before a subcommand"
 msgstr ""
 
 #: builtin/repack.c:17
-msgid "git repack [options]"
+msgid "git repack [<options>]"
 msgstr ""
 
 #: builtin/repack.c:159
 msgid "pack everything in a single pack"
 msgstr ""
 
@@ -8551,13 +8585,13 @@
 msgstr ""
 
 #: builtin/repack.c:187
 msgid "repack objects in packs marked with .keep"
 msgstr ""
 
-#: builtin/repack.c:371
+#: builtin/repack.c:375
 #, c-format
 msgid "removing '%s' failed"
 msgstr ""
 
 #: builtin/replace.c:19
 msgid "git replace [-f] <object> <replacement>"
@@ -8641,13 +8675,13 @@
 
 #: builtin/replace.c:438
 msgid "use this format"
 msgstr ""
 
 #: builtin/rerere.c:12
-msgid "git rerere [clear | forget path... | status | remaining | diff | gc]"
+msgid "git rerere [clear | forget <path>... | status | remaining | diff | gc]"
 msgstr ""
 
 #: builtin/rerere.c:57
 msgid "register clean resolutions in index"
 msgstr ""
 
@@ -8779,13 +8813,13 @@
 
 #: builtin/reset.c:374
 msgid "Could not write new index file."
 msgstr ""
 
 #: builtin/rev-parse.c:361
-msgid "git rev-parse --parseopt [options] -- [<args>...]"
+msgid "git rev-parse --parseopt [<options>] -- [<args>...]"
 msgstr ""
 
 #: builtin/rev-parse.c:366
 msgid "keep the `--` passed as an arg"
 msgstr ""
 
@@ -8796,29 +8830,29 @@
 #: builtin/rev-parse.c:371
 msgid "output in stuck long form"
 msgstr ""
 
 #: builtin/rev-parse.c:499
 msgid ""
-"git rev-parse --parseopt [options] -- [<args>...]\n"
+"git rev-parse --parseopt [<options>] -- [<args>...]\n"
 "   or: git rev-parse --sq-quote [<arg>...]\n"
-"   or: git rev-parse [options] [<arg>...]\n"
+"   or: git rev-parse [<options>] [<arg>...]\n"
 "\n"
 "Run \"git rev-parse --parseopt -h\" for more information on the first usage."
 msgstr ""
 
 #: builtin/revert.c:22
-msgid "git revert [options] <commit-ish>..."
+msgid "git revert [<options>] <commit-ish>..."
 msgstr ""
 
 #: builtin/revert.c:23
 msgid "git revert <subcommand>"
 msgstr ""
 
 #: builtin/revert.c:28
-msgid "git cherry-pick [options] <commit-ish>..."
+msgid "git cherry-pick [<options>] <commit-ish>..."
 msgstr ""
 
 #: builtin/revert.c:29
 msgid "git cherry-pick <subcommand>"
 msgstr ""
 
@@ -8893,13 +8927,13 @@
 
 #: builtin/revert.c:212
 msgid "cherry-pick failed"
 msgstr ""
 
 #: builtin/rm.c:17
-msgid "git rm [options] [--] <file>..."
+msgid "git rm [<options>] [--] <file>..."
 msgstr ""
 
 #: builtin/rm.c:65
 msgid ""
 "the following submodule (or one of its nested submodules)\n"
 "uses a .git directory:"
@@ -8981,13 +9015,13 @@
 #: builtin/rm.c:375
 #, c-format
 msgid "git rm: unable to remove %s"
 msgstr ""
 
 #: builtin/shortlog.c:13
-msgid "git shortlog [<options>] [<revision range>] [[--] [<path>...]]"
+msgid "git shortlog [<options>] [<revision-range>] [[--] [<path>...]]"
 msgstr ""
 
 #: builtin/shortlog.c:131
 #, c-format
 msgid "Missing author: %s"
 msgstr ""
@@ -9011,20 +9045,20 @@
 #: builtin/shortlog.c:236
 msgid "Linewrap output"
 msgstr ""
 
 #: builtin/show-branch.c:9
 msgid ""
-"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
+"git show-branch [-a | --all] [-r | --remotes] [--topo-order | --date-order]\n"
 "\t\t[--current] [--color[=<when>] | --no-color] [--sparse]\n"
 "\t\t[--more=<n> | --list | --independent | --merge-base]\n"
 "\t\t[--no-name | --sha1-name] [--topics] [(<rev> | <glob>)...]"
 msgstr ""
 
 #: builtin/show-branch.c:13
-msgid "git show-branch (-g|--reflog)[=<n>[,<base>]] [--list] [<ref>]"
+msgid "git show-branch (-g | --reflog)[=<n>[,<base>]] [--list] [<ref>]"
 msgstr ""
 
 #: builtin/show-branch.c:652
 msgid "show remote-tracking and local branches"
 msgstr ""
 
@@ -9087,14 +9121,14 @@
 #: builtin/show-branch.c:682
 msgid "show <n> most recent ref-log entries starting at base"
 msgstr ""
 
 #: builtin/show-ref.c:10
 msgid ""
-"git show-ref [-q|--quiet] [--verify] [--head] [-d|--dereference] [-s|--"
-"hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [pattern*] "
+"git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | --"
+"hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<pattern>...]"
 msgstr ""
 
 #: builtin/show-ref.c:11
 msgid "git show-ref --exclude-existing[=pattern] < ref-list"
 msgstr ""
 
@@ -9128,17 +9162,17 @@
 
 #: builtin/show-ref.c:185
 msgid "show refs from stdin that aren't in local repository"
 msgstr ""
 
 #: builtin/symbolic-ref.c:7
-msgid "git symbolic-ref [options] name [ref]"
+msgid "git symbolic-ref [<options>] <name> [<ref>]"
 msgstr ""
 
 #: builtin/symbolic-ref.c:8
-msgid "git symbolic-ref -d [-q] name"
+msgid "git symbolic-ref -d [-q] <name>"
 msgstr ""
 
 #: builtin/symbolic-ref.c:40
 msgid "suppress error message for non-symbolic (detached) refs"
 msgstr ""
 
@@ -9157,22 +9191,23 @@
 #: builtin/symbolic-ref.c:43 builtin/update-ref.c:358
 msgid "reason of the update"
 msgstr ""
 
 #: builtin/tag.c:22
 msgid ""
-"git tag [-a|-s|-u <key-id>] [-f] [-m <msg>|-F <file>] <tagname> [<head>]"
+"git tag [-a | -s | -u <key-id>] [-f] [-m <msg> | -F <file>] <tagname> "
+"[<head>]"
 msgstr ""
 
 #: builtin/tag.c:23
 msgid "git tag -d <tagname>..."
 msgstr ""
 
 #: builtin/tag.c:24
 msgid ""
-"git tag -l [-n[<num>]] [--contains <commit>] [--points-at <object>] \n"
+"git tag -l [-n[<num>]] [--contains <commit>] [--points-at <object>]\n"
 "\t\t[<pattern>...]"
 msgstr ""
 
 #: builtin/tag.c:26
 msgid "git tag -v <tagname>..."
 msgstr ""
@@ -9302,22 +9337,22 @@
 msgstr ""
 
 #: builtin/tag.c:607
 msgid "replace the tag if exists"
 msgstr ""
 
-#: builtin/tag.c:608
-msgid "show tag list in columns"
+#: builtin/tag.c:609
+msgid "Tag listing options"
 msgstr ""
 
 #: builtin/tag.c:610
-msgid "sort tags"
+msgid "show tag list in columns"
 msgstr ""
 
-#: builtin/tag.c:614
-msgid "Tag listing options"
+#: builtin/tag.c:612
+msgid "sort tags"
 msgstr ""
 
 #: builtin/tag.c:617 builtin/tag.c:623
 msgid "print only tags that contain the commit"
 msgstr ""
 
@@ -9370,137 +9405,137 @@
 
 #: builtin/unpack-objects.c:489
 msgid "Unpacking objects"
 msgstr ""
 
 #: builtin/update-index.c:403
-msgid "git update-index [options] [--] [<file>...]"
+msgid "git update-index [<options>] [--] [<file>...]"
 msgstr ""
 
-#: builtin/update-index.c:756
+#: builtin/update-index.c:757
 msgid "continue refresh even when index needs update"
 msgstr ""
 
-#: builtin/update-index.c:759
+#: builtin/update-index.c:760
 msgid "refresh: ignore submodules"
 msgstr ""
 
-#: builtin/update-index.c:762
+#: builtin/update-index.c:763
 msgid "do not ignore new files"
 msgstr ""
 
-#: builtin/update-index.c:764
+#: builtin/update-index.c:765
 msgid "let files replace directories and vice-versa"
 msgstr ""
 
-#: builtin/update-index.c:766
+#: builtin/update-index.c:767
 msgid "notice files missing from worktree"
 msgstr ""
 
-#: builtin/update-index.c:768
+#: builtin/update-index.c:769
 msgid "refresh even if index contains unmerged entries"
 msgstr ""
 
-#: builtin/update-index.c:771
+#: builtin/update-index.c:772
 msgid "refresh stat information"
 msgstr ""
 
-#: builtin/update-index.c:775
+#: builtin/update-index.c:776
 msgid "like --refresh, but ignore assume-unchanged setting"
 msgstr ""
 
-#: builtin/update-index.c:779
+#: builtin/update-index.c:780
 msgid "<mode>,<object>,<path>"
 msgstr ""
 
-#: builtin/update-index.c:780
+#: builtin/update-index.c:781
 msgid "add the specified entry to the index"
 msgstr ""
 
-#: builtin/update-index.c:784
+#: builtin/update-index.c:785
 msgid "(+/-)x"
 msgstr ""
 
-#: builtin/update-index.c:785
+#: builtin/update-index.c:786
 msgid "override the executable bit of the listed files"
 msgstr ""
 
-#: builtin/update-index.c:789
+#: builtin/update-index.c:790
 msgid "mark files as \"not changing\""
 msgstr ""
 
-#: builtin/update-index.c:792
+#: builtin/update-index.c:793
 msgid "clear assumed-unchanged bit"
 msgstr ""
 
-#: builtin/update-index.c:795
+#: builtin/update-index.c:796
 msgid "mark files as \"index-only\""
 msgstr ""
 
-#: builtin/update-index.c:798
+#: builtin/update-index.c:799
 msgid "clear skip-worktree bit"
 msgstr ""
 
-#: builtin/update-index.c:801
+#: builtin/update-index.c:802
 msgid "add to index only; do not add content to object database"
 msgstr ""
 
-#: builtin/update-index.c:803
+#: builtin/update-index.c:804
 msgid "remove named paths even if present in worktree"
 msgstr ""
 
-#: builtin/update-index.c:805
+#: builtin/update-index.c:806
 msgid "with --stdin: input lines are terminated by null bytes"
 msgstr ""
 
-#: builtin/update-index.c:807
+#: builtin/update-index.c:808
 msgid "read list of paths to be updated from standard input"
 msgstr ""
 
-#: builtin/update-index.c:811
+#: builtin/update-index.c:812
 msgid "add entries from standard input to the index"
 msgstr ""
 
-#: builtin/update-index.c:815
+#: builtin/update-index.c:816
 msgid "repopulate stages #2 and #3 for the listed paths"
 msgstr ""
 
-#: builtin/update-index.c:819
+#: builtin/update-index.c:820
 msgid "only update entries that differ from HEAD"
 msgstr ""
 
-#: builtin/update-index.c:823
+#: builtin/update-index.c:824
 msgid "ignore files missing from worktree"
 msgstr ""
 
-#: builtin/update-index.c:826
+#: builtin/update-index.c:827
 msgid "report actions to standard output"
 msgstr ""
 
-#: builtin/update-index.c:828
+#: builtin/update-index.c:829
 msgid "(for porcelains) forget saved unresolved conflicts"
 msgstr ""
 
-#: builtin/update-index.c:832
+#: builtin/update-index.c:833
 msgid "write index in this format"
 msgstr ""
 
-#: builtin/update-index.c:834
+#: builtin/update-index.c:835
 msgid "enable or disable split index"
 msgstr ""
 
 #: builtin/update-ref.c:9
-msgid "git update-ref [options] -d <refname> [<oldval>]"
+msgid "git update-ref [<options>] -d <refname> [<old-val>]"
 msgstr ""
 
 #: builtin/update-ref.c:10
-msgid "git update-ref [options]    <refname> <newval> [<oldval>]"
+msgid "git update-ref [<options>]    <refname> <new-val> [<old-val>]"
 msgstr ""
 
 #: builtin/update-ref.c:11
-msgid "git update-ref [options] --stdin [-z]"
+msgid "git update-ref [<options>] --stdin [-z]"
 msgstr ""
 
 #: builtin/update-ref.c:359
 msgid "delete the reference"
 msgstr ""
 
@@ -9522,33 +9557,33 @@
 
 #: builtin/update-server-info.c:14
 msgid "update the info files from scratch"
 msgstr ""
 
 #: builtin/verify-commit.c:17
-msgid "git verify-commit [-v|--verbose] <commit>..."
+msgid "git verify-commit [-v | --verbose] <commit>..."
 msgstr ""
 
 #: builtin/verify-commit.c:75
 msgid "print commit contents"
 msgstr ""
 
 #: builtin/verify-pack.c:54
-msgid "git verify-pack [-v|--verbose] [-s|--stat-only] <pack>..."
+msgid "git verify-pack [-v | --verbose] [-s | --stat-only] <pack>..."
 msgstr ""
 
 #: builtin/verify-pack.c:64
 msgid "verbose"
 msgstr ""
 
 #: builtin/verify-pack.c:66
 msgid "show statistics only"
 msgstr ""
 
 #: builtin/verify-tag.c:17
-msgid "git verify-tag [-v|--verbose] <tag>..."
+msgid "git verify-tag [-v | --verbose] <tag>..."
 msgstr ""
 
 #: builtin/verify-tag.c:73
 msgid "print tag contents"
 msgstr ""
 
@@ -9865,13 +9900,13 @@
 msgid "Bad HEAD - I need a HEAD"
 msgstr ""
 
 #: git-bisect.sh:130
 #, sh-format
 msgid ""
-"Checking out '$start_head' failed. Try 'git bisect reset <validbranch>'."
+"Checking out '$start_head' failed. Try 'git bisect reset <valid-branch>'."
 msgstr ""
 
 #: git-bisect.sh:140
 msgid "won't bisect on cg-seek'ed tree"
 msgstr ""
 
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po: ru.po
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/sv.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/sv.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/sv.po	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/sv.po	2015-05-01 03:12:02.000000000 +0800
@@ -2,23 +2,24 @@
 # Copyright (C) 2010-2015 Peter krefting <peter@softwolves.pp.se>
 # This file is distributed under the same license as the Git package.
 # Peter Krefting <peter@softwolves.pp.se>, 2010, 2011, 2012, 2013, 2014, 2015.
 #
 msgid ""
 msgstr ""
-"Project-Id-Version: git 2.0.0\n"
+"Project-Id-Version: git 2.4.0\n"
 "Report-Msgid-Bugs-To: Git Mailing List <git@vger.kernel.org>\n"
-"POT-Creation-Date: 2015-01-21 14:21+0800\n"
-"PO-Revision-Date: 2015-01-21 14:57+0800\n"
+"POT-Creation-Date: 2015-04-03 08:13+0800\n"
+"PO-Revision-Date: 2015-04-07 08:44+0100\n"
 "Last-Translator: Peter Krefting <peter@softwolves.pp.se>\n"
 "Language-Team: Swedish <tp-sv@listor.tp-sv.se>\n"
 "Language: sv\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
 "Plural-Forms: nplurals=2; plural=(n != 1);\n"
+"X-Generator: Gtranslator 2.91.6\n"
 
 #: advice.c:55
 #, c-format
 msgid "hint: %.*s\n"
 msgstr "tips: %.*s\n"
 
@@ -28,24 +29,24 @@
 "as appropriate to mark resolution and make a commit."
 msgstr ""
 "Rätta dem i din arbetskatalog och använd sedan \"git add/rm <fil>\"\n"
 "som lämpligt för att ange lösning och checka in."
 
 #: archive.c:11
-msgid "git archive [options] <tree-ish> [<path>...]"
-msgstr "git archive [flaggor] <träd-igt> [<sökväg>...]"
+msgid "git archive [<options>] <tree-ish> [<path>...]"
+msgstr "git archive [<flaggor>] <träd-igt> [<sökväg>...]"
 
 #: archive.c:12
 msgid "git archive --list"
 msgstr "git archive --list"
 
 #: archive.c:13
 msgid ""
-"git archive --remote <repo> [--exec <cmd>] [options] <tree-ish> [<path>...]"
+"git archive --remote <repo> [--exec <cmd>] [<options>] <tree-ish> [<path>...]"
 msgstr ""
-"git archive --remote <arkiv> [--exec <kmd>] [flaggor] <träd-igt> "
+"git archive --remote <arkiv> [--exec <kmd>] [<flaggor>] <träd-igt> "
 "[<sökväg>...]"
 
 #: archive.c:14
 msgid "git archive --remote <repo> [--exec <cmd>] --list"
 msgstr "git archive --remote <arkiv> [--exec <kmd>] --list"
 
@@ -67,16 +68,16 @@
 msgstr "prefix"
 
 #: archive.c:429
 msgid "prepend prefix to each pathname in the archive"
 msgstr "lägg till prefix till varje sökväg i arkivet"
 
-#: archive.c:430 builtin/archive.c:88 builtin/blame.c:2517
-#: builtin/blame.c:2518 builtin/config.c:57 builtin/fast-export.c:986
+#: archive.c:430 builtin/archive.c:88 builtin/blame.c:2516
+#: builtin/blame.c:2517 builtin/config.c:57 builtin/fast-export.c:986
 #: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:101
-#: builtin/ls-files.c:489 builtin/ls-files.c:492 builtin/notes.c:394
+#: builtin/ls-files.c:446 builtin/ls-files.c:449 builtin/notes.c:394
 #: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:151
 msgid "file"
 msgstr "fil"
 
 #: archive.c:431 builtin/archive.c:89
 msgid "write the archive to this file"
@@ -119,13 +120,13 @@
 msgstr "kommando"
 
 #: archive.c:452 builtin/archive.c:93
 msgid "path to the remote git-upload-archive command"
 msgstr "sökväg till kommandot git-upload-archive på fjärren"
 
-#: attr.c:258
+#: attr.c:264
 msgid ""
 "Negative patterns are ignored in git attributes\n"
 "Use '\\!' for literal leading exclamation."
 msgstr ""
 "Negativa mönster ignoreras i git-attribut\n"
 "Använd '\\!' för att inleda med ett utropstecken."
@@ -248,23 +249,23 @@
 
 #: bundle.c:61
 #, c-format
 msgid "unrecognized header: %s%s (%d)"
 msgstr "okänt huvud: %s%s (%d)"
 
-#: bundle.c:87 builtin/commit.c:770
+#: bundle.c:87 builtin/commit.c:766
 #, c-format
 msgid "could not open '%s'"
 msgstr "kunde inte öppna \"%s\""
 
 #: bundle.c:139
 msgid "Repository lacks these prerequisite commits:"
 msgstr "Arkivet saknar dessa nödvändiga incheckningar:"
 
-#: bundle.c:163 sequencer.c:645 sequencer.c:1100 builtin/blame.c:2706
-#: builtin/branch.c:652 builtin/commit.c:1049 builtin/log.c:330
+#: bundle.c:163 sequencer.c:650 sequencer.c:1105 builtin/blame.c:2705
+#: builtin/branch.c:659 builtin/commit.c:1045 builtin/log.c:330
 #: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:358
 #: builtin/shortlog.c:158
 msgid "revision walk setup failed"
 msgstr "misslyckades skapa revisionstraversering"
 
 #: bundle.c:185
@@ -299,27 +300,27 @@
 
 #: bundle.c:358
 #, c-format
 msgid "ref '%s' is excluded by the rev-list options"
 msgstr "referensen \"%s\" exkluderas av argumenten till rev-list"
 
-#: bundle.c:438 builtin/log.c:153 builtin/log.c:1342 builtin/shortlog.c:261
+#: bundle.c:437 builtin/log.c:153 builtin/log.c:1342 builtin/shortlog.c:261
 #, c-format
 msgid "unrecognized argument: %s"
 msgstr "okänt argument: %s"
 
-#: bundle.c:444
+#: bundle.c:443
 msgid "Refusing to create empty bundle."
 msgstr "Vägrar skapa ett tomt paket (bundle)."
 
-#: bundle.c:454
+#: bundle.c:453
 #, c-format
 msgid "cannot create '%s'"
 msgstr "kan inte skapa \"%s\""
 
-#: bundle.c:475
+#: bundle.c:474
 msgid "index-pack died"
 msgstr "index-pack dog"
 
 #: color.c:260
 #, c-format
 msgid "invalid color value: %.*s"
@@ -336,61 +337,61 @@
 msgstr "%s %s är inte en incheckning!"
 
 #: compat/obstack.c:406 compat/obstack.c:408
 msgid "memory exhausted"
 msgstr "minnet slut"
 
-#: config.c:469 config.c:471
+#: config.c:474 config.c:476
 #, c-format
 msgid "bad config file line %d in %s"
 msgstr "felaktig konfigurationsfil rad %d i %s"
 
-#: config.c:587
+#: config.c:592
 #, c-format
 msgid "bad numeric config value '%s' for '%s' in %s: %s"
 msgstr "felaktigt numeriskt konfigurationsvärde \"%s\" för \"%s\" i %s: %s"
 
-#: config.c:589
+#: config.c:594
 #, c-format
 msgid "bad numeric config value '%s' for '%s': %s"
 msgstr "felaktigt numeriskt konfigurationsvärde \"%s\" för \"%s\": %s"
 
-#: config.c:674
+#: config.c:679
 #, c-format
 msgid "failed to expand user dir in: '%s'"
 msgstr "misslyckades expandera användarkatalog i: \"%s\""
 
-#: config.c:752 config.c:763
+#: config.c:757 config.c:768
 #, c-format
 msgid "bad zlib compression level %d"
 msgstr "felaktigt zlib-komprimeringsgrad %d"
 
-#: config.c:885
+#: config.c:890
 #, c-format
 msgid "invalid mode for object creation: %s"
 msgstr "felaktigt läge för skapande av objekt: %s"
 
-#: config.c:1211
+#: config.c:1216
 msgid "unable to parse command-line config"
 msgstr "kan inte tolka kommandoradskonfiguration"
 
-#: config.c:1272
+#: config.c:1277
 msgid "unknown error occured while reading the configuration files"
 msgstr "okänt fel uppstod vid läsning av konfigurationsfilerna"
 
-#: config.c:1596
+#: config.c:1601
 #, c-format
 msgid "unable to parse '%s' from command-line config"
 msgstr "kunde inte tolka värdet \"%s\" från kommandoradskonfiguration"
 
-#: config.c:1598
+#: config.c:1603
 #, c-format
 msgid "bad config variable '%s' in file '%s' at line %d"
 msgstr "felaktig konfigurationsvariabel \"%s\" i filen \"%s\" på rad %d"
 
-#: config.c:1657
+#: config.c:1662
 #, c-format
 msgid "%s has multiple values"
 msgstr "%s har flera värden"
 
 #: connected.c:69
 msgid "Could not run 'git rev-list'"
@@ -476,13 +477,13 @@
 
 #: diffcore-order.c:24
 #, c-format
 msgid "failed to read orderfile '%s'"
 msgstr "kunde inte läsa orderfilen \"%s\""
 
-#: diffcore-rename.c:516
+#: diffcore-rename.c:536
 msgid "Performing inexact rename detection"
 msgstr "Utför onöjaktig namnbytesdetektering"
 
 #: diff.c:114
 #, c-format
 msgid "  Failed to parse dirstat cut-off percentage '%s'\n"
@@ -504,31 +505,31 @@
 "Found errors in 'diff.dirstat' config variable:\n"
 "%s"
 msgstr ""
 "Hittade fel i konfigurationsvariabeln \"diff.dirstat\":\n"
 "%s"
 
-#: diff.c:2957
+#: diff.c:2956
 #, c-format
 msgid "external diff died, stopping at %s"
 msgstr "extern diff dog, stannar vid %s"
 
-#: diff.c:3352
+#: diff.c:3351
 msgid "--follow requires exactly one pathspec"
 msgstr "--follow kräver exakt en sökvägsangivelse"
 
-#: diff.c:3515
+#: diff.c:3514
 #, c-format
 msgid ""
 "Failed to parse --dirstat/-X option parameter:\n"
 "%s"
 msgstr ""
 "Misslyckades tolka argument till flaggan --dirstat/-X;\n"
 "%s"
 
-#: diff.c:3529
+#: diff.c:3528
 #, c-format
 msgid "Failed to parse --submodule option parameter: '%s'"
 msgstr "Misslyckades tolka argument till flaggan --submodule: \"%s\""
 
 #: gpg-interface.c:129 gpg-interface.c:200
 msgid "could not run gpg."
@@ -873,33 +874,33 @@
 
 #: merge-recursive.c:1853
 #, c-format
 msgid "Unprocessed path??? %s"
 msgstr "Obehandlad sökväg??? %s"
 
-#: merge-recursive.c:1898
+#: merge-recursive.c:1901
 msgid "Merging:"
 msgstr "Slår ihop:"
 
-#: merge-recursive.c:1911
+#: merge-recursive.c:1914
 #, c-format
 msgid "found %u common ancestor:"
 msgid_plural "found %u common ancestors:"
 msgstr[0] "hittade %u gemensam förfader:"
 msgstr[1] "hittade %u gemensamma förfäder:"
 
-#: merge-recursive.c:1948
+#: merge-recursive.c:1951
 msgid "merge returned no commit"
 msgstr "sammanslagningen returnerade ingen incheckning"
 
-#: merge-recursive.c:2005
+#: merge-recursive.c:2008
 #, c-format
 msgid "Could not parse object '%s'"
 msgstr "Kunde inte tolka objektet \"%s\""
 
-#: merge-recursive.c:2016 builtin/merge.c:667
+#: merge-recursive.c:2019 builtin/merge.c:667
 msgid "Unable to write index."
 msgstr "Kunde inte skriva indexet."
 
 #: notes-utils.c:41
 msgid "Cannot commit uninitialized/unreferenced notes tree"
 msgstr "Kan inte checka in oinitierat/orefererat anteckningsträd"
@@ -1021,22 +1022,22 @@
 msgstr "kunde inte tolka format för --pretty"
 
 #: progress.c:225
 msgid "done"
 msgstr "klart"
 
-#: read-cache.c:1267
+#: read-cache.c:1275
 #, c-format
 msgid ""
 "index.version set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "index.version satt, men värdet är ogiltigt.\n"
 "Använder version %i"
 
-#: read-cache.c:1277
+#: read-cache.c:1285
 #, c-format
 msgid ""
 "GIT_INDEX_VERSION set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "GIT_INDEX_VERSION satt, men värdet är ogiltigt.\n"
@@ -1116,29 +1117,37 @@
 "och har %d respektive %d olika incheckningar.\n"
 
 #: remote.c:2021
 msgid "  (use \"git pull\" to merge the remote branch into yours)\n"
 msgstr "  (använd \"git pull\" för att slå ihop fjärrgrenen med din egen)\n"
 
-#: run-command.c:87
+#: revision.c:2348
+msgid "--first-parent is incompatible with --bisect"
+msgstr "--first-parent är inkompatibelt med --bisect"
+
+#: run-command.c:83
 msgid "open /dev/null failed"
 msgstr "misslyckades öppna /dev/null"
 
-#: run-command.c:89
+#: run-command.c:85
 #, c-format
 msgid "dup2(%d,%d) failed"
 msgstr "dup2(%d,%d) misslyckades"
 
-#: send-pack.c:268
+#: send-pack.c:272
 msgid "failed to sign the push certificate"
 msgstr "misslyckades underteckna push-certifikatet"
 
-#: send-pack.c:325
+#: send-pack.c:356
 msgid "the receiving end does not support --signed push"
 msgstr "mottagarsidan stöder inte push med --signed"
 
+#: send-pack.c:366
+msgid "the receiving end does not support --atomic push"
+msgstr "mottagarsidan stöder inte push med --atomic"
+
 #: sequencer.c:172 builtin/merge.c:782 builtin/merge.c:893 builtin/merge.c:995
 #: builtin/merge.c:1005
 #, c-format
 msgid "Could not open '%s' for writing"
 msgstr "Kunde inte öppna \"%s\" för skrivning"
 
@@ -1163,13 +1172,13 @@
 "and commit the result with 'git commit'"
 msgstr ""
 "efter att ha löst konflikterna, markera de rättade sökvägarna\n"
 "med \"git add <sökvägar>\" eller \"git rm <sökvägar>\"\n"
 "och checka in resultatet med \"git commit\""
 
-#: sequencer.c:211 sequencer.c:856 sequencer.c:939
+#: sequencer.c:211 sequencer.c:861 sequencer.c:944
 #, c-format
 msgid "Could not write to %s"
 msgstr "Kunde inte skriva till %s"
 
 #: sequencer.c:214
 #, c-format
@@ -1199,190 +1208,190 @@
 msgstr "Kunde inte bestämma HEAD:s incheckning\n"
 
 #: sequencer.c:359
 msgid "Unable to update cache tree\n"
 msgstr "Kan inte uppdatera cacheträd\n"
 
-#: sequencer.c:406
+#: sequencer.c:411
 #, c-format
 msgid "Could not parse commit %s\n"
 msgstr "Kunde inte tolka incheckningen %s\n"
 
-#: sequencer.c:411
+#: sequencer.c:416
 #, c-format
 msgid "Could not parse parent commit %s\n"
 msgstr "Kunde inte tolka föräldraincheckningen %s\n"
 
-#: sequencer.c:477
+#: sequencer.c:482
 msgid "Your index file is unmerged."
 msgstr "Din indexfil har inte slagits ihop."
 
-#: sequencer.c:496
+#: sequencer.c:501
 #, c-format
 msgid "Commit %s is a merge but no -m option was given."
 msgstr "Incheckning %s är en sammanslagning, men flaggan -m angavs inte."
 
-#: sequencer.c:504
+#: sequencer.c:509
 #, c-format
 msgid "Commit %s does not have parent %d"
 msgstr "Incheckning %s har inte förälder %d"
 
-#: sequencer.c:508
+#: sequencer.c:513
 #, c-format
 msgid "Mainline was specified but commit %s is not a merge."
 msgstr "Huvudlinje angavs, men incheckningen %s är inte en sammanslagning"
 
 #. TRANSLATORS: The first %s will be "revert" or
 #. "cherry-pick", the second %s a SHA1
-#: sequencer.c:521
+#: sequencer.c:526
 #, c-format
 msgid "%s: cannot parse parent commit %s"
 msgstr "%s: kan inte tolka föräldraincheckningen %s"
 
-#: sequencer.c:525
+#: sequencer.c:530
 #, c-format
 msgid "Cannot get commit message for %s"
 msgstr "Kan inte hämta incheckningsmeddelande för %s"
 
-#: sequencer.c:611
+#: sequencer.c:616
 #, c-format
 msgid "could not revert %s... %s"
 msgstr "kunde inte ångra %s... %s"
 
-#: sequencer.c:612
+#: sequencer.c:617
 #, c-format
 msgid "could not apply %s... %s"
 msgstr "kunde inte tillämpa %s... %s"
 
-#: sequencer.c:648
+#: sequencer.c:653
 msgid "empty commit set passed"
 msgstr "den angivna uppsättningen incheckningar är tom"
 
-#: sequencer.c:656
+#: sequencer.c:661
 #, c-format
 msgid "git %s: failed to read the index"
 msgstr "git %s: misslyckades läsa indexet"
 
-#: sequencer.c:660
+#: sequencer.c:665
 #, c-format
 msgid "git %s: failed to refresh the index"
 msgstr "git %s: misslyckades uppdatera indexet"
 
-#: sequencer.c:720
+#: sequencer.c:725
 #, c-format
 msgid "Cannot %s during a %s"
 msgstr "kan inte %s under en %s"
 
-#: sequencer.c:742
+#: sequencer.c:747
 #, c-format
 msgid "Could not parse line %d."
 msgstr "Kan inte tolka rad %d."
 
-#: sequencer.c:747
+#: sequencer.c:752
 msgid "No commits parsed."
 msgstr "Inga incheckningar lästes."
 
-#: sequencer.c:760
+#: sequencer.c:765
 #, c-format
 msgid "Could not open %s"
 msgstr "Kunde inte öppna %s"
 
-#: sequencer.c:764
+#: sequencer.c:769
 #, c-format
 msgid "Could not read %s."
 msgstr "kunde inte läsa %s."
 
-#: sequencer.c:771
+#: sequencer.c:776
 #, c-format
 msgid "Unusable instruction sheet: %s"
 msgstr "Oanvändbart manus: %s"
 
-#: sequencer.c:801
+#: sequencer.c:806
 #, c-format
 msgid "Invalid key: %s"
 msgstr "Felaktig nyckel: %s"
 
-#: sequencer.c:804
+#: sequencer.c:809
 #, c-format
 msgid "Invalid value for %s: %s"
 msgstr "Felaktigt värde för %s: %s"
 
-#: sequencer.c:816
+#: sequencer.c:821
 #, c-format
 msgid "Malformed options sheet: %s"
 msgstr "Trasigt manus: %s"
 
-#: sequencer.c:837
+#: sequencer.c:842
 msgid "a cherry-pick or revert is already in progress"
 msgstr "en \"cherry-pick\" eller \"revert\" pågår redan"
 
-#: sequencer.c:838
+#: sequencer.c:843
 msgid "try \"git cherry-pick (--continue | --quit | --abort)\""
 msgstr "testa \"git cherry-pick (--continue | --quit | --abort)\""
 
-#: sequencer.c:842
+#: sequencer.c:847
 #, c-format
 msgid "Could not create sequencer directory %s"
 msgstr "Kunde inte skapa \"sequencer\"-katalogen \"%s\""
 
-#: sequencer.c:858 sequencer.c:943
+#: sequencer.c:863 sequencer.c:948
 #, c-format
 msgid "Error wrapping up %s."
 msgstr "Fel vid ombrytning av %s."
 
-#: sequencer.c:877 sequencer.c:1013
+#: sequencer.c:882 sequencer.c:1018
 msgid "no cherry-pick or revert in progress"
 msgstr "ingen \"cherry-pick\" eller \"revert\" pågår"
 
-#: sequencer.c:879
+#: sequencer.c:884
 msgid "cannot resolve HEAD"
 msgstr "kan inte bestämma HEAD"
 
-#: sequencer.c:881
+#: sequencer.c:886
 msgid "cannot abort from a branch yet to be born"
 msgstr "kan inte avbryta från en gren som ännu inte är född"
 
-#: sequencer.c:903 builtin/apply.c:4128
+#: sequencer.c:908 builtin/apply.c:4288
 #, c-format
 msgid "cannot open %s: %s"
 msgstr "kan inte öppna %s: %s"
 
-#: sequencer.c:906
+#: sequencer.c:911
 #, c-format
 msgid "cannot read %s: %s"
 msgstr "kan inte läsa %s: %s"
 
-#: sequencer.c:907
+#: sequencer.c:912
 msgid "unexpected end of file"
 msgstr "oväntat filslut"
 
-#: sequencer.c:913
+#: sequencer.c:918
 #, c-format
 msgid "stored pre-cherry-pick HEAD file '%s' is corrupt"
 msgstr "sparad HEAD-fil från före \"cherry-pick\", \"%s\", är trasig"
 
-#: sequencer.c:936
+#: sequencer.c:941
 #, c-format
 msgid "Could not format %s."
 msgstr "Kunde inte formatera %s."
 
-#: sequencer.c:1081
+#: sequencer.c:1086
 #, c-format
 msgid "%s: can't cherry-pick a %s"
 msgstr "%s: kan inte göra \"cherry-pick\" på typen \"%s\""
 
-#: sequencer.c:1084
+#: sequencer.c:1089
 #, c-format
 msgid "%s: bad revision"
 msgstr "%s: felaktig revision"
 
-#: sequencer.c:1118
+#: sequencer.c:1123
 msgid "Can't revert as initial commit"
 msgstr "Kan inte ångra som första incheckning"
 
-#: sequencer.c:1119
+#: sequencer.c:1124
 msgid "Can't cherry-pick into empty head"
 msgstr "Kan inte göra \"cherry-pick\" i ett tomt huvud"
 
 #: sha1_name.c:440
 msgid ""
 "Git normally never creates a ref that ends with 40 hex characters\n"
@@ -1446,44 +1455,44 @@
 msgstr "Kunde inte ta bort .gitmodules-posten för %s"
 
 #: submodule.c:120
 msgid "staging updated .gitmodules failed"
 msgstr "misslyckades köa uppdaterad .gitmodules"
 
-#: submodule.c:1111 builtin/init-db.c:371
+#: submodule.c:1109 builtin/init-db.c:371
 #, c-format
 msgid "Could not create git link %s"
 msgstr "Kunde inte skapa gitlänk %s"
 
-#: submodule.c:1122
+#: submodule.c:1120
 #, c-format
 msgid "Could not set core.worktree in %s"
 msgstr "Kunde inte sätta core.worktree i %s"
 
-#: trailer.c:500 trailer.c:504 trailer.c:508 trailer.c:562 trailer.c:566
-#: trailer.c:570
+#: trailer.c:491 trailer.c:495 trailer.c:499 trailer.c:553 trailer.c:557
+#: trailer.c:561
 #, c-format
 msgid "unknown value '%s' for key '%s'"
 msgstr "okänt värde \"%s\" för nyckeln \"%s\""
 
-#: trailer.c:552 trailer.c:557 builtin/remote.c:290
+#: trailer.c:543 trailer.c:548 builtin/remote.c:290
 #, c-format
 msgid "more than one %s"
 msgstr "mer än en %s"
 
-#: trailer.c:590
+#: trailer.c:581
 #, c-format
 msgid "empty trailer token in trailer '%.*s'"
 msgstr "tom släpradssymbol i släpraden \"%.*s\""
 
-#: trailer.c:710
+#: trailer.c:701
 #, c-format
 msgid "could not read input file '%s'"
 msgstr "kunde inte läsa indatafilen \"%s\""
 
-#: trailer.c:713
+#: trailer.c:704
 msgid "could not read from stdin"
 msgstr "Kunde inte läsa från standard in"
 
 #: unpack-trees.c:202
 msgid "Checking out files"
 msgstr "Checkar ut filer"
@@ -1514,32 +1523,32 @@
 msgstr "felaktigt portnummer"
 
 #: urlmatch.c:322
 msgid "invalid '..' path segment"
 msgstr "felaktigt \"..\"-sökvägssegment"
 
-#: wrapper.c:509
+#: wrapper.c:523
 #, c-format
 msgid "unable to access '%s': %s"
 msgstr "kan inte komma åt \"%s\": %s"
 
-#: wrapper.c:530
+#: wrapper.c:544
 #, c-format
 msgid "unable to access '%s'"
 msgstr "kan inte komma åt \"%s\""
 
-#: wrapper.c:541
+#: wrapper.c:555
 #, c-format
 msgid "unable to look up current user in the passwd file: %s"
 msgstr "kan inte slå upp aktuell användare i passwd-filen: %s"
 
-#: wrapper.c:542
+#: wrapper.c:556
 msgid "no such user"
 msgstr "okänd användare"
 
-#: wrapper.c:550
+#: wrapper.c:564
 msgid "unable to get current working directory"
 msgstr "kan inte hämta aktuell arbetskatalog"
 
 #: wt-status.c:150
 msgid "Unmerged paths:"
 msgstr "Ej sammanslagna sökvägar:"
@@ -1562,17 +1571,17 @@
 msgstr "  (använd \"git add/rm <fil>...\" som lämpligt för att ange lösning)"
 
 #: wt-status.c:187
 msgid "  (use \"git rm <file>...\" to mark resolution)"
 msgstr "  (använd \"git rm <fil>...\" för att ange lösning)"
 
-#: wt-status.c:198
+#: wt-status.c:198 wt-status.c:878
 msgid "Changes to be committed:"
 msgstr "Ändringar att checka in:"
 
-#: wt-status.c:216
+#: wt-status.c:216 wt-status.c:887
 msgid "Changes not staged for commit:"
 msgstr "Ändringar ej i incheckningskön:"
 
 #: wt-status.c:220
 msgid "  (use \"git add <file>...\" to update what will be committed)"
 msgstr ""
@@ -1680,310 +1689,310 @@
 
 #: wt-status.c:391
 #, c-format
 msgid "bug: unhandled diff status %c"
 msgstr "programfel: diff-status %c ej hanterad"
 
-#: wt-status.c:758
+#: wt-status.c:753
 msgid "Submodules changed but not updated:"
 msgstr "Undermoduler ändrade men inte uppdaterade:"
 
-#: wt-status.c:760
+#: wt-status.c:755
 msgid "Submodule changes to be committed:"
 msgstr "Undermodulers ändringar att checka in:"
 
-#: wt-status.c:839
+#: wt-status.c:835
 msgid ""
 "Do not touch the line above.\n"
 "Everything below will be removed."
 msgstr ""
 "Rör inte raden ovan.\n"
 "Allt nedan kommer tas bort."
 
-#: wt-status.c:930
+#: wt-status.c:946
 msgid "You have unmerged paths."
 msgstr "Du har ej sammanslagna sökvägar."
 
-#: wt-status.c:933
+#: wt-status.c:949
 msgid "  (fix conflicts and run \"git commit\")"
 msgstr "  (rätta konflikter och kör \"git commit\")"
 
-#: wt-status.c:936
+#: wt-status.c:952
 msgid "All conflicts fixed but you are still merging."
 msgstr "Alla konflikter har rättats men du är fortfarande i en sammanslagning."
 
-#: wt-status.c:939
+#: wt-status.c:955
 msgid "  (use \"git commit\" to conclude merge)"
 msgstr "  (använd \"git commit\" för att slutföra sammanslagningen)"
 
-#: wt-status.c:949
+#: wt-status.c:965
 msgid "You are in the middle of an am session."
 msgstr "Du är i mitten av en körning av \"git am\"."
 
-#: wt-status.c:952
+#: wt-status.c:968
 msgid "The current patch is empty."
 msgstr "Aktuell patch är tom."
 
-#: wt-status.c:956
+#: wt-status.c:972
 msgid "  (fix conflicts and then run \"git am --continue\")"
 msgstr "  (rätta konflikter och kör sedan \"git am --continue\")"
 
-#: wt-status.c:958
+#: wt-status.c:974
 msgid "  (use \"git am --skip\" to skip this patch)"
 msgstr "  (använd \"git am --skip\" för att hoppa över patchen)"
 
-#: wt-status.c:960
+#: wt-status.c:976
 msgid "  (use \"git am --abort\" to restore the original branch)"
 msgstr "  (använd \"git am --abort\" för att återställa ursprungsgrenen)"
 
-#: wt-status.c:1020 wt-status.c:1037
+#: wt-status.c:1036 wt-status.c:1053
 #, c-format
 msgid "You are currently rebasing branch '%s' on '%s'."
 msgstr "Du håller på att ombasera grenen \"%s\" ovanpå \"%s\"."
 
-#: wt-status.c:1025 wt-status.c:1042
+#: wt-status.c:1041 wt-status.c:1058
 msgid "You are currently rebasing."
 msgstr "Du håller på med en ombasering."
 
-#: wt-status.c:1028
+#: wt-status.c:1044
 msgid "  (fix conflicts and then run \"git rebase --continue\")"
 msgstr "  (rätta konflikter och kör sedan \"git rebase --continue\")"
 
-#: wt-status.c:1030
+#: wt-status.c:1046
 msgid "  (use \"git rebase --skip\" to skip this patch)"
 msgstr "  (använd \"git rebase --skip\" för att hoppa över patchen)"
 
-#: wt-status.c:1032
+#: wt-status.c:1048
 msgid "  (use \"git rebase --abort\" to check out the original branch)"
 msgstr "  (använd \"git rebase --abort\" för att checka ut ursprungsgrenen)"
 
-#: wt-status.c:1045
+#: wt-status.c:1061
 msgid "  (all conflicts fixed: run \"git rebase --continue\")"
 msgstr "  (alla konflikter rättade: kör \"git rebase --continue\")"
 
-#: wt-status.c:1049
+#: wt-status.c:1065
 #, c-format
 msgid ""
 "You are currently splitting a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "Du håller på att dela upp en incheckning medan du ombaserar grenen \"%s\" "
 "ovanpå \"%s\"."
 
-#: wt-status.c:1054
+#: wt-status.c:1070
 msgid "You are currently splitting a commit during a rebase."
 msgstr "Du håller på att dela upp en incheckning i en ombasering."
 
-#: wt-status.c:1057
+#: wt-status.c:1073
 msgid "  (Once your working directory is clean, run \"git rebase --continue\")"
 msgstr "  (Så fort din arbetskatalog är ren, kör \"git rebase --continue\")"
 
-#: wt-status.c:1061
+#: wt-status.c:1077
 #, c-format
 msgid "You are currently editing a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "Du håller på att redigera en incheckning medan du ombaserar grenen \"%s\" "
 "ovanpå \"%s\"."
 
-#: wt-status.c:1066
+#: wt-status.c:1082
 msgid "You are currently editing a commit during a rebase."
 msgstr "Du håller på att redigera en incheckning under en ombasering."
 
-#: wt-status.c:1069
+#: wt-status.c:1085
 msgid "  (use \"git commit --amend\" to amend the current commit)"
 msgstr ""
 "  (använd \"git commit --amend\" för att lägga till på aktuell incheckning)"
 
-#: wt-status.c:1071
+#: wt-status.c:1087
 msgid ""
 "  (use \"git rebase --continue\" once you are satisfied with your changes)"
 msgstr "  (använd \"git rebase --continue\" när du är nöjd med dina ändringar)"
 
-#: wt-status.c:1081
+#: wt-status.c:1097
 #, c-format
 msgid "You are currently cherry-picking commit %s."
 msgstr "Du håller på med en \"cherry-pick\" av incheckningen %s."
 
-#: wt-status.c:1086
+#: wt-status.c:1102
 msgid "  (fix conflicts and run \"git cherry-pick --continue\")"
 msgstr "  (rätta konflikter och kör sedan \"git cherry-pick --continue\")"
 
-#: wt-status.c:1089
+#: wt-status.c:1105
 msgid "  (all conflicts fixed: run \"git cherry-pick --continue\")"
 msgstr "  (alla konflikter rättade: kör \"git cherry-pick --continue\")"
 
-#: wt-status.c:1091
+#: wt-status.c:1107
 msgid "  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)"
 msgstr ""
 "  (använd \"git cherry-pick --abort\" för att avbryta \"cherry-pick\"-"
 "operationen)"
 
-#: wt-status.c:1100
+#: wt-status.c:1116
 #, c-format
 msgid "You are currently reverting commit %s."
 msgstr "Du håller på med att ångra incheckningen %s."
 
-#: wt-status.c:1105
+#: wt-status.c:1121
 msgid "  (fix conflicts and run \"git revert --continue\")"
 msgstr "  (rätta konflikter och kör sedan \"git revert --continue\")"
 
-#: wt-status.c:1108
+#: wt-status.c:1124
 msgid "  (all conflicts fixed: run \"git revert --continue\")"
 msgstr "  (alla konflikter rättade: kör \"git revert --continue\")"
 
-#: wt-status.c:1110
+#: wt-status.c:1126
 msgid "  (use \"git revert --abort\" to cancel the revert operation)"
 msgstr "  (använd \"git revert --abort\" för att avbryta ångrandet)"
 
-#: wt-status.c:1121
+#: wt-status.c:1137
 #, c-format
 msgid "You are currently bisecting, started from branch '%s'."
 msgstr "Du håller på med en \"bisect\", startad från grenen \"%s\"."
 
-#: wt-status.c:1125
+#: wt-status.c:1141
 msgid "You are currently bisecting."
 msgstr "Du håller på med en \"bisect\"."
 
-#: wt-status.c:1128
+#: wt-status.c:1144
 msgid "  (use \"git bisect reset\" to get back to the original branch)"
 msgstr ""
 "  (använd \"git bisect reset\" för att komma tillbaka till ursprungsgrenen)"
 
-#: wt-status.c:1303
+#: wt-status.c:1321
 msgid "On branch "
 msgstr "På grenen "
 
-#: wt-status.c:1310
+#: wt-status.c:1328
 msgid "rebase in progress; onto "
 msgstr "ombasering pågår; ovanpå"
 
-#: wt-status.c:1317
+#: wt-status.c:1333
 msgid "HEAD detached at "
 msgstr "HEAD frånkopplad vid "
 
-#: wt-status.c:1319
+#: wt-status.c:1335
 msgid "HEAD detached from "
 msgstr "HEAD frånkopplad från "
 
-#: wt-status.c:1322
+#: wt-status.c:1338
 msgid "Not currently on any branch."
 msgstr "Inte på någon gren för närvarande."
 
-#: wt-status.c:1339
+#: wt-status.c:1355
 msgid "Initial commit"
 msgstr "Första incheckning"
 
-#: wt-status.c:1353
+#: wt-status.c:1369
 msgid "Untracked files"
 msgstr "Ospårade filer"
 
-#: wt-status.c:1355
+#: wt-status.c:1371
 msgid "Ignored files"
 msgstr "Ignorerade filer"
 
-#: wt-status.c:1359
+#: wt-status.c:1375
 #, c-format
 msgid ""
 "It took %.2f seconds to enumerate untracked files. 'status -uno'\n"
 "may speed it up, but you have to be careful not to forget to add\n"
 "new files yourself (see 'git help status')."
 msgstr ""
 "Det tog %.2f sekunder att räkna upp ospårade filer. \"status -uno\"\n"
 "kan gå snabbare, men du måste vara försiktig så du inte glömmer\n"
 "lägga till nya filer själv (se \"git help status\")."
 
 # %s är nästa sträng eller tom.
-#: wt-status.c:1365
+#: wt-status.c:1381
 #, c-format
 msgid "Untracked files not listed%s"
 msgstr "Ospårade filer visas ej%s"
 
-#: wt-status.c:1367
+#: wt-status.c:1383
 msgid " (use -u option to show untracked files)"
 msgstr " (använd flaggan -u för att visa ospårade filer)"
 
-#: wt-status.c:1373
+#: wt-status.c:1389
 msgid "No changes"
 msgstr "Inga ändringar"
 
-#: wt-status.c:1378
+#: wt-status.c:1394
 #, c-format
 msgid "no changes added to commit (use \"git add\" and/or \"git commit -a\")\n"
 msgstr ""
 "inga ändringar att checka in (använd \"git add\" och/eller \"git commit -a"
 "\")\n"
 
-#: wt-status.c:1381
+#: wt-status.c:1397
 #, c-format
 msgid "no changes added to commit\n"
 msgstr "inga ändringar att checka in\n"
 
-#: wt-status.c:1384
+#: wt-status.c:1400
 #, c-format
 msgid ""
 "nothing added to commit but untracked files present (use \"git add\" to "
 "track)\n"
 msgstr ""
 "inget köat för incheckning, men ospårade filer finns (spåra med \"git add"
 "\")\n"
 
-#: wt-status.c:1387
+#: wt-status.c:1403
 #, c-format
 msgid "nothing added to commit but untracked files present\n"
 msgstr "inget köat för incheckning, men ospårade filer finns\n"
 
-#: wt-status.c:1390
+#: wt-status.c:1406
 #, c-format
 msgid "nothing to commit (create/copy files and use \"git add\" to track)\n"
 msgstr "inget att checka in (skapa/kopiera filer och spåra med \"git add\")\n"
 
-#: wt-status.c:1393 wt-status.c:1398
+#: wt-status.c:1409 wt-status.c:1414
 #, c-format
 msgid "nothing to commit\n"
 msgstr "inget att checka in\n"
 
-#: wt-status.c:1396
+#: wt-status.c:1412
 #, c-format
 msgid "nothing to commit (use -u to show untracked files)\n"
 msgstr "inget att checka in (använd -u för att visa ospårade filer)\n"
 
-#: wt-status.c:1400
+#: wt-status.c:1416
 #, c-format
 msgid "nothing to commit, working directory clean\n"
 msgstr "inget att checka in, arbetskatalogen ren\n"
 
-#: wt-status.c:1509
+#: wt-status.c:1525
 msgid "HEAD (no branch)"
 msgstr "HEAD (ingen gren)"
 
-#: wt-status.c:1515
+#: wt-status.c:1531
 msgid "Initial commit on "
 msgstr "Första incheckning på "
 
-#: wt-status.c:1547
+#: wt-status.c:1563
 msgid "gone"
 msgstr "försvunnen"
 
-#: wt-status.c:1549 wt-status.c:1557
+#: wt-status.c:1565 wt-status.c:1573
 msgid "behind "
 msgstr "efter "
 
 #: compat/precompose_utf8.c:55 builtin/clone.c:360
 #, c-format
 msgid "failed to unlink '%s'"
 msgstr "misslyckades ta bort länken \"%s\""
 
 #: builtin/add.c:22
-msgid "git add [options] [--] <pathspec>..."
-msgstr "git add [flaggor] [--] <sökväg>..."
+msgid "git add [<options>] [--] <pathspec>..."
+msgstr "git add [<flaggor>] [--] <sökväg>..."
 
 #: builtin/add.c:65
 #, c-format
 msgid "unexpected diff status %c"
 msgstr "diff-status %c förväntades inte"
 
-#: builtin/add.c:70 builtin/commit.c:275
+#: builtin/add.c:70 builtin/commit.c:277
 msgid "updating files failed"
 msgstr "misslyckades uppdatera filer"
 
 #: builtin/add.c:80
 #, c-format
 msgid "remove '%s'\n"
@@ -2021,20 +2030,20 @@
 msgstr "Kunde inte tillämpa \"%s\""
 
 #: builtin/add.c:231
 msgid "The following paths are ignored by one of your .gitignore files:\n"
 msgstr "Följande sökvägar ignoreras av en av dina .gitignore-filer:\n"
 
-#: builtin/add.c:248 builtin/clean.c:875 builtin/fetch.c:108 builtin/mv.c:110
-#: builtin/prune-packed.c:55 builtin/push.c:499 builtin/remote.c:1372
+#: builtin/add.c:248 builtin/clean.c:876 builtin/fetch.c:107 builtin/mv.c:110
+#: builtin/prune-packed.c:55 builtin/push.c:508 builtin/remote.c:1372
 #: builtin/rm.c:269
 msgid "dry run"
 msgstr "testkörning"
 
-#: builtin/add.c:249 builtin/apply.c:4415 builtin/check-ignore.c:19
-#: builtin/commit.c:1326 builtin/count-objects.c:63 builtin/fsck.c:608
+#: builtin/add.c:249 builtin/apply.c:4577 builtin/check-ignore.c:19
+#: builtin/commit.c:1322 builtin/count-objects.c:63 builtin/fsck.c:608
 #: builtin/log.c:1617 builtin/mv.c:109 builtin/read-tree.c:114
 msgid "be verbose"
 msgstr "var pratsam"
 
 #: builtin/add.c:251
 msgid "interactive picking"
@@ -2104,81 +2113,81 @@
 
 #: builtin/add.c:358
 #, c-format
 msgid "Maybe you wanted to say 'git add .'?\n"
 msgstr "Kanske menade du att skriva \"git add .\"?\n"
 
-#: builtin/add.c:363 builtin/check-ignore.c:172 builtin/clean.c:919
-#: builtin/commit.c:333 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:299
+#: builtin/add.c:363 builtin/check-ignore.c:172 builtin/clean.c:920
+#: builtin/commit.c:335 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:299
 msgid "index file corrupt"
 msgstr "indexfilen trasig"
 
-#: builtin/add.c:446 builtin/apply.c:4510 builtin/mv.c:279 builtin/rm.c:431
+#: builtin/add.c:446 builtin/apply.c:4675 builtin/mv.c:279 builtin/rm.c:431
 msgid "Unable to write new index file"
 msgstr "Kunde inte skriva ny indexfil"
 
-#: builtin/apply.c:58
-msgid "git apply [options] [<patch>...]"
-msgstr "git apply [flaggor] [<patch>...]"
+#: builtin/apply.c:59
+msgid "git apply [<options>] [<patch>...]"
+msgstr "git apply [<flaggor>] [<patch>...]"
 
-#: builtin/apply.c:111
+#: builtin/apply.c:112
 #, c-format
 msgid "unrecognized whitespace option '%s'"
 msgstr "okänt alternativ för whitespace: \"%s\""
 
-#: builtin/apply.c:126
+#: builtin/apply.c:127
 #, c-format
 msgid "unrecognized whitespace ignore option '%s'"
 msgstr "okänt alternativ för ignore-whitespace: \"%s\""
 
-#: builtin/apply.c:826
+#: builtin/apply.c:822
 #, c-format
 msgid "Cannot prepare timestamp regexp %s"
 msgstr "Kan inte förbereda reguljärt uttryck för tidsstämpeln %s"
 
-#: builtin/apply.c:835
+#: builtin/apply.c:831
 #, c-format
 msgid "regexec returned %d for input: %s"
 msgstr "regexec returnerade %d för indata: %s"
 
-#: builtin/apply.c:916
+#: builtin/apply.c:912
 #, c-format
 msgid "unable to find filename in patch at line %d"
 msgstr "kan inte hitta filnamn i patchen på rad %d"
 
-#: builtin/apply.c:948
+#: builtin/apply.c:944
 #, c-format
 msgid "git apply: bad git-diff - expected /dev/null, got %s on line %d"
 msgstr "git apply: dålig git-diff - förväntade /dev/null, fick %s på rad %d"
 
-#: builtin/apply.c:952
+#: builtin/apply.c:948
 #, c-format
 msgid "git apply: bad git-diff - inconsistent new filename on line %d"
 msgstr "git apply: dålig git-diff - motsägande nytt filnamn på rad %d"
 
-#: builtin/apply.c:953
+#: builtin/apply.c:949
 #, c-format
 msgid "git apply: bad git-diff - inconsistent old filename on line %d"
 msgstr "git apply: dålig git-diff - motsägande gammalt filnamn på rad %d"
 
-#: builtin/apply.c:960
+#: builtin/apply.c:956
 #, c-format
 msgid "git apply: bad git-diff - expected /dev/null on line %d"
 msgstr "git apply: dålig git-diff - förväntade /dev/null på rad %d"
 
-#: builtin/apply.c:1423
+#: builtin/apply.c:1419
 #, c-format
 msgid "recount: unexpected line: %.*s"
 msgstr "recount: förväntade rad: %.*s"
 
-#: builtin/apply.c:1480
+#: builtin/apply.c:1476
 #, c-format
 msgid "patch fragment without header at line %d: %.*s"
 msgstr "patch-fragment utan huvud på rad %d: %.*s"
 
-#: builtin/apply.c:1497
+#: builtin/apply.c:1493
 #, c-format
 msgid ""
 "git diff header lacks filename information when removing %d leading pathname "
 "component (line %d)"
 msgid_plural ""
 "git diff header lacks filename information when removing %d leading pathname "
@@ -2188,402 +2197,421 @@
 "tas bort (rad %d)"
 msgstr[1] ""
 "git-diff-huvudet saknar filnamnsinformation när %d ledande "
 "sökvägskomponenter\n"
 "tas bort (rad %d)"
 
-#: builtin/apply.c:1657
+#: builtin/apply.c:1656
 msgid "new file depends on old contents"
 msgstr "ny fil beror på gammalt innehåll"
 
-#: builtin/apply.c:1659
+#: builtin/apply.c:1658
 msgid "deleted file still has contents"
 msgstr "borttagen fil har fortfarande innehåll"
 
-#: builtin/apply.c:1685
+#: builtin/apply.c:1684
 #, c-format
 msgid "corrupt patch at line %d"
 msgstr "trasig patch på rad %d"
 
-#: builtin/apply.c:1721
+#: builtin/apply.c:1720
 #, c-format
 msgid "new file %s depends on old contents"
 msgstr "nya filen %s beror på gammalt innehåll"
 
-#: builtin/apply.c:1723
+#: builtin/apply.c:1722
 #, c-format
 msgid "deleted file %s still has contents"
 msgstr "borttagna filen %s har fortfarande innehåll"
 
-#: builtin/apply.c:1726
+#: builtin/apply.c:1725
 #, c-format
 msgid "** warning: file %s becomes empty but is not deleted"
 msgstr "** varning: filen %s blir tom men har inte tagits bort"
 
-#: builtin/apply.c:1872
+#: builtin/apply.c:1871
 #, c-format
 msgid "corrupt binary patch at line %d: %.*s"
 msgstr "trasig binärpatch på rad %d: %.*s"
 
-#: builtin/apply.c:1901
+#: builtin/apply.c:1900
 #, c-format
 msgid "unrecognized binary patch at line %d"
 msgstr "binärpatchen på rad %d känns inte igen"
 
-#: builtin/apply.c:2052
+#: builtin/apply.c:2051
 #, c-format
 msgid "patch with only garbage at line %d"
 msgstr "patch med bara skräp på rad %d"
 
-#: builtin/apply.c:2142
+#: builtin/apply.c:2141
 #, c-format
 msgid "unable to read symlink %s"
 msgstr "kunde inte läsa symboliska länken %s"
 
-#: builtin/apply.c:2146
+#: builtin/apply.c:2145
 #, c-format
 msgid "unable to open or read %s"
 msgstr "kunde inte öppna eller läsa %s"
 
-#: builtin/apply.c:2754
+#: builtin/apply.c:2778
 #, c-format
 msgid "invalid start of line: '%c'"
 msgstr "felaktig inledning på rad: \"%c\""
 
-#: builtin/apply.c:2872
+#: builtin/apply.c:2897
 #, c-format
 msgid "Hunk #%d succeeded at %d (offset %d line)."
 msgid_plural "Hunk #%d succeeded at %d (offset %d lines)."
 msgstr[0] "Stycke %d lyckades på %d (offset %d rad)."
 msgstr[1] "Stycke %d lyckades på %d (offset %d rader)."
 
-#: builtin/apply.c:2884
+#: builtin/apply.c:2909
 #, c-format
 msgid "Context reduced to (%ld/%ld) to apply fragment at %d"
 msgstr "Sammanhang reducerat till (%ld/%ld) för att tillämpa fragment vid %d"
 
-#: builtin/apply.c:2890
+#: builtin/apply.c:2915
 #, c-format
 msgid ""
 "while searching for:\n"
 "%.*s"
 msgstr ""
 "vid sökning efter:\n"
 "%.*s"
 
-#: builtin/apply.c:2909
+#: builtin/apply.c:2935
 #, c-format
 msgid "missing binary patch data for '%s'"
 msgstr "saknar binära patchdata för \"%s\""
 
-#: builtin/apply.c:3010
+#: builtin/apply.c:3036
 #, c-format
 msgid "binary patch does not apply to '%s'"
 msgstr "binärpatchen kan inte tillämpas på \"%s\""
 
-#: builtin/apply.c:3016
+#: builtin/apply.c:3042
 #, c-format
 msgid "binary patch to '%s' creates incorrect result (expecting %s, got %s)"
 msgstr "binärpatchen på \"%s\" ger felaktigt resultat (förväntade %s, fick %s)"
 
-#: builtin/apply.c:3037
+#: builtin/apply.c:3063
 #, c-format
 msgid "patch failed: %s:%ld"
 msgstr "patch misslyckades: %s:%ld"
 
-#: builtin/apply.c:3161
+#: builtin/apply.c:3187
 #, c-format
 msgid "cannot checkout %s"
 msgstr "kan inte checka ut %s"
 
-#: builtin/apply.c:3206 builtin/apply.c:3215 builtin/apply.c:3260
+#: builtin/apply.c:3232 builtin/apply.c:3243 builtin/apply.c:3288
 #, c-format
 msgid "read of %s failed"
 msgstr "misslyckades läsa %s"
 
-#: builtin/apply.c:3240 builtin/apply.c:3462
+#: builtin/apply.c:3240
+#, c-format
+msgid "reading from '%s' beyond a symbolic link"
+msgstr "läser från \"%s\" som är på andra sidan av en symbolisk länk"
+
+#: builtin/apply.c:3268 builtin/apply.c:3490
 #, c-format
 msgid "path %s has been renamed/deleted"
 msgstr "sökvägen %s har ändrat namn/tagits bort"
 
-#: builtin/apply.c:3321 builtin/apply.c:3476
+#: builtin/apply.c:3349 builtin/apply.c:3504
 #, c-format
 msgid "%s: does not exist in index"
 msgstr "%s: finns inte i indexet"
 
-#: builtin/apply.c:3325 builtin/apply.c:3468 builtin/apply.c:3490
+#: builtin/apply.c:3353 builtin/apply.c:3496 builtin/apply.c:3518
 #, c-format
 msgid "%s: %s"
 msgstr "%s: %s"
 
-#: builtin/apply.c:3330 builtin/apply.c:3484
+#: builtin/apply.c:3358 builtin/apply.c:3512
 #, c-format
 msgid "%s: does not match index"
 msgstr "%s: motsvarar inte indexet"
 
-#: builtin/apply.c:3432
+#: builtin/apply.c:3460
 msgid "removal patch leaves file contents"
 msgstr "patch för borttagning lämnar kvar filinnehåll"
 
-#: builtin/apply.c:3501
+#: builtin/apply.c:3529
 #, c-format
 msgid "%s: wrong type"
 msgstr "%s: fel typ"
 
-#: builtin/apply.c:3503
+#: builtin/apply.c:3531
 #, c-format
 msgid "%s has type %o, expected %o"
 msgstr "%s har typen %o, förväntade %o"
 
-#: builtin/apply.c:3604
+#: builtin/apply.c:3690 builtin/apply.c:3692
+#, c-format
+msgid "invalid path '%s'"
+msgstr "ogiltig sökväg: %s"
+
+#: builtin/apply.c:3747
 #, c-format
 msgid "%s: already exists in index"
 msgstr "%s: finns redan i indexet"
 
-#: builtin/apply.c:3607
+#: builtin/apply.c:3750
 #, c-format
 msgid "%s: already exists in working directory"
 msgstr "%s: finns redan i arbetskatalogen"
 
-#: builtin/apply.c:3627
+#: builtin/apply.c:3770
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o)"
 msgstr "nytt läge (%o) för %s motsvarar inte gammalt läge (%o)"
 
-#: builtin/apply.c:3632
+#: builtin/apply.c:3775
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o) of %s"
 msgstr "nytt läge (%o) för %s motsvarar inte gammalt läge (%o) för %s"
 
-#: builtin/apply.c:3640
+#: builtin/apply.c:3795
+#, c-format
+msgid "affected file '%s' is beyond a symbolic link"
+msgstr "den berörda filen \"%s\" är på andra sidan av en symbolisk länk"
+
+#: builtin/apply.c:3799
 #, c-format
 msgid "%s: patch does not apply"
 msgstr "%s: patchen kan inte tillämpas"
 
-#: builtin/apply.c:3653
+#: builtin/apply.c:3813
 #, c-format
 msgid "Checking patch %s..."
 msgstr "Kontrollerar patchen %s..."
 
-#: builtin/apply.c:3746 builtin/checkout.c:231 builtin/reset.c:135
+#: builtin/apply.c:3906 builtin/checkout.c:231 builtin/reset.c:135
 #, c-format
 msgid "make_cache_entry failed for path '%s'"
 msgstr "make_cache_entry misslyckades för sökvägen \"%s\""
 
-#: builtin/apply.c:3889
+#: builtin/apply.c:4049
 #, c-format
 msgid "unable to remove %s from index"
 msgstr "kan inte ta bort %s från indexet"
 
-#: builtin/apply.c:3918
+#: builtin/apply.c:4078
 #, c-format
 msgid "corrupt patch for submodule %s"
 msgstr "trasig patch för undermodulen %s"
 
-#: builtin/apply.c:3922
+#: builtin/apply.c:4082
 #, c-format
 msgid "unable to stat newly created file '%s'"
 msgstr "kan inte ta status på nyligen skapade filen \"%s\""
 
-#: builtin/apply.c:3927
+#: builtin/apply.c:4087
 #, c-format
 msgid "unable to create backing store for newly created file %s"
 msgstr "kan inte skapa säkerhetsminne för nyligen skapade filen %s"
 
-#: builtin/apply.c:3930 builtin/apply.c:4038
+#: builtin/apply.c:4090 builtin/apply.c:4198
 #, c-format
 msgid "unable to add cache entry for %s"
 msgstr "kan inte lägga till cachepost för %s"
 
-#: builtin/apply.c:3963
+#: builtin/apply.c:4123
 #, c-format
 msgid "closing file '%s'"
 msgstr "stänger filen \"%s\""
 
-#: builtin/apply.c:4012
+#: builtin/apply.c:4172
 #, c-format
 msgid "unable to write file '%s' mode %o"
 msgstr "kan inte skriva filen \"%s\" läge %o"
 
-#: builtin/apply.c:4099
+#: builtin/apply.c:4259
 #, c-format
 msgid "Applied patch %s cleanly."
 msgstr "Tillämpade patchen %s rent."
 
-#: builtin/apply.c:4107
+#: builtin/apply.c:4267
 msgid "internal error"
 msgstr "internt fel"
 
-#: builtin/apply.c:4110
+#: builtin/apply.c:4270
 #, c-format
 msgid "Applying patch %%s with %d reject..."
 msgid_plural "Applying patch %%s with %d rejects..."
 msgstr[0] "Tillämpade patchen %%s med %d refuserad..."
 msgstr[1] "Tillämpade patchen %%s med %d refuserade..."
 
-#: builtin/apply.c:4120
+#: builtin/apply.c:4280
 #, c-format
 msgid "truncating .rej filename to %.*s.rej"
 msgstr "trunkerar .rej-filnamnet till %.*s.rej"
 
-#: builtin/apply.c:4141
+#: builtin/apply.c:4301
 #, c-format
 msgid "Hunk #%d applied cleanly."
 msgstr "Stycke %d tillämpades rent."
 
-#: builtin/apply.c:4144
+#: builtin/apply.c:4304
 #, c-format
 msgid "Rejected hunk #%d."
 msgstr "Refuserar stycke %d."
 
-#: builtin/apply.c:4234
+#: builtin/apply.c:4394
 msgid "unrecognized input"
 msgstr "indata känns inte igen"
 
-#: builtin/apply.c:4245
+#: builtin/apply.c:4405
 msgid "unable to read index file"
 msgstr "kan inte läsa indexfilen"
 
-#: builtin/apply.c:4362 builtin/apply.c:4365 builtin/clone.c:92
-#: builtin/fetch.c:93
+#: builtin/apply.c:4522 builtin/apply.c:4525 builtin/clone.c:92
+#: builtin/fetch.c:92
 msgid "path"
 msgstr "sökväg"
 
-#: builtin/apply.c:4363
+#: builtin/apply.c:4523
 msgid "don't apply changes matching the given path"
 msgstr "tillämpa inte ändringar som motsvarar given sökväg"
 
-#: builtin/apply.c:4366
+#: builtin/apply.c:4526
 msgid "apply changes matching the given path"
 msgstr "tillämpa ändringar som motsvarar given sökväg"
 
-#: builtin/apply.c:4368
+#: builtin/apply.c:4528
 msgid "num"
 msgstr "antal"
 
-#: builtin/apply.c:4369
+#: builtin/apply.c:4529
 msgid "remove <num> leading slashes from traditional diff paths"
 msgstr "ta bort <antal> inledande snedstreck från traditionella diff-sökvägar"
 
-#: builtin/apply.c:4372
+#: builtin/apply.c:4532
 msgid "ignore additions made by the patch"
 msgstr "ignorera tillägg gjorda av patchen"
 
-#: builtin/apply.c:4374
+#: builtin/apply.c:4534
 msgid "instead of applying the patch, output diffstat for the input"
 msgstr "istället för att tillämpa patchen, skriv ut diffstat för indata"
 
-#: builtin/apply.c:4378
+#: builtin/apply.c:4538
 msgid "show number of added and deleted lines in decimal notation"
 msgstr "visa antal tillagda och borttagna rader decimalt"
 
-#: builtin/apply.c:4380
+#: builtin/apply.c:4540
 msgid "instead of applying the patch, output a summary for the input"
 msgstr "istället för att tillämpa patchen, skriv ut en summering av indata"
 
-#: builtin/apply.c:4382
+#: builtin/apply.c:4542
 msgid "instead of applying the patch, see if the patch is applicable"
 msgstr "istället för att tillämpa patchen, se om patchen kan tillämpas"
 
-#: builtin/apply.c:4384
+#: builtin/apply.c:4544
 msgid "make sure the patch is applicable to the current index"
 msgstr "se till att patchen kan tillämpas på aktuellt index"
 
-#: builtin/apply.c:4386
+#: builtin/apply.c:4546
 msgid "apply a patch without touching the working tree"
 msgstr "tillämpa en patch utan att röra arbetskatalogen"
 
-#: builtin/apply.c:4388
+#: builtin/apply.c:4548
+msgid "accept a patch that touches outside the working area"
+msgstr "godta en patch som rör filer utanför arbetskatalogen"
+
+#: builtin/apply.c:4550
 msgid "also apply the patch (use with --stat/--summary/--check)"
 msgstr "tillämpa också patchen (använd med --stat/--summary/--check)"
 
-#: builtin/apply.c:4390
+#: builtin/apply.c:4552
 msgid "attempt three-way merge if a patch does not apply"
 msgstr "försök en trevägssammanslagning om patchen inte kan tillämpas"
 
-#: builtin/apply.c:4392
+#: builtin/apply.c:4554
 msgid "build a temporary index based on embedded index information"
 msgstr "bygg ett temporärt index baserat på inbyggd indexinformation"
 
-#: builtin/apply.c:4394 builtin/checkout-index.c:198 builtin/ls-files.c:455
+#: builtin/apply.c:4556 builtin/checkout-index.c:198 builtin/ls-files.c:412
 msgid "paths are separated with NUL character"
 msgstr "sökvägar avdelas med NUL-tecken"
 
-#: builtin/apply.c:4397
+#: builtin/apply.c:4559
 msgid "ensure at least <n> lines of context match"
 msgstr "se till att åtminstone <n> rader sammanhang är lika"
 
-#: builtin/apply.c:4398
+#: builtin/apply.c:4560
 msgid "action"
 msgstr "åtgärd"
 
-#: builtin/apply.c:4399
+#: builtin/apply.c:4561
 msgid "detect new or modified lines that have whitespace errors"
 msgstr "detektera nya eller ändrade rader som har fel i blanktecken"
 
-#: builtin/apply.c:4402 builtin/apply.c:4405
+#: builtin/apply.c:4564 builtin/apply.c:4567
 msgid "ignore changes in whitespace when finding context"
 msgstr "ignorera ändringar i blanktecken för sammanhang"
 
-#: builtin/apply.c:4408
+#: builtin/apply.c:4570
 msgid "apply the patch in reverse"
 msgstr "tillämpa patchen baklänges"
 
-#: builtin/apply.c:4410
+#: builtin/apply.c:4572
 msgid "don't expect at least one line of context"
 msgstr "förvänta inte minst en rad sammanhang"
 
-#: builtin/apply.c:4412
+#: builtin/apply.c:4574
 msgid "leave the rejected hunks in corresponding *.rej files"
 msgstr "lämna refuserade stycken i motsvarande *.rej-filer"
 
-#: builtin/apply.c:4414
+#: builtin/apply.c:4576
 msgid "allow overlapping hunks"
 msgstr "tillåt överlappande stycken"
 
-#: builtin/apply.c:4417
+#: builtin/apply.c:4579
 msgid "tolerate incorrectly detected missing new-line at the end of file"
 msgstr "tolerera felaktigt detekterade saknade nyradstecken vid filslut"
 
-#: builtin/apply.c:4420
+#: builtin/apply.c:4582
 msgid "do not trust the line counts in the hunk headers"
 msgstr "lite inte på antalet linjer i styckehuvuden"
 
-#: builtin/apply.c:4422
+#: builtin/apply.c:4584
 msgid "root"
 msgstr "rot"
 
-#: builtin/apply.c:4423
+#: builtin/apply.c:4585
 msgid "prepend <root> to all filenames"
 msgstr "lägg till <rot> i alla filnamn"
 
-#: builtin/apply.c:4445
+#: builtin/apply.c:4607
 msgid "--3way outside a repository"
 msgstr "--3way utanför arkiv"
 
-#: builtin/apply.c:4453
+#: builtin/apply.c:4615
 msgid "--index outside a repository"
 msgstr "--index utanför arkiv"
 
-#: builtin/apply.c:4456
+#: builtin/apply.c:4618
 msgid "--cached outside a repository"
 msgstr "--cached utanför arkiv"
 
-#: builtin/apply.c:4472
+#: builtin/apply.c:4637
 #, c-format
 msgid "can't open patch '%s'"
 msgstr "kan inte öppna patchen \"%s\""
 
-#: builtin/apply.c:4486
+#: builtin/apply.c:4651
 #, c-format
 msgid "squelched %d whitespace error"
 msgid_plural "squelched %d whitespace errors"
 msgstr[0] "undertryckte %d fel i blanksteg"
 msgstr[1] "undertryckte %d fel i blanksteg"
 
-#: builtin/apply.c:4492 builtin/apply.c:4502
+#: builtin/apply.c:4657 builtin/apply.c:4667
 #, c-format
 msgid "%d line adds whitespace errors."
 msgid_plural "%d lines add whitespace errors."
 msgstr[0] "%d rad lägger till fel i blanksteg."
 msgstr[1] "%d rader lägger till fel i blanksteg."
 
@@ -2632,136 +2660,136 @@
 
 #: builtin/bisect--helper.c:19
 msgid "update BISECT_HEAD instead of checking out the current commit"
 msgstr "uppdatera BISECT_HEAD istället för att checka ut aktuell incheckning"
 
 #: builtin/blame.c:30
-msgid "git blame [options] [rev-opts] [rev] [--] file"
-msgstr "git blame [flaggor] [rev-flaggor] [rev] [--] fil"
+msgid "git blame [<options>] [<rev-opts>] [<rev>] [--] file"
+msgstr "git blame [<flaggor>] [<rev-flaggor>] [<rev>] [--] fil"
 
 #: builtin/blame.c:35
-msgid "[rev-opts] are documented in git-rev-list(1)"
-msgstr "[rev-flaggor] dokumenteras i git-rev-list(1)"
+msgid "<rev-opts> are documented in git-rev-list(1)"
+msgstr "<rev-flaggor> dokumenteras i git-rev-list(1)"
 
-#: builtin/blame.c:2501
+#: builtin/blame.c:2500
 msgid "Show blame entries as we find them, incrementally"
 msgstr "Visa klandringsposter när vi hittar dem, interaktivt"
 
-#: builtin/blame.c:2502
+#: builtin/blame.c:2501
 msgid "Show blank SHA-1 for boundary commits (Default: off)"
 msgstr "Visa blank SHA-1 för gränsincheckningar (Standard: av)"
 
-#: builtin/blame.c:2503
+#: builtin/blame.c:2502
 msgid "Do not treat root commits as boundaries (Default: off)"
 msgstr "Behandla inte rotincheckningar som gränser (Standard: av)"
 
-#: builtin/blame.c:2504
+#: builtin/blame.c:2503
 msgid "Show work cost statistics"
 msgstr "Visa statistik över arbetskostnad"
 
-#: builtin/blame.c:2505
+#: builtin/blame.c:2504
 msgid "Show output score for blame entries"
 msgstr "Visa utdatapoäng för klandringsposter"
 
-#: builtin/blame.c:2506
+#: builtin/blame.c:2505
 msgid "Show original filename (Default: auto)"
 msgstr "Visa originalfilnamn (Standard: auto)"
 
-#: builtin/blame.c:2507
+#: builtin/blame.c:2506
 msgid "Show original linenumber (Default: off)"
 msgstr "Visa ursprungligt radnummer (Standard: av)"
 
-#: builtin/blame.c:2508
+#: builtin/blame.c:2507
 msgid "Show in a format designed for machine consumption"
 msgstr "Visa i ett format avsett för maskinkonsumtion"
 
-#: builtin/blame.c:2509
+#: builtin/blame.c:2508
 msgid "Show porcelain format with per-line commit information"
 msgstr "Visa porslinsformat med per-rad-incheckningsinformation"
 
-#: builtin/blame.c:2510
+#: builtin/blame.c:2509
 msgid "Use the same output mode as git-annotate (Default: off)"
 msgstr "Använd samma utdataläge som git-annotate (Standard: av)"
 
-#: builtin/blame.c:2511
+#: builtin/blame.c:2510
 msgid "Show raw timestamp (Default: off)"
 msgstr "Visa rå tidsstämpel (Standard: av)"
 
-#: builtin/blame.c:2512
+#: builtin/blame.c:2511
 msgid "Show long commit SHA1 (Default: off)"
 msgstr "Visa lång inchecknings-SHA1 (Standard: av)"
 
-#: builtin/blame.c:2513
+#: builtin/blame.c:2512
 msgid "Suppress author name and timestamp (Default: off)"
 msgstr "Undertryck författarnamn och tidsstämpel (Standard: av)"
 
-#: builtin/blame.c:2514
+#: builtin/blame.c:2513
 msgid "Show author email instead of name (Default: off)"
 msgstr "Visa författarens e-post istället för namn (Standard: av)"
 
-#: builtin/blame.c:2515
+#: builtin/blame.c:2514
 msgid "Ignore whitespace differences"
 msgstr "Ignorera ändringar i blanksteg"
 
-#: builtin/blame.c:2516
+#: builtin/blame.c:2515
 msgid "Spend extra cycles to find better match"
 msgstr "Slösa extra cykler med att hitta bättre träff"
 
-#: builtin/blame.c:2517
+#: builtin/blame.c:2516
 msgid "Use revisions from <file> instead of calling git-rev-list"
 msgstr "Använd revisioner från <fil> istället för att anropa git-rev-list"
 
-#: builtin/blame.c:2518
+#: builtin/blame.c:2517
 msgid "Use <file>'s contents as the final image"
 msgstr "Använd <fil>s innehåll som slutgiltig bild"
 
-#: builtin/blame.c:2519 builtin/blame.c:2520
+#: builtin/blame.c:2518 builtin/blame.c:2519
 msgid "score"
 msgstr "poäng"
 
-#: builtin/blame.c:2519
+#: builtin/blame.c:2518
 msgid "Find line copies within and across files"
 msgstr "Hitta kopierade rader inuti och mellan filer"
 
-#: builtin/blame.c:2520
+#: builtin/blame.c:2519
 msgid "Find line movements within and across files"
 msgstr "Hitta flyttade rader inuti och mellan filer"
 
-#: builtin/blame.c:2521
+#: builtin/blame.c:2520
 msgid "n,m"
 msgstr "n,m"
 
-#: builtin/blame.c:2521
+#: builtin/blame.c:2520
 msgid "Process only line range n,m, counting from 1"
 msgstr "Behandla endast radintervallet n,m, med början på 1"
 
 #. TRANSLATORS: This string is used to tell us the maximum
 #. display width for a relative timestamp in "git blame"
 #. output.  For C locale, "4 years, 11 months ago", which
 #. takes 22 places, is the longest among various forms of
 #. relative timestamps, but your language may need more or
 #. fewer display columns.
-#: builtin/blame.c:2602
+#: builtin/blame.c:2601
 msgid "4 years, 11 months ago"
 msgstr "4 år, 11 månader sedan"
 
 #: builtin/branch.c:24
-msgid "git branch [options] [-r | -a] [--merged | --no-merged]"
-msgstr "git branch [flaggor] [-r | -a] [--merged | --no-merged]"
+msgid "git branch [<options>] [-r | -a] [--merged | --no-merged]"
+msgstr "git branch [<flaggor>] [-r | -a] [--merged | --no-merged]"
 
 #: builtin/branch.c:25
-msgid "git branch [options] [-l] [-f] <branchname> [<start-point>]"
-msgstr "git branch [flaggor] [-l] [-f] <grennamn> [<startpunkt>]"
+msgid "git branch [<options>] [-l] [-f] <branch-name> [<start-point>]"
+msgstr "git branch [<flaggor>] [-l] [-f] <grennamn> [<startpunkt>]"
 
 #: builtin/branch.c:26
-msgid "git branch [options] [-r] (-d | -D) <branchname>..."
-msgstr "git branch [flaggor] [-r] (-d | -D) <grennamn>..."
+msgid "git branch [<options>] [-r] (-d | -D) <branch-name>..."
+msgstr "git branch [<flaggor>] [-r] (-d | -D) <grennamn>..."
 
 #: builtin/branch.c:27
-msgid "git branch [options] (-m | -M) [<oldbranch>] <newbranch>"
-msgstr "git branch [flaggor] (-m | -M) [<gammal_gren>] <ny_gren>"
+msgid "git branch [<options>] (-m | -M) [<old-branch>] <new-branch>"
+msgstr "git branch [<flaggor>] (-m | -M) [<gammal_gren>] <ny_gren>"
 
 #: builtin/branch.c:152
 #, c-format
 msgid ""
 "deleting branch '%s' that has been merged to\n"
 "         '%s', but not yet merged to HEAD."
@@ -2895,268 +2923,273 @@
 
 #: builtin/branch.c:590
 #, c-format
 msgid "(no branch, bisect started on %s)"
 msgstr "(ingen gren, \"bisect\" startad på %s)"
 
-#: builtin/branch.c:593
+#: builtin/branch.c:596
+#, c-format
+msgid "(HEAD detached at %s)"
+msgstr "(HEAD frånkopplat vid %s)"
+
+#: builtin/branch.c:599
 #, c-format
-msgid "(detached from %s)"
-msgstr "(frånkopplad från %s)"
+msgid "(HEAD detached from %s)"
+msgstr "(HEAD frånkopplat från %s)"
 
-#: builtin/branch.c:596
+#: builtin/branch.c:603
 msgid "(no branch)"
 msgstr "(ingen gren)"
 
-#: builtin/branch.c:643
+#: builtin/branch.c:650
 #, c-format
 msgid "object '%s' does not point to a commit"
 msgstr "objektet \"%s\" pekar på en incheckning"
 
-#: builtin/branch.c:691
+#: builtin/branch.c:698
 msgid "some refs could not be read"
 msgstr "vissa referenser kunde inte läsas"
 
-#: builtin/branch.c:704
+#: builtin/branch.c:711
 msgid "cannot rename the current branch while not on any."
 msgstr ""
 "kunde inte byta namn på aktuell gren när du inte befinner dig på någon."
 
-#: builtin/branch.c:714
+#: builtin/branch.c:721
 #, c-format
 msgid "Invalid branch name: '%s'"
 msgstr "Felaktigt namn på gren: \"%s\""
 
-#: builtin/branch.c:729
+#: builtin/branch.c:736
 msgid "Branch rename failed"
 msgstr "Misslyckades byta namn på gren"
 
-#: builtin/branch.c:733
+#: builtin/branch.c:740
 #, c-format
 msgid "Renamed a misnamed branch '%s' away"
 msgstr "Bytte bort namn på en felaktigt namngiven gren \"%s\""
 
-#: builtin/branch.c:737
+#: builtin/branch.c:744
 #, c-format
 msgid "Branch renamed to %s, but HEAD is not updated!"
 msgstr "Grenen namnbytt till %s, men HEAD har inte uppdaterats!"
 
-#: builtin/branch.c:744
+#: builtin/branch.c:751
 msgid "Branch is renamed, but update of config-file failed"
 msgstr "Grenen namnbytt, men misslyckades uppdatera konfigurationsfilen"
 
-#: builtin/branch.c:759
+#: builtin/branch.c:766
 #, c-format
 msgid "malformed object name %s"
 msgstr "felformat objektnamn %s"
 
-#: builtin/branch.c:783
+#: builtin/branch.c:790
 #, c-format
 msgid "could not write branch description template: %s"
 msgstr "kunde inte skriva grenbeskrivningsmall: %s"
 
-#: builtin/branch.c:813
+#: builtin/branch.c:820
 msgid "Generic options"
 msgstr "Allmänna flaggor"
 
-#: builtin/branch.c:815
+#: builtin/branch.c:822
 msgid "show hash and subject, give twice for upstream branch"
 msgstr "visa hash och ärenderad, ange två gånger för uppströmsgren"
 
-#: builtin/branch.c:816
+#: builtin/branch.c:823
 msgid "suppress informational messages"
 msgstr "undertryck informationsmeddelanden"
 
-#: builtin/branch.c:817
+#: builtin/branch.c:824
 msgid "set up tracking mode (see git-pull(1))"
 msgstr "ställ in spårningsläge (se git-pull(1))"
 
-#: builtin/branch.c:819
+#: builtin/branch.c:826
 msgid "change upstream info"
 msgstr "ändra uppströmsinformation"
 
-#: builtin/branch.c:823
+#: builtin/branch.c:830
 msgid "use colored output"
 msgstr "använd färgad utdata"
 
-#: builtin/branch.c:824
+#: builtin/branch.c:831
 msgid "act on remote-tracking branches"
 msgstr "arbeta på fjärrspårande grenar"
 
-#: builtin/branch.c:827 builtin/branch.c:833 builtin/branch.c:854
-#: builtin/branch.c:860 builtin/commit.c:1586 builtin/commit.c:1587
-#: builtin/commit.c:1588 builtin/commit.c:1589 builtin/tag.c:616
+#: builtin/branch.c:834 builtin/branch.c:840 builtin/branch.c:861
+#: builtin/branch.c:867 builtin/commit.c:1582 builtin/commit.c:1583
+#: builtin/commit.c:1584 builtin/commit.c:1585 builtin/tag.c:616
 #: builtin/tag.c:622
 msgid "commit"
 msgstr "incheckning"
 
-#: builtin/branch.c:828 builtin/branch.c:834
+#: builtin/branch.c:835 builtin/branch.c:841
 msgid "print only branches that contain the commit"
 msgstr "visa endast grenar som innehåller incheckningen"
 
-#: builtin/branch.c:840
+#: builtin/branch.c:847
 msgid "Specific git-branch actions:"
 msgstr "Specifika git-branch-åtgärder:"
 
-#: builtin/branch.c:841
+#: builtin/branch.c:848
 msgid "list both remote-tracking and local branches"
 msgstr "visa både fjärrspårande och lokala grenar"
 
-#: builtin/branch.c:843
+#: builtin/branch.c:850
 msgid "delete fully merged branch"
 msgstr "ta bort helt sammanslagen gren"
 
-#: builtin/branch.c:844
+#: builtin/branch.c:851
 msgid "delete branch (even if not merged)"
 msgstr "ta bort gren (även om inte helt sammanslagen)"
 
-#: builtin/branch.c:845
+#: builtin/branch.c:852
 msgid "move/rename a branch and its reflog"
 msgstr "flytta/ta bort en gren och dess reflogg"
 
-#: builtin/branch.c:846
+#: builtin/branch.c:853
 msgid "move/rename a branch, even if target exists"
 msgstr "flytta/ta bort en gren, även om målet finns"
 
-#: builtin/branch.c:847
+#: builtin/branch.c:854
 msgid "list branch names"
 msgstr "lista namn på grenar"
 
-#: builtin/branch.c:848
+#: builtin/branch.c:855
 msgid "create the branch's reflog"
 msgstr "skapa grenens reflogg"
 
-#: builtin/branch.c:850
+#: builtin/branch.c:857
 msgid "edit the description for the branch"
 msgstr "redigera beskrivning för grenen"
 
-#: builtin/branch.c:851
+#: builtin/branch.c:858
 msgid "force creation, move/rename, deletion"
 msgstr "tvinga skapande, flytt/namnändring, borttagande"
 
-#: builtin/branch.c:854
+#: builtin/branch.c:861
 msgid "print only not merged branches"
 msgstr "visa endast ej sammanslagna grenar"
 
-#: builtin/branch.c:860
+#: builtin/branch.c:867
 msgid "print only merged branches"
 msgstr "visa endast sammanslagna grenar"
 
-#: builtin/branch.c:864
+#: builtin/branch.c:871
 msgid "list branches in columns"
 msgstr "visa grenar i spalter"
 
-#: builtin/branch.c:877
+#: builtin/branch.c:884
 msgid "Failed to resolve HEAD as a valid ref."
 msgstr "Misslyckades slå upp HEAD som giltig referens"
 
-#: builtin/branch.c:881 builtin/clone.c:637
+#: builtin/branch.c:888 builtin/clone.c:637
 msgid "HEAD not found below refs/heads!"
 msgstr "HEAD hittades inte under refs/heads!"
 
-#: builtin/branch.c:903
+#: builtin/branch.c:910
 msgid "--column and --verbose are incompatible"
 msgstr "--column och --verbose är inkompatibla"
 
-#: builtin/branch.c:914 builtin/branch.c:953
+#: builtin/branch.c:921 builtin/branch.c:960
 msgid "branch name required"
 msgstr "grennamn krävs"
 
-#: builtin/branch.c:929
+#: builtin/branch.c:936
 msgid "Cannot give description to detached HEAD"
 msgstr "Kan inte beskriva frånkopplad HEAD"
 
-#: builtin/branch.c:934
+#: builtin/branch.c:941
 msgid "cannot edit description of more than one branch"
 msgstr "kan inte redigera beskrivning för mer än en gren"
 
-#: builtin/branch.c:941
+#: builtin/branch.c:948
 #, c-format
 msgid "No commit on branch '%s' yet."
 msgstr "Inga incheckningar på grenen \"%s\" ännu"
 
-#: builtin/branch.c:944
+#: builtin/branch.c:951
 #, c-format
 msgid "No branch named '%s'."
 msgstr "Ingen gren vid namnet \"%s\"."
 
-#: builtin/branch.c:959
+#: builtin/branch.c:966
 msgid "too many branches for a rename operation"
 msgstr "för många grenar för namnbyte"
 
-#: builtin/branch.c:964
+#: builtin/branch.c:971
 msgid "too many branches to set new upstream"
 msgstr "för många grenar för att byta uppström"
 
-#: builtin/branch.c:968
+#: builtin/branch.c:975
 #, c-format
 msgid ""
 "could not set upstream of HEAD to %s when it does not point to any branch."
 msgstr ""
 "kunde inte sätta uppström för HEAD till %s när det inte pekar mot någon gren."
 
-#: builtin/branch.c:971 builtin/branch.c:993 builtin/branch.c:1014
+#: builtin/branch.c:978 builtin/branch.c:1000 builtin/branch.c:1021
 #, c-format
 msgid "no such branch '%s'"
 msgstr "okänd gren \"%s\""
 
-#: builtin/branch.c:975
+#: builtin/branch.c:982
 #, c-format
 msgid "branch '%s' does not exist"
 msgstr "grenen \"%s\" finns inte"
 
-#: builtin/branch.c:987
+#: builtin/branch.c:994
 msgid "too many branches to unset upstream"
 msgstr "för många grenar för att ta bort uppström"
 
-#: builtin/branch.c:991
+#: builtin/branch.c:998
 msgid "could not unset upstream of HEAD when it does not point to any branch."
 msgstr ""
 "kunde inte ta bort uppström för HEAD när det inte pekar mot någon gren."
 
-#: builtin/branch.c:997
+#: builtin/branch.c:1004
 #, c-format
 msgid "Branch '%s' has no upstream information"
 msgstr "Grenen \"%s\" har ingen uppströmsinformation"
 
-#: builtin/branch.c:1011
+#: builtin/branch.c:1018
 msgid "it does not make sense to create 'HEAD' manually"
 msgstr "kan inte skapa \"HEAD\" manuellt"
 
-#: builtin/branch.c:1017
+#: builtin/branch.c:1024
 msgid "-a and -r options to 'git branch' do not make sense with a branch name"
 msgstr ""
 "flaggorna -a och -r på \"git branch\" kan inte anges tillsammans med ett "
 "grennamn"
 
-#: builtin/branch.c:1020
+#: builtin/branch.c:1027
 #, c-format
 msgid ""
 "The --set-upstream flag is deprecated and will be removed. Consider using --"
 "track or --set-upstream-to\n"
 msgstr ""
 "Flaggan --set-upstream rekommenderas ej och kommer tas bort. Använd --track "
 "eller --set-upstream-to\n"
 
-#: builtin/branch.c:1037
+#: builtin/branch.c:1044
 #, c-format
 msgid ""
 "\n"
 "If you wanted to make '%s' track '%s', do this:\n"
 "\n"
 msgstr ""
 "\n"
 "Om du vill göra så att \"%s\" spårar \"%s\" gör du så här:\n"
 "\n"
 
-#: builtin/branch.c:1038
+#: builtin/branch.c:1045
 #, c-format
 msgid "    git branch -d %s\n"
 msgstr "    git branch -d %s\n"
 
-#: builtin/branch.c:1039
+#: builtin/branch.c:1046
 #, c-format
 msgid "    git branch --set-upstream-to %s\n"
 msgstr "    git branch --set-upstream-to %s\n"
 
 #: builtin/bundle.c:47
 #, c-format
@@ -3168,59 +3201,59 @@
 msgstr "Behöver ett arkiv för att skapa ett paket (bundle)."
 
 #: builtin/bundle.c:60
 msgid "Need a repository to unbundle."
 msgstr "Behöver ett arkiv för att packa upp ett paket (bundle)."
 
-#: builtin/cat-file.c:328
-msgid "git cat-file (-t|-s|-e|-p|<type>|--textconv) <object>"
-msgstr "git cat-file (-t|-s|-e|-p|<typ>|--textconv) <objekt>"
-
-#: builtin/cat-file.c:329
-msgid "git cat-file (--batch|--batch-check) < <list_of_objects>"
-msgstr "git cat-file (--batch|--batch-check) < <objektlista>"
+#: builtin/cat-file.c:326
+msgid "git cat-file (-t | -s | -e | -p | <type> | --textconv) <object>"
+msgstr "git cat-file (-t | -s | -e | -p | <typ> | --textconv) <objekt>"
+
+#: builtin/cat-file.c:327
+msgid "git cat-file (--batch | --batch-check) < <list-of-objects>"
+msgstr "git cat-file (--batch | --batch-check) < <objektlista>"
 
-#: builtin/cat-file.c:366
+#: builtin/cat-file.c:364
 msgid "<type> can be one of: blob, tree, commit, tag"
 msgstr "<typ> kan vara en av: blob, tree, commit, tag"
 
-#: builtin/cat-file.c:367
+#: builtin/cat-file.c:365
 msgid "show object type"
 msgstr "visa objekttyp"
 
-#: builtin/cat-file.c:368
+#: builtin/cat-file.c:366
 msgid "show object size"
 msgstr "visa objektstorlek"
 
-#: builtin/cat-file.c:370
+#: builtin/cat-file.c:368
 msgid "exit with zero when there's no error"
 msgstr "avsluta med noll när det inte uppstått något fel"
 
-#: builtin/cat-file.c:371
+#: builtin/cat-file.c:369
 msgid "pretty-print object's content"
 msgstr "visa objektets innehåll snyggt"
 
-#: builtin/cat-file.c:373
+#: builtin/cat-file.c:371
 msgid "for blob objects, run textconv on object's content"
 msgstr "för blob-objekt, kör textconv på objektets innehåll"
 
-#: builtin/cat-file.c:375
+#: builtin/cat-file.c:373
 msgid "show info and content of objects fed from the standard input"
 msgstr "visa information och innehåll för objekt som listas på standard in"
 
-#: builtin/cat-file.c:378
+#: builtin/cat-file.c:376
 msgid "show info about objects fed from the standard input"
 msgstr "visa information för objekt som listas på standard in"
 
 #: builtin/check-attr.c:11
-msgid "git check-attr [-a | --all | attr...] [--] pathname..."
-msgstr "git check-attr [-a | --all | attr...] [--] sökväg..."
+msgid "git check-attr [-a | --all | <attr>...] [--] <pathname>..."
+msgstr "git check-attr [-a | --all | <attr>...] [--] <sökväg>..."
 
 #: builtin/check-attr.c:12
-msgid "git check-attr --stdin [-z] [-a | --all | attr...] < <list-of-paths>"
-msgstr "git check-attr --stdin [-z] [-a | --all | attr...] < <sökvägslista>"
+msgid "git check-attr --stdin [-z] [-a | --all | <attr>...] < <list-of-paths>"
+msgstr "git check-attr --stdin [-z] [-a | --all | <attr>...] < <sökvägslista>"
 
 #: builtin/check-attr.c:19
 msgid "report all attributes set on file"
 msgstr "visa alla attribut som satts på filen"
 
 #: builtin/check-attr.c:20
@@ -3269,14 +3302,14 @@
 
 #: builtin/check-ignore.c:168
 msgid "--non-matching is only valid with --verbose"
 msgstr "--non-matching är endast giltig med --verbose"
 
 #: builtin/check-mailmap.c:8
-msgid "git check-mailmap [options] <contact>..."
-msgstr "git check-mailmap [flaggor] <kontakt>..."
+msgid "git check-mailmap [<options>] <contact>..."
+msgstr "git check-mailmap [<flaggor>] <kontakt>..."
 
 #: builtin/check-mailmap.c:13
 msgid "also read contacts from stdin"
 msgstr "läs även kontakter från standard in"
 
 #: builtin/check-mailmap.c:24
@@ -3286,14 +3319,14 @@
 
 #: builtin/check-mailmap.c:47
 msgid "no contacts specified"
 msgstr "inga kontakter angavs"
 
 #: builtin/checkout-index.c:126
-msgid "git checkout-index [options] [--] [<file>...]"
-msgstr "git checkout-index [flaggor] [--] [<fil>...]"
+msgid "git checkout-index [<options>] [--] [<file>...]"
+msgstr "git checkout-index [<flaggor>] [--] [<fil>...]"
 
 #: builtin/checkout-index.c:188
 msgid "check out all files in the index"
 msgstr "checka ut alla filer i indexet"
 
 #: builtin/checkout-index.c:189
@@ -3330,18 +3363,18 @@
 
 #: builtin/checkout-index.c:208
 msgid "copy out the files from named stage"
 msgstr "kopiera ut filer från namngiven etapp"
 
 #: builtin/checkout.c:25
-msgid "git checkout [options] <branch>"
-msgstr "git checkout [flaggor] <gren>"
+msgid "git checkout [<options>] <branch>"
+msgstr "git checkout [<flaggor>] <gren>"
 
 #: builtin/checkout.c:26
-msgid "git checkout [options] [<branch>] -- <file>..."
-msgstr "git checkout [flaggor] [<gren>] -- <fil>..."
+msgid "git checkout [<options>] [<branch>] -- <file>..."
+msgstr "git checkout [<flaggor>] [<gren>] -- <fil>..."
 
 #: builtin/checkout.c:132 builtin/checkout.c:165
 #, c-format
 msgid "path '%s' does not have our version"
 msgstr "sökvägen \"%s\" har inte vår version"
 
@@ -3464,19 +3497,19 @@
 #: builtin/checkout.c:747
 #, c-format
 msgid ""
 "If you want to keep them by creating a new branch, this may be a good time\n"
 "to do so with:\n"
 "\n"
-" git branch new_branch_name %s\n"
+" git branch <new-branch-name> %s\n"
 "\n"
 msgstr ""
 "Om du vill behålla dem genom att skapa en ny gren är nu en bra tidpunkt\n"
 "att göra så, med:\n"
 "\n"
-" git branch nytt_grennamn %s\n"
+" git branch <nytt_grennamn> %s\n"
 "\n"
 
 #: builtin/checkout.c:777
 msgid "internal error in revision walk"
 msgstr "internt fel vid genomgång av revisioner (revision walk)"
 
@@ -3586,14 +3619,14 @@
 
 #: builtin/checkout.c:1128
 msgid "do not limit pathspecs to sparse entries only"
 msgstr "begränsa inte sökvägar till endast glesa poster"
 
 #: builtin/checkout.c:1130
-msgid "second guess 'git checkout no-such-branch'"
-msgstr "förutspå \"git checkout gren-saknas\""
+msgid "second guess 'git checkout <no-such-branch>'"
+msgstr "förutspå \"git checkout <gren-saknas>\""
 
 #: builtin/checkout.c:1153
 msgid "-b, -B and --orphan are mutually exclusive"
 msgstr "-b, -B och --orphan är ömsesidigt uteslutande"
 
 #: builtin/checkout.c:1170
@@ -3710,22 +3743,23 @@
 msgstr "VARNING: Hittar inte poster som motsvarar: %s"
 
 #: builtin/clean.c:717
 msgid "Select items to delete"
 msgstr "Välj poster att ta bort"
 
-#: builtin/clean.c:757
+#. TRANSLATORS: Make sure to keep [y/N] as is
+#: builtin/clean.c:758
 #, c-format
-msgid "remove %s? "
-msgstr "ta bort %s?"
+msgid "Remove %s [y/N]? "
+msgstr "Ta bort %s [Y=ja / N=nej]?"
 
-#: builtin/clean.c:782
+#: builtin/clean.c:783
 msgid "Bye."
 msgstr "Hej då."
 
-#: builtin/clean.c:790
+#: builtin/clean.c:791
 msgid ""
 "clean               - start cleaning\n"
 "filter by pattern   - exclude items from deletion\n"
 "select by numbers   - select items to be deleted by numbers\n"
 "ask each            - confirm each deletion (like \"rm -i\")\n"
 "quit                - stop cleaning\n"
@@ -3737,89 +3771,89 @@
 "select by numbers   - markera poster som ska tas bort med siffror\n"
 "ask each            - bekräfta varje borttagning (som \"rm -i\")\n"
 "quit                - sluta städa\n"
 "help                - denna skärm\n"
 "?                   - hjälp för kommandoval"
 
-#: builtin/clean.c:817
+#: builtin/clean.c:818
 msgid "*** Commands ***"
 msgstr "*** Kommandon ***"
 
-#: builtin/clean.c:818
+#: builtin/clean.c:819
 msgid "What now"
 msgstr "Vad nu"
 
-#: builtin/clean.c:826
+#: builtin/clean.c:827
 msgid "Would remove the following item:"
 msgid_plural "Would remove the following items:"
 msgstr[0] "Skulle ta bort följande post:"
 msgstr[1] "Skulle ta bort följande poster:"
 
-#: builtin/clean.c:843
+#: builtin/clean.c:844
 msgid "No more files to clean, exiting."
 msgstr "Inga fler filer att städa, avslutar."
 
-#: builtin/clean.c:874
+#: builtin/clean.c:875
 msgid "do not print names of files removed"
 msgstr "skriv inte ut namn på borttagna filer"
 
-#: builtin/clean.c:876
+#: builtin/clean.c:877
 msgid "force"
 msgstr "tvinga"
 
-#: builtin/clean.c:877
+#: builtin/clean.c:878
 msgid "interactive cleaning"
 msgstr "städa interaktivt"
 
-#: builtin/clean.c:879
+#: builtin/clean.c:880
 msgid "remove whole directories"
 msgstr "ta bort hela kataloger"
 
-#: builtin/clean.c:880 builtin/describe.c:407 builtin/grep.c:714
-#: builtin/ls-files.c:486 builtin/name-rev.c:311 builtin/show-ref.c:185
+#: builtin/clean.c:881 builtin/describe.c:407 builtin/grep.c:714
+#: builtin/ls-files.c:443 builtin/name-rev.c:311 builtin/show-ref.c:185
 msgid "pattern"
 msgstr "mönster"
 
-#: builtin/clean.c:881
+#: builtin/clean.c:882
 msgid "add <pattern> to ignore rules"
 msgstr "lägg till <mönster> till ignoreringsregler"
 
-#: builtin/clean.c:882
+#: builtin/clean.c:883
 msgid "remove ignored files, too"
 msgstr "ta även bort ignorerade filer"
 
-#: builtin/clean.c:884
+#: builtin/clean.c:885
 msgid "remove only ignored files"
 msgstr "ta endast bort ignorerade filer"
 
-#: builtin/clean.c:902
+#: builtin/clean.c:903
 msgid "-x and -X cannot be used together"
 msgstr "-x och -X kan inte användas samtidigt"
 
-#: builtin/clean.c:906
+#: builtin/clean.c:907
 msgid ""
 "clean.requireForce set to true and neither -i, -n, nor -f given; refusing to "
 "clean"
 msgstr ""
 "clean.requireForce satt till true, men varken -i, -n eller -f angavs; vägrar "
 "städa"
 
-#: builtin/clean.c:909
+#: builtin/clean.c:910
 msgid ""
 "clean.requireForce defaults to true and neither -i, -n, nor -f given; "
 "refusing to clean"
 msgstr ""
 "clean.requireForce har standardvärdet true och varken -i, -n eller -f "
 "angavs; vägrar städa"
 
 #: builtin/clone.c:37
-msgid "git clone [options] [--] <repo> [<dir>]"
-msgstr "git clone [flaggor] [--] <arkiv> [<kat>]"
+msgid "git clone [<options>] [--] <repo> [<dir>]"
+msgstr "git clone [<flaggor>] [--] <arkiv> [<kat>]"
 
-#: builtin/clone.c:66 builtin/fetch.c:112 builtin/merge.c:224
-#: builtin/push.c:514
+#: builtin/clone.c:66 builtin/fetch.c:111 builtin/merge.c:224
+#: builtin/push.c:523
 msgid "force progress reporting"
 msgstr "tvinga förloppsrapportering"
 
 #: builtin/clone.c:68
 msgid "don't create a checkout"
 msgstr "skapa inte någon utcheckning"
@@ -3873,13 +3907,13 @@
 msgstr "checka ut <gren> istället för fjärrens HEAD"
 
 #: builtin/clone.c:93
 msgid "path to git-upload-pack on the remote"
 msgstr "sökväg till git-upload-pack på fjärren"
 
-#: builtin/clone.c:94 builtin/fetch.c:113 builtin/grep.c:659
+#: builtin/clone.c:94 builtin/fetch.c:112 builtin/grep.c:659
 msgid "depth"
 msgstr "djup"
 
 #: builtin/clone.c:95
 msgid "create a shallow clone of that depth"
 msgstr "skapa en grund klon på detta djup"
@@ -4020,13 +4054,13 @@
 
 #: builtin/clone.c:809
 #, c-format
 msgid "repository '%s' does not exist"
 msgstr "arkivet \"%s\" finns inte"
 
-#: builtin/clone.c:815 builtin/fetch.c:1155
+#: builtin/clone.c:815 builtin/fetch.c:1156
 #, c-format
 msgid "depth %s is not a positive number"
 msgstr "djupet %s är inte ett positivt tal"
 
 #: builtin/clone.c:825
 #, c-format
@@ -4035,65 +4069,65 @@
 
 #: builtin/clone.c:835
 #, c-format
 msgid "working tree '%s' already exists."
 msgstr "arbetsträdet \"%s\" finns redan."
 
-#: builtin/clone.c:848 builtin/clone.c:860
+#: builtin/clone.c:850 builtin/clone.c:861
 #, c-format
 msgid "could not create leading directories of '%s'"
 msgstr "kunde inte skapa inledande kataloger för \"%s\""
 
-#: builtin/clone.c:851
+#: builtin/clone.c:853
 #, c-format
-msgid "could not create work tree dir '%s'."
+msgid "could not create work tree dir '%s'"
 msgstr "kunde inte skapa arbetskatalogen \"%s\""
 
-#: builtin/clone.c:870
+#: builtin/clone.c:871
 #, c-format
 msgid "Cloning into bare repository '%s'...\n"
 msgstr "Klonar till ett naket arkiv \"%s\"...\n"
 
-#: builtin/clone.c:872
+#: builtin/clone.c:873
 #, c-format
 msgid "Cloning into '%s'...\n"
 msgstr "Klonar till \"%s\"...\n"
 
-#: builtin/clone.c:897
+#: builtin/clone.c:898
 msgid "--dissociate given, but there is no --reference"
 msgstr "--dissociate angavs, men --reference har inte angivits"
 
-#: builtin/clone.c:912
+#: builtin/clone.c:913
 msgid "--depth is ignored in local clones; use file:// instead."
 msgstr "--depth ignoreras i lokala kloningar; använd file:// istället"
 
-#: builtin/clone.c:915
+#: builtin/clone.c:916
 msgid "source repository is shallow, ignoring --local"
 msgstr "källarkivet är grunt, ignorerar --local"
 
-#: builtin/clone.c:920
+#: builtin/clone.c:921
 msgid "--local is ignored"
 msgstr "--local ignoreras"
 
-#: builtin/clone.c:924
+#: builtin/clone.c:925
 #, c-format
 msgid "Don't know how to clone %s"
 msgstr "Vet inte hur man klonar %s"
 
-#: builtin/clone.c:975 builtin/clone.c:983
+#: builtin/clone.c:976 builtin/clone.c:984
 #, c-format
 msgid "Remote branch %s not found in upstream %s"
 msgstr "Fjärrgrenen %s hittades inte i uppströmsarkivet %s"
 
-#: builtin/clone.c:986
+#: builtin/clone.c:987
 msgid "You appear to have cloned an empty repository."
 msgstr "Du verkar ha klonat ett tomt arkiv."
 
 #: builtin/column.c:9
-msgid "git column [options]"
-msgstr "git column [flaggor]"
+msgid "git column [<options>]"
+msgstr "git column [<flaggor>]"
 
 #: builtin/column.c:26
 msgid "lookup config vars"
 msgstr "slå upp konfigurationsvariabler"
 
 #: builtin/column.c:27 builtin/column.c:28
@@ -4118,18 +4152,18 @@
 
 #: builtin/column.c:51
 msgid "--command must be the first argument"
 msgstr "--command måste vara första argument"
 
 #: builtin/commit.c:37
-msgid "git commit [options] [--] <pathspec>..."
-msgstr "git commit [flaggor] [--] <sökväg>..."
+msgid "git commit [<options>] [--] <pathspec>..."
+msgstr "git commit [<flaggor>] [--] <sökväg>..."
 
 #: builtin/commit.c:42
-msgid "git status [options] [--] <pathspec>..."
-msgstr "git status [flaggor] [--] <sökväg>..."
+msgid "git status [<options>] [--] <pathspec>..."
+msgstr "git status [<flaggor>] [--] <sökväg>..."
 
 #: builtin/commit.c:47
 msgid ""
 "Your name and email address were configured automatically based\n"
 "on your username and hostname. Please check that they are accurate.\n"
 "You can suppress this message by setting them explicitly. Run the\n"
@@ -4221,120 +4255,120 @@
 "\n"
 "    git reset\n"
 "\n"
 "\"git cherry-pick --continue\" kommer därefter att återuppta\n"
 "cherry-pick för återstående incheckningar.\n"
 
-#: builtin/commit.c:302
+#: builtin/commit.c:304
 msgid "failed to unpack HEAD tree object"
 msgstr "misslyckades packa upp HEAD:s trädobjekt"
 
-#: builtin/commit.c:342
+#: builtin/commit.c:344
 msgid "unable to create temporary index"
 msgstr "kunde inte skapa temporär indexfil"
 
-#: builtin/commit.c:348
+#: builtin/commit.c:350
 msgid "interactive add failed"
 msgstr "interaktiv tilläggning misslyckades"
 
-#: builtin/commit.c:359
+#: builtin/commit.c:361
 msgid "unable to write index file"
 msgstr "kan inte skriva indexfil"
 
-#: builtin/commit.c:361
+#: builtin/commit.c:363
 msgid "unable to update temporary index"
 msgstr "kan inte uppdatera temporärt index"
 
-#: builtin/commit.c:363
+#: builtin/commit.c:365
 msgid "Failed to update main cache tree"
 msgstr "Misslyckades uppdatera huvud-cacheträdet"
 
-#: builtin/commit.c:387 builtin/commit.c:412 builtin/commit.c:461
+#: builtin/commit.c:389 builtin/commit.c:414 builtin/commit.c:463
 msgid "unable to write new_index file"
 msgstr "kunde inte skriva filen new_index"
 
-#: builtin/commit.c:443
+#: builtin/commit.c:445
 msgid "cannot do a partial commit during a merge."
 msgstr "kan inte utföra en delvis incheckning under en sammanslagning."
 
-#: builtin/commit.c:445
+#: builtin/commit.c:447
 msgid "cannot do a partial commit during a cherry-pick."
 msgstr "kan inte utföra en delvis incheckning under en cherry-pick."
 
-#: builtin/commit.c:454
+#: builtin/commit.c:456
 msgid "cannot read the index"
 msgstr "kan inte läsa indexet"
 
-#: builtin/commit.c:473
+#: builtin/commit.c:475
 msgid "unable to write temporary index file"
 msgstr "kunde inte skriva temporär indexfil"
 
-#: builtin/commit.c:584
+#: builtin/commit.c:580
 #, c-format
 msgid "commit '%s' lacks author header"
 msgstr "incheckningen \"%s\" saknar författarhuvud"
 
-#: builtin/commit.c:586
+#: builtin/commit.c:582
 #, c-format
 msgid "commit '%s' has malformed author line"
 msgstr "incheckningen \"%s\" har felformaterat författarhuvud"
 
-#: builtin/commit.c:605
+#: builtin/commit.c:601
 msgid "malformed --author parameter"
 msgstr "felformad \"--author\"-flagga"
 
-#: builtin/commit.c:613
+#: builtin/commit.c:609
 #, c-format
 msgid "invalid date format: %s"
 msgstr "felaktigt datumformat: %s"
 
-#: builtin/commit.c:657
+#: builtin/commit.c:653
 msgid ""
 "unable to select a comment character that is not used\n"
 "in the current commit message"
 msgstr ""
 "kunde inte välja ett kommentarstecken som inte använts\n"
 "i det befintliga incheckningsmeddelandet"
 
-#: builtin/commit.c:694 builtin/commit.c:727 builtin/commit.c:1084
+#: builtin/commit.c:690 builtin/commit.c:723 builtin/commit.c:1080
 #, c-format
 msgid "could not lookup commit %s"
 msgstr "kunde inte slå upp incheckningen %s"
 
-#: builtin/commit.c:706 builtin/shortlog.c:273
+#: builtin/commit.c:702 builtin/shortlog.c:273
 #, c-format
 msgid "(reading log message from standard input)\n"
 msgstr "(läser loggmeddelande från standard in)\n"
 
-#: builtin/commit.c:708
+#: builtin/commit.c:704
 msgid "could not read log from standard input"
 msgstr "kunde inte läsa logg från standard in"
 
-#: builtin/commit.c:712
+#: builtin/commit.c:708
 #, c-format
 msgid "could not read log file '%s'"
 msgstr "kunde inte läsa loggfilen \"%s\""
 
-#: builtin/commit.c:734
+#: builtin/commit.c:730
 msgid "could not read MERGE_MSG"
 msgstr "kunde inte läsa MERGE_MSG"
 
-#: builtin/commit.c:738
+#: builtin/commit.c:734
 msgid "could not read SQUASH_MSG"
 msgstr "kunde inte läsa SQUASH_MSG"
 
-#: builtin/commit.c:742
+#: builtin/commit.c:738
 #, c-format
 msgid "could not read '%s'"
 msgstr "kunde inte läsa \"%s\""
 
-#: builtin/commit.c:789
+#: builtin/commit.c:785
 msgid "could not write commit template"
 msgstr "kunde inte skriva incheckningsmall"
 
-#: builtin/commit.c:807
+#: builtin/commit.c:803
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a merge.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
@@ -4343,13 +4377,13 @@
 "\n"
 "Det verkar som du checkar in en sammanslagning.\n"
 "Om det inte stämmer tar du bort filen\n"
 "\t%s\n"
 "och försöker igen.\n"
 
-#: builtin/commit.c:812
+#: builtin/commit.c:808
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a cherry-pick.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
@@ -4358,394 +4392,395 @@
 "\n"
 "Det verkar som du checkar in en cherry-pick.\n"
 "Om det inte stämmer tar du bort filen\n"
 "\t%s\n"
 "och försöker igen.\n"
 
-#: builtin/commit.c:825
+#: builtin/commit.c:821
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be ignored, and an empty message aborts the commit.\n"
 msgstr ""
 "Ange incheckningsmeddelandet för dina ändringar. Rader som inleds\n"
 "med \"%c\" kommer ignoreras, och ett tomt meddelande avbryter "
 "incheckningen.\n"
 
-#: builtin/commit.c:832
+#: builtin/commit.c:828
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be kept; you may remove them yourself if you want to.\n"
 "An empty message aborts the commit.\n"
 msgstr ""
 "Ange incheckningsmeddelandet för dina ändringar. Rader som inleds\n"
 "med \"%c\" kommer behållas; du kan själv ta bort dem om du vill.\n"
 "Ett tomt meddelande avbryter incheckningen.\n"
 
-#: builtin/commit.c:852
+#: builtin/commit.c:848
 #, c-format
 msgid "%sAuthor:    %.*s <%.*s>"
 msgstr "%sFörfattare: %.*s <%.*s>"
 
-#: builtin/commit.c:860
+#: builtin/commit.c:856
 #, c-format
 msgid "%sDate:      %s"
 msgstr "%sDatum:      %s"
 
-#: builtin/commit.c:867
+#: builtin/commit.c:863
 #, c-format
 msgid "%sCommitter: %.*s <%.*s>"
 msgstr "%sIncheckare: %.*s <%.*s>"
 
-#: builtin/commit.c:885
+#: builtin/commit.c:881
 msgid "Cannot read index"
 msgstr "Kan inte läsa indexet"
 
-#: builtin/commit.c:942
+#: builtin/commit.c:938
 msgid "Error building trees"
 msgstr "Fel vid byggande av träd"
 
-#: builtin/commit.c:957 builtin/tag.c:495
+#: builtin/commit.c:953 builtin/tag.c:495
 #, c-format
 msgid "Please supply the message using either -m or -F option.\n"
 msgstr "Ange meddelandet en av flaggorna -m eller -F.\n"
 
-#: builtin/commit.c:1059
+#: builtin/commit.c:1055
 #, c-format
-msgid "No existing author found with '%s'"
-msgstr "Hittade ingen befintlig författare med \"%s\""
+msgid "--author '%s' is not 'Name <email>' and matches no existing author"
+msgstr ""
+"--author '%s' är inte 'Namn <epost>' och matchar ingen befintlig författare"
 
-#: builtin/commit.c:1074 builtin/commit.c:1314
+#: builtin/commit.c:1070 builtin/commit.c:1310
 #, c-format
 msgid "Invalid untracked files mode '%s'"
 msgstr "Ogiltigt läge för ospårade filer: \"%s\""
 
-#: builtin/commit.c:1111
+#: builtin/commit.c:1107
 msgid "--long and -z are incompatible"
 msgstr "--long och -z är inkompatibla"
 
-#: builtin/commit.c:1141
+#: builtin/commit.c:1137
 msgid "Using both --reset-author and --author does not make sense"
 msgstr "Kan inte använda både --reset-author och --author"
 
-#: builtin/commit.c:1150
+#: builtin/commit.c:1146
 msgid "You have nothing to amend."
 msgstr "Du har inget att utöka."
 
-#: builtin/commit.c:1153
+#: builtin/commit.c:1149
 msgid "You are in the middle of a merge -- cannot amend."
 msgstr "Du är i mitten av en sammanslagning -- kan inte utöka."
 
-#: builtin/commit.c:1155
+#: builtin/commit.c:1151
 msgid "You are in the middle of a cherry-pick -- cannot amend."
 msgstr "Du är i mitten av en cherry-pick -- kan inte utöka."
 
-#: builtin/commit.c:1158
+#: builtin/commit.c:1154
 msgid "Options --squash and --fixup cannot be used together"
 msgstr "Flaggorna --squash och --fixup kan inte användas samtidigt"
 
-#: builtin/commit.c:1168
+#: builtin/commit.c:1164
 msgid "Only one of -c/-C/-F/--fixup can be used."
 msgstr "Endast en av -c/-C/-F/--fixup kan användas."
 
-#: builtin/commit.c:1170
+#: builtin/commit.c:1166
 msgid "Option -m cannot be combined with -c/-C/-F/--fixup."
 msgstr "Flaggan -m kan inte kombineras med -c/-C/-F/--fixup."
 
-#: builtin/commit.c:1178
+#: builtin/commit.c:1174
 msgid "--reset-author can be used only with -C, -c or --amend."
 msgstr "--reset-author kan endast användas med -C, -c eller --amend."
 
-#: builtin/commit.c:1195
+#: builtin/commit.c:1191
 msgid "Only one of --include/--only/--all/--interactive/--patch can be used."
 msgstr ""
 "Endast en av --include/--only/--all/--interactive/--patch kan användas."
 
-#: builtin/commit.c:1197
+#: builtin/commit.c:1193
 msgid "No paths with --include/--only does not make sense."
 msgstr "Du måste ange sökvägar tillsammans med --include/--only."
 
-#: builtin/commit.c:1199
+#: builtin/commit.c:1195
 msgid "Clever... amending the last one with dirty index."
 msgstr "Smart... utöka den senaste med smutsigt index."
 
-#: builtin/commit.c:1201
+#: builtin/commit.c:1197
 msgid "Explicit paths specified without -i or -o; assuming --only paths..."
 msgstr "Explicita sökvägar angavs utan -i eller -o; antar --only sökvägar..."
 
-#: builtin/commit.c:1213 builtin/tag.c:728
+#: builtin/commit.c:1209 builtin/tag.c:728
 #, c-format
 msgid "Invalid cleanup mode %s"
 msgstr "Felaktigt städningsläge %s"
 
-#: builtin/commit.c:1218
+#: builtin/commit.c:1214
 msgid "Paths with -a does not make sense."
 msgstr "Kan inte ange sökvägar med -a."
 
-#: builtin/commit.c:1328 builtin/commit.c:1608
+#: builtin/commit.c:1324 builtin/commit.c:1604
 msgid "show status concisely"
 msgstr "visa koncis status"
 
-#: builtin/commit.c:1330 builtin/commit.c:1610
+#: builtin/commit.c:1326 builtin/commit.c:1606
 msgid "show branch information"
 msgstr "visa information om gren"
 
-#: builtin/commit.c:1332 builtin/commit.c:1612 builtin/push.c:500
+#: builtin/commit.c:1328 builtin/commit.c:1608 builtin/push.c:509
 msgid "machine-readable output"
 msgstr "maskinläsbar utdata"
 
-#: builtin/commit.c:1335 builtin/commit.c:1614
+#: builtin/commit.c:1331 builtin/commit.c:1610
 msgid "show status in long format (default)"
 msgstr "visa status i långt format (standard)"
 
-#: builtin/commit.c:1338 builtin/commit.c:1617
+#: builtin/commit.c:1334 builtin/commit.c:1613
 msgid "terminate entries with NUL"
 msgstr "terminera poster med NUL"
 
-#: builtin/commit.c:1340 builtin/commit.c:1620 builtin/fast-export.c:980
+#: builtin/commit.c:1336 builtin/commit.c:1616 builtin/fast-export.c:980
 #: builtin/fast-export.c:983 builtin/tag.c:603
 msgid "mode"
 msgstr "läge"
 
-#: builtin/commit.c:1341 builtin/commit.c:1620
+#: builtin/commit.c:1337 builtin/commit.c:1616
 msgid "show untracked files, optional modes: all, normal, no. (Default: all)"
 msgstr "visa ospårade filer, valfria lägen: alla, normal, no. (Standard: all)"
 
-#: builtin/commit.c:1344
+#: builtin/commit.c:1340
 msgid "show ignored files"
 msgstr "visa ignorerade filer"
 
-#: builtin/commit.c:1345 parse-options.h:153
+#: builtin/commit.c:1341 parse-options.h:153
 msgid "when"
 msgstr "när"
 
-#: builtin/commit.c:1346
+#: builtin/commit.c:1342
 msgid ""
 "ignore changes to submodules, optional when: all, dirty, untracked. "
 "(Default: all)"
 msgstr ""
 "ignorera ändringar i undermoduler, valfritt när: all, dirty, untracked. "
 "(Default: all)"
 
-#: builtin/commit.c:1348
+#: builtin/commit.c:1344
 msgid "list untracked files in columns"
 msgstr "visa ospårade filer i spalter"
 
-#: builtin/commit.c:1435
+#: builtin/commit.c:1431
 msgid "couldn't look up newly created commit"
 msgstr "kunde inte slå upp en precis skapad incheckning"
 
-#: builtin/commit.c:1437
+#: builtin/commit.c:1433
 msgid "could not parse newly created commit"
 msgstr "kunde inte tolka en precis skapad incheckning"
 
-#: builtin/commit.c:1482
+#: builtin/commit.c:1478
 msgid "detached HEAD"
 msgstr "frånkopplad HEAD"
 
-#: builtin/commit.c:1485
+#: builtin/commit.c:1481
 msgid " (root-commit)"
 msgstr " (rotincheckning)"
 
-#: builtin/commit.c:1578
+#: builtin/commit.c:1574
 msgid "suppress summary after successful commit"
 msgstr "undertryck sammanfattning efter framgångsrik incheckning"
 
-#: builtin/commit.c:1579
+#: builtin/commit.c:1575
 msgid "show diff in commit message template"
 msgstr "visa diff i mallen för incheckningsmeddelandet"
 
-#: builtin/commit.c:1581
+#: builtin/commit.c:1577
 msgid "Commit message options"
 msgstr "Alternativ för incheckningsmeddelande"
 
-#: builtin/commit.c:1582 builtin/tag.c:601
+#: builtin/commit.c:1578 builtin/tag.c:601
 msgid "read message from file"
 msgstr "läs meddelande från fil"
 
-#: builtin/commit.c:1583
+#: builtin/commit.c:1579
 msgid "author"
 msgstr "författare"
 
-#: builtin/commit.c:1583
+#: builtin/commit.c:1579
 msgid "override author for commit"
 msgstr "överstyr författare för incheckningen"
 
-#: builtin/commit.c:1584 builtin/gc.c:275
+#: builtin/commit.c:1580 builtin/gc.c:275
 msgid "date"
 msgstr "datum"
 
-#: builtin/commit.c:1584
+#: builtin/commit.c:1580
 msgid "override date for commit"
 msgstr "överstyr datum för incheckningen"
 
-#: builtin/commit.c:1585 builtin/merge.c:218 builtin/notes.c:391
+#: builtin/commit.c:1581 builtin/merge.c:218 builtin/notes.c:391
 #: builtin/notes.c:554 builtin/tag.c:599
 msgid "message"
 msgstr "meddelande"
 
-#: builtin/commit.c:1585
+#: builtin/commit.c:1581
 msgid "commit message"
 msgstr "incheckningsmeddelande"
 
-#: builtin/commit.c:1586
+#: builtin/commit.c:1582
 msgid "reuse and edit message from specified commit"
 msgstr "återanvänd och redigera meddelande från angiven incheckning"
 
-#: builtin/commit.c:1587
+#: builtin/commit.c:1583
 msgid "reuse message from specified commit"
 msgstr "återanvänd meddelande från angiven incheckning"
 
-#: builtin/commit.c:1588
+#: builtin/commit.c:1584
 msgid "use autosquash formatted message to fixup specified commit"
 msgstr ""
 "använd autosquash-formaterat meddelande för att fixa angiven incheckning"
 
-#: builtin/commit.c:1589
+#: builtin/commit.c:1585
 msgid "use autosquash formatted message to squash specified commit"
 msgstr ""
 "använd autosquash-formaterat meddelande för att slå ihop med angiven "
 "incheckning"
 
-#: builtin/commit.c:1590
+#: builtin/commit.c:1586
 msgid "the commit is authored by me now (used with -C/-c/--amend)"
 msgstr "jag är nu författare av incheckningen (används med -C/-c/--amend)"
 
-#: builtin/commit.c:1591 builtin/log.c:1191 builtin/revert.c:86
+#: builtin/commit.c:1587 builtin/log.c:1191 builtin/revert.c:86
 msgid "add Signed-off-by:"
 msgstr "lägg till Signed-off-by:"
 
-#: builtin/commit.c:1592
+#: builtin/commit.c:1588
 msgid "use specified template file"
 msgstr "använd angiven mallfil"
 
-#: builtin/commit.c:1593
+#: builtin/commit.c:1589
 msgid "force edit of commit"
 msgstr "tvinga redigering av incheckning"
 
-#: builtin/commit.c:1594
+#: builtin/commit.c:1590
 msgid "default"
 msgstr "standard"
 
-#: builtin/commit.c:1594 builtin/tag.c:604
+#: builtin/commit.c:1590 builtin/tag.c:604
 msgid "how to strip spaces and #comments from message"
 msgstr "hur blanksteg och #kommentarer skall tas bort från meddelande"
 
-#: builtin/commit.c:1595
+#: builtin/commit.c:1591
 msgid "include status in commit message template"
 msgstr "inkludera status i mallen för incheckningsmeddelandet"
 
-#: builtin/commit.c:1596 builtin/merge.c:225 builtin/revert.c:92
+#: builtin/commit.c:1592 builtin/merge.c:225 builtin/revert.c:92
 #: builtin/tag.c:605
 msgid "key-id"
 msgstr "nyckel-id"
 
-#: builtin/commit.c:1597 builtin/merge.c:226 builtin/revert.c:93
+#: builtin/commit.c:1593 builtin/merge.c:226 builtin/revert.c:93
 msgid "GPG sign commit"
 msgstr "GPG-signera incheckning"
 
-#: builtin/commit.c:1600
+#: builtin/commit.c:1596
 msgid "Commit contents options"
 msgstr "Alternativ för incheckningens innehåll"
 
-#: builtin/commit.c:1601
+#: builtin/commit.c:1597
 msgid "commit all changed files"
 msgstr "checka in alla ändrade filer"
 
-#: builtin/commit.c:1602
+#: builtin/commit.c:1598
 msgid "add specified files to index for commit"
 msgstr "lägg till angivna filer till indexet för incheckning"
 
-#: builtin/commit.c:1603
+#: builtin/commit.c:1599
 msgid "interactively add files"
 msgstr "lägg till filer interaktivt"
 
-#: builtin/commit.c:1604
+#: builtin/commit.c:1600
 msgid "interactively add changes"
 msgstr "lägg till ändringar interaktivt"
 
-#: builtin/commit.c:1605
+#: builtin/commit.c:1601
 msgid "commit only specified files"
 msgstr "checka endast in angivna filer"
 
-#: builtin/commit.c:1606
+#: builtin/commit.c:1602
 msgid "bypass pre-commit hook"
 msgstr "förbigå pre-commit-krok"
 
-#: builtin/commit.c:1607
+#: builtin/commit.c:1603
 msgid "show what would be committed"
 msgstr "visa vad som skulle checkas in"
 
-#: builtin/commit.c:1618
+#: builtin/commit.c:1614
 msgid "amend previous commit"
 msgstr "lägg till föregående incheckning"
 
-#: builtin/commit.c:1619
+#: builtin/commit.c:1615
 msgid "bypass post-rewrite hook"
 msgstr "förbigå post-rewrite-krok"
 
-#: builtin/commit.c:1624
+#: builtin/commit.c:1620
 msgid "ok to record an empty change"
 msgstr "ok att registrera en tom ändring"
 
-#: builtin/commit.c:1626
+#: builtin/commit.c:1622
 msgid "ok to record a change with an empty message"
 msgstr "ok att registrera en ändring med tomt meddelande"
 
-#: builtin/commit.c:1655
+#: builtin/commit.c:1651
 msgid "could not parse HEAD commit"
 msgstr "kunde inte tolka HEAD:s incheckning"
 
-#: builtin/commit.c:1694 builtin/merge.c:519
+#: builtin/commit.c:1690 builtin/merge.c:519
 #, c-format
 msgid "could not open '%s' for reading"
 msgstr "kunde inte öppna \"%s\" för läsning"
 
-#: builtin/commit.c:1701
+#: builtin/commit.c:1697
 #, c-format
 msgid "Corrupt MERGE_HEAD file (%s)"
 msgstr "Trasig MERGE_HEAD-fil (%s)"
 
-#: builtin/commit.c:1708
+#: builtin/commit.c:1704
 msgid "could not read MERGE_MODE"
 msgstr "kunde inte läsa MERGE_MODE"
 
-#: builtin/commit.c:1727
+#: builtin/commit.c:1723
 #, c-format
 msgid "could not read commit message: %s"
 msgstr "kunde inte läsa incheckningsmeddelande: %s"
 
-#: builtin/commit.c:1738
+#: builtin/commit.c:1734
 #, c-format
 msgid "Aborting commit; you did not edit the message.\n"
 msgstr "Avbryter incheckning; meddelandet inte redigerat.\n"
 
-#: builtin/commit.c:1743
+#: builtin/commit.c:1739
 #, c-format
 msgid "Aborting commit due to empty commit message.\n"
 msgstr "Avbryter på grund av tomt incheckningsmeddelande.\n"
 
-#: builtin/commit.c:1758 builtin/merge.c:851 builtin/merge.c:876
+#: builtin/commit.c:1754 builtin/merge.c:851 builtin/merge.c:876
 msgid "failed to write commit object"
 msgstr "kunde inte skriva incheckningsobjekt"
 
-#: builtin/commit.c:1791
+#: builtin/commit.c:1787
 msgid ""
 "Repository has been updated, but unable to write\n"
 "new_index file. Check that disk is not full and quota is\n"
 "not exceeded, and then \"git reset HEAD\" to recover."
 msgstr ""
 "Arkivet har uppdaterats, men kunde inte skriva filen\n"
 "new_index. Kontrollera att disken inte är full och\n"
 "att kvoten inte har överskridits, och kör sedan\n"
 "\"git reset HEAD\" för att återställa."
 
 #: builtin/config.c:8
-msgid "git config [options]"
-msgstr "git config [flaggor]"
+msgid "git config [<options>]"
+msgstr "git config [<flaggor>]"
 
 #: builtin/config.c:53
 msgid "Config file location"
 msgstr "Konfigurationsfilens plats"
 
 #: builtin/config.c:54
@@ -4894,18 +4929,18 @@
 
 #: builtin/count-objects.c:65
 msgid "print sizes in human readable format"
 msgstr "skriv storlekar i människoläsbart format"
 
 #: builtin/describe.c:17
-msgid "git describe [options] <commit-ish>*"
-msgstr "git describe [flaggor] <incheckning-igt>*"
+msgid "git describe [<options>] [<commit-ish>...]"
+msgstr "git describe [<flaggor>] [<incheckning-igt>...]"
 
 #: builtin/describe.c:18
-msgid "git describe [options] --dirty"
-msgstr "git describe [flaggor] --dirty"
+msgid "git describe [<options>] --dirty"
+msgstr "git describe [<flaggor>] --dirty"
 
 #: builtin/describe.c:217
 #, c-format
 msgid "annotated tag %s not available"
 msgstr "den annoterade taggen %s inte tillgänglig"
 
@@ -5114,280 +5149,281 @@
 msgstr "Applicera referensspecifikation på exporterade referenser"
 
 #: builtin/fast-export.c:999
 msgid "anonymize output"
 msgstr "anonymisera utdata"
 
-#: builtin/fetch.c:20
+#: builtin/fetch.c:19
 msgid "git fetch [<options>] [<repository> [<refspec>...]]"
 msgstr "git fetch [<flaggor>] [<arkiv> [<refspec>...]]"
 
-#: builtin/fetch.c:21
+#: builtin/fetch.c:20
 msgid "git fetch [<options>] <group>"
 msgstr "git fetch [<flaggor>] <grupp>"
 
-#: builtin/fetch.c:22
+#: builtin/fetch.c:21
 msgid "git fetch --multiple [<options>] [(<repository> | <group>)...]"
 msgstr "git fetch --multiple [<flaggor>] [(<arkiv> | <grupp>)...]"
 
-#: builtin/fetch.c:23
+#: builtin/fetch.c:22
 msgid "git fetch --all [<options>]"
 msgstr "git fetch --all [<flaggor>]"
 
-#: builtin/fetch.c:90
+#: builtin/fetch.c:89
 msgid "fetch from all remotes"
 msgstr "hämta från alla fjärrar"
 
-#: builtin/fetch.c:92
+#: builtin/fetch.c:91
 msgid "append to .git/FETCH_HEAD instead of overwriting"
 msgstr "lägg till i .git/FETCH_HEAD istället för att skriva över"
 
-#: builtin/fetch.c:94
+#: builtin/fetch.c:93
 msgid "path to upload pack on remote end"
 msgstr "sökväg till upload pack på fjärren"
 
-#: builtin/fetch.c:95
+#: builtin/fetch.c:94
 msgid "force overwrite of local branch"
 msgstr "tvinga överskrivning av lokal gren"
 
-#: builtin/fetch.c:97
+#: builtin/fetch.c:96
 msgid "fetch from multiple remotes"
 msgstr "hämta från flera fjärrar"
 
-#: builtin/fetch.c:99
+#: builtin/fetch.c:98
 msgid "fetch all tags and associated objects"
 msgstr "hämta alla taggar och associerade objekt"
 
-#: builtin/fetch.c:101
+#: builtin/fetch.c:100
 msgid "do not fetch all tags (--no-tags)"
 msgstr "hämta inte alla taggar (--no-tags)"
 
-#: builtin/fetch.c:103
+#: builtin/fetch.c:102
 msgid "prune remote-tracking branches no longer on remote"
 msgstr "rensa fjärrspårande grenar ej längre på fjärren"
 
-#: builtin/fetch.c:104
+#: builtin/fetch.c:103
 msgid "on-demand"
 msgstr "on-demand"
 
-#: builtin/fetch.c:105
+#: builtin/fetch.c:104
 msgid "control recursive fetching of submodules"
 msgstr "styr rekursiv hämtning av undermoduler"
 
-#: builtin/fetch.c:109
+#: builtin/fetch.c:108
 msgid "keep downloaded pack"
 msgstr "behåll hämtade paket"
 
-#: builtin/fetch.c:111
+#: builtin/fetch.c:110
 msgid "allow updating of HEAD ref"
 msgstr "tillåt uppdatering av HEAD-referens"
 
-#: builtin/fetch.c:114
+#: builtin/fetch.c:113
 msgid "deepen history of shallow clone"
 msgstr "fördjupa historik för grund klon"
 
-#: builtin/fetch.c:116
+#: builtin/fetch.c:115
 msgid "convert to a complete repository"
 msgstr "konvertera till komplett arkiv"
 
-#: builtin/fetch.c:118 builtin/log.c:1208
+#: builtin/fetch.c:117 builtin/log.c:1208
 msgid "dir"
 msgstr "kat"
 
-#: builtin/fetch.c:119
+#: builtin/fetch.c:118
 msgid "prepend this to submodule path output"
 msgstr "lägg till i början av undermodulens sökvägsutdata"
 
-#: builtin/fetch.c:122
+#: builtin/fetch.c:121
 msgid "default mode for recursion"
 msgstr "standardläge för rekursion"
 
-#: builtin/fetch.c:124
+#: builtin/fetch.c:123
 msgid "accept refs that update .git/shallow"
 msgstr "tar emot referenser som uppdaterar .git/shallow"
 
-#: builtin/fetch.c:125
+#: builtin/fetch.c:124
 msgid "refmap"
 msgstr "referenskarta"
 
-#: builtin/fetch.c:126
+#: builtin/fetch.c:125
 msgid "specify fetch refmap"
 msgstr "ange referenskarta för \"fetch\""
 
-#: builtin/fetch.c:376
+#: builtin/fetch.c:375
 msgid "Couldn't find remote ref HEAD"
 msgstr "Kunde inte hitta fjärr-referensen HEAD"
 
-#: builtin/fetch.c:454
+#: builtin/fetch.c:455
 #, c-format
 msgid "object %s not found"
 msgstr "objektet %s hittades inte"
 
-#: builtin/fetch.c:459
+#: builtin/fetch.c:460
 msgid "[up to date]"
 msgstr "[àjour]"
 
-#: builtin/fetch.c:473
+#: builtin/fetch.c:474
 #, c-format
 msgid "! %-*s %-*s -> %s  (can't fetch in current branch)"
 msgstr "! %-*s %-*s -> %s  (kan inte hämta i aktuell gren)"
 
-#: builtin/fetch.c:474 builtin/fetch.c:560
+#: builtin/fetch.c:475 builtin/fetch.c:561
 msgid "[rejected]"
 msgstr "[refuserad]"
 
-#: builtin/fetch.c:485
+#: builtin/fetch.c:486
 msgid "[tag update]"
 msgstr "[uppdaterad tagg]"
 
-#: builtin/fetch.c:487 builtin/fetch.c:522 builtin/fetch.c:540
+#: builtin/fetch.c:488 builtin/fetch.c:523 builtin/fetch.c:541
 msgid "  (unable to update local ref)"
 msgstr "  (kunde inte uppdatera lokal ref)"
 
-#: builtin/fetch.c:505
+#: builtin/fetch.c:506
 msgid "[new tag]"
 msgstr "[ny tagg]"
 
-#: builtin/fetch.c:508
+#: builtin/fetch.c:509
 msgid "[new branch]"
 msgstr "[ny gren]"
 
-#: builtin/fetch.c:511
+#: builtin/fetch.c:512
 msgid "[new ref]"
 msgstr "[ny ref]"
 
-#: builtin/fetch.c:556
+#: builtin/fetch.c:557
 msgid "unable to update local ref"
 msgstr "kunde inte uppdatera lokal ref"
 
-#: builtin/fetch.c:556
+#: builtin/fetch.c:557
 msgid "forced update"
 msgstr "tvingad uppdatering"
 
-#: builtin/fetch.c:562
+#: builtin/fetch.c:563
 msgid "(non-fast-forward)"
 msgstr "(ej snabbspolad)"
 
-#: builtin/fetch.c:595 builtin/fetch.c:828
+#: builtin/fetch.c:596 builtin/fetch.c:829
 #, c-format
 msgid "cannot open %s: %s\n"
 msgstr "kan inte öppna %s: %s\n"
 
-#: builtin/fetch.c:604
+#: builtin/fetch.c:605
 #, c-format
 msgid "%s did not send all necessary objects\n"
 msgstr "%s sände inte alla nödvändiga objekt\n"
 
-#: builtin/fetch.c:622
+#: builtin/fetch.c:623
 #, c-format
 msgid "reject %s because shallow roots are not allowed to be updated"
 msgstr "avvisa %s då grunda rötter inte kan uppdateras"
 
-#: builtin/fetch.c:710 builtin/fetch.c:793
+#: builtin/fetch.c:711 builtin/fetch.c:794
 #, c-format
 msgid "From %.*s\n"
 msgstr "Från %.*s\n"
 
-#: builtin/fetch.c:721
+#: builtin/fetch.c:722
 #, c-format
 msgid ""
 "some local refs could not be updated; try running\n"
 " 'git remote prune %s' to remove any old, conflicting branches"
 msgstr ""
 "vissa lokala referenser kunde inte uppdateras; testa att köra\n"
 " \"git remote prune %s\" för att ta bort gamla grenar som står i konflikt"
 
-#: builtin/fetch.c:773
+#: builtin/fetch.c:774
 #, c-format
 msgid "   (%s will become dangling)"
 msgstr "   (%s kommer bli dinglande)"
 
-#: builtin/fetch.c:774
+#: builtin/fetch.c:775
 #, c-format
 msgid "   (%s has become dangling)"
 msgstr "   (%s har blivit dinglande)"
 
-#: builtin/fetch.c:798
+#: builtin/fetch.c:799
 msgid "[deleted]"
 msgstr "[borttagen]"
 
-#: builtin/fetch.c:799 builtin/remote.c:1060
+#: builtin/fetch.c:800 builtin/remote.c:1060
 msgid "(none)"
 msgstr "(ingen)"
 
-#: builtin/fetch.c:818
+#: builtin/fetch.c:819
 #, c-format
 msgid "Refusing to fetch into current branch %s of non-bare repository"
 msgstr "Vägrar hämta till aktuell gren %s i ett icke-naket arkiv"
 
-#: builtin/fetch.c:837
+#: builtin/fetch.c:838
 #, c-format
 msgid "Option \"%s\" value \"%s\" is not valid for %s"
 msgstr "Flaggan \"%s\" och värdet \"%s\" är inte giltigt för %s"
 
-#: builtin/fetch.c:840
+#: builtin/fetch.c:841
 #, c-format
 msgid "Option \"%s\" is ignored for %s\n"
 msgstr "Flaggan \"%s\" ignoreras för %s\n"
 
-#: builtin/fetch.c:896
+#: builtin/fetch.c:897
 #, c-format
 msgid "Don't know how to fetch from %s"
 msgstr "Vet inte hur man hämtar från %s"
 
-#: builtin/fetch.c:1058
+#: builtin/fetch.c:1059
 #, c-format
 msgid "Fetching %s\n"
 msgstr "Hämtar %s\n"
 
-#: builtin/fetch.c:1060 builtin/remote.c:90
+#: builtin/fetch.c:1061 builtin/remote.c:90
 #, c-format
 msgid "Could not fetch %s"
 msgstr "Kunde inte hämta %s"
 
-#: builtin/fetch.c:1078
+#: builtin/fetch.c:1079
 msgid ""
 "No remote repository specified.  Please, specify either a URL or a\n"
 "remote name from which new revisions should be fetched."
 msgstr ""
 "Inget fjärrarkiv angavs. Ange antingen en URL eller namnet på ett\n"
 "fjärrarkiv som nya incheckningar skall hämtas från."
 
-#: builtin/fetch.c:1101
+#: builtin/fetch.c:1102
 msgid "You need to specify a tag name."
 msgstr "Du måste ange namnet på en tagg."
 
-#: builtin/fetch.c:1143
+#: builtin/fetch.c:1144
 msgid "--depth and --unshallow cannot be used together"
 msgstr "--depth och --unshallow kan inte användas samtidigt"
 
-#: builtin/fetch.c:1145
+#: builtin/fetch.c:1146
 msgid "--unshallow on a complete repository does not make sense"
 msgstr "--unshallow kan inte användas på ett komplett arkiv"
 
-#: builtin/fetch.c:1168
+#: builtin/fetch.c:1169
 msgid "fetch --all does not take a repository argument"
 msgstr "fetch --all tar inte namnet på ett arkiv som argument"
 
-#: builtin/fetch.c:1170
+#: builtin/fetch.c:1171
 msgid "fetch --all does not make sense with refspecs"
 msgstr "fetch --all kan inte anges med referensspecifikationer"
 
-#: builtin/fetch.c:1181
+#: builtin/fetch.c:1182
 #, c-format
 msgid "No such remote or remote group: %s"
 msgstr "Fjärren eller fjärrgruppen finns inte: %s"
 
-#: builtin/fetch.c:1189
+#: builtin/fetch.c:1190
 msgid "Fetching a group and specifying refspecs does not make sense"
 msgstr "Kan inte hämta från grupp och ange referensspecifikationer"
 
 #: builtin/fmt-merge-msg.c:13
-msgid "git fmt-merge-msg [-m <message>] [--log[=<n>]|--no-log] [--file <file>]"
+msgid ""
+"git fmt-merge-msg [-m <message>] [--log[=<n>] | --no-log] [--file <file>]"
 msgstr ""
-"git fmt-merge-msg [-m <meddelande>] [--log[=<n>]|--no-log] [--file <fil>]"
+"git fmt-merge-msg [-m <meddelande>] [--log[=<n>] | --no-log] [--file <fil>]"
 
 #: builtin/fmt-merge-msg.c:662 builtin/fmt-merge-msg.c:665 builtin/grep.c:698
 #: builtin/merge.c:198 builtin/repack.c:178 builtin/repack.c:182
 #: builtin/show-branch.c:657 builtin/show-ref.c:178 builtin/tag.c:590
 #: parse-options.h:132 parse-options.h:239
 msgid "n"
@@ -5410,69 +5446,69 @@
 msgstr "inled meddelande med <text>"
 
 #: builtin/fmt-merge-msg.c:671
 msgid "file to read from"
 msgstr "fil att läsa från"
 
-#: builtin/for-each-ref.c:676
+#: builtin/for-each-ref.c:675
 msgid "unable to parse format"
 msgstr "kan inte tolka formatet"
 
-#: builtin/for-each-ref.c:1064
-msgid "git for-each-ref [options] [<pattern>]"
-msgstr "git for-each-ref [flaggor] [<mönster>]"
+#: builtin/for-each-ref.c:1063
+msgid "git for-each-ref [<options>] [<pattern>]"
+msgstr "git for-each-ref [<flaggor>] [<mönster>]"
 
-#: builtin/for-each-ref.c:1079
+#: builtin/for-each-ref.c:1078
 msgid "quote placeholders suitably for shells"
 msgstr "citera platshållare passande för skal"
 
-#: builtin/for-each-ref.c:1081
+#: builtin/for-each-ref.c:1080
 msgid "quote placeholders suitably for perl"
 msgstr "citera platshållare passande för perl"
 
-#: builtin/for-each-ref.c:1083
+#: builtin/for-each-ref.c:1082
 msgid "quote placeholders suitably for python"
 msgstr "citera platshållare passande för python"
 
-#: builtin/for-each-ref.c:1085
+#: builtin/for-each-ref.c:1084
 msgid "quote placeholders suitably for Tcl"
 msgstr "citera platshållare passande för Tcl"
 
-#: builtin/for-each-ref.c:1088
+#: builtin/for-each-ref.c:1087
 msgid "show only <n> matched refs"
 msgstr "visa endast <n> träffade refs"
 
-#: builtin/for-each-ref.c:1089 builtin/replace.c:438
+#: builtin/for-each-ref.c:1088 builtin/replace.c:438
 msgid "format"
 msgstr "format"
 
-#: builtin/for-each-ref.c:1089
+#: builtin/for-each-ref.c:1088
 msgid "format to use for the output"
 msgstr "format att använda för utdata"
 
-#: builtin/for-each-ref.c:1090
+#: builtin/for-each-ref.c:1089
 msgid "key"
 msgstr "nyckel"
 
-#: builtin/for-each-ref.c:1091
+#: builtin/for-each-ref.c:1090
 msgid "field name to sort on"
 msgstr "fältnamn att sortera på"
 
 # Vague original, not networking-related, but rather related to the actual
 # objects in the database.
-#: builtin/fsck.c:147 builtin/prune.c:136
+#: builtin/fsck.c:147 builtin/prune.c:137
 msgid "Checking connectivity"
 msgstr "Kontrollerar konnektivitet"
 
 #: builtin/fsck.c:540
 msgid "Checking object directories"
 msgstr "Kontrollerar objektkataloger"
 
 #: builtin/fsck.c:603
-msgid "git fsck [options] [<object>...]"
-msgstr "git fsck [flaggor] [<objekt>...]"
+msgid "git fsck [<options>] [<object>...]"
+msgstr "git fsck [<flaggor>] [<objekt>...]"
 
 #: builtin/fsck.c:609
 msgid "show unreachable objects"
 msgstr "visa onåbara objekt"
 
 #: builtin/fsck.c:610
@@ -5513,14 +5549,14 @@
 
 #: builtin/fsck.c:669
 msgid "Checking objects"
 msgstr "Kontrollerar objekt"
 
 #: builtin/gc.c:24
-msgid "git gc [options]"
-msgstr "git gc [flaggor]"
+msgid "git gc [<options>]"
+msgstr "git gc [<flaggor>]"
 
 #: builtin/gc.c:79
 #, c-format
 msgid "Invalid gc.pruneexpire: '%s'"
 msgstr "Ogiltig gc.pruneexpire: '%s'"
 
@@ -5573,14 +5609,14 @@
 "There are too many unreachable loose objects; run 'git prune' to remove them."
 msgstr ""
 "Det finns för många onåbara lösa objekt; kör \"git prune\" för att ta bort "
 "dem."
 
 #: builtin/grep.c:23
-msgid "git grep [options] [-e] <pattern> [<rev>...] [[--] <path>...]"
-msgstr "git grep [flaggor] [-e] <mönster> [<rev>...] [[--] <sökväg>...]"
+msgid "git grep [<options>] [-e] <pattern> [<rev>...] [[--] <path>...]"
+msgstr "git grep [<flaggor>] [-e] <mönster> [<rev>...] [[--] <sökväg>...]"
 
 #: builtin/grep.c:218
 #, c-format
 msgid "grep: failed to create thread: %s"
 msgstr "grep: misslyckades skapa tråd. %s"
 
@@ -5614,14 +5650,14 @@
 
 #: builtin/grep.c:642
 msgid "search in both tracked and untracked files"
 msgstr "sök i både spårade och ospårade filer"
 
 #: builtin/grep.c:644
-msgid "search also in ignored files"
-msgstr "sök även i ignorerade filer"
+msgid "ignore files specified via '.gitignore'"
+msgstr "ignorera filer angivna i \".gitignore\""
 
 #: builtin/grep.c:647
 msgid "show non-matching lines"
 msgstr "visa rader som inte träffas"
 
 #: builtin/grep.c:649
@@ -5799,23 +5835,23 @@
 #: builtin/grep.c:908
 msgid "both --cached and trees are given."
 msgstr "både --cached och träd angavs."
 
 #: builtin/hash-object.c:82
 msgid ""
-"git hash-object [-t <type>] [-w] [--path=<file>|--no-filters] [--stdin] [--] "
-"<file>..."
+"git hash-object [-t <type>] [-w] [--path=<file> | --no-filters] [--stdin] "
+"[--] <file>..."
 msgstr ""
-"git hash-object [-t <typ>] [-w] [--path=<fil>|--no-filters] [--stdin] [--] "
+"git hash-object [-t <typ>] [-w] [--path=<fil> | --no-filters] [--stdin] [--] "
 "<fil>..."
 
 #: builtin/hash-object.c:83
 msgid "git hash-object  --stdin-paths < <list-of-paths>"
 msgstr "git hash-object  --stdin-paths < <sökvägslista>"
 
-#: builtin/hash-object.c:94 builtin/tag.c:610
+#: builtin/hash-object.c:94 builtin/tag.c:612
 msgid "type"
 msgstr "typ"
 
 #: builtin/hash-object.c:94
 msgid "object type"
 msgstr "objekttyp"
@@ -5860,14 +5896,14 @@
 
 #: builtin/help.c:46
 msgid "show info page"
 msgstr "visa info-sida"
 
 #: builtin/help.c:52
-msgid "git help [--all] [--guides] [--man|--web|--info] [command]"
-msgstr "git help [--all] [--guides] [--man|--web|--info] [kommando]"
+msgid "git help [--all] [--guides] [--man | --web | --info] [<command>]"
+msgstr "git help [--all] [--guides] [--man | --web | --info] [<kommando>]"
 
 #: builtin/help.c:64
 #, c-format
 msgid "unrecognized help format '%s'"
 msgstr "okänt hjälpformat: %s"
 
@@ -6069,14 +6105,14 @@
 #: builtin/index-pack.c:686 builtin/index-pack.c:692 builtin/index-pack.c:715
 #: builtin/index-pack.c:749 builtin/index-pack.c:758
 #, c-format
 msgid "SHA1 COLLISION FOUND WITH %s !"
 msgstr "SHA1-KOLLISION UPPTÄCKT VID %s !"
 
-#: builtin/index-pack.c:689 builtin/pack-objects.c:164
-#: builtin/pack-objects.c:256
+#: builtin/index-pack.c:689 builtin/pack-objects.c:162
+#: builtin/pack-objects.c:254
 #, c-format
 msgid "unable to read %s"
 msgstr "kunde inte läsa %s"
 
 #: builtin/index-pack.c:755
 #, c-format
@@ -6157,103 +6193,103 @@
 #, c-format
 msgid "pack has %d unresolved delta"
 msgid_plural "pack has %d unresolved deltas"
 msgstr[0] "paketet har %d oanalyserat delta"
 msgstr[1] "paketet har %d oanalyserade delta"
 
-#: builtin/index-pack.c:1220
+#: builtin/index-pack.c:1219
 #, c-format
 msgid "unable to deflate appended object (%d)"
 msgstr "kunde inte utföra \"deflate\" på tillagt objekt (%d)"
 
-#: builtin/index-pack.c:1299
+#: builtin/index-pack.c:1298
 #, c-format
 msgid "local object %s is corrupt"
 msgstr "lokalt objekt %s är trasigt"
 
-#: builtin/index-pack.c:1323
+#: builtin/index-pack.c:1322
 msgid "error while closing pack file"
 msgstr "fel vid stängning av paketfil"
 
-#: builtin/index-pack.c:1336
+#: builtin/index-pack.c:1335
 #, c-format
 msgid "cannot write keep file '%s'"
 msgstr "kan inte ta skriva \"keep\"-fil \"%s\""
 
-#: builtin/index-pack.c:1344
+#: builtin/index-pack.c:1343
 #, c-format
 msgid "cannot close written keep file '%s'"
 msgstr "akn inte stänga skriven \"keep\"-fil \"%s\""
 
-#: builtin/index-pack.c:1357
+#: builtin/index-pack.c:1356
 msgid "cannot store pack file"
 msgstr "kan inte spara paketfil"
 
-#: builtin/index-pack.c:1368
+#: builtin/index-pack.c:1367
 msgid "cannot store index file"
 msgstr "kan inte spara indexfil"
 
-#: builtin/index-pack.c:1401
+#: builtin/index-pack.c:1400
 #, c-format
 msgid "bad pack.indexversion=%<PRIu32>"
 msgstr "felaktig pack.indexversion=%<PRIu32>"
 
-#: builtin/index-pack.c:1407
+#: builtin/index-pack.c:1406
 #, c-format
 msgid "invalid number of threads specified (%d)"
 msgstr "felaktigt antal trådar angivet (%d)"
 
-#: builtin/index-pack.c:1411 builtin/index-pack.c:1590
+#: builtin/index-pack.c:1410 builtin/index-pack.c:1589
 #, c-format
 msgid "no threads support, ignoring %s"
 msgstr "trådstöd saknas, ignorerar %s"
 
-#: builtin/index-pack.c:1469
+#: builtin/index-pack.c:1468
 #, c-format
 msgid "Cannot open existing pack file '%s'"
 msgstr "Kan inte öppna befintlig paketfil \"%s\""
 
-#: builtin/index-pack.c:1471
+#: builtin/index-pack.c:1470
 #, c-format
 msgid "Cannot open existing pack idx file for '%s'"
 msgstr "Kan inte öppna befintlig paket-idx-fil för \"%s\""
 
-#: builtin/index-pack.c:1518
+#: builtin/index-pack.c:1517
 #, c-format
 msgid "non delta: %d object"
 msgid_plural "non delta: %d objects"
 msgstr[0] "icke-delta: %d objekt"
 msgstr[1] "icke-delta: %d objekt"
 
-#: builtin/index-pack.c:1525
+#: builtin/index-pack.c:1524
 #, c-format
 msgid "chain length = %d: %lu object"
 msgid_plural "chain length = %d: %lu objects"
 msgstr[0] "kedjelängd = %d: %lu objekt"
 msgstr[1] "kedjelängd = %d: %lu objekt"
 
-#: builtin/index-pack.c:1554
+#: builtin/index-pack.c:1553
 msgid "Cannot come back to cwd"
 msgstr "Kan inte gå tillbaka till arbetskatalogen (cwd)"
 
-#: builtin/index-pack.c:1602 builtin/index-pack.c:1605
-#: builtin/index-pack.c:1617 builtin/index-pack.c:1621
+#: builtin/index-pack.c:1601 builtin/index-pack.c:1604
+#: builtin/index-pack.c:1616 builtin/index-pack.c:1620
 #, c-format
 msgid "bad %s"
 msgstr "felaktig %s"
 
-#: builtin/index-pack.c:1635
+#: builtin/index-pack.c:1634
 msgid "--fix-thin cannot be used without --stdin"
 msgstr "--fix-thin kan inte användas med --stdin"
 
-#: builtin/index-pack.c:1639 builtin/index-pack.c:1648
+#: builtin/index-pack.c:1638 builtin/index-pack.c:1647
 #, c-format
 msgid "packfile name '%s' does not end with '.pack'"
 msgstr "paketfilnamnet \"%s\" slutar inte med \".pack\""
 
-#: builtin/index-pack.c:1656
+#: builtin/index-pack.c:1655
 msgid "--verify with no packfile name given"
 msgstr "--verify angavs utan paketfilnamn"
 
 #: builtin/init-db.c:35
 #, c-format
 msgid "Could not make %s writable by group"
@@ -6358,17 +6394,17 @@
 #: builtin/init-db.c:428
 msgid " shared"
 msgstr " delat"
 
 #: builtin/init-db.c:475
 msgid ""
-"git init [-q | --quiet] [--bare] [--template=<template-directory>] [--"
-"shared[=<permissions>]] [directory]"
+"git init [-q | --quiet] [--bare] [--template=<template-directory>] [--shared"
+"[=<permissions>]] [<directory>]"
 msgstr ""
-"git init [-q | --quiet] [--bare] [--template=<mallkatalog>] [--"
-"shared[=<behörigheter>]] [katalog]"
+"git init [-q | --quiet] [--bare] [--template=<mallkatalog>] [--shared"
+"[=<behörigheter>]] [<katalog>]"
 
 #: builtin/init-db.c:498
 msgid "permissions"
 msgstr "behörigheter"
 
 #: builtin/init-db.c:499
@@ -6405,14 +6441,14 @@
 
 #: builtin/interpret-trailers.c:15
 msgid ""
 "git interpret-trailers [--trim-empty] [(--trailer <token>[(=|:)<value>])...] "
 "[<file>...]"
 msgstr ""
-"git interpret-trailers [--trim-empty] [(--trailer "
-"<symbol>[(=|:)<värde>])...] [<fil>...]"
+"git interpret-trailers [--trim-empty] [(--trailer <symbol>[(=|:)"
+"<värde>])...] [<fil>...]"
 
 #: builtin/interpret-trailers.c:25
 msgid "trim empty trailers"
 msgstr "ta bort tomma släprader"
 
 #: builtin/interpret-trailers.c:26
@@ -6425,14 +6461,14 @@
 
 #: builtin/log.c:41
 msgid "git log [<options>] [<revision range>] [[--] <path>...]"
 msgstr "git log [<flaggor>] [<versionsintervall>] [[--] <sökväg>...]"
 
 #: builtin/log.c:42
-msgid "git show [options] <object>..."
-msgstr "git show [flaggor] <objekt>..."
+msgid "git show [<options>] <object>..."
+msgstr "git show [<flaggor>] <objekt>..."
 
 #: builtin/log.c:81
 #, c-format
 msgid "invalid --decorate option: %s"
 msgstr "ogiltig flagga för --decorate: %s"
 
@@ -6504,14 +6540,14 @@
 #: builtin/log.c:998
 #, c-format
 msgid "insane in-reply-to: %s"
 msgstr "tokigt in-reply-to: %s"
 
 #: builtin/log.c:1026
-msgid "git format-patch [options] [<since> | <revision range>]"
-msgstr "git format-patch [flaggor] [<sedan> | <revisionsintervall>]"
+msgid "git format-patch [<options>] [<since> | <revision-range>]"
+msgstr "git format-patch [<flaggor>] [<sedan> | <revisionsintervall>]"
 
 #: builtin/log.c:1071
 msgid "Two output directories?"
 msgstr "Två utdatakataloger?"
 
 #: builtin/log.c:1186
@@ -6701,101 +6737,101 @@
 
 #: builtin/log.c:1651 builtin/log.c:1653 builtin/log.c:1665
 #, c-format
 msgid "Unknown commit %s"
 msgstr "Okänd incheckning %s"
 
-#: builtin/ls-files.c:401
-msgid "git ls-files [options] [<file>...]"
-msgstr "git ls-files [flaggor] [<fil>...]"
+#: builtin/ls-files.c:358
+msgid "git ls-files [<options>] [<file>...]"
+msgstr "git ls-files [<flaggor>] [<fil>...]"
 
-#: builtin/ls-files.c:458
+#: builtin/ls-files.c:415
 msgid "identify the file status with tags"
 msgstr "identifiera filstatus med taggar"
 
-#: builtin/ls-files.c:460
+#: builtin/ls-files.c:417
 msgid "use lowercase letters for 'assume unchanged' files"
 msgstr "använd små bokstäver för \"anta oförändrade\"-filer"
 
-#: builtin/ls-files.c:462
+#: builtin/ls-files.c:419
 msgid "show cached files in the output (default)"
 msgstr "visa cachade filer i utdata (standard)"
 
-#: builtin/ls-files.c:464
+#: builtin/ls-files.c:421
 msgid "show deleted files in the output"
 msgstr "visa borttagna filer i utdata"
 
-#: builtin/ls-files.c:466
+#: builtin/ls-files.c:423
 msgid "show modified files in the output"
 msgstr "visa modifierade filer i utdata"
 
-#: builtin/ls-files.c:468
+#: builtin/ls-files.c:425
 msgid "show other files in the output"
 msgstr "visa andra filer i utdata"
 
-#: builtin/ls-files.c:470
+#: builtin/ls-files.c:427
 msgid "show ignored files in the output"
 msgstr "visa ignorerade filer i utdata"
 
-#: builtin/ls-files.c:473
+#: builtin/ls-files.c:430
 msgid "show staged contents' object name in the output"
 msgstr "visa köat innehålls objektnamn i utdata"
 
-#: builtin/ls-files.c:475
+#: builtin/ls-files.c:432
 msgid "show files on the filesystem that need to be removed"
 msgstr "visa filer i filsystemet som behöver tas bort"
 
-#: builtin/ls-files.c:477
+#: builtin/ls-files.c:434
 msgid "show 'other' directories' names only"
 msgstr "visa endast namn för \"andra\" kataloger"
 
-#: builtin/ls-files.c:480
+#: builtin/ls-files.c:437
 msgid "don't show empty directories"
 msgstr "visa inte tomma kataloger"
 
-#: builtin/ls-files.c:483
+#: builtin/ls-files.c:440
 msgid "show unmerged files in the output"
 msgstr "visa ej sammanslagna filer i utdata"
 
-#: builtin/ls-files.c:485
+#: builtin/ls-files.c:442
 msgid "show resolve-undo information"
 msgstr "visa \"resolve-undo\"-information"
 
-#: builtin/ls-files.c:487
+#: builtin/ls-files.c:444
 msgid "skip files matching pattern"
 msgstr "hoppa över filer som motsvarar mönster"
 
-#: builtin/ls-files.c:490
+#: builtin/ls-files.c:447
 msgid "exclude patterns are read from <file>"
 msgstr "exkludera mönster som läses från <fil>"
 
-#: builtin/ls-files.c:493
+#: builtin/ls-files.c:450
 msgid "read additional per-directory exclude patterns in <file>"
 msgstr "läs ytterligare per-katalog-exkluderingsmönster från <fil>"
 
-#: builtin/ls-files.c:495
+#: builtin/ls-files.c:452
 msgid "add the standard git exclusions"
 msgstr "lägg till git:s standardexkluderingar"
 
-#: builtin/ls-files.c:498
+#: builtin/ls-files.c:455
 msgid "make the output relative to the project top directory"
 msgstr "gör utdata relativ till projektets toppkatalog"
 
-#: builtin/ls-files.c:501
+#: builtin/ls-files.c:458
 msgid "if any <file> is not in the index, treat this as an error"
 msgstr "om en <fil> inte är indexet, betrakta det som ett fel"
 
-#: builtin/ls-files.c:502
+#: builtin/ls-files.c:459
 msgid "tree-ish"
 msgstr "träd-igt"
 
-#: builtin/ls-files.c:503
+#: builtin/ls-files.c:460
 msgid "pretend that paths removed since <tree-ish> are still present"
 msgstr "låtsas att sökvägar borttagna sedan <träd-igt> fortfarande finns"
 
-#: builtin/ls-files.c:505
+#: builtin/ls-files.c:462
 msgid "show debugging data"
 msgstr "visa felsökningsutdata"
 
 #: builtin/ls-tree.c:28
 msgid "git ls-tree [<options>] <tree-ish> [<path>...]"
 msgstr "git ls-tree [<flaggor>] <träd-igt> [<sökväg>...]"
@@ -6830,18 +6866,18 @@
 
 #: builtin/ls-tree.c:144
 msgid "list entire tree; not just current directory (implies --full-name)"
 msgstr "visa hela trädet; inte bara aktuell katalog (implicerar --full-name)"
 
 #: builtin/merge.c:45
-msgid "git merge [options] [<commit>...]"
-msgstr "git merge [flaggor] [<incheckning>...]"
+msgid "git merge [<options>] [<commit>...]"
+msgstr "git merge [<flaggor>] [<incheckning>...]"
 
 #: builtin/merge.c:46
-msgid "git merge [options] <msg> HEAD <commit>"
-msgstr "git merge [flaggor] <meddelande> HEAD <incheckning>"
+msgid "git merge [<options>] <msg> HEAD <commit>"
+msgstr "git merge [<flaggor>] <meddelande> HEAD <incheckning>"
 
 #: builtin/merge.c:47
 msgid "git merge --abort"
 msgstr "git merge --abort"
 
 #: builtin/merge.c:100
@@ -7183,18 +7219,18 @@
 #, c-format
 msgid "Automatic merge went well; stopped before committing as requested\n"
 msgstr ""
 "Automatisk sammanslagning lyckades; stoppar före incheckning som önskat\n"
 
 #: builtin/merge-base.c:29
-msgid "git merge-base [-a|--all] <commit> <commit>..."
-msgstr "git merge-base [-a|--all] <incheckning> <incheckning>..."
+msgid "git merge-base [-a | --all] <commit> <commit>..."
+msgstr "git merge-base [-a | --all] <incheckning> <incheckning>..."
 
 #: builtin/merge-base.c:30
-msgid "git merge-base [-a|--all] --octopus <commit>..."
-msgstr "git merge-base [-a|--all] --octopus <incheckning>..."
+msgid "git merge-base [-a | --all] --octopus <commit>..."
+msgstr "git merge-base [-a | --all] --octopus <incheckning>..."
 
 #: builtin/merge-base.c:31
 msgid "git merge-base --independent <commit>..."
 msgstr "git merge-base --independent <incheckning>..."
 
 #: builtin/merge-base.c:32
@@ -7224,16 +7260,17 @@
 #: builtin/merge-base.c:222
 msgid "find where <commit> forked from reflog of <ref>"
 msgstr "se var <incheckning> grenades av från referensloggen från <ref>"
 
 #: builtin/merge-file.c:8
 msgid ""
-"git merge-file [options] [-L name1 [-L orig [-L name2]]] file1 orig_file "
-"file2"
+"git merge-file [<options>] [-L <name1> [-L <orig> [-L <name2>]]] <file1> "
+"<orig-file> <file2>"
 msgstr ""
-"git merge-file [alternativ] [-L namn1 [-L orig [-L namn2]]] fil1 origfil fil2"
+"git merge-file [<alternativ>] [-L <namn1> [-L <orig> [-L <namn2>]]] <fil1> "
+"<origfil> <fil2>"
 
 #: builtin/merge-file.c:33
 msgid "send results to standard output"
 msgstr "sänd resultat till standard ut"
 
 #: builtin/merge-file.c:34
@@ -7258,13 +7295,13 @@
 
 #: builtin/merge-file.c:43
 msgid "do not warn about conflicts"
 msgstr "varna inte om konflikter"
 
 #: builtin/merge-file.c:45
-msgid "set labels for file1/orig_file/file2"
+msgid "set labels for file1/orig-file/file2"
 msgstr "sätt etiketter för fil1/origfil/fil2"
 
 #: builtin/mktree.c:64
 msgid "git mktree [-z] [--missing] [--batch]"
 msgstr "git mktree [-z] [--missing] [--batch]"
 
@@ -7278,14 +7315,14 @@
 
 #: builtin/mktree.c:152
 msgid "allow creation of more than one tree"
 msgstr "tillåt skapa mer än ett träd"
 
 #: builtin/mv.c:15
-msgid "git mv [options] <source>... <destination>"
-msgstr "git mv [flaggor] <källa>... <mål>"
+msgid "git mv [<options>] <source>... <destination>"
+msgstr "git mv [<flaggor>] <källa>... <mål>"
 
 #: builtin/mv.c:69
 #, c-format
 msgid "Directory %s is in index and no submodule?"
 msgstr "Katalogen %s är i indexet och inte en undermodul?"
 
@@ -7365,28 +7402,28 @@
 
 #: builtin/mv.c:253
 #, c-format
 msgid "Renaming %s to %s\n"
 msgstr "Byter namn på %s till %s\n"
 
-#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:355
+#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:359
 #, c-format
 msgid "renaming '%s' failed"
 msgstr "misslyckades byta namn på \"%s\""
 
 #: builtin/name-rev.c:255
-msgid "git name-rev [options] <commit>..."
-msgstr "git name-rev [flaggor] <incheckning>..."
+msgid "git name-rev [<options>] <commit>..."
+msgstr "git name-rev [<flaggor>] <incheckning>..."
 
 #: builtin/name-rev.c:256
-msgid "git name-rev [options] --all"
-msgstr "git name-rev [flaggor] --all"
+msgid "git name-rev [<options>] --all"
+msgstr "git name-rev [<flaggor>] --all"
 
 #: builtin/name-rev.c:257
-msgid "git name-rev [options] --stdin"
-msgstr "git name-rev [flaggor] --stdin"
+msgid "git name-rev [<options>] --stdin"
+msgstr "git name-rev [<flaggor>] --stdin"
 
 #: builtin/name-rev.c:309
 msgid "print only names (no SHA-1)"
 msgstr "skriv endast namn (ingen SHA-1)"
 
 #: builtin/name-rev.c:310
@@ -7411,69 +7448,69 @@
 
 #: builtin/name-rev.c:322
 msgid "dereference tags in the input (internal use)"
 msgstr "avreferera taggar i indata (används internt)"
 
 #: builtin/notes.c:24
-msgid "git notes [--ref <notes_ref>] [list [<object>]]"
+msgid "git notes [--ref <notes-ref>] [list [<object>]]"
 msgstr "git notes [--ref <anteckningsref>] [list [<objekt>]]"
 
 #: builtin/notes.c:25
 msgid ""
-"git notes [--ref <notes_ref>] add [-f] [--allow-empty] [-m <msg> | -F <file> "
+"git notes [--ref <notes-ref>] add [-f] [--allow-empty] [-m <msg> | -F <file> "
 "| (-c | -C) <object>] [<object>]"
 msgstr ""
 "git notes [--ref <anteckningsref>] add [-f] [--allow-empty] [-m <medd> | -F "
 "<fil> | (-c | -C) <objekt>] [<objekt>]"
 
 #: builtin/notes.c:26
-msgid "git notes [--ref <notes_ref>] copy [-f] <from-object> <to-object>"
+msgid "git notes [--ref <notes-ref>] copy [-f] <from-object> <to-object>"
 msgstr ""
 "git notes [--ref <anteckningsref>] copy [-f] <från-objekt> <till-objekt>"
 
 #: builtin/notes.c:27
 msgid ""
-"git notes [--ref <notes_ref>] append [--allow-empty] [-m <msg> | -F <file> | "
+"git notes [--ref <notes-ref>] append [--allow-empty] [-m <msg> | -F <file> | "
 "(-c | -C) <object>] [<object>]"
 msgstr ""
 "git notes [--ref <anteckningsref>] append [--allow-empty] [-m <medd> | -F "
 "<fil> | (-c | -C) <objekt>] [<objekt>]"
 
 #: builtin/notes.c:28
-msgid "git notes [--ref <notes_ref>] edit [--allow-empty] [<object>]"
+msgid "git notes [--ref <notes-ref>] edit [--allow-empty] [<object>]"
 msgstr "git notes [--ref <anteckningsref>] edit [--allow-empty] [<objekt>]"
 
 #: builtin/notes.c:29
-msgid "git notes [--ref <notes_ref>] show [<object>]"
+msgid "git notes [--ref <notes-ref>] show [<object>]"
 msgstr "git notes [--ref <anteckningsref>] show [<objekt>]"
 
 #: builtin/notes.c:30
 msgid ""
-"git notes [--ref <notes_ref>] merge [-v | -q] [-s <strategy> ] <notes_ref>"
+"git notes [--ref <notes-ref>] merge [-v | -q] [-s <strategy>] <notes-ref>"
 msgstr ""
-"git notes [--ref <anteckningsref>] merge [-v | -q] [-s <strategi> ] "
+"git notes [--ref <anteckningsref>] merge [-v | -q] [-s <strategi>] "
 "<anteckningsref>"
 
 #: builtin/notes.c:31
 msgid "git notes merge --commit [-v | -q]"
 msgstr "git notes merge --commit [-v | -q]"
 
 #: builtin/notes.c:32
 msgid "git notes merge --abort [-v | -q]"
 msgstr "git notes merge --abort [-v | -q]"
 
 #: builtin/notes.c:33
-msgid "git notes [--ref <notes_ref>] remove [<object>...]"
+msgid "git notes [--ref <notes-ref>] remove [<object>...]"
 msgstr "git notes [--ref <anteckningsref>] remove [<objekt>...]"
 
 #: builtin/notes.c:34
-msgid "git notes [--ref <notes_ref>] prune [-n | -v]"
+msgid "git notes [--ref <notes-ref>] prune [-n | -v]"
 msgstr "git notes [--ref <anteckningsref>] prune [-n | -v]"
 
 #: builtin/notes.c:35
-msgid "git notes [--ref <notes_ref>] get-ref"
+msgid "git notes [--ref <notes-ref>] get-ref"
 msgstr "git notes [--ref <anteckningsref>] get-ref"
 
 #: builtin/notes.c:40
 msgid "git notes [list [<object>]]"
 msgstr "git notes [list [<objekt>]]"
 
@@ -7499,13 +7536,13 @@
 
 #: builtin/notes.c:66
 msgid "git notes show [<object>]"
 msgstr "git notes show [<objekt>]"
 
 #: builtin/notes.c:71
-msgid "git notes merge [<options>] <notes_ref>"
+msgid "git notes merge [<options>] <notes-ref>"
 msgstr "git notes merge [<flaggor>] <anteckningsref>"
 
 #: builtin/notes.c:72
 msgid "git notes merge --commit [<options>]"
 msgstr "git notes merge --commit [<flaggor>]"
 
@@ -7738,13 +7775,13 @@
 
 #: builtin/notes.c:953
 msgid "notes-ref"
 msgstr "anteckningar-ref"
 
 #: builtin/notes.c:954
-msgid "use notes from <notes_ref>"
+msgid "use notes from <notes-ref>"
 msgstr "använd anteckningar från <anteckningsref>"
 
 #: builtin/notes.c:989 builtin/remote.c:1621
 #, c-format
 msgid "Unknown subcommand: %s"
 msgstr "Okänt underkommando: %s"
@@ -7754,204 +7791,204 @@
 msgstr "git pack-objects --stdout [flaggor...] [< reflista | < objektlista]"
 
 #: builtin/pack-objects.c:29
 msgid "git pack-objects [options...] base-name [< ref-list | < object-list]"
 msgstr "git pack-objects [flaggor...] basnamn [< reflista | < objektlista]"
 
-#: builtin/pack-objects.c:177 builtin/pack-objects.c:180
+#: builtin/pack-objects.c:175 builtin/pack-objects.c:178
 #, c-format
 msgid "deflate error (%d)"
 msgstr "fel i deflate (%d)"
 
-#: builtin/pack-objects.c:773
+#: builtin/pack-objects.c:771
 msgid "Writing objects"
 msgstr "Skriver objekt"
 
-#: builtin/pack-objects.c:1015
+#: builtin/pack-objects.c:1013
 msgid "disabling bitmap writing, as some objects are not being packed"
 msgstr "inaktiverar skrivning av bitkarta då några objekt inte packas"
 
-#: builtin/pack-objects.c:2175
+#: builtin/pack-objects.c:2173
 msgid "Compressing objects"
 msgstr "Komprimerar objekt"
 
-#: builtin/pack-objects.c:2572
+#: builtin/pack-objects.c:2570
 #, c-format
 msgid "unsupported index version %s"
 msgstr "indexversionen %s stöds ej"
 
-#: builtin/pack-objects.c:2576
+#: builtin/pack-objects.c:2574
 #, c-format
 msgid "bad index version '%s'"
 msgstr "felaktig indexversion \"%s\""
 
-#: builtin/pack-objects.c:2599
+#: builtin/pack-objects.c:2597
 #, c-format
 msgid "option %s does not accept negative form"
 msgstr "flaggan %s godtar inte negativ form"
 
-#: builtin/pack-objects.c:2603
+#: builtin/pack-objects.c:2601
 #, c-format
 msgid "unable to parse value '%s' for option %s"
 msgstr "kunde inte tolka värdet \"%s\" för flaggan %s"
 
-#: builtin/pack-objects.c:2623
+#: builtin/pack-objects.c:2621
 msgid "do not show progress meter"
 msgstr "visa inte förloppsindikator"
 
-#: builtin/pack-objects.c:2625
+#: builtin/pack-objects.c:2623
 msgid "show progress meter"
 msgstr "visa förloppsindikator"
 
-#: builtin/pack-objects.c:2627
+#: builtin/pack-objects.c:2625
 msgid "show progress meter during object writing phase"
 msgstr "visa förloppsindikator under objektskrivningsfasen"
 
-#: builtin/pack-objects.c:2630
+#: builtin/pack-objects.c:2628
 msgid "similar to --all-progress when progress meter is shown"
 msgstr "som --all-progress när förloppsmätaren visas"
 
-#: builtin/pack-objects.c:2631
+#: builtin/pack-objects.c:2629
 msgid "version[,offset]"
 msgstr "version[,offset]"
 
-#: builtin/pack-objects.c:2632
+#: builtin/pack-objects.c:2630
 msgid "write the pack index file in the specified idx format version"
 msgstr "skriv paketindexfilen i angiven indexformatversion"
 
-#: builtin/pack-objects.c:2635
+#: builtin/pack-objects.c:2633
 msgid "maximum size of each output pack file"
 msgstr "maximal storlek på varje utdatapaketfil"
 
-#: builtin/pack-objects.c:2637
+#: builtin/pack-objects.c:2635
 msgid "ignore borrowed objects from alternate object store"
 msgstr "ignorera lånade objekt från alternativa objektlager"
 
-#: builtin/pack-objects.c:2639
+#: builtin/pack-objects.c:2637
 msgid "ignore packed objects"
 msgstr "ignorera packade objekt"
 
-#: builtin/pack-objects.c:2641
+#: builtin/pack-objects.c:2639
 msgid "limit pack window by objects"
 msgstr "begränsa paketfönster efter objekt"
 
-#: builtin/pack-objects.c:2643
+#: builtin/pack-objects.c:2641
 msgid "limit pack window by memory in addition to object limit"
 msgstr "begränsa paketfönster efter minne förutom objektgräns"
 
-#: builtin/pack-objects.c:2645
+#: builtin/pack-objects.c:2643
 msgid "maximum length of delta chain allowed in the resulting pack"
 msgstr "maximal längd på deltakedja tillåten i slutligt paket"
 
-#: builtin/pack-objects.c:2647
+#: builtin/pack-objects.c:2645
 msgid "reuse existing deltas"
 msgstr "återanvänd befintliga delta"
 
-#: builtin/pack-objects.c:2649
+#: builtin/pack-objects.c:2647
 msgid "reuse existing objects"
 msgstr "återanvänd befintliga objekt"
 
-#: builtin/pack-objects.c:2651
+#: builtin/pack-objects.c:2649
 msgid "use OFS_DELTA objects"
 msgstr "använd OFS_DELTA-objekt"
 
-#: builtin/pack-objects.c:2653
+#: builtin/pack-objects.c:2651
 msgid "use threads when searching for best delta matches"
 msgstr "använd trådar vid sökning efter bästa deltaträffar"
 
-#: builtin/pack-objects.c:2655
+#: builtin/pack-objects.c:2653
 msgid "do not create an empty pack output"
 msgstr "försök inte skapa tom paketutdata"
 
-#: builtin/pack-objects.c:2657
+#: builtin/pack-objects.c:2655
 msgid "read revision arguments from standard input"
 msgstr "läs revisionsargument från standard in"
 
-#: builtin/pack-objects.c:2659
+#: builtin/pack-objects.c:2657
 msgid "limit the objects to those that are not yet packed"
 msgstr "begränsa objekt till de som ännu inte packats"
 
-#: builtin/pack-objects.c:2662
+#: builtin/pack-objects.c:2660
 msgid "include objects reachable from any reference"
 msgstr "inkludera objekt som kan nås från någon referens"
 
-#: builtin/pack-objects.c:2665
+#: builtin/pack-objects.c:2663
 msgid "include objects referred by reflog entries"
 msgstr "inkludera objekt som refereras från referensloggposter"
 
-#: builtin/pack-objects.c:2668
+#: builtin/pack-objects.c:2666
 msgid "include objects referred to by the index"
 msgstr "inkludera objekt som refereras från indexet"
 
-#: builtin/pack-objects.c:2671
+#: builtin/pack-objects.c:2669
 msgid "output pack to stdout"
 msgstr "skriv paket på standard ut"
 
-#: builtin/pack-objects.c:2673
+#: builtin/pack-objects.c:2671
 msgid "include tag objects that refer to objects to be packed"
 msgstr "inkludera taggobjekt som refererar objekt som skall packas"
 
-#: builtin/pack-objects.c:2675
+#: builtin/pack-objects.c:2673
 msgid "keep unreachable objects"
 msgstr "behåll onåbara objekt"
 
-#: builtin/pack-objects.c:2676 parse-options.h:140
+#: builtin/pack-objects.c:2674 parse-options.h:140
 msgid "time"
 msgstr "tid"
 
-#: builtin/pack-objects.c:2677
+#: builtin/pack-objects.c:2675
 msgid "unpack unreachable objects newer than <time>"
 msgstr "packa upp onåbara objekt nyare än <tid>"
 
-#: builtin/pack-objects.c:2680
+#: builtin/pack-objects.c:2678
 msgid "create thin packs"
 msgstr "skapa tunna paket"
 
-#: builtin/pack-objects.c:2682
+#: builtin/pack-objects.c:2680
 msgid "create packs suitable for shallow fetches"
 msgstr "skapa packfiler lämpade för grunda hämtningar"
 
-#: builtin/pack-objects.c:2684
+#: builtin/pack-objects.c:2682
 msgid "ignore packs that have companion .keep file"
 msgstr "ignorera paket som har tillhörande .keep-fil"
 
-#: builtin/pack-objects.c:2686
+#: builtin/pack-objects.c:2684
 msgid "pack compression level"
 msgstr "komprimeringsgrad för paket"
 
-#: builtin/pack-objects.c:2688
+#: builtin/pack-objects.c:2686
 msgid "do not hide commits by grafts"
 msgstr "göm inte incheckningar med ympningar (\"grafts\")"
 
-#: builtin/pack-objects.c:2690
+#: builtin/pack-objects.c:2688
 msgid "use a bitmap index if available to speed up counting objects"
 msgstr "använd bitkartindex om tillgängligt för att räkna objekt snabbare"
 
-#: builtin/pack-objects.c:2692
+#: builtin/pack-objects.c:2690
 msgid "write a bitmap index together with the pack index"
 msgstr "använd bitkartindex tillsammans med packindexet"
 
-#: builtin/pack-objects.c:2783
+#: builtin/pack-objects.c:2781
 msgid "Counting objects"
 msgstr "Räknar objekt"
 
 #: builtin/pack-refs.c:6
-msgid "git pack-refs [options]"
-msgstr "git pack-refs [flaggor]"
+msgid "git pack-refs [<options>]"
+msgstr "git pack-refs [<flaggor>]"
 
 #: builtin/pack-refs.c:14
 msgid "pack everything"
 msgstr "packa allt"
 
 #: builtin/pack-refs.c:15
 msgid "prune loose refs (default)"
 msgstr "ta bort lösa referenser (standard)"
 
 #: builtin/prune-packed.c:7
-msgid "git prune-packed [-n|--dry-run] [-q|--quiet]"
-msgstr "git prune-packed [-n|--dry-run] [-q|--quiet]"
+msgid "git prune-packed [-n | --dry-run] [-q | --quiet]"
+msgstr "git prune-packed [-n | --dry-run] [-q | --quiet]"
 
 #: builtin/prune-packed.c:40
 msgid "Removing duplicate objects"
 msgstr "Tar bort duplicerade objekt"
 
 #: builtin/prune.c:12
@@ -8221,81 +8258,85 @@
 msgstr "--mirror kan inte kombineras med referensspecifikationer"
 
 #: builtin/push.c:422
 msgid "--all and --mirror are incompatible"
 msgstr "--all och --mirror är inkompatibla"
 
-#: builtin/push.c:493
+#: builtin/push.c:502
 msgid "repository"
 msgstr "arkiv"
 
-#: builtin/push.c:494
+#: builtin/push.c:503
 msgid "push all refs"
 msgstr "sänd alla referenser"
 
-#: builtin/push.c:495
+#: builtin/push.c:504
 msgid "mirror all refs"
 msgstr "spegla alla referenser"
 
-#: builtin/push.c:497
+#: builtin/push.c:506
 msgid "delete refs"
 msgstr "ta bort referenser"
 
-#: builtin/push.c:498
+#: builtin/push.c:507
 msgid "push tags (can't be used with --all or --mirror)"
 msgstr "sänd taggar (kan inte användas med --all eller --mirror)"
 
-#: builtin/push.c:501
+#: builtin/push.c:510
 msgid "force updates"
 msgstr "tvinga uppdateringar"
 
-#: builtin/push.c:503
+#: builtin/push.c:512
 msgid "refname>:<expect"
 msgstr "refnamn>:<förvänta"
 
-#: builtin/push.c:504
+#: builtin/push.c:513
 msgid "require old value of ref to be at this value"
 msgstr "kräv att ref:s tidigare värde är detta"
 
-#: builtin/push.c:507
+#: builtin/push.c:516
 msgid "control recursive pushing of submodules"
 msgstr "styr rekursiv insändning av undermoduler"
 
-#: builtin/push.c:509
+#: builtin/push.c:518
 msgid "use thin pack"
 msgstr "använd tunna paket"
 
-#: builtin/push.c:510 builtin/push.c:511
+#: builtin/push.c:519 builtin/push.c:520
 msgid "receive pack program"
 msgstr "program för att ta emot paket"
 
-#: builtin/push.c:512
+#: builtin/push.c:521
 msgid "set upstream for git pull/status"
 msgstr "ställ in uppström för git pull/status"
 
-#: builtin/push.c:515
+#: builtin/push.c:524
 msgid "prune locally removed refs"
 msgstr "ta bort lokalt borttagna referenser"
 
-#: builtin/push.c:517
+#: builtin/push.c:526
 msgid "bypass pre-push hook"
 msgstr "förbigå pre-push-krok"
 
-#: builtin/push.c:518
+#: builtin/push.c:527
 msgid "push missing but relevant tags"
 msgstr "sänd in saknade men relevanta taggar"
 
-#: builtin/push.c:520
+#: builtin/push.c:529
 msgid "GPG sign the push"
 msgstr "GPG-signera insändningen"
 
-#: builtin/push.c:529
+#: builtin/push.c:530
+msgid "request atomic transaction on remote side"
+msgstr "begär atomiska transaktioner på fjärrsidan"
+
+#: builtin/push.c:539
 msgid "--delete is incompatible with --all, --mirror and --tags"
 msgstr "--delete är inkompatibel med --all, --mirror och --tags"
 
-#: builtin/push.c:531
+#: builtin/push.c:541
 msgid "--delete doesn't make sense without any refs"
 msgstr "--delete kan inte användas utan referenser"
 
 #: builtin/read-tree.c:37
 msgid ""
 "git read-tree [[-m [--trivial] [--aggressive] | --reset | --prefix=<prefix>] "
@@ -8367,44 +8408,44 @@
 msgstr "hoppa över att applicera filter för gles utcheckning"
 
 #: builtin/read-tree.c:139
 msgid "debug unpack-trees"
 msgstr "felsök unpack-trees"
 
-#: builtin/reflog.c:499
+#: builtin/reflog.c:429
 #, c-format
 msgid "%s' for '%s' is not a valid timestamp"
 msgstr "\"%s\" för \"%s\" är inte en giltig tidsstämpel"
 
-#: builtin/reflog.c:615 builtin/reflog.c:620
+#: builtin/reflog.c:546 builtin/reflog.c:551
 #, c-format
 msgid "'%s' is not a valid timestamp"
 msgstr "\"%s\" är inte en giltig tidsstämpel"
 
 #: builtin/remote.c:12
 msgid "git remote [-v | --verbose]"
 msgstr "git remote [-v | --verbose]"
 
 #: builtin/remote.c:13
 msgid ""
-"git remote add [-t <branch>] [-m <master>] [-f] [--tags|--no-tags] [--"
+"git remote add [-t <branch>] [-m <master>] [-f] [--tags | --no-tags] [--"
 "mirror=<fetch|push>] <name> <url>"
 msgstr ""
-"git remote add [-t <gren>] [-m <master>] [-f] [--tags|--no-tags] [--"
+"git remote add [-t <gren>] [-m <master>] [-f] [--tags | --no-tags] [--"
 "mirror=<fetch|push>] <namn> <url>"
 
 #: builtin/remote.c:14 builtin/remote.c:33
 msgid "git remote rename <old> <new>"
 msgstr "git remote rename <gammal> <ny>"
 
 #: builtin/remote.c:15 builtin/remote.c:38
 msgid "git remote remove <name>"
 msgstr "git remote remove <namn>"
 
-#: builtin/remote.c:16
-msgid "git remote set-head <name> (-a | --auto | -d | --delete |<branch>)"
+#: builtin/remote.c:16 builtin/remote.c:43
+msgid "git remote set-head <name> (-a | --auto | -d | --delete | <branch>)"
 msgstr "git remote set-head <namn> (-a | --auto | -d | --delete | <gren>)"
 
 #: builtin/remote.c:17
 msgid "git remote [-v | --verbose] show [-n] <name>"
 msgstr "git remote [-v | --verbose] show [-n] <namn>"
 
@@ -8435,16 +8476,12 @@
 msgstr "git remote set-url --delete <namn> <url>"
 
 #: builtin/remote.c:28
 msgid "git remote add [<options>] <name> <url>"
 msgstr "git remote add [<flaggor>] <namn> <url>"
 
-#: builtin/remote.c:43
-msgid "git remote set-head <name> (-a | --auto | -d | --delete | <branch>)"
-msgstr "git remote set-head <namn> (-a | --auto | -d | --delete | <gren>)"
-
 #: builtin/remote.c:48
 msgid "git remote set-branches <name> <branch>..."
 msgstr "git remote set-branches <namn> <gren>..."
 
 #: builtin/remote.c:49
 msgid "git remote set-branches --add <name> <branch>..."
@@ -8871,14 +8908,14 @@
 
 #: builtin/remote.c:1592
 msgid "be verbose; must be placed before a subcommand"
 msgstr "var pratsam; måste skrivas före ett underkommando"
 
 #: builtin/repack.c:17
-msgid "git repack [options]"
-msgstr "git repack [flaggor]"
+msgid "git repack [<options>]"
+msgstr "git repack [<flaggor>]"
 
 #: builtin/repack.c:159
 msgid "pack everything in a single pack"
 msgstr "packa allt i ett enda paket"
 
 #: builtin/repack.c:161
@@ -8938,13 +8975,13 @@
 msgstr "maximal storlek på varje paketfil"
 
 #: builtin/repack.c:187
 msgid "repack objects in packs marked with .keep"
 msgstr "packa om objekt i paket märkta med .keep"
 
-#: builtin/repack.c:371
+#: builtin/repack.c:375
 #, c-format
 msgid "removing '%s' failed"
 msgstr "misslyckades ta bort \"%s\""
 
 #: builtin/replace.c:19
 msgid "git replace [-f] <object> <replacement>"
@@ -9030,14 +9067,14 @@
 
 #: builtin/replace.c:438
 msgid "use this format"
 msgstr "använd detta format"
 
 #: builtin/rerere.c:12
-msgid "git rerere [clear | forget path... | status | remaining | diff | gc]"
-msgstr "git rerere [clear | forget path... | status | remaining | diff | gc]"
+msgid "git rerere [clear | forget <path>... | status | remaining | diff | gc]"
+msgstr "git rerere [clear | forget <path>... | status | remaining | diff | gc]"
 
 #: builtin/rerere.c:57
 msgid "register clean resolutions in index"
 msgstr "registrera rena lösningar i indexet"
 
 #: builtin/reset.c:26
@@ -9170,14 +9207,14 @@
 
 #: builtin/reset.c:374
 msgid "Could not write new index file."
 msgstr "Kunde inte skriva ny indexfil."
 
 #: builtin/rev-parse.c:361
-msgid "git rev-parse --parseopt [options] -- [<args>...]"
-msgstr "git rev-parse --parseopt [options] -- [<argument>...]"
+msgid "git rev-parse --parseopt [<options>] -- [<args>...]"
+msgstr "git rev-parse --parseopt [<options>] -- [<argument>...]"
 
 #: builtin/rev-parse.c:366
 msgid "keep the `--` passed as an arg"
 msgstr "behåll \"--\" sänt som argument"
 
 #: builtin/rev-parse.c:368
@@ -9187,36 +9224,36 @@
 #: builtin/rev-parse.c:371
 msgid "output in stuck long form"
 msgstr "utdata fast i lång form"
 
 #: builtin/rev-parse.c:499
 msgid ""
-"git rev-parse --parseopt [options] -- [<args>...]\n"
+"git rev-parse --parseopt [<options>] -- [<args>...]\n"
 "   or: git rev-parse --sq-quote [<arg>...]\n"
-"   or: git rev-parse [options] [<arg>...]\n"
+"   or: git rev-parse [<options>] [<arg>...]\n"
 "\n"
 "Run \"git rev-parse --parseopt -h\" for more information on the first usage."
 msgstr ""
-"git rev-parse --parseopt [flaggor] -- [<argument>...]\n"
+"git rev-parse --parseopt [<flaggor>] -- [<argument>...]\n"
 "     eller: git rev-parse --sq-quote [<argument>...]\n"
-"     eller: git rev-parse [flaggor] [<argument>...]\n"
+"     eller: git rev-parse [<flaggor>] [<argument>...]\n"
 "\n"
 "Kör \"git rev-parse --parseopt -h\" för mer information om den första "
 "varianten."
 
 #: builtin/revert.c:22
-msgid "git revert [options] <commit-ish>..."
-msgstr "git revert [flaggor] <incheckning-igt>..."
+msgid "git revert [<options>] <commit-ish>..."
+msgstr "git revert [<flaggor>] <incheckning-igt>..."
 
 #: builtin/revert.c:23
 msgid "git revert <subcommand>"
 msgstr "git revert <underkommando>"
 
 #: builtin/revert.c:28
-msgid "git cherry-pick [options] <commit-ish>..."
-msgstr "git cherry-pick [flaggor] <incheckning-igt>..."
+msgid "git cherry-pick [<options>] <commit-ish>..."
+msgstr "git cherry-pick [<flaggor>] <incheckning-igt>..."
 
 #: builtin/revert.c:29
 msgid "git cherry-pick <subcommand>"
 msgstr "git cherry-pick <underkommando>"
 
 #: builtin/revert.c:71
@@ -9290,14 +9327,14 @@
 
 #: builtin/revert.c:212
 msgid "cherry-pick failed"
 msgstr "\"cherry-pick\" misslyckades"
 
 #: builtin/rm.c:17
-msgid "git rm [options] [--] <file>..."
-msgstr "git rm [flaggor] [--] <fil>..."
+msgid "git rm [<options>] [--] <file>..."
+msgstr "git rm [<flaggor>] [--] <fil>..."
 
 #: builtin/rm.c:65
 msgid ""
 "the following submodule (or one of its nested submodules)\n"
 "uses a .git directory:"
 msgid_plural ""
@@ -9391,13 +9428,13 @@
 #: builtin/rm.c:375
 #, c-format
 msgid "git rm: unable to remove %s"
 msgstr "git rm: kan inte ta bort %s"
 
 #: builtin/shortlog.c:13
-msgid "git shortlog [<options>] [<revision range>] [[--] [<path>...]]"
+msgid "git shortlog [<options>] [<revision-range>] [[--] [<path>...]]"
 msgstr "git shortlog [<flaggor>] [<versionsintervall>] [[--] <sökväg>...]"
 
 #: builtin/shortlog.c:131
 #, c-format
 msgid "Missing author: %s"
 msgstr "Författare saknas: %s"
@@ -9421,25 +9458,25 @@
 #: builtin/shortlog.c:236
 msgid "Linewrap output"
 msgstr "Radbryt utdata"
 
 #: builtin/show-branch.c:9
 msgid ""
-"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
+"git show-branch [-a | --all] [-r | --remotes] [--topo-order | --date-order]\n"
 "\t\t[--current] [--color[=<when>] | --no-color] [--sparse]\n"
 "\t\t[--more=<n> | --list | --independent | --merge-base]\n"
 "\t\t[--no-name | --sha1-name] [--topics] [(<rev> | <glob>)...]"
 msgstr ""
-"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
+"git show-branch [-a | --all] [-r | --remotes] [--topo-order | --date-order]\n"
 "\t\t[--current] [--color[=<när>] | --no-color] [--sparse]\n"
 "\t\t[--more=<n> | --list | --independent | --merge-base]\n"
 "\t\t[--no-name | --sha1-name] [--topics] [(<rev> | <mönster>)...]"
 
 #: builtin/show-branch.c:13
-msgid "git show-branch (-g|--reflog)[=<n>[,<base>]] [--list] [<ref>]"
-msgstr "git show-branch (-g|--reflog)[=<n>[,<bas>]] [--list] [<ref>]"
+msgid "git show-branch (-g | --reflog)[=<n>[,<base>]] [--list] [<ref>]"
+msgstr "git show-branch (-g | --reflog)[=<n>[,<bas>]] [--list] [<ref>]"
 
 #: builtin/show-branch.c:652
 msgid "show remote-tracking and local branches"
 msgstr "visa fjärrspårande och lokala grenar"
 
 #: builtin/show-branch.c:654
@@ -9501,17 +9538,17 @@
 #: builtin/show-branch.c:682
 msgid "show <n> most recent ref-log entries starting at base"
 msgstr "visa <n> nyaste refloggposter med början på bas"
 
 #: builtin/show-ref.c:10
 msgid ""
-"git show-ref [-q|--quiet] [--verify] [--head] [-d|--dereference] [-s|--"
-"hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [pattern*] "
+"git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | --"
+"hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<pattern>...]"
 msgstr ""
-"git show-ref [-q|--quiet] [--verify] [--head] [-d|--dereference] [-s|--"
-"hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [mönster*] "
+"git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | --"
+"hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<mönster>...]"
 
 #: builtin/show-ref.c:11
 msgid "git show-ref --exclude-existing[=pattern] < ref-list"
 msgstr "git show-ref --exclude-existing[=mönster] < reflista"
 
 #: builtin/show-ref.c:168
@@ -9544,18 +9581,18 @@
 
 #: builtin/show-ref.c:185
 msgid "show refs from stdin that aren't in local repository"
 msgstr "visa referenser från standard in som inte finns i lokalt arkiv"
 
 #: builtin/symbolic-ref.c:7
-msgid "git symbolic-ref [options] name [ref]"
-msgstr "git symbolic-ref [flaggor] namn [ref]"
+msgid "git symbolic-ref [<options>] <name> [<ref>]"
+msgstr "git symbolic-ref [<flaggor>] <namn> [<ref>]"
 
 #: builtin/symbolic-ref.c:8
-msgid "git symbolic-ref -d [-q] name"
-msgstr "git symbolic-ref -d [-q] namn"
+msgid "git symbolic-ref -d [-q] <name>"
+msgstr "git symbolic-ref -d [-q] <namn>"
 
 #: builtin/symbolic-ref.c:40
 msgid "suppress error message for non-symbolic (detached) refs"
 msgstr ""
 "undertryck felmeddelanden för icke-symboliska (frånkopplade) referenser"
 
@@ -9574,26 +9611,28 @@
 #: builtin/symbolic-ref.c:43 builtin/update-ref.c:358
 msgid "reason of the update"
 msgstr "skäl till uppdateringen"
 
 #: builtin/tag.c:22
 msgid ""
-"git tag [-a|-s|-u <key-id>] [-f] [-m <msg>|-F <file>] <tagname> [<head>]"
+"git tag [-a | -s | -u <key-id>] [-f] [-m <msg> | -F <file>] <tagname> "
+"[<head>]"
 msgstr ""
-"git tag [-a|-s|-u <nyckel-id>] [-f] [-m <medd>|-F <fil>] <taggnamn> [<huvud>]"
+"git tag [-a | -s | -u <nyckel-id>] [-f] [-m <medd> | -F <fil>] <taggnamn> "
+"[<huvud>]"
 
 #: builtin/tag.c:23
 msgid "git tag -d <tagname>..."
 msgstr "git tag -d <taggnamn>..."
 
 #: builtin/tag.c:24
 msgid ""
-"git tag -l [-n[<num>]] [--contains <commit>] [--points-at <object>] \n"
+"git tag -l [-n[<num>]] [--contains <commit>] [--points-at <object>]\n"
 "\t\t[<pattern>...]"
 msgstr ""
-"git tag -l [-n[<antal>]] [--contains <incheckning>] [--points-at <objekt>] \n"
+"git tag -l [-n[<antal>]] [--contains <incheckning>] [--points-at <objekt>]\n"
 "\t\t[<mönster>...]"
 
 #: builtin/tag.c:26
 msgid "git tag -v <tagname>..."
 msgstr "git tag -v <taggnamn>..."
 
@@ -9731,24 +9770,24 @@
 msgstr "använd annan nyckel för att signera taggen"
 
 #: builtin/tag.c:607
 msgid "replace the tag if exists"
 msgstr "ersätt taggen om den finns"
 
-#: builtin/tag.c:608
+#: builtin/tag.c:609
+msgid "Tag listing options"
+msgstr "Alternativ för listning av taggar"
+
+#: builtin/tag.c:610
 msgid "show tag list in columns"
 msgstr "lista taggar i spalter"
 
-#: builtin/tag.c:610
+#: builtin/tag.c:612
 msgid "sort tags"
 msgstr "sortera taggar"
 
-#: builtin/tag.c:614
-msgid "Tag listing options"
-msgstr "Alternativ för listning av taggar"
-
 #: builtin/tag.c:617 builtin/tag.c:623
 msgid "print only tags that contain the commit"
 msgstr "visa endast taggar som innehåller incheckningen"
 
 #: builtin/tag.c:629
 msgid "print only tags of the object"
@@ -9799,138 +9838,138 @@
 
 #: builtin/unpack-objects.c:489
 msgid "Unpacking objects"
 msgstr "Packar upp objekt"
 
 #: builtin/update-index.c:403
-msgid "git update-index [options] [--] [<file>...]"
-msgstr "git update-index [flaggor] [--] [<fil>...]"
+msgid "git update-index [<options>] [--] [<file>...]"
+msgstr "git update-index [<flaggor>] [--] [<fil>...]"
 
-#: builtin/update-index.c:756
+#: builtin/update-index.c:757
 msgid "continue refresh even when index needs update"
 msgstr "fortsätt uppdatera även när index inte är àjour"
 
-#: builtin/update-index.c:759
+#: builtin/update-index.c:760
 msgid "refresh: ignore submodules"
 msgstr "refresh: ignorera undermoduler"
 
-#: builtin/update-index.c:762
+#: builtin/update-index.c:763
 msgid "do not ignore new files"
 msgstr "ignorera inte nya filer"
 
-#: builtin/update-index.c:764
+#: builtin/update-index.c:765
 msgid "let files replace directories and vice-versa"
 msgstr "låt filer ersätta kataloger och omvänt"
 
-#: builtin/update-index.c:766
+#: builtin/update-index.c:767
 msgid "notice files missing from worktree"
 msgstr "lägg märke till filer som saknas i arbetskatalogen"
 
-#: builtin/update-index.c:768
+#: builtin/update-index.c:769
 msgid "refresh even if index contains unmerged entries"
 msgstr "uppdatera även om indexet innehåller ej sammanslagna poster"
 
-#: builtin/update-index.c:771
+#: builtin/update-index.c:772
 msgid "refresh stat information"
 msgstr "uppdatera statusinformation"
 
-#: builtin/update-index.c:775
+#: builtin/update-index.c:776
 msgid "like --refresh, but ignore assume-unchanged setting"
 msgstr "som --refresh, men ignorera assume-unchanged-inställning"
 
-#: builtin/update-index.c:779
+#: builtin/update-index.c:780
 msgid "<mode>,<object>,<path>"
 msgstr "<läge>,<objekt>,<sökväg>"
 
-#: builtin/update-index.c:780
+#: builtin/update-index.c:781
 msgid "add the specified entry to the index"
 msgstr "lägg till angiven post i indexet"
 
-#: builtin/update-index.c:784
+#: builtin/update-index.c:785
 msgid "(+/-)x"
 msgstr "(+/-)x"
 
-#: builtin/update-index.c:785
+#: builtin/update-index.c:786
 msgid "override the executable bit of the listed files"
 msgstr "överstyr exekveringsbiten för angivna filer"
 
-#: builtin/update-index.c:789
+#: builtin/update-index.c:790
 msgid "mark files as \"not changing\""
 msgstr "markera filer som \"ändras inte\""
 
-#: builtin/update-index.c:792
+#: builtin/update-index.c:793
 msgid "clear assumed-unchanged bit"
 msgstr "rensa \"assume-unchanged\"-biten"
 
-#: builtin/update-index.c:795
+#: builtin/update-index.c:796
 msgid "mark files as \"index-only\""
 msgstr "markera filer som \"endast index\""
 
-#: builtin/update-index.c:798
+#: builtin/update-index.c:799
 msgid "clear skip-worktree bit"
 msgstr "töm \"skip-worktree\"-biten"
 
-#: builtin/update-index.c:801
+#: builtin/update-index.c:802
 msgid "add to index only; do not add content to object database"
 msgstr "lägg endast till indexet; lägg inte till innehållet i objektdatabasen"
 
-#: builtin/update-index.c:803
+#: builtin/update-index.c:804
 msgid "remove named paths even if present in worktree"
 msgstr "ta bort namngivna sökvägar även om de finns i arbetskatalogen"
 
-#: builtin/update-index.c:805
+#: builtin/update-index.c:806
 msgid "with --stdin: input lines are terminated by null bytes"
 msgstr "med --stdin: indatarader termineras med null-byte"
 
-#: builtin/update-index.c:807
+#: builtin/update-index.c:808
 msgid "read list of paths to be updated from standard input"
 msgstr "läs lista över sökvägar att uppdatera från standard in"
 
-#: builtin/update-index.c:811
+#: builtin/update-index.c:812
 msgid "add entries from standard input to the index"
 msgstr "lägg poster från standard in till indexet"
 
-#: builtin/update-index.c:815
+#: builtin/update-index.c:816
 msgid "repopulate stages #2 and #3 for the listed paths"
 msgstr "återfyll etapp 2 och 3 från angivna sökvägar"
 
-#: builtin/update-index.c:819
+#: builtin/update-index.c:820
 msgid "only update entries that differ from HEAD"
 msgstr "uppdatera endast poster som skiljer sig från HEAD"
 
-#: builtin/update-index.c:823
+#: builtin/update-index.c:824
 msgid "ignore files missing from worktree"
 msgstr "ignorera filer som saknas i arbetskatalogen"
 
-#: builtin/update-index.c:826
+#: builtin/update-index.c:827
 msgid "report actions to standard output"
 msgstr "rapportera åtgärder på standard ut"
 
-#: builtin/update-index.c:828
+#: builtin/update-index.c:829
 msgid "(for porcelains) forget saved unresolved conflicts"
 msgstr "(för porslin) glöm sparade olösta konflikter"
 
-#: builtin/update-index.c:832
+#: builtin/update-index.c:833
 msgid "write index in this format"
 msgstr "skriv index i detta format"
 
-#: builtin/update-index.c:834
+#: builtin/update-index.c:835
 msgid "enable or disable split index"
 msgstr "aktivera eller inaktivera delat index"
 
 #: builtin/update-ref.c:9
-msgid "git update-ref [options] -d <refname> [<oldval>]"
-msgstr "git update-ref [flaggor] -d <refnamn> [<gammaltvärde>]"
+msgid "git update-ref [<options>] -d <refname> [<old-val>]"
+msgstr "git update-ref [<flaggor>] -d <refnamn> [<gammaltvärde>]"
 
 #: builtin/update-ref.c:10
-msgid "git update-ref [options]    <refname> <newval> [<oldval>]"
-msgstr "git update-ref [flaggor]    <refnamn> <gammaltvärde> [<nyttvärde>]"
+msgid "git update-ref [<options>]    <refname> <new-val> [<old-val>]"
+msgstr "git update-ref [<flaggor>]    <refnamn> <gammaltvärde> [<nyttvärde>]"
 
 #: builtin/update-ref.c:11
-msgid "git update-ref [options] --stdin [-z]"
-msgstr "git update-ref [flaggor] --stdin [-z]"
+msgid "git update-ref [<options>] --stdin [-z]"
+msgstr "git update-ref [<flaggor>] --stdin [-z]"
 
 #: builtin/update-ref.c:359
 msgid "delete the reference"
 msgstr "ta bort referensen"
 
 #: builtin/update-ref.c:361
@@ -9951,34 +9990,34 @@
 
 #: builtin/update-server-info.c:14
 msgid "update the info files from scratch"
 msgstr "uppdatera informationsfilerna från grunden"
 
 #: builtin/verify-commit.c:17
-msgid "git verify-commit [-v|--verbose] <commit>..."
-msgstr "git verify-commit [-v|--verbose] <incheckning>..."
+msgid "git verify-commit [-v | --verbose] <commit>..."
+msgstr "git verify-commit [-v | --verbose] <incheckning>..."
 
 #: builtin/verify-commit.c:75
 msgid "print commit contents"
 msgstr "visa innehåll för incheckning"
 
 #: builtin/verify-pack.c:54
-msgid "git verify-pack [-v|--verbose] [-s|--stat-only] <pack>..."
-msgstr "git verify-pack [-v|--verbose] [-s|--stat-only] <paket>..."
+msgid "git verify-pack [-v | --verbose] [-s | --stat-only] <pack>..."
+msgstr "git verify-pack [-v | --verbose] [-s | --stat-only] <paket>..."
 
 #: builtin/verify-pack.c:64
 msgid "verbose"
 msgstr "pratsam"
 
 #: builtin/verify-pack.c:66
 msgid "show statistics only"
 msgstr "visa endast statistik"
 
 #: builtin/verify-tag.c:17
-msgid "git verify-tag [-v|--verbose] <tag>..."
-msgstr "git verify-tag [-v|--verbose] <tagg>..."
+msgid "git verify-tag [-v | --verbose] <tag>..."
+msgstr "git verify-tag [-v | --verbose] <tagg>..."
 
 #: builtin/verify-tag.c:73
 msgid "print tag contents"
 msgstr "visa innehåll för tag"
 
 #: builtin/write-tree.c:13
@@ -10322,16 +10361,16 @@
 msgid "Bad HEAD - I need a HEAD"
 msgstr "Felaktigt HEAD - Jag behöver ett HEAD"
 
 #: git-bisect.sh:130
 #, sh-format
 msgid ""
-"Checking out '$start_head' failed. Try 'git bisect reset <validbranch>'."
+"Checking out '$start_head' failed. Try 'git bisect reset <valid-branch>'."
 msgstr ""
 "Misslyckades checka ut \"$start_head\". Försök \"git bisect reset "
-"<giltiggren>\""
+"<giltig_gren>\""
 
 # cogito-relaterat
 #: git-bisect.sh:140
 msgid "won't bisect on cg-seek'ed tree"
 msgstr "kör inte \"bisect\" på träd där \"cg-seek\" använts"
 
@@ -11080,12 +11119,27 @@
 
 #: git-submodule.sh:1331
 #, sh-format
 msgid "Synchronizing submodule url for '$displaypath'"
 msgstr "Synkroniserar undermodul-url för \"$displaypath\""
 
+#~ msgid "server does not support --atomic push"
+#~ msgstr "servern stöder inte push med --atomic"
+
+#~ msgid "(detached from %s)"
+#~ msgstr "(frånkopplad från %s)"
+
+#~ msgid "No existing author found with '%s'"
+#~ msgstr "Hittade ingen befintlig författare med \"%s\""
+
+#~ msgid "search also in ignored files"
+#~ msgstr "sök även i ignorerade filer"
+
+#~ msgid "git remote set-head <name> (-a | --auto | -d | --delete |<branch>)"
+#~ msgstr "git remote set-head <namn> (-a | --auto | -d | --delete | <gren>)"
+
 #~ msgid "no files added"
 #~ msgstr "inga filer har lagts till"
 
 #~ msgid "force creation (when already exists)"
 #~ msgstr "tvinga skapande (när den redan finns)"
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/TEAMS /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/TEAMS
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/TEAMS	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/TEAMS	2015-05-01 03:12:02.000000000 +0800
@@ -33,23 +33,28 @@
 Members:	Stefano Lattarini <stefano.lattarini AT gmail.com>
 
 Language:	pt_PT (Portuguese - Portugal)
 Repository:	https://github.com/marcomsousa/git-l10n-pt_PT/
 Leader:		Marco Sousa <marcomsousa AT gmail.com>
 
+Language:	ru (Russian)
+Repository:	https://github.com/DJm00n/git-po-ru/
+Leader:		Dimitriy Ryazantcev <DJm00n AT mail.ru>
+Members:	insolor <insolor AT gmail.com>
+
 Language:	sv (Swedish)
 Repository:	https://github.com/nafmo/git-l10n-sv/
 Leader:		Peter Krefting <peter@softwolves.pp.se>
 
 Language:	vi (Vietnamese)
 Repository:	https://github.com/vnwildman/git/
 Leader:		Trần Ngọc Quân <vnwildman AT gmail.com>
 Members:	Nguyễn Thái Ngọc Duy <pclouds AT gmail.com>
 
 Language:	zh_CN (Simplified Chinese)
-Repository:	https://github.com/gotgit/git-po-zh_CN/
+Repository:	https://github.com/jiangxin/git/
 Leader:		Jiang Xin <worldhello.net@gmail.com>
 Members:	Riku <lu.riku AT gmail.com>
 		Zhuang Ya <zhuangya AT me.com>
 		Lian Cheng <rhythm.mail AT gmail.com>
 		Yichao Yu <yyc1992 AT gmail.com>
 		ws3389 <willsmith3389 AT gmail.com>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/vi.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/vi.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/vi.po	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/vi.po	2015-05-01 03:12:02.000000000 +0800
@@ -3,16 +3,16 @@
 # This file is distributed under the same license as the git-core package.
 # Nguyễn Thái Ngọc Duy <pclouds@gmail.com>, 2012.
 # Trần Ngọc Quân <vnwildman@gmail.com>, 2012, 2013, 2014, 2015.
 #
 msgid ""
 msgstr ""
-"Project-Id-Version: git v2.3.0\n"
+"Project-Id-Version: git v2.4.0\n"
 "Report-Msgid-Bugs-To: Git Mailing List <git@vger.kernel.org>\n"
-"POT-Creation-Date: 2015-01-21 14:21+0800\n"
-"PO-Revision-Date: 2015-01-21 14:58+0800\n"
+"POT-Creation-Date: 2015-04-03 08:13+0800\n"
+"PO-Revision-Date: 2015-04-03 08:51+0700\n"
 "Last-Translator: Trần Ngọc Quân <vnwildman@gmail.com>\n"
 "Language-Team: Vietnamese <translation-team-vi@lists.sourceforge.net>\n"
 "Language: vi\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
@@ -34,25 +34,25 @@
 msgstr ""
 "Sửa chúng trong cây làm việc,\n"
 "và sau đó dùng lệnh “git add/rm <tập-tin>”\n"
 "dành riêng cho việc đánh dấu cần giải quyết và tạo lần chuyển giao."
 
 #: archive.c:11
-msgid "git archive [options] <tree-ish> [<path>...]"
-msgstr "git archive [các-tùy-chọn] <tree-ish> [<đường-dẫn>…]"
+msgid "git archive [<options>] <tree-ish> [<path>...]"
+msgstr "git archive [<các-tùy-chọn>] <tree-ish> [<đường-dẫn>…]"
 
 #: archive.c:12
 msgid "git archive --list"
 msgstr "git archive --list"
 
 #: archive.c:13
 msgid ""
-"git archive --remote <repo> [--exec <cmd>] [options] <tree-ish> [<path>...]"
+"git archive --remote <repo> [--exec <cmd>] [<options>] <tree-ish> [<path>...]"
 msgstr ""
-"git archive --remote <kho> [--exec <lệnh>] [các-tùy-chọn] <tree-ish> [<đường-"
-"dẫn>…]"
+"git archive --remote <kho> [--exec <lệnh>] [<các-tùy-chọn>] <tree-ish> "
+"[<đường-dẫn>…]"
 
 #: archive.c:14
 msgid "git archive --remote <repo> [--exec <cmd>] --list"
 msgstr "git archive --remote <kho> [--exec <lệnh>] --list"
 
 #: archive.c:342 builtin/add.c:137 builtin/add.c:427 builtin/rm.c:328
@@ -73,16 +73,16 @@
 msgstr "tiền_tố"
 
 #: archive.c:429
 msgid "prepend prefix to each pathname in the archive"
 msgstr "nối thêm tiền tố vào từng đường dẫn tập tin trong kho lưu"
 
-#: archive.c:430 builtin/archive.c:88 builtin/blame.c:2517
-#: builtin/blame.c:2518 builtin/config.c:57 builtin/fast-export.c:986
+#: archive.c:430 builtin/archive.c:88 builtin/blame.c:2516
+#: builtin/blame.c:2517 builtin/config.c:57 builtin/fast-export.c:986
 #: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:101
-#: builtin/ls-files.c:489 builtin/ls-files.c:492 builtin/notes.c:394
+#: builtin/ls-files.c:446 builtin/ls-files.c:449 builtin/notes.c:394
 #: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:151
 msgid "file"
 msgstr "tập_tin"
 
 #: archive.c:431 builtin/archive.c:89
 msgid "write the archive to this file"
@@ -125,13 +125,13 @@
 msgstr "lệnh"
 
 #: archive.c:452 builtin/archive.c:93
 msgid "path to the remote git-upload-archive command"
 msgstr "đường dẫn đến lệnh git-upload-pack trên máy chủ"
 
-#: attr.c:258
+#: attr.c:264
 msgid ""
 "Negative patterns are ignored in git attributes\n"
 "Use '\\!' for literal leading exclamation."
 msgstr ""
 "Các mẫu dạng phủ định bị cấm dùng cho các thuộc tính của git\n"
 "Dùng “\\!” cho các chuỗi văn bản có dấu chấm than dẫn đầu."
@@ -255,23 +255,23 @@
 
 #: bundle.c:61
 #, c-format
 msgid "unrecognized header: %s%s (%d)"
 msgstr "phần đầu không được thừa nhận: %s%s (%d)"
 
-#: bundle.c:87 builtin/commit.c:770
+#: bundle.c:87 builtin/commit.c:766
 #, c-format
 msgid "could not open '%s'"
 msgstr "không thể mở “%s”"
 
 #: bundle.c:139
 msgid "Repository lacks these prerequisite commits:"
 msgstr "Kho chứa thiếu những lần chuyển giao tiên quyết này:"
 
-#: bundle.c:163 sequencer.c:645 sequencer.c:1100 builtin/blame.c:2706
-#: builtin/branch.c:652 builtin/commit.c:1049 builtin/log.c:330
+#: bundle.c:163 sequencer.c:650 sequencer.c:1105 builtin/blame.c:2705
+#: builtin/branch.c:659 builtin/commit.c:1045 builtin/log.c:330
 #: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:358
 #: builtin/shortlog.c:158
 msgid "revision walk setup failed"
 msgstr "cài đặt việc di chuyển qua các điểm xét duyệt gặp lỗi"
 
 #: bundle.c:185
@@ -304,27 +304,27 @@
 
 #: bundle.c:358
 #, c-format
 msgid "ref '%s' is excluded by the rev-list options"
 msgstr "th.chiếu “%s” bị loại trừ bởi các tùy chọn rev-list"
 
-#: bundle.c:438 builtin/log.c:153 builtin/log.c:1342 builtin/shortlog.c:261
+#: bundle.c:437 builtin/log.c:153 builtin/log.c:1342 builtin/shortlog.c:261
 #, c-format
 msgid "unrecognized argument: %s"
 msgstr "đối số không được thừa nhận: %s"
 
-#: bundle.c:444
+#: bundle.c:443
 msgid "Refusing to create empty bundle."
 msgstr "Từ chối tạo một bundle trống rỗng."
 
-#: bundle.c:454
+#: bundle.c:453
 #, c-format
 msgid "cannot create '%s'"
 msgstr "không thể tạo “%s”"
 
-#: bundle.c:475
+#: bundle.c:474
 msgid "index-pack died"
 msgstr "mục lục gói đã chết"
 
 #: color.c:260
 #, c-format
 msgid "invalid color value: %.*s"
@@ -341,61 +341,61 @@
 msgstr "%s %s không phải là một lần chuyển giao!"
 
 #: compat/obstack.c:406 compat/obstack.c:408
 msgid "memory exhausted"
 msgstr "hết bộ nhớ"
 
-#: config.c:469 config.c:471
+#: config.c:474 config.c:476
 #, c-format
 msgid "bad config file line %d in %s"
 msgstr "tập tin cấu hình sai tại dòng %d trong %s"
 
-#: config.c:587
+#: config.c:592
 #, c-format
 msgid "bad numeric config value '%s' for '%s' in %s: %s"
 msgstr "sai giá trị bằng số của cấu hình “%s” cho “%s” trong %s: %s"
 
-#: config.c:589
+#: config.c:594
 #, c-format
 msgid "bad numeric config value '%s' for '%s': %s"
 msgstr "sai giá trị bằng số của cấu hình “%s” cho “%s”: %s"
 
-#: config.c:674
+#: config.c:679
 #, c-format
 msgid "failed to expand user dir in: '%s'"
 msgstr "gặp lỗi mở rộng thư mục người dùng trong: “%s”"
 
-#: config.c:752 config.c:763
+#: config.c:757 config.c:768
 #, c-format
 msgid "bad zlib compression level %d"
 msgstr "mức nén zlib %d là sai"
 
-#: config.c:885
+#: config.c:890
 #, c-format
 msgid "invalid mode for object creation: %s"
 msgstr "chế độ không hợp lệ đối với việc tạo đối tượng: %s"
 
-#: config.c:1211
+#: config.c:1216
 msgid "unable to parse command-line config"
 msgstr "không thể phân tích cấu hình dòng lệnh"
 
-#: config.c:1272
+#: config.c:1277
 msgid "unknown error occured while reading the configuration files"
 msgstr "đã có lỗi chưa biết xảy ra trong khi đọc các tập tin cấu hình"
 
-#: config.c:1596
+#: config.c:1601
 #, c-format
 msgid "unable to parse '%s' from command-line config"
 msgstr "không thể phân tích “%s” từ cấu hình dòng lệnh"
 
-#: config.c:1598
+#: config.c:1603
 #, c-format
 msgid "bad config variable '%s' in file '%s' at line %d"
 msgstr "sai biến cấu hình “%s” trong tập tin “%s” tại dòng %d"
 
-#: config.c:1657
+#: config.c:1662
 #, c-format
 msgid "%s has multiple values"
 msgstr "%s có đa giá trị"
 
 #: connected.c:69
 msgid "Could not run 'git rev-list'"
@@ -472,13 +472,13 @@
 
 #: diffcore-order.c:24
 #, c-format
 msgid "failed to read orderfile '%s'"
 msgstr "gặp lỗi khi đọc tập-tin-thứ-tự “%s”"
 
-#: diffcore-rename.c:516
+#: diffcore-rename.c:536
 msgid "Performing inexact rename detection"
 msgstr "Đang thực hiện dò tìm đổi tên không chính xác"
 
 #: diff.c:114
 #, c-format
 msgid "  Failed to parse dirstat cut-off percentage '%s'\n"
@@ -500,31 +500,31 @@
 "Found errors in 'diff.dirstat' config variable:\n"
 "%s"
 msgstr ""
 "Tìm thấy các lỗi trong biến cấu hình “diff.dirstat”:\n"
 "%s"
 
-#: diff.c:2957
+#: diff.c:2956
 #, c-format
 msgid "external diff died, stopping at %s"
 msgstr "phần mềm diff ở bên ngoài đã chết, dừng tại %s"
 
-#: diff.c:3352
+#: diff.c:3351
 msgid "--follow requires exactly one pathspec"
 msgstr "--follow cần chính xác một đặc tả đường dẫn"
 
-#: diff.c:3515
+#: diff.c:3514
 #, c-format
 msgid ""
 "Failed to parse --dirstat/-X option parameter:\n"
 "%s"
 msgstr ""
 "Gặp lỗi khi phân tích đối số tùy chọn --dirstat/-X:\n"
 "%s"
 
-#: diff.c:3529
+#: diff.c:3528
 #, c-format
 msgid "Failed to parse --submodule option parameter: '%s'"
 msgstr "Gặp lỗi khi phân tích đối số tùy chọn --submodule: “%s”"
 
 #: gpg-interface.c:129 gpg-interface.c:200
 msgid "could not run gpg."
@@ -868,32 +868,32 @@
 
 #: merge-recursive.c:1853
 #, c-format
 msgid "Unprocessed path??? %s"
 msgstr "Đường dẫn chưa được xử lý??? %s"
 
-#: merge-recursive.c:1898
+#: merge-recursive.c:1901
 msgid "Merging:"
 msgstr "Đang trộn:"
 
-#: merge-recursive.c:1911
+#: merge-recursive.c:1914
 #, c-format
 msgid "found %u common ancestor:"
 msgid_plural "found %u common ancestors:"
 msgstr[0] "tìm thấy %u tổ tiên chung:"
 
-#: merge-recursive.c:1948
+#: merge-recursive.c:1951
 msgid "merge returned no commit"
 msgstr "hòa trộn không trả về lần chuyển giao nào"
 
-#: merge-recursive.c:2005
+#: merge-recursive.c:2008
 #, c-format
 msgid "Could not parse object '%s'"
 msgstr "Không thể phân tích đối tượng “%s”"
 
-#: merge-recursive.c:2016 builtin/merge.c:667
+#: merge-recursive.c:2019 builtin/merge.c:667
 msgid "Unable to write index."
 msgstr "Không thể ghi bảng mục lục"
 
 #: notes-utils.c:41
 msgid "Cannot commit uninitialized/unreferenced notes tree"
 msgstr ""
@@ -1017,22 +1017,22 @@
 msgstr "không thể phân tích định dạng --pretty"
 
 #: progress.c:225
 msgid "done"
 msgstr "xong"
 
-#: read-cache.c:1267
+#: read-cache.c:1275
 #, c-format
 msgid ""
 "index.version set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "index.version được đặt, nhưng giá trị của nó lại không hợp lệ.\n"
 "Dùng phiên bản %i"
 
-#: read-cache.c:1277
+#: read-cache.c:1285
 #, c-format
 msgid ""
 "GIT_INDEX_VERSION set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "GIT_INDEX_VERSION được đặt, nhưng giá trị của nó lại không hợp lệ.\n"
@@ -1085,13 +1085,13 @@
 #: remote.c:2000
 #, c-format
 msgid "Your branch is behind '%s' by %d commit, and can be fast-forwarded.\n"
 msgid_plural ""
 "Your branch is behind '%s' by %d commits, and can be fast-forwarded.\n"
 msgstr[0] ""
-"Nhánh của bạn ở đằng sau “%s” %d lần chuyển giao, và có thể được fast-"
+"Nhánh của bạn đứng đằng sau “%s” %d lần chuyển giao, và có thể được fast-"
 "forward.\n"
 
 #: remote.c:2008
 msgid "  (use \"git pull\" to update your local branch)\n"
 msgstr "  (dùng \"git pull\" để cập nhật nhánh nội bộ của bạn)\n"
 
@@ -1111,29 +1111,37 @@
 #: remote.c:2021
 msgid "  (use \"git pull\" to merge the remote branch into yours)\n"
 msgstr ""
 "  (dùng \"git pull\" để hòa trộn nhánh trên máy chủ vào trong nhánh của "
 "bạn)\n"
 
-#: run-command.c:87
+#: revision.c:2348
+msgid "--first-parent is incompatible with --bisect"
+msgstr "--first-parent xung khắc với --bisect"
+
+#: run-command.c:83
 msgid "open /dev/null failed"
 msgstr "gặp lỗi khi mở “/dev/null”"
 
-#: run-command.c:89
+#: run-command.c:85
 #, c-format
 msgid "dup2(%d,%d) failed"
 msgstr "dup2(%d,%d) gặp lỗi"
 
-#: send-pack.c:268
+#: send-pack.c:272
 msgid "failed to sign the push certificate"
 msgstr "gặp lỗi khi ký chứng thực đẩy"
 
-#: send-pack.c:325
+#: send-pack.c:356
 msgid "the receiving end does not support --signed push"
 msgstr "kết thúc nhận không hỗ trợ đẩy --signed"
 
+#: send-pack.c:366
+msgid "the receiving end does not support --atomic push"
+msgstr "kết thúc nhận không hỗ trợ đẩy --atomic"
+
 #: sequencer.c:172 builtin/merge.c:782 builtin/merge.c:893 builtin/merge.c:995
 #: builtin/merge.c:1005
 #, c-format
 msgid "Could not open '%s' for writing"
 msgstr "Không thể mở “%s” để ghi"
 
@@ -1158,13 +1166,13 @@
 "and commit the result with 'git commit'"
 msgstr ""
 "sau khi giải quyết các xung đột, đánh dấu đường dẫn đã sửa\n"
 "với lệnh “git add <đường_dẫn>” hoặc “git rm <đường_dẫn>”\n"
 "và chuyển giao kết quả bằng lệnh “git commit”"
 
-#: sequencer.c:211 sequencer.c:856 sequencer.c:939
+#: sequencer.c:211 sequencer.c:861 sequencer.c:944
 #, c-format
 msgid "Could not write to %s"
 msgstr "Không thể ghi vào %s"
 
 #: sequencer.c:214
 #, c-format
@@ -1194,192 +1202,192 @@
 msgstr "Không thể phân giải commit (lần chuyển giao) HEAD\n"
 
 #: sequencer.c:359
 msgid "Unable to update cache tree\n"
 msgstr "Không thể cập nhật cây bộ nhớ đệm\n"
 
-#: sequencer.c:406
+#: sequencer.c:411
 #, c-format
 msgid "Could not parse commit %s\n"
-msgstr "Không thể phân tích commit (lần chuyển giao) %s\n"
+msgstr "Không thể phân tích lần chuyển giao %s\n"
 
-#: sequencer.c:411
+#: sequencer.c:416
 #, c-format
 msgid "Could not parse parent commit %s\n"
 msgstr "Không thể phân tích lần chuyển giao cha mẹ “%s”\n"
 
-#: sequencer.c:477
+#: sequencer.c:482
 msgid "Your index file is unmerged."
 msgstr "Tập tin lưu mục lục của bạn không được hòa trộn."
 
-#: sequencer.c:496
+#: sequencer.c:501
 #, c-format
 msgid "Commit %s is a merge but no -m option was given."
 msgstr "Lần chuyển giao %s là một lần hòa trộn nhưng không đưa ra tùy chọn -m."
 
-#: sequencer.c:504
+#: sequencer.c:509
 #, c-format
 msgid "Commit %s does not have parent %d"
 msgstr "Lần chuyển giao %s không có cha mẹ %d"
 
-#: sequencer.c:508
+#: sequencer.c:513
 #, c-format
 msgid "Mainline was specified but commit %s is not a merge."
 msgstr ""
 "Luồng chính đã được chỉ ra nhưng lần chuyển giao %s không phải là một lần "
 "hòa trộn."
 
 #. TRANSLATORS: The first %s will be "revert" or
 #. "cherry-pick", the second %s a SHA1
-#: sequencer.c:521
+#: sequencer.c:526
 #, c-format
 msgid "%s: cannot parse parent commit %s"
 msgstr "%s: không thể phân tích lần chuyển giao mẹ của %s"
 
-#: sequencer.c:525
+#: sequencer.c:530
 #, c-format
 msgid "Cannot get commit message for %s"
 msgstr "Không thể lấy ghi chú lần chuyển giao cho %s"
 
-#: sequencer.c:611
+#: sequencer.c:616
 #, c-format
 msgid "could not revert %s... %s"
 msgstr "không thể revert %s… %s"
 
-#: sequencer.c:612
+#: sequencer.c:617
 #, c-format
 msgid "could not apply %s... %s"
-msgstr "không thể apply (áp dụng miếng vá) %s… %s"
+msgstr "không thể áp dụng miếng vá %s… %s"
 
-#: sequencer.c:648
+#: sequencer.c:653
 msgid "empty commit set passed"
 msgstr "lần chuyển giao trống rỗng đặt là hợp quy cách"
 
-#: sequencer.c:656
+#: sequencer.c:661
 #, c-format
 msgid "git %s: failed to read the index"
 msgstr "git %s: gặp lỗi đọc bảng mục lục"
 
-#: sequencer.c:660
+#: sequencer.c:665
 #, c-format
 msgid "git %s: failed to refresh the index"
 msgstr "git %s: gặp lỗi khi làm tươi mới bảng mục lục"
 
-#: sequencer.c:720
+#: sequencer.c:725
 #, c-format
 msgid "Cannot %s during a %s"
 msgstr "Không thể %s trong khi %s"
 
-#: sequencer.c:742
+#: sequencer.c:747
 #, c-format
 msgid "Could not parse line %d."
 msgstr "Không phân tích được dòng %d."
 
-#: sequencer.c:747
+#: sequencer.c:752
 msgid "No commits parsed."
 msgstr "Không có lần chuyển giao nào được phân tích."
 
-#: sequencer.c:760
+#: sequencer.c:765
 #, c-format
 msgid "Could not open %s"
 msgstr "Không thể mở %s"
 
-#: sequencer.c:764
+#: sequencer.c:769
 #, c-format
 msgid "Could not read %s."
 msgstr "Không thể đọc %s."
 
-#: sequencer.c:771
+#: sequencer.c:776
 #, c-format
 msgid "Unusable instruction sheet: %s"
 msgstr "Bảng chỉ thị không thể dùng được: %s"
 
-#: sequencer.c:801
+#: sequencer.c:806
 #, c-format
 msgid "Invalid key: %s"
 msgstr "Khóa không đúng: %s"
 
-#: sequencer.c:804
+#: sequencer.c:809
 #, c-format
 msgid "Invalid value for %s: %s"
 msgstr "Giá trị không hợp lệ %s: %s"
 
-#: sequencer.c:816
+#: sequencer.c:821
 #, c-format
 msgid "Malformed options sheet: %s"
 msgstr "Bảng tùy chọn dị hình: %s"
 
-#: sequencer.c:837
+#: sequencer.c:842
 msgid "a cherry-pick or revert is already in progress"
 msgstr "có một thao tác “cherry-pick” hoặc “revert” đang được thực hiện"
 
-#: sequencer.c:838
+#: sequencer.c:843
 msgid "try \"git cherry-pick (--continue | --quit | --abort)\""
 msgstr "hãy thử \"git cherry-pick (--continue | --quit | --abort)\""
 
-#: sequencer.c:842
+#: sequencer.c:847
 #, c-format
 msgid "Could not create sequencer directory %s"
 msgstr "Không thể tạo thư mục xếp dãy %s"
 
-#: sequencer.c:858 sequencer.c:943
+#: sequencer.c:863 sequencer.c:948
 #, c-format
 msgid "Error wrapping up %s."
 msgstr "Lỗi bao bọc %s."
 
-#: sequencer.c:877 sequencer.c:1013
+#: sequencer.c:882 sequencer.c:1018
 msgid "no cherry-pick or revert in progress"
 msgstr "không cherry-pick hay revert trong tiến trình"
 
-#: sequencer.c:879
+#: sequencer.c:884
 msgid "cannot resolve HEAD"
 msgstr "không thể phân giải HEAD"
 
-#: sequencer.c:881
+#: sequencer.c:886
 msgid "cannot abort from a branch yet to be born"
 msgstr "không thể hủy bỏ từ một nhánh mà nó còn chưa được tạo ra"
 
-#: sequencer.c:903 builtin/apply.c:4128
+#: sequencer.c:908 builtin/apply.c:4288
 #, c-format
 msgid "cannot open %s: %s"
 msgstr "không thể mở %s: %s"
 
-#: sequencer.c:906
+#: sequencer.c:911
 #, c-format
 msgid "cannot read %s: %s"
 msgstr "không thể đọc %s: %s"
 
-#: sequencer.c:907
+#: sequencer.c:912
 msgid "unexpected end of file"
 msgstr "gặp kết thúc tập tin đột xuất"
 
-#: sequencer.c:913
+#: sequencer.c:918
 #, c-format
 msgid "stored pre-cherry-pick HEAD file '%s' is corrupt"
 msgstr "tập tin HEAD “pre-cherry-pick” đã lưu “%s” bị hỏng"
 
-#: sequencer.c:936
+#: sequencer.c:941
 #, c-format
 msgid "Could not format %s."
 msgstr "Không thể định dạng “%s”."
 
-#: sequencer.c:1081
+#: sequencer.c:1086
 #, c-format
 msgid "%s: can't cherry-pick a %s"
 msgstr "%s: không thể cherry-pick một %s"
 
-#: sequencer.c:1084
+#: sequencer.c:1089
 #, c-format
 msgid "%s: bad revision"
 msgstr "%s: điểm xét duyệt sai"
 
-#: sequencer.c:1118
+#: sequencer.c:1123
 msgid "Can't revert as initial commit"
 msgstr "Không thể revert một lần chuyển giao khởi tạo"
 
-#: sequencer.c:1119
+#: sequencer.c:1124
 msgid "Can't cherry-pick into empty head"
 msgstr "Không thể cherry-pick vào một đầu (head) trống rỗng"
 
 #: sha1_name.c:440
 msgid ""
 "Git normally never creates a ref that ends with 40 hex characters\n"
@@ -1446,44 +1454,44 @@
 msgstr "Không thể gỡ bỏ mục .gitmodules dành cho %s"
 
 #: submodule.c:120
 msgid "staging updated .gitmodules failed"
 msgstr "gặp lỗi khi tổ chức .gitmodules đã cập nhật"
 
-#: submodule.c:1111 builtin/init-db.c:371
+#: submodule.c:1109 builtin/init-db.c:371
 #, c-format
 msgid "Could not create git link %s"
 msgstr "Không thể tạo liên kết git “%s”"
 
-#: submodule.c:1122
+#: submodule.c:1120
 #, c-format
 msgid "Could not set core.worktree in %s"
 msgstr "Không thể đặt “core.worktree” trong “%s”."
 
-#: trailer.c:500 trailer.c:504 trailer.c:508 trailer.c:562 trailer.c:566
-#: trailer.c:570
+#: trailer.c:491 trailer.c:495 trailer.c:499 trailer.c:553 trailer.c:557
+#: trailer.c:561
 #, c-format
 msgid "unknown value '%s' for key '%s'"
 msgstr "không hiểu giá trị “%s” cho khóa “%s”"
 
-#: trailer.c:552 trailer.c:557 builtin/remote.c:290
+#: trailer.c:543 trailer.c:548 builtin/remote.c:290
 #, c-format
 msgid "more than one %s"
 msgstr "nhiều hơn một %s"
 
-#: trailer.c:590
+#: trailer.c:581
 #, c-format
 msgid "empty trailer token in trailer '%.*s'"
 msgstr "thẻ thừa trống rỗng trong phần thừa “%.*s”"
 
-#: trailer.c:710
+#: trailer.c:701
 #, c-format
 msgid "could not read input file '%s'"
 msgstr "không đọc được tập tin đầu vào “%s”"
 
-#: trailer.c:713
+#: trailer.c:704
 msgid "could not read from stdin"
 msgstr "không thể đọc từ đầu vào tiêu chuẩn"
 
 #: unpack-trees.c:202
 msgid "Checking out files"
 msgstr "Đang lấy ra các tập tin"
@@ -1514,32 +1522,32 @@
 msgstr "tên cổng không hợp lệ"
 
 #: urlmatch.c:322
 msgid "invalid '..' path segment"
 msgstr "đoạn đường dẫn “..” không hợp lệ"
 
-#: wrapper.c:509
+#: wrapper.c:523
 #, c-format
 msgid "unable to access '%s': %s"
 msgstr "không thể truy cập “%s”: %s"
 
-#: wrapper.c:530
+#: wrapper.c:544
 #, c-format
 msgid "unable to access '%s'"
 msgstr "không thể truy cập “%s”"
 
-#: wrapper.c:541
+#: wrapper.c:555
 #, c-format
 msgid "unable to look up current user in the passwd file: %s"
 msgstr "không tìm thấy người dùng hiện tại trong tập tin passwd: %s"
 
-#: wrapper.c:542
+#: wrapper.c:556
 msgid "no such user"
 msgstr "không có người dùng như vậy"
 
-#: wrapper.c:550
+#: wrapper.c:564
 msgid "unable to get current working directory"
 msgstr "Không thể lấy thư mục làm việc hiện hành"
 
 #: wt-status.c:150
 msgid "Unmerged paths:"
 msgstr "Những đường dẫn chưa được hòa trộn:"
@@ -1564,17 +1572,17 @@
 "cần được giải quyết)"
 
 #: wt-status.c:187
 msgid "  (use \"git rm <file>...\" to mark resolution)"
 msgstr "  (dùng \"git rm <tập-tin>…\" để đánh dấu là cần giải quyết)"
 
-#: wt-status.c:198
+#: wt-status.c:198 wt-status.c:878
 msgid "Changes to be committed:"
 msgstr "Những thay đổi sẽ được chuyển giao:"
 
-#: wt-status.c:216
+#: wt-status.c:216 wt-status.c:887
 msgid "Changes not staged for commit:"
 msgstr "Các thay đổi chưa được đặt lên bệ phóng để chuyển giao:"
 
 #: wt-status.c:220
 msgid "  (use \"git add <file>...\" to update what will be committed)"
 msgstr "  (dùng \"git add <tập-tin>…\" để cập nhật những gì sẽ chuyển giao)"
@@ -1682,327 +1690,327 @@
 
 #: wt-status.c:391
 #, c-format
 msgid "bug: unhandled diff status %c"
 msgstr "lỗi: không thể tiếp nhận trạng thái lệnh diff %c"
 
-#: wt-status.c:758
+#: wt-status.c:753
 msgid "Submodules changed but not updated:"
 msgstr "Những mô-đun-con đã bị thay đổi nhưng chưa được cập nhật:"
 
-#: wt-status.c:760
+#: wt-status.c:755
 msgid "Submodule changes to be committed:"
 msgstr "Những mô-đun-con thay đổi đã được chuyển giao:"
 
-#: wt-status.c:839
+#: wt-status.c:835
 msgid ""
 "Do not touch the line above.\n"
 "Everything below will be removed."
 msgstr ""
 "Không động đến đường ở trên.\n"
 "Mọi thứ phía dưới sẽ được xóa bỏ."
 
-#: wt-status.c:930
+#: wt-status.c:946
 msgid "You have unmerged paths."
 msgstr "Bạn có những đường dẫn chưa được hòa trộn."
 
-#: wt-status.c:933
+#: wt-status.c:949
 msgid "  (fix conflicts and run \"git commit\")"
 msgstr "  (sửa các xung đột rồi chạy \"git commit\")"
 
-#: wt-status.c:936
+#: wt-status.c:952
 msgid "All conflicts fixed but you are still merging."
 msgstr "Tất cả các xung đột đã được giải quyết nhưng bạn vẫn đang hòa trộn."
 
-#: wt-status.c:939
+#: wt-status.c:955
 msgid "  (use \"git commit\" to conclude merge)"
 msgstr "  (dùng \"git commit\" để hoàn tất việc hòa trộn)"
 
-#: wt-status.c:949
+#: wt-status.c:965
 msgid "You are in the middle of an am session."
 msgstr "Bạn đang ở giữa của một phiên “am”."
 
-#: wt-status.c:952
+#: wt-status.c:968
 msgid "The current patch is empty."
 msgstr "Miếng vá hiện tại bị trống rỗng."
 
-#: wt-status.c:956
+#: wt-status.c:972
 msgid "  (fix conflicts and then run \"git am --continue\")"
 msgstr "  (sửa các xung đột và sau đó chạy lệnh \"git am --continue\")"
 
-#: wt-status.c:958
+#: wt-status.c:974
 msgid "  (use \"git am --skip\" to skip this patch)"
 msgstr "  (dùng \"git am --skip\" để bỏ qua miếng vá này)"
 
-#: wt-status.c:960
+#: wt-status.c:976
 msgid "  (use \"git am --abort\" to restore the original branch)"
 msgstr "  (dùng \"git am --abort\" để phục hồi lại nhánh nguyên thủy)"
 
-#: wt-status.c:1020 wt-status.c:1037
+#: wt-status.c:1036 wt-status.c:1053
 #, c-format
 msgid "You are currently rebasing branch '%s' on '%s'."
 msgstr "Bạn hiện nay đang thực hiện việc “rebase” nhánh “%s” trên “%s”."
 
-#: wt-status.c:1025 wt-status.c:1042
+#: wt-status.c:1041 wt-status.c:1058
 msgid "You are currently rebasing."
 msgstr "Bạn hiện nay đang thực hiện việc “rebase” (“cải tổ”)."
 
-#: wt-status.c:1028
+#: wt-status.c:1044
 msgid "  (fix conflicts and then run \"git rebase --continue\")"
 msgstr ""
 "  (sửa các xung đột và sau đó chạy lệnh “cải tổ” \"git rebase --continue\")"
 
-#: wt-status.c:1030
+#: wt-status.c:1046
 msgid "  (use \"git rebase --skip\" to skip this patch)"
 msgstr "  (dùng lệnh “cải tổ” \"git rebase --skip\" để bỏ qua lần vá này)"
 
-#: wt-status.c:1032
+#: wt-status.c:1048
 msgid "  (use \"git rebase --abort\" to check out the original branch)"
 msgstr ""
 "  (dùng lệnh “cải tổ” \"git rebase --abort\" để check-out nhánh nguyên thủy)"
 
-#: wt-status.c:1045
+#: wt-status.c:1061
 msgid "  (all conflicts fixed: run \"git rebase --continue\")"
 msgstr ""
 "  (khi tất cả các xung đột đã sửa xong: chạy lệnh “cải tổ” \"git rebase --"
 "continue\")"
 
-#: wt-status.c:1049
+#: wt-status.c:1065
 #, c-format
 msgid ""
 "You are currently splitting a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "Bạn hiện nay đang thực hiện việc chia tách một lần chuyển giao trong khi "
 "đang “rebase” nhánh “%s” trên “%s”."
 
-#: wt-status.c:1054
+#: wt-status.c:1070
 msgid "You are currently splitting a commit during a rebase."
 msgstr ""
 "Bạn hiện tại đang cắt đôi một lần chuyển giao trong khi đang thực hiện việc "
 "rebase."
 
-#: wt-status.c:1057
+#: wt-status.c:1073
 msgid "  (Once your working directory is clean, run \"git rebase --continue\")"
 msgstr ""
 "  (Một khi thư mục làm việc của bạn đã gọn gàng, chạy lệnh “cải tổ” \"git "
 "rebase --continue\")"
 
-#: wt-status.c:1061
+#: wt-status.c:1077
 #, c-format
 msgid "You are currently editing a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "Bạn hiện nay đang thực hiện việc sửa chữa một lần chuyển giao trong khi đang "
 "rebase nhánh “%s” trên “%s”."
 
-#: wt-status.c:1066
+#: wt-status.c:1082
 msgid "You are currently editing a commit during a rebase."
 msgstr "Bạn hiện đang sửa một lần chuyển giao trong khi bạn thực hiện rebase."
 
-#: wt-status.c:1069
+#: wt-status.c:1085
 msgid "  (use \"git commit --amend\" to amend the current commit)"
 msgstr "  (dùng \"git commit --amend\" để “tu bổ” lần chuyển giao hiện tại)"
 
-#: wt-status.c:1071
+#: wt-status.c:1087
 msgid ""
 "  (use \"git rebase --continue\" once you are satisfied with your changes)"
 msgstr ""
 "  (chạy lệnh “cải tổ” \"git rebase --continue\" một khi bạn cảm thấy hài "
 "lòng về những thay đổi của mình)"
 
-#: wt-status.c:1081
+#: wt-status.c:1097
 #, c-format
 msgid "You are currently cherry-picking commit %s."
 msgstr "Bạn hiện nay đang thực hiện việc cherry-pick lần chuyển giao %s."
 
-#: wt-status.c:1086
+#: wt-status.c:1102
 msgid "  (fix conflicts and run \"git cherry-pick --continue\")"
 msgstr ""
 "  (sửa các xung đột và sau đó chạy lệnh \"git cherry-pick --continue\")"
 
-#: wt-status.c:1089
+#: wt-status.c:1105
 msgid "  (all conflicts fixed: run \"git cherry-pick --continue\")"
 msgstr ""
 "  (khi tất cả các xung đột đã sửa xong: chạy lệnh \"git cherry-pick --"
 "continue\")"
 
-#: wt-status.c:1091
+#: wt-status.c:1107
 msgid "  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)"
 msgstr "  (dùng \"git cherry-pick --abort\" để hủy bỏ thao tác cherry-pick)"
 
-#: wt-status.c:1100
+#: wt-status.c:1116
 #, c-format
 msgid "You are currently reverting commit %s."
 msgstr "Bạn hiện nay đang thực hiện thao tác revert lần chuyển giao “%s”."
 
-#: wt-status.c:1105
+#: wt-status.c:1121
 msgid "  (fix conflicts and run \"git revert --continue\")"
 msgstr "  (sửa các xung đột và sau đó chạy lệnh \"git revert --continue\")"
 
-#: wt-status.c:1108
+#: wt-status.c:1124
 msgid "  (all conflicts fixed: run \"git revert --continue\")"
 msgstr ""
 "  (khi tất cả các xung đột đã sửa xong: chạy lệnh \"git revert --continue\")"
 
-#: wt-status.c:1110
+#: wt-status.c:1126
 msgid "  (use \"git revert --abort\" to cancel the revert operation)"
 msgstr "  (dùng \"git revert --abort\" để hủy bỏ thao tác revert)"
 
-#: wt-status.c:1121
+#: wt-status.c:1137
 #, c-format
 msgid "You are currently bisecting, started from branch '%s'."
 msgstr ""
 "Bạn hiện nay đang thực hiện thao tác di chuyển nửa bước (bisect), bắt đầu từ "
 "nhánh “%s”."
 
-#: wt-status.c:1125
+#: wt-status.c:1141
 msgid "You are currently bisecting."
 msgstr "Bạn hiện tại đang thực hiện việc bisect (di chuyển nửa bước)."
 
-#: wt-status.c:1128
+#: wt-status.c:1144
 msgid "  (use \"git bisect reset\" to get back to the original branch)"
 msgstr "  (dùng \"git bisect reset\" để quay trở lại nhánh nguyên thủy)"
 
-#: wt-status.c:1303
+#: wt-status.c:1321
 msgid "On branch "
 msgstr "Trên nhánh "
 
-#: wt-status.c:1310
+#: wt-status.c:1328
 msgid "rebase in progress; onto "
 msgstr "rebase đang được thực hiện: lên trên "
 
-#: wt-status.c:1317
+#: wt-status.c:1333
 msgid "HEAD detached at "
 msgstr "HEAD được tách rời tại "
 
-#: wt-status.c:1319
+#: wt-status.c:1335
 msgid "HEAD detached from "
 msgstr "HEAD được tách rời từ "
 
-#: wt-status.c:1322
+#: wt-status.c:1338
 msgid "Not currently on any branch."
 msgstr "Hiện tại chẳng ở nhánh nào cả."
 
-#: wt-status.c:1339
+#: wt-status.c:1355
 msgid "Initial commit"
 msgstr "Lần chuyển giao khởi tạo"
 
-#: wt-status.c:1353
+#: wt-status.c:1369
 msgid "Untracked files"
 msgstr "Những tập tin chưa được theo dõi"
 
-#: wt-status.c:1355
+#: wt-status.c:1371
 msgid "Ignored files"
 msgstr "Những tập tin bị lờ đi"
 
-#: wt-status.c:1359
+#: wt-status.c:1375
 #, c-format
 msgid ""
 "It took %.2f seconds to enumerate untracked files. 'status -uno'\n"
 "may speed it up, but you have to be careful not to forget to add\n"
 "new files yourself (see 'git help status')."
 msgstr ""
 "Cần %.2f giây để liệt kê tất cả các tập tin chưa được theo dõi. “status -"
 "uno”\n"
 "có lẽ làm nó nhanh hơn, nhưng bạn phải cẩn thận đừng quên mình phải\n"
 "tự thêm các tập tin mới (xem “git help status”.."
 
-#: wt-status.c:1365
+#: wt-status.c:1381
 #, c-format
 msgid "Untracked files not listed%s"
 msgstr "Những tập tin chưa được theo dõi không được liệt kê ra %s"
 
-#: wt-status.c:1367
+#: wt-status.c:1383
 msgid " (use -u option to show untracked files)"
 msgstr " (dùng tùy chọn -u để hiển thị các tập tin chưa được theo dõi)"
 
-#: wt-status.c:1373
+#: wt-status.c:1389
 msgid "No changes"
 msgstr "Không có thay đổi nào"
 
-#: wt-status.c:1378
+#: wt-status.c:1394
 #, c-format
 msgid "no changes added to commit (use \"git add\" and/or \"git commit -a\")\n"
 msgstr ""
 "không có thay đổi nào được thêm vào để chuyển giao (dùng \"git add\" và/hoặc "
 "\"git commit -a\")\n"
 
-#: wt-status.c:1381
+#: wt-status.c:1397
 #, c-format
 msgid "no changes added to commit\n"
 msgstr "không có thay đổi nào được thêm vào để chuyển giao\n"
 
-#: wt-status.c:1384
+#: wt-status.c:1400
 #, c-format
 msgid ""
 "nothing added to commit but untracked files present (use \"git add\" to "
 "track)\n"
 msgstr ""
 "không có gì được thêm vào lần chuyển giao nhưng có những tập tin chưa được "
 "theo dõi hiện diện (dùng \"git add\" để đưa vào theo dõi)\n"
 
-#: wt-status.c:1387
+#: wt-status.c:1403
 #, c-format
 msgid "nothing added to commit but untracked files present\n"
 msgstr ""
 "không có gì được thêm vào lần chuyển giao nhưng có những tập tin chưa được "
 "theo dõi hiện diện\n"
 
-#: wt-status.c:1390
+#: wt-status.c:1406
 #, c-format
 msgid "nothing to commit (create/copy files and use \"git add\" to track)\n"
 msgstr ""
 "không có gì để chuyển giao (tạo/sao-chép các tập tin và dùng \"git add\" để "
 "đưa vào theo dõi)\n"
 
-#: wt-status.c:1393 wt-status.c:1398
+#: wt-status.c:1409 wt-status.c:1414
 #, c-format
 msgid "nothing to commit\n"
 msgstr "không có gì để chuyển giao\n"
 
-#: wt-status.c:1396
+#: wt-status.c:1412
 #, c-format
 msgid "nothing to commit (use -u to show untracked files)\n"
 msgstr ""
 "không có gì để chuyển giao (dùng -u xem các tập tin chưa được theo dõi)\n"
 
-#: wt-status.c:1400
+#: wt-status.c:1416
 #, c-format
 msgid "nothing to commit, working directory clean\n"
 msgstr "không có gì để chuyển giao, thư mục làm việc sạch sẽ\n"
 
-#: wt-status.c:1509
+#: wt-status.c:1525
 msgid "HEAD (no branch)"
 msgstr "HEAD (không nhánh)"
 
-#: wt-status.c:1515
+#: wt-status.c:1531
 msgid "Initial commit on "
 msgstr "Lần chuyển giao khởi tạo trên "
 
-#: wt-status.c:1547
+#: wt-status.c:1563
 msgid "gone"
 msgstr "đã ra đi"
 
-#: wt-status.c:1549 wt-status.c:1557
+#: wt-status.c:1565 wt-status.c:1573
 msgid "behind "
 msgstr "đằng sau "
 
 #: compat/precompose_utf8.c:55 builtin/clone.c:360
 #, c-format
 msgid "failed to unlink '%s'"
 msgstr "gặp lỗi khi bỏ liên kết (unlink) “%s”"
 
 #: builtin/add.c:22
-msgid "git add [options] [--] <pathspec>..."
-msgstr "git add [các-tùy-chọn] [--]  <pathspec>…"
+msgid "git add [<options>] [--] <pathspec>..."
+msgstr "git add [<các-tùy-chọn>] [--]  <pathspec>…"
 
 #: builtin/add.c:65
 #, c-format
 msgid "unexpected diff status %c"
 msgstr "trạng thái lệnh diff không như mong đợi %c"
 
-#: builtin/add.c:70 builtin/commit.c:275
+#: builtin/add.c:70 builtin/commit.c:277
 msgid "updating files failed"
 msgstr "Cập nhật tập tin gặp lỗi"
 
 #: builtin/add.c:80
 #, c-format
 msgid "remove '%s'\n"
@@ -2043,20 +2051,20 @@
 #: builtin/add.c:231
 msgid "The following paths are ignored by one of your .gitignore files:\n"
 msgstr ""
 "Các đường dẫn theo sau đây sẽ bị lờ đi bởi một trong các tập tin .gitignore "
 "của bạn:\n"
 
-#: builtin/add.c:248 builtin/clean.c:875 builtin/fetch.c:108 builtin/mv.c:110
-#: builtin/prune-packed.c:55 builtin/push.c:499 builtin/remote.c:1372
+#: builtin/add.c:248 builtin/clean.c:876 builtin/fetch.c:107 builtin/mv.c:110
+#: builtin/prune-packed.c:55 builtin/push.c:508 builtin/remote.c:1372
 #: builtin/rm.c:269
 msgid "dry run"
 msgstr "chạy thử"
 
-#: builtin/add.c:249 builtin/apply.c:4415 builtin/check-ignore.c:19
-#: builtin/commit.c:1326 builtin/count-objects.c:63 builtin/fsck.c:608
+#: builtin/add.c:249 builtin/apply.c:4577 builtin/check-ignore.c:19
+#: builtin/commit.c:1322 builtin/count-objects.c:63 builtin/fsck.c:608
 #: builtin/log.c:1617 builtin/mv.c:109 builtin/read-tree.c:114
 msgid "be verbose"
 msgstr "chi tiết"
 
 #: builtin/add.c:251
 msgid "interactive picking"
@@ -2130,489 +2138,508 @@
 
 #: builtin/add.c:358
 #, c-format
 msgid "Maybe you wanted to say 'git add .'?\n"
 msgstr "Có lẽ ý bạn là “git add .” phải không?\n"
 
-#: builtin/add.c:363 builtin/check-ignore.c:172 builtin/clean.c:919
-#: builtin/commit.c:333 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:299
+#: builtin/add.c:363 builtin/check-ignore.c:172 builtin/clean.c:920
+#: builtin/commit.c:335 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:299
 msgid "index file corrupt"
 msgstr "tập tin ghi bảng mục lục bị hỏng"
 
-#: builtin/add.c:446 builtin/apply.c:4510 builtin/mv.c:279 builtin/rm.c:431
+#: builtin/add.c:446 builtin/apply.c:4675 builtin/mv.c:279 builtin/rm.c:431
 msgid "Unable to write new index file"
 msgstr "Không thể ghi tập tin lưu bảng mục lục mới"
 
-#: builtin/apply.c:58
-msgid "git apply [options] [<patch>...]"
-msgstr "git apply [các-tùy-chọn] [<miếng-vá>…]"
+#: builtin/apply.c:59
+msgid "git apply [<options>] [<patch>...]"
+msgstr "git apply [<các-tùy-chọn>] [<miếng-vá>…]"
 
-#: builtin/apply.c:111
+#: builtin/apply.c:112
 #, c-format
 msgid "unrecognized whitespace option '%s'"
 msgstr "không nhận ra tùy chọn về khoảng trắng “%s”"
 
-#: builtin/apply.c:126
+#: builtin/apply.c:127
 #, c-format
 msgid "unrecognized whitespace ignore option '%s'"
 msgstr "không nhận ra tùy chọn bỏ qua khoảng trắng “%s”"
 
-#: builtin/apply.c:826
+#: builtin/apply.c:822
 #, c-format
 msgid "Cannot prepare timestamp regexp %s"
 msgstr ""
 "Không thể chuẩn bị biểu thức chính qui dấu vết thời gian (timestamp regexp) "
 "%s"
 
-#: builtin/apply.c:835
+#: builtin/apply.c:831
 #, c-format
 msgid "regexec returned %d for input: %s"
 msgstr "thi hành biểu thức chính quy trả về %d cho đầu vào: %s"
 
-#: builtin/apply.c:916
+#: builtin/apply.c:912
 #, c-format
 msgid "unable to find filename in patch at line %d"
 msgstr "không thể tìm thấy tên tập tin trong miếng vá tại dòng %d"
 
-#: builtin/apply.c:948
+#: builtin/apply.c:944
 #, c-format
 msgid "git apply: bad git-diff - expected /dev/null, got %s on line %d"
 msgstr ""
 "git apply: git-diff sai - cần /dev/null, nhưng lại nhận được %s trên dòng %d"
 
-#: builtin/apply.c:952
+#: builtin/apply.c:948
 #, c-format
 msgid "git apply: bad git-diff - inconsistent new filename on line %d"
 msgstr "git apply: git-diff sai - tên tập tin mới không nhất quán trên dòng %d"
 
-#: builtin/apply.c:953
+#: builtin/apply.c:949
 #, c-format
 msgid "git apply: bad git-diff - inconsistent old filename on line %d"
 msgstr "git apply: git-diff sai - tên tập tin cũ không nhất quán trên dòng %d"
 
-#: builtin/apply.c:960
+#: builtin/apply.c:956
 #, c-format
 msgid "git apply: bad git-diff - expected /dev/null on line %d"
 msgstr "git apply: git-diff sai - cần “/dev/null” trên dòng %d"
 
-#: builtin/apply.c:1423
+#: builtin/apply.c:1419
 #, c-format
 msgid "recount: unexpected line: %.*s"
 msgstr "chi tiết: dòng không cần: %.*s"
 
-#: builtin/apply.c:1480
+#: builtin/apply.c:1476
 #, c-format
 msgid "patch fragment without header at line %d: %.*s"
 msgstr "miếng vá phân mảnh mà không có phần đầu tại dòng %d: %.*s"
 
-#: builtin/apply.c:1497
+#: builtin/apply.c:1493
 #, c-format
 msgid ""
 "git diff header lacks filename information when removing %d leading pathname "
 "component (line %d)"
 msgid_plural ""
 "git diff header lacks filename information when removing %d leading pathname "
 "components (line %d)"
 msgstr[0] ""
 "phần đầu diff cho git  thiếu thông tin tên tập tin khi gỡ bỏ đi %d trong "
 "thành phần dẫn đầu tên của đường dẫn (dòng %d)"
 
-#: builtin/apply.c:1657
+#: builtin/apply.c:1656
 msgid "new file depends on old contents"
 msgstr "tập tin mới phụ thuộc vào nội dung cũ"
 
-#: builtin/apply.c:1659
+#: builtin/apply.c:1658
 msgid "deleted file still has contents"
 msgstr "tập tin đã xóa vẫn còn nội dung"
 
-#: builtin/apply.c:1685
+#: builtin/apply.c:1684
 #, c-format
 msgid "corrupt patch at line %d"
 msgstr "miếng vá hỏng tại dòng %d"
 
-#: builtin/apply.c:1721
+#: builtin/apply.c:1720
 #, c-format
 msgid "new file %s depends on old contents"
 msgstr "tập tin mới %s phụ thuộc vào nội dung cũ"
 
-#: builtin/apply.c:1723
+#: builtin/apply.c:1722
 #, c-format
 msgid "deleted file %s still has contents"
 msgstr "tập tin đã xóa %s vẫn còn nội dung"
 
-#: builtin/apply.c:1726
+#: builtin/apply.c:1725
 #, c-format
 msgid "** warning: file %s becomes empty but is not deleted"
 msgstr "** cảnh báo: tập tin %s trở nên trống rỗng nhưng không bị xóa"
 
-#: builtin/apply.c:1872
+#: builtin/apply.c:1871
 #, c-format
 msgid "corrupt binary patch at line %d: %.*s"
 msgstr "miếng vá định dạng nhị phân sai hỏng tại dòng %d: %.*s"
 
-#: builtin/apply.c:1901
+#: builtin/apply.c:1900
 #, c-format
 msgid "unrecognized binary patch at line %d"
 msgstr "miếng vá định dạng nhị phân không được nhận ra tại dòng %d"
 
-#: builtin/apply.c:2052
+#: builtin/apply.c:2051
 #, c-format
 msgid "patch with only garbage at line %d"
 msgstr "vá chỉ với “rác” tại dòng %d"
 
-#: builtin/apply.c:2142
+#: builtin/apply.c:2141
 #, c-format
 msgid "unable to read symlink %s"
 msgstr "không thể đọc liên kết mềm %s"
 
-#: builtin/apply.c:2146
+#: builtin/apply.c:2145
 #, c-format
 msgid "unable to open or read %s"
 msgstr "không thể mở hay đọc %s"
 
-#: builtin/apply.c:2754
+#: builtin/apply.c:2778
 #, c-format
 msgid "invalid start of line: '%c'"
 msgstr "sai khởi đầu dòng: “%c”"
 
-#: builtin/apply.c:2872
+#: builtin/apply.c:2897
 #, c-format
 msgid "Hunk #%d succeeded at %d (offset %d line)."
 msgid_plural "Hunk #%d succeeded at %d (offset %d lines)."
 msgstr[0] "Khối dữ liệu #%d thành công tại %d (offset %d dòng)."
 
-#: builtin/apply.c:2884
+#: builtin/apply.c:2909
 #, c-format
 msgid "Context reduced to (%ld/%ld) to apply fragment at %d"
 msgstr "Nội dung bị giảm xuống còn (%ld/%ld) để áp dụng mảnh dữ liệu tại %d"
 
-#: builtin/apply.c:2890
+#: builtin/apply.c:2915
 #, c-format
 msgid ""
 "while searching for:\n"
 "%.*s"
 msgstr ""
 "trong khi đang tìm kiếm cho:\n"
 "%.*s"
 
-#: builtin/apply.c:2909
+#: builtin/apply.c:2935
 #, c-format
 msgid "missing binary patch data for '%s'"
 msgstr "thiếu dữ liệu của miếng vá định dạng nhị phân cho “%s”"
 
-#: builtin/apply.c:3010
+#: builtin/apply.c:3036
 #, c-format
 msgid "binary patch does not apply to '%s'"
 msgstr "miếng vá định dạng nhị phân không được áp dụng cho “%s”"
 
-#: builtin/apply.c:3016
+#: builtin/apply.c:3042
 #, c-format
 msgid "binary patch to '%s' creates incorrect result (expecting %s, got %s)"
 msgstr ""
 "vá nhị phân cho “%s” tạo ra kết quả không chính xác (mong chờ %s, lại nhận "
 "%s)"
 
-#: builtin/apply.c:3037
+#: builtin/apply.c:3063
 #, c-format
 msgid "patch failed: %s:%ld"
 msgstr "gặp lỗi khi vá: %s:%ld"
 
-#: builtin/apply.c:3161
+#: builtin/apply.c:3187
 #, c-format
 msgid "cannot checkout %s"
 msgstr "không thể lấy ra %s"
 
-#: builtin/apply.c:3206 builtin/apply.c:3215 builtin/apply.c:3260
+#: builtin/apply.c:3232 builtin/apply.c:3243 builtin/apply.c:3288
 #, c-format
 msgid "read of %s failed"
 msgstr "đọc %s gặp lỗi"
 
-#: builtin/apply.c:3240 builtin/apply.c:3462
+#: builtin/apply.c:3240
+#, c-format
+msgid "reading from '%s' beyond a symbolic link"
+msgstr "đọc từ “%s” vượt ra ngoài liên kết mềm"
+
+#: builtin/apply.c:3268 builtin/apply.c:3490
 #, c-format
 msgid "path %s has been renamed/deleted"
 msgstr "đường dẫn %s đã bị xóa hoặc đổi tên"
 
-#: builtin/apply.c:3321 builtin/apply.c:3476
+#: builtin/apply.c:3349 builtin/apply.c:3504
 #, c-format
 msgid "%s: does not exist in index"
 msgstr "%s: không tồn tại trong bảng mục lục"
 
-#: builtin/apply.c:3325 builtin/apply.c:3468 builtin/apply.c:3490
+#: builtin/apply.c:3353 builtin/apply.c:3496 builtin/apply.c:3518
 #, c-format
 msgid "%s: %s"
 msgstr "%s: %s"
 
-#: builtin/apply.c:3330 builtin/apply.c:3484
+#: builtin/apply.c:3358 builtin/apply.c:3512
 #, c-format
 msgid "%s: does not match index"
 msgstr "%s: không khớp trong mục lục"
 
-#: builtin/apply.c:3432
+#: builtin/apply.c:3460
 msgid "removal patch leaves file contents"
 msgstr "loại bỏ miếng vá để lại nội dung tập tin"
 
-#: builtin/apply.c:3501
+#: builtin/apply.c:3529
 #, c-format
 msgid "%s: wrong type"
 msgstr "%s: sai kiểu"
 
-#: builtin/apply.c:3503
+#: builtin/apply.c:3531
 #, c-format
 msgid "%s has type %o, expected %o"
 msgstr "%s có kiểu %o, cần %o"
 
-#: builtin/apply.c:3604
+#: builtin/apply.c:3690 builtin/apply.c:3692
+#, c-format
+msgid "invalid path '%s'"
+msgstr "đường dẫn không hợp lệ “%s”"
+
+#: builtin/apply.c:3747
 #, c-format
 msgid "%s: already exists in index"
 msgstr "%s: đã có từ trước trong bảng mục lục"
 
-#: builtin/apply.c:3607
+#: builtin/apply.c:3750
 #, c-format
 msgid "%s: already exists in working directory"
 msgstr "%s: đã sẵn có trong thư mục đang làm việc"
 
-#: builtin/apply.c:3627
+#: builtin/apply.c:3770
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o)"
 msgstr "chế độ mới (%o) của %s không khớp với chế độ cũ (%o)"
 
-#: builtin/apply.c:3632
+#: builtin/apply.c:3775
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o) of %s"
 msgstr "chế độ mới (%o) của %s không khớp với chế độ cũ (%o) của %s"
 
-#: builtin/apply.c:3640
+#: builtin/apply.c:3795
+#, c-format
+msgid "affected file '%s' is beyond a symbolic link"
+msgstr "tập tin chịu tác động “%s” vượt ra ngoài liên kết mềm"
+
+#: builtin/apply.c:3799
 #, c-format
 msgid "%s: patch does not apply"
 msgstr "%s: miếng vá không được áp dụng"
 
-#: builtin/apply.c:3653
+#: builtin/apply.c:3813
 #, c-format
 msgid "Checking patch %s..."
 msgstr "Đang kiểm tra miếng vá %s…"
 
-#: builtin/apply.c:3746 builtin/checkout.c:231 builtin/reset.c:135
+#: builtin/apply.c:3906 builtin/checkout.c:231 builtin/reset.c:135
 #, c-format
 msgid "make_cache_entry failed for path '%s'"
 msgstr "make_cache_entry gặp lỗi đối với đường dẫn “%s”"
 
-#: builtin/apply.c:3889
+#: builtin/apply.c:4049
 #, c-format
 msgid "unable to remove %s from index"
 msgstr "không thể gỡ bỏ %s từ mục lục"
 
-#: builtin/apply.c:3918
+#: builtin/apply.c:4078
 #, c-format
 msgid "corrupt patch for submodule %s"
 msgstr "miếng vá sai hỏng cho mô-đun-con %s"
 
-#: builtin/apply.c:3922
+#: builtin/apply.c:4082
 #, c-format
 msgid "unable to stat newly created file '%s'"
 msgstr "không thể lấy thống kề về tập tin %s mới hơn đã được tạo"
 
-#: builtin/apply.c:3927
+#: builtin/apply.c:4087
 #, c-format
 msgid "unable to create backing store for newly created file %s"
 msgstr "không thể tạo “kho lưu đằng sau” cho tập tin được tạo mới hơn %s"
 
-#: builtin/apply.c:3930 builtin/apply.c:4038
+#: builtin/apply.c:4090 builtin/apply.c:4198
 #, c-format
 msgid "unable to add cache entry for %s"
 msgstr "không thể thêm mục nhớ đệm cho %s"
 
-#: builtin/apply.c:3963
+#: builtin/apply.c:4123
 #, c-format
 msgid "closing file '%s'"
 msgstr "đang đóng tập tin “%s”"
 
-#: builtin/apply.c:4012
+#: builtin/apply.c:4172
 #, c-format
 msgid "unable to write file '%s' mode %o"
 msgstr "không thể ghi vào tập tin “%s” chế độ %o"
 
-#: builtin/apply.c:4099
+#: builtin/apply.c:4259
 #, c-format
 msgid "Applied patch %s cleanly."
 msgstr "Đã áp dụng miếng vá %s một cách sạch sẽ."
 
-#: builtin/apply.c:4107
+#: builtin/apply.c:4267
 msgid "internal error"
 msgstr "lỗi nội bộ"
 
-#: builtin/apply.c:4110
+#: builtin/apply.c:4270
 #, c-format
 msgid "Applying patch %%s with %d reject..."
 msgid_plural "Applying patch %%s with %d rejects..."
 msgstr[0] "Đang áp dụng miếng vá %%s với %d lần từ chối…"
 
-#: builtin/apply.c:4120
+#: builtin/apply.c:4280
 #, c-format
 msgid "truncating .rej filename to %.*s.rej"
 msgstr "đang cắt ngắn tên tập tin .rej thành %.*s.rej"
 
-#: builtin/apply.c:4141
+#: builtin/apply.c:4301
 #, c-format
 msgid "Hunk #%d applied cleanly."
 msgstr "Khối nhớ #%d được áp dụng gọn gàng."
 
-#: builtin/apply.c:4144
+#: builtin/apply.c:4304
 #, c-format
 msgid "Rejected hunk #%d."
 msgstr "đoạn dữ liệu #%d bị từ chối."
 
-#: builtin/apply.c:4234
+#: builtin/apply.c:4394
 msgid "unrecognized input"
 msgstr "không thừa nhận đầu vào"
 
-#: builtin/apply.c:4245
+#: builtin/apply.c:4405
 msgid "unable to read index file"
 msgstr "không thể đọc tập tin lưu bảng mục lục"
 
-#: builtin/apply.c:4362 builtin/apply.c:4365 builtin/clone.c:92
-#: builtin/fetch.c:93
+#: builtin/apply.c:4522 builtin/apply.c:4525 builtin/clone.c:92
+#: builtin/fetch.c:92
 msgid "path"
 msgstr "đường-dẫn"
 
-#: builtin/apply.c:4363
+#: builtin/apply.c:4523
 msgid "don't apply changes matching the given path"
 msgstr "không áp dụng các thay đổi khớp với đường dẫn đã cho"
 
-#: builtin/apply.c:4366
+#: builtin/apply.c:4526
 msgid "apply changes matching the given path"
 msgstr "áp dụng các thay đổi khớp với đường dẫn đã cho"
 
-#: builtin/apply.c:4368
+#: builtin/apply.c:4528
 msgid "num"
 msgstr "số"
 
-#: builtin/apply.c:4369
+#: builtin/apply.c:4529
 msgid "remove <num> leading slashes from traditional diff paths"
 msgstr "gỡ bỏ <số> dấu gạch chéo dẫn đầu từ đường dẫn diff cổ điển"
 
-#: builtin/apply.c:4372
+#: builtin/apply.c:4532
 msgid "ignore additions made by the patch"
 msgstr "lờ đi phần bổ xung được tạo ra bởi miếng vá"
 
-#: builtin/apply.c:4374
+#: builtin/apply.c:4534
 msgid "instead of applying the patch, output diffstat for the input"
 msgstr ""
 "thay vì áp dụng một miếng vá, kết xuất kết quả từ lệnh diffstat cho đầu ra"
 
-#: builtin/apply.c:4378
+#: builtin/apply.c:4538
 msgid "show number of added and deleted lines in decimal notation"
 msgstr ""
 "hiển thị số lượng các dòng được thêm vào và xóa đi theo ký hiệu thập phân"
 
-#: builtin/apply.c:4380
+#: builtin/apply.c:4540
 msgid "instead of applying the patch, output a summary for the input"
 msgstr "thay vì áp dụng một miếng vá, kết xuất kết quả cho đầu vào"
 
-#: builtin/apply.c:4382
+#: builtin/apply.c:4542
 msgid "instead of applying the patch, see if the patch is applicable"
 msgstr "thay vì áp dụng miếng vá, hãy xem xem miếng vá có thích hợp không"
 
-#: builtin/apply.c:4384
+#: builtin/apply.c:4544
 msgid "make sure the patch is applicable to the current index"
 msgstr "hãy chắc chắn là miếng vá thích hợp với bảng mục lục hiện hành"
 
-#: builtin/apply.c:4386
+#: builtin/apply.c:4546
 msgid "apply a patch without touching the working tree"
 msgstr "áp dụng một miếng vá mà không động chạm đến cây làm việc"
 
-#: builtin/apply.c:4388
+#: builtin/apply.c:4548
+msgid "accept a patch that touches outside the working area"
+msgstr "chấp nhận một miếng vá mà không động chạm đến cây làm việc"
+
+#: builtin/apply.c:4550
 msgid "also apply the patch (use with --stat/--summary/--check)"
 msgstr ""
 "đồng thời áp dụng miếng vá (dùng với tùy chọn --stat/--summary/--check)"
 
-#: builtin/apply.c:4390
+#: builtin/apply.c:4552
 msgid "attempt three-way merge if a patch does not apply"
 msgstr "thử hòa trộn kiểu three-way nếu việc vá không thể thực hiện được"
 
-#: builtin/apply.c:4392
+#: builtin/apply.c:4554
 msgid "build a temporary index based on embedded index information"
 msgstr ""
 "xây dựng bảng mục lục tạm thời trên cơ sở thông tin bảng mục lục được nhúng"
 
-#: builtin/apply.c:4394 builtin/checkout-index.c:198 builtin/ls-files.c:455
+#: builtin/apply.c:4556 builtin/checkout-index.c:198 builtin/ls-files.c:412
 msgid "paths are separated with NUL character"
 msgstr "các đường dẫn bị ngăn cách bởi ký tự NULL"
 
-#: builtin/apply.c:4397
+#: builtin/apply.c:4559
 msgid "ensure at least <n> lines of context match"
 msgstr "đảm bảo rằng có ít nhất <n> dòng nội dung khớp"
 
-#: builtin/apply.c:4398
+#: builtin/apply.c:4560
 msgid "action"
 msgstr "hành động"
 
-#: builtin/apply.c:4399
+#: builtin/apply.c:4561
 msgid "detect new or modified lines that have whitespace errors"
 msgstr "tìm thấy một dòng mới hoặc bị sửa đổi mà nó có lỗi do khoảng trắng"
 
-#: builtin/apply.c:4402 builtin/apply.c:4405
+#: builtin/apply.c:4564 builtin/apply.c:4567
 msgid "ignore changes in whitespace when finding context"
 msgstr "lờ đi sự thay đổi do khoảng trắng gây ra khi quét nội dung"
 
-#: builtin/apply.c:4408
+#: builtin/apply.c:4570
 msgid "apply the patch in reverse"
 msgstr "áp dụng miếng vá theo chiều ngược"
 
-#: builtin/apply.c:4410
+#: builtin/apply.c:4572
 msgid "don't expect at least one line of context"
 msgstr "đừng hy vọng có ít nhất một dòng nội dung"
 
-#: builtin/apply.c:4412
+#: builtin/apply.c:4574
 msgid "leave the rejected hunks in corresponding *.rej files"
 msgstr "để lại khối dữ liệu bị từ chối trong các tập tin *.rej tương ứng"
 
-#: builtin/apply.c:4414
+#: builtin/apply.c:4576
 msgid "allow overlapping hunks"
 msgstr "cho phép chồng khối nhớ"
 
-#: builtin/apply.c:4417
+#: builtin/apply.c:4579
 msgid "tolerate incorrectly detected missing new-line at the end of file"
 msgstr ""
 "đã dò tìm thấy dung sai không chính xác thiếu dòng mới tại cuối tập tin"
 
-#: builtin/apply.c:4420
+#: builtin/apply.c:4582
 msgid "do not trust the line counts in the hunk headers"
 msgstr "không tin số lượng dòng trong phần đầu khối dữ liệu"
 
-#: builtin/apply.c:4422
+#: builtin/apply.c:4584
 msgid "root"
 msgstr "root"
 
-#: builtin/apply.c:4423
+#: builtin/apply.c:4585
 msgid "prepend <root> to all filenames"
 msgstr "treo thêm <root> vào tất cả các tên tập tin"
 
-#: builtin/apply.c:4445
+#: builtin/apply.c:4607
 msgid "--3way outside a repository"
 msgstr "--3way ở ngoài một kho chứa"
 
-#: builtin/apply.c:4453
+#: builtin/apply.c:4615
 msgid "--index outside a repository"
 msgstr "--index ở ngoài một kho chứa"
 
-#: builtin/apply.c:4456
+#: builtin/apply.c:4618
 msgid "--cached outside a repository"
 msgstr "--cached ở ngoài một kho chứa"
 
-#: builtin/apply.c:4472
+#: builtin/apply.c:4637
 #, c-format
 msgid "can't open patch '%s'"
 msgstr "không thể mở miếng vá “%s”"
 
-#: builtin/apply.c:4486
+#: builtin/apply.c:4651
 #, c-format
 msgid "squelched %d whitespace error"
 msgid_plural "squelched %d whitespace errors"
 msgstr[0] "đã chấm dứt %d lỗi khoảng trắng"
 
-#: builtin/apply.c:4492 builtin/apply.c:4502
+#: builtin/apply.c:4657 builtin/apply.c:4667
 #, c-format
 msgid "%d line adds whitespace errors."
 msgid_plural "%d lines add whitespace errors."
 msgstr[0] "%d dòng thêm khoảng trắng lỗi."
 
 #: builtin/archive.c:17
@@ -2661,138 +2688,138 @@
 #: builtin/bisect--helper.c:19
 msgid "update BISECT_HEAD instead of checking out the current commit"
 msgstr ""
 "cập nhật BISECT_HEAD thay vì lấy ra (checking out) lần chuyển giao hiện hành"
 
 #: builtin/blame.c:30
-msgid "git blame [options] [rev-opts] [rev] [--] file"
-msgstr "git blame [các-tùy-chọn] [rev-opts] [rev] [--] tập-tin"
+msgid "git blame [<options>] [<rev-opts>] [<rev>] [--] file"
+msgstr "git blame [<các-tùy-chọn>] [rev-opts] [rev] [--] tập-tin"
 
 #: builtin/blame.c:35
-msgid "[rev-opts] are documented in git-rev-list(1)"
-msgstr "[rev-opts] được mô tả trong git-rev-list(1)"
+msgid "<rev-opts> are documented in git-rev-list(1)"
+msgstr "<rev-opts> được mô tả trong tài liệu git-rev-list(1)"
 
-#: builtin/blame.c:2501
+#: builtin/blame.c:2500
 msgid "Show blame entries as we find them, incrementally"
 msgstr "Hiển thị các mục “blame” như là chúng ta thấy chúng, tăng dần"
 
-#: builtin/blame.c:2502
+#: builtin/blame.c:2501
 msgid "Show blank SHA-1 for boundary commits (Default: off)"
 msgstr ""
 "Hiển thị SHA-1 trắng cho những lần chuyển giao biên giới (Mặc định: off)"
 
-#: builtin/blame.c:2503
+#: builtin/blame.c:2502
 msgid "Do not treat root commits as boundaries (Default: off)"
 msgstr "Không coi các lần chuyển giao gốc là giới hạn (Mặc định: off)"
 
-#: builtin/blame.c:2504
+#: builtin/blame.c:2503
 msgid "Show work cost statistics"
 msgstr "Hiển thị thống kê công sức làm việc"
 
-#: builtin/blame.c:2505
+#: builtin/blame.c:2504
 msgid "Show output score for blame entries"
 msgstr "Hiển thị kết xuất điểm số có các mục tin “blame”"
 
-#: builtin/blame.c:2506
+#: builtin/blame.c:2505
 msgid "Show original filename (Default: auto)"
 msgstr "Hiển thị tên tập tin gốc (Mặc định: auto)"
 
-#: builtin/blame.c:2507
+#: builtin/blame.c:2506
 msgid "Show original linenumber (Default: off)"
 msgstr "Hiển thị số dòng gốc (Mặc định: off)"
 
-#: builtin/blame.c:2508
+#: builtin/blame.c:2507
 msgid "Show in a format designed for machine consumption"
 msgstr "Hiển thị ở định dạng đã thiết kế cho sự tiêu dùng bằng máy"
 
-#: builtin/blame.c:2509
+#: builtin/blame.c:2508
 msgid "Show porcelain format with per-line commit information"
 msgstr "Hiển thị định dạng “porcelain” với thông tin chuyển giao mỗi dòng"
 
-#: builtin/blame.c:2510
+#: builtin/blame.c:2509
 msgid "Use the same output mode as git-annotate (Default: off)"
-msgstr "Dùng cùng chế độ xuất ra vóigit-annotate (Mặc định: off)"
+msgstr "Dùng cùng chế độ xuất ra với git-annotate (Mặc định: off)"
 
-#: builtin/blame.c:2511
+#: builtin/blame.c:2510
 msgid "Show raw timestamp (Default: off)"
 msgstr "Hiển thị dấu vết thời gian dạng thô (Mặc định: off)"
 
-#: builtin/blame.c:2512
+#: builtin/blame.c:2511
 msgid "Show long commit SHA1 (Default: off)"
 msgstr "Hiển thị SHA1 của lần chuyển giao dạng dài (Mặc định: off)"
 
-#: builtin/blame.c:2513
+#: builtin/blame.c:2512
 msgid "Suppress author name and timestamp (Default: off)"
 msgstr "Không hiển thị tên tác giả và dấu vết thời gian (Mặc định: off)"
 
-#: builtin/blame.c:2514
+#: builtin/blame.c:2513
 msgid "Show author email instead of name (Default: off)"
 msgstr "Hiển thị thư điện tử của tác giả thay vì tên (Mặc định: off)"
 
-#: builtin/blame.c:2515
+#: builtin/blame.c:2514
 msgid "Ignore whitespace differences"
 msgstr "Bỏ qua các khác biệt do khoảng trắng gây ra"
 
-#: builtin/blame.c:2516
+#: builtin/blame.c:2515
 msgid "Spend extra cycles to find better match"
 msgstr "Tiêu thụ thêm năng tài nguyên máy móc để tìm kiếm tốt hơn nữa"
 
-#: builtin/blame.c:2517
+#: builtin/blame.c:2516
 msgid "Use revisions from <file> instead of calling git-rev-list"
 msgstr ""
 "Sử dụng điểm xét duyệt (revision) từ <tập tin> thay vì gọi “git-rev-list”"
 
-#: builtin/blame.c:2518
+#: builtin/blame.c:2517
 msgid "Use <file>'s contents as the final image"
 msgstr "Sử dụng nội dung của <tập tin> như là ảnh cuối cùng"
 
-#: builtin/blame.c:2519 builtin/blame.c:2520
+#: builtin/blame.c:2518 builtin/blame.c:2519
 msgid "score"
 msgstr "điểm số"
 
-#: builtin/blame.c:2519
+#: builtin/blame.c:2518
 msgid "Find line copies within and across files"
 msgstr "Tìm các bản sao chép dòng trong và ngang qua tập tin"
 
-#: builtin/blame.c:2520
+#: builtin/blame.c:2519
 msgid "Find line movements within and across files"
 msgstr "Tìm các di chuyển dòng trong và ngang qua tập tin"
 
-#: builtin/blame.c:2521
+#: builtin/blame.c:2520
 msgid "n,m"
 msgstr "n,m"
 
-#: builtin/blame.c:2521
+#: builtin/blame.c:2520
 msgid "Process only line range n,m, counting from 1"
 msgstr "Xử lý chỉ dòng vùng n,m, tính từ 1"
 
 #. TRANSLATORS: This string is used to tell us the maximum
 #. display width for a relative timestamp in "git blame"
 #. output.  For C locale, "4 years, 11 months ago", which
 #. takes 22 places, is the longest among various forms of
 #. relative timestamps, but your language may need more or
 #. fewer display columns.
-#: builtin/blame.c:2602
+#: builtin/blame.c:2601
 msgid "4 years, 11 months ago"
 msgstr "4 năm, 11 tháng trước"
 
 #: builtin/branch.c:24
-msgid "git branch [options] [-r | -a] [--merged | --no-merged]"
-msgstr "git branch [các-tùy-chọn] [-r | -a] [--merged | --no-merged]"
+msgid "git branch [<options>] [-r | -a] [--merged | --no-merged]"
+msgstr "git branch [<các-tùy-chọn>] [-r | -a] [--merged | --no-merged]"
 
 #: builtin/branch.c:25
-msgid "git branch [options] [-l] [-f] <branchname> [<start-point>]"
-msgstr "git branch [các-tùy-chọn] [-l] [-f] <tên-nhánh> [<điểm-đầu>]"
+msgid "git branch [<options>] [-l] [-f] <branch-name> [<start-point>]"
+msgstr "git branch [<các-tùy-chọn>] [-l] [-f] <tên-nhánh> [<điểm-đầu>]"
 
 #: builtin/branch.c:26
-msgid "git branch [options] [-r] (-d | -D) <branchname>..."
-msgstr "git branch [các-tùy-chọn] [-r] (-d | -D) <tên-nhánh> …"
+msgid "git branch [<options>] [-r] (-d | -D) <branch-name>..."
+msgstr "git branch [<các-tùy-chọn>] [-r] (-d | -D) <tên-nhánh> …"
 
 #: builtin/branch.c:27
-msgid "git branch [options] (-m | -M) [<oldbranch>] <newbranch>"
-msgstr "git branch [các-tùy-chọn] (-m | -M) [<nhánh-cũ>] <nhánh-mới>"
+msgid "git branch [<options>] (-m | -M) [<old-branch>] <new-branch>"
+msgstr "git branch [<các-tùy-chọn>] (-m | -M) [<nhánh-cũ>] <nhánh-mới>"
 
 #: builtin/branch.c:152
 #, c-format
 msgid ""
 "deleting branch '%s' that has been merged to\n"
 "         '%s', but not yet merged to HEAD."
@@ -2885,13 +2912,13 @@
 msgid "[%s]"
 msgstr "[%s]"
 
 #: builtin/branch.c:469
 #, c-format
 msgid "[%s: behind %d]"
-msgstr "[%s: đằng sau %d]"
+msgstr "[%s: đứng sau %d]"
 
 #: builtin/branch.c:471
 #, c-format
 msgid "[behind %d]"
 msgstr "[đằng sau %d]"
 
@@ -2926,267 +2953,272 @@
 
 #: builtin/branch.c:590
 #, c-format
 msgid "(no branch, bisect started on %s)"
 msgstr "(không nhánh, di chuyển nửa bước được bắt đầu tại %s)"
 
-#: builtin/branch.c:593
+#: builtin/branch.c:596
 #, c-format
-msgid "(detached from %s)"
-msgstr "(được tách rời từ %s)"
+msgid "(HEAD detached at %s)"
+msgstr "(HEAD được tách rời tại %s)"
 
-#: builtin/branch.c:596
+#: builtin/branch.c:599
+#, c-format
+msgid "(HEAD detached from %s)"
+msgstr "(HEAD được tách rời từ %s)"
+
+#: builtin/branch.c:603
 msgid "(no branch)"
 msgstr "(không nhánh)"
 
-#: builtin/branch.c:643
+#: builtin/branch.c:650
 #, c-format
 msgid "object '%s' does not point to a commit"
 msgstr "đối tượng “%s” không chỉ đến một lần chuyển giao nào cả"
 
-#: builtin/branch.c:691
+#: builtin/branch.c:698
 msgid "some refs could not be read"
 msgstr "một số tham chiếu đã không thể đọc được"
 
-#: builtin/branch.c:704
+#: builtin/branch.c:711
 msgid "cannot rename the current branch while not on any."
 msgstr "không thể đổi tên nhánh hiện hành trong khi nó chẳng ở đâu cả."
 
-#: builtin/branch.c:714
+#: builtin/branch.c:721
 #, c-format
 msgid "Invalid branch name: '%s'"
 msgstr "Tên nhánh không hợp lệ: “%s”"
 
-#: builtin/branch.c:729
+#: builtin/branch.c:736
 msgid "Branch rename failed"
 msgstr "Gặp lỗi khi đổi tên nhánh"
 
-#: builtin/branch.c:733
+#: builtin/branch.c:740
 #, c-format
 msgid "Renamed a misnamed branch '%s' away"
 msgstr "Đã đổi tên nhánh khuyết danh “%s” đi"
 
-#: builtin/branch.c:737
+#: builtin/branch.c:744
 #, c-format
 msgid "Branch renamed to %s, but HEAD is not updated!"
 msgstr "Nhánh bị đổi tên thành %s, nhưng HEAD lại không được cập nhật!"
 
-#: builtin/branch.c:744
+#: builtin/branch.c:751
 msgid "Branch is renamed, but update of config-file failed"
 msgstr "Nhánh bị đổi tên, nhưng cập nhật tập tin cấu hình gặp lỗi"
 
-#: builtin/branch.c:759
+#: builtin/branch.c:766
 #, c-format
 msgid "malformed object name %s"
 msgstr "tên đối tượng dị hình %s"
 
-#: builtin/branch.c:783
+#: builtin/branch.c:790
 #, c-format
 msgid "could not write branch description template: %s"
 msgstr "không thể ghi vào mẫu mô tả nhánh: %s"
 
-#: builtin/branch.c:813
+#: builtin/branch.c:820
 msgid "Generic options"
 msgstr "Tùy chọn chung"
 
-#: builtin/branch.c:815
+#: builtin/branch.c:822
 msgid "show hash and subject, give twice for upstream branch"
 msgstr "hiển thị mã băm và chủ đề, đưa ra hai lần cho nhánh thượng nguồn"
 
-#: builtin/branch.c:816
+#: builtin/branch.c:823
 msgid "suppress informational messages"
 msgstr "không xuất các thông tin"
 
-#: builtin/branch.c:817
+#: builtin/branch.c:824
 msgid "set up tracking mode (see git-pull(1))"
 msgstr "cài đặt chế độ theo dõi (xem git-pull(1))"
 
-#: builtin/branch.c:819
+#: builtin/branch.c:826
 msgid "change upstream info"
 msgstr "thay đổi thông tin thượng nguồn"
 
-#: builtin/branch.c:823
+#: builtin/branch.c:830
 msgid "use colored output"
 msgstr "tô màu kết xuất"
 
-#: builtin/branch.c:824
+#: builtin/branch.c:831
 msgid "act on remote-tracking branches"
 msgstr "thao tác trên nhánh “remote-tracking”"
 
-#: builtin/branch.c:827 builtin/branch.c:833 builtin/branch.c:854
-#: builtin/branch.c:860 builtin/commit.c:1586 builtin/commit.c:1587
-#: builtin/commit.c:1588 builtin/commit.c:1589 builtin/tag.c:616
+#: builtin/branch.c:834 builtin/branch.c:840 builtin/branch.c:861
+#: builtin/branch.c:867 builtin/commit.c:1582 builtin/commit.c:1583
+#: builtin/commit.c:1584 builtin/commit.c:1585 builtin/tag.c:616
 #: builtin/tag.c:622
 msgid "commit"
 msgstr "lần_chuyển_giao"
 
-#: builtin/branch.c:828 builtin/branch.c:834
+#: builtin/branch.c:835 builtin/branch.c:841
 msgid "print only branches that contain the commit"
 msgstr "chỉ hiển thị những nhánh mà nó chứa lần chuyển giao"
 
-#: builtin/branch.c:840
+#: builtin/branch.c:847
 msgid "Specific git-branch actions:"
 msgstr "Hành động git-branch:"
 
-#: builtin/branch.c:841
+#: builtin/branch.c:848
 msgid "list both remote-tracking and local branches"
 msgstr "liệt kê cả nhánh “remote-tracking” và nội bộ"
 
-#: builtin/branch.c:843
+#: builtin/branch.c:850
 msgid "delete fully merged branch"
 msgstr "xóa một toàn bộ nhánh đã hòa trộn"
 
-#: builtin/branch.c:844
+#: builtin/branch.c:851
 msgid "delete branch (even if not merged)"
 msgstr "xóa nhánh (cho dù là chưa được hòa trộn)"
 
-#: builtin/branch.c:845
+#: builtin/branch.c:852
 msgid "move/rename a branch and its reflog"
 msgstr "di chuyển hay đổi tên một nhánh và reflog của nó"
 
-#: builtin/branch.c:846
+#: builtin/branch.c:853
 msgid "move/rename a branch, even if target exists"
 msgstr "di chuyển hoặc đổi tên một nhánh ngay cả khi đích đã có sẵn"
 
-#: builtin/branch.c:847
+#: builtin/branch.c:854
 msgid "list branch names"
 msgstr "liệt kê các tên nhánh"
 
-#: builtin/branch.c:848
+#: builtin/branch.c:855
 msgid "create the branch's reflog"
 msgstr "tạo reflog của nhánh"
 
-#: builtin/branch.c:850
+#: builtin/branch.c:857
 msgid "edit the description for the branch"
 msgstr "sửa mô tả cho nhánh"
 
-#: builtin/branch.c:851
+#: builtin/branch.c:858
 msgid "force creation, move/rename, deletion"
 msgstr "buộc tạo, di chuyển/đổi tên, xóa"
 
-#: builtin/branch.c:854
+#: builtin/branch.c:861
 msgid "print only not merged branches"
 msgstr "chỉ hiển thị các nhánh chưa được hòa trộn"
 
-#: builtin/branch.c:860
+#: builtin/branch.c:867
 msgid "print only merged branches"
 msgstr "chỉ hiển thị các nhánh đã hòa trộn"
 
-#: builtin/branch.c:864
+#: builtin/branch.c:871
 msgid "list branches in columns"
 msgstr "liệt kê các nhánh trong các cột"
 
-#: builtin/branch.c:877
+#: builtin/branch.c:884
 msgid "Failed to resolve HEAD as a valid ref."
 msgstr "Gặp lỗi khi phân giải HEAD như là một tham chiếu hợp lệ."
 
-#: builtin/branch.c:881 builtin/clone.c:637
+#: builtin/branch.c:888 builtin/clone.c:637
 msgid "HEAD not found below refs/heads!"
 msgstr "không tìm thấy HEAD ở dưới refs/heads!"
 
-#: builtin/branch.c:903
+#: builtin/branch.c:910
 msgid "--column and --verbose are incompatible"
 msgstr "tùy chọn --column và --verbose xung khắc nhau"
 
-#: builtin/branch.c:914 builtin/branch.c:953
+#: builtin/branch.c:921 builtin/branch.c:960
 msgid "branch name required"
 msgstr "cần chỉ ra tên nhánh"
 
-#: builtin/branch.c:929
+#: builtin/branch.c:936
 msgid "Cannot give description to detached HEAD"
 msgstr "Không thể đưa ra mô tả HEAD đã tách rời"
 
-#: builtin/branch.c:934
+#: builtin/branch.c:941
 msgid "cannot edit description of more than one branch"
 msgstr "không thể sửa mô tả cho nhiều hơn một nhánh"
 
-#: builtin/branch.c:941
+#: builtin/branch.c:948
 #, c-format
 msgid "No commit on branch '%s' yet."
 msgstr "Vẫn chưa chuyển giao trên nhánh “%s”."
 
-#: builtin/branch.c:944
+#: builtin/branch.c:951
 #, c-format
 msgid "No branch named '%s'."
 msgstr "Không có nhánh nào có tên “%s”."
 
-#: builtin/branch.c:959
+#: builtin/branch.c:966
 msgid "too many branches for a rename operation"
 msgstr "quá nhiều nhánh dành cho thao tác đổi tên"
 
-#: builtin/branch.c:964
+#: builtin/branch.c:971
 msgid "too many branches to set new upstream"
 msgstr "quá nhiều nhánh được đặt cho thượng nguồn mới"
 
-#: builtin/branch.c:968
+#: builtin/branch.c:975
 #, c-format
 msgid ""
 "could not set upstream of HEAD to %s when it does not point to any branch."
 msgstr ""
 "không thể đặt thượng nguồn của HEAD thành %s khi mà nó chẳng chỉ đến nhánh "
 "nào cả."
 
-#: builtin/branch.c:971 builtin/branch.c:993 builtin/branch.c:1014
+#: builtin/branch.c:978 builtin/branch.c:1000 builtin/branch.c:1021
 #, c-format
 msgid "no such branch '%s'"
 msgstr "không có nhánh nào như thế “%s”"
 
-#: builtin/branch.c:975
+#: builtin/branch.c:982
 #, c-format
 msgid "branch '%s' does not exist"
 msgstr "chưa có nhánh “%s”"
 
-#: builtin/branch.c:987
+#: builtin/branch.c:994
 msgid "too many branches to unset upstream"
 msgstr "quá nhiều nhánh để bỏ đặt thượng nguồn"
 
-#: builtin/branch.c:991
+#: builtin/branch.c:998
 msgid "could not unset upstream of HEAD when it does not point to any branch."
 msgstr "không thể bỏ đặt thượng nguồn của HEAD không chỉ đến một nhánh nào cả."
 
-#: builtin/branch.c:997
+#: builtin/branch.c:1004
 #, c-format
 msgid "Branch '%s' has no upstream information"
 msgstr "Nhánh “%s” không có thông tin thượng nguồn"
 
-#: builtin/branch.c:1011
+#: builtin/branch.c:1018
 msgid "it does not make sense to create 'HEAD' manually"
 msgstr "không hợp lý khi tạo “HEAD” thủ công"
 
-#: builtin/branch.c:1017
+#: builtin/branch.c:1024
 msgid "-a and -r options to 'git branch' do not make sense with a branch name"
 msgstr ""
 "hai tùy chọn -a và -r áp dụng cho lệnh “git branch” không hợp lý đối với tên "
 "nhánh"
 
-#: builtin/branch.c:1020
+#: builtin/branch.c:1027
 #, c-format
 msgid ""
 "The --set-upstream flag is deprecated and will be removed. Consider using --"
 "track or --set-upstream-to\n"
 msgstr ""
 "Cờ --set-upstream đã lạc hậu và sẽ bị xóa bỏ. Nên dùng --track hoặc --set-"
 "upstream-to\n"
 
-#: builtin/branch.c:1037
+#: builtin/branch.c:1044
 #, c-format
 msgid ""
 "\n"
 "If you wanted to make '%s' track '%s', do this:\n"
 "\n"
 msgstr ""
 "\n"
 "Nếu bạn muốn “%s” theo dõi “%s”, thực hiện lệnh sau:\n"
 "\n"
 
-#: builtin/branch.c:1038
+#: builtin/branch.c:1045
 #, c-format
 msgid "    git branch -d %s\n"
 msgstr "    git branch -d %s\n"
 
-#: builtin/branch.c:1039
+#: builtin/branch.c:1046
 #, c-format
 msgid "    git branch --set-upstream-to %s\n"
 msgstr "    git branch --set-upstream-to %s\n"
 
 #: builtin/bundle.c:47
 #, c-format
@@ -3198,61 +3230,61 @@
 msgstr "Cần một kho chứa để có thể tạo một bundle."
 
 #: builtin/bundle.c:60
 msgid "Need a repository to unbundle."
 msgstr "Cần một kho chứa để có thể giải nén một bundle."
 
-#: builtin/cat-file.c:328
-msgid "git cat-file (-t|-s|-e|-p|<type>|--textconv) <object>"
-msgstr "git cat-file (-t|-s|-e|-p|<kiểu>|--textconv) <đối_tượng>"
-
-#: builtin/cat-file.c:329
-msgid "git cat-file (--batch|--batch-check) < <list_of_objects>"
-msgstr "git cat-file (--batch|--batch-check) < <danh-sách-đối-tượng>"
+#: builtin/cat-file.c:326
+msgid "git cat-file (-t | -s | -e | -p | <type> | --textconv) <object>"
+msgstr "git cat-file (-t | -s | -e | -p | <kiểu> | --textconv) <đối_tượng>"
+
+#: builtin/cat-file.c:327
+msgid "git cat-file (--batch | --batch-check) < <list-of-objects>"
+msgstr "git cat-file (--batch | --batch-check) < <danh-sách-đối-tượng>"
 
-#: builtin/cat-file.c:366
+#: builtin/cat-file.c:364
 msgid "<type> can be one of: blob, tree, commit, tag"
 msgstr "<kiểu> là một trong số: blob, tree, commit hoặc tag"
 
-#: builtin/cat-file.c:367
+#: builtin/cat-file.c:365
 msgid "show object type"
 msgstr "hiển thị kiểu đối tượng"
 
-#: builtin/cat-file.c:368
+#: builtin/cat-file.c:366
 msgid "show object size"
 msgstr "hiển thị kích thước đối tượng"
 
-#: builtin/cat-file.c:370
+#: builtin/cat-file.c:368
 msgid "exit with zero when there's no error"
 msgstr "thoát với 0 khi không có lỗi"
 
-#: builtin/cat-file.c:371
+#: builtin/cat-file.c:369
 msgid "pretty-print object's content"
 msgstr "in nội dung đối tượng dạng dễ đọc"
 
-#: builtin/cat-file.c:373
+#: builtin/cat-file.c:371
 msgid "for blob objects, run textconv on object's content"
 msgstr "với đối tượng blob, chạy lệnh textconv trên nội dung của đối tượng"
 
-#: builtin/cat-file.c:375
+#: builtin/cat-file.c:373
 msgid "show info and content of objects fed from the standard input"
 msgstr ""
 "hiển thị thông tin và nội dung của các đối tượng lấy từ đầu vào tiêu chuẩn"
 
-#: builtin/cat-file.c:378
+#: builtin/cat-file.c:376
 msgid "show info about objects fed from the standard input"
 msgstr "hiển thị các thông tin về đối tượng fed  từ đầu vào tiêu chuẩn"
 
 #: builtin/check-attr.c:11
-msgid "git check-attr [-a | --all | attr...] [--] pathname..."
-msgstr "git check-attr [-a | --all | attr…] [--] tên-đường-dẫn…"
+msgid "git check-attr [-a | --all | <attr>...] [--] <pathname>..."
+msgstr "git check-attr [-a | --all | <attr>…] [--] tên-đường-dẫn…"
 
 #: builtin/check-attr.c:12
-msgid "git check-attr --stdin [-z] [-a | --all | attr...] < <list-of-paths>"
+msgid "git check-attr --stdin [-z] [-a | --all | <attr>...] < <list-of-paths>"
 msgstr ""
-"git check-attr --stdin [-z] [-a | --all | attr…] < <danh-sách-đường-dẫn>"
+"git check-attr --stdin [-z] [-a | --all | <attr>…] < <danh-sách-đường-dẫn>"
 
 #: builtin/check-attr.c:19
 msgid "report all attributes set on file"
 msgstr "báo cáo tất cả các thuộc tính đặt trên tập tin"
 
 #: builtin/check-attr.c:20
@@ -3301,14 +3333,14 @@
 
 #: builtin/check-ignore.c:168
 msgid "--non-matching is only valid with --verbose"
 msgstr "tùy-chọn --non-matching chỉ hợp lệ khi dùng với --verbose"
 
 #: builtin/check-mailmap.c:8
-msgid "git check-mailmap [options] <contact>..."
-msgstr "git check-mailmap [các-tùy-chọn] <danh-bạ>…"
+msgid "git check-mailmap [<options>] <contact>..."
+msgstr "git check-mailmap [<các-tùy-chọn>] <danh-bạ>…"
 
 #: builtin/check-mailmap.c:13
 msgid "also read contacts from stdin"
 msgstr "đồng thời đọc các danh bạ từ đầu vào tiêu chuẩn"
 
 #: builtin/check-mailmap.c:24
@@ -3318,14 +3350,14 @@
 
 #: builtin/check-mailmap.c:47
 msgid "no contacts specified"
 msgstr "chưa chỉ ra danh bạ"
 
 #: builtin/checkout-index.c:126
-msgid "git checkout-index [options] [--] [<file>...]"
-msgstr "git checkout-index [các-tùy-chọn] [--] [<tập-tin>…]"
+msgid "git checkout-index [<options>] [--] [<file>...]"
+msgstr "git checkout-index [<các-tùy-chọn>] [--] [<tập-tin>…]"
 
 #: builtin/checkout-index.c:188
 msgid "check out all files in the index"
 msgstr "lấy ra toàn bộ các tập tin trong bảng mục lục"
 
 #: builtin/checkout-index.c:189
@@ -3363,18 +3395,18 @@
 
 #: builtin/checkout-index.c:208
 msgid "copy out the files from named stage"
 msgstr "sao chép ra các tập tin từ bệ phóng có tên"
 
 #: builtin/checkout.c:25
-msgid "git checkout [options] <branch>"
-msgstr "git checkout [các-tùy-chọn] <nhánh>"
+msgid "git checkout [<options>] <branch>"
+msgstr "git checkout [<các-tùy-chọn>] <nhánh>"
 
 #: builtin/checkout.c:26
-msgid "git checkout [options] [<branch>] -- <file>..."
-msgstr "git checkout [các-tùy-chọn] [<nhánh>] -- <tập-tin>…"
+msgid "git checkout [<options>] [<branch>] -- <file>..."
+msgstr "git checkout [<các-tùy-chọn>] [<nhánh>] -- <tập-tin>…"
 
 #: builtin/checkout.c:132 builtin/checkout.c:165
 #, c-format
 msgid "path '%s' does not have our version"
 msgstr "đường dẫn “%s” không có các phiên bản của chúng ta"
 
@@ -3494,20 +3526,19 @@
 #: builtin/checkout.c:747
 #, c-format
 msgid ""
 "If you want to keep them by creating a new branch, this may be a good time\n"
 "to do so with:\n"
 "\n"
-" git branch new_branch_name %s\n"
+" git branch <new-branch-name> %s\n"
 "\n"
 msgstr ""
-"Nếu bạn muốn giữ chúng bằng cách tạo ra một nhánh mới, đây có lẽ là một thời "
-"điểm thích hợp\n"
-"để làm thế bằng lệnh:\n"
+"Nếu bạn muốn giữ chúng bằng cách tạo ra một nhánh mới, đây có lẽ là\n"
+"một thời điểm thích hợp để làm thế bằng lệnh:\n"
 "\n"
-" git branch tên_nhánh_mới %s\n"
+" git branch <tên_nhánh_mới> %s\n"
 "\n"
 
 #: builtin/checkout.c:777
 msgid "internal error in revision walk"
 msgstr "lỗi nội bộ trong khi di chuyển qua các điểm xét duyệt"
 
@@ -3619,14 +3650,14 @@
 
 #: builtin/checkout.c:1128
 msgid "do not limit pathspecs to sparse entries only"
 msgstr "không giới hạn đặc tả đường dẫn thành chỉ các mục thưa thớt"
 
 #: builtin/checkout.c:1130
-msgid "second guess 'git checkout no-such-branch'"
-msgstr "gợi ý thứ hai “git checkout không-nhánh-nào-như-vậy”"
+msgid "second guess 'git checkout <no-such-branch>'"
+msgstr "gợi ý thứ hai \"git checkout <không-nhánh-nào-như-vậy>\""
 
 #: builtin/checkout.c:1153
 msgid "-b, -B and --orphan are mutually exclusive"
 msgstr "Các tùy chọn -b, -B và --orphan loại từ lẫn nhau"
 
 #: builtin/checkout.c:1170
@@ -3743,22 +3774,23 @@
 msgstr "CẢNH BÁO: Không tìm thấy các mục được khớp bởi: %s"
 
 #: builtin/clean.c:717
 msgid "Select items to delete"
 msgstr "Chọn mục muốn xóa"
 
-#: builtin/clean.c:757
+#. TRANSLATORS: Make sure to keep [y/N] as is
+#: builtin/clean.c:758
 #, c-format
-msgid "remove %s? "
-msgstr "gỡ bỏ “%s”? "
+msgid "Remove %s [y/N]? "
+msgstr "Xóa bỏ “%s” [y/N]? "
 
-#: builtin/clean.c:782
+#: builtin/clean.c:783
 msgid "Bye."
 msgstr "Tạm biệt."
 
-#: builtin/clean.c:790
+#: builtin/clean.c:791
 msgid ""
 "clean               - start cleaning\n"
 "filter by pattern   - exclude items from deletion\n"
 "select by numbers   - select items to be deleted by numbers\n"
 "ask each            - confirm each deletion (like \"rm -i\")\n"
 "quit                - stop cleaning\n"
@@ -3770,88 +3802,88 @@
 "select by numbers   - chọn các mục cần xóa bằng số\n"
 "ask each            - xác nhận trước mỗi lần xóa (giống như \"rm -i\")\n"
 "quit                - dừng việc dọn dẹp lại\n"
 "help                - hiển thị chính trợ giúp này\n"
 "?                   - trợ giúp dành cho chọn bằng cách nhắc"
 
-#: builtin/clean.c:817
+#: builtin/clean.c:818
 msgid "*** Commands ***"
 msgstr "*** Lệnh ***"
 
-#: builtin/clean.c:818
+#: builtin/clean.c:819
 msgid "What now"
 msgstr "Giờ thì sao"
 
-#: builtin/clean.c:826
+#: builtin/clean.c:827
 msgid "Would remove the following item:"
 msgid_plural "Would remove the following items:"
 msgstr[0] "Có muốn gỡ bỏ (các) mục sau đây không:"
 
-#: builtin/clean.c:843
+#: builtin/clean.c:844
 msgid "No more files to clean, exiting."
 msgstr "Không còn tập-tin nào để dọn dẹp, đang thoát ra."
 
-#: builtin/clean.c:874
+#: builtin/clean.c:875
 msgid "do not print names of files removed"
 msgstr "không hiển thị tên của các tập tin đã gỡ bỏ"
 
-#: builtin/clean.c:876
+#: builtin/clean.c:877
 msgid "force"
 msgstr "ép buộc"
 
-#: builtin/clean.c:877
+#: builtin/clean.c:878
 msgid "interactive cleaning"
 msgstr "dọn bằng kiểu tương tác"
 
-#: builtin/clean.c:879
+#: builtin/clean.c:880
 msgid "remove whole directories"
 msgstr "gỡ bỏ toàn bộ thư mục"
 
-#: builtin/clean.c:880 builtin/describe.c:407 builtin/grep.c:714
-#: builtin/ls-files.c:486 builtin/name-rev.c:311 builtin/show-ref.c:185
+#: builtin/clean.c:881 builtin/describe.c:407 builtin/grep.c:714
+#: builtin/ls-files.c:443 builtin/name-rev.c:311 builtin/show-ref.c:185
 msgid "pattern"
 msgstr "mẫu"
 
-#: builtin/clean.c:881
+#: builtin/clean.c:882
 msgid "add <pattern> to ignore rules"
 msgstr "thêm <mẫu> vào trong qui tắc bỏ qua"
 
-#: builtin/clean.c:882
+#: builtin/clean.c:883
 msgid "remove ignored files, too"
 msgstr "đồng thời gỡ bỏ cả các tập tin bị bỏ qua"
 
-#: builtin/clean.c:884
+#: builtin/clean.c:885
 msgid "remove only ignored files"
 msgstr "chỉ gỡ bỏ những tập tin bị bỏ qua"
 
-#: builtin/clean.c:902
+#: builtin/clean.c:903
 msgid "-x and -X cannot be used together"
 msgstr "-x và -X không thể dùng cùng nhau"
 
-#: builtin/clean.c:906
+#: builtin/clean.c:907
 msgid ""
 "clean.requireForce set to true and neither -i, -n, nor -f given; refusing to "
 "clean"
 msgstr ""
 "clean.requireForce được đặt thành true và không đưa ra tùy chọn -i, -n mà "
 "cũng không -f; từ chối lệnh dọn dẹp (clean)"
 
-#: builtin/clean.c:909
+#: builtin/clean.c:910
 msgid ""
 "clean.requireForce defaults to true and neither -i, -n, nor -f given; "
 "refusing to clean"
 msgstr ""
 "clean.requireForce mặc định được đặt là true và không đưa ra tùy chọn -i, -n "
 "mà cũng không -f; từ chối lệnh dọn dẹp (clean)"
 
 #: builtin/clone.c:37
-msgid "git clone [options] [--] <repo> [<dir>]"
-msgstr "git clone [các-tùy-chọn] [--] <kho> [<t.mục>]"
+msgid "git clone [<options>] [--] <repo> [<dir>]"
+msgstr "git clone [<các-tùy-chọn>] [--] <kho> [<t.mục>]"
 
-#: builtin/clone.c:66 builtin/fetch.c:112 builtin/merge.c:224
-#: builtin/push.c:514
+#: builtin/clone.c:66 builtin/fetch.c:111 builtin/merge.c:224
+#: builtin/push.c:523
 msgid "force progress reporting"
 msgstr "ép buộc báo cáo tiến triển công việc"
 
 #: builtin/clone.c:68
 msgid "don't create a checkout"
 msgstr "không tạo một checkout"
@@ -3905,13 +3937,13 @@
 msgstr "lấy ra <nhánh> thay cho HEAD của máy chủ"
 
 #: builtin/clone.c:93
 msgid "path to git-upload-pack on the remote"
 msgstr "đường dẫn đến git-upload-pack trên máy chủ"
 
-#: builtin/clone.c:94 builtin/fetch.c:113 builtin/grep.c:659
+#: builtin/clone.c:94 builtin/fetch.c:112 builtin/grep.c:659
 msgid "depth"
 msgstr "độ-sâu"
 
 #: builtin/clone.c:95
 msgid "create a shallow clone of that depth"
 msgstr "tạo bản sao không đầy đủ cho mức sâu đã cho"
@@ -4049,13 +4081,13 @@
 
 #: builtin/clone.c:809
 #, c-format
 msgid "repository '%s' does not exist"
 msgstr "kho chứa “%s” chưa tồn tại"
 
-#: builtin/clone.c:815 builtin/fetch.c:1155
+#: builtin/clone.c:815 builtin/fetch.c:1156
 #, c-format
 msgid "depth %s is not a positive number"
 msgstr "độ sâu %s không phải là một số nguyên dương"
 
 #: builtin/clone.c:825
 #, c-format
@@ -4064,65 +4096,65 @@
 
 #: builtin/clone.c:835
 #, c-format
 msgid "working tree '%s' already exists."
 msgstr "cây làm việc “%s” đã sẵn tồn tại rồi."
 
-#: builtin/clone.c:848 builtin/clone.c:860
+#: builtin/clone.c:850 builtin/clone.c:861
 #, c-format
 msgid "could not create leading directories of '%s'"
 msgstr "không thể tạo các thư mục dẫn đầu của “%s”"
 
-#: builtin/clone.c:851
+#: builtin/clone.c:853
 #, c-format
-msgid "could not create work tree dir '%s'."
-msgstr "không thể tạo cây thư mục làm việc dir “%s”."
+msgid "could not create work tree dir '%s'"
+msgstr "không thể tạo cây thư mục làm việc dir “%s”"
 
-#: builtin/clone.c:870
+#: builtin/clone.c:871
 #, c-format
 msgid "Cloning into bare repository '%s'...\n"
 msgstr "Đang nhân bản thành kho chứa bare “%s”…\n"
 
-#: builtin/clone.c:872
+#: builtin/clone.c:873
 #, c-format
 msgid "Cloning into '%s'...\n"
 msgstr "Đang nhân bản thành “%s”…\n"
 
-#: builtin/clone.c:897
+#: builtin/clone.c:898
 msgid "--dissociate given, but there is no --reference"
 msgstr "đã đưa ra --dissociate, nhưng ở đây lại không có --reference"
 
-#: builtin/clone.c:912
+#: builtin/clone.c:913
 msgid "--depth is ignored in local clones; use file:// instead."
 msgstr "--depth bị lờ đi khi nhân bản nội bộ; hãy sử dụng file:// để thay thế."
 
-#: builtin/clone.c:915
+#: builtin/clone.c:916
 msgid "source repository is shallow, ignoring --local"
 msgstr "kho nguồn là nông, nên bỏ qua --local"
 
-#: builtin/clone.c:920
+#: builtin/clone.c:921
 msgid "--local is ignored"
 msgstr "--local bị lờ đi"
 
-#: builtin/clone.c:924
+#: builtin/clone.c:925
 #, c-format
 msgid "Don't know how to clone %s"
 msgstr "Không biết làm cách nào để nhân bản (clone) %s"
 
-#: builtin/clone.c:975 builtin/clone.c:983
+#: builtin/clone.c:976 builtin/clone.c:984
 #, c-format
 msgid "Remote branch %s not found in upstream %s"
 msgstr "Nhánh máy chủ %s không tìm thấy trong thượng nguồn %s"
 
-#: builtin/clone.c:986
+#: builtin/clone.c:987
 msgid "You appear to have cloned an empty repository."
 msgstr "Bạn hình như là đã nhân bản một kho trống rỗng."
 
 #: builtin/column.c:9
-msgid "git column [options]"
-msgstr "git column [các-tùy-chọn]"
+msgid "git column [<options>]"
+msgstr "git column [<các-tùy-chọn>]"
 
 #: builtin/column.c:26
 msgid "lookup config vars"
 msgstr "tìm kiếm biến cấu hình"
 
 #: builtin/column.c:27 builtin/column.c:28
@@ -4147,18 +4179,18 @@
 
 #: builtin/column.c:51
 msgid "--command must be the first argument"
 msgstr "--command phải là đối số đầu tiên"
 
 #: builtin/commit.c:37
-msgid "git commit [options] [--] <pathspec>..."
-msgstr "git commit [các-tùy-chọn] [--] <pathspec>…"
+msgid "git commit [<options>] [--] <pathspec>..."
+msgstr "git commit [<các-tùy-chọn>] [--] <pathspec>…"
 
 #: builtin/commit.c:42
-msgid "git status [options] [--] <pathspec>..."
-msgstr "git status [các-tùy-chọn] [--] <pathspec>…"
+msgid "git status [<options>] [--] <pathspec>..."
+msgstr "git status [<các-tùy-chọn>] [--] <pathspec>…"
 
 #: builtin/commit.c:47
 msgid ""
 "Your name and email address were configured automatically based\n"
 "on your username and hostname. Please check that they are accurate.\n"
 "You can suppress this message by setting them explicitly. Run the\n"
@@ -4261,122 +4293,122 @@
 "\n"
 "    git reset\n"
 "\n"
 "Thế thì \"git cherry-pick --continue\" sẽ phục hồi lại việc cherry-pick\n"
 "những lần chuyển giao còn lại.\n"
 
-#: builtin/commit.c:302
+#: builtin/commit.c:304
 msgid "failed to unpack HEAD tree object"
 msgstr "gặp lỗi khi tháo dỡ HEAD đối tượng cây"
 
-#: builtin/commit.c:342
+#: builtin/commit.c:344
 msgid "unable to create temporary index"
 msgstr "không thể tạo bảng mục lục tạm thời"
 
-#: builtin/commit.c:348
+#: builtin/commit.c:350
 msgid "interactive add failed"
 msgstr "gặp lỗi khi thêm bằng cách tương"
 
-#: builtin/commit.c:359
+#: builtin/commit.c:361
 msgid "unable to write index file"
 msgstr "không thể ghi tập tin lưu mục lục"
 
-#: builtin/commit.c:361
+#: builtin/commit.c:363
 msgid "unable to update temporary index"
 msgstr "không thể cập nhật bảng mục lục tạm thời"
 
-#: builtin/commit.c:363
+#: builtin/commit.c:365
 msgid "Failed to update main cache tree"
 msgstr "Gặp lỗi khi cập nhật cây bộ nhớ đệm"
 
-#: builtin/commit.c:387 builtin/commit.c:412 builtin/commit.c:461
+#: builtin/commit.c:389 builtin/commit.c:414 builtin/commit.c:463
 msgid "unable to write new_index file"
 msgstr "không thể ghi tập tin lưu bảng mục lục mới (new_index)"
 
-#: builtin/commit.c:443
+#: builtin/commit.c:445
 msgid "cannot do a partial commit during a merge."
 msgstr ""
 "không thể thực hiện việc chuyển giao cục bộ trong khi đang được hòa trộn."
 
-#: builtin/commit.c:445
+#: builtin/commit.c:447
 msgid "cannot do a partial commit during a cherry-pick."
 msgstr ""
 "không thể thực hiện việc chuyển giao bộ phận trong khi đang cherry-pick."
 
-#: builtin/commit.c:454
+#: builtin/commit.c:456
 msgid "cannot read the index"
 msgstr "không đọc được bảng mục lục"
 
-#: builtin/commit.c:473
+#: builtin/commit.c:475
 msgid "unable to write temporary index file"
 msgstr "không thể ghi tập tin lưu bảng mục lục tạm thời"
 
-#: builtin/commit.c:584
+#: builtin/commit.c:580
 #, c-format
 msgid "commit '%s' lacks author header"
 msgstr "lần chuyển giao “%s” thiếu phần tác giả ở đầu"
 
-#: builtin/commit.c:586
+#: builtin/commit.c:582
 #, c-format
 msgid "commit '%s' has malformed author line"
 msgstr "lần chuyển giao “%s” có phần tác giả ở đầu dị dạng"
 
-#: builtin/commit.c:605
+#: builtin/commit.c:601
 msgid "malformed --author parameter"
 msgstr "đối số cho --author bị dị hình"
 
-#: builtin/commit.c:613
+#: builtin/commit.c:609
 #, c-format
 msgid "invalid date format: %s"
 msgstr "ngày tháng không hợp lệ: %s"
 
-#: builtin/commit.c:657
+#: builtin/commit.c:653
 msgid ""
 "unable to select a comment character that is not used\n"
 "in the current commit message"
 msgstr ""
 "không thể chọn một ký tự ghi chú cái mà không được dùng\n"
 "trong phần ghi chú hiện tại"
 
-#: builtin/commit.c:694 builtin/commit.c:727 builtin/commit.c:1084
+#: builtin/commit.c:690 builtin/commit.c:723 builtin/commit.c:1080
 #, c-format
 msgid "could not lookup commit %s"
 msgstr "không thể tìm kiếm commit (lần chuyển giao) %s"
 
-#: builtin/commit.c:706 builtin/shortlog.c:273
+#: builtin/commit.c:702 builtin/shortlog.c:273
 #, c-format
 msgid "(reading log message from standard input)\n"
 msgstr "(đang đọc thông điệp nhật ký từ đầu vào tiêu chuẩn)\n"
 
-#: builtin/commit.c:708
+#: builtin/commit.c:704
 msgid "could not read log from standard input"
 msgstr "không thể đọc nhật ký từ đầu vào tiêu chuẩn"
 
-#: builtin/commit.c:712
+#: builtin/commit.c:708
 #, c-format
 msgid "could not read log file '%s'"
 msgstr "không đọc được tệp nhật ký “%s”"
 
-#: builtin/commit.c:734
+#: builtin/commit.c:730
 msgid "could not read MERGE_MSG"
 msgstr "không thể đọc MERGE_MSG"
 
-#: builtin/commit.c:738
+#: builtin/commit.c:734
 msgid "could not read SQUASH_MSG"
 msgstr "không thể đọc SQUASH_MSG"
 
-#: builtin/commit.c:742
+#: builtin/commit.c:738
 #, c-format
 msgid "could not read '%s'"
 msgstr "Không thể đọc “%s”."
 
-#: builtin/commit.c:789
+#: builtin/commit.c:785
 msgid "could not write commit template"
 msgstr "không thể ghi mẫu chuyển giao"
 
-#: builtin/commit.c:807
+#: builtin/commit.c:803
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a merge.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
@@ -4385,13 +4417,13 @@
 "\n"
 "Nó trông giống với việc bạn đang chuyển giao một lần hòa trộn.\n"
 "Nếu không phải vậy, xin hãy gỡ bỏ tập tin\n"
 "\t%s\n"
 "và thử lại.\n"
 
-#: builtin/commit.c:812
+#: builtin/commit.c:808
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a cherry-pick.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
@@ -4400,410 +4432,412 @@
 "\n"
 "Nó trông giống với việc bạn đang chuyển giao một lần cherry-pick.\n"
 "Nếu không phải vậy, xin hãy gỡ bỏ tập tin\n"
 "\t%s\n"
 "và thử lại.\n"
 
-#: builtin/commit.c:825
+#: builtin/commit.c:821
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be ignored, and an empty message aborts the commit.\n"
 msgstr ""
 "Hãy nhập vào các thông tin để giải thích các thay đổi của bạn. Những dòng "
 "được\n"
 "bắt đầu bằng “%c” sẽ được bỏ qua, nếu phần chú thích rỗng sẽ hủy bỏ lần "
 "chuyển giao.\n"
 
-#: builtin/commit.c:832
+#: builtin/commit.c:828
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be kept; you may remove them yourself if you want to.\n"
 "An empty message aborts the commit.\n"
 msgstr ""
 "Hãy nhập vào các thông tin để giải thích các thay đổi của bạn. Những dòng "
 "được\n"
 "bắt đầu bằng “%c” sẽ được bỏ qua; bạn có thể xóa chúng đi nếu muốn thế.\n"
 "Phần chú thích này nếu trống rỗng sẽ hủy bỏ lần chuyển giao.\n"
 
-#: builtin/commit.c:852
+#: builtin/commit.c:848
 #, c-format
 msgid "%sAuthor:    %.*s <%.*s>"
 msgstr "%sTác giả:           %.*s <%.*s>"
 
-#: builtin/commit.c:860
+#: builtin/commit.c:856
 #, c-format
 msgid "%sDate:      %s"
 msgstr "%sNgày tháng:        %s"
 
-#: builtin/commit.c:867
+#: builtin/commit.c:863
 #, c-format
 msgid "%sCommitter: %.*s <%.*s>"
 msgstr "%sNgười chuyển giao: %.*s <%.*s>"
 
-#: builtin/commit.c:885
+#: builtin/commit.c:881
 msgid "Cannot read index"
 msgstr "Không đọc được bảng mục lục"
 
-#: builtin/commit.c:942
+#: builtin/commit.c:938
 msgid "Error building trees"
 msgstr "Gặp lỗi khi xây dựng cây"
 
-#: builtin/commit.c:957 builtin/tag.c:495
+#: builtin/commit.c:953 builtin/tag.c:495
 #, c-format
 msgid "Please supply the message using either -m or -F option.\n"
 msgstr "Xin hãy cung cấp lời chú giải hoặc là dùng tùy chọn -m hoặc là -F.\n"
 
-#: builtin/commit.c:1059
+#: builtin/commit.c:1055
 #, c-format
-msgid "No existing author found with '%s'"
-msgstr "Không tìm thấy tác giả có sẵn với “%s”"
+msgid "--author '%s' is not 'Name <email>' and matches no existing author"
+msgstr ""
+"--author “%s” không phải là “Họ và tên <thư điện tửl>” và không khớp bất kỳ "
+"tác giả nào sẵn có"
 
-#: builtin/commit.c:1074 builtin/commit.c:1314
+#: builtin/commit.c:1070 builtin/commit.c:1310
 #, c-format
 msgid "Invalid untracked files mode '%s'"
 msgstr "Chế độ cho các tập tin chưa được theo dõi không hợp lệ “%s”"
 
-#: builtin/commit.c:1111
+#: builtin/commit.c:1107
 msgid "--long and -z are incompatible"
 msgstr "hai tùy chọn -long và -z không tương thích với nhau"
 
-#: builtin/commit.c:1141
+#: builtin/commit.c:1137
 msgid "Using both --reset-author and --author does not make sense"
 msgstr "Sử dụng cả hai tùy chọn --reset-author và --author không hợp lý"
 
-#: builtin/commit.c:1150
+#: builtin/commit.c:1146
 msgid "You have nothing to amend."
 msgstr "Không có gì để mà “tu bổ” cả."
 
-#: builtin/commit.c:1153
+#: builtin/commit.c:1149
 msgid "You are in the middle of a merge -- cannot amend."
 msgstr ""
 "Bạn đang ở giữa của quá trình hòa trộn -- không thể thực hiện việc “tu bổ”."
 
-#: builtin/commit.c:1155
+#: builtin/commit.c:1151
 msgid "You are in the middle of a cherry-pick -- cannot amend."
 msgstr ""
 "Bạn đang ở giữa của quá trình cherry-pick -- không thể thực hiện việc “tu "
 "bổ”."
 
-#: builtin/commit.c:1158
+#: builtin/commit.c:1154
 msgid "Options --squash and --fixup cannot be used together"
 msgstr "Các tùy chọn --squash và --fixup không thể sử dụng cùng với nhau"
 
-#: builtin/commit.c:1168
+#: builtin/commit.c:1164
 msgid "Only one of -c/-C/-F/--fixup can be used."
 msgstr ""
 "Chỉ được dùng một trong số tùy chọn trong số các tùy chọn -c/-C/-F/--fixup"
 
-#: builtin/commit.c:1170
+#: builtin/commit.c:1166
 msgid "Option -m cannot be combined with -c/-C/-F/--fixup."
 msgstr "Tùy chọn -m không thể được tổ hợp cùng với -c/-C/-F/--fixup."
 
-#: builtin/commit.c:1178
+#: builtin/commit.c:1174
 msgid "--reset-author can be used only with -C, -c or --amend."
 msgstr ""
 "--reset-author chỉ có thể được sử dụng với tùy chọn -C, -c hay --amend."
 
-#: builtin/commit.c:1195
+#: builtin/commit.c:1191
 msgid "Only one of --include/--only/--all/--interactive/--patch can be used."
 msgstr ""
 "Chỉ một trong các tùy chọn --include/--only/--all/--interactive/--patch được "
 "sử dụng."
 
-#: builtin/commit.c:1197
+#: builtin/commit.c:1193
 msgid "No paths with --include/--only does not make sense."
 msgstr "Không đường dẫn với các tùy chọn --include/--only không hợp lý."
 
-#: builtin/commit.c:1199
+#: builtin/commit.c:1195
 msgid "Clever... amending the last one with dirty index."
 msgstr "Giỏi…  “tu bổ” cái cuối với bảng mục lục bẩn."
 
-#: builtin/commit.c:1201
+#: builtin/commit.c:1197
 msgid "Explicit paths specified without -i or -o; assuming --only paths..."
 msgstr ""
 "Những đường dẫn rõ ràng được chỉ ra không có tùy chọn -i cũng không -o; coi "
 "là --only những đường dẫn"
 
-#: builtin/commit.c:1213 builtin/tag.c:728
+#: builtin/commit.c:1209 builtin/tag.c:728
 #, c-format
 msgid "Invalid cleanup mode %s"
 msgstr "Chế độ dọn dẹp không hợp lệ %s"
 
-#: builtin/commit.c:1218
+#: builtin/commit.c:1214
 msgid "Paths with -a does not make sense."
 msgstr "Các đường dẫn với tùy chọn -a không hợp lý."
 
-#: builtin/commit.c:1328 builtin/commit.c:1608
+#: builtin/commit.c:1324 builtin/commit.c:1604
 msgid "show status concisely"
 msgstr "hiển thị trạng thái ở dạng súc tích"
 
-#: builtin/commit.c:1330 builtin/commit.c:1610
+#: builtin/commit.c:1326 builtin/commit.c:1606
 msgid "show branch information"
 msgstr "hiển thị thông tin nhánh"
 
-#: builtin/commit.c:1332 builtin/commit.c:1612 builtin/push.c:500
+#: builtin/commit.c:1328 builtin/commit.c:1608 builtin/push.c:509
 msgid "machine-readable output"
 msgstr "kết xuất dạng máy-có-thể-đọc"
 
-#: builtin/commit.c:1335 builtin/commit.c:1614
+#: builtin/commit.c:1331 builtin/commit.c:1610
 msgid "show status in long format (default)"
 msgstr "hiển thị trạng thái ở định dạng dài (mặc định)"
 
-#: builtin/commit.c:1338 builtin/commit.c:1617
+#: builtin/commit.c:1334 builtin/commit.c:1613
 msgid "terminate entries with NUL"
 msgstr "chấm dứt các mục bằng NUL"
 
-#: builtin/commit.c:1340 builtin/commit.c:1620 builtin/fast-export.c:980
+#: builtin/commit.c:1336 builtin/commit.c:1616 builtin/fast-export.c:980
 #: builtin/fast-export.c:983 builtin/tag.c:603
 msgid "mode"
 msgstr "chế độ"
 
-#: builtin/commit.c:1341 builtin/commit.c:1620
+#: builtin/commit.c:1337 builtin/commit.c:1616
 msgid "show untracked files, optional modes: all, normal, no. (Default: all)"
 msgstr ""
 "hiển thị các tập tin chưa được theo dõi  dấu vết, các chế độ tùy chọn:  all, "
 "normal, no. (Mặc định: all)"
 
-#: builtin/commit.c:1344
+#: builtin/commit.c:1340
 msgid "show ignored files"
 msgstr "hiển thị các tập tin ẩn"
 
-#: builtin/commit.c:1345 parse-options.h:153
+#: builtin/commit.c:1341 parse-options.h:153
 msgid "when"
 msgstr "khi"
 
-#: builtin/commit.c:1346
+#: builtin/commit.c:1342
 msgid ""
 "ignore changes to submodules, optional when: all, dirty, untracked. "
 "(Default: all)"
 msgstr ""
 "bỏ qua các thay đổi trong mô-đun-con, tùy chọn khi: all, dirty, untracked. "
 "(Mặc định: all)"
 
-#: builtin/commit.c:1348
+#: builtin/commit.c:1344
 msgid "list untracked files in columns"
 msgstr "hiển thị danh sách các tập-tin chưa được theo dõi trong các cột"
 
-#: builtin/commit.c:1435
+#: builtin/commit.c:1431
 msgid "couldn't look up newly created commit"
 msgstr "không thể tìm thấy lần chuyển giao mới hơn đã được tạo"
 
-#: builtin/commit.c:1437
+#: builtin/commit.c:1433
 msgid "could not parse newly created commit"
 msgstr ""
 "không thể phân tích cú pháp của đối tượng chuyển giao mới hơn đã được tạo"
 
-#: builtin/commit.c:1482
+#: builtin/commit.c:1478
 msgid "detached HEAD"
 msgstr "đã rời khỏi HEAD"
 
-#: builtin/commit.c:1485
+#: builtin/commit.c:1481
 msgid " (root-commit)"
 msgstr " (root-commit)"
 
-#: builtin/commit.c:1578
+#: builtin/commit.c:1574
 msgid "suppress summary after successful commit"
 msgstr "không hiển thị tổng kết sau khi chuyển giao thành công"
 
-#: builtin/commit.c:1579
+#: builtin/commit.c:1575
 msgid "show diff in commit message template"
 msgstr "hiển thị sự khác biệt trong mẫu tin nhắn chuyển giao"
 
-#: builtin/commit.c:1581
+#: builtin/commit.c:1577
 msgid "Commit message options"
 msgstr "Các tùy chọn ghi chú commit"
 
-#: builtin/commit.c:1582 builtin/tag.c:601
+#: builtin/commit.c:1578 builtin/tag.c:601
 msgid "read message from file"
 msgstr "đọc chú thích từ tập tin"
 
-#: builtin/commit.c:1583
+#: builtin/commit.c:1579
 msgid "author"
 msgstr "tác giả"
 
-#: builtin/commit.c:1583
+#: builtin/commit.c:1579
 msgid "override author for commit"
 msgstr "ghi đè tác giả cho commit"
 
-#: builtin/commit.c:1584 builtin/gc.c:275
+#: builtin/commit.c:1580 builtin/gc.c:275
 msgid "date"
 msgstr "ngày tháng"
 
-#: builtin/commit.c:1584
+#: builtin/commit.c:1580
 msgid "override date for commit"
 msgstr "ghi đè ngày tháng cho lần chuyển giao"
 
-#: builtin/commit.c:1585 builtin/merge.c:218 builtin/notes.c:391
+#: builtin/commit.c:1581 builtin/merge.c:218 builtin/notes.c:391
 #: builtin/notes.c:554 builtin/tag.c:599
 msgid "message"
 msgstr "chú thích"
 
-#: builtin/commit.c:1585
+#: builtin/commit.c:1581
 msgid "commit message"
 msgstr "chú thích của lần chuyển giao"
 
-#: builtin/commit.c:1586
+#: builtin/commit.c:1582
 msgid "reuse and edit message from specified commit"
 msgstr "dùng lại các ghi chú từ lần chuyển giao đã cho nhưng có cho sửa chữa"
 
-#: builtin/commit.c:1587
+#: builtin/commit.c:1583
 msgid "reuse message from specified commit"
 msgstr "dùng lại các ghi chú từ lần chuyển giao đã cho"
 
-#: builtin/commit.c:1588
+#: builtin/commit.c:1584
 msgid "use autosquash formatted message to fixup specified commit"
 msgstr ""
 "dùng ghi chú có định dạng autosquash để sửa chữa lần chuyển giao đã chỉ ra"
 
-#: builtin/commit.c:1589
+#: builtin/commit.c:1585
 msgid "use autosquash formatted message to squash specified commit"
 msgstr ""
 "dùng lời nhắn có định dạng tự động nén để nén lại các lần chuyển giao đã chỉ "
 "ra"
 
-#: builtin/commit.c:1590
+#: builtin/commit.c:1586
 msgid "the commit is authored by me now (used with -C/-c/--amend)"
 msgstr ""
 "lần chuyển giao nhận tôi là tác giả (được dùng với tùy chọn -C/-c/--amend)"
 
-#: builtin/commit.c:1591 builtin/log.c:1191 builtin/revert.c:86
+#: builtin/commit.c:1587 builtin/log.c:1191 builtin/revert.c:86
 msgid "add Signed-off-by:"
 msgstr "(nên dùng) thêm dòng Signed-off-by:"
 
-#: builtin/commit.c:1592
+#: builtin/commit.c:1588
 msgid "use specified template file"
 msgstr "sử dụng tập tin mẫu đã cho"
 
-#: builtin/commit.c:1593
+#: builtin/commit.c:1589
 msgid "force edit of commit"
 msgstr "ép buộc sửa lần commit"
 
-#: builtin/commit.c:1594
+#: builtin/commit.c:1590
 msgid "default"
 msgstr "mặc định"
 
-#: builtin/commit.c:1594 builtin/tag.c:604
+#: builtin/commit.c:1590 builtin/tag.c:604
 msgid "how to strip spaces and #comments from message"
 msgstr "làm thế nào để cắt bỏ khoảng trắng và #ghichú từ mẩu tin nhắn"
 
-#: builtin/commit.c:1595
+#: builtin/commit.c:1591
 msgid "include status in commit message template"
 msgstr "bao gồm các trạng thái trong mẫu ghi chú chuyển giao"
 
-#: builtin/commit.c:1596 builtin/merge.c:225 builtin/revert.c:92
+#: builtin/commit.c:1592 builtin/merge.c:225 builtin/revert.c:92
 #: builtin/tag.c:605
 msgid "key-id"
 msgstr "mã-số-khóa"
 
-#: builtin/commit.c:1597 builtin/merge.c:226 builtin/revert.c:93
+#: builtin/commit.c:1593 builtin/merge.c:226 builtin/revert.c:93
 msgid "GPG sign commit"
 msgstr "ký lần chuyển giao dùng GPG"
 
-#: builtin/commit.c:1600
+#: builtin/commit.c:1596
 msgid "Commit contents options"
 msgstr "Các tùy nội dung ghi chú commit"
 
-#: builtin/commit.c:1601
+#: builtin/commit.c:1597
 msgid "commit all changed files"
 msgstr "chuyển giao tất cả các tập tin có thay đổi"
 
-#: builtin/commit.c:1602
+#: builtin/commit.c:1598
 msgid "add specified files to index for commit"
 msgstr "thêm các tập tin đã chỉ ra vào bảng mục lục để chuyển giao"
 
-#: builtin/commit.c:1603
+#: builtin/commit.c:1599
 msgid "interactively add files"
 msgstr "thêm các tập-tin bằng tương tác"
 
-#: builtin/commit.c:1604
+#: builtin/commit.c:1600
 msgid "interactively add changes"
 msgstr "thêm các thay đổi bằng tương tác"
 
-#: builtin/commit.c:1605
+#: builtin/commit.c:1601
 msgid "commit only specified files"
 msgstr "chỉ chuyển giao các tập tin đã chỉ ra"
 
-#: builtin/commit.c:1606
+#: builtin/commit.c:1602
 msgid "bypass pre-commit hook"
 msgstr "vòng qua móc (hook) pre-commit"
 
-#: builtin/commit.c:1607
+#: builtin/commit.c:1603
 msgid "show what would be committed"
 msgstr "hiển thị xem cái gì có thể được chuyển giao"
 
-#: builtin/commit.c:1618
+#: builtin/commit.c:1614
 msgid "amend previous commit"
 msgstr "“tu bổ” (amend) lần commit trước"
 
-#: builtin/commit.c:1619
+#: builtin/commit.c:1615
 msgid "bypass post-rewrite hook"
 msgstr "vòng qua móc (hook) post-rewrite"
 
-#: builtin/commit.c:1624
+#: builtin/commit.c:1620
 msgid "ok to record an empty change"
 msgstr "ok để ghi lại một thay đổi trống rỗng"
 
-#: builtin/commit.c:1626
+#: builtin/commit.c:1622
 msgid "ok to record a change with an empty message"
 msgstr "ok để ghi các thay đổi với lời nhắn trống rỗng"
 
-#: builtin/commit.c:1655
+#: builtin/commit.c:1651
 msgid "could not parse HEAD commit"
 msgstr "không thể phân tích commit (lần chuyển giao) HEAD"
 
-#: builtin/commit.c:1694 builtin/merge.c:519
+#: builtin/commit.c:1690 builtin/merge.c:519
 #, c-format
 msgid "could not open '%s' for reading"
 msgstr "không thể mở “%s” để đọc"
 
-#: builtin/commit.c:1701
+#: builtin/commit.c:1697
 #, c-format
 msgid "Corrupt MERGE_HEAD file (%s)"
 msgstr "Tập tin MERGE_HEAD sai hỏng (%s)"
 
-#: builtin/commit.c:1708
+#: builtin/commit.c:1704
 msgid "could not read MERGE_MODE"
 msgstr "không thể đọc MERGE_MODE"
 
-#: builtin/commit.c:1727
+#: builtin/commit.c:1723
 #, c-format
 msgid "could not read commit message: %s"
 msgstr "không thể đọc phần chú thích (message) của llần chuyển giao: %s"
 
-#: builtin/commit.c:1738
+#: builtin/commit.c:1734
 #, c-format
 msgid "Aborting commit; you did not edit the message.\n"
 msgstr ""
 "Đang bỏ qua việc chuyển giao; bạn đã không biên soạn phần chú thích "
 "(message).\n"
 
-#: builtin/commit.c:1743
+#: builtin/commit.c:1739
 #, c-format
 msgid "Aborting commit due to empty commit message.\n"
 msgstr "Bãi bỏ việc chuyển giao bởi vì phần chú thích của nó trống rỗng.\n"
 
-#: builtin/commit.c:1758 builtin/merge.c:851 builtin/merge.c:876
+#: builtin/commit.c:1754 builtin/merge.c:851 builtin/merge.c:876
 msgid "failed to write commit object"
 msgstr "gặp lỗi khi ghi đối tượng chuyển giao"
 
-#: builtin/commit.c:1791
+#: builtin/commit.c:1787
 msgid ""
 "Repository has been updated, but unable to write\n"
 "new_index file. Check that disk is not full and quota is\n"
 "not exceeded, and then \"git reset HEAD\" to recover."
 msgstr ""
 "Kho chứa đã được cập nhật, nhưng không thể ghi vào\n"
 "tập tin new_index (bảng mục lục mới). Hãy kiểm tra xem đĩa\n"
 "có bị đầy quá hay quota (hạn nghạch đĩa cứng) bị vượt quá,\n"
 "và sau đó \"git reset HEAD\" để khắc phục."
 
 #: builtin/config.c:8
-msgid "git config [options]"
-msgstr "git config [các-tùy-chọn]"
+msgid "git config [<options>]"
+msgstr "git config [<các-tùy-chọn>]"
 
 #: builtin/config.c:53
 msgid "Config file location"
 msgstr "Vị trí tập tin cấu hình"
 
 #: builtin/config.c:54
@@ -4952,18 +4986,18 @@
 
 #: builtin/count-objects.c:65
 msgid "print sizes in human readable format"
 msgstr "hiển thị kích cỡ theo định dạng dành cho người đọc"
 
 #: builtin/describe.c:17
-msgid "git describe [options] <commit-ish>*"
-msgstr "git describe [các-tùy-chọn] <commit-ish>*"
+msgid "git describe [<options>] [<commit-ish>...]"
+msgstr "git describe [<các-tùy-chọn>] <commit-ish>*"
 
 #: builtin/describe.c:18
-msgid "git describe [options] --dirty"
-msgstr "git describe [các-tùy-chọn] --dirty"
+msgid "git describe [<options>] --dirty"
+msgstr "git describe [<các-tùy-chọn>] --dirty"
 
 #: builtin/describe.c:217
 #, c-format
 msgid "annotated tag %s not available"
 msgstr "thẻ đã được ghi chú %s không sẵn để dùng"
 
@@ -5172,284 +5206,286 @@
 msgstr "Áp dụng refspec cho refs đã xuất"
 
 #: builtin/fast-export.c:999
 msgid "anonymize output"
 msgstr "kết xuất anonymize"
 
-#: builtin/fetch.c:20
+#: builtin/fetch.c:19
 msgid "git fetch [<options>] [<repository> [<refspec>...]]"
 msgstr "git fetch [<các-tùy-chọn>] [<kho-chứa> [<refspec>…]]"
 
-#: builtin/fetch.c:21
+#: builtin/fetch.c:20
 msgid "git fetch [<options>] <group>"
 msgstr "git fetch [<các-tùy-chọn>] [<nhóm>"
 
-#: builtin/fetch.c:22
+#: builtin/fetch.c:21
 msgid "git fetch --multiple [<options>] [(<repository> | <group>)...]"
 msgstr "git fetch --multiple [<các-tùy-chọn>] [(<kho> | <nhóm>)…]"
 
-#: builtin/fetch.c:23
+#: builtin/fetch.c:22
 msgid "git fetch --all [<options>]"
 msgstr "git fetch --all [<các-tùy-chọn>]"
 
-#: builtin/fetch.c:90
+#: builtin/fetch.c:89
 msgid "fetch from all remotes"
 msgstr "lấy về từ tất cả các máy chủ"
 
-#: builtin/fetch.c:92
+#: builtin/fetch.c:91
 msgid "append to .git/FETCH_HEAD instead of overwriting"
 msgstr "nối thêm vào .git/FETCH_HEAD thay vì ghi đè lên nó"
 
-#: builtin/fetch.c:94
+#: builtin/fetch.c:93
 msgid "path to upload pack on remote end"
 msgstr "đường dẫn đến gói tải lên trên máy chủ cuối"
 
-#: builtin/fetch.c:95
+#: builtin/fetch.c:94
 msgid "force overwrite of local branch"
 msgstr "ép buộc ghi đè lên nhánh nội bộ"
 
-#: builtin/fetch.c:97
+#: builtin/fetch.c:96
 msgid "fetch from multiple remotes"
 msgstr "lấy từ nhiều máy chủ cùng lúc"
 
-#: builtin/fetch.c:99
+#: builtin/fetch.c:98
 msgid "fetch all tags and associated objects"
 msgstr "lấy tất cả các thẻ cùng với các đối tượng liên quan đến nó"
 
-#: builtin/fetch.c:101
+#: builtin/fetch.c:100
 msgid "do not fetch all tags (--no-tags)"
 msgstr "không lấy tất cả các thẻ (--no-tags)"
 
-#: builtin/fetch.c:103
+#: builtin/fetch.c:102
 msgid "prune remote-tracking branches no longer on remote"
 msgstr ""
 "cắt cụt (prune) các nhánh “remote-tracking” không còn tồn tại trên máy chủ "
 "nữa"
 
-#: builtin/fetch.c:104
+#: builtin/fetch.c:103
 msgid "on-demand"
 msgstr "khi-cần"
 
-#: builtin/fetch.c:105
+#: builtin/fetch.c:104
 msgid "control recursive fetching of submodules"
 msgstr "điều khiển việc lấy về đệ quy trong các mô-đun-con"
 
-#: builtin/fetch.c:109
+#: builtin/fetch.c:108
 msgid "keep downloaded pack"
 msgstr "giữ lại gói đã tải về"
 
-#: builtin/fetch.c:111
+#: builtin/fetch.c:110
 msgid "allow updating of HEAD ref"
 msgstr "cho phép cập nhật th.chiếu HEAD"
 
-#: builtin/fetch.c:114
+#: builtin/fetch.c:113
 msgid "deepen history of shallow clone"
 msgstr "làm sâu hơn lịch sử của bản sao"
 
-#: builtin/fetch.c:116
+#: builtin/fetch.c:115
 msgid "convert to a complete repository"
 msgstr "chuyển đổi hoàn toàn sang kho git"
 
-#: builtin/fetch.c:118 builtin/log.c:1208
+#: builtin/fetch.c:117 builtin/log.c:1208
 msgid "dir"
 msgstr "tmục"
 
-#: builtin/fetch.c:119
+#: builtin/fetch.c:118
 msgid "prepend this to submodule path output"
 msgstr "soạn sẵn cái này cho kết xuất đường dẫn mô-đun-con"
 
-#: builtin/fetch.c:122
+#: builtin/fetch.c:121
 msgid "default mode for recursion"
 msgstr "chế độ mặc định cho đệ qui"
 
-#: builtin/fetch.c:124
+#: builtin/fetch.c:123
 msgid "accept refs that update .git/shallow"
 msgstr "chấp nhận tham chiếu cập nhật .git/shallow"
 
-#: builtin/fetch.c:125
+#: builtin/fetch.c:124
 msgid "refmap"
 msgstr "refmap"
 
-#: builtin/fetch.c:126
+#: builtin/fetch.c:125
 msgid "specify fetch refmap"
 msgstr "chỉ ra refmap cần lấy về"
 
-#: builtin/fetch.c:376
+#: builtin/fetch.c:375
 msgid "Couldn't find remote ref HEAD"
 msgstr "Không thể tìm thấy máy chủ cho tham chiếu HEAD"
 
-#: builtin/fetch.c:454
+#: builtin/fetch.c:455
 #, c-format
 msgid "object %s not found"
 msgstr "Không tìm thấy đối tượng %s"
 
-#: builtin/fetch.c:459
+#: builtin/fetch.c:460
 msgid "[up to date]"
 msgstr "[đã cập nhật]"
 
-#: builtin/fetch.c:473
+#: builtin/fetch.c:474
 #, c-format
 msgid "! %-*s %-*s -> %s  (can't fetch in current branch)"
 msgstr "! %-*s %-*s -> %s  (không thể fetch (lấy) về nhánh hiện hành)"
 
-#: builtin/fetch.c:474 builtin/fetch.c:560
+#: builtin/fetch.c:475 builtin/fetch.c:561
 msgid "[rejected]"
 msgstr "[Bị từ chối]"
 
-#: builtin/fetch.c:485
+#: builtin/fetch.c:486
 msgid "[tag update]"
 msgstr "[cập nhật thẻ]"
 
-#: builtin/fetch.c:487 builtin/fetch.c:522 builtin/fetch.c:540
+#: builtin/fetch.c:488 builtin/fetch.c:523 builtin/fetch.c:541
 msgid "  (unable to update local ref)"
 msgstr "  (không thể cập nhật tham chiếu nội bộ)"
 
-#: builtin/fetch.c:505
+#: builtin/fetch.c:506
 msgid "[new tag]"
 msgstr "[thẻ mới]"
 
-#: builtin/fetch.c:508
+#: builtin/fetch.c:509
 msgid "[new branch]"
 msgstr "[nhánh mới]"
 
-#: builtin/fetch.c:511
+#: builtin/fetch.c:512
 msgid "[new ref]"
 msgstr "[ref (tham chiếu) mới]"
 
-#: builtin/fetch.c:556
+#: builtin/fetch.c:557
 msgid "unable to update local ref"
 msgstr "không thể cập nhật tham chiếu nội bộ"
 
-#: builtin/fetch.c:556
+#: builtin/fetch.c:557
 msgid "forced update"
 msgstr "cưỡng bức cập nhật"
 
-#: builtin/fetch.c:562
+#: builtin/fetch.c:563
 msgid "(non-fast-forward)"
 msgstr "(non-fast-forward)"
 
-#: builtin/fetch.c:595 builtin/fetch.c:828
+#: builtin/fetch.c:596 builtin/fetch.c:829
 #, c-format
 msgid "cannot open %s: %s\n"
 msgstr "không thể mở %s: %s\n"
 
-#: builtin/fetch.c:604
+#: builtin/fetch.c:605
 #, c-format
 msgid "%s did not send all necessary objects\n"
 msgstr "%s đã không gửi tất cả các đối tượng cần thiết\n"
 
-#: builtin/fetch.c:622
+#: builtin/fetch.c:623
 #, c-format
 msgid "reject %s because shallow roots are not allowed to be updated"
 msgstr "từ chối %s bởi vì các gốc nông thì không được phép cập nhật"
 
-#: builtin/fetch.c:710 builtin/fetch.c:793
+#: builtin/fetch.c:711 builtin/fetch.c:794
 #, c-format
 msgid "From %.*s\n"
 msgstr "Từ %.*s\n"
 
-#: builtin/fetch.c:721
+#: builtin/fetch.c:722
 #, c-format
 msgid ""
 "some local refs could not be updated; try running\n"
 " 'git remote prune %s' to remove any old, conflicting branches"
 msgstr ""
 "một số tham chiếu nội bộ không thể được cập nhật; hãy thử chạy\n"
 " “git remote prune %s” để bỏ đi những nhánh cũ, hay bị xung đột"
 
-#: builtin/fetch.c:773
+#: builtin/fetch.c:774
 #, c-format
 msgid "   (%s will become dangling)"
 msgstr "   (%s sẽ trở thành không đầu (không được quản lý))"
 
-#: builtin/fetch.c:774
+#: builtin/fetch.c:775
 #, c-format
 msgid "   (%s has become dangling)"
 msgstr "   (%s đã trở thành không đầu (không được quản lý))"
 
-#: builtin/fetch.c:798
+#: builtin/fetch.c:799
 msgid "[deleted]"
 msgstr "[đã xóa]"
 
-#: builtin/fetch.c:799 builtin/remote.c:1060
+#: builtin/fetch.c:800 builtin/remote.c:1060
 msgid "(none)"
 msgstr "(không)"
 
-#: builtin/fetch.c:818
+#: builtin/fetch.c:819
 #, c-format
 msgid "Refusing to fetch into current branch %s of non-bare repository"
 msgstr ""
 "Từ chối việc lấy vào trong nhánh hiện tại %s của một kho chứa không phải kho "
 "trần (bare)"
 
-#: builtin/fetch.c:837
+#: builtin/fetch.c:838
 #, c-format
 msgid "Option \"%s\" value \"%s\" is not valid for %s"
 msgstr "Tùy chọn \"%s\" có giá trị \"%s\" là không hợp lệ cho %s"
 
-#: builtin/fetch.c:840
+#: builtin/fetch.c:841
 #, c-format
 msgid "Option \"%s\" is ignored for %s\n"
 msgstr "Tùy chọn \"%s\" bị bỏ qua với %s\n"
 
-#: builtin/fetch.c:896
+#: builtin/fetch.c:897
 #, c-format
 msgid "Don't know how to fetch from %s"
 msgstr "Không biết làm cách nào để lấy về từ %s"
 
-#: builtin/fetch.c:1058
+#: builtin/fetch.c:1059
 #, c-format
 msgid "Fetching %s\n"
 msgstr "Đang lấy “%s” về\n"
 
-#: builtin/fetch.c:1060 builtin/remote.c:90
+#: builtin/fetch.c:1061 builtin/remote.c:90
 #, c-format
 msgid "Could not fetch %s"
 msgstr "không thể “%s” về"
 
-#: builtin/fetch.c:1078
+#: builtin/fetch.c:1079
 msgid ""
 "No remote repository specified.  Please, specify either a URL or a\n"
 "remote name from which new revisions should be fetched."
 msgstr ""
 "Chưa chỉ ra kho chứa máy chủ.  Xin hãy chỉ định hoặc là URL hoặc\n"
 "tên máy chủ từ cái mà những điểm xét duyệt mới có thể được fetch (lấy về)."
 
-#: builtin/fetch.c:1101
+#: builtin/fetch.c:1102
 msgid "You need to specify a tag name."
 msgstr "Bạn phải định rõ tên thẻ."
 
-#: builtin/fetch.c:1143
+#: builtin/fetch.c:1144
 msgid "--depth and --unshallow cannot be used together"
 msgstr "tùy chọn --depth và --unshallow không thể sử dụng cùng với nhau"
 
-#: builtin/fetch.c:1145
+#: builtin/fetch.c:1146
 msgid "--unshallow on a complete repository does not make sense"
 msgstr "--unshallow trên kho hoàn chỉnh là không hợp lý"
 
-#: builtin/fetch.c:1168
+#: builtin/fetch.c:1169
 msgid "fetch --all does not take a repository argument"
 msgstr "lệnh lấy về \"fetch --all\" không lấy đối số kho chứa"
 
-#: builtin/fetch.c:1170
+#: builtin/fetch.c:1171
 msgid "fetch --all does not make sense with refspecs"
 msgstr "lệnh lấy về \"fetch --all\" không hợp lý với refspecs"
 
-#: builtin/fetch.c:1181
+#: builtin/fetch.c:1182
 #, c-format
 msgid "No such remote or remote group: %s"
 msgstr "không có nhóm máy chủ hay máy chủ như thế: %s"
 
-#: builtin/fetch.c:1189
+#: builtin/fetch.c:1190
 msgid "Fetching a group and specifying refspecs does not make sense"
 msgstr "Việc lấy về cả một nhóm và chỉ định refspecs không hợp lý"
 
 #: builtin/fmt-merge-msg.c:13
-msgid "git fmt-merge-msg [-m <message>] [--log[=<n>]|--no-log] [--file <file>]"
+msgid ""
+"git fmt-merge-msg [-m <message>] [--log[=<n>] | --no-log] [--file <file>]"
 msgstr ""
-"git fmt-merge-msg [-m <chú_thích>] [--log[=<n>]|--no-log] [--file <tập-tin>]"
+"git fmt-merge-msg [-m <chú_thích>] [--log[=<n>] | --no-log] [--file <tập-"
+"tin>]"
 
 #: builtin/fmt-merge-msg.c:662 builtin/fmt-merge-msg.c:665 builtin/grep.c:698
 #: builtin/merge.c:198 builtin/repack.c:178 builtin/repack.c:182
 #: builtin/show-branch.c:657 builtin/show-ref.c:178 builtin/tag.c:590
 #: parse-options.h:132 parse-options.h:239
 msgid "n"
@@ -5472,67 +5508,67 @@
 msgstr "dùng <văn bản thường> để bắt đầu ghi chú"
 
 #: builtin/fmt-merge-msg.c:671
 msgid "file to read from"
 msgstr "tập tin để đọc dữ liệu từ đó"
 
-#: builtin/for-each-ref.c:676
+#: builtin/for-each-ref.c:675
 msgid "unable to parse format"
 msgstr "không thể phân tích định dạng"
 
-#: builtin/for-each-ref.c:1064
-msgid "git for-each-ref [options] [<pattern>]"
-msgstr "git for-each-ref [các-tùy-chọn] [<mẫu>]"
+#: builtin/for-each-ref.c:1063
+msgid "git for-each-ref [<options>] [<pattern>]"
+msgstr "git for-each-ref [<các-tùy-chọn>] [<mẫu>]"
 
-#: builtin/for-each-ref.c:1079
+#: builtin/for-each-ref.c:1078
 msgid "quote placeholders suitably for shells"
 msgstr "trích dẫn để phù hợp cho hệ vỏ (shell)"
 
-#: builtin/for-each-ref.c:1081
+#: builtin/for-each-ref.c:1080
 msgid "quote placeholders suitably for perl"
 msgstr "trích dẫn để phù hợp cho perl"
 
-#: builtin/for-each-ref.c:1083
+#: builtin/for-each-ref.c:1082
 msgid "quote placeholders suitably for python"
 msgstr "trích dẫn để phù hợp cho python"
 
-#: builtin/for-each-ref.c:1085
+#: builtin/for-each-ref.c:1084
 msgid "quote placeholders suitably for Tcl"
 msgstr "trích dẫn để phù hợp cho Tcl"
 
-#: builtin/for-each-ref.c:1088
+#: builtin/for-each-ref.c:1087
 msgid "show only <n> matched refs"
 msgstr "hiển thị chỉ <n> tham chiếu khớp"
 
-#: builtin/for-each-ref.c:1089 builtin/replace.c:438
+#: builtin/for-each-ref.c:1088 builtin/replace.c:438
 msgid "format"
 msgstr "định dạng"
 
-#: builtin/for-each-ref.c:1089
+#: builtin/for-each-ref.c:1088
 msgid "format to use for the output"
 msgstr "định dạng sẽ dùng cho đầu ra"
 
-#: builtin/for-each-ref.c:1090
+#: builtin/for-each-ref.c:1089
 msgid "key"
 msgstr "khóa"
 
-#: builtin/for-each-ref.c:1091
+#: builtin/for-each-ref.c:1090
 msgid "field name to sort on"
 msgstr "tên trường cần sắp xếp"
 
-#: builtin/fsck.c:147 builtin/prune.c:136
+#: builtin/fsck.c:147 builtin/prune.c:137
 msgid "Checking connectivity"
 msgstr "Đang kiểm tra kết nối"
 
 #: builtin/fsck.c:540
 msgid "Checking object directories"
 msgstr "Đang kiểm tra các thư mục đối tượng"
 
 #: builtin/fsck.c:603
-msgid "git fsck [options] [<object>...]"
-msgstr "git fsck [các-tùy-chọn] [<đối-tượng>…]"
+msgid "git fsck [<options>] [<object>...]"
+msgstr "git fsck [<các-tùy-chọn>] [<đối-tượng>…]"
 
 #: builtin/fsck.c:609
 msgid "show unreachable objects"
 msgstr "hiển thị các đối tượng không thể đọc được"
 
 #: builtin/fsck.c:610
@@ -5573,14 +5609,14 @@
 
 #: builtin/fsck.c:669
 msgid "Checking objects"
 msgstr "Đang kiểm tra các đối tượng"
 
 #: builtin/gc.c:24
-msgid "git gc [options]"
-msgstr "git gc [các-tùy-chọn]"
+msgid "git gc [<options>]"
+msgstr "git gc [<các-tùy-chọn>]"
 
 #: builtin/gc.c:79
 #, c-format
 msgid "Invalid gc.pruneexpire: '%s'"
 msgstr "gc.pruneexpire không hợp lệ: “%s”"
 
@@ -5635,14 +5671,14 @@
 "There are too many unreachable loose objects; run 'git prune' to remove them."
 msgstr ""
 "Có quá nhiều đối tượng tự do không được dùng đến; hãy chạy lệnh “git prune” "
 "để xóa bỏ chúng đi."
 
 #: builtin/grep.c:23
-msgid "git grep [options] [-e] <pattern> [<rev>...] [[--] <path>...]"
-msgstr "git grep [các-tùy-chọn] [-e] <mẫu> [<rev>…] [[--] <đường-dẫn>…]"
+msgid "git grep [<options>] [-e] <pattern> [<rev>...] [[--] <path>...]"
+msgstr "git grep [<các-tùy-chọn>] [-e] <mẫu> [<rev>…] [[--] <đường-dẫn>…]"
 
 #: builtin/grep.c:218
 #, c-format
 msgid "grep: failed to create thread: %s"
 msgstr "grep: gặp lỗi tạo tuyến (thread): %s"
 
@@ -5676,14 +5712,14 @@
 
 #: builtin/grep.c:642
 msgid "search in both tracked and untracked files"
 msgstr "tìm kiếm các tập tin được và chưa được theo dõi dấu vết"
 
 #: builtin/grep.c:644
-msgid "search also in ignored files"
-msgstr "tìm cả trong các tập tin đã bị lờ đi"
+msgid "ignore files specified via '.gitignore'"
+msgstr "các tập tin bị bỏ qua được chỉ định thông qua “.gitignore”"
 
 #: builtin/grep.c:647
 msgid "show non-matching lines"
 msgstr "hiển thị những dòng không khớp với mẫu"
 
 #: builtin/grep.c:649
@@ -5864,23 +5900,23 @@
 #: builtin/grep.c:908
 msgid "both --cached and trees are given."
 msgstr "cả hai --cached và các cây phải được chỉ ra."
 
 #: builtin/hash-object.c:82
 msgid ""
-"git hash-object [-t <type>] [-w] [--path=<file>|--no-filters] [--stdin] [--] "
-"<file>..."
+"git hash-object [-t <type>] [-w] [--path=<file> | --no-filters] [--stdin] "
+"[--] <file>..."
 msgstr ""
-"git hash-object [-t <kiểu>] [-w] [--path=<tập-tin>|--no-filters] [--stdin] "
+"git hash-object [-t <kiểu>] [-w] [--path=<tập-tin> | --no-filters] [--stdin] "
 "[--] <tập-tin>…"
 
 #: builtin/hash-object.c:83
 msgid "git hash-object  --stdin-paths < <list-of-paths>"
 msgstr "git hash-object  --stdin-paths < <danh-sách-đường-dẫn>"
 
-#: builtin/hash-object.c:94 builtin/tag.c:610
+#: builtin/hash-object.c:94 builtin/tag.c:612
 msgid "type"
 msgstr "kiểu"
 
 #: builtin/hash-object.c:94
 msgid "object type"
 msgstr "kiểu đối tượng"
@@ -5924,14 +5960,14 @@
 
 #: builtin/help.c:46
 msgid "show info page"
 msgstr "hiện trang info"
 
 #: builtin/help.c:52
-msgid "git help [--all] [--guides] [--man|--web|--info] [command]"
-msgstr "git help [--all] [--guides] [--man|--web|--info] [lệnh]"
+msgid "git help [--all] [--guides] [--man | --web | --info] [<command>]"
+msgstr "git help [--all] [--guides] [--man | --web | --info] [<lệnh>]"
 
 #: builtin/help.c:64
 #, c-format
 msgid "unrecognized help format '%s'"
 msgstr "không nhận ra định dạng trợ giúp “%s”"
 
@@ -6131,14 +6167,14 @@
 #: builtin/index-pack.c:686 builtin/index-pack.c:692 builtin/index-pack.c:715
 #: builtin/index-pack.c:749 builtin/index-pack.c:758
 #, c-format
 msgid "SHA1 COLLISION FOUND WITH %s !"
 msgstr "SỰ VA CHẠM SHA1 ĐÃ XẢY RA VỚI %s!"
 
-#: builtin/index-pack.c:689 builtin/pack-objects.c:164
-#: builtin/pack-objects.c:256
+#: builtin/index-pack.c:689 builtin/pack-objects.c:162
+#: builtin/pack-objects.c:254
 #, c-format
 msgid "unable to read %s"
 msgstr "không thể đọc %s"
 
 #: builtin/index-pack.c:755
 #, c-format
@@ -6218,101 +6254,101 @@
 #: builtin/index-pack.c:1195
 #, c-format
 msgid "pack has %d unresolved delta"
 msgid_plural "pack has %d unresolved deltas"
 msgstr[0] "gói có %d delta chưa được giải quyết"
 
-#: builtin/index-pack.c:1220
+#: builtin/index-pack.c:1219
 #, c-format
 msgid "unable to deflate appended object (%d)"
 msgstr "không thể xả nén đối tượng nối thêm (%d)"
 
-#: builtin/index-pack.c:1299
+#: builtin/index-pack.c:1298
 #, c-format
 msgid "local object %s is corrupt"
 msgstr "đối tượng nội bộ %s bị hỏng"
 
-#: builtin/index-pack.c:1323
+#: builtin/index-pack.c:1322
 msgid "error while closing pack file"
 msgstr "gặp lỗi trong khi đóng tập tin gói"
 
-#: builtin/index-pack.c:1336
+#: builtin/index-pack.c:1335
 #, c-format
 msgid "cannot write keep file '%s'"
 msgstr "không thể ghi tập tin giữ lại “%s”"
 
-#: builtin/index-pack.c:1344
+#: builtin/index-pack.c:1343
 #, c-format
 msgid "cannot close written keep file '%s'"
 msgstr "không thể đóng tập tin giữ lại đã được ghi “%s”"
 
-#: builtin/index-pack.c:1357
+#: builtin/index-pack.c:1356
 msgid "cannot store pack file"
 msgstr "không thể lưu tập tin gói"
 
-#: builtin/index-pack.c:1368
+#: builtin/index-pack.c:1367
 msgid "cannot store index file"
 msgstr "không thể lưu trữ tập tin ghi mục lục"
 
-#: builtin/index-pack.c:1401
+#: builtin/index-pack.c:1400
 #, c-format
 msgid "bad pack.indexversion=%<PRIu32>"
 msgstr "sai pack.indexversion=%<PRIu32>"
 
-#: builtin/index-pack.c:1407
+#: builtin/index-pack.c:1406
 #, c-format
 msgid "invalid number of threads specified (%d)"
 msgstr "số tuyến chỉ ra không hợp lệ (%d)"
 
-#: builtin/index-pack.c:1411 builtin/index-pack.c:1590
+#: builtin/index-pack.c:1410 builtin/index-pack.c:1589
 #, c-format
 msgid "no threads support, ignoring %s"
 msgstr "không hỗ trợ đa tuyến, bỏ qua %s"
 
-#: builtin/index-pack.c:1469
+#: builtin/index-pack.c:1468
 #, c-format
 msgid "Cannot open existing pack file '%s'"
 msgstr "Không thể mở tập tin gói đã sẵn có “%s”"
 
-#: builtin/index-pack.c:1471
+#: builtin/index-pack.c:1470
 #, c-format
 msgid "Cannot open existing pack idx file for '%s'"
 msgstr "Không thể mở tập tin idx của gói cho “%s”"
 
-#: builtin/index-pack.c:1518
+#: builtin/index-pack.c:1517
 #, c-format
 msgid "non delta: %d object"
 msgid_plural "non delta: %d objects"
 msgstr[0] "không delta: %d đối tượng"
 
-#: builtin/index-pack.c:1525
+#: builtin/index-pack.c:1524
 #, c-format
 msgid "chain length = %d: %lu object"
 msgid_plural "chain length = %d: %lu objects"
 msgstr[0] "chiều dài xích = %d: %lu đối tượng"
 
-#: builtin/index-pack.c:1554
+#: builtin/index-pack.c:1553
 msgid "Cannot come back to cwd"
 msgstr "Không thể quay lại cwd"
 
-#: builtin/index-pack.c:1602 builtin/index-pack.c:1605
-#: builtin/index-pack.c:1617 builtin/index-pack.c:1621
+#: builtin/index-pack.c:1601 builtin/index-pack.c:1604
+#: builtin/index-pack.c:1616 builtin/index-pack.c:1620
 #, c-format
 msgid "bad %s"
 msgstr "%s sai"
 
-#: builtin/index-pack.c:1635
+#: builtin/index-pack.c:1634
 msgid "--fix-thin cannot be used without --stdin"
 msgstr "--fix-thin không thể được dùng mà không có --stdin"
 
-#: builtin/index-pack.c:1639 builtin/index-pack.c:1648
+#: builtin/index-pack.c:1638 builtin/index-pack.c:1647
 #, c-format
 msgid "packfile name '%s' does not end with '.pack'"
 msgstr "tên tập tin tập tin gói “%s” không được kết thúc bằng đuôi “.pack”"
 
-#: builtin/index-pack.c:1656
+#: builtin/index-pack.c:1655
 msgid "--verify with no packfile name given"
 msgstr "dùng tùy chọn --verify mà không đưa ra tên packfile"
 
 #: builtin/init-db.c:35
 #, c-format
 msgid "Could not make %s writable by group"
@@ -6417,14 +6453,14 @@
 #: builtin/init-db.c:428
 msgid " shared"
 msgstr " đã chia sẻ"
 
 #: builtin/init-db.c:475
 msgid ""
-"git init [-q | --quiet] [--bare] [--template=<template-directory>] [--"
-"shared[=<permissions>]] [directory]"
+"git init [-q | --quiet] [--bare] [--template=<template-directory>] [--shared"
+"[=<permissions>]] [<directory>]"
 msgstr ""
 "git init [-q | --quiet] [--bare] [--template=<thư-mục-tạm>] [--shared[=<các-"
 "quyền>]] [thư-mục]"
 
 #: builtin/init-db.c:498
 msgid "permissions"
@@ -6484,14 +6520,14 @@
 
 #: builtin/log.c:41
 msgid "git log [<options>] [<revision range>] [[--] <path>...]"
 msgstr "git log [<các-tùy-chọn>] [<vùng xem xét>] [[--] <đường-dẫn>…]"
 
 #: builtin/log.c:42
-msgid "git show [options] <object>..."
-msgstr "git show [các-tùy-chọn] <đối-tượng>…"
+msgid "git show [<options>] <object>..."
+msgstr "git show [<các-tùy-chọn>] <đối-tượng>…"
 
 #: builtin/log.c:81
 #, c-format
 msgid "invalid --decorate option: %s"
 msgstr "tùy chọn--decorate không hợp lệ: %s"
 
@@ -6563,14 +6599,14 @@
 #: builtin/log.c:998
 #, c-format
 msgid "insane in-reply-to: %s"
 msgstr "in-reply-to điên rồ: %s"
 
 #: builtin/log.c:1026
-msgid "git format-patch [options] [<since> | <revision range>]"
-msgstr "git format-patch [các-tùy-chọn] [<kể-từ> | <vùng-xem-xét>]"
+msgid "git format-patch [<options>] [<since> | <revision-range>]"
+msgstr "git format-patch [<các-tùy-chọn>] [<kể-từ> | <vùng-xem-xét>]"
 
 #: builtin/log.c:1071
 msgid "Two output directories?"
 msgstr "Hai thư mục kết xuất?"
 
 #: builtin/log.c:1186
@@ -6763,104 +6799,104 @@
 
 #: builtin/log.c:1651 builtin/log.c:1653 builtin/log.c:1665
 #, c-format
 msgid "Unknown commit %s"
 msgstr "Không hiểu lần chuyển giao %s"
 
-#: builtin/ls-files.c:401
-msgid "git ls-files [options] [<file>...]"
-msgstr "git ls-files [các-tùy-chọn] [<tập-tin>…]"
+#: builtin/ls-files.c:358
+msgid "git ls-files [<options>] [<file>...]"
+msgstr "git ls-files [<các-tùy-chọn>] [<tập-tin>…]"
 
-#: builtin/ls-files.c:458
+#: builtin/ls-files.c:415
 msgid "identify the file status with tags"
 msgstr "nhận dạng các trạng thái tập tin với thẻ"
 
-#: builtin/ls-files.c:460
+#: builtin/ls-files.c:417
 msgid "use lowercase letters for 'assume unchanged' files"
 msgstr ""
 "dùng chữ cái viết thường cho các tập tin “assume unchanged” (giả định không "
 "thay đổi)"
 
-#: builtin/ls-files.c:462
+#: builtin/ls-files.c:419
 msgid "show cached files in the output (default)"
 msgstr "hiển thị các tập tin được nhớ tạm vào đầu ra (mặc định)"
 
-#: builtin/ls-files.c:464
+#: builtin/ls-files.c:421
 msgid "show deleted files in the output"
 msgstr "hiển thị các tập tin đã xóa trong kết xuất"
 
-#: builtin/ls-files.c:466
+#: builtin/ls-files.c:423
 msgid "show modified files in the output"
 msgstr "hiển thị các tập tin đã bị sửa đổi ra kết xuất"
 
-#: builtin/ls-files.c:468
+#: builtin/ls-files.c:425
 msgid "show other files in the output"
 msgstr "hiển thị các tập tin khác trong kết xuất"
 
-#: builtin/ls-files.c:470
+#: builtin/ls-files.c:427
 msgid "show ignored files in the output"
 msgstr "hiển thị các tập tin bị bỏ qua trong kết xuất"
 
-#: builtin/ls-files.c:473
+#: builtin/ls-files.c:430
 msgid "show staged contents' object name in the output"
 msgstr "hiển thị tên đối tượng của nội dung được đặt lên bệ phóng ra kết xuất"
 
-#: builtin/ls-files.c:475
+#: builtin/ls-files.c:432
 msgid "show files on the filesystem that need to be removed"
 msgstr "hiển thị các tập tin trên hệ thống tập tin mà nó cần được gỡ bỏ"
 
-#: builtin/ls-files.c:477
+#: builtin/ls-files.c:434
 msgid "show 'other' directories' names only"
 msgstr "chỉ hiển thị tên của các thư mục “khác”"
 
-#: builtin/ls-files.c:480
+#: builtin/ls-files.c:437
 msgid "don't show empty directories"
 msgstr "không hiển thị thư mục rỗng"
 
-#: builtin/ls-files.c:483
+#: builtin/ls-files.c:440
 msgid "show unmerged files in the output"
 msgstr "hiển thị các tập tin chưa hòa trộn trong kết xuất"
 
-#: builtin/ls-files.c:485
+#: builtin/ls-files.c:442
 msgid "show resolve-undo information"
 msgstr "hiển thị thông tin resolve-undo"
 
-#: builtin/ls-files.c:487
+#: builtin/ls-files.c:444
 msgid "skip files matching pattern"
 msgstr "bỏ qua những tập tin khớp với một mẫu"
 
-#: builtin/ls-files.c:490
+#: builtin/ls-files.c:447
 msgid "exclude patterns are read from <file>"
 msgstr "mẫu loại trừ được đọc từ <tập tin>"
 
-#: builtin/ls-files.c:493
+#: builtin/ls-files.c:450
 msgid "read additional per-directory exclude patterns in <file>"
 msgstr "đọc thêm các mẫu ngoại trừ mỗi thư mục trong <tập tin>"
 
-#: builtin/ls-files.c:495
+#: builtin/ls-files.c:452
 msgid "add the standard git exclusions"
 msgstr "thêm loại trừ tiêu chuẩn kiểu git"
 
-#: builtin/ls-files.c:498
+#: builtin/ls-files.c:455
 msgid "make the output relative to the project top directory"
 msgstr "làm cho kết xuất liên quan đến thư mục ở mức cao nhất (gốc) của dự án"
 
-#: builtin/ls-files.c:501
+#: builtin/ls-files.c:458
 msgid "if any <file> is not in the index, treat this as an error"
 msgstr "nếu <tập tin> bất kỳ không ở trong bảng mục lục, xử lý nó như một lỗi"
 
-#: builtin/ls-files.c:502
+#: builtin/ls-files.c:459
 msgid "tree-ish"
 msgstr "tree-ish"
 
-#: builtin/ls-files.c:503
+#: builtin/ls-files.c:460
 msgid "pretend that paths removed since <tree-ish> are still present"
 msgstr ""
 "giả định rằng các đường dẫn đã bị gỡ bỏ kể từ <tree-ish> nay vẫn hiện diện"
 
-#: builtin/ls-files.c:505
+#: builtin/ls-files.c:462
 msgid "show debugging data"
 msgstr "hiển thị dữ liệu gỡ lỗi"
 
 #: builtin/ls-tree.c:28
 msgid "git ls-tree [<options>] <tree-ish> [<path>...]"
 msgstr "git ls-tree [<các-tùy-chọn>] <tree-ish> [<đường-dẫn>…]"
@@ -6895,18 +6931,18 @@
 
 #: builtin/ls-tree.c:144
 msgid "list entire tree; not just current directory (implies --full-name)"
 msgstr "liệt kê cây mục tin; không chỉ thư mục hiện hành (ngụ ý --full-name)"
 
 #: builtin/merge.c:45
-msgid "git merge [options] [<commit>...]"
-msgstr "git merge [các-tùy-chọn] [<commit>…]"
+msgid "git merge [<options>] [<commit>...]"
+msgstr "git merge [<các-tùy-chọn>] [<commit>…]"
 
 #: builtin/merge.c:46
-msgid "git merge [options] <msg> HEAD <commit>"
-msgstr "git merge [các-tùy-chọn] <tin-nhắn> HEAD <commit>"
+msgid "git merge [<options>] <msg> HEAD <commit>"
+msgstr "git merge [<các-tùy-chọn>] <tin-nhắn> HEAD <commit>"
 
 #: builtin/merge.c:47
 msgid "git merge --abort"
 msgstr "git merge --abort"
 
 #: builtin/merge.c:100
@@ -7140,13 +7176,13 @@
 msgstr ""
 "Bạn chưa kết thúc việc hòa trộn (MERGE_HEAD vẫn tồn tại).\n"
 "Hãy chuyển giao các thay đổi trước khi bạn có thể hòa trộn."
 
 #: builtin/merge.c:1141 git-pull.sh:34
 msgid "You have not concluded your merge (MERGE_HEAD exists)."
-msgstr "Bạn chưa kết thúc việc hòa trộng (MERGE_HEAD vẫn tồn tại)."
+msgstr "Bạn chưa kết thúc việc hòa trộn (MERGE_HEAD vẫn tồn tại)."
 
 #: builtin/merge.c:1145
 msgid ""
 "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
@@ -7254,18 +7290,18 @@
 msgid "Automatic merge went well; stopped before committing as requested\n"
 msgstr ""
 "Hòa trộn tự động đã trở nên tốt; bị dừng trước khi việc chuyển giao được yêu "
 "cầu\n"
 
 #: builtin/merge-base.c:29
-msgid "git merge-base [-a|--all] <commit> <commit>..."
-msgstr "git merge-base [-a|--all] <commit> <lần_chuyển_giao>…"
+msgid "git merge-base [-a | --all] <commit> <commit>..."
+msgstr "git merge-base [-a | --all] <lần_chuyển_giao> <lần_chuyển_giao>…"
 
 #: builtin/merge-base.c:30
-msgid "git merge-base [-a|--all] --octopus <commit>..."
-msgstr "git merge-base [-a|--all] --octopus <lần_chuyển_giao>…"
+msgid "git merge-base [-a | --all] --octopus <commit>..."
+msgstr "git merge-base [-a | --all] --octopus <lần_chuyển_giao>…"
 
 #: builtin/merge-base.c:31
 msgid "git merge-base --independent <commit>..."
 msgstr "git merge-base --independent <lần_chuyển_giao>…"
 
 #: builtin/merge-base.c:32
@@ -7295,17 +7331,17 @@
 #: builtin/merge-base.c:222
 msgid "find where <commit> forked from reflog of <ref>"
 msgstr "tìm xem <commit> được rẽ nhánh ở đâu từ reflog của <th.chiếu>"
 
 #: builtin/merge-file.c:8
 msgid ""
-"git merge-file [options] [-L name1 [-L orig [-L name2]]] file1 orig_file "
-"file2"
+"git merge-file [<options>] [-L <name1> [-L <orig> [-L <name2>]]] <file1> "
+"<orig-file> <file2>"
 msgstr ""
-"git merge-file [các-tùy-chọn] [-L tên1 [-L gốc [-L tên2]]] tập-tin1 tập-tin-"
-"gốc tập-tin2"
+"git merge-file [<các-tùy-chọn>] [-L <tên1> [-L <gốc> [-L <tên2>]]] <tập-"
+"tin1> <tập-tin-gốc> <tập-tin2>"
 
 #: builtin/merge-file.c:33
 msgid "send results to standard output"
 msgstr "gửi kết quả vào đầu ra tiêu chuẩn"
 
 #: builtin/merge-file.c:34
@@ -7330,13 +7366,13 @@
 
 #: builtin/merge-file.c:43
 msgid "do not warn about conflicts"
 msgstr "không cảnh báo về các xung đột xảy ra"
 
 #: builtin/merge-file.c:45
-msgid "set labels for file1/orig_file/file2"
+msgid "set labels for file1/orig-file/file2"
 msgstr "đặt nhãn cho tập-tin-1/tập-tin-gốc/tập-tin-2"
 
 #: builtin/mktree.c:64
 msgid "git mktree [-z] [--missing] [--batch]"
 msgstr "git mktree [-z] [--missing] [--batch]"
 
@@ -7350,14 +7386,14 @@
 
 #: builtin/mktree.c:152
 msgid "allow creation of more than one tree"
 msgstr "cho phép tạo nhiều hơn một cây"
 
 #: builtin/mv.c:15
-msgid "git mv [options] <source>... <destination>"
-msgstr "git mv [các-tùy-chọn] <nguồn>… <đích>"
+msgid "git mv [<options>] <source>... <destination>"
+msgstr "git mv [<các-tùy-chọn>] <nguồn>… <đích>"
 
 #: builtin/mv.c:69
 #, c-format
 msgid "Directory %s is in index and no submodule?"
 msgstr "Thư mục “%s” có ở trong chỉ mục mà không có mô-đun con?"
 
@@ -7437,28 +7473,28 @@
 
 #: builtin/mv.c:253
 #, c-format
 msgid "Renaming %s to %s\n"
 msgstr "Đổi tên %s thành %s\n"
 
-#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:355
+#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:359
 #, c-format
 msgid "renaming '%s' failed"
 msgstr "gặp lỗi khi đổi tên “%s”"
 
 #: builtin/name-rev.c:255
-msgid "git name-rev [options] <commit>..."
-msgstr "git name-rev [các-tùy-chọn] <commit>…"
+msgid "git name-rev [<options>] <commit>..."
+msgstr "git name-rev [<các-tùy-chọn>] <commit>…"
 
 #: builtin/name-rev.c:256
-msgid "git name-rev [options] --all"
-msgstr "git name-rev [các-tùy-chọn] --all"
+msgid "git name-rev [<options>] --all"
+msgstr "git name-rev [<các-tùy-chọn>] --all"
 
 #: builtin/name-rev.c:257
-msgid "git name-rev [options] --stdin"
-msgstr "git name-rev [các-tùy-chọn] --stdin"
+msgid "git name-rev [<options>] --stdin"
+msgstr "git name-rev [<các-tùy-chọn>] --stdin"
 
 #: builtin/name-rev.c:309
 msgid "print only names (no SHA-1)"
 msgstr "chỉ hiển thị tên (không SHA-1)"
 
 #: builtin/name-rev.c:310
@@ -7484,68 +7520,68 @@
 
 #: builtin/name-rev.c:322
 msgid "dereference tags in the input (internal use)"
 msgstr "bãi bỏ tham chiếu các thẻ trong đầu vào (dùng nội bộ)"
 
 #: builtin/notes.c:24
-msgid "git notes [--ref <notes_ref>] [list [<object>]]"
-msgstr "git notes [--ref <notes_ref>] [list [<đối-tượng>]]"
+msgid "git notes [--ref <notes-ref>] [list [<object>]]"
+msgstr "git notes [--ref <notes-ref>] [list [<đối-tượng>]]"
 
 #: builtin/notes.c:25
 msgid ""
-"git notes [--ref <notes_ref>] add [-f] [--allow-empty] [-m <msg> | -F <file> "
+"git notes [--ref <notes-ref>] add [-f] [--allow-empty] [-m <msg> | -F <file> "
 "| (-c | -C) <object>] [<object>]"
 msgstr ""
-"git notes [--ref <notes_ref>] add [-f] [--allow-empty] [-m <lời-nhắn> | -F "
+"git notes [--ref <notes-ref>] add [-f] [--allow-empty] [-m <lời-nhắn> | -F "
 "<tập-tin> | (-c | -C) <đối-tượng>] [<đối-tượng>]"
 
 #: builtin/notes.c:26
-msgid "git notes [--ref <notes_ref>] copy [-f] <from-object> <to-object>"
-msgstr "git notes [--ref <notes_ref>] copy [-f] <từ-đối-tượng> <đến-đối-tượng>"
+msgid "git notes [--ref <notes-ref>] copy [-f] <from-object> <to-object>"
+msgstr "git notes [--ref <notes-ref>] copy [-f] <từ-đối-tượng> <đến-đối-tượng>"
 
 #: builtin/notes.c:27
 msgid ""
-"git notes [--ref <notes_ref>] append [--allow-empty] [-m <msg> | -F <file> | "
+"git notes [--ref <notes-ref>] append [--allow-empty] [-m <msg> | -F <file> | "
 "(-c | -C) <object>] [<object>]"
 msgstr ""
-"git notes [--ref <notes_ref>] append [--allow-empty] [-m <lời-nhắn> | -F "
+"git notes [--ref <notes-ref>] append [--allow-empty] [-m <lời-nhắn> | -F "
 "<tập-tin> | (-c | -C) <đối-tượng>] [<đối-tượng>]"
 
 #: builtin/notes.c:28
-msgid "git notes [--ref <notes_ref>] edit [--allow-empty] [<object>]"
-msgstr "git notes [--ref <notes_ref>] edit [--allow-empty] [<đối-tượng>]"
+msgid "git notes [--ref <notes-ref>] edit [--allow-empty] [<object>]"
+msgstr "git notes [--ref <notes-ref>] edit [--allow-empty] [<đối-tượng>]"
 
 #: builtin/notes.c:29
-msgid "git notes [--ref <notes_ref>] show [<object>]"
-msgstr "git notes [--ref <notes_ref>] show [<đối-tượng>]"
+msgid "git notes [--ref <notes-ref>] show [<object>]"
+msgstr "git notes [--ref <notes-ref>] show [<đối-tượng>]"
 
 #: builtin/notes.c:30
 msgid ""
-"git notes [--ref <notes_ref>] merge [-v | -q] [-s <strategy> ] <notes_ref>"
+"git notes [--ref <notes-ref>] merge [-v | -q] [-s <strategy>] <notes-ref>"
 msgstr ""
-"git notes [--ref <notes_ref>] merge [-v | -q] [-s <chiến-lược> ] <notes_ref>"
+"git notes [--ref <notes-ref>] merge [-v | -q] [-s <chiến-lược> ] <notes-ref>"
 
 #: builtin/notes.c:31
 msgid "git notes merge --commit [-v | -q]"
 msgstr "git notes merge --commit [-v | -q]"
 
 #: builtin/notes.c:32
 msgid "git notes merge --abort [-v | -q]"
 msgstr "git notes merge --abort [-v | -q]"
 
 #: builtin/notes.c:33
-msgid "git notes [--ref <notes_ref>] remove [<object>...]"
-msgstr "git notes [--ref <notes_ref>] remove [<đối-tượng>…]"
+msgid "git notes [--ref <notes-ref>] remove [<object>...]"
+msgstr "git notes [--ref <notes-ref>] remove [<đối-tượng>…]"
 
 #: builtin/notes.c:34
-msgid "git notes [--ref <notes_ref>] prune [-n | -v]"
-msgstr "git notes [--ref <notes_ref>] prune [-n | -v]"
+msgid "git notes [--ref <notes-ref>] prune [-n | -v]"
+msgstr "git notes [--ref <notes-ref>] prune [-n | -v]"
 
 #: builtin/notes.c:35
-msgid "git notes [--ref <notes_ref>] get-ref"
-msgstr "git notes [--ref <notes_ref>] get-ref"
+msgid "git notes [--ref <notes-ref>] get-ref"
+msgstr "git notes [--ref <notes-ref>] get-ref"
 
 #: builtin/notes.c:40
 msgid "git notes [list [<object>]]"
 msgstr "git notes [list [<đối tượng>]]"
 
 #: builtin/notes.c:45
@@ -7570,14 +7606,14 @@
 
 #: builtin/notes.c:66
 msgid "git notes show [<object>]"
 msgstr "git notes show [<đối tượng>]"
 
 #: builtin/notes.c:71
-msgid "git notes merge [<options>] <notes_ref>"
-msgstr "git notes merge [<các-tùy-chọn>] <notes_ref>"
+msgid "git notes merge [<options>] <notes-ref>"
+msgstr "git notes merge [<các-tùy-chọn>] <notes-ref>"
 
 #: builtin/notes.c:72
 msgid "git notes merge --commit [<options>]"
 msgstr "git notes merge --commit [<các-tùy-chọn>]"
 
 #: builtin/notes.c:73
@@ -7810,14 +7846,14 @@
 
 #: builtin/notes.c:953
 msgid "notes-ref"
 msgstr "notes-ref"
 
 #: builtin/notes.c:954
-msgid "use notes from <notes_ref>"
-msgstr "dùng “notes” từ <notes_ref>"
+msgid "use notes from <notes-ref>"
+msgstr "dùng “notes” từ <notes-ref>"
 
 #: builtin/notes.c:989 builtin/remote.c:1621
 #, c-format
 msgid "Unknown subcommand: %s"
 msgstr "Không hiểu câu lệnh con: %s"
 
@@ -7830,205 +7866,205 @@
 #: builtin/pack-objects.c:29
 msgid "git pack-objects [options...] base-name [< ref-list | < object-list]"
 msgstr ""
 "git pack-objects [các-tùy-chọn…] base-name [< danh-sách-ref | < danh-sách-"
 "đối-tượng]"
 
-#: builtin/pack-objects.c:177 builtin/pack-objects.c:180
+#: builtin/pack-objects.c:175 builtin/pack-objects.c:178
 #, c-format
 msgid "deflate error (%d)"
 msgstr "lỗi giải nén (%d)"
 
-#: builtin/pack-objects.c:773
+#: builtin/pack-objects.c:771
 msgid "Writing objects"
 msgstr "Đang ghi lại các đối tượng"
 
-#: builtin/pack-objects.c:1015
+#: builtin/pack-objects.c:1013
 msgid "disabling bitmap writing, as some objects are not being packed"
 msgstr "tắt ghi bitmap, như vậy một số đối tượng sẽ không được đóng gói"
 
-#: builtin/pack-objects.c:2175
+#: builtin/pack-objects.c:2173
 msgid "Compressing objects"
 msgstr "Đang nén các đối tượng"
 
-#: builtin/pack-objects.c:2572
+#: builtin/pack-objects.c:2570
 #, c-format
 msgid "unsupported index version %s"
 msgstr "phiên bản mục lục không được hỗ trợ %s"
 
-#: builtin/pack-objects.c:2576
+#: builtin/pack-objects.c:2574
 #, c-format
 msgid "bad index version '%s'"
 msgstr "phiên bản mục lục sai “%s”"
 
-#: builtin/pack-objects.c:2599
+#: builtin/pack-objects.c:2597
 #, c-format
 msgid "option %s does not accept negative form"
 msgstr "tùy chọn %s không chấp nhận dạng thức âm"
 
-#: builtin/pack-objects.c:2603
+#: builtin/pack-objects.c:2601
 #, c-format
 msgid "unable to parse value '%s' for option %s"
 msgstr "không thể phân tích giá trị “%s” cho tùy chọn %s"
 
-#: builtin/pack-objects.c:2623
+#: builtin/pack-objects.c:2621
 msgid "do not show progress meter"
 msgstr "không hiển thị bộ đo tiến trình"
 
-#: builtin/pack-objects.c:2625
+#: builtin/pack-objects.c:2623
 msgid "show progress meter"
 msgstr "hiển thị bộ đo tiến trình"
 
-#: builtin/pack-objects.c:2627
+#: builtin/pack-objects.c:2625
 msgid "show progress meter during object writing phase"
 msgstr "hiển thị bộ đo tiến triển trong suốt pha ghi đối tượng"
 
-#: builtin/pack-objects.c:2630
+#: builtin/pack-objects.c:2628
 msgid "similar to --all-progress when progress meter is shown"
 msgstr "tương tự --all-progress khi bộ đo tiến trình được xuất hiện"
 
-#: builtin/pack-objects.c:2631
+#: builtin/pack-objects.c:2629
 msgid "version[,offset]"
 msgstr "phiên bản[,offset]"
 
-#: builtin/pack-objects.c:2632
+#: builtin/pack-objects.c:2630
 msgid "write the pack index file in the specified idx format version"
 msgstr "ghi tập tin bảng mục lục gói (pack) ở phiên bản định dạng idx đã cho"
 
-#: builtin/pack-objects.c:2635
+#: builtin/pack-objects.c:2633
 msgid "maximum size of each output pack file"
 msgstr "kcíh thước tối đa cho tập tin gói được tạo"
 
-#: builtin/pack-objects.c:2637
+#: builtin/pack-objects.c:2635
 msgid "ignore borrowed objects from alternate object store"
 msgstr "bỏ qua các đối tượng vay mượn từ kho đối tượng thay thế"
 
-#: builtin/pack-objects.c:2639
+#: builtin/pack-objects.c:2637
 msgid "ignore packed objects"
 msgstr "bỏ qua các đối tượng đóng gói"
 
-#: builtin/pack-objects.c:2641
+#: builtin/pack-objects.c:2639
 msgid "limit pack window by objects"
 msgstr "giới hạn cửa sổ đóng gói theo đối tượng"
 
-#: builtin/pack-objects.c:2643
+#: builtin/pack-objects.c:2641
 msgid "limit pack window by memory in addition to object limit"
 msgstr "giới hạn cửa sổ đóng gói theo bộ nhớ cộng thêm với giới hạn đối tượng"
 
-#: builtin/pack-objects.c:2645
+#: builtin/pack-objects.c:2643
 msgid "maximum length of delta chain allowed in the resulting pack"
 msgstr "độ dài tối đa của chuỗi móc xích “delta” được phép trong gói kết quả"
 
-#: builtin/pack-objects.c:2647
+#: builtin/pack-objects.c:2645
 msgid "reuse existing deltas"
 msgstr "dùng lại các delta sẵn có"
 
-#: builtin/pack-objects.c:2649
+#: builtin/pack-objects.c:2647
 msgid "reuse existing objects"
 msgstr "dùng lại các đối tượng sẵn có"
 
-#: builtin/pack-objects.c:2651
+#: builtin/pack-objects.c:2649
 msgid "use OFS_DELTA objects"
 msgstr "dùng các đối tượng OFS_DELTA"
 
-#: builtin/pack-objects.c:2653
+#: builtin/pack-objects.c:2651
 msgid "use threads when searching for best delta matches"
 msgstr "sử dụng các tuyến trình khi tìm kiếm cho các mẫu khớp delta tốt nhất"
 
-#: builtin/pack-objects.c:2655
+#: builtin/pack-objects.c:2653
 msgid "do not create an empty pack output"
 msgstr "không thể tạo kết xuất gói trống rỗng"
 
-#: builtin/pack-objects.c:2657
+#: builtin/pack-objects.c:2655
 msgid "read revision arguments from standard input"
 msgstr " đọc tham số “revision” từ thiết bị nhập chuẩn"
 
-#: builtin/pack-objects.c:2659
+#: builtin/pack-objects.c:2657
 msgid "limit the objects to those that are not yet packed"
 msgstr "giới hạn các đối tượng thành những cái mà chúng vẫn chưa được đóng gói"
 
-#: builtin/pack-objects.c:2662
+#: builtin/pack-objects.c:2660
 msgid "include objects reachable from any reference"
 msgstr "bao gồm các đối tượng có thể đọc được từ bất kỳ tham chiếu nào"
 
-#: builtin/pack-objects.c:2665
+#: builtin/pack-objects.c:2663
 msgid "include objects referred by reflog entries"
 msgstr "bao gồm các đối tượng được tham chiếu bởi các mục reflog"
 
-#: builtin/pack-objects.c:2668
+#: builtin/pack-objects.c:2666
 msgid "include objects referred to by the index"
 msgstr "bao gồm các đối tượng được tham chiếu bởi mục lục"
 
-#: builtin/pack-objects.c:2671
+#: builtin/pack-objects.c:2669
 msgid "output pack to stdout"
 msgstr "xuất gói ra đầu ra tiêu chuẩn"
 
-#: builtin/pack-objects.c:2673
+#: builtin/pack-objects.c:2671
 msgid "include tag objects that refer to objects to be packed"
 msgstr "bao gồm các đối tượng tham chiếu đến các đối tượng được đóng gói"
 
-#: builtin/pack-objects.c:2675
+#: builtin/pack-objects.c:2673
 msgid "keep unreachable objects"
 msgstr "giữ lại các đối tượng không thể đọc được"
 
-#: builtin/pack-objects.c:2676 parse-options.h:140
+#: builtin/pack-objects.c:2674 parse-options.h:140
 msgid "time"
 msgstr "thời-gian"
 
-#: builtin/pack-objects.c:2677
+#: builtin/pack-objects.c:2675
 msgid "unpack unreachable objects newer than <time>"
 msgstr ""
 "xả nén (gỡ khỏi gói) các đối tượng không thể đọc được mới hơn <thời-gian>"
 
-#: builtin/pack-objects.c:2680
+#: builtin/pack-objects.c:2678
 msgid "create thin packs"
 msgstr "tạo gói nhẹ"
 
-#: builtin/pack-objects.c:2682
+#: builtin/pack-objects.c:2680
 msgid "create packs suitable for shallow fetches"
 msgstr "tạo gói để phù hợp cho lấy về nông (shallow)"
 
-#: builtin/pack-objects.c:2684
+#: builtin/pack-objects.c:2682
 msgid "ignore packs that have companion .keep file"
 msgstr "bỏ qua các gói mà nó có tập tin .keep đi kèm"
 
-#: builtin/pack-objects.c:2686
+#: builtin/pack-objects.c:2684
 msgid "pack compression level"
 msgstr "mức nén gói"
 
-#: builtin/pack-objects.c:2688
+#: builtin/pack-objects.c:2686
 msgid "do not hide commits by grafts"
 msgstr "không ẩn các lần chuyển giao bởi “grafts”"
 
-#: builtin/pack-objects.c:2690
+#: builtin/pack-objects.c:2688
 msgid "use a bitmap index if available to speed up counting objects"
 msgstr "dùng mục lục ánh xạ nếu có thể được để nâng cao tốc độ đếm đối tượng"
 
-#: builtin/pack-objects.c:2692
+#: builtin/pack-objects.c:2690
 msgid "write a bitmap index together with the pack index"
 msgstr "ghi một mục lục ánh xạ cùng với mục lục gói"
 
-#: builtin/pack-objects.c:2783
+#: builtin/pack-objects.c:2781
 msgid "Counting objects"
 msgstr "Đang đếm các đối tượng"
 
 #: builtin/pack-refs.c:6
-msgid "git pack-refs [options]"
-msgstr "git pack-refs [các-tùy-chọn]"
+msgid "git pack-refs [<options>]"
+msgstr "git pack-refs [<các-tùy-chọn>]"
 
 #: builtin/pack-refs.c:14
 msgid "pack everything"
 msgstr "đóng gói mọi thứ"
 
 #: builtin/pack-refs.c:15
 msgid "prune loose refs (default)"
 msgstr "prune (cắt cụt) những tham chiếu bị mất (mặc định)"
 
 #: builtin/prune-packed.c:7
-msgid "git prune-packed [-n|--dry-run] [-q|--quiet]"
-msgstr "git prune-packed [-n|--dry-run] [-q|--quiet]"
+msgid "git prune-packed [-n | --dry-run] [-q | --quiet]"
+msgstr "git prune-packed [-n | --dry-run] [-q | --quiet]"
 
 #: builtin/prune-packed.c:40
 msgid "Removing duplicate objects"
 msgstr "Đang gỡ các đối tượng trùng lặp"
 
 #: builtin/prune.c:12
@@ -8303,81 +8339,85 @@
 msgstr "--mirror không thể được tổ hợp cùng với đặc tả đường dẫn"
 
 #: builtin/push.c:422
 msgid "--all and --mirror are incompatible"
 msgstr "--all và --mirror xung khắc nhau"
 
-#: builtin/push.c:493
+#: builtin/push.c:502
 msgid "repository"
 msgstr "kho"
 
-#: builtin/push.c:494
+#: builtin/push.c:503
 msgid "push all refs"
 msgstr "đẩy tất cả các tham chiếu"
 
-#: builtin/push.c:495
+#: builtin/push.c:504
 msgid "mirror all refs"
 msgstr "mirror tất cả các tham chiếu"
 
-#: builtin/push.c:497
+#: builtin/push.c:506
 msgid "delete refs"
 msgstr "xóa các tham chiếu"
 
-#: builtin/push.c:498
+#: builtin/push.c:507
 msgid "push tags (can't be used with --all or --mirror)"
 msgstr "đẩy các thẻ (không dùng cùng với --all hay --mirror)"
 
-#: builtin/push.c:501
+#: builtin/push.c:510
 msgid "force updates"
 msgstr "ép buộc cập nhật"
 
-#: builtin/push.c:503
+#: builtin/push.c:512
 msgid "refname>:<expect"
 msgstr "tên-tham-chiếu>:<cần"
 
-#: builtin/push.c:504
+#: builtin/push.c:513
 msgid "require old value of ref to be at this value"
 msgstr "yêu cầu giá-trị cũ của tham chiếu thì là giá-trị này"
 
-#: builtin/push.c:507
+#: builtin/push.c:516
 msgid "control recursive pushing of submodules"
 msgstr "điều khiển việc đẩy lên (push) đệ qui của mô-đun-con"
 
-#: builtin/push.c:509
+#: builtin/push.c:518
 msgid "use thin pack"
 msgstr "tạo gói nhẹ"
 
-#: builtin/push.c:510 builtin/push.c:511
+#: builtin/push.c:519 builtin/push.c:520
 msgid "receive pack program"
 msgstr "chương trình nhận gói"
 
-#: builtin/push.c:512
+#: builtin/push.c:521
 msgid "set upstream for git pull/status"
 msgstr "đặt thượng nguồn cho git pull/status"
 
-#: builtin/push.c:515
+#: builtin/push.c:524
 msgid "prune locally removed refs"
 msgstr "xén tỉa những tham chiếu bị gỡ bỏ"
 
-#: builtin/push.c:517
+#: builtin/push.c:526
 msgid "bypass pre-push hook"
 msgstr "vòng qua móc tiền-đẩy (pre-push)"
 
-#: builtin/push.c:518
+#: builtin/push.c:527
 msgid "push missing but relevant tags"
 msgstr "push phần bị thiếu nhưng các thẻ lại thích hợp"
 
-#: builtin/push.c:520
+#: builtin/push.c:529
 msgid "GPG sign the push"
 msgstr "ký lần đẩy dùng GPG"
 
-#: builtin/push.c:529
+#: builtin/push.c:530
+msgid "request atomic transaction on remote side"
+msgstr "yêu cầu giao dịch hạt nhân bên phía máy chủ"
+
+#: builtin/push.c:539
 msgid "--delete is incompatible with --all, --mirror and --tags"
 msgstr "--delete là xung khắc với các tùy chọn --all, --mirror và --tags"
 
-#: builtin/push.c:531
+#: builtin/push.c:541
 msgid "--delete doesn't make sense without any refs"
 msgstr "--delete không hợp lý nếu không có bất kỳ tham chiếu nào"
 
 #: builtin/read-tree.c:37
 msgid ""
 "git read-tree [[-m [--trivial] [--aggressive] | --reset | --prefix=<prefix>] "
@@ -8451,29 +8491,29 @@
 msgstr "bỏ qua áp dụng bộ lọc lấy ra (checkout) thưa thớt"
 
 #: builtin/read-tree.c:139
 msgid "debug unpack-trees"
 msgstr "gỡ lỗi “unpack-trees”"
 
-#: builtin/reflog.c:499
+#: builtin/reflog.c:429
 #, c-format
 msgid "%s' for '%s' is not a valid timestamp"
 msgstr "giá trị %s dành cho “%s” không phải là dấu vết thời gian hợp lệ"
 
-#: builtin/reflog.c:615 builtin/reflog.c:620
+#: builtin/reflog.c:546 builtin/reflog.c:551
 #, c-format
 msgid "'%s' is not a valid timestamp"
 msgstr "“%s” không phải là dấu thời gian hợp lệ"
 
 #: builtin/remote.c:12
 msgid "git remote [-v | --verbose]"
 msgstr "git remote [-v | --verbose]"
 
 #: builtin/remote.c:13
 msgid ""
-"git remote add [-t <branch>] [-m <master>] [-f] [--tags|--no-tags] [--"
+"git remote add [-t <branch>] [-m <master>] [-f] [--tags | --no-tags] [--"
 "mirror=<fetch|push>] <name> <url>"
 msgstr ""
 "git remote add [-t <nhánh>] [-m <master>] [-f] [--tags|--no-tags] [--"
 "mirror=<fetch|push>] <tên> <url>"
 
 #: builtin/remote.c:14 builtin/remote.c:33
@@ -8481,14 +8521,14 @@
 msgstr "git remote rename <tên-cũ> <tên-mới>"
 
 #: builtin/remote.c:15 builtin/remote.c:38
 msgid "git remote remove <name>"
 msgstr "git remote remove <tên>"
 
-#: builtin/remote.c:16
-msgid "git remote set-head <name> (-a | --auto | -d | --delete |<branch>)"
+#: builtin/remote.c:16 builtin/remote.c:43
+msgid "git remote set-head <name> (-a | --auto | -d | --delete | <branch>)"
 msgstr "git remote set-head <tên> (-a | --auto | -d | --delete | <nhánh>)"
 
 #: builtin/remote.c:17
 msgid "git remote [-v | --verbose] show [-n] <name>"
 msgstr "git remote [-v | --verbose] show [-n] <tên>"
 
@@ -8519,16 +8559,12 @@
 msgstr "git remote set-url --delete <tên> <url>"
 
 #: builtin/remote.c:28
 msgid "git remote add [<options>] <name> <url>"
 msgstr "git remote add [<các-tùy-chọn>] <tên> <url>"
 
-#: builtin/remote.c:43
-msgid "git remote set-head <name> (-a | --auto | -d | --delete | <branch>)"
-msgstr "git remote set-head <tên> (-a | --auto | -d | --delete | <nhánh>)"
-
 #: builtin/remote.c:48
 msgid "git remote set-branches <name> <branch>..."
 msgstr "git remote set-branches <tên> <nhánh>…"
 
 #: builtin/remote.c:49
 msgid "git remote set-branches --add <name> <branch>..."
@@ -8950,14 +8986,14 @@
 
 #: builtin/remote.c:1592
 msgid "be verbose; must be placed before a subcommand"
 msgstr "chi tiết; phải được đặt trước một lệnh-con"
 
 #: builtin/repack.c:17
-msgid "git repack [options]"
-msgstr "git repack [các-tùy-chọn]"
+msgid "git repack [<options>]"
+msgstr "git repack [<các-tùy-chọn>]"
 
 #: builtin/repack.c:159
 msgid "pack everything in a single pack"
 msgstr "đóng gói mọi thứ trong một gói đơn"
 
 #: builtin/repack.c:161
@@ -9017,13 +9053,13 @@
 msgstr "kcíh thước tối đa cho từng tập tin gói"
 
 #: builtin/repack.c:187
 msgid "repack objects in packs marked with .keep"
 msgstr "đóng gói lại các đối tượng trong các gói đã đánh dấu bằng .keep"
 
-#: builtin/repack.c:371
+#: builtin/repack.c:375
 #, c-format
 msgid "removing '%s' failed"
 msgstr "gặp lỗi khi xóa bỏ “%s”"
 
 #: builtin/replace.c:19
 msgid "git replace [-f] <object> <replacement>"
@@ -9109,14 +9145,15 @@
 
 #: builtin/replace.c:438
 msgid "use this format"
 msgstr "dùng định dạng này"
 
 #: builtin/rerere.c:12
-msgid "git rerere [clear | forget path... | status | remaining | diff | gc]"
-msgstr "git rerere [clear | forget path… | status | remaining | diff | gc]"
+msgid "git rerere [clear | forget <path>... | status | remaining | diff | gc]"
+msgstr ""
+"git rerere [clear | forget <đường dẫn>… | status | remaining | diff | gc]"
 
 #: builtin/rerere.c:57
 msgid "register clean resolutions in index"
 msgstr "sổ ghi dọn sạch các phân giải trong bản mục lục"
 
 #: builtin/reset.c:26
@@ -9250,14 +9287,14 @@
 
 #: builtin/reset.c:374
 msgid "Could not write new index file."
 msgstr "Không thể ghi tập tin lưu bảng mục lục mới."
 
 #: builtin/rev-parse.c:361
-msgid "git rev-parse --parseopt [options] -- [<args>...]"
-msgstr "git rev-parse --parseopt [các-tùy-chọn] -- [<th.số>…]"
+msgid "git rev-parse --parseopt [<options>] -- [<args>...]"
+msgstr "git rev-parse --parseopt [<các-tùy-chọn>] -- [<các tham số>…]"
 
 #: builtin/rev-parse.c:366
 msgid "keep the `--` passed as an arg"
 msgstr "giữ lại “--” chuyển sang làm tham số"
 
 #: builtin/rev-parse.c:368
@@ -9267,35 +9304,35 @@
 #: builtin/rev-parse.c:371
 msgid "output in stuck long form"
 msgstr "kết xuất trong định dạng gậy dài"
 
 #: builtin/rev-parse.c:499
 msgid ""
-"git rev-parse --parseopt [options] -- [<args>...]\n"
+"git rev-parse --parseopt [<options>] -- [<args>...]\n"
 "   or: git rev-parse --sq-quote [<arg>...]\n"
-"   or: git rev-parse [options] [<arg>...]\n"
+"   or: git rev-parse [<options>] [<arg>...]\n"
 "\n"
 "Run \"git rev-parse --parseopt -h\" for more information on the first usage."
 msgstr ""
-"git rev-parse --parseopt [các-tùy-chọn] -- [<đ.số>…]\n"
+"git rev-parse --parseopt [<các-tùy-chọn>] -- [<các đối số>…]\n"
 "   hoặc: git rev-parse --sq-quote [<đ.số>…]\n"
-"   hoặc: git rev-parse [các-tùy-chọn] [<đ.số>…]\n"
+"   hoặc: git rev-parse [<các-tùy-chọn>] [<đ.số>…]\n"
 "\n"
 "Chạy lệnh \"git rev-parse --parseopt -h\" để có thêm thông tin về cách dùng."
 
 #: builtin/revert.c:22
-msgid "git revert [options] <commit-ish>..."
-msgstr "git revert [các-tùy-chọn] <commit-ish>…"
+msgid "git revert [<options>] <commit-ish>..."
+msgstr "git revert [<các-tùy-chọn>] <commit-ish>…"
 
 #: builtin/revert.c:23
 msgid "git revert <subcommand>"
 msgstr "git revert <lệnh-con>"
 
 #: builtin/revert.c:28
-msgid "git cherry-pick [options] <commit-ish>..."
-msgstr "git cherry-pick [các-tùy-chọn] <commit-ish>…"
+msgid "git cherry-pick [<options>] <commit-ish>..."
+msgstr "git cherry-pick [<các-tùy-chọn>] <commit-ish>…"
 
 #: builtin/revert.c:29
 msgid "git cherry-pick <subcommand>"
 msgstr "git cherry-pick <lệnh-con>"
 
 #: builtin/revert.c:71
@@ -9369,14 +9406,14 @@
 
 #: builtin/revert.c:212
 msgid "cherry-pick failed"
 msgstr "cherry-pick gặp lỗi"
 
 #: builtin/rm.c:17
-msgid "git rm [options] [--] <file>..."
-msgstr "git rm [các-tùy-chọn] [--] <tập-tin>…"
+msgid "git rm [<options>] [--] <file>..."
+msgstr "git rm [<các-tùy-chọn>] [--] <tập-tin>…"
 
 #: builtin/rm.c:65
 msgid ""
 "the following submodule (or one of its nested submodules)\n"
 "uses a .git directory:"
 msgid_plural ""
@@ -9466,14 +9503,14 @@
 #: builtin/rm.c:375
 #, c-format
 msgid "git rm: unable to remove %s"
 msgstr "git rm: không thể gỡ bỏ %s"
 
 #: builtin/shortlog.c:13
-msgid "git shortlog [<options>] [<revision range>] [[--] [<path>...]]"
-msgstr "git shortlog [các-tùy-chọn] [<vùng-xét-duyệt>] [[--] [<đường-dẫn>…]]"
+msgid "git shortlog [<options>] [<revision-range>] [[--] [<path>...]]"
+msgstr "git shortlog [<các-tùy-chọn>] [<vùng-xét-duyệt>] [[--] [<đường-dẫn>…]]"
 
 #: builtin/shortlog.c:131
 #, c-format
 msgid "Missing author: %s"
 msgstr "Thiếu tên tác giả: %s"
 
@@ -9496,25 +9533,25 @@
 #: builtin/shortlog.c:236
 msgid "Linewrap output"
 msgstr "Ngắt dòng khi quá dài"
 
 #: builtin/show-branch.c:9
 msgid ""
-"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
+"git show-branch [-a | --all] [-r | --remotes] [--topo-order | --date-order]\n"
 "\t\t[--current] [--color[=<when>] | --no-color] [--sparse]\n"
 "\t\t[--more=<n> | --list | --independent | --merge-base]\n"
 "\t\t[--no-name | --sha1-name] [--topics] [(<rev> | <glob>)...]"
 msgstr ""
-"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
+"git show-branch [-a | --all] [-r | --remotes] [--topo-order | --date-order]\n"
 "\t\t[--current] [--color[=<khi>] | --no-color] [--sparse]\n"
 "\t\t[--more=<n> | --list | --independent | --merge-base]\n"
 "\t\t[--no-name | --sha1-name] [--topics] [(<rev> | <glob>)…]"
 
 #: builtin/show-branch.c:13
-msgid "git show-branch (-g|--reflog)[=<n>[,<base>]] [--list] [<ref>]"
-msgstr "git show-branch (-g|--reflog)[=<n>[,<nền>]] [--list] [<ref>]"
+msgid "git show-branch (-g | --reflog)[=<n>[,<base>]] [--list] [<ref>]"
+msgstr "git show-branch (-g | --reflog)[=<n>[,<nền>]] [--list] [<ref>]"
 
 #: builtin/show-branch.c:652
 msgid "show remote-tracking and local branches"
 msgstr "hiển thị các nhánh remote-tracking và nội bộ"
 
 #: builtin/show-branch.c:654
@@ -9576,17 +9613,17 @@
 #: builtin/show-branch.c:682
 msgid "show <n> most recent ref-log entries starting at base"
 msgstr "hiển thị <n> các mục “ref-log” gần nhất kể từ nền (base)"
 
 #: builtin/show-ref.c:10
 msgid ""
-"git show-ref [-q|--quiet] [--verify] [--head] [-d|--dereference] [-s|--"
-"hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [pattern*] "
+"git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | --"
+"hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<pattern>...]"
 msgstr ""
-"git show-ref [-q|--quiet] [--verify] [--head] [-d|--dereference] [-s|--"
-"hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [mẫu*] "
+"git show-ref [-q | --quiet] [--verify] [--head] [-d|--dereference] [-s|--hash"
+"[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<mẫu>…] "
 
 #: builtin/show-ref.c:11
 msgid "git show-ref --exclude-existing[=pattern] < ref-list"
 msgstr "git show-ref --exclude-existing[=mẫu] < ref-list"
 
 #: builtin/show-ref.c:168
@@ -9623,18 +9660,18 @@
 msgid "show refs from stdin that aren't in local repository"
 msgstr ""
 "hiển thị các tham chiếu từ đầu vào tiêu chuẩn (stdin) cái mà không ở kho nội "
 "bộ"
 
 #: builtin/symbolic-ref.c:7
-msgid "git symbolic-ref [options] name [ref]"
-msgstr "git symbolic-ref [các-tùy-chọn] tên [t.chiếu]"
+msgid "git symbolic-ref [<options>] <name> [<ref>]"
+msgstr "git symbolic-ref [<các-tùy-chọn>] <tên> [<t.chiếu>]"
 
 #: builtin/symbolic-ref.c:8
-msgid "git symbolic-ref -d [-q] name"
-msgstr "git symbolic-ref -d [-q] tên"
+msgid "git symbolic-ref -d [-q] <name>"
+msgstr "git symbolic-ref -d [-q] <tên>"
 
 #: builtin/symbolic-ref.c:40
 msgid "suppress error message for non-symbolic (detached) refs"
 msgstr "chặn các thông tin lỗi cho các tham chiếu “không-mềm” (bị tách ra)"
 
 #: builtin/symbolic-ref.c:41
@@ -9652,26 +9689,29 @@
 #: builtin/symbolic-ref.c:43 builtin/update-ref.c:358
 msgid "reason of the update"
 msgstr "lý do cập nhật"
 
 #: builtin/tag.c:22
 msgid ""
-"git tag [-a|-s|-u <key-id>] [-f] [-m <msg>|-F <file>] <tagname> [<head>]"
+"git tag [-a | -s | -u <key-id>] [-f] [-m <msg> | -F <file>] <tagname> "
+"[<head>]"
 msgstr ""
-"git tag [-a|-s|-u <key-id>] [-f] [-m <msg>|-F <tập-tin>] <tên-thẻ> [<head>]"
+"git tag [-a | -s | -u <key-id>] [-f] [-m <msg>|-F <tập-tin>] <tên-thẻ> "
+"[<head>]"
 
 #: builtin/tag.c:23
 msgid "git tag -d <tagname>..."
 msgstr "git tag -d <tên-thẻ>…"
 
 #: builtin/tag.c:24
 msgid ""
-"git tag -l [-n[<num>]] [--contains <commit>] [--points-at <object>] \n"
+"git tag -l [-n[<num>]] [--contains <commit>] [--points-at <object>]\n"
 "\t\t[<pattern>...]"
 msgstr ""
-"git tag -l [-n[<num>]] [--contains <commit>] [--points-at <đối-tượng>] \n"
+"git tag -l [-n[<số>]] [--contains <lần_chuyển_giao>] [--points-at <đối-"
+"tượng>]\n"
 "\t\t[<mẫu>…]"
 
 #: builtin/tag.c:26
 msgid "git tag -v <tagname>..."
 msgstr "git tag -v <tên-thẻ>…"
 
@@ -9690,13 +9730,13 @@
 msgid "tag '%s' not found."
 msgstr "không tìm thấy tìm thấy thẻ “%s”."
 
 #: builtin/tag.c:321
 #, c-format
 msgid "Deleted tag '%s' (was %s)\n"
-msgstr "Thẻ đã bị xóa “%s” (trước là %s)\n"
+msgstr "Thẻ đã bị xóa “%s” (từng là %s)\n"
 
 #: builtin/tag.c:333
 #, c-format
 msgid "could not verify the tag '%s'"
 msgstr "không thể thẩm tra thẻ “%s”"
 
@@ -9720,13 +9760,13 @@
 "Write a message for tag:\n"
 "  %s\n"
 "Lines starting with '%c' will be kept; you may remove them yourself if you "
 "want to.\n"
 msgstr ""
 "\n"
-"Viết các ghi chú cho (thẻ) tag\n"
+"Viết các ghi chú cho thẻ:\n"
 "  %s\n"
 "Những dòng được bắt đầu bằng “%c” sẽ được giữ lại; bạn có thể xóa chúng đi "
 "nếu muốn.\n"
 
 #: builtin/tag.c:371
 #, c-format
@@ -9809,24 +9849,24 @@
 msgstr "dùng kháo khác để ký thẻ"
 
 #: builtin/tag.c:607
 msgid "replace the tag if exists"
 msgstr "thay thế nếu tag đó đã có trước"
 
-#: builtin/tag.c:608
+#: builtin/tag.c:609
+msgid "Tag listing options"
+msgstr "Các tùy chọn liệt kê thẻ"
+
+#: builtin/tag.c:610
 msgid "show tag list in columns"
 msgstr "hiển thị danh sách thẻ trong các cột"
 
-#: builtin/tag.c:610
+#: builtin/tag.c:612
 msgid "sort tags"
 msgstr "sắp xếp các thẻ"
 
-#: builtin/tag.c:614
-msgid "Tag listing options"
-msgstr "Các tùy chọn liệt kê thẻ"
-
 #: builtin/tag.c:617 builtin/tag.c:623
 msgid "print only tags that contain the commit"
 msgstr "chỉ hiển thị những nhánh mà nó chứa lần chuyển giao"
 
 #: builtin/tag.c:629
 msgid "print only tags of the object"
@@ -9877,142 +9917,142 @@
 
 #: builtin/unpack-objects.c:489
 msgid "Unpacking objects"
 msgstr "Đang giải nén các đối tượng"
 
 #: builtin/update-index.c:403
-msgid "git update-index [options] [--] [<file>...]"
-msgstr "git update-index [các-tùy-chọn] [<tập-tin>…]"
+msgid "git update-index [<options>] [--] [<file>...]"
+msgstr "git update-index [<các-tùy-chọn>] [--] [<tập-tin>…]"
 
-#: builtin/update-index.c:756
+#: builtin/update-index.c:757
 msgid "continue refresh even when index needs update"
 msgstr "tiếp tục làm mới ngay cả khi bảng mục lục cần được cập nhật"
 
-#: builtin/update-index.c:759
+#: builtin/update-index.c:760
 msgid "refresh: ignore submodules"
 msgstr "refresh: lờ đi mô-đun-con"
 
-#: builtin/update-index.c:762
+#: builtin/update-index.c:763
 msgid "do not ignore new files"
 msgstr "không bỏ qua các tập tin mới tạo"
 
-#: builtin/update-index.c:764
+#: builtin/update-index.c:765
 msgid "let files replace directories and vice-versa"
 msgstr "để các tập tin thay thế các thư mục và “vice-versa”"
 
-#: builtin/update-index.c:766
+#: builtin/update-index.c:767
 msgid "notice files missing from worktree"
 msgstr "thông báo các tập-tin thiếu trong thư-mục làm việc"
 
-#: builtin/update-index.c:768
+#: builtin/update-index.c:769
 msgid "refresh even if index contains unmerged entries"
 msgstr ""
 "làm tươi mới thậm chí khi bảng mục lục chứa các mục tin chưa được hòa trộn"
 
-#: builtin/update-index.c:771
+#: builtin/update-index.c:772
 msgid "refresh stat information"
 msgstr "lấy lại thông tin thống kê"
 
-#: builtin/update-index.c:775
+#: builtin/update-index.c:776
 msgid "like --refresh, but ignore assume-unchanged setting"
 msgstr "giống --refresh, nhưng bỏ qua các cài đặt “assume-unchanged”"
 
-#: builtin/update-index.c:779
+#: builtin/update-index.c:780
 msgid "<mode>,<object>,<path>"
 msgstr "<chế_độ>,<đối_tượng>,<đường_dẫn>"
 
-#: builtin/update-index.c:780
+#: builtin/update-index.c:781
 msgid "add the specified entry to the index"
 msgstr "thêm các tập tin đã chỉ ra vào bảng mục lục"
 
-#: builtin/update-index.c:784
+#: builtin/update-index.c:785
 msgid "(+/-)x"
 msgstr "(+/-)x"
 
-#: builtin/update-index.c:785
+#: builtin/update-index.c:786
 msgid "override the executable bit of the listed files"
 msgstr "ghi đè lên bít thi hành của các tập tin được liệt kê"
 
-#: builtin/update-index.c:789
+#: builtin/update-index.c:790
 msgid "mark files as \"not changing\""
 msgstr "Đánh dấu các tập tin là \"không thay đổi\""
 
-#: builtin/update-index.c:792
+#: builtin/update-index.c:793
 msgid "clear assumed-unchanged bit"
 msgstr "xóa bít assumed-unchanged (giả định là không thay đổi)"
 
-#: builtin/update-index.c:795
+#: builtin/update-index.c:796
 msgid "mark files as \"index-only\""
 msgstr "đánh dấu các tập tin là “chỉ-đọc”"
 
-#: builtin/update-index.c:798
+#: builtin/update-index.c:799
 msgid "clear skip-worktree bit"
 msgstr "xóa bít skip-worktree"
 
-#: builtin/update-index.c:801
+#: builtin/update-index.c:802
 msgid "add to index only; do not add content to object database"
 msgstr ""
 "chỉ thêm vào bảng mục lục; không thêm nội dung vào cơ sở dữ liệu đối tượng"
 
-#: builtin/update-index.c:803
+#: builtin/update-index.c:804
 msgid "remove named paths even if present in worktree"
 msgstr ""
 "gỡ bỏ các đường dẫn được đặt tên thậm chí cả khi nó hiện diện trong thư mục "
 "làm việc"
 
-#: builtin/update-index.c:805
+#: builtin/update-index.c:806
 msgid "with --stdin: input lines are terminated by null bytes"
 msgstr "với tùy chọn --stdin: các dòng đầu vào được chấm dứt bởi ký tự null"
 
-#: builtin/update-index.c:807
+#: builtin/update-index.c:808
 msgid "read list of paths to be updated from standard input"
 msgstr "đọc danh sách đường dẫn cần cập nhật từ đầu vào tiêu chuẩn"
 
-#: builtin/update-index.c:811
+#: builtin/update-index.c:812
 msgid "add entries from standard input to the index"
 msgstr "không thể đọc các mục từ đầu vào tiêu chuẩn vào bảng mục lục"
 
-#: builtin/update-index.c:815
+#: builtin/update-index.c:816
 msgid "repopulate stages #2 and #3 for the listed paths"
 msgstr "phục hồi các trạng thái #2 và #3 cho các đường dẫn được liệt kê"
 
-#: builtin/update-index.c:819
+#: builtin/update-index.c:820
 msgid "only update entries that differ from HEAD"
 msgstr "chỉ cập nhật các mục tin mà nó khác biệt so với HEAD"
 
-#: builtin/update-index.c:823
+#: builtin/update-index.c:824
 msgid "ignore files missing from worktree"
 msgstr "bỏ qua các tập-tin thiếu trong thư-mục làm việc"
 
-#: builtin/update-index.c:826
+#: builtin/update-index.c:827
 msgid "report actions to standard output"
 msgstr "báo cáo các thao tác ra thiết bị xuất chuẩn"
 
-#: builtin/update-index.c:828
+#: builtin/update-index.c:829
 msgid "(for porcelains) forget saved unresolved conflicts"
 msgstr "(cho “porcelains”) quên các xung đột chưa được giải quyết đã ghi"
 
-#: builtin/update-index.c:832
+#: builtin/update-index.c:833
 msgid "write index in this format"
 msgstr "ghi mục lục ở định dạng này"
 
-#: builtin/update-index.c:834
+#: builtin/update-index.c:835
 msgid "enable or disable split index"
 msgstr "bật/tắt chia cắt bảng mục lục"
 
 #: builtin/update-ref.c:9
-msgid "git update-ref [options] -d <refname> [<oldval>]"
-msgstr "git update-ref [các-tùy-chọn] -d <refname> [<biến-cũ>]"
+msgid "git update-ref [<options>] -d <refname> [<old-val>]"
+msgstr "git update-ref [<các-tùy-chọn>] -d <refname> [<biến-cũ>]"
 
 #: builtin/update-ref.c:10
-msgid "git update-ref [options]    <refname> <newval> [<oldval>]"
-msgstr "git update-ref [các-tùy-chọn]    <refname> <biến-mới> [<biến-cũ>]"
+msgid "git update-ref [<options>]    <refname> <new-val> [<old-val>]"
+msgstr "git update-ref [<các-tùy-chọn>]    <refname> <biến-mới> [<biến-cũ>]"
 
 #: builtin/update-ref.c:11
-msgid "git update-ref [options] --stdin [-z]"
-msgstr "git update-ref [các-tùy-chọn] --stdin [-z]"
+msgid "git update-ref [<options>] --stdin [-z]"
+msgstr "git update-ref [<các-tùy-chọn>] --stdin [-z]"
 
 #: builtin/update-ref.c:359
 msgid "delete the reference"
 msgstr "xóa tham chiếu"
 
 #: builtin/update-ref.c:361
@@ -10033,34 +10073,34 @@
 
 #: builtin/update-server-info.c:14
 msgid "update the info files from scratch"
 msgstr "cập nhật các tập tin thông tin từ điểm xuất phát"
 
 #: builtin/verify-commit.c:17
-msgid "git verify-commit [-v|--verbose] <commit>..."
-msgstr "git verify-commit [-v|--verbose] <lần_chuyển_giao>…"
+msgid "git verify-commit [-v | --verbose] <commit>..."
+msgstr "git verify-commit [-v | --verbose] <lần_chuyển_giao>…"
 
 #: builtin/verify-commit.c:75
 msgid "print commit contents"
 msgstr "hiển thị nội dung của lần chuyển giao"
 
 #: builtin/verify-pack.c:54
-msgid "git verify-pack [-v|--verbose] [-s|--stat-only] <pack>..."
-msgstr "git verify-pack [-v|--verbose] [-s|--stat-only] <gói>…"
+msgid "git verify-pack [-v | --verbose] [-s | --stat-only] <pack>..."
+msgstr "git verify-pack [-v | --verbose] [-s | --stat-only] <gói>…"
 
 #: builtin/verify-pack.c:64
 msgid "verbose"
 msgstr "chi tiết"
 
 #: builtin/verify-pack.c:66
 msgid "show statistics only"
 msgstr "chỉ hiển thị thống kê"
 
 #: builtin/verify-tag.c:17
-msgid "git verify-tag [-v|--verbose] <tag>..."
-msgstr "git verify-tag [-v|--verbose] <thẻ>…"
+msgid "git verify-tag [-v | --verbose] <tag>..."
+msgstr "git verify-tag [-v | --verbose] <thẻ>…"
 
 #: builtin/verify-tag.c:73
 msgid "print tag contents"
 msgstr "hiển thị nội dung của thẻ"
 
 #: builtin/write-tree.c:13
@@ -10413,20 +10453,20 @@
 msgid "Bad HEAD - I need a HEAD"
 msgstr "HEAD sai - Tôi cần một HEAD"
 
 #: git-bisect.sh:130
 #, sh-format
 msgid ""
-"Checking out '$start_head' failed. Try 'git bisect reset <validbranch>'."
+"Checking out '$start_head' failed. Try 'git bisect reset <valid-branch>'."
 msgstr ""
-"Việc checkout “$start_head” gặp lỗi. Hãy thử “git bisect reset "
-"<nhánh_hợp_lệ>”."
+"Việc lấy “$start_head” ra gặp lỗi. Hãy thử \"git bisect reset <nhánh_hợp_lệ>"
+"\"."
 
 #: git-bisect.sh:140
 msgid "won't bisect on cg-seek'ed tree"
-msgstr "sẽ không bisect trêm cây được cg-seek"
+msgstr "sẽ không di chuyển nửa bước trên cây được cg-seek"
 
 #: git-bisect.sh:144
 msgid "Bad HEAD - strange symbolic ref"
 msgstr "HEAD sai - tham chiếu mềm kỳ lạ"
 
 #: git-bisect.sh:189
@@ -11191,12 +11231,27 @@
 
 #: git-submodule.sh:1331
 #, sh-format
 msgid "Synchronizing submodule url for '$displaypath'"
 msgstr "Url Mô-đun-con đồng bộ hóa cho “$displaypath”"
 
+#~ msgid "server does not support --atomic push"
+#~ msgstr "máy phục vụ không hỗ trợ đẩy lên --atomic"
+
+#~ msgid "(detached from %s)"
+#~ msgstr "(được tách rời từ %s)"
+
+#~ msgid "No existing author found with '%s'"
+#~ msgstr "Không tìm thấy tác giả có sẵn với “%s”"
+
+#~ msgid "search also in ignored files"
+#~ msgstr "tìm cả trong các tập tin đã bị lờ đi"
+
+#~ msgid "git remote set-head <name> (-a | --auto | -d | --delete |<branch>)"
+#~ msgstr "git remote set-head <tên> (-a | --auto | -d | --delete | <nhánh>)"
+
 #~ msgid "no files added"
 #~ msgstr "chưa có tập tin nào được thêm vào"
 
 #~ msgid "force creation (when already exists)"
 #~ msgstr "ép buộc tạo (khi đã có nhánh cùng tên)"
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/zh_CN.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/zh_CN.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/po/zh_CN.po	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/po/zh_CN.po	2015-05-01 03:12:02.000000000 +0800
@@ -1,22 +1,22 @@
 # Chinese translations for Git package
 # Git 软件包的简体中文翻译.
 # Copyright (C) 2012,2013 Jiang Xin <worldhello.net AT gmail.com>
 # This file is distributed under the same license as the Git package.
-# Contributers:
+# Contributors:
 #   - Jiang Xin <worldhello.net AT gmail.com>
 #   - Riku <lu.riku AT gmail.com>
 #   - Zhuang Ya <zhuangya AT me.com>
 #   - Lian Cheng <rhythm.mail AT gmail.com>
 #
 msgid ""
 msgstr ""
 "Project-Id-Version: Git\n"
 "Report-Msgid-Bugs-To: Git Mailing List <git@vger.kernel.org>\n"
-"POT-Creation-Date: 2015-01-21 14:21+0800\n"
-"PO-Revision-Date: 2015-01-21 14:58+0800\n"
+"POT-Creation-Date: 2015-04-03 08:13+0800\n"
+"PO-Revision-Date: 2015-04-03 08:35+0800\n"
 "Last-Translator: Jiang Xin <worldhello.net@gmail.com>\n"
 "Language-Team: GitHub <https://github.com/gotgit/git/>\n"
 "Language: zh_CN\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
@@ -33,24 +33,24 @@
 "as appropriate to mark resolution and make a commit."
 msgstr ""
 "请在工作区改正文件，然后酌情使用 'git add/rm <文件>' 命令标记\n"
 "解决方案并提交。"
 
 #: archive.c:11
-msgid "git archive [options] <tree-ish> [<path>...]"
-msgstr "git archive [选项] <树或提交> [<路径>...]"
+msgid "git archive [<options>] <tree-ish> [<path>...]"
+msgstr "git archive [<选项>] <树或提交> [<路径>...]"
 
 #: archive.c:12
 msgid "git archive --list"
 msgstr "git archive --list"
 
 #: archive.c:13
 msgid ""
-"git archive --remote <repo> [--exec <cmd>] [options] <tree-ish> [<path>...]"
+"git archive --remote <repo> [--exec <cmd>] [<options>] <tree-ish> [<path>...]"
 msgstr ""
-"git archive --remote <版本库> [--exec <命令>] [选项] <树或提交> [<路径>...]"
+"git archive --remote <版本库> [--exec <命令>] [<选项>] <树或提交> [<路径>...]"
 
 #: archive.c:14
 msgid "git archive --remote <repo> [--exec <cmd>] --list"
 msgstr "git archive --remote <版本库> [--exec <命令>] --list"
 
 #: archive.c:342 builtin/add.c:137 builtin/add.c:427 builtin/rm.c:328
@@ -71,16 +71,16 @@
 msgstr "前缀"
 
 #: archive.c:429
 msgid "prepend prefix to each pathname in the archive"
 msgstr "为归档中每个路径名加上前缀"
 
-#: archive.c:430 builtin/archive.c:88 builtin/blame.c:2517
-#: builtin/blame.c:2518 builtin/config.c:57 builtin/fast-export.c:986
+#: archive.c:430 builtin/archive.c:88 builtin/blame.c:2516
+#: builtin/blame.c:2517 builtin/config.c:57 builtin/fast-export.c:986
 #: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:101
-#: builtin/ls-files.c:489 builtin/ls-files.c:492 builtin/notes.c:394
+#: builtin/ls-files.c:446 builtin/ls-files.c:449 builtin/notes.c:394
 #: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:151
 msgid "file"
 msgstr "文件"
 
 #: archive.c:431 builtin/archive.c:89
 msgid "write the archive to this file"
@@ -123,13 +123,13 @@
 msgstr "命令"
 
 #: archive.c:452 builtin/archive.c:93
 msgid "path to the remote git-upload-archive command"
 msgstr "远程 git-upload-archive 命令的路径"
 
-#: attr.c:258
+#: attr.c:264
 msgid ""
 "Negative patterns are ignored in git attributes\n"
 "Use '\\!' for literal leading exclamation."
 msgstr ""
 "负值模版在 git attributes 中被忽略\n"
 "当字符串确实要以感叹号开始时，使用 '\\!'。"
@@ -248,23 +248,23 @@
 
 #: bundle.c:61
 #, c-format
 msgid "unrecognized header: %s%s (%d)"
 msgstr "未能识别的包头：%s%s (%d)"
 
-#: bundle.c:87 builtin/commit.c:770
+#: bundle.c:87 builtin/commit.c:766
 #, c-format
 msgid "could not open '%s'"
 msgstr "不能打开 '%s'"
 
 #: bundle.c:139
 msgid "Repository lacks these prerequisite commits:"
 msgstr "版本库缺少这些必备的提交："
 
-#: bundle.c:163 sequencer.c:645 sequencer.c:1100 builtin/blame.c:2706
-#: builtin/branch.c:652 builtin/commit.c:1049 builtin/log.c:330
+#: bundle.c:163 sequencer.c:650 sequencer.c:1105 builtin/blame.c:2705
+#: builtin/branch.c:659 builtin/commit.c:1045 builtin/log.c:330
 #: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:358
 #: builtin/shortlog.c:158
 msgid "revision walk setup failed"
 msgstr "版本遍历设置失败"
 
 #: bundle.c:185
@@ -299,27 +299,27 @@
 
 #: bundle.c:358
 #, c-format
 msgid "ref '%s' is excluded by the rev-list options"
 msgstr "引用 '%s' 被 rev-list 选项排除"
 
-#: bundle.c:438 builtin/log.c:153 builtin/log.c:1342 builtin/shortlog.c:261
+#: bundle.c:437 builtin/log.c:153 builtin/log.c:1342 builtin/shortlog.c:261
 #, c-format
 msgid "unrecognized argument: %s"
 msgstr "未能识别的参数：%s"
 
-#: bundle.c:444
+#: bundle.c:443
 msgid "Refusing to create empty bundle."
 msgstr "不能创建空包。"
 
-#: bundle.c:454
+#: bundle.c:453
 #, c-format
 msgid "cannot create '%s'"
 msgstr "不能创建 '%s'"
 
-#: bundle.c:475
+#: bundle.c:474
 msgid "index-pack died"
 msgstr "index-pack 终止"
 
 #: color.c:260
 #, c-format
 msgid "invalid color value: %.*s"
@@ -336,61 +336,61 @@
 msgstr "%s %s 不是一个提交!"
 
 #: compat/obstack.c:406 compat/obstack.c:408
 msgid "memory exhausted"
 msgstr "内存耗尽"
 
-#: config.c:469 config.c:471
+#: config.c:474 config.c:476
 #, c-format
 msgid "bad config file line %d in %s"
 msgstr "配置文件 %2$s 出错于第 %1$d 行"
 
-#: config.c:587
+#: config.c:592
 #, c-format
 msgid "bad numeric config value '%s' for '%s' in %s: %s"
 msgstr "文件 %3$s 中配置变量 '%2$s' 的数字取值 '%1$s' 设置错误: %4$s"
 
-#: config.c:589
+#: config.c:594
 #, c-format
 msgid "bad numeric config value '%s' for '%s': %s"
 msgstr "配置变量 '%2$s' 的数字取值 '%1$s' 设置错误: %3$s"
 
-#: config.c:674
+#: config.c:679
 #, c-format
 msgid "failed to expand user dir in: '%s'"
 msgstr "无法扩展 '%s' 中的用户目录"
 
-#: config.c:752 config.c:763
+#: config.c:757 config.c:768
 #, c-format
 msgid "bad zlib compression level %d"
 msgstr "错误的 zlib 压缩级别 %d"
 
-#: config.c:885
+#: config.c:890
 #, c-format
 msgid "invalid mode for object creation: %s"
 msgstr "无效的对象创建模式：%s"
 
-#: config.c:1211
+#: config.c:1216
 msgid "unable to parse command-line config"
 msgstr "无法解析命令行中的配置"
 
-#: config.c:1272
+#: config.c:1277
 msgid "unknown error occured while reading the configuration files"
 msgstr "在读取配置文件时遇到未知错误"
 
-#: config.c:1596
+#: config.c:1601
 #, c-format
 msgid "unable to parse '%s' from command-line config"
 msgstr "无法解析命令行配置中的 '%s'"
 
-#: config.c:1598
+#: config.c:1603
 #, c-format
 msgid "bad config variable '%s' in file '%s' at line %d"
 msgstr "在文件 '%2$s' 的第 %3$d 行发现错误的配置变量 '%1$s'"
 
-#: config.c:1657
+#: config.c:1662
 #, c-format
 msgid "%s has multiple values"
 msgstr "%s 有多个取值"
 
 #: connected.c:69
 msgid "Could not run 'git rev-list'"
@@ -476,13 +476,13 @@
 
 #: diffcore-order.c:24
 #, c-format
 msgid "failed to read orderfile '%s'"
 msgstr "无法读取排序文件 '%s'"
 
-#: diffcore-rename.c:516
+#: diffcore-rename.c:536
 msgid "Performing inexact rename detection"
 msgstr "正在进行非精确的重命名检测"
 
 #  译者：注意保持前导空格
 #: diff.c:114
 #, c-format
@@ -506,31 +506,31 @@
 "Found errors in 'diff.dirstat' config variable:\n"
 "%s"
 msgstr ""
 "发现配置变量 'diff.dirstat' 中的错误：\n"
 "%s"
 
-#: diff.c:2957
+#: diff.c:2956
 #, c-format
 msgid "external diff died, stopping at %s"
 msgstr "外部 diff 退出，停止在 %s"
 
-#: diff.c:3352
+#: diff.c:3351
 msgid "--follow requires exactly one pathspec"
 msgstr "--follow 参数后只跟一个 pathspec"
 
-#: diff.c:3515
+#: diff.c:3514
 #, c-format
 msgid ""
 "Failed to parse --dirstat/-X option parameter:\n"
 "%s"
 msgstr ""
 "无法解析 --dirstat/-X 选项的参数：\n"
 "%s"
 
-#: diff.c:3529
+#: diff.c:3528
 #, c-format
 msgid "Failed to parse --submodule option parameter: '%s'"
 msgstr "无法解析 --submodule 选项的参数：'%s'"
 
 #: gpg-interface.c:129 gpg-interface.c:200
 msgid "could not run gpg."
@@ -875,33 +875,33 @@
 
 #: merge-recursive.c:1853
 #, c-format
 msgid "Unprocessed path??? %s"
 msgstr "未处理的路径??? %s"
 
-#: merge-recursive.c:1898
+#: merge-recursive.c:1901
 msgid "Merging:"
 msgstr "合并："
 
-#: merge-recursive.c:1911
+#: merge-recursive.c:1914
 #, c-format
 msgid "found %u common ancestor:"
 msgid_plural "found %u common ancestors:"
 msgstr[0] "发现 %u 个共同祖先："
 msgstr[1] "发现 %u 个共同祖先："
 
-#: merge-recursive.c:1948
+#: merge-recursive.c:1951
 msgid "merge returned no commit"
 msgstr "合并未返回提交"
 
-#: merge-recursive.c:2005
+#: merge-recursive.c:2008
 #, c-format
 msgid "Could not parse object '%s'"
 msgstr "不能解析对象 '%s'"
 
-#: merge-recursive.c:2016 builtin/merge.c:667
+#: merge-recursive.c:2019 builtin/merge.c:667
 msgid "Unable to write index."
 msgstr "不能写入索引。"
 
 #: notes-utils.c:41
 msgid "Cannot commit uninitialized/unreferenced notes tree"
 msgstr "不能提交未初始化/未引用的注解树"
@@ -1021,22 +1021,22 @@
 msgstr "不能解析 --pretty 格式"
 
 #: progress.c:225
 msgid "done"
 msgstr "完成"
 
-#: read-cache.c:1267
+#: read-cache.c:1275
 #, c-format
 msgid ""
 "index.version set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "设置了 index.version，但是取值无效。\n"
 "使用版本 %i"
 
-#: read-cache.c:1277
+#: read-cache.c:1285
 #, c-format
 msgid ""
 "GIT_INDEX_VERSION set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "设置了 GIT_INDEX_VERSION，但是取值无效。\n"
@@ -1116,29 +1116,37 @@
 
 #  译者：注意保持前导空格
 #: remote.c:2021
 msgid "  (use \"git pull\" to merge the remote branch into yours)\n"
 msgstr "  （使用 \"git pull\" 来合并远程分支）\n"
 
-#: run-command.c:87
+#: revision.c:2348
+msgid "--first-parent is incompatible with --bisect"
+msgstr "--first-parent 与 --bisect 不兼容"
+
+#: run-command.c:83
 msgid "open /dev/null failed"
 msgstr "不能打开 /dev/null"
 
-#: run-command.c:89
+#: run-command.c:85
 #, c-format
 msgid "dup2(%d,%d) failed"
 msgstr "不能调用 dup2(%d,%d)"
 
-#: send-pack.c:268
+#: send-pack.c:272
 msgid "failed to sign the push certificate"
 msgstr "无法为推送证书签名"
 
-#: send-pack.c:325
+#: send-pack.c:356
 msgid "the receiving end does not support --signed push"
 msgstr "接收端不支持签名推送"
 
+#: send-pack.c:366
+msgid "the receiving end does not support --atomic push"
+msgstr "接收端不支持原子推送"
+
 #: sequencer.c:172 builtin/merge.c:782 builtin/merge.c:893 builtin/merge.c:995
 #: builtin/merge.c:1005
 #, c-format
 msgid "Could not open '%s' for writing"
 msgstr "不能为写入打开 '%s'"
 
@@ -1162,13 +1170,13 @@
 "with 'git add <paths>' or 'git rm <paths>'\n"
 "and commit the result with 'git commit'"
 msgstr ""
 "冲突解决完毕后，用 'git add <路径>' 或 'git rm <路径>'\n"
 "对修正后的文件做标记，然后用 'git commit' 提交"
 
-#: sequencer.c:211 sequencer.c:856 sequencer.c:939
+#: sequencer.c:211 sequencer.c:861 sequencer.c:944
 #, c-format
 msgid "Could not write to %s"
 msgstr "不能写入 %s"
 
 #: sequencer.c:214
 #, c-format
@@ -1198,190 +1206,190 @@
 msgstr "不能解析 HEAD 提交\n"
 
 #: sequencer.c:359
 msgid "Unable to update cache tree\n"
 msgstr "不能更新缓存\n"
 
-#: sequencer.c:406
+#: sequencer.c:411
 #, c-format
 msgid "Could not parse commit %s\n"
 msgstr "不能解析提交 %s\n"
 
-#: sequencer.c:411
+#: sequencer.c:416
 #, c-format
 msgid "Could not parse parent commit %s\n"
 msgstr "不能解析父提交 %s\n"
 
-#: sequencer.c:477
+#: sequencer.c:482
 msgid "Your index file is unmerged."
 msgstr "您的索引文件未完成合并。"
 
-#: sequencer.c:496
+#: sequencer.c:501
 #, c-format
 msgid "Commit %s is a merge but no -m option was given."
 msgstr "提交 %s 是一个合并提交但未提供 -m 选项。"
 
-#: sequencer.c:504
+#: sequencer.c:509
 #, c-format
 msgid "Commit %s does not have parent %d"
 msgstr "提交 %s 没有父提交 %d"
 
-#: sequencer.c:508
+#: sequencer.c:513
 #, c-format
 msgid "Mainline was specified but commit %s is not a merge."
 msgstr "指定了主线但提交 %s 不是一个合并。"
 
 #. TRANSLATORS: The first %s will be "revert" or
 #. "cherry-pick", the second %s a SHA1
-#: sequencer.c:521
+#: sequencer.c:526
 #, c-format
 msgid "%s: cannot parse parent commit %s"
 msgstr "%s：不能解析父提交 %s"
 
-#: sequencer.c:525
+#: sequencer.c:530
 #, c-format
 msgid "Cannot get commit message for %s"
 msgstr "不能得到 %s 的提交说明"
 
-#: sequencer.c:611
+#: sequencer.c:616
 #, c-format
 msgid "could not revert %s... %s"
 msgstr "不能还原 %s... %s"
 
-#: sequencer.c:612
+#: sequencer.c:617
 #, c-format
 msgid "could not apply %s... %s"
 msgstr "不能应用 %s... %s"
 
-#: sequencer.c:648
+#: sequencer.c:653
 msgid "empty commit set passed"
 msgstr "提供了空的提交集"
 
-#: sequencer.c:656
+#: sequencer.c:661
 #, c-format
 msgid "git %s: failed to read the index"
 msgstr "git %s：无法读取索引"
 
-#: sequencer.c:660
+#: sequencer.c:665
 #, c-format
 msgid "git %s: failed to refresh the index"
 msgstr "git %s：无法刷新索引"
 
-#: sequencer.c:720
+#: sequencer.c:725
 #, c-format
 msgid "Cannot %s during a %s"
 msgstr "无法 %s 在一个 %s 过程中"
 
-#: sequencer.c:742
+#: sequencer.c:747
 #, c-format
 msgid "Could not parse line %d."
 msgstr "不能解析第 %d 行。"
 
-#: sequencer.c:747
+#: sequencer.c:752
 msgid "No commits parsed."
 msgstr "没有提交被解析。"
 
-#: sequencer.c:760
+#: sequencer.c:765
 #, c-format
 msgid "Could not open %s"
 msgstr "不能打开 %s"
 
-#: sequencer.c:764
+#: sequencer.c:769
 #, c-format
 msgid "Could not read %s."
 msgstr "不能读取 %s。"
 
-#: sequencer.c:771
+#: sequencer.c:776
 #, c-format
 msgid "Unusable instruction sheet: %s"
 msgstr "无用的指令表单：%s"
 
-#: sequencer.c:801
+#: sequencer.c:806
 #, c-format
 msgid "Invalid key: %s"
 msgstr "无效键名：%s"
 
-#: sequencer.c:804
+#: sequencer.c:809
 #, c-format
 msgid "Invalid value for %s: %s"
 msgstr "%s 的值无效：%s"
 
-#: sequencer.c:816
+#: sequencer.c:821
 #, c-format
 msgid "Malformed options sheet: %s"
 msgstr "非法的选项表单：%s"
 
-#: sequencer.c:837
+#: sequencer.c:842
 msgid "a cherry-pick or revert is already in progress"
 msgstr "一个拣选或还原操作已在进行"
 
-#: sequencer.c:838
+#: sequencer.c:843
 msgid "try \"git cherry-pick (--continue | --quit | --abort)\""
 msgstr "尝试 \"git cherry-pick (--continue | --quit | --abort)\""
 
-#: sequencer.c:842
+#: sequencer.c:847
 #, c-format
 msgid "Could not create sequencer directory %s"
 msgstr "不能创建序列目录 %s"
 
-#: sequencer.c:858 sequencer.c:943
+#: sequencer.c:863 sequencer.c:948
 #, c-format
 msgid "Error wrapping up %s."
 msgstr "错误收尾 %s。"
 
-#: sequencer.c:877 sequencer.c:1013
+#: sequencer.c:882 sequencer.c:1018
 msgid "no cherry-pick or revert in progress"
 msgstr "拣选或还原操作并未进行"
 
-#: sequencer.c:879
+#: sequencer.c:884
 msgid "cannot resolve HEAD"
 msgstr "不能解析 HEAD"
 
-#: sequencer.c:881
+#: sequencer.c:886
 msgid "cannot abort from a branch yet to be born"
 msgstr "不能从尚未建立的分支终止"
 
-#: sequencer.c:903 builtin/apply.c:4128
+#: sequencer.c:908 builtin/apply.c:4288
 #, c-format
 msgid "cannot open %s: %s"
 msgstr "不能打开 %s：%s"
 
-#: sequencer.c:906
+#: sequencer.c:911
 #, c-format
 msgid "cannot read %s: %s"
 msgstr "不能读取 %s：%s"
 
-#: sequencer.c:907
+#: sequencer.c:912
 msgid "unexpected end of file"
 msgstr "意外的文件结束"
 
-#: sequencer.c:913
+#: sequencer.c:918
 #, c-format
 msgid "stored pre-cherry-pick HEAD file '%s' is corrupt"
 msgstr "保存拣选提交前的 HEAD 文件 '%s' 损坏"
 
-#: sequencer.c:936
+#: sequencer.c:941
 #, c-format
 msgid "Could not format %s."
 msgstr "不能格式化 %s。"
 
-#: sequencer.c:1081
+#: sequencer.c:1086
 #, c-format
 msgid "%s: can't cherry-pick a %s"
 msgstr "%s：不能拣选一个%s"
 
-#: sequencer.c:1084
+#: sequencer.c:1089
 #, c-format
 msgid "%s: bad revision"
 msgstr "%s：错误的版本"
 
-#: sequencer.c:1118
+#: sequencer.c:1123
 msgid "Can't revert as initial commit"
 msgstr "不能作为初始提交还原"
 
-#: sequencer.c:1119
+#: sequencer.c:1124
 msgid "Can't cherry-pick into empty head"
 msgstr "不能拣选到空分支"
 
 #: sha1_name.c:440
 msgid ""
 "Git normally never creates a ref that ends with 40 hex characters\n"
@@ -1442,44 +1450,44 @@
 msgstr "无法移除 %s 的 .gitmodules 条目"
 
 #: submodule.c:120
 msgid "staging updated .gitmodules failed"
 msgstr "将更新后 .gitmodules 添加暂存区失败"
 
-#: submodule.c:1111 builtin/init-db.c:371
+#: submodule.c:1109 builtin/init-db.c:371
 #, c-format
 msgid "Could not create git link %s"
 msgstr "不能创建 git link %s"
 
-#: submodule.c:1122
+#: submodule.c:1120
 #, c-format
 msgid "Could not set core.worktree in %s"
 msgstr "不能在 %s 中设置 core.worktree"
 
-#: trailer.c:500 trailer.c:504 trailer.c:508 trailer.c:562 trailer.c:566
-#: trailer.c:570
+#: trailer.c:491 trailer.c:495 trailer.c:499 trailer.c:553 trailer.c:557
+#: trailer.c:561
 #, c-format
 msgid "unknown value '%s' for key '%s'"
 msgstr "键 '%2$s' 的未知取值 '%1$s'"
 
-#: trailer.c:552 trailer.c:557 builtin/remote.c:290
+#: trailer.c:543 trailer.c:548 builtin/remote.c:290
 #, c-format
 msgid "more than one %s"
 msgstr "多于一个 %s"
 
-#: trailer.c:590
+#: trailer.c:581
 #, c-format
 msgid "empty trailer token in trailer '%.*s'"
 msgstr "签名 '%.*s' 的键为空"
 
-#: trailer.c:710
+#: trailer.c:701
 #, c-format
 msgid "could not read input file '%s'"
 msgstr "不能读取输入文件 '%s'"
 
-#: trailer.c:713
+#: trailer.c:704
 msgid "could not read from stdin"
 msgstr "不能自标准输入读取"
 
 #: unpack-trees.c:202
 msgid "Checking out files"
 msgstr "正在检出文件"
@@ -1510,32 +1518,32 @@
 msgstr "无效的端口号"
 
 #: urlmatch.c:322
 msgid "invalid '..' path segment"
 msgstr "无效的 '..' 路径片段"
 
-#: wrapper.c:509
+#: wrapper.c:523
 #, c-format
 msgid "unable to access '%s': %s"
 msgstr "不能访问 '%s'：%s"
 
-#: wrapper.c:530
+#: wrapper.c:544
 #, c-format
 msgid "unable to access '%s'"
 msgstr "不能访问 '%s'"
 
-#: wrapper.c:541
+#: wrapper.c:555
 #, c-format
 msgid "unable to look up current user in the passwd file: %s"
 msgstr "无法在口令文件中查询到当前用户：%s"
 
-#: wrapper.c:542
+#: wrapper.c:556
 msgid "no such user"
 msgstr "无此用户"
 
-#: wrapper.c:550
+#: wrapper.c:564
 msgid "unable to get current working directory"
 msgstr "不能获取当前工作目录"
 
 #: wt-status.c:150
 msgid "Unmerged paths:"
 msgstr "未合并的路径："
@@ -1563,17 +1571,17 @@
 
 #  译者：注意保持前导空格
 #: wt-status.c:187
 msgid "  (use \"git rm <file>...\" to mark resolution)"
 msgstr "  （使用 \"git rm <文件>...\" 标记解决方案）"
 
-#: wt-status.c:198
+#: wt-status.c:198 wt-status.c:878
 msgid "Changes to be committed:"
 msgstr "要提交的变更："
 
-#: wt-status.c:216
+#: wt-status.c:216 wt-status.c:887
 msgid "Changes not staged for commit:"
 msgstr "尚未暂存以备提交的变更："
 
 #  译者：注意保持前导空格
 #: wt-status.c:220
 msgid "  (use \"git add <file>...\" to update what will be committed)"
@@ -1683,321 +1691,321 @@
 
 #: wt-status.c:391
 #, c-format
 msgid "bug: unhandled diff status %c"
 msgstr "bug：无法处理的差异状态 %c"
 
-#: wt-status.c:758
+#: wt-status.c:753
 msgid "Submodules changed but not updated:"
 msgstr "子模组已修改但尚未更新："
 
-#: wt-status.c:760
+#: wt-status.c:755
 msgid "Submodule changes to be committed:"
 msgstr "要提交的子模组变更："
 
-#: wt-status.c:839
+#: wt-status.c:835
 msgid ""
 "Do not touch the line above.\n"
 "Everything below will be removed."
 msgstr ""
 "不要改动上面的一行。\n"
 "下面的所有内容均将被删除。"
 
-#: wt-status.c:930
+#: wt-status.c:946
 msgid "You have unmerged paths."
 msgstr "您有尚未合并的路径。"
 
 #  译者：注意保持前导空格
-#: wt-status.c:933
+#: wt-status.c:949
 msgid "  (fix conflicts and run \"git commit\")"
 msgstr "  （解决冲突并运行 \"git commit\"）"
 
-#: wt-status.c:936
+#: wt-status.c:952
 msgid "All conflicts fixed but you are still merging."
 msgstr "所有冲突已解决但您仍处于合并中。"
 
 #  译者：注意保持前导空格
-#: wt-status.c:939
+#: wt-status.c:955
 msgid "  (use \"git commit\" to conclude merge)"
 msgstr "  （使用 \"git commit\" 结束合并）"
 
-#: wt-status.c:949
+#: wt-status.c:965
 msgid "You are in the middle of an am session."
 msgstr "您正处于 am 操作过程中。"
 
-#: wt-status.c:952
+#: wt-status.c:968
 msgid "The current patch is empty."
 msgstr "当前的补丁为空。"
 
 #  译者：注意保持前导空格
-#: wt-status.c:956
+#: wt-status.c:972
 msgid "  (fix conflicts and then run \"git am --continue\")"
 msgstr "  （解决冲突，然后运行 \"git am --continue\"）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:958
+#: wt-status.c:974
 msgid "  (use \"git am --skip\" to skip this patch)"
 msgstr "  （使用 \"git am --skip\" 跳过此补丁）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:960
+#: wt-status.c:976
 msgid "  (use \"git am --abort\" to restore the original branch)"
 msgstr "  （使用 \"git am --abort\" 恢复原有分支）"
 
-#: wt-status.c:1020 wt-status.c:1037
+#: wt-status.c:1036 wt-status.c:1053
 #, c-format
 msgid "You are currently rebasing branch '%s' on '%s'."
 msgstr "您在执行将分支 '%s' 变基到 '%s' 的操作。"
 
-#: wt-status.c:1025 wt-status.c:1042
+#: wt-status.c:1041 wt-status.c:1058
 msgid "You are currently rebasing."
 msgstr "您在执行变基操作。"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1028
+#: wt-status.c:1044
 msgid "  (fix conflicts and then run \"git rebase --continue\")"
 msgstr "  （解决冲突，然后运行 \"git rebase --continue\"）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1030
+#: wt-status.c:1046
 msgid "  (use \"git rebase --skip\" to skip this patch)"
 msgstr "  （使用 \"git rebase --skip\" 跳过此补丁）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1032
+#: wt-status.c:1048
 msgid "  (use \"git rebase --abort\" to check out the original branch)"
 msgstr "  （使用 \"git rebase --abort\" 以检出原有分支）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1045
+#: wt-status.c:1061
 msgid "  (all conflicts fixed: run \"git rebase --continue\")"
 msgstr "  （所有冲突已解决：运行 \"git rebase --continue\"）"
 
-#: wt-status.c:1049
+#: wt-status.c:1065
 #, c-format
 msgid ""
 "You are currently splitting a commit while rebasing branch '%s' on '%s'."
 msgstr "您在执行将分支 '%s' 变基到 '%s' 的操作时拆分提交。"
 
-#: wt-status.c:1054
+#: wt-status.c:1070
 msgid "You are currently splitting a commit during a rebase."
 msgstr "您在执行变基操作时拆分提交。"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1057
+#: wt-status.c:1073
 msgid "  (Once your working directory is clean, run \"git rebase --continue\")"
 msgstr "  （一旦您工作目录提交干净后，运行 \"git rebase --continue\"）"
 
-#: wt-status.c:1061
+#: wt-status.c:1077
 #, c-format
 msgid "You are currently editing a commit while rebasing branch '%s' on '%s'."
 msgstr "您在执行将分支 '%s' 变基到 '%s' 的操作时编辑提交。"
 
-#: wt-status.c:1066
+#: wt-status.c:1082
 msgid "You are currently editing a commit during a rebase."
 msgstr "您在执行变基操作时编辑提交。"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1069
+#: wt-status.c:1085
 msgid "  (use \"git commit --amend\" to amend the current commit)"
 msgstr "  （使用 \"git commit --amend\" 修补当前提交）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1071
+#: wt-status.c:1087
 msgid ""
 "  (use \"git rebase --continue\" once you are satisfied with your changes)"
 msgstr "  （当您对您的修改满意后执行 \"git rebase --continue\"）"
 
-#: wt-status.c:1081
+#: wt-status.c:1097
 #, c-format
 msgid "You are currently cherry-picking commit %s."
 msgstr "您在执行拣选提交 %s 的操作。"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1086
+#: wt-status.c:1102
 msgid "  (fix conflicts and run \"git cherry-pick --continue\")"
 msgstr "  （解决冲突并运行 \"git cherry-pick --continue\"）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1089
+#: wt-status.c:1105
 msgid "  (all conflicts fixed: run \"git cherry-pick --continue\")"
 msgstr "  （所有冲突已解决：运行 \"git cherry-pick --continue\"）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1091
+#: wt-status.c:1107
 msgid "  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)"
 msgstr "  （使用 \"git cherry-pick --abort\" 以取消拣选操作）"
 
-#: wt-status.c:1100
+#: wt-status.c:1116
 #, c-format
 msgid "You are currently reverting commit %s."
 msgstr "您在执行反转提交 %s 的操作。"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1105
+#: wt-status.c:1121
 msgid "  (fix conflicts and run \"git revert --continue\")"
 msgstr "  （解决冲突并运行 \"git revert --continue\"）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1108
+#: wt-status.c:1124
 msgid "  (all conflicts fixed: run \"git revert --continue\")"
 msgstr "  （所有冲突已解决：运行 \"git revert --continue\"）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1110
+#: wt-status.c:1126
 msgid "  (use \"git revert --abort\" to cancel the revert operation)"
 msgstr "  （使用 \"git revert --abort\" 以取消反转提交操作）"
 
-#: wt-status.c:1121
+#: wt-status.c:1137
 #, c-format
 msgid "You are currently bisecting, started from branch '%s'."
 msgstr "您在执行从分支 '%s' 开始的二分查找操作。"
 
-#: wt-status.c:1125
+#: wt-status.c:1141
 msgid "You are currently bisecting."
 msgstr "您在执行二分查找操作。"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1128
+#: wt-status.c:1144
 msgid "  (use \"git bisect reset\" to get back to the original branch)"
 msgstr "  （使用 \"git bisect reset\" 以回到原有分支）"
 
-#: wt-status.c:1303
+#: wt-status.c:1321
 msgid "On branch "
 msgstr "位于分支 "
 
-#: wt-status.c:1310
+#: wt-status.c:1328
 msgid "rebase in progress; onto "
 msgstr "变基操作正在进行中；至 "
 
-#: wt-status.c:1317
+#: wt-status.c:1333
 msgid "HEAD detached at "
 msgstr "头指针分离于 "
 
-#: wt-status.c:1319
+#: wt-status.c:1335
 msgid "HEAD detached from "
 msgstr "头指针分离自 "
 
-#: wt-status.c:1322
+#: wt-status.c:1338
 msgid "Not currently on any branch."
 msgstr "当前不在任何分支上。"
 
-#: wt-status.c:1339
+#: wt-status.c:1355
 msgid "Initial commit"
 msgstr "初始提交"
 
-#: wt-status.c:1353
+#: wt-status.c:1369
 msgid "Untracked files"
 msgstr "未跟踪的文件"
 
-#: wt-status.c:1355
+#: wt-status.c:1371
 msgid "Ignored files"
 msgstr "忽略的文件"
 
-#: wt-status.c:1359
+#: wt-status.c:1375
 #, c-format
 msgid ""
 "It took %.2f seconds to enumerate untracked files. 'status -uno'\n"
 "may speed it up, but you have to be careful not to forget to add\n"
 "new files yourself (see 'git help status')."
 msgstr ""
 "耗费了 %.2f 秒以枚举未跟踪的文件。'status -uno' 也许能提高速度，\n"
 "但您需要小心不要忘了添加新文件（参见 'git help status'）。"
 
-#: wt-status.c:1365
+#: wt-status.c:1381
 #, c-format
 msgid "Untracked files not listed%s"
 msgstr "未跟踪的文件没有列出%s"
 
 #  译者：中文字符串拼接，可删除前导空格
-#: wt-status.c:1367
+#: wt-status.c:1383
 msgid " (use -u option to show untracked files)"
 msgstr "（使用 -u 参数显示未跟踪的文件）"
 
-#: wt-status.c:1373
+#: wt-status.c:1389
 msgid "No changes"
 msgstr "没有修改"
 
-#: wt-status.c:1378
+#: wt-status.c:1394
 #, c-format
 msgid "no changes added to commit (use \"git add\" and/or \"git commit -a\")\n"
 msgstr "修改尚未加入提交（使用 \"git add\" 和/或 \"git commit -a\"）\n"
 
-#: wt-status.c:1381
+#: wt-status.c:1397
 #, c-format
 msgid "no changes added to commit\n"
 msgstr "修改尚未加入提交\n"
 
-#: wt-status.c:1384
+#: wt-status.c:1400
 #, c-format
 msgid ""
 "nothing added to commit but untracked files present (use \"git add\" to "
 "track)\n"
 msgstr "提交为空，但是存在尚未跟踪的文件（使用 \"git add\" 建立跟踪）\n"
 
-#: wt-status.c:1387
+#: wt-status.c:1403
 #, c-format
 msgid "nothing added to commit but untracked files present\n"
 msgstr "提交为空，但是存在尚未跟踪的文件\n"
 
 #  译者：中文字符串拼接，可删除前导空格
-#: wt-status.c:1390
+#: wt-status.c:1406
 #, c-format
 msgid "nothing to commit (create/copy files and use \"git add\" to track)\n"
 msgstr "无文件要提交（创建/拷贝文件并使用 \"git add\" 建立跟踪）\n"
 
-#: wt-status.c:1393 wt-status.c:1398
+#: wt-status.c:1409 wt-status.c:1414
 #, c-format
 msgid "nothing to commit\n"
 msgstr "无文件要提交\n"
 
 #  译者：中文字符串拼接，可删除前导空格
-#: wt-status.c:1396
+#: wt-status.c:1412
 #, c-format
 msgid "nothing to commit (use -u to show untracked files)\n"
 msgstr "无文件要提交（使用 -u 显示未跟踪的文件）\n"
 
 #  译者：中文字符串拼接，可删除前导空格
-#: wt-status.c:1400
+#: wt-status.c:1416
 #, c-format
 msgid "nothing to commit, working directory clean\n"
 msgstr "无文件要提交，干净的工作区\n"
 
-#: wt-status.c:1509
+#: wt-status.c:1525
 msgid "HEAD (no branch)"
 msgstr "HEAD（非分支）"
 
 #  译者：注意保持句尾空格
-#: wt-status.c:1515
+#: wt-status.c:1531
 msgid "Initial commit on "
 msgstr "初始提交于 "
 
-#: wt-status.c:1547
+#: wt-status.c:1563
 msgid "gone"
 msgstr "丢失"
 
 #  译者：注意保持句尾空格
-#: wt-status.c:1549 wt-status.c:1557
+#: wt-status.c:1565 wt-status.c:1573
 msgid "behind "
 msgstr "落后 "
 
 #: compat/precompose_utf8.c:55 builtin/clone.c:360
 #, c-format
 msgid "failed to unlink '%s'"
 msgstr "无法删除 '%s'"
 
 #: builtin/add.c:22
-msgid "git add [options] [--] <pathspec>..."
-msgstr "git add [选项] [--] <路径规则>..."
+msgid "git add [<options>] [--] <pathspec>..."
+msgstr "git add [<选项>] [--] <路径规则>..."
 
 #: builtin/add.c:65
 #, c-format
 msgid "unexpected diff status %c"
 msgstr "意外的差异状态 %c"
 
-#: builtin/add.c:70 builtin/commit.c:275
+#: builtin/add.c:70 builtin/commit.c:277
 msgid "updating files failed"
 msgstr "更新文件失败"
 
 #: builtin/add.c:80
 #, c-format
 msgid "remove '%s'\n"
@@ -2035,20 +2043,20 @@
 msgstr "不能应用 '%s'"
 
 #: builtin/add.c:231
 msgid "The following paths are ignored by one of your .gitignore files:\n"
 msgstr "下列路径根据您的一个 .gitignore 文件而被忽略：\n"
 
-#: builtin/add.c:248 builtin/clean.c:875 builtin/fetch.c:108 builtin/mv.c:110
-#: builtin/prune-packed.c:55 builtin/push.c:499 builtin/remote.c:1372
+#: builtin/add.c:248 builtin/clean.c:876 builtin/fetch.c:107 builtin/mv.c:110
+#: builtin/prune-packed.c:55 builtin/push.c:508 builtin/remote.c:1372
 #: builtin/rm.c:269
 msgid "dry run"
 msgstr "演习"
 
-#: builtin/add.c:249 builtin/apply.c:4415 builtin/check-ignore.c:19
-#: builtin/commit.c:1326 builtin/count-objects.c:63 builtin/fsck.c:608
+#: builtin/add.c:249 builtin/apply.c:4577 builtin/check-ignore.c:19
+#: builtin/commit.c:1322 builtin/count-objects.c:63 builtin/fsck.c:608
 #: builtin/log.c:1617 builtin/mv.c:109 builtin/read-tree.c:114
 msgid "be verbose"
 msgstr "冗长输出"
 
 #: builtin/add.c:251
 msgid "interactive picking"
@@ -2118,481 +2126,500 @@
 
 #: builtin/add.c:358
 #, c-format
 msgid "Maybe you wanted to say 'git add .'?\n"
 msgstr "也许您想要执行 'git add .'？\n"
 
-#: builtin/add.c:363 builtin/check-ignore.c:172 builtin/clean.c:919
-#: builtin/commit.c:333 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:299
+#: builtin/add.c:363 builtin/check-ignore.c:172 builtin/clean.c:920
+#: builtin/commit.c:335 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:299
 msgid "index file corrupt"
 msgstr "索引文件损坏"
 
-#: builtin/add.c:446 builtin/apply.c:4510 builtin/mv.c:279 builtin/rm.c:431
+#: builtin/add.c:446 builtin/apply.c:4675 builtin/mv.c:279 builtin/rm.c:431
 msgid "Unable to write new index file"
 msgstr "无法写入新索引文件"
 
-#: builtin/apply.c:58
-msgid "git apply [options] [<patch>...]"
-msgstr "git apply [选项] [<补丁>...]"
+#: builtin/apply.c:59
+msgid "git apply [<options>] [<patch>...]"
+msgstr "git apply [<选项>] [<补丁>...]"
 
-#: builtin/apply.c:111
+#: builtin/apply.c:112
 #, c-format
 msgid "unrecognized whitespace option '%s'"
 msgstr "未能识别的空白字符选项 '%s'"
 
-#: builtin/apply.c:126
+#: builtin/apply.c:127
 #, c-format
 msgid "unrecognized whitespace ignore option '%s'"
 msgstr "未能识别的空白字符忽略选项 '%s'"
 
-#: builtin/apply.c:826
+#: builtin/apply.c:822
 #, c-format
 msgid "Cannot prepare timestamp regexp %s"
 msgstr "无法准备时间戳正则表达式 %s"
 
-#: builtin/apply.c:835
+#: builtin/apply.c:831
 #, c-format
 msgid "regexec returned %d for input: %s"
 msgstr "regexec 返回 %d，输入为：%s"
 
-#: builtin/apply.c:916
+#: builtin/apply.c:912
 #, c-format
 msgid "unable to find filename in patch at line %d"
 msgstr "不能在补丁的第 %d 行找到文件名"
 
-#: builtin/apply.c:948
+#: builtin/apply.c:944
 #, c-format
 msgid "git apply: bad git-diff - expected /dev/null, got %s on line %d"
 msgstr "git apply：错误的 git-diff - 应为 /dev/null，但在第 %2$d 行得到 %1$s"
 
-#: builtin/apply.c:952
+#: builtin/apply.c:948
 #, c-format
 msgid "git apply: bad git-diff - inconsistent new filename on line %d"
 msgstr "git apply：错误的 git-diff - 第 %d 行上新文件名不一致"
 
-#: builtin/apply.c:953
+#: builtin/apply.c:949
 #, c-format
 msgid "git apply: bad git-diff - inconsistent old filename on line %d"
 msgstr "git apply：错误的 git-diff - 第 %d 行上旧文件名不一致"
 
-#: builtin/apply.c:960
+#: builtin/apply.c:956
 #, c-format
 msgid "git apply: bad git-diff - expected /dev/null on line %d"
 msgstr "git apply：错误的 git-diff - 第 %d 行处应为 /dev/null"
 
-#: builtin/apply.c:1423
+#: builtin/apply.c:1419
 #, c-format
 msgid "recount: unexpected line: %.*s"
 msgstr "recount：意外的行：%.*s"
 
-#: builtin/apply.c:1480
+#: builtin/apply.c:1476
 #, c-format
 msgid "patch fragment without header at line %d: %.*s"
 msgstr "第 %d 行的补丁片段没有头信息：%.*s"
 
-#: builtin/apply.c:1497
+#: builtin/apply.c:1493
 #, c-format
 msgid ""
 "git diff header lacks filename information when removing %d leading pathname "
 "component (line %d)"
 msgid_plural ""
 "git diff header lacks filename information when removing %d leading pathname "
 "components (line %d)"
 msgstr[0] "当移除 %d 个前导路径后 git diff 头缺乏文件名信息（第 %d 行）"
 msgstr[1] "当移除 %d 个前导路径后 git diff 头缺乏文件名信息（第 %d 行）"
 
-#: builtin/apply.c:1657
+#: builtin/apply.c:1656
 msgid "new file depends on old contents"
 msgstr "新文件依赖旧内容"
 
-#: builtin/apply.c:1659
+#: builtin/apply.c:1658
 msgid "deleted file still has contents"
 msgstr "删除的文件仍有内容"
 
-#: builtin/apply.c:1685
+#: builtin/apply.c:1684
 #, c-format
 msgid "corrupt patch at line %d"
 msgstr "补丁在第 %d 行损坏"
 
-#: builtin/apply.c:1721
+#: builtin/apply.c:1720
 #, c-format
 msgid "new file %s depends on old contents"
 msgstr "新文件 %s 依赖旧内容"
 
-#: builtin/apply.c:1723
+#: builtin/apply.c:1722
 #, c-format
 msgid "deleted file %s still has contents"
 msgstr "删除的文件 %s 仍有内容"
 
-#: builtin/apply.c:1726
+#: builtin/apply.c:1725
 #, c-format
 msgid "** warning: file %s becomes empty but is not deleted"
 msgstr "** 警告：文件 %s 成为空文件但并未删除"
 
-#: builtin/apply.c:1872
+#: builtin/apply.c:1871
 #, c-format
 msgid "corrupt binary patch at line %d: %.*s"
 msgstr "二进制补丁在第 %d 行损坏：%.*s"
 
-#: builtin/apply.c:1901
+#: builtin/apply.c:1900
 #, c-format
 msgid "unrecognized binary patch at line %d"
 msgstr "未能识别的二进制补丁位于第 %d 行"
 
-#: builtin/apply.c:2052
+#: builtin/apply.c:2051
 #, c-format
 msgid "patch with only garbage at line %d"
 msgstr "补丁文件的第 %d 行只有垃圾数据"
 
-#: builtin/apply.c:2142
+#: builtin/apply.c:2141
 #, c-format
 msgid "unable to read symlink %s"
 msgstr "无法读取符号链接 %s"
 
-#: builtin/apply.c:2146
+#: builtin/apply.c:2145
 #, c-format
 msgid "unable to open or read %s"
 msgstr "不能打开或读取 %s"
 
-#: builtin/apply.c:2754
+#: builtin/apply.c:2778
 #, c-format
 msgid "invalid start of line: '%c'"
 msgstr "无效的行首字符：'%c'"
 
-#: builtin/apply.c:2872
+#: builtin/apply.c:2897
 #, c-format
 msgid "Hunk #%d succeeded at %d (offset %d line)."
 msgid_plural "Hunk #%d succeeded at %d (offset %d lines)."
 msgstr[0] "块 #%d 成功应用于 %d（偏移 %d 行）"
 msgstr[1] "块 #%d 成功应用于 %d（偏移 %d 行）"
 
-#: builtin/apply.c:2884
+#: builtin/apply.c:2909
 #, c-format
 msgid "Context reduced to (%ld/%ld) to apply fragment at %d"
 msgstr "上下文减少到（%ld/%ld）以在第 %d 行应用补丁片段"
 
-#: builtin/apply.c:2890
+#: builtin/apply.c:2915
 #, c-format
 msgid ""
 "while searching for:\n"
 "%.*s"
 msgstr ""
 "当查询：\n"
 "%.*s"
 
-#: builtin/apply.c:2909
+#: builtin/apply.c:2935
 #, c-format
 msgid "missing binary patch data for '%s'"
 msgstr "缺失 '%s' 的二进制补丁数据"
 
-#: builtin/apply.c:3010
+#: builtin/apply.c:3036
 #, c-format
 msgid "binary patch does not apply to '%s'"
 msgstr "二进制补丁未应用到 '%s'"
 
-#: builtin/apply.c:3016
+#: builtin/apply.c:3042
 #, c-format
 msgid "binary patch to '%s' creates incorrect result (expecting %s, got %s)"
 msgstr "到 '%s' 的二进制补丁产生了不正确的结果（应为 %s，却为 %s）"
 
-#: builtin/apply.c:3037
+#: builtin/apply.c:3063
 #, c-format
 msgid "patch failed: %s:%ld"
 msgstr "打补丁失败：%s:%ld"
 
-#: builtin/apply.c:3161
+#: builtin/apply.c:3187
 #, c-format
 msgid "cannot checkout %s"
 msgstr "不能检出 %s"
 
-#: builtin/apply.c:3206 builtin/apply.c:3215 builtin/apply.c:3260
+#: builtin/apply.c:3232 builtin/apply.c:3243 builtin/apply.c:3288
 #, c-format
 msgid "read of %s failed"
 msgstr "读取 %s 失败"
 
-#: builtin/apply.c:3240 builtin/apply.c:3462
+#: builtin/apply.c:3240
+#, c-format
+msgid "reading from '%s' beyond a symbolic link"
+msgstr "读取位于符号链接中的 '%s'"
+
+#: builtin/apply.c:3268 builtin/apply.c:3490
 #, c-format
 msgid "path %s has been renamed/deleted"
 msgstr "路径 %s 已经被重命名/删除"
 
-#: builtin/apply.c:3321 builtin/apply.c:3476
+#: builtin/apply.c:3349 builtin/apply.c:3504
 #, c-format
 msgid "%s: does not exist in index"
 msgstr "%s：不存在于索引中"
 
-#: builtin/apply.c:3325 builtin/apply.c:3468 builtin/apply.c:3490
+#: builtin/apply.c:3353 builtin/apply.c:3496 builtin/apply.c:3518
 #, c-format
 msgid "%s: %s"
 msgstr "%s：%s"
 
-#: builtin/apply.c:3330 builtin/apply.c:3484
+#: builtin/apply.c:3358 builtin/apply.c:3512
 #, c-format
 msgid "%s: does not match index"
 msgstr "%s：和索引不匹配"
 
-#: builtin/apply.c:3432
+#: builtin/apply.c:3460
 msgid "removal patch leaves file contents"
 msgstr "移除补丁仍留下了文件内容"
 
-#: builtin/apply.c:3501
+#: builtin/apply.c:3529
 #, c-format
 msgid "%s: wrong type"
 msgstr "%s：错误类型"
 
-#: builtin/apply.c:3503
+#: builtin/apply.c:3531
 #, c-format
 msgid "%s has type %o, expected %o"
 msgstr "%s 的类型是 %o，应为 %o"
 
-#: builtin/apply.c:3604
+#: builtin/apply.c:3690 builtin/apply.c:3692
+#, c-format
+msgid "invalid path '%s'"
+msgstr "无效路径 '%s'"
+
+#: builtin/apply.c:3747
 #, c-format
 msgid "%s: already exists in index"
 msgstr "%s：已经存在于索引中"
 
-#: builtin/apply.c:3607
+#: builtin/apply.c:3750
 #, c-format
 msgid "%s: already exists in working directory"
 msgstr "%s：已经存在于工作区中"
 
-#: builtin/apply.c:3627
+#: builtin/apply.c:3770
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o)"
 msgstr "%2$s 的新模式（%1$o）和旧模式（%3$o）不匹配"
 
-#: builtin/apply.c:3632
+#: builtin/apply.c:3775
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o) of %s"
 msgstr "%2$s 的新模式（%1$o）和 %4$s 的旧模式（%3$o）不匹配"
 
-#: builtin/apply.c:3640
+#: builtin/apply.c:3795
+#, c-format
+msgid "affected file '%s' is beyond a symbolic link"
+msgstr "受影响的文件 '%s' 位于符号链接中"
+
+#: builtin/apply.c:3799
 #, c-format
 msgid "%s: patch does not apply"
 msgstr "%s：补丁未应用"
 
-#: builtin/apply.c:3653
+#: builtin/apply.c:3813
 #, c-format
 msgid "Checking patch %s..."
 msgstr "检查补丁 %s..."
 
-#: builtin/apply.c:3746 builtin/checkout.c:231 builtin/reset.c:135
+#: builtin/apply.c:3906 builtin/checkout.c:231 builtin/reset.c:135
 #, c-format
 msgid "make_cache_entry failed for path '%s'"
 msgstr "对路径 '%s' 的 make_cache_entry 操作失败"
 
-#: builtin/apply.c:3889
+#: builtin/apply.c:4049
 #, c-format
 msgid "unable to remove %s from index"
 msgstr "不能从索引中移除 %s"
 
-#: builtin/apply.c:3918
+#: builtin/apply.c:4078
 #, c-format
 msgid "corrupt patch for submodule %s"
 msgstr "子模组 %s 损坏的补丁"
 
-#: builtin/apply.c:3922
+#: builtin/apply.c:4082
 #, c-format
 msgid "unable to stat newly created file '%s'"
 msgstr "不能枚举新建文件 '%s' 的状态"
 
-#: builtin/apply.c:3927
+#: builtin/apply.c:4087
 #, c-format
 msgid "unable to create backing store for newly created file %s"
 msgstr "不能为新建文件 %s 创建后端存储"
 
-#: builtin/apply.c:3930 builtin/apply.c:4038
+#: builtin/apply.c:4090 builtin/apply.c:4198
 #, c-format
 msgid "unable to add cache entry for %s"
 msgstr "无法为 %s 添加缓存条目"
 
-#: builtin/apply.c:3963
+#: builtin/apply.c:4123
 #, c-format
 msgid "closing file '%s'"
 msgstr "关闭文件 '%s'"
 
-#: builtin/apply.c:4012
+#: builtin/apply.c:4172
 #, c-format
 msgid "unable to write file '%s' mode %o"
 msgstr "不能写文件 '%s' 权限 %o"
 
-#: builtin/apply.c:4099
+#: builtin/apply.c:4259
 #, c-format
 msgid "Applied patch %s cleanly."
 msgstr "成功应用补丁 %s。"
 
-#: builtin/apply.c:4107
+#: builtin/apply.c:4267
 msgid "internal error"
 msgstr "内部错误"
 
-#: builtin/apply.c:4110
+#: builtin/apply.c:4270
 #, c-format
 msgid "Applying patch %%s with %d reject..."
 msgid_plural "Applying patch %%s with %d rejects..."
 msgstr[0] "应用 %%s 个补丁，其中 %d 个被拒绝..."
 msgstr[1] "应用 %%s 个补丁，其中 %d 个被拒绝..."
 
-#: builtin/apply.c:4120
+#: builtin/apply.c:4280
 #, c-format
 msgid "truncating .rej filename to %.*s.rej"
 msgstr "截短 .rej 文件名为 %.*s.rej"
 
-#: builtin/apply.c:4141
+#: builtin/apply.c:4301
 #, c-format
 msgid "Hunk #%d applied cleanly."
 msgstr "第 #%d 个片段成功应用。"
 
-#: builtin/apply.c:4144
+#: builtin/apply.c:4304
 #, c-format
 msgid "Rejected hunk #%d."
 msgstr "拒绝第 #%d 个片段。"
 
-#: builtin/apply.c:4234
+#: builtin/apply.c:4394
 msgid "unrecognized input"
 msgstr "未能识别的输入"
 
-#: builtin/apply.c:4245
+#: builtin/apply.c:4405
 msgid "unable to read index file"
 msgstr "无法读取索引文件"
 
-#: builtin/apply.c:4362 builtin/apply.c:4365 builtin/clone.c:92
-#: builtin/fetch.c:93
+#: builtin/apply.c:4522 builtin/apply.c:4525 builtin/clone.c:92
+#: builtin/fetch.c:92
 msgid "path"
 msgstr "路径"
 
-#: builtin/apply.c:4363
+#: builtin/apply.c:4523
 msgid "don't apply changes matching the given path"
 msgstr "不要应用与给出路径向匹配的变更"
 
-#: builtin/apply.c:4366
+#: builtin/apply.c:4526
 msgid "apply changes matching the given path"
 msgstr "应用与给出路径向匹配的变更"
 
-#: builtin/apply.c:4368
+#: builtin/apply.c:4528
 msgid "num"
 msgstr "数字"
 
-#: builtin/apply.c:4369
+#: builtin/apply.c:4529
 msgid "remove <num> leading slashes from traditional diff paths"
 msgstr "从传统的 diff 路径中移除指定数量的前导斜线"
 
-#: builtin/apply.c:4372
+#: builtin/apply.c:4532
 msgid "ignore additions made by the patch"
 msgstr "忽略补丁中的添加的文件"
 
-#: builtin/apply.c:4374
+#: builtin/apply.c:4534
 msgid "instead of applying the patch, output diffstat for the input"
 msgstr "不应用补丁，而是显示输入的差异统计（diffstat）"
 
-#: builtin/apply.c:4378
+#: builtin/apply.c:4538
 msgid "show number of added and deleted lines in decimal notation"
 msgstr "以十进制数显示添加和删除的行数"
 
-#: builtin/apply.c:4380
+#: builtin/apply.c:4540
 msgid "instead of applying the patch, output a summary for the input"
 msgstr "不应用补丁，而是显示输入的概要"
 
-#: builtin/apply.c:4382
+#: builtin/apply.c:4542
 msgid "instead of applying the patch, see if the patch is applicable"
 msgstr "不应用补丁，而是查看补丁是否可应用"
 
-#: builtin/apply.c:4384
+#: builtin/apply.c:4544
 msgid "make sure the patch is applicable to the current index"
 msgstr "确认补丁可以应用到当前索引"
 
-#: builtin/apply.c:4386
+#: builtin/apply.c:4546
 msgid "apply a patch without touching the working tree"
 msgstr "应用补丁而不修改工作区"
 
-#: builtin/apply.c:4388
+#: builtin/apply.c:4548
+msgid "accept a patch that touches outside the working area"
+msgstr "接受修改工作区之外文件的补丁"
+
+#: builtin/apply.c:4550
 msgid "also apply the patch (use with --stat/--summary/--check)"
 msgstr "还应用此补丁（与 --stat/--summary/--check 选项同时使用）"
 
-#: builtin/apply.c:4390
+#: builtin/apply.c:4552
 msgid "attempt three-way merge if a patch does not apply"
 msgstr "如果一个补丁不能应用则尝试三路合并"
 
-#: builtin/apply.c:4392
+#: builtin/apply.c:4554
 msgid "build a temporary index based on embedded index information"
 msgstr "创建一个临时索引基于嵌入的索引信息"
 
-#: builtin/apply.c:4394 builtin/checkout-index.c:198 builtin/ls-files.c:455
+#: builtin/apply.c:4556 builtin/checkout-index.c:198 builtin/ls-files.c:412
 msgid "paths are separated with NUL character"
 msgstr "路径以 NUL 字符分隔"
 
-#: builtin/apply.c:4397
+#: builtin/apply.c:4559
 msgid "ensure at least <n> lines of context match"
 msgstr "确保至少匹配 <n> 行上下文"
 
-#: builtin/apply.c:4398
+#: builtin/apply.c:4560
 msgid "action"
 msgstr "动作"
 
-#: builtin/apply.c:4399
+#: builtin/apply.c:4561
 msgid "detect new or modified lines that have whitespace errors"
 msgstr "检查新增和修改的行中间的空白字符滥用"
 
-#: builtin/apply.c:4402 builtin/apply.c:4405
+#: builtin/apply.c:4564 builtin/apply.c:4567
 msgid "ignore changes in whitespace when finding context"
 msgstr "查找上下文时忽略空白字符的变更"
 
-#: builtin/apply.c:4408
+#: builtin/apply.c:4570
 msgid "apply the patch in reverse"
 msgstr "反向应用补丁"
 
-#: builtin/apply.c:4410
+#: builtin/apply.c:4572
 msgid "don't expect at least one line of context"
 msgstr "无需至少一行上下文"
 
-#: builtin/apply.c:4412
+#: builtin/apply.c:4574
 msgid "leave the rejected hunks in corresponding *.rej files"
 msgstr "将拒绝的补丁片段保存在对应的 *.rej 文件中"
 
-#: builtin/apply.c:4414
+#: builtin/apply.c:4576
 msgid "allow overlapping hunks"
 msgstr "允许重叠的补丁片段"
 
-#: builtin/apply.c:4417
+#: builtin/apply.c:4579
 msgid "tolerate incorrectly detected missing new-line at the end of file"
 msgstr "允许不正确的文件末尾换行符"
 
-#: builtin/apply.c:4420
+#: builtin/apply.c:4582
 msgid "do not trust the line counts in the hunk headers"
 msgstr "不信任补丁片段的头信息中的行号"
 
-#: builtin/apply.c:4422
+#: builtin/apply.c:4584
 msgid "root"
 msgstr "根目录"
 
-#: builtin/apply.c:4423
+#: builtin/apply.c:4585
 msgid "prepend <root> to all filenames"
 msgstr "为所有文件名前添加 <根目录>"
 
-#: builtin/apply.c:4445
+#: builtin/apply.c:4607
 msgid "--3way outside a repository"
 msgstr "--3way 在一个版本库之外"
 
-#: builtin/apply.c:4453
+#: builtin/apply.c:4615
 msgid "--index outside a repository"
 msgstr "--index 在一个版本库之外"
 
-#: builtin/apply.c:4456
+#: builtin/apply.c:4618
 msgid "--cached outside a repository"
 msgstr "--cached 在一个版本库之外"
 
-#: builtin/apply.c:4472
+#: builtin/apply.c:4637
 #, c-format
 msgid "can't open patch '%s'"
 msgstr "不能打开补丁 '%s'"
 
-#: builtin/apply.c:4486
+#: builtin/apply.c:4651
 #, c-format
 msgid "squelched %d whitespace error"
 msgid_plural "squelched %d whitespace errors"
 msgstr[0] "抑制下仍有 %d 个空白字符误用"
 msgstr[1] "抑制下仍有 %d 个空白字符误用"
 
-#: builtin/apply.c:4492 builtin/apply.c:4502
+#: builtin/apply.c:4657 builtin/apply.c:4667
 #, c-format
 msgid "%d line adds whitespace errors."
 msgid_plural "%d lines add whitespace errors."
 msgstr[0] "%d 行有空白字符误用。"
 msgstr[1] "%d 行有空白字符误用。"
 
@@ -2641,136 +2668,136 @@
 
 #: builtin/bisect--helper.c:19
 msgid "update BISECT_HEAD instead of checking out the current commit"
 msgstr "更新 BISECT_HEAD 而非检出当前提交"
 
 #: builtin/blame.c:30
-msgid "git blame [options] [rev-opts] [rev] [--] file"
-msgstr "git blame [选项] [版本选项] [版本] [--] 文件"
+msgid "git blame [<options>] [<rev-opts>] [<rev>] [--] file"
+msgstr "git blame [<选项>] [<版本选项>] [<版本>] [--] 文件"
 
 #: builtin/blame.c:35
-msgid "[rev-opts] are documented in git-rev-list(1)"
-msgstr "[版本选项] 的文档记录在 git-rev-list(1) 中"
+msgid "<rev-opts> are documented in git-rev-list(1)"
+msgstr "<版本选项> 的文档记录在 git-rev-list(1) 中"
 
-#: builtin/blame.c:2501
+#: builtin/blame.c:2500
 msgid "Show blame entries as we find them, incrementally"
 msgstr "增量式地显示发现的 blame 条目"
 
-#: builtin/blame.c:2502
+#: builtin/blame.c:2501
 msgid "Show blank SHA-1 for boundary commits (Default: off)"
 msgstr "边界提交显示空的 SHA-1（默认：关闭）"
 
-#: builtin/blame.c:2503
+#: builtin/blame.c:2502
 msgid "Do not treat root commits as boundaries (Default: off)"
 msgstr "不把根提交作为边界（默认：关闭）"
 
-#: builtin/blame.c:2504
+#: builtin/blame.c:2503
 msgid "Show work cost statistics"
 msgstr "显示命令消耗统计"
 
-#: builtin/blame.c:2505
+#: builtin/blame.c:2504
 msgid "Show output score for blame entries"
 msgstr "显示判断 blame 条目位移的得分诊断信息"
 
-#: builtin/blame.c:2506
+#: builtin/blame.c:2505
 msgid "Show original filename (Default: auto)"
 msgstr "显示原始文件名（默认：自动）"
 
-#: builtin/blame.c:2507
+#: builtin/blame.c:2506
 msgid "Show original linenumber (Default: off)"
 msgstr "显示原始的行号（默认：关闭）"
 
-#: builtin/blame.c:2508
+#: builtin/blame.c:2507
 msgid "Show in a format designed for machine consumption"
 msgstr "显示为一个适合机器读取的格式"
 
-#: builtin/blame.c:2509
+#: builtin/blame.c:2508
 msgid "Show porcelain format with per-line commit information"
 msgstr "为每一行显示机器适用的提交信息"
 
-#: builtin/blame.c:2510
+#: builtin/blame.c:2509
 msgid "Use the same output mode as git-annotate (Default: off)"
 msgstr "使用和 git-annotate 相同的输出模式（默认：关闭）"
 
-#: builtin/blame.c:2511
+#: builtin/blame.c:2510
 msgid "Show raw timestamp (Default: off)"
 msgstr "显示原始时间戳（默认：关闭）"
 
-#: builtin/blame.c:2512
+#: builtin/blame.c:2511
 msgid "Show long commit SHA1 (Default: off)"
 msgstr "显示长的SHA1提交号（默认：关闭）"
 
-#: builtin/blame.c:2513
+#: builtin/blame.c:2512
 msgid "Suppress author name and timestamp (Default: off)"
 msgstr "隐藏作者名字和时间戳（默认：关闭）"
 
-#: builtin/blame.c:2514
+#: builtin/blame.c:2513
 msgid "Show author email instead of name (Default: off)"
 msgstr "显示作者的邮箱而不是名字（默认：关闭）"
 
-#: builtin/blame.c:2515
+#: builtin/blame.c:2514
 msgid "Ignore whitespace differences"
 msgstr "忽略空白差异"
 
-#: builtin/blame.c:2516
+#: builtin/blame.c:2515
 msgid "Spend extra cycles to find better match"
 msgstr "花费额外的循环来找到更好的匹配"
 
-#: builtin/blame.c:2517
+#: builtin/blame.c:2516
 msgid "Use revisions from <file> instead of calling git-rev-list"
 msgstr "使用来自 <文件> 的修订集而不是调用 git-rev-list"
 
-#: builtin/blame.c:2518
+#: builtin/blame.c:2517
 msgid "Use <file>'s contents as the final image"
 msgstr "使用 <文件> 的内容作为最终的图片"
 
-#: builtin/blame.c:2519 builtin/blame.c:2520
+#: builtin/blame.c:2518 builtin/blame.c:2519
 msgid "score"
 msgstr "得分"
 
-#: builtin/blame.c:2519
+#: builtin/blame.c:2518
 msgid "Find line copies within and across files"
 msgstr "找到文件内及跨文件的行拷贝"
 
-#: builtin/blame.c:2520
+#: builtin/blame.c:2519
 msgid "Find line movements within and across files"
 msgstr "找到文件内及跨文件的行移动"
 
-#: builtin/blame.c:2521
+#: builtin/blame.c:2520
 msgid "n,m"
 msgstr "n,m"
 
-#: builtin/blame.c:2521
+#: builtin/blame.c:2520
 msgid "Process only line range n,m, counting from 1"
 msgstr "只处理行范围在 n 和 m 之间的，从 1 开始"
 
 #. TRANSLATORS: This string is used to tell us the maximum
 #. display width for a relative timestamp in "git blame"
 #. output.  For C locale, "4 years, 11 months ago", which
 #. takes 22 places, is the longest among various forms of
 #. relative timestamps, but your language may need more or
 #. fewer display columns.
-#: builtin/blame.c:2602
+#: builtin/blame.c:2601
 msgid "4 years, 11 months ago"
 msgstr "4 年 11 个月前"
 
 #: builtin/branch.c:24
-msgid "git branch [options] [-r | -a] [--merged | --no-merged]"
-msgstr "git branch [选项] [-r | -a] [--merged | --no-merged]"
+msgid "git branch [<options>] [-r | -a] [--merged | --no-merged]"
+msgstr "git branch [<选项>] [-r | -a] [--merged | --no-merged]"
 
 #: builtin/branch.c:25
-msgid "git branch [options] [-l] [-f] <branchname> [<start-point>]"
-msgstr "git branch [选项] [-l] [-f] <分支名> [<起始点>]"
+msgid "git branch [<options>] [-l] [-f] <branch-name> [<start-point>]"
+msgstr "git branch [<选项>] [-l] [-f] <分支名> [<起始点>]"
 
 #: builtin/branch.c:26
-msgid "git branch [options] [-r] (-d | -D) <branchname>..."
-msgstr "git branch [选项] [-r] (-d | -D) <分支名>..."
+msgid "git branch [<options>] [-r] (-d | -D) <branch-name>..."
+msgstr "git branch [<选项>] [-r] (-d | -D) <分支名>..."
 
 #: builtin/branch.c:27
-msgid "git branch [options] (-m | -M) [<oldbranch>] <newbranch>"
-msgstr "git branch [选项] (-m | -M) [<旧分支>] <新分支>"
+msgid "git branch [<options>] (-m | -M) [<old-branch>] <new-branch>"
+msgstr "git branch [<选项>] (-m | -M) [<旧分支>] <新分支>"
 
 #  译者：保持原换行格式，在输出时 %s 的替代内容会让字符串变长
 #: builtin/branch.c:152
 #, c-format
 msgid ""
 "deleting branch '%s' that has been merged to\n"
@@ -2906,262 +2933,267 @@
 
 #: builtin/branch.c:590
 #, c-format
 msgid "(no branch, bisect started on %s)"
 msgstr "（非分支，二分查找开始于 %s）"
 
-#: builtin/branch.c:593
+#: builtin/branch.c:596
 #, c-format
-msgid "(detached from %s)"
-msgstr "（分离自 %s）"
+msgid "(HEAD detached at %s)"
+msgstr "（头指针分离于 %s）"
 
-#: builtin/branch.c:596
+#: builtin/branch.c:599
+#, c-format
+msgid "(HEAD detached from %s)"
+msgstr "（头指针分离自 %s）"
+
+#: builtin/branch.c:603
 msgid "(no branch)"
 msgstr "（非分支）"
 
-#: builtin/branch.c:643
+#: builtin/branch.c:650
 #, c-format
 msgid "object '%s' does not point to a commit"
 msgstr "对象 '%s' 没有指向一个提交"
 
-#: builtin/branch.c:691
+#: builtin/branch.c:698
 msgid "some refs could not be read"
 msgstr "一些引用不能读取"
 
-#: builtin/branch.c:704
+#: builtin/branch.c:711
 msgid "cannot rename the current branch while not on any."
 msgstr "无法重命名当前分支因为不处于任何分支上。"
 
-#: builtin/branch.c:714
+#: builtin/branch.c:721
 #, c-format
 msgid "Invalid branch name: '%s'"
 msgstr "无效的分支名：'%s'"
 
-#: builtin/branch.c:729
+#: builtin/branch.c:736
 msgid "Branch rename failed"
 msgstr "分支重命名失败"
 
-#: builtin/branch.c:733
+#: builtin/branch.c:740
 #, c-format
 msgid "Renamed a misnamed branch '%s' away"
 msgstr "重命名掉一个错误命名的旧分支 '%s'"
 
-#: builtin/branch.c:737
+#: builtin/branch.c:744
 #, c-format
 msgid "Branch renamed to %s, but HEAD is not updated!"
 msgstr "分支重命名为 %s，但 HEAD 没有更新！"
 
-#: builtin/branch.c:744
+#: builtin/branch.c:751
 msgid "Branch is renamed, but update of config-file failed"
 msgstr "分支被重命名，但更新 config 文件失败"
 
-#: builtin/branch.c:759
+#: builtin/branch.c:766
 #, c-format
 msgid "malformed object name %s"
 msgstr "非法的对象名 %s"
 
-#: builtin/branch.c:783
+#: builtin/branch.c:790
 #, c-format
 msgid "could not write branch description template: %s"
 msgstr "不能写分支描述模版：%s"
 
-#: builtin/branch.c:813
+#: builtin/branch.c:820
 msgid "Generic options"
 msgstr "通用选项"
 
-#: builtin/branch.c:815
+#: builtin/branch.c:822
 msgid "show hash and subject, give twice for upstream branch"
 msgstr "显示哈希值和主题，若参数出现两次则显示上游分支"
 
-#: builtin/branch.c:816
+#: builtin/branch.c:823
 msgid "suppress informational messages"
 msgstr "不显示信息"
 
-#: builtin/branch.c:817
+#: builtin/branch.c:824
 msgid "set up tracking mode (see git-pull(1))"
 msgstr "设置跟踪模式（参见 git-pull(1)）"
 
-#: builtin/branch.c:819
+#: builtin/branch.c:826
 msgid "change upstream info"
 msgstr "改变上游信息"
 
-#: builtin/branch.c:823
+#: builtin/branch.c:830
 msgid "use colored output"
 msgstr "使用彩色输出"
 
-#: builtin/branch.c:824
+#: builtin/branch.c:831
 msgid "act on remote-tracking branches"
 msgstr "作用于远程跟踪分支"
 
-#: builtin/branch.c:827 builtin/branch.c:833 builtin/branch.c:854
-#: builtin/branch.c:860 builtin/commit.c:1586 builtin/commit.c:1587
-#: builtin/commit.c:1588 builtin/commit.c:1589 builtin/tag.c:616
+#: builtin/branch.c:834 builtin/branch.c:840 builtin/branch.c:861
+#: builtin/branch.c:867 builtin/commit.c:1582 builtin/commit.c:1583
+#: builtin/commit.c:1584 builtin/commit.c:1585 builtin/tag.c:616
 #: builtin/tag.c:622
 msgid "commit"
 msgstr "提交"
 
-#: builtin/branch.c:828 builtin/branch.c:834
+#: builtin/branch.c:835 builtin/branch.c:841
 msgid "print only branches that contain the commit"
 msgstr "只打印包含该提交的分支"
 
-#: builtin/branch.c:840
+#: builtin/branch.c:847
 msgid "Specific git-branch actions:"
 msgstr "具体的 git-branch 动作："
 
-#: builtin/branch.c:841
+#: builtin/branch.c:848
 msgid "list both remote-tracking and local branches"
 msgstr "列出远程跟踪及本地分支"
 
-#: builtin/branch.c:843
+#: builtin/branch.c:850
 msgid "delete fully merged branch"
 msgstr "删除完全合并的分支"
 
-#: builtin/branch.c:844
+#: builtin/branch.c:851
 msgid "delete branch (even if not merged)"
 msgstr "删除分支（即使没有合并）"
 
-#: builtin/branch.c:845
+#: builtin/branch.c:852
 msgid "move/rename a branch and its reflog"
 msgstr "移动/重命名一个分支，以及它的引用日志"
 
-#: builtin/branch.c:846
+#: builtin/branch.c:853
 msgid "move/rename a branch, even if target exists"
 msgstr "移动/重命名一个分支，即使目标已存在"
 
-#: builtin/branch.c:847
+#: builtin/branch.c:854
 msgid "list branch names"
 msgstr "列出分支名"
 
-#: builtin/branch.c:848
+#: builtin/branch.c:855
 msgid "create the branch's reflog"
 msgstr "创建分支的引用日志"
 
-#: builtin/branch.c:850
+#: builtin/branch.c:857
 msgid "edit the description for the branch"
 msgstr "标记分支的描述"
 
-#: builtin/branch.c:851
+#: builtin/branch.c:858
 msgid "force creation, move/rename, deletion"
 msgstr "强制创建、移动/重命名、删除"
 
-#: builtin/branch.c:854
+#: builtin/branch.c:861
 msgid "print only not merged branches"
 msgstr "只打印没有合并的分支"
 
-#: builtin/branch.c:860
+#: builtin/branch.c:867
 msgid "print only merged branches"
 msgstr "只打印合并的分支"
 
-#: builtin/branch.c:864
+#: builtin/branch.c:871
 msgid "list branches in columns"
 msgstr "以列的方式显示分支"
 
-#: builtin/branch.c:877
+#: builtin/branch.c:884
 msgid "Failed to resolve HEAD as a valid ref."
 msgstr "无法将 HEAD 解析为有效引用。"
 
-#: builtin/branch.c:881 builtin/clone.c:637
+#: builtin/branch.c:888 builtin/clone.c:637
 msgid "HEAD not found below refs/heads!"
 msgstr "HEAD 没有位于 /refs/heads 之下！"
 
-#: builtin/branch.c:903
+#: builtin/branch.c:910
 msgid "--column and --verbose are incompatible"
 msgstr "--column 和 --verbose 不兼容"
 
-#: builtin/branch.c:914 builtin/branch.c:953
+#: builtin/branch.c:921 builtin/branch.c:960
 msgid "branch name required"
 msgstr "必须提供分支名"
 
-#: builtin/branch.c:929
+#: builtin/branch.c:936
 msgid "Cannot give description to detached HEAD"
 msgstr "不能向分离头指针提供描述"
 
-#: builtin/branch.c:934
+#: builtin/branch.c:941
 msgid "cannot edit description of more than one branch"
 msgstr "不能为一个以上的分支编辑描述"
 
-#: builtin/branch.c:941
+#: builtin/branch.c:948
 #, c-format
 msgid "No commit on branch '%s' yet."
 msgstr "分支 '%s' 尚无提交。"
 
-#: builtin/branch.c:944
+#: builtin/branch.c:951
 #, c-format
 msgid "No branch named '%s'."
 msgstr "没有分支 '%s'。"
 
-#: builtin/branch.c:959
+#: builtin/branch.c:966
 msgid "too many branches for a rename operation"
 msgstr "为重命名操作提供了太多的分支名"
 
-#: builtin/branch.c:964
+#: builtin/branch.c:971
 msgid "too many branches to set new upstream"
 msgstr "为设置新上游提供了太多的分支名"
 
-#: builtin/branch.c:968
+#: builtin/branch.c:975
 #, c-format
 msgid ""
 "could not set upstream of HEAD to %s when it does not point to any branch."
 msgstr "无法设置 HEAD 的上游为 %s，因为 HEAD 没有指向任何分支。"
 
-#: builtin/branch.c:971 builtin/branch.c:993 builtin/branch.c:1014
+#: builtin/branch.c:978 builtin/branch.c:1000 builtin/branch.c:1021
 #, c-format
 msgid "no such branch '%s'"
 msgstr "没有此分支 '%s'"
 
-#: builtin/branch.c:975
+#: builtin/branch.c:982
 #, c-format
 msgid "branch '%s' does not exist"
 msgstr "分支 '%s' 不存在"
 
-#: builtin/branch.c:987
+#: builtin/branch.c:994
 msgid "too many branches to unset upstream"
 msgstr "为取消上游设置操作提供了太多的分支名"
 
-#: builtin/branch.c:991
+#: builtin/branch.c:998
 msgid "could not unset upstream of HEAD when it does not point to any branch."
 msgstr "无法取消 HEAD 的上游设置因为它没有指向一个分支"
 
-#: builtin/branch.c:997
+#: builtin/branch.c:1004
 #, c-format
 msgid "Branch '%s' has no upstream information"
 msgstr "分支 '%s' 没有上游信息"
 
-#: builtin/branch.c:1011
+#: builtin/branch.c:1018
 msgid "it does not make sense to create 'HEAD' manually"
 msgstr "手工创建 'HEAD' 没有意义"
 
-#: builtin/branch.c:1017
+#: builtin/branch.c:1024
 msgid "-a and -r options to 'git branch' do not make sense with a branch name"
 msgstr "'git branch' 的 -a 和 -r 选项带一个分支名参数没有意义"
 
-#: builtin/branch.c:1020
+#: builtin/branch.c:1027
 #, c-format
 msgid ""
 "The --set-upstream flag is deprecated and will be removed. Consider using --"
 "track or --set-upstream-to\n"
 msgstr ""
 "选项 --set-upstream 已弃用并将被移除。考虑使用 --track 或 --set-upstream-to\n"
 
-#: builtin/branch.c:1037
+#: builtin/branch.c:1044
 #, c-format
 msgid ""
 "\n"
 "If you wanted to make '%s' track '%s', do this:\n"
 "\n"
 msgstr ""
 "\n"
 "如果你想用 '%s' 跟踪 '%s', 这么做：\n"
 "\n"
 
-#: builtin/branch.c:1038
+#: builtin/branch.c:1045
 #, c-format
 msgid "    git branch -d %s\n"
 msgstr "    git branch -d %s\n"
 
-#: builtin/branch.c:1039
+#: builtin/branch.c:1046
 #, c-format
 msgid "    git branch --set-upstream-to %s\n"
 msgstr "    git branch --set-upstream-to %s\n"
 
 #: builtin/bundle.c:47
 #, c-format
@@ -3173,59 +3205,59 @@
 msgstr "需要一个版本库来创建包。"
 
 #: builtin/bundle.c:60
 msgid "Need a repository to unbundle."
 msgstr "需要一个版本库来解包。"
 
-#: builtin/cat-file.c:328
-msgid "git cat-file (-t|-s|-e|-p|<type>|--textconv) <object>"
-msgstr "git cat-file (-t|-s|-e|-p|<类型>|--textconv) <对象>"
-
-#: builtin/cat-file.c:329
-msgid "git cat-file (--batch|--batch-check) < <list_of_objects>"
-msgstr "git cat-file (--batch|--batch-check) < <对象列表>"
+#: builtin/cat-file.c:326
+msgid "git cat-file (-t | -s | -e | -p | <type> | --textconv) <object>"
+msgstr "git cat-file (-t | -s | -e | -p | <类型> | --textconv) <对象>"
+
+#: builtin/cat-file.c:327
+msgid "git cat-file (--batch | --batch-check) < <list-of-objects>"
+msgstr "git cat-file (--batch | --batch-check) < <对象列表>"
 
-#: builtin/cat-file.c:366
+#: builtin/cat-file.c:364
 msgid "<type> can be one of: blob, tree, commit, tag"
 msgstr "<类型> 可以是其中之一：blob、tree、commit、tag"
 
-#: builtin/cat-file.c:367
+#: builtin/cat-file.c:365
 msgid "show object type"
 msgstr "显示对象类型"
 
-#: builtin/cat-file.c:368
+#: builtin/cat-file.c:366
 msgid "show object size"
 msgstr "显示对象大小"
 
-#: builtin/cat-file.c:370
+#: builtin/cat-file.c:368
 msgid "exit with zero when there's no error"
 msgstr "当没有错误时退出并返回零"
 
-#: builtin/cat-file.c:371
+#: builtin/cat-file.c:369
 msgid "pretty-print object's content"
 msgstr "美观地打印对象的内容"
 
-#: builtin/cat-file.c:373
+#: builtin/cat-file.c:371
 msgid "for blob objects, run textconv on object's content"
 msgstr "对于数据（blob）对象，对其内容执行 textconv"
 
-#: builtin/cat-file.c:375
+#: builtin/cat-file.c:373
 msgid "show info and content of objects fed from the standard input"
 msgstr "显示从标准输入提供的对象的信息和内容"
 
-#: builtin/cat-file.c:378
+#: builtin/cat-file.c:376
 msgid "show info about objects fed from the standard input"
 msgstr "显示从标准输入提供的对象的信息"
 
 #: builtin/check-attr.c:11
-msgid "git check-attr [-a | --all | attr...] [--] pathname..."
-msgstr "git check-attr [-a | --all | attr...] [--] 路径名..."
+msgid "git check-attr [-a | --all | <attr>...] [--] <pathname>..."
+msgstr "git check-attr [-a | --all | <属性>...] [--] <路径名>..."
 
 #: builtin/check-attr.c:12
-msgid "git check-attr --stdin [-z] [-a | --all | attr...] < <list-of-paths>"
-msgstr "git check-attr --stdin [-z] [-a | --all | attr...] < <路径列表>"
+msgid "git check-attr --stdin [-z] [-a | --all | <attr>...] < <list-of-paths>"
+msgstr "git check-attr --stdin [-z] [-a | --all | <属性>...] < <路径列表>"
 
 #: builtin/check-attr.c:19
 msgid "report all attributes set on file"
 msgstr "报告设置在文件上的所有属性"
 
 #: builtin/check-attr.c:20
@@ -3274,14 +3306,14 @@
 
 #: builtin/check-ignore.c:168
 msgid "--non-matching is only valid with --verbose"
 msgstr "--non-matching 选项只在使用 --verbose 时有效"
 
 #: builtin/check-mailmap.c:8
-msgid "git check-mailmap [options] <contact>..."
-msgstr "git check-mailmap [选项] <联系地址>..."
+msgid "git check-mailmap [<options>] <contact>..."
+msgstr "git check-mailmap [<选项>] <联系地址>..."
 
 #: builtin/check-mailmap.c:13
 msgid "also read contacts from stdin"
 msgstr "还从标准输入读取联系地址"
 
 #: builtin/check-mailmap.c:24
@@ -3291,14 +3323,14 @@
 
 #: builtin/check-mailmap.c:47
 msgid "no contacts specified"
 msgstr "未指定联系地址"
 
 #: builtin/checkout-index.c:126
-msgid "git checkout-index [options] [--] [<file>...]"
-msgstr "git checkout-index [选项] [--] [<文件>...]"
+msgid "git checkout-index [<options>] [--] [<file>...]"
+msgstr "git checkout-index [<选项>] [--] [<文件>...]"
 
 #: builtin/checkout-index.c:188
 msgid "check out all files in the index"
 msgstr "检出索引区的所有文件"
 
 #: builtin/checkout-index.c:189
@@ -3335,18 +3367,18 @@
 
 #: builtin/checkout-index.c:208
 msgid "copy out the files from named stage"
 msgstr "从指定暂存区中拷出文件"
 
 #: builtin/checkout.c:25
-msgid "git checkout [options] <branch>"
-msgstr "git checkout [选项] <分支>"
+msgid "git checkout [<options>] <branch>"
+msgstr "git checkout [<选项>] <分支>"
 
 #: builtin/checkout.c:26
-msgid "git checkout [options] [<branch>] -- <file>..."
-msgstr "git checkout [选项] [<分支>] -- <文件>..."
+msgid "git checkout [<options>] [<branch>] -- <file>..."
+msgstr "git checkout [<选项>] [<分支>] -- <文件>..."
 
 #: builtin/checkout.c:132 builtin/checkout.c:165
 #, c-format
 msgid "path '%s' does not have our version"
 msgstr "路径 '%s' 没有我们的版本"
 
@@ -3468,19 +3500,19 @@
 #: builtin/checkout.c:747
 #, c-format
 msgid ""
 "If you want to keep them by creating a new branch, this may be a good time\n"
 "to do so with:\n"
 "\n"
-" git branch new_branch_name %s\n"
+" git branch <new-branch-name> %s\n"
 "\n"
 msgstr ""
 "如果您想要通过创建新分支保存他们，这可能是一个好时候。\n"
 "如下操作：\n"
 "\n"
-" git branch new_branch_name %s\n"
+" git branch <新分支名> %s\n"
 "\n"
 
 #: builtin/checkout.c:777
 msgid "internal error in revision walk"
 msgstr "在版本遍历时遇到内部错误"
 
@@ -3590,14 +3622,14 @@
 
 #: builtin/checkout.c:1128
 msgid "do not limit pathspecs to sparse entries only"
 msgstr "对路径不做稀疏检出的限制"
 
 #: builtin/checkout.c:1130
-msgid "second guess 'git checkout no-such-branch'"
-msgstr "再者猜测'git checkout no-such-branch'"
+msgid "second guess 'git checkout <no-such-branch>'"
+msgstr "二次猜测'git checkout <无此分支>'"
 
 #: builtin/checkout.c:1153
 msgid "-b, -B and --orphan are mutually exclusive"
 msgstr "-b、-B 和 --orphan 是互斥的"
 
 #: builtin/checkout.c:1170
@@ -3712,22 +3744,23 @@
 msgstr "警告：无法找到和 %s 匹配的条目"
 
 #: builtin/clean.c:717
 msgid "Select items to delete"
 msgstr "选择要删除的条目"
 
-#: builtin/clean.c:757
+#. TRANSLATORS: Make sure to keep [y/N] as is
+#: builtin/clean.c:758
 #, c-format
-msgid "remove %s? "
-msgstr "删除 %s？"
+msgid "Remove %s [y/N]? "
+msgstr "删除 %s [y/N]？"
 
-#: builtin/clean.c:782
+#: builtin/clean.c:783
 msgid "Bye."
 msgstr "再见。"
 
-#: builtin/clean.c:790
+#: builtin/clean.c:791
 msgid ""
 "clean               - start cleaning\n"
 "filter by pattern   - exclude items from deletion\n"
 "select by numbers   - select items to be deleted by numbers\n"
 "ask each            - confirm each deletion (like \"rm -i\")\n"
 "quit                - stop cleaning\n"
@@ -3739,87 +3772,87 @@
 "select by numbers   - 通过数字选择要删除的条目\n"
 "ask each            - 针对删除逐一询问（就像 \"rm -i\"）\n"
 "quit                - 停止删除并退出\n"
 "help                - 显示本帮助\n"
 "?                   - 显示如何在提示符下选择的帮助"
 
-#: builtin/clean.c:817
+#: builtin/clean.c:818
 msgid "*** Commands ***"
 msgstr "*** 命令 ***"
 
-#: builtin/clean.c:818
+#: builtin/clean.c:819
 msgid "What now"
 msgstr "请选择"
 
-#: builtin/clean.c:826
+#: builtin/clean.c:827
 msgid "Would remove the following item:"
 msgid_plural "Would remove the following items:"
 msgstr[0] "将删除如下条目："
 msgstr[1] "将删除如下条目："
 
-#: builtin/clean.c:843
+#: builtin/clean.c:844
 msgid "No more files to clean, exiting."
 msgstr "没有要清理的文件，退出。"
 
-#: builtin/clean.c:874
+#: builtin/clean.c:875
 msgid "do not print names of files removed"
 msgstr "不打印删除文件的名称"
 
-#: builtin/clean.c:876
+#: builtin/clean.c:877
 msgid "force"
 msgstr "强制"
 
-#: builtin/clean.c:877
+#: builtin/clean.c:878
 msgid "interactive cleaning"
 msgstr "交互式清除"
 
-#: builtin/clean.c:879
+#: builtin/clean.c:880
 msgid "remove whole directories"
 msgstr "删除整个目录"
 
-#: builtin/clean.c:880 builtin/describe.c:407 builtin/grep.c:714
-#: builtin/ls-files.c:486 builtin/name-rev.c:311 builtin/show-ref.c:185
+#: builtin/clean.c:881 builtin/describe.c:407 builtin/grep.c:714
+#: builtin/ls-files.c:443 builtin/name-rev.c:311 builtin/show-ref.c:185
 msgid "pattern"
 msgstr "模式"
 
-#: builtin/clean.c:881
+#: builtin/clean.c:882
 msgid "add <pattern> to ignore rules"
 msgstr "添加<模式>到忽略规则"
 
-#: builtin/clean.c:882
+#: builtin/clean.c:883
 msgid "remove ignored files, too"
 msgstr "也删除忽略的文件"
 
-#: builtin/clean.c:884
+#: builtin/clean.c:885
 msgid "remove only ignored files"
 msgstr "只删除忽略的文件"
 
-#: builtin/clean.c:902
+#: builtin/clean.c:903
 msgid "-x and -X cannot be used together"
 msgstr "-x 和 -X 不能同时使用"
 
-#: builtin/clean.c:906
+#: builtin/clean.c:907
 msgid ""
 "clean.requireForce set to true and neither -i, -n, nor -f given; refusing to "
 "clean"
 msgstr ""
 "clean.requireForce 设置为 true 且未提供 -i、-n 或 -f 选项，拒绝执行清理动作"
 
-#: builtin/clean.c:909
+#: builtin/clean.c:910
 msgid ""
 "clean.requireForce defaults to true and neither -i, -n, nor -f given; "
 "refusing to clean"
 msgstr ""
 "clean.requireForce 默认为 true 且未提供 -i、-n 或 -f 选项，拒绝执行清理动作"
 
 #: builtin/clone.c:37
-msgid "git clone [options] [--] <repo> [<dir>]"
-msgstr "git clone [选项] [--] <版本库> [<路径>]"
+msgid "git clone [<options>] [--] <repo> [<dir>]"
+msgstr "git clone [<选项>] [--] <版本库> [<路径>]"
 
-#: builtin/clone.c:66 builtin/fetch.c:112 builtin/merge.c:224
-#: builtin/push.c:514
+#: builtin/clone.c:66 builtin/fetch.c:111 builtin/merge.c:224
+#: builtin/push.c:523
 msgid "force progress reporting"
 msgstr "强制显示进度报告"
 
 #: builtin/clone.c:68
 msgid "don't create a checkout"
 msgstr "不创建一个检出"
@@ -3873,13 +3906,13 @@
 msgstr "检出<分支>而不是远程HEAD"
 
 #: builtin/clone.c:93
 msgid "path to git-upload-pack on the remote"
 msgstr "远程 git-upload-pack 路径"
 
-#: builtin/clone.c:94 builtin/fetch.c:113 builtin/grep.c:659
+#: builtin/clone.c:94 builtin/fetch.c:112 builtin/grep.c:659
 msgid "depth"
 msgstr "深度"
 
 #: builtin/clone.c:95
 msgid "create a shallow clone of that depth"
 msgstr "创建一个指定深度的浅克隆"
@@ -4017,13 +4050,13 @@
 
 #: builtin/clone.c:809
 #, c-format
 msgid "repository '%s' does not exist"
 msgstr "版本库 '%s' 不存在"
 
-#: builtin/clone.c:815 builtin/fetch.c:1155
+#: builtin/clone.c:815 builtin/fetch.c:1156
 #, c-format
 msgid "depth %s is not a positive number"
 msgstr "深度 %s 不是一个正数"
 
 #: builtin/clone.c:825
 #, c-format
@@ -4032,65 +4065,65 @@
 
 #: builtin/clone.c:835
 #, c-format
 msgid "working tree '%s' already exists."
 msgstr "工作区 '%s' 已经存在。"
 
-#: builtin/clone.c:848 builtin/clone.c:860
+#: builtin/clone.c:850 builtin/clone.c:861
 #, c-format
 msgid "could not create leading directories of '%s'"
 msgstr "不能为 '%s' 创建先导目录"
 
-#: builtin/clone.c:851
+#: builtin/clone.c:853
 #, c-format
-msgid "could not create work tree dir '%s'."
-msgstr "不能为 '%s' 创建工作区目录。"
+msgid "could not create work tree dir '%s'"
+msgstr "不能创建工作区目录 '%s'"
 
-#: builtin/clone.c:870
+#: builtin/clone.c:871
 #, c-format
 msgid "Cloning into bare repository '%s'...\n"
 msgstr "克隆到纯版本库 '%s'...\n"
 
-#: builtin/clone.c:872
+#: builtin/clone.c:873
 #, c-format
 msgid "Cloning into '%s'...\n"
 msgstr "正克隆到 '%s'...\n"
 
-#: builtin/clone.c:897
+#: builtin/clone.c:898
 msgid "--dissociate given, but there is no --reference"
 msgstr "提供了参数 --dissociate，但未提供 --reference"
 
-#: builtin/clone.c:912
+#: builtin/clone.c:913
 msgid "--depth is ignored in local clones; use file:// instead."
 msgstr "--depth 在本地克隆被忽略，改为 file:// 协议试试。"
 
-#: builtin/clone.c:915
+#: builtin/clone.c:916
 msgid "source repository is shallow, ignoring --local"
 msgstr "源版本库是浅克隆，忽略 --local"
 
-#: builtin/clone.c:920
+#: builtin/clone.c:921
 msgid "--local is ignored"
 msgstr "--local 被忽略"
 
-#: builtin/clone.c:924
+#: builtin/clone.c:925
 #, c-format
 msgid "Don't know how to clone %s"
 msgstr "不知道如何克隆 %s"
 
-#: builtin/clone.c:975 builtin/clone.c:983
+#: builtin/clone.c:976 builtin/clone.c:984
 #, c-format
 msgid "Remote branch %s not found in upstream %s"
 msgstr "远程分支 %s 在上游 %s 未发现"
 
-#: builtin/clone.c:986
+#: builtin/clone.c:987
 msgid "You appear to have cloned an empty repository."
 msgstr "您似乎克隆了一个空版本库。"
 
 #: builtin/column.c:9
-msgid "git column [options]"
-msgstr "git column [选项]"
+msgid "git column [<options>]"
+msgstr "git column [<选项>]"
 
 #: builtin/column.c:26
 msgid "lookup config vars"
 msgstr "查找配置变量"
 
 #: builtin/column.c:27 builtin/column.c:28
@@ -4115,18 +4148,18 @@
 
 #: builtin/column.c:51
 msgid "--command must be the first argument"
 msgstr "--command 必须是第一个参数"
 
 #: builtin/commit.c:37
-msgid "git commit [options] [--] <pathspec>..."
-msgstr "git commit [选项] [--] <路径规则>..."
+msgid "git commit [<options>] [--] <pathspec>..."
+msgstr "git commit [<选项>] [--] <路径规则>..."
 
 #: builtin/commit.c:42
-msgid "git status [options] [--] <pathspec>..."
-msgstr "git status [选项] [--] <路径规则>..."
+msgid "git status [<options>] [--] <pathspec>..."
+msgstr "git status [<选项>] [--] <路径规则>..."
 
 #: builtin/commit.c:47
 msgid ""
 "Your name and email address were configured automatically based\n"
 "on your username and hostname. Please check that they are accurate.\n"
 "You can suppress this message by setting them explicitly. Run the\n"
@@ -4212,118 +4245,118 @@
 "\n"
 "    git reset\n"
 "\n"
 "然后执行 \"git cherry-pick --continue\" 继续对其余提交执行拣选\n"
 "操作。\n"
 
-#: builtin/commit.c:302
+#: builtin/commit.c:304
 msgid "failed to unpack HEAD tree object"
 msgstr "无法解包 HEAD 树对象"
 
-#: builtin/commit.c:342
+#: builtin/commit.c:344
 msgid "unable to create temporary index"
 msgstr "不能创建临时索引"
 
-#: builtin/commit.c:348
+#: builtin/commit.c:350
 msgid "interactive add failed"
 msgstr "交互式添加失败"
 
-#: builtin/commit.c:359
+#: builtin/commit.c:361
 msgid "unable to write index file"
 msgstr "无法写入索引文件"
 
-#: builtin/commit.c:361
+#: builtin/commit.c:363
 msgid "unable to update temporary index"
 msgstr "无法更新临时索引"
 
-#: builtin/commit.c:363
+#: builtin/commit.c:365
 msgid "Failed to update main cache tree"
 msgstr "不能更新树的主缓存"
 
-#: builtin/commit.c:387 builtin/commit.c:412 builtin/commit.c:461
+#: builtin/commit.c:389 builtin/commit.c:414 builtin/commit.c:463
 msgid "unable to write new_index file"
 msgstr "无法写 new_index 文件"
 
-#: builtin/commit.c:443
+#: builtin/commit.c:445
 msgid "cannot do a partial commit during a merge."
 msgstr "在合并过程中不能做部分提交。"
 
-#: builtin/commit.c:445
+#: builtin/commit.c:447
 msgid "cannot do a partial commit during a cherry-pick."
 msgstr "在拣选过程中不能做部分提交。"
 
-#: builtin/commit.c:454
+#: builtin/commit.c:456
 msgid "cannot read the index"
 msgstr "无法读取索引"
 
-#: builtin/commit.c:473
+#: builtin/commit.c:475
 msgid "unable to write temporary index file"
 msgstr "无法写临时索引文件"
 
-#: builtin/commit.c:584
+#: builtin/commit.c:580
 #, c-format
 msgid "commit '%s' lacks author header"
 msgstr "提交 '%s' 缺少作者信息"
 
-#: builtin/commit.c:586
+#: builtin/commit.c:582
 #, c-format
 msgid "commit '%s' has malformed author line"
 msgstr "提交 '%s' 有非法的作者信息"
 
-#: builtin/commit.c:605
+#: builtin/commit.c:601
 msgid "malformed --author parameter"
 msgstr "非法的 --author 参数"
 
-#: builtin/commit.c:613
+#: builtin/commit.c:609
 #, c-format
 msgid "invalid date format: %s"
 msgstr "无效的日期格式：%s"
 
-#: builtin/commit.c:657
+#: builtin/commit.c:653
 msgid ""
 "unable to select a comment character that is not used\n"
 "in the current commit message"
 msgstr "无法选择一个未被当前提交说明使用的注释字符"
 
-#: builtin/commit.c:694 builtin/commit.c:727 builtin/commit.c:1084
+#: builtin/commit.c:690 builtin/commit.c:723 builtin/commit.c:1080
 #, c-format
 msgid "could not lookup commit %s"
 msgstr "不能查询提交 %s"
 
-#: builtin/commit.c:706 builtin/shortlog.c:273
+#: builtin/commit.c:702 builtin/shortlog.c:273
 #, c-format
 msgid "(reading log message from standard input)\n"
 msgstr "（正从标准输入中读取日志信息）\n"
 
-#: builtin/commit.c:708
+#: builtin/commit.c:704
 msgid "could not read log from standard input"
 msgstr "不能从标准输入中读取日志信息"
 
-#: builtin/commit.c:712
+#: builtin/commit.c:708
 #, c-format
 msgid "could not read log file '%s'"
 msgstr "不能读取日志文件 '%s'"
 
-#: builtin/commit.c:734
+#: builtin/commit.c:730
 msgid "could not read MERGE_MSG"
 msgstr "不能读取 MERGE_MSG"
 
-#: builtin/commit.c:738
+#: builtin/commit.c:734
 msgid "could not read SQUASH_MSG"
 msgstr "不能读取 SQUASH_MSG"
 
-#: builtin/commit.c:742
+#: builtin/commit.c:738
 #, c-format
 msgid "could not read '%s'"
 msgstr "不能读取 '%s'"
 
-#: builtin/commit.c:789
+#: builtin/commit.c:785
 msgid "could not write commit template"
 msgstr "不能写提交模版"
 
-#: builtin/commit.c:807
+#: builtin/commit.c:803
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a merge.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
@@ -4331,13 +4364,13 @@
 msgstr ""
 "\n"
 "似乎您正在做一个合并提交。如果不对，请删除文件\n"
 "\t%s\n"
 "然后重试。\n"
 
-#: builtin/commit.c:812
+#: builtin/commit.c:808
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a cherry-pick.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
@@ -4345,390 +4378,390 @@
 msgstr ""
 "\n"
 "似乎您正在做一个拣选提交。如果不对，请删除文件\n"
 "\t%s\n"
 "然后重试。\n"
 
-#: builtin/commit.c:825
+#: builtin/commit.c:821
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be ignored, and an empty message aborts the commit.\n"
 msgstr ""
 "请为您的变更输入提交说明。以 '%c' 开始的行将被忽略，而一个空的提交\n"
 "说明将会终止提交。\n"
 
-#: builtin/commit.c:832
+#: builtin/commit.c:828
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be kept; you may remove them yourself if you want to.\n"
 "An empty message aborts the commit.\n"
 msgstr ""
 "请为您的变更输入提交说明。以 '%c' 开始的行将被保留，如果您原意\n"
 "也可以删除它们。一个空的提交说明将会终止提交。\n"
 
 #  译者：为保证在输出中对齐，注意调整句中空格！
-#: builtin/commit.c:852
+#: builtin/commit.c:848
 #, c-format
 msgid "%sAuthor:    %.*s <%.*s>"
 msgstr "%s作者：  %.*s <%.*s>"
 
 #  译者：为保证在输出中对齐，注意调整句中空格！
-#: builtin/commit.c:860
+#: builtin/commit.c:856
 #, c-format
 msgid "%sDate:      %s"
 msgstr "%s日期：  %s"
 
 #  译者：为保证在输出中对齐，注意调整句中空格！
-#: builtin/commit.c:867
+#: builtin/commit.c:863
 #, c-format
 msgid "%sCommitter: %.*s <%.*s>"
 msgstr "%s提交者：%.*s <%.*s>"
 
-#: builtin/commit.c:885
+#: builtin/commit.c:881
 msgid "Cannot read index"
 msgstr "无法读取索引"
 
-#: builtin/commit.c:942
+#: builtin/commit.c:938
 msgid "Error building trees"
 msgstr "无法创建树对象"
 
-#: builtin/commit.c:957 builtin/tag.c:495
+#: builtin/commit.c:953 builtin/tag.c:495
 #, c-format
 msgid "Please supply the message using either -m or -F option.\n"
 msgstr "请使用 -m 或 -F 选项提供提交说明。\n"
 
-#: builtin/commit.c:1059
+#: builtin/commit.c:1055
 #, c-format
-msgid "No existing author found with '%s'"
-msgstr "没有找到匹配 '%s' 的作者"
+msgid "--author '%s' is not 'Name <email>' and matches no existing author"
+msgstr "--author '%s' 不是 'Name <email>' 格式，且未能在现有作者中找到匹配"
 
-#: builtin/commit.c:1074 builtin/commit.c:1314
+#: builtin/commit.c:1070 builtin/commit.c:1310
 #, c-format
 msgid "Invalid untracked files mode '%s'"
 msgstr "无效的未追踪文件参数 '%s'"
 
-#: builtin/commit.c:1111
+#: builtin/commit.c:1107
 msgid "--long and -z are incompatible"
 msgstr "--long 和 -z 选项不兼容"
 
-#: builtin/commit.c:1141
+#: builtin/commit.c:1137
 msgid "Using both --reset-author and --author does not make sense"
 msgstr "同时使用 --reset-author 和 --author 没有意义"
 
-#: builtin/commit.c:1150
+#: builtin/commit.c:1146
 msgid "You have nothing to amend."
 msgstr "您没有可修补的提交。"
 
-#: builtin/commit.c:1153
+#: builtin/commit.c:1149
 msgid "You are in the middle of a merge -- cannot amend."
 msgstr "您正处于一个合并过程中 -- 无法修补提交。"
 
-#: builtin/commit.c:1155
+#: builtin/commit.c:1151
 msgid "You are in the middle of a cherry-pick -- cannot amend."
 msgstr "您正处于一个拣选过程中 -- 无法修补提交。"
 
-#: builtin/commit.c:1158
+#: builtin/commit.c:1154
 msgid "Options --squash and --fixup cannot be used together"
 msgstr "选项 --squash 和 --fixup 不能同时使用"
 
-#: builtin/commit.c:1168
+#: builtin/commit.c:1164
 msgid "Only one of -c/-C/-F/--fixup can be used."
 msgstr "只能用一个 -c/-C/-F/--fixup 选项。"
 
-#: builtin/commit.c:1170
+#: builtin/commit.c:1166
 msgid "Option -m cannot be combined with -c/-C/-F/--fixup."
 msgstr "选项 -m 不能和 -c/-C/-F/--fixup 同时使用。"
 
-#: builtin/commit.c:1178
+#: builtin/commit.c:1174
 msgid "--reset-author can be used only with -C, -c or --amend."
 msgstr "--reset-author 只能和 -C、-c 或 --amend 同时使用。"
 
-#: builtin/commit.c:1195
+#: builtin/commit.c:1191
 msgid "Only one of --include/--only/--all/--interactive/--patch can be used."
 msgstr "只能用一个 --include/--only/--all/--interactive/--patch 选项。"
 
-#: builtin/commit.c:1197
+#: builtin/commit.c:1193
 msgid "No paths with --include/--only does not make sense."
 msgstr "参数 --include/--only 不跟路径没有意义。"
 
-#: builtin/commit.c:1199
+#: builtin/commit.c:1195
 msgid "Clever... amending the last one with dirty index."
 msgstr "聪明... 在索引不干净下修补最后的提交。"
 
-#: builtin/commit.c:1201
+#: builtin/commit.c:1197
 msgid "Explicit paths specified without -i or -o; assuming --only paths..."
 msgstr "指定了明确的路径而没有使用 -i 或 -o 选项，认为是 --only paths..."
 
-#: builtin/commit.c:1213 builtin/tag.c:728
+#: builtin/commit.c:1209 builtin/tag.c:728
 #, c-format
 msgid "Invalid cleanup mode %s"
 msgstr "无效的清理模式 %s"
 
-#: builtin/commit.c:1218
+#: builtin/commit.c:1214
 msgid "Paths with -a does not make sense."
 msgstr "路径和 -a 选项同时使用没有意义。"
 
-#: builtin/commit.c:1328 builtin/commit.c:1608
+#: builtin/commit.c:1324 builtin/commit.c:1604
 msgid "show status concisely"
 msgstr "以简洁的格式显示状态"
 
-#: builtin/commit.c:1330 builtin/commit.c:1610
+#: builtin/commit.c:1326 builtin/commit.c:1606
 msgid "show branch information"
 msgstr "显示分支信息"
 
-#: builtin/commit.c:1332 builtin/commit.c:1612 builtin/push.c:500
+#: builtin/commit.c:1328 builtin/commit.c:1608 builtin/push.c:509
 msgid "machine-readable output"
 msgstr "机器可读的输出"
 
-#: builtin/commit.c:1335 builtin/commit.c:1614
+#: builtin/commit.c:1331 builtin/commit.c:1610
 msgid "show status in long format (default)"
 msgstr "以长格式显示状态（默认）"
 
-#: builtin/commit.c:1338 builtin/commit.c:1617
+#: builtin/commit.c:1334 builtin/commit.c:1613
 msgid "terminate entries with NUL"
 msgstr "条目以NUL字符结尾"
 
-#: builtin/commit.c:1340 builtin/commit.c:1620 builtin/fast-export.c:980
+#: builtin/commit.c:1336 builtin/commit.c:1616 builtin/fast-export.c:980
 #: builtin/fast-export.c:983 builtin/tag.c:603
 msgid "mode"
 msgstr "模式"
 
-#: builtin/commit.c:1341 builtin/commit.c:1620
+#: builtin/commit.c:1337 builtin/commit.c:1616
 msgid "show untracked files, optional modes: all, normal, no. (Default: all)"
 msgstr "显示未跟踪的文件，“模式”的可选参数：all、normal、no。（默认：all）"
 
-#: builtin/commit.c:1344
+#: builtin/commit.c:1340
 msgid "show ignored files"
 msgstr "显示忽略的文件"
 
-#: builtin/commit.c:1345 parse-options.h:153
+#: builtin/commit.c:1341 parse-options.h:153
 msgid "when"
 msgstr "何时"
 
-#: builtin/commit.c:1346
+#: builtin/commit.c:1342
 msgid ""
 "ignore changes to submodules, optional when: all, dirty, untracked. "
 "(Default: all)"
 msgstr ""
 "忽略子模组的更改，“何时”的可选参数：all、dirty、untracked。（默认：all）"
 
-#: builtin/commit.c:1348
+#: builtin/commit.c:1344
 msgid "list untracked files in columns"
 msgstr "以列的方式显示未跟踪的文件"
 
-#: builtin/commit.c:1435
+#: builtin/commit.c:1431
 msgid "couldn't look up newly created commit"
 msgstr "无法找到新创建的提交"
 
-#: builtin/commit.c:1437
+#: builtin/commit.c:1433
 msgid "could not parse newly created commit"
 msgstr "不能解析新创建的提交"
 
-#: builtin/commit.c:1482
+#: builtin/commit.c:1478
 msgid "detached HEAD"
 msgstr "分离头指针"
 
 #  译者：中文字符串拼接，可删除前导空格
-#: builtin/commit.c:1485
+#: builtin/commit.c:1481
 msgid " (root-commit)"
 msgstr "（根提交）"
 
-#: builtin/commit.c:1578
+#: builtin/commit.c:1574
 msgid "suppress summary after successful commit"
 msgstr "提交成功后不显示概述信息"
 
-#: builtin/commit.c:1579
+#: builtin/commit.c:1575
 msgid "show diff in commit message template"
 msgstr "在提交说明模板里显示差异"
 
-#: builtin/commit.c:1581
+#: builtin/commit.c:1577
 msgid "Commit message options"
 msgstr "提交说明选项"
 
-#: builtin/commit.c:1582 builtin/tag.c:601
+#: builtin/commit.c:1578 builtin/tag.c:601
 msgid "read message from file"
 msgstr "从文件中读取提交说明"
 
-#: builtin/commit.c:1583
+#: builtin/commit.c:1579
 msgid "author"
 msgstr "作者"
 
-#: builtin/commit.c:1583
+#: builtin/commit.c:1579
 msgid "override author for commit"
 msgstr "提交时覆盖作者"
 
-#: builtin/commit.c:1584 builtin/gc.c:275
+#: builtin/commit.c:1580 builtin/gc.c:275
 msgid "date"
 msgstr "日期"
 
-#: builtin/commit.c:1584
+#: builtin/commit.c:1580
 msgid "override date for commit"
 msgstr "提交时覆盖日期"
 
-#: builtin/commit.c:1585 builtin/merge.c:218 builtin/notes.c:391
+#: builtin/commit.c:1581 builtin/merge.c:218 builtin/notes.c:391
 #: builtin/notes.c:554 builtin/tag.c:599
 msgid "message"
 msgstr "说明"
 
-#: builtin/commit.c:1585
+#: builtin/commit.c:1581
 msgid "commit message"
 msgstr "提交说明"
 
-#: builtin/commit.c:1586
+#: builtin/commit.c:1582
 msgid "reuse and edit message from specified commit"
 msgstr "重用并编辑指定提交的提交说明"
 
-#: builtin/commit.c:1587
+#: builtin/commit.c:1583
 msgid "reuse message from specified commit"
 msgstr "重用指定提交的提交说明"
 
-#: builtin/commit.c:1588
+#: builtin/commit.c:1584
 msgid "use autosquash formatted message to fixup specified commit"
 msgstr "使用 autosquash 格式的提交说明用以修正指定的提交"
 
-#: builtin/commit.c:1589
+#: builtin/commit.c:1585
 msgid "use autosquash formatted message to squash specified commit"
 msgstr "使用 autosquash 格式的提交说明用以压缩至指定的提交"
 
-#: builtin/commit.c:1590
+#: builtin/commit.c:1586
 msgid "the commit is authored by me now (used with -C/-c/--amend)"
 msgstr "现在将该提交的作者改为我（和 -C/-c/--amend 参数共用）"
 
-#: builtin/commit.c:1591 builtin/log.c:1191 builtin/revert.c:86
+#: builtin/commit.c:1587 builtin/log.c:1191 builtin/revert.c:86
 msgid "add Signed-off-by:"
 msgstr "添加 Signed-off-by: 签名"
 
-#: builtin/commit.c:1592
+#: builtin/commit.c:1588
 msgid "use specified template file"
 msgstr "使用指定的模板文件"
 
-#: builtin/commit.c:1593
+#: builtin/commit.c:1589
 msgid "force edit of commit"
 msgstr "强制编辑提交"
 
 #  译者：可选值，不能翻译（或是原文中笔误，应为 mode）
-#: builtin/commit.c:1594
+#: builtin/commit.c:1590
 msgid "default"
 msgstr "default"
 
-#: builtin/commit.c:1594 builtin/tag.c:604
+#: builtin/commit.c:1590 builtin/tag.c:604
 msgid "how to strip spaces and #comments from message"
 msgstr "设置如何删除提交说明里的空格和#注释"
 
-#: builtin/commit.c:1595
+#: builtin/commit.c:1591
 msgid "include status in commit message template"
 msgstr "在提交说明模板里包含状态信息"
 
-#: builtin/commit.c:1596 builtin/merge.c:225 builtin/revert.c:92
+#: builtin/commit.c:1592 builtin/merge.c:225 builtin/revert.c:92
 #: builtin/tag.c:605
 msgid "key-id"
 msgstr "key-id"
 
-#: builtin/commit.c:1597 builtin/merge.c:226 builtin/revert.c:93
+#: builtin/commit.c:1593 builtin/merge.c:226 builtin/revert.c:93
 msgid "GPG sign commit"
 msgstr "GPG 提交签名"
 
-#: builtin/commit.c:1600
+#: builtin/commit.c:1596
 msgid "Commit contents options"
 msgstr "提交内容选项"
 
-#: builtin/commit.c:1601
+#: builtin/commit.c:1597
 msgid "commit all changed files"
 msgstr "提交所有改动的文件"
 
-#: builtin/commit.c:1602
+#: builtin/commit.c:1598
 msgid "add specified files to index for commit"
 msgstr "添加指定的文件到索引区等待提交"
 
-#: builtin/commit.c:1603
+#: builtin/commit.c:1599
 msgid "interactively add files"
 msgstr "交互式添加文件"
 
-#: builtin/commit.c:1604
+#: builtin/commit.c:1600
 msgid "interactively add changes"
 msgstr "交互式添加变更"
 
-#: builtin/commit.c:1605
+#: builtin/commit.c:1601
 msgid "commit only specified files"
 msgstr "只提交指定的文件"
 
-#: builtin/commit.c:1606
+#: builtin/commit.c:1602
 msgid "bypass pre-commit hook"
 msgstr "绕过 pre-commit 钩子"
 
-#: builtin/commit.c:1607
+#: builtin/commit.c:1603
 msgid "show what would be committed"
 msgstr "显示将要提交的内容"
 
-#: builtin/commit.c:1618
+#: builtin/commit.c:1614
 msgid "amend previous commit"
 msgstr "修改先前的提交"
 
-#: builtin/commit.c:1619
+#: builtin/commit.c:1615
 msgid "bypass post-rewrite hook"
 msgstr "绕过 post-rewrite 钩子"
 
-#: builtin/commit.c:1624
+#: builtin/commit.c:1620
 msgid "ok to record an empty change"
 msgstr "允许一个空提交"
 
-#: builtin/commit.c:1626
+#: builtin/commit.c:1622
 msgid "ok to record a change with an empty message"
 msgstr "允许空的提交说明"
 
-#: builtin/commit.c:1655
+#: builtin/commit.c:1651
 msgid "could not parse HEAD commit"
 msgstr "不能解析 HEAD 提交"
 
-#: builtin/commit.c:1694 builtin/merge.c:519
+#: builtin/commit.c:1690 builtin/merge.c:519
 #, c-format
 msgid "could not open '%s' for reading"
 msgstr "不能为读入打开 '%s'"
 
-#: builtin/commit.c:1701
+#: builtin/commit.c:1697
 #, c-format
 msgid "Corrupt MERGE_HEAD file (%s)"
 msgstr "损坏的 MERGE_HEAD 文件（%s）"
 
-#: builtin/commit.c:1708
+#: builtin/commit.c:1704
 msgid "could not read MERGE_MODE"
 msgstr "不能读取 MERGE_MODE"
 
-#: builtin/commit.c:1727
+#: builtin/commit.c:1723
 #, c-format
 msgid "could not read commit message: %s"
 msgstr "不能读取提交说明：%s"
 
-#: builtin/commit.c:1738
+#: builtin/commit.c:1734
 #, c-format
 msgid "Aborting commit; you did not edit the message.\n"
 msgstr "终止提交；您未更改来自模版的提交说明。\n"
 
-#: builtin/commit.c:1743
+#: builtin/commit.c:1739
 #, c-format
 msgid "Aborting commit due to empty commit message.\n"
 msgstr "终止提交因为提交说明为空。\n"
 
-#: builtin/commit.c:1758 builtin/merge.c:851 builtin/merge.c:876
+#: builtin/commit.c:1754 builtin/merge.c:851 builtin/merge.c:876
 msgid "failed to write commit object"
 msgstr "无法写提交对象"
 
-#: builtin/commit.c:1791
+#: builtin/commit.c:1787
 msgid ""
 "Repository has been updated, but unable to write\n"
 "new_index file. Check that disk is not full and quota is\n"
 "not exceeded, and then \"git reset HEAD\" to recover."
 msgstr ""
 "版本库已更新，但无法写 new_index 文件。检查是否磁盘已满\n"
 "或磁盘配额已耗尽，然后执行 \"git reset HEAD\" 恢复。"
 
 #: builtin/config.c:8
-msgid "git config [options]"
-msgstr "git config [选项]"
+msgid "git config [<options>]"
+msgstr "git config [<选项>]"
 
 #: builtin/config.c:53
 msgid "Config file location"
 msgstr "配置文件位置"
 
 #: builtin/config.c:54
@@ -4877,18 +4910,18 @@
 
 #: builtin/count-objects.c:65
 msgid "print sizes in human readable format"
 msgstr "以用户可读的格式显示大小"
 
 #: builtin/describe.c:17
-msgid "git describe [options] <commit-ish>*"
-msgstr "git describe [选项] <提交号>*"
+msgid "git describe [<options>] [<commit-ish>...]"
+msgstr "git describe [<选项>] [<提交号>...]"
 
 #: builtin/describe.c:18
-msgid "git describe [options] --dirty"
-msgstr "git describe [选项] --dirty"
+msgid "git describe [<options>] --dirty"
+msgstr "git describe [<选项>] --dirty"
 
 #: builtin/describe.c:217
 #, c-format
 msgid "annotated tag %s not available"
 msgstr "注释 tag %s 无效"
 
@@ -5097,281 +5130,282 @@
 msgstr "对导出的引用应用引用表达式"
 
 #: builtin/fast-export.c:999
 msgid "anonymize output"
 msgstr "匿名输出"
 
-#: builtin/fetch.c:20
+#: builtin/fetch.c:19
 msgid "git fetch [<options>] [<repository> [<refspec>...]]"
 msgstr "git fetch [<选项>] [<版本库> [<引用规则>...]]"
 
-#: builtin/fetch.c:21
+#: builtin/fetch.c:20
 msgid "git fetch [<options>] <group>"
 msgstr "git fetch [<选项>] <组>"
 
-#: builtin/fetch.c:22
+#: builtin/fetch.c:21
 msgid "git fetch --multiple [<options>] [(<repository> | <group>)...]"
 msgstr "git fetch --multiple [<选项>] [(<版本库> | <组>)...]"
 
-#: builtin/fetch.c:23
+#: builtin/fetch.c:22
 msgid "git fetch --all [<options>]"
 msgstr "git fetch --all [<选项>]"
 
-#: builtin/fetch.c:90
+#: builtin/fetch.c:89
 msgid "fetch from all remotes"
 msgstr "从所有的远程抓取"
 
-#: builtin/fetch.c:92
+#: builtin/fetch.c:91
 msgid "append to .git/FETCH_HEAD instead of overwriting"
 msgstr "追加到 .git/FETCH_HEAD 而不是覆盖它"
 
-#: builtin/fetch.c:94
+#: builtin/fetch.c:93
 msgid "path to upload pack on remote end"
 msgstr "上传包到远程的路径"
 
-#: builtin/fetch.c:95
+#: builtin/fetch.c:94
 msgid "force overwrite of local branch"
 msgstr "强制覆盖本地分支"
 
-#: builtin/fetch.c:97
+#: builtin/fetch.c:96
 msgid "fetch from multiple remotes"
 msgstr "从多个远程抓取"
 
-#: builtin/fetch.c:99
+#: builtin/fetch.c:98
 msgid "fetch all tags and associated objects"
 msgstr "抓取所有的 tags 和关联对象"
 
-#: builtin/fetch.c:101
+#: builtin/fetch.c:100
 msgid "do not fetch all tags (--no-tags)"
 msgstr "不抓取任何 tags (--no-tags)"
 
-#: builtin/fetch.c:103
+#: builtin/fetch.c:102
 msgid "prune remote-tracking branches no longer on remote"
 msgstr "清除远程已经不存在的分支的跟踪分支"
 
 #  译者：可选值，不能翻译
-#: builtin/fetch.c:104
+#: builtin/fetch.c:103
 msgid "on-demand"
 msgstr "on-demand"
 
-#: builtin/fetch.c:105
+#: builtin/fetch.c:104
 msgid "control recursive fetching of submodules"
 msgstr "控制子模组的递归抓取"
 
-#: builtin/fetch.c:109
+#: builtin/fetch.c:108
 msgid "keep downloaded pack"
 msgstr "保持下载包"
 
-#: builtin/fetch.c:111
+#: builtin/fetch.c:110
 msgid "allow updating of HEAD ref"
 msgstr "允许更新 HEAD 引用"
 
-#: builtin/fetch.c:114
+#: builtin/fetch.c:113
 msgid "deepen history of shallow clone"
 msgstr "深化浅克隆的历史"
 
-#: builtin/fetch.c:116
+#: builtin/fetch.c:115
 msgid "convert to a complete repository"
 msgstr "转换为一个完整的版本库"
 
-#: builtin/fetch.c:118 builtin/log.c:1208
+#: builtin/fetch.c:117 builtin/log.c:1208
 msgid "dir"
 msgstr "目录"
 
-#: builtin/fetch.c:119
+#: builtin/fetch.c:118
 msgid "prepend this to submodule path output"
 msgstr "在子模组路径输出的前面加上此目录"
 
-#: builtin/fetch.c:122
+#: builtin/fetch.c:121
 msgid "default mode for recursion"
 msgstr "递归的默认模式"
 
-#: builtin/fetch.c:124
+#: builtin/fetch.c:123
 msgid "accept refs that update .git/shallow"
 msgstr "接受更新 .git/shallow 的引用"
 
-#: builtin/fetch.c:125
+#: builtin/fetch.c:124
 msgid "refmap"
 msgstr "引用映射"
 
-#: builtin/fetch.c:126
+#: builtin/fetch.c:125
 msgid "specify fetch refmap"
 msgstr "指定获取操作的引用映射"
 
-#: builtin/fetch.c:376
+#: builtin/fetch.c:375
 msgid "Couldn't find remote ref HEAD"
 msgstr "无法发现远程 HEAD 引用"
 
-#: builtin/fetch.c:454
+#: builtin/fetch.c:455
 #, c-format
 msgid "object %s not found"
 msgstr "对象 %s 未发现"
 
-#: builtin/fetch.c:459
+#: builtin/fetch.c:460
 msgid "[up to date]"
 msgstr "[最新]"
 
-#: builtin/fetch.c:473
+#: builtin/fetch.c:474
 #, c-format
 msgid "! %-*s %-*s -> %s  (can't fetch in current branch)"
 msgstr "! %-*s %-*s -> %s  （在当前分支下不能获取）"
 
-#: builtin/fetch.c:474 builtin/fetch.c:560
+#: builtin/fetch.c:475 builtin/fetch.c:561
 msgid "[rejected]"
 msgstr "[已拒绝]"
 
-#: builtin/fetch.c:485
+#: builtin/fetch.c:486
 msgid "[tag update]"
 msgstr "[tag更新]"
 
 #  译者：注意保持前导空格
-#: builtin/fetch.c:487 builtin/fetch.c:522 builtin/fetch.c:540
+#: builtin/fetch.c:488 builtin/fetch.c:523 builtin/fetch.c:541
 msgid "  (unable to update local ref)"
 msgstr "  （不能更新本地引用）"
 
-#: builtin/fetch.c:505
+#: builtin/fetch.c:506
 msgid "[new tag]"
 msgstr "[新tag]"
 
-#: builtin/fetch.c:508
+#: builtin/fetch.c:509
 msgid "[new branch]"
 msgstr "[新分支]"
 
-#: builtin/fetch.c:511
+#: builtin/fetch.c:512
 msgid "[new ref]"
 msgstr "[新引用]"
 
-#: builtin/fetch.c:556
+#: builtin/fetch.c:557
 msgid "unable to update local ref"
 msgstr "不能更新本地引用"
 
-#: builtin/fetch.c:556
+#: builtin/fetch.c:557
 msgid "forced update"
 msgstr "强制更新"
 
-#: builtin/fetch.c:562
+#: builtin/fetch.c:563
 msgid "(non-fast-forward)"
 msgstr "（非快进式）"
 
-#: builtin/fetch.c:595 builtin/fetch.c:828
+#: builtin/fetch.c:596 builtin/fetch.c:829
 #, c-format
 msgid "cannot open %s: %s\n"
 msgstr "无法打开 %s：%s\n"
 
-#: builtin/fetch.c:604
+#: builtin/fetch.c:605
 #, c-format
 msgid "%s did not send all necessary objects\n"
 msgstr "%s 未发送所有必须的对象\n"
 
-#: builtin/fetch.c:622
+#: builtin/fetch.c:623
 #, c-format
 msgid "reject %s because shallow roots are not allowed to be updated"
 msgstr "拒绝 %s 因为浅克隆不允许被更新"
 
-#: builtin/fetch.c:710 builtin/fetch.c:793
+#: builtin/fetch.c:711 builtin/fetch.c:794
 #, c-format
 msgid "From %.*s\n"
 msgstr "来自 %.*s\n"
 
-#: builtin/fetch.c:721
+#: builtin/fetch.c:722
 #, c-format
 msgid ""
 "some local refs could not be updated; try running\n"
 " 'git remote prune %s' to remove any old, conflicting branches"
 msgstr ""
 "一些本地引用不能被更新；尝试运行\n"
 " 'git remote prune %s' 来删除旧的、有冲突的分支"
 
 #  译者：注意保持前导空格
-#: builtin/fetch.c:773
+#: builtin/fetch.c:774
 #, c-format
 msgid "   (%s will become dangling)"
 msgstr "   （%s 将成为摇摆状态）"
 
 #  译者：注意保持前导空格
-#: builtin/fetch.c:774
+#: builtin/fetch.c:775
 #, c-format
 msgid "   (%s has become dangling)"
 msgstr "   （%s 已成为摇摆状态）"
 
-#: builtin/fetch.c:798
+#: builtin/fetch.c:799
 msgid "[deleted]"
 msgstr "[已删除]"
 
-#: builtin/fetch.c:799 builtin/remote.c:1060
+#: builtin/fetch.c:800 builtin/remote.c:1060
 msgid "(none)"
 msgstr "（无）"
 
-#: builtin/fetch.c:818
+#: builtin/fetch.c:819
 #, c-format
 msgid "Refusing to fetch into current branch %s of non-bare repository"
 msgstr "拒绝获取到非纯版本库的当前分支 %s"
 
-#: builtin/fetch.c:837
+#: builtin/fetch.c:838
 #, c-format
 msgid "Option \"%s\" value \"%s\" is not valid for %s"
 msgstr "选项 \"%s\" 的值 \"%s\" 对于 %s 是无效的"
 
-#: builtin/fetch.c:840
+#: builtin/fetch.c:841
 #, c-format
 msgid "Option \"%s\" is ignored for %s\n"
 msgstr "选项 \"%s\" 为 %s 所忽略\n"
 
-#: builtin/fetch.c:896
+#: builtin/fetch.c:897
 #, c-format
 msgid "Don't know how to fetch from %s"
 msgstr "不知道如何从 %s 获取"
 
-#: builtin/fetch.c:1058
+#: builtin/fetch.c:1059
 #, c-format
 msgid "Fetching %s\n"
 msgstr "正在获取 %s\n"
 
-#: builtin/fetch.c:1060 builtin/remote.c:90
+#: builtin/fetch.c:1061 builtin/remote.c:90
 #, c-format
 msgid "Could not fetch %s"
 msgstr "不能获取 %s"
 
-#: builtin/fetch.c:1078
+#: builtin/fetch.c:1079
 msgid ""
 "No remote repository specified.  Please, specify either a URL or a\n"
 "remote name from which new revisions should be fetched."
 msgstr "未指定远程版本库。请通过一个URL或远程版本库名指定，用以获取新提交。"
 
-#: builtin/fetch.c:1101
+#: builtin/fetch.c:1102
 msgid "You need to specify a tag name."
 msgstr "您需要指定一个 tag 名称。"
 
-#: builtin/fetch.c:1143
+#: builtin/fetch.c:1144
 msgid "--depth and --unshallow cannot be used together"
 msgstr "--depth 和 --unshallow 不能同时使用"
 
-#: builtin/fetch.c:1145
+#: builtin/fetch.c:1146
 msgid "--unshallow on a complete repository does not make sense"
 msgstr "对于一个完整的版本库，参数 --unshallow 没有意义"
 
-#: builtin/fetch.c:1168
+#: builtin/fetch.c:1169
 msgid "fetch --all does not take a repository argument"
 msgstr "fetch --all 不能带一个版本库参数"
 
-#: builtin/fetch.c:1170
+#: builtin/fetch.c:1171
 msgid "fetch --all does not make sense with refspecs"
 msgstr "fetch --all 带引用规则没有任何意义"
 
-#: builtin/fetch.c:1181
+#: builtin/fetch.c:1182
 #, c-format
 msgid "No such remote or remote group: %s"
 msgstr "没有这样的远程或远程组：%s"
 
-#: builtin/fetch.c:1189
+#: builtin/fetch.c:1190
 msgid "Fetching a group and specifying refspecs does not make sense"
 msgstr "获取组并指定引用规则没有意义"
 
 #: builtin/fmt-merge-msg.c:13
-msgid "git fmt-merge-msg [-m <message>] [--log[=<n>]|--no-log] [--file <file>]"
-msgstr "git fmt-merge-msg [-m <说明>] [--log[=<n>]|--no-log] [--file <文件>]"
+msgid ""
+"git fmt-merge-msg [-m <message>] [--log[=<n>] | --no-log] [--file <file>]"
+msgstr "git fmt-merge-msg [-m <说明>] [--log[=<n>] | --no-log] [--file <文件>]"
 
 #: builtin/fmt-merge-msg.c:662 builtin/fmt-merge-msg.c:665 builtin/grep.c:698
 #: builtin/merge.c:198 builtin/repack.c:178 builtin/repack.c:182
 #: builtin/show-branch.c:657 builtin/show-ref.c:178 builtin/tag.c:590
 #: parse-options.h:132 parse-options.h:239
 msgid "n"
@@ -5394,67 +5428,67 @@
 msgstr "使用 <文本> 作为提交说明的开始"
 
 #: builtin/fmt-merge-msg.c:671
 msgid "file to read from"
 msgstr "从文件中读取"
 
-#: builtin/for-each-ref.c:676
+#: builtin/for-each-ref.c:675
 msgid "unable to parse format"
 msgstr "不能解析格式"
 
-#: builtin/for-each-ref.c:1064
-msgid "git for-each-ref [options] [<pattern>]"
-msgstr "git for-each-ref [选项] [<模式>]"
+#: builtin/for-each-ref.c:1063
+msgid "git for-each-ref [<options>] [<pattern>]"
+msgstr "git for-each-ref [<选项>] [<模式>]"
 
-#: builtin/for-each-ref.c:1079
+#: builtin/for-each-ref.c:1078
 msgid "quote placeholders suitably for shells"
 msgstr "引用占位符适用于 shells"
 
-#: builtin/for-each-ref.c:1081
+#: builtin/for-each-ref.c:1080
 msgid "quote placeholders suitably for perl"
 msgstr "引用占位符适用于 perl"
 
-#: builtin/for-each-ref.c:1083
+#: builtin/for-each-ref.c:1082
 msgid "quote placeholders suitably for python"
 msgstr "引用占位符适用于 python"
 
-#: builtin/for-each-ref.c:1085
+#: builtin/for-each-ref.c:1084
 msgid "quote placeholders suitably for Tcl"
 msgstr "引用占位符适用于 Tcl"
 
-#: builtin/for-each-ref.c:1088
+#: builtin/for-each-ref.c:1087
 msgid "show only <n> matched refs"
 msgstr "只显示 <n> 个匹配的引用"
 
-#: builtin/for-each-ref.c:1089 builtin/replace.c:438
+#: builtin/for-each-ref.c:1088 builtin/replace.c:438
 msgid "format"
 msgstr "格式"
 
-#: builtin/for-each-ref.c:1089
+#: builtin/for-each-ref.c:1088
 msgid "format to use for the output"
 msgstr "输出格式"
 
-#: builtin/for-each-ref.c:1090
+#: builtin/for-each-ref.c:1089
 msgid "key"
 msgstr "key"
 
-#: builtin/for-each-ref.c:1091
+#: builtin/for-each-ref.c:1090
 msgid "field name to sort on"
 msgstr "排序的字段名"
 
-#: builtin/fsck.c:147 builtin/prune.c:136
+#: builtin/fsck.c:147 builtin/prune.c:137
 msgid "Checking connectivity"
 msgstr "检查连接中"
 
 #: builtin/fsck.c:540
 msgid "Checking object directories"
 msgstr "检查对象目录中"
 
 #: builtin/fsck.c:603
-msgid "git fsck [options] [<object>...]"
-msgstr "git fsck [选项] [<对象>...]"
+msgid "git fsck [<options>] [<object>...]"
+msgstr "git fsck [<选项>] [<对象>...]"
 
 #: builtin/fsck.c:609
 msgid "show unreachable objects"
 msgstr "显示不可达的对象"
 
 #: builtin/fsck.c:610
@@ -5495,14 +5529,14 @@
 
 #: builtin/fsck.c:669
 msgid "Checking objects"
 msgstr "检查对象中"
 
 #: builtin/gc.c:24
-msgid "git gc [options]"
-msgstr "git gc [选项]"
+msgid "git gc [<options>]"
+msgstr "git gc [<选项>]"
 
 #: builtin/gc.c:79
 #, c-format
 msgid "Invalid gc.pruneexpire: '%s'"
 msgstr "无效的 gc.pruneexpire：'%s'"
 
@@ -5552,14 +5586,14 @@
 #: builtin/gc.c:364
 msgid ""
 "There are too many unreachable loose objects; run 'git prune' to remove them."
 msgstr "有太多不可达的松散对象，运行 'git prune' 删除它们。"
 
 #: builtin/grep.c:23
-msgid "git grep [options] [-e] <pattern> [<rev>...] [[--] <path>...]"
-msgstr "git grep [选项] [-e] <模式> [<版本>...] [[--] <路径>...]"
+msgid "git grep [<options>] [-e] <pattern> [<rev>...] [[--] <path>...]"
+msgstr "git grep [<选项>] [-e] <模式> [<版本>...] [[--] <路径>...]"
 
 #: builtin/grep.c:218
 #, c-format
 msgid "grep: failed to create thread: %s"
 msgstr "grep：无法创建线程：%s"
 
@@ -5594,14 +5628,14 @@
 #  译者：中文字符串拼接，可删除前导空格
 #: builtin/grep.c:642
 msgid "search in both tracked and untracked files"
 msgstr "在跟踪和未跟踪的文件中搜索"
 
 #: builtin/grep.c:644
-msgid "search also in ignored files"
-msgstr "也在忽略的文件中搜索"
+msgid "ignore files specified via '.gitignore'"
+msgstr "忽略 '.gitignore' 包含的文件"
 
 #: builtin/grep.c:647
 msgid "show non-matching lines"
 msgstr "显示未匹配的行"
 
 #: builtin/grep.c:649
@@ -5779,23 +5813,23 @@
 #: builtin/grep.c:908
 msgid "both --cached and trees are given."
 msgstr "同时给出了 --cached 和树对象。"
 
 #: builtin/hash-object.c:82
 msgid ""
-"git hash-object [-t <type>] [-w] [--path=<file>|--no-filters] [--stdin] [--] "
-"<file>..."
+"git hash-object [-t <type>] [-w] [--path=<file> | --no-filters] [--stdin] "
+"[--] <file>..."
 msgstr ""
-"git hash-object [-t <类型>] [-w] [--path=<文件>|--no-filters] [--stdin] [--] "
-"<文件>..."
+"git hash-object [-t <类型>] [-w] [--path=<文件> | --no-filters] [--stdin] "
+"[--] <文件>..."
 
 #: builtin/hash-object.c:83
 msgid "git hash-object  --stdin-paths < <list-of-paths>"
 msgstr "git hash-object  --stdin-paths < <路径列表>"
 
-#: builtin/hash-object.c:94 builtin/tag.c:610
+#: builtin/hash-object.c:94 builtin/tag.c:612
 msgid "type"
 msgstr "类型"
 
 #: builtin/hash-object.c:94
 msgid "object type"
 msgstr "对象类型"
@@ -5839,14 +5873,14 @@
 
 #: builtin/help.c:46
 msgid "show info page"
 msgstr "显示 info 手册"
 
 #: builtin/help.c:52
-msgid "git help [--all] [--guides] [--man|--web|--info] [command]"
-msgstr "git help [--all] [--guides] [--man|--web|--info] [命令]"
+msgid "git help [--all] [--guides] [--man | --web | --info] [<command>]"
+msgstr "git help [--all] [--guides] [--man | --web | --info] [<命令>]"
 
 #: builtin/help.c:64
 #, c-format
 msgid "unrecognized help format '%s'"
 msgstr "未能识别的帮助格式 '%s'"
 
@@ -6048,14 +6082,14 @@
 #: builtin/index-pack.c:686 builtin/index-pack.c:692 builtin/index-pack.c:715
 #: builtin/index-pack.c:749 builtin/index-pack.c:758
 #, c-format
 msgid "SHA1 COLLISION FOUND WITH %s !"
 msgstr "发现 %s 出现 SHA1 冲突！"
 
-#: builtin/index-pack.c:689 builtin/pack-objects.c:164
-#: builtin/pack-objects.c:256
+#: builtin/index-pack.c:689 builtin/pack-objects.c:162
+#: builtin/pack-objects.c:254
 #, c-format
 msgid "unable to read %s"
 msgstr "不能读 %s"
 
 #: builtin/index-pack.c:755
 #, c-format
@@ -6136,103 +6170,103 @@
 #, c-format
 msgid "pack has %d unresolved delta"
 msgid_plural "pack has %d unresolved deltas"
 msgstr[0] "包有 %d 个未解决的 delta"
 msgstr[1] "包有 %d 个未解决的 delta"
 
-#: builtin/index-pack.c:1220
+#: builtin/index-pack.c:1219
 #, c-format
 msgid "unable to deflate appended object (%d)"
 msgstr "不能压缩附加对象（%d）"
 
-#: builtin/index-pack.c:1299
+#: builtin/index-pack.c:1298
 #, c-format
 msgid "local object %s is corrupt"
 msgstr "本地对象 %s 已损坏"
 
-#: builtin/index-pack.c:1323
+#: builtin/index-pack.c:1322
 msgid "error while closing pack file"
 msgstr "关闭包文件时出错"
 
-#: builtin/index-pack.c:1336
+#: builtin/index-pack.c:1335
 #, c-format
 msgid "cannot write keep file '%s'"
 msgstr "无法写保留文件 '%s'"
 
-#: builtin/index-pack.c:1344
+#: builtin/index-pack.c:1343
 #, c-format
 msgid "cannot close written keep file '%s'"
 msgstr "无法关闭保留文件 '%s'"
 
-#: builtin/index-pack.c:1357
+#: builtin/index-pack.c:1356
 msgid "cannot store pack file"
 msgstr "无法存储包文件"
 
-#: builtin/index-pack.c:1368
+#: builtin/index-pack.c:1367
 msgid "cannot store index file"
 msgstr "无法存储索引文件"
 
-#: builtin/index-pack.c:1401
+#: builtin/index-pack.c:1400
 #, c-format
 msgid "bad pack.indexversion=%<PRIu32>"
 msgstr "坏的 pack.indexversion=%<PRIu32>"
 
-#: builtin/index-pack.c:1407
+#: builtin/index-pack.c:1406
 #, c-format
 msgid "invalid number of threads specified (%d)"
 msgstr "指定的线程数无效（%d）"
 
-#: builtin/index-pack.c:1411 builtin/index-pack.c:1590
+#: builtin/index-pack.c:1410 builtin/index-pack.c:1589
 #, c-format
 msgid "no threads support, ignoring %s"
 msgstr "没有线程支持，忽略 %s"
 
-#: builtin/index-pack.c:1469
+#: builtin/index-pack.c:1468
 #, c-format
 msgid "Cannot open existing pack file '%s'"
 msgstr "无法打开现存包文件 '%s'"
 
-#: builtin/index-pack.c:1471
+#: builtin/index-pack.c:1470
 #, c-format
 msgid "Cannot open existing pack idx file for '%s'"
 msgstr "无法为 %s 打开包索引文件"
 
-#: builtin/index-pack.c:1518
+#: builtin/index-pack.c:1517
 #, c-format
 msgid "non delta: %d object"
 msgid_plural "non delta: %d objects"
 msgstr[0] "非 delta：%d 个对象"
 msgstr[1] "非 delta：%d 个对象"
 
-#: builtin/index-pack.c:1525
+#: builtin/index-pack.c:1524
 #, c-format
 msgid "chain length = %d: %lu object"
 msgid_plural "chain length = %d: %lu objects"
 msgstr[0] "链长 = %d: %lu 对象"
 msgstr[1] "链长 = %d: %lu 对象"
 
-#: builtin/index-pack.c:1554
+#: builtin/index-pack.c:1553
 msgid "Cannot come back to cwd"
 msgstr "无法返回当前工作目录"
 
-#: builtin/index-pack.c:1602 builtin/index-pack.c:1605
-#: builtin/index-pack.c:1617 builtin/index-pack.c:1621
+#: builtin/index-pack.c:1601 builtin/index-pack.c:1604
+#: builtin/index-pack.c:1616 builtin/index-pack.c:1620
 #, c-format
 msgid "bad %s"
 msgstr "错误选项 %s"
 
-#: builtin/index-pack.c:1635
+#: builtin/index-pack.c:1634
 msgid "--fix-thin cannot be used without --stdin"
 msgstr "--fix-thin 不能和 --stdin 同时使用"
 
-#: builtin/index-pack.c:1639 builtin/index-pack.c:1648
+#: builtin/index-pack.c:1638 builtin/index-pack.c:1647
 #, c-format
 msgid "packfile name '%s' does not end with '.pack'"
 msgstr "包名 '%s' 没有以 '.pack' 结尾"
 
-#: builtin/index-pack.c:1656
+#: builtin/index-pack.c:1655
 msgid "--verify with no packfile name given"
 msgstr "--verify 没有提供包名参数"
 
 #: builtin/init-db.c:35
 #, c-format
 msgid "Could not make %s writable by group"
@@ -6339,16 +6373,16 @@
 msgid " shared"
 msgstr "共享"
 
 #: builtin/init-db.c:475
 msgid ""
 "git init [-q | --quiet] [--bare] [--template=<template-directory>] [--"
-"shared[=<permissions>]] [directory]"
+"shared[=<permissions>]] [<directory>]"
 msgstr ""
 "git init [-q | --quiet] [--bare] [--template=<模板目录>] [--shared[=<权限>]] "
-"[目录]"
+"[<目录>]"
 
 #: builtin/init-db.c:498
 msgid "permissions"
 msgstr "权限"
 
 #: builtin/init-db.c:499
@@ -6403,14 +6437,14 @@
 
 #: builtin/log.c:41
 msgid "git log [<options>] [<revision range>] [[--] <path>...]"
 msgstr "git log [<选项>] [<版本范围>] [[--] <路径>...]"
 
 #: builtin/log.c:42
-msgid "git show [options] <object>..."
-msgstr "git show [选项] <对象>..."
+msgid "git show [<options>] <object>..."
+msgstr "git show [<选项>] <对象>..."
 
 #: builtin/log.c:81
 #, c-format
 msgid "invalid --decorate option: %s"
 msgstr "无效的 --decorate 选项：%s"
 
@@ -6482,14 +6516,14 @@
 #: builtin/log.c:998
 #, c-format
 msgid "insane in-reply-to: %s"
 msgstr "不正常的 in-reply-to：%s"
 
 #: builtin/log.c:1026
-msgid "git format-patch [options] [<since> | <revision range>]"
-msgstr "git format-patch [选项] [<从> | <版本范围>]"
+msgid "git format-patch [<options>] [<since> | <revision-range>]"
+msgstr "git format-patch [<选项>] [<从> | <版本范围>]"
 
 #: builtin/log.c:1071
 msgid "Two output directories?"
 msgstr "两个输出目录？"
 
 #: builtin/log.c:1186
@@ -6679,101 +6713,101 @@
 
 #: builtin/log.c:1651 builtin/log.c:1653 builtin/log.c:1665
 #, c-format
 msgid "Unknown commit %s"
 msgstr "未知提交 %s"
 
-#: builtin/ls-files.c:401
-msgid "git ls-files [options] [<file>...]"
-msgstr "git ls-files [选项] [<文件>...]"
+#: builtin/ls-files.c:358
+msgid "git ls-files [<options>] [<file>...]"
+msgstr "git ls-files [<选项>] [<文件>...]"
 
-#: builtin/ls-files.c:458
+#: builtin/ls-files.c:415
 msgid "identify the file status with tags"
 msgstr "用标签标识文件的状态"
 
-#: builtin/ls-files.c:460
+#: builtin/ls-files.c:417
 msgid "use lowercase letters for 'assume unchanged' files"
 msgstr "使用小写字母表示 '假设未改变的' 文件"
 
-#: builtin/ls-files.c:462
+#: builtin/ls-files.c:419
 msgid "show cached files in the output (default)"
 msgstr "显示缓存的文件（默认）"
 
-#: builtin/ls-files.c:464
+#: builtin/ls-files.c:421
 msgid "show deleted files in the output"
 msgstr "显示已删除的文件"
 
-#: builtin/ls-files.c:466
+#: builtin/ls-files.c:423
 msgid "show modified files in the output"
 msgstr "显示已修改的文件"
 
-#: builtin/ls-files.c:468
+#: builtin/ls-files.c:425
 msgid "show other files in the output"
 msgstr "显示其它文件"
 
-#: builtin/ls-files.c:470
+#: builtin/ls-files.c:427
 msgid "show ignored files in the output"
 msgstr "显示忽略的文件"
 
-#: builtin/ls-files.c:473
+#: builtin/ls-files.c:430
 msgid "show staged contents' object name in the output"
 msgstr "显示暂存区内容的对象名称"
 
-#: builtin/ls-files.c:475
+#: builtin/ls-files.c:432
 msgid "show files on the filesystem that need to be removed"
 msgstr "显示文件系统需要删除的文件"
 
-#: builtin/ls-files.c:477
+#: builtin/ls-files.c:434
 msgid "show 'other' directories' names only"
 msgstr "只显示“其他”目录的名称"
 
-#: builtin/ls-files.c:480
+#: builtin/ls-files.c:437
 msgid "don't show empty directories"
 msgstr "不显示空目录"
 
-#: builtin/ls-files.c:483
+#: builtin/ls-files.c:440
 msgid "show unmerged files in the output"
 msgstr "显示未合并的文件"
 
-#: builtin/ls-files.c:485
+#: builtin/ls-files.c:442
 msgid "show resolve-undo information"
 msgstr "显示 resolve-undo 信息"
 
-#: builtin/ls-files.c:487
+#: builtin/ls-files.c:444
 msgid "skip files matching pattern"
 msgstr "匹配排除文件的模式"
 
-#: builtin/ls-files.c:490
+#: builtin/ls-files.c:447
 msgid "exclude patterns are read from <file>"
 msgstr "从 <文件> 中读取排除模式"
 
-#: builtin/ls-files.c:493
+#: builtin/ls-files.c:450
 msgid "read additional per-directory exclude patterns in <file>"
 msgstr "从 <文件> 读取额外的每个目录的排除模式"
 
-#: builtin/ls-files.c:495
+#: builtin/ls-files.c:452
 msgid "add the standard git exclusions"
 msgstr "添加标准的 git 排除"
 
-#: builtin/ls-files.c:498
+#: builtin/ls-files.c:455
 msgid "make the output relative to the project top directory"
 msgstr "显示相对于顶级目录的文件名"
 
-#: builtin/ls-files.c:501
+#: builtin/ls-files.c:458
 msgid "if any <file> is not in the index, treat this as an error"
 msgstr "如果任何 <文件> 都不在索引区，视为错误"
 
-#: builtin/ls-files.c:502
+#: builtin/ls-files.c:459
 msgid "tree-ish"
 msgstr "树或提交"
 
-#: builtin/ls-files.c:503
+#: builtin/ls-files.c:460
 msgid "pretend that paths removed since <tree-ish> are still present"
 msgstr "假装自从 <树或提交> 之后删除的路径仍然存在"
 
-#: builtin/ls-files.c:505
+#: builtin/ls-files.c:462
 msgid "show debugging data"
 msgstr "显示调试数据"
 
 #: builtin/ls-tree.c:28
 msgid "git ls-tree [<options>] <tree-ish> [<path>...]"
 msgstr "git ls-tree [<选项>] <树或提交> [<路径>...]"
@@ -6808,18 +6842,18 @@
 
 #: builtin/ls-tree.c:144
 msgid "list entire tree; not just current directory (implies --full-name)"
 msgstr "列出整个树；不仅仅当前目录（隐含 --full-name）"
 
 #: builtin/merge.c:45
-msgid "git merge [options] [<commit>...]"
-msgstr "git merge [选项] [<提交>...]"
+msgid "git merge [<options>] [<commit>...]"
+msgstr "git merge [<选项>] [<提交>...]"
 
 #: builtin/merge.c:46
-msgid "git merge [options] <msg> HEAD <commit>"
-msgstr "git merge [选项] <说明> HEAD <提交>"
+msgid "git merge [<options>] <msg> HEAD <commit>"
+msgstr "git merge [<选项>] <说明> HEAD <提交>"
 
 #: builtin/merge.c:47
 msgid "git merge --abort"
 msgstr "git merge --abort"
 
 #: builtin/merge.c:100
@@ -7153,18 +7187,18 @@
 #: builtin/merge.c:1543
 #, c-format
 msgid "Automatic merge went well; stopped before committing as requested\n"
 msgstr "自动合并进展顺利，按要求在提交前停止\n"
 
 #: builtin/merge-base.c:29
-msgid "git merge-base [-a|--all] <commit> <commit>..."
-msgstr "git merge-base [-a|--all] <提交> <提交>..."
+msgid "git merge-base [-a | --all] <commit> <commit>..."
+msgstr "git merge-base [-a | --all] <提交> <提交>..."
 
 #: builtin/merge-base.c:30
-msgid "git merge-base [-a|--all] --octopus <commit>..."
-msgstr "git merge-base [-a|--all] --octopus <提交>..."
+msgid "git merge-base [-a | --all] --octopus <commit>..."
+msgstr "git merge-base [-a | --all] --octopus <提交>..."
 
 #: builtin/merge-base.c:31
 msgid "git merge-base --independent <commit>..."
 msgstr "git merge-base --independent <提交>..."
 
 #: builtin/merge-base.c:32
@@ -7194,16 +7228,17 @@
 #: builtin/merge-base.c:222
 msgid "find where <commit> forked from reflog of <ref>"
 msgstr "查找 <提交> 从<引用>日志的何处分支的"
 
 #: builtin/merge-file.c:8
 msgid ""
-"git merge-file [options] [-L name1 [-L orig [-L name2]]] file1 orig_file "
-"file2"
+"git merge-file [<options>] [-L <name1> [-L <orig> [-L <name2>]]] <file1> "
+"<orig-file> <file2>"
 msgstr ""
-"git merge-file [选项] [-L name1 [-L orig [-L name2]]] file1 orig_file file2"
+"git merge-file [<选项>] [-L <文件1> [-L <初始> [-L <名字2>]]] <文件1> <初始文"
+"件> <文件2>"
 
 #: builtin/merge-file.c:33
 msgid "send results to standard output"
 msgstr "将结果发送到标准输出"
 
 #: builtin/merge-file.c:34
@@ -7228,14 +7263,14 @@
 
 #: builtin/merge-file.c:43
 msgid "do not warn about conflicts"
 msgstr "不要警告冲突"
 
 #: builtin/merge-file.c:45
-msgid "set labels for file1/orig_file/file2"
-msgstr "为 file1/orig_file/file2 设置标签"
+msgid "set labels for file1/orig-file/file2"
+msgstr "为 文件1/初始文件/文件2 设置标签"
 
 #: builtin/mktree.c:64
 msgid "git mktree [-z] [--missing] [--batch]"
 msgstr "git mktree [-z] [--missing] [--batch]"
 
 #: builtin/mktree.c:150
@@ -7248,14 +7283,14 @@
 
 #: builtin/mktree.c:152
 msgid "allow creation of more than one tree"
 msgstr "允许创建一个以上的树"
 
 #: builtin/mv.c:15
-msgid "git mv [options] <source>... <destination>"
-msgstr "git mv [选项] <源>... <目标>"
+msgid "git mv [<options>] <source>... <destination>"
+msgstr "git mv [<选项>] <源>... <目标>"
 
 #: builtin/mv.c:69
 #, c-format
 msgid "Directory %s is in index and no submodule?"
 msgstr "目录 %s 在索引中并且不是子模组？"
 
@@ -7334,28 +7369,28 @@
 
 #: builtin/mv.c:253
 #, c-format
 msgid "Renaming %s to %s\n"
 msgstr "重命名 %s 至 %s\n"
 
-#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:355
+#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:359
 #, c-format
 msgid "renaming '%s' failed"
 msgstr "重命名 '%s' 失败"
 
 #: builtin/name-rev.c:255
-msgid "git name-rev [options] <commit>..."
-msgstr "git name-rev [选项] <提交>..."
+msgid "git name-rev [<options>] <commit>..."
+msgstr "git name-rev [<选项>] <提交>..."
 
 #: builtin/name-rev.c:256
-msgid "git name-rev [options] --all"
-msgstr "git name-rev [选项] --all"
+msgid "git name-rev [<options>] --all"
+msgstr "git name-rev [<选项>] --all"
 
 #: builtin/name-rev.c:257
-msgid "git name-rev [options] --stdin"
-msgstr "git name-rev [选项] --stdin"
+msgid "git name-rev [<options>] --stdin"
+msgstr "git name-rev [<选项>] --stdin"
 
 #: builtin/name-rev.c:309
 msgid "print only names (no SHA-1)"
 msgstr "只打印名称（无 SHA-1）"
 
 #: builtin/name-rev.c:310
@@ -7380,66 +7415,66 @@
 
 #: builtin/name-rev.c:322
 msgid "dereference tags in the input (internal use)"
 msgstr "反向解析输入中的 tags（内部使用）"
 
 #: builtin/notes.c:24
-msgid "git notes [--ref <notes_ref>] [list [<object>]]"
+msgid "git notes [--ref <notes-ref>] [list [<object>]]"
 msgstr "git notes [--ref <注解引用>] [list [<对象>]]"
 
 #: builtin/notes.c:25
 msgid ""
-"git notes [--ref <notes_ref>] add [-f] [--allow-empty] [-m <msg> | -F <file> "
+"git notes [--ref <notes-ref>] add [-f] [--allow-empty] [-m <msg> | -F <file> "
 "| (-c | -C) <object>] [<object>]"
 msgstr ""
 "git notes [--ref <注解引用>] add [-f] [--allow-empty] [-m <说明> | -F <文件> "
 "| (-c | -C) <对象>] [<对象>]"
 
 #: builtin/notes.c:26
-msgid "git notes [--ref <notes_ref>] copy [-f] <from-object> <to-object>"
+msgid "git notes [--ref <notes-ref>] copy [-f] <from-object> <to-object>"
 msgstr "git notes [--ref <注解引用>] copy [-f] <源对象> <目标对象>"
 
 #: builtin/notes.c:27
 msgid ""
-"git notes [--ref <notes_ref>] append [--allow-empty] [-m <msg> | -F <file> | "
+"git notes [--ref <notes-ref>] append [--allow-empty] [-m <msg> | -F <file> | "
 "(-c | -C) <object>] [<object>]"
 msgstr ""
 "git notes [--ref <注解引用>] append [--allow-empty] [-m <说明> | -F <文件> | "
 "(-c | -C) <对象>] [<对象>]"
 
 #: builtin/notes.c:28
-msgid "git notes [--ref <notes_ref>] edit [--allow-empty] [<object>]"
+msgid "git notes [--ref <notes-ref>] edit [--allow-empty] [<object>]"
 msgstr "git notes [--ref <注解引用>] edit [--allow-empty] [<对象>]"
 
 #: builtin/notes.c:29
-msgid "git notes [--ref <notes_ref>] show [<object>]"
+msgid "git notes [--ref <notes-ref>] show [<object>]"
 msgstr "git notes [--ref <注解引用>] show [<对象>]"
 
 #: builtin/notes.c:30
 msgid ""
-"git notes [--ref <notes_ref>] merge [-v | -q] [-s <strategy> ] <notes_ref>"
+"git notes [--ref <notes-ref>] merge [-v | -q] [-s <strategy>] <notes-ref>"
 msgstr "git notes [--ref <注解引用>] merge [-v | -q] [-s <策略> ] <注解引用>"
 
 #: builtin/notes.c:31
 msgid "git notes merge --commit [-v | -q]"
 msgstr "git notes merge --commit [-v | -q]"
 
 #: builtin/notes.c:32
 msgid "git notes merge --abort [-v | -q]"
 msgstr "git notes merge --abort [-v | -q]"
 
 #: builtin/notes.c:33
-msgid "git notes [--ref <notes_ref>] remove [<object>...]"
+msgid "git notes [--ref <notes-ref>] remove [<object>...]"
 msgstr "git notes [--ref <注解引用>] remove [<对象>...]"
 
 #: builtin/notes.c:34
-msgid "git notes [--ref <notes_ref>] prune [-n | -v]"
+msgid "git notes [--ref <notes-ref>] prune [-n | -v]"
 msgstr "git notes [--ref <注解引用>] prune [-n | -v]"
 
 #: builtin/notes.c:35
-msgid "git notes [--ref <notes_ref>] get-ref"
+msgid "git notes [--ref <notes-ref>] get-ref"
 msgstr "git notes [--ref <注解引用>] get-ref"
 
 #: builtin/notes.c:40
 msgid "git notes [list [<object>]]"
 msgstr "git notes [list [<对象>]]"
 
@@ -7465,13 +7500,13 @@
 
 #: builtin/notes.c:66
 msgid "git notes show [<object>]"
 msgstr "git notes show [<对象>]"
 
 #: builtin/notes.c:71
-msgid "git notes merge [<options>] <notes_ref>"
+msgid "git notes merge [<options>] <notes-ref>"
 msgstr "git notes merge [<选项>] <注解引用>"
 
 #: builtin/notes.c:72
 msgid "git notes merge --commit [<options>]"
 msgstr "git notes merge --commit [<选项>]"
 
@@ -7696,13 +7731,13 @@
 
 #: builtin/notes.c:953
 msgid "notes-ref"
 msgstr "注解引用"
 
 #: builtin/notes.c:954
-msgid "use notes from <notes_ref>"
+msgid "use notes from <notes-ref>"
 msgstr "从 <注解引用> 使用注解"
 
 #: builtin/notes.c:989 builtin/remote.c:1621
 #, c-format
 msgid "Unknown subcommand: %s"
 msgstr "未知子命令：%s"
@@ -7712,204 +7747,204 @@
 msgstr "git pack-objects --stdout [选项...] [< 引用列表 | < 对象列表]"
 
 #: builtin/pack-objects.c:29
 msgid "git pack-objects [options...] base-name [< ref-list | < object-list]"
 msgstr "git pack-objects [选项...] base-name [< 引用列表 | < 对象列表]"
 
-#: builtin/pack-objects.c:177 builtin/pack-objects.c:180
+#: builtin/pack-objects.c:175 builtin/pack-objects.c:178
 #, c-format
 msgid "deflate error (%d)"
 msgstr "压缩错误 (%d)"
 
-#: builtin/pack-objects.c:773
+#: builtin/pack-objects.c:771
 msgid "Writing objects"
 msgstr "写入对象中"
 
-#: builtin/pack-objects.c:1015
+#: builtin/pack-objects.c:1013
 msgid "disabling bitmap writing, as some objects are not being packed"
 msgstr "禁用 bitmap 写入，因为一些对象将不会被打包"
 
-#: builtin/pack-objects.c:2175
+#: builtin/pack-objects.c:2173
 msgid "Compressing objects"
 msgstr "压缩对象中"
 
-#: builtin/pack-objects.c:2572
+#: builtin/pack-objects.c:2570
 #, c-format
 msgid "unsupported index version %s"
 msgstr "不支持的索引版本 %s"
 
-#: builtin/pack-objects.c:2576
+#: builtin/pack-objects.c:2574
 #, c-format
 msgid "bad index version '%s'"
 msgstr "坏的索引版本 '%s'"
 
-#: builtin/pack-objects.c:2599
+#: builtin/pack-objects.c:2597
 #, c-format
 msgid "option %s does not accept negative form"
 msgstr "选项 %s 不接受否定格式"
 
-#: builtin/pack-objects.c:2603
+#: builtin/pack-objects.c:2601
 #, c-format
 msgid "unable to parse value '%s' for option %s"
 msgstr "不能解析选项 %1$s 的值 '%2$s'"
 
-#: builtin/pack-objects.c:2623
+#: builtin/pack-objects.c:2621
 msgid "do not show progress meter"
 msgstr "不显示进度表"
 
-#: builtin/pack-objects.c:2625
+#: builtin/pack-objects.c:2623
 msgid "show progress meter"
 msgstr "显示进度表"
 
-#: builtin/pack-objects.c:2627
+#: builtin/pack-objects.c:2625
 msgid "show progress meter during object writing phase"
 msgstr "在对象写入阶段显示进度表"
 
-#: builtin/pack-objects.c:2630
+#: builtin/pack-objects.c:2628
 msgid "similar to --all-progress when progress meter is shown"
 msgstr "当进度表显示时类似于 --all-progress"
 
-#: builtin/pack-objects.c:2631
+#: builtin/pack-objects.c:2629
 msgid "version[,offset]"
 msgstr "版本[,偏移]"
 
-#: builtin/pack-objects.c:2632
+#: builtin/pack-objects.c:2630
 msgid "write the pack index file in the specified idx format version"
 msgstr "用指定的 idx 格式版本来写包索引文件"
 
-#: builtin/pack-objects.c:2635
+#: builtin/pack-objects.c:2633
 msgid "maximum size of each output pack file"
 msgstr "每个输出包的最大尺寸"
 
-#: builtin/pack-objects.c:2637
+#: builtin/pack-objects.c:2635
 msgid "ignore borrowed objects from alternate object store"
 msgstr "忽略从替代对象存储里借用对象"
 
-#: builtin/pack-objects.c:2639
+#: builtin/pack-objects.c:2637
 msgid "ignore packed objects"
 msgstr "忽略包对象"
 
-#: builtin/pack-objects.c:2641
+#: builtin/pack-objects.c:2639
 msgid "limit pack window by objects"
 msgstr "限制打包窗口的对象数"
 
-#: builtin/pack-objects.c:2643
+#: builtin/pack-objects.c:2641
 msgid "limit pack window by memory in addition to object limit"
 msgstr "除对象数量限制外设置打包窗口的内存限制"
 
-#: builtin/pack-objects.c:2645
+#: builtin/pack-objects.c:2643
 msgid "maximum length of delta chain allowed in the resulting pack"
 msgstr "打包允许的 delta 链的最大长度"
 
-#: builtin/pack-objects.c:2647
+#: builtin/pack-objects.c:2645
 msgid "reuse existing deltas"
 msgstr "重用已存在的 deltas"
 
-#: builtin/pack-objects.c:2649
+#: builtin/pack-objects.c:2647
 msgid "reuse existing objects"
 msgstr "重用已存在的对象"
 
-#: builtin/pack-objects.c:2651
+#: builtin/pack-objects.c:2649
 msgid "use OFS_DELTA objects"
 msgstr "使用 OFS_DELTA 对象"
 
-#: builtin/pack-objects.c:2653
+#: builtin/pack-objects.c:2651
 msgid "use threads when searching for best delta matches"
 msgstr "使用线程查询最佳 delta 匹配"
 
-#: builtin/pack-objects.c:2655
+#: builtin/pack-objects.c:2653
 msgid "do not create an empty pack output"
 msgstr "不创建空的包输出"
 
-#: builtin/pack-objects.c:2657
+#: builtin/pack-objects.c:2655
 msgid "read revision arguments from standard input"
 msgstr "从标准输入读取版本号参数"
 
-#: builtin/pack-objects.c:2659
+#: builtin/pack-objects.c:2657
 msgid "limit the objects to those that are not yet packed"
 msgstr "限制那些尚未打包的对象"
 
-#: builtin/pack-objects.c:2662
+#: builtin/pack-objects.c:2660
 msgid "include objects reachable from any reference"
 msgstr "包括可以从任何引用访问到的对象"
 
-#: builtin/pack-objects.c:2665
+#: builtin/pack-objects.c:2663
 msgid "include objects referred by reflog entries"
 msgstr "包括被引用日志引用到的对象"
 
-#: builtin/pack-objects.c:2668
+#: builtin/pack-objects.c:2666
 msgid "include objects referred to by the index"
 msgstr "包括被索引引用到的对象"
 
-#: builtin/pack-objects.c:2671
+#: builtin/pack-objects.c:2669
 msgid "output pack to stdout"
 msgstr "输出包到标准输出"
 
-#: builtin/pack-objects.c:2673
+#: builtin/pack-objects.c:2671
 msgid "include tag objects that refer to objects to be packed"
 msgstr "包括引用了打包对象的 tag"
 
-#: builtin/pack-objects.c:2675
+#: builtin/pack-objects.c:2673
 msgid "keep unreachable objects"
 msgstr "维持不可达的对象"
 
-#: builtin/pack-objects.c:2676 parse-options.h:140
+#: builtin/pack-objects.c:2674 parse-options.h:140
 msgid "time"
 msgstr "时间"
 
-#: builtin/pack-objects.c:2677
+#: builtin/pack-objects.c:2675
 msgid "unpack unreachable objects newer than <time>"
 msgstr "将比给定 <时间> 新的无法访问的对象解包"
 
-#: builtin/pack-objects.c:2680
+#: builtin/pack-objects.c:2678
 msgid "create thin packs"
 msgstr "创建精简包"
 
-#: builtin/pack-objects.c:2682
+#: builtin/pack-objects.c:2680
 msgid "create packs suitable for shallow fetches"
 msgstr "创建适合浅克隆版本库获取的包"
 
-#: builtin/pack-objects.c:2684
+#: builtin/pack-objects.c:2682
 msgid "ignore packs that have companion .keep file"
 msgstr "忽略配有 .keep 文件的包"
 
-#: builtin/pack-objects.c:2686
+#: builtin/pack-objects.c:2684
 msgid "pack compression level"
 msgstr "打包压缩级别"
 
-#: builtin/pack-objects.c:2688
+#: builtin/pack-objects.c:2686
 msgid "do not hide commits by grafts"
 msgstr "显示被嫁接隐藏的提交"
 
-#: builtin/pack-objects.c:2690
+#: builtin/pack-objects.c:2688
 msgid "use a bitmap index if available to speed up counting objects"
 msgstr "使用 bitmap 索引（如果有的话）以提高对象计数时的速度"
 
-#: builtin/pack-objects.c:2692
+#: builtin/pack-objects.c:2690
 msgid "write a bitmap index together with the pack index"
 msgstr "在建立包索引的同时创建 bitmap 索引"
 
-#: builtin/pack-objects.c:2783
+#: builtin/pack-objects.c:2781
 msgid "Counting objects"
 msgstr "对象计数中"
 
 #: builtin/pack-refs.c:6
-msgid "git pack-refs [options]"
-msgstr "git pack-refs [选项]"
+msgid "git pack-refs [<options>]"
+msgstr "git pack-refs [<选项>]"
 
 #: builtin/pack-refs.c:14
 msgid "pack everything"
 msgstr "打包一切"
 
 #: builtin/pack-refs.c:15
 msgid "prune loose refs (default)"
 msgstr "清除松散的引用（默认）"
 
 #: builtin/prune-packed.c:7
-msgid "git prune-packed [-n|--dry-run] [-q|--quiet]"
-msgstr "git prune-packed [-n|--dry-run] [-q|--quiet]"
+msgid "git prune-packed [-n | --dry-run] [-q | --quiet]"
+msgstr "git prune-packed [-n | --dry-run] [-q | --quiet]"
 
 #: builtin/prune-packed.c:40
 msgid "Removing duplicate objects"
 msgstr "正在删除重复对象"
 
 #: builtin/prune.c:12
@@ -8164,81 +8199,85 @@
 msgstr "--mirror 不能和引用规则同时使用"
 
 #: builtin/push.c:422
 msgid "--all and --mirror are incompatible"
 msgstr "--all 和 --mirror 不兼容"
 
-#: builtin/push.c:493
+#: builtin/push.c:502
 msgid "repository"
 msgstr "版本库"
 
-#: builtin/push.c:494
+#: builtin/push.c:503
 msgid "push all refs"
 msgstr "推送所有引用"
 
-#: builtin/push.c:495
+#: builtin/push.c:504
 msgid "mirror all refs"
 msgstr "镜像所有引用"
 
-#: builtin/push.c:497
+#: builtin/push.c:506
 msgid "delete refs"
 msgstr "删除引用"
 
-#: builtin/push.c:498
+#: builtin/push.c:507
 msgid "push tags (can't be used with --all or --mirror)"
 msgstr "推送 tags（不能使用 --all or --mirror）"
 
-#: builtin/push.c:501
+#: builtin/push.c:510
 msgid "force updates"
 msgstr "强制更新"
 
-#: builtin/push.c:503
+#: builtin/push.c:512
 msgid "refname>:<expect"
 msgstr "引用名>:<期望值"
 
-#: builtin/push.c:504
+#: builtin/push.c:513
 msgid "require old value of ref to be at this value"
 msgstr "要求引用旧的取值为设定值"
 
-#: builtin/push.c:507
+#: builtin/push.c:516
 msgid "control recursive pushing of submodules"
 msgstr "控制子模组的递归推送"
 
-#: builtin/push.c:509
+#: builtin/push.c:518
 msgid "use thin pack"
 msgstr "使用精简打包"
 
-#: builtin/push.c:510 builtin/push.c:511
+#: builtin/push.c:519 builtin/push.c:520
 msgid "receive pack program"
 msgstr "接收包程序"
 
-#: builtin/push.c:512
+#: builtin/push.c:521
 msgid "set upstream for git pull/status"
 msgstr "设置 git pull/status 的上游"
 
-#: builtin/push.c:515
+#: builtin/push.c:524
 msgid "prune locally removed refs"
 msgstr "清除本地删除的引用"
 
-#: builtin/push.c:517
+#: builtin/push.c:526
 msgid "bypass pre-push hook"
 msgstr "绕过 pre-push 钩子"
 
-#: builtin/push.c:518
+#: builtin/push.c:527
 msgid "push missing but relevant tags"
 msgstr "推送缺失的有关的 tags"
 
-#: builtin/push.c:520
+#: builtin/push.c:529
 msgid "GPG sign the push"
 msgstr "用 GPG 为推送签名"
 
-#: builtin/push.c:529
+#: builtin/push.c:530
+msgid "request atomic transaction on remote side"
+msgstr "需要远端支持原子事务"
+
+#: builtin/push.c:539
 msgid "--delete is incompatible with --all, --mirror and --tags"
 msgstr "--delete 与 --all、--mirror 及 --tags 不兼容"
 
-#: builtin/push.c:531
+#: builtin/push.c:541
 msgid "--delete doesn't make sense without any refs"
 msgstr "--delete 未接任何引用没有意义"
 
 #: builtin/read-tree.c:37
 msgid ""
 "git read-tree [[-m [--trivial] [--aggressive] | --reset | --prefix=<prefix>] "
@@ -8310,45 +8349,45 @@
 msgstr "跳过应用稀疏检出过滤器"
 
 #: builtin/read-tree.c:139
 msgid "debug unpack-trees"
 msgstr "调试 unpack-trees"
 
-#: builtin/reflog.c:499
+#: builtin/reflog.c:429
 #, c-format
 msgid "%s' for '%s' is not a valid timestamp"
 msgstr "'%2$s' 的值 '%1$s' 不是一个有效的时间戳"
 
-#: builtin/reflog.c:615 builtin/reflog.c:620
+#: builtin/reflog.c:546 builtin/reflog.c:551
 #, c-format
 msgid "'%s' is not a valid timestamp"
 msgstr "'%s' 不是一个有效的时间戳"
 
 #: builtin/remote.c:12
 msgid "git remote [-v | --verbose]"
 msgstr "git remote [-v | --verbose]"
 
 #: builtin/remote.c:13
 msgid ""
-"git remote add [-t <branch>] [-m <master>] [-f] [--tags|--no-tags] [--"
+"git remote add [-t <branch>] [-m <master>] [-f] [--tags | --no-tags] [--"
 "mirror=<fetch|push>] <name> <url>"
 msgstr ""
-"git remote add [-t <分支>] [-m <master>] [-f] [--tags|--no-tags] [--"
+"git remote add [-t <分支>] [-m <master>] [-f] [--tags | --no-tags] [--"
 "mirror=<fetch|push>] <名称> <地址>"
 
 #: builtin/remote.c:14 builtin/remote.c:33
 msgid "git remote rename <old> <new>"
 msgstr "git remote rename <旧名称> <新名称>"
 
 #: builtin/remote.c:15 builtin/remote.c:38
 msgid "git remote remove <name>"
 msgstr "git remote remove <名称>"
 
-#: builtin/remote.c:16
-msgid "git remote set-head <name> (-a | --auto | -d | --delete |<branch>)"
-msgstr "git remote set-head <名称> (-a | --auto | -d | --delete |<分支>)"
+#: builtin/remote.c:16 builtin/remote.c:43
+msgid "git remote set-head <name> (-a | --auto | -d | --delete | <branch>)"
+msgstr "git remote set-head <名称> (-a | --auto | -d | --delete | <分支>)"
 
 #: builtin/remote.c:17
 msgid "git remote [-v | --verbose] show [-n] <name>"
 msgstr "git remote [-v | --verbose] show [-n] <名称>"
 
 #: builtin/remote.c:18
@@ -8377,16 +8416,12 @@
 msgstr "git remote set-url --delete <名称> <地址>"
 
 #: builtin/remote.c:28
 msgid "git remote add [<options>] <name> <url>"
 msgstr "git remote add [<选项>] <名称> <地址>"
 
-#: builtin/remote.c:43
-msgid "git remote set-head <name> (-a | --auto | -d | --delete | <branch>)"
-msgstr "git remote set-head <名称> (-a | --auto | -d | --delete | <分支>)"
-
 #: builtin/remote.c:48
 msgid "git remote set-branches <name> <branch>..."
 msgstr "git remote set-branches <名称> <分支>..."
 
 #: builtin/remote.c:49
 msgid "git remote set-branches --add <name> <branch>..."
@@ -8812,14 +8847,14 @@
 
 #: builtin/remote.c:1592
 msgid "be verbose; must be placed before a subcommand"
 msgstr "冗长输出；必须置于子命令之前"
 
 #: builtin/repack.c:17
-msgid "git repack [options]"
-msgstr "git repack [选项]"
+msgid "git repack [<options>]"
+msgstr "git repack [<选项>]"
 
 #: builtin/repack.c:159
 msgid "pack everything in a single pack"
 msgstr "所有内容打包到一个包文件中"
 
 #: builtin/repack.c:161
@@ -8879,13 +8914,13 @@
 msgstr "每个包的最大尺寸"
 
 #: builtin/repack.c:187
 msgid "repack objects in packs marked with .keep"
 msgstr "对标记为 .keep 的包中的对象重新打包"
 
-#: builtin/repack.c:371
+#: builtin/repack.c:375
 #, c-format
 msgid "removing '%s' failed"
 msgstr "删除 '%s' 失败"
 
 #: builtin/replace.c:19
 msgid "git replace [-f] <object> <replacement>"
@@ -8969,14 +9004,14 @@
 
 #: builtin/replace.c:438
 msgid "use this format"
 msgstr "使用此格式"
 
 #: builtin/rerere.c:12
-msgid "git rerere [clear | forget path... | status | remaining | diff | gc]"
-msgstr "git rerere [clear | forget path... | status | remaining | diff | gc]"
+msgid "git rerere [clear | forget <path>... | status | remaining | diff | gc]"
+msgstr "git rerere [clear | forget <路径>... | status | remaining | diff | gc]"
 
 #: builtin/rerere.c:57
 msgid "register clean resolutions in index"
 msgstr "在索引中注册干净的解决方案"
 
 #: builtin/reset.c:26
@@ -9110,14 +9145,14 @@
 
 #: builtin/reset.c:374
 msgid "Could not write new index file."
 msgstr "不能写入新的索引文件。"
 
 #: builtin/rev-parse.c:361
-msgid "git rev-parse --parseopt [options] -- [<args>...]"
-msgstr "git rev-parse --parseopt [选项] -- [<参数>...]"
+msgid "git rev-parse --parseopt [<options>] -- [<args>...]"
+msgstr "git rev-parse --parseopt [<选项>] -- [<参数>...]"
 
 #: builtin/rev-parse.c:366
 msgid "keep the `--` passed as an arg"
 msgstr "保持 `--` 作为一个参数传递"
 
 #: builtin/rev-parse.c:368
@@ -9127,35 +9162,35 @@
 #: builtin/rev-parse.c:371
 msgid "output in stuck long form"
 msgstr "以固定长格式输出"
 
 #: builtin/rev-parse.c:499
 msgid ""
-"git rev-parse --parseopt [options] -- [<args>...]\n"
+"git rev-parse --parseopt [<options>] -- [<args>...]\n"
 "   or: git rev-parse --sq-quote [<arg>...]\n"
-"   or: git rev-parse [options] [<arg>...]\n"
+"   or: git rev-parse [<options>] [<arg>...]\n"
 "\n"
 "Run \"git rev-parse --parseopt -h\" for more information on the first usage."
 msgstr ""
-"git rev-parse --parseopt [选项] -- [<参数>...]\n"
+"git rev-parse --parseopt [<选项>] -- [<参数>...]\n"
 "   或者：git rev-parse --sq-quote [<参数>...]\n"
-"   或者：git rev-parse [选项] [<参数>...]\n"
+"   或者：git rev-parse [<选项>] [<参数>...]\n"
 "\n"
 "初次使用时执行 \"git rev-parse --parseopt -h\" 来获得更多信息。"
 
 #: builtin/revert.c:22
-msgid "git revert [options] <commit-ish>..."
-msgstr "git revert [选项] <提交号>..."
+msgid "git revert [<options>] <commit-ish>..."
+msgstr "git revert [<选项>] <提交号>..."
 
 #: builtin/revert.c:23
 msgid "git revert <subcommand>"
 msgstr "git revert <子命令>"
 
 #: builtin/revert.c:28
-msgid "git cherry-pick [options] <commit-ish>..."
-msgstr "git cherry-pick [选项] <提交号>..."
+msgid "git cherry-pick [<options>] <commit-ish>..."
+msgstr "git cherry-pick [<选项>] <提交号>..."
 
 #: builtin/revert.c:29
 msgid "git cherry-pick <subcommand>"
 msgstr "git cherry-pick <子命令>"
 
 #: builtin/revert.c:71
@@ -9229,14 +9264,14 @@
 
 #: builtin/revert.c:212
 msgid "cherry-pick failed"
 msgstr "拣选失败"
 
 #: builtin/rm.c:17
-msgid "git rm [options] [--] <file>..."
-msgstr "git rm [选项] [--] <文件>..."
+msgid "git rm [<options>] [--] <file>..."
+msgstr "git rm [<选项>] [--] <文件>..."
 
 #: builtin/rm.c:65
 msgid ""
 "the following submodule (or one of its nested submodules)\n"
 "uses a .git directory:"
 msgid_plural ""
@@ -9323,13 +9358,13 @@
 #: builtin/rm.c:375
 #, c-format
 msgid "git rm: unable to remove %s"
 msgstr "git rm：不能删除 %s"
 
 #: builtin/shortlog.c:13
-msgid "git shortlog [<options>] [<revision range>] [[--] [<path>...]]"
+msgid "git shortlog [<options>] [<revision-range>] [[--] [<path>...]]"
 msgstr "git shortlog [<选项>] [<版本范围>] [[--] [<路径>...]]"
 
 #: builtin/shortlog.c:131
 #, c-format
 msgid "Missing author: %s"
 msgstr "缺少作者：%s"
@@ -9353,25 +9388,25 @@
 #: builtin/shortlog.c:236
 msgid "Linewrap output"
 msgstr "折行输出"
 
 #: builtin/show-branch.c:9
 msgid ""
-"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
+"git show-branch [-a | --all] [-r | --remotes] [--topo-order | --date-order]\n"
 "\t\t[--current] [--color[=<when>] | --no-color] [--sparse]\n"
 "\t\t[--more=<n> | --list | --independent | --merge-base]\n"
 "\t\t[--no-name | --sha1-name] [--topics] [(<rev> | <glob>)...]"
 msgstr ""
-"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
+"git show-branch [-a | --all] [-r | --remotes] [--topo-order | --date-order]\n"
 "\t\t[--current] [--color[=<何时>] | --no-color] [--sparse]\n"
 "\t\t[--more=<n> | --list | --independent | --merge-base]\n"
 "\t\t[--no-name | --sha1-name] [--topics] [(<版本> | <通配符>)...]"
 
 #: builtin/show-branch.c:13
-msgid "git show-branch (-g|--reflog)[=<n>[,<base>]] [--list] [<ref>]"
-msgstr "git show-branch (-g|--reflog)[=<n>[,<base>]] [--list] [<引用>]"
+msgid "git show-branch (-g | --reflog)[=<n>[,<base>]] [--list] [<ref>]"
+msgstr "git show-branch (-g | --reflog)[=<n>[,<base>]] [--list] [<引用>]"
 
 #: builtin/show-branch.c:652
 msgid "show remote-tracking and local branches"
 msgstr "显示远程跟踪的和本地的分支"
 
 #: builtin/show-branch.c:654
@@ -9433,17 +9468,17 @@
 #: builtin/show-branch.c:682
 msgid "show <n> most recent ref-log entries starting at base"
 msgstr "显示从 base 开始的 <n> 条最近的引用日志记录"
 
 #: builtin/show-ref.c:10
 msgid ""
-"git show-ref [-q|--quiet] [--verify] [--head] [-d|--dereference] [-s|--"
-"hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [pattern*] "
+"git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | --"
+"hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<pattern>...]"
 msgstr ""
-"git show-ref [-q|--quiet] [--verify] [--head] [-d|--dereference] [-s|--"
-"hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [pattern*] "
+"git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | --"
+"hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<模式>...]"
 
 #: builtin/show-ref.c:11
 msgid "git show-ref --exclude-existing[=pattern] < ref-list"
 msgstr "git show-ref --exclude-existing[=模式] < 引用列表"
 
 #: builtin/show-ref.c:168
@@ -9476,18 +9511,18 @@
 
 #: builtin/show-ref.c:185
 msgid "show refs from stdin that aren't in local repository"
 msgstr "显示从标准输入中读入的不在本地版本库中的引用"
 
 #: builtin/symbolic-ref.c:7
-msgid "git symbolic-ref [options] name [ref]"
-msgstr "git symbolic-ref [选项] 名称 [引用]"
+msgid "git symbolic-ref [<options>] <name> [<ref>]"
+msgstr "git symbolic-ref [<选项>] <名称> [<引用>]"
 
 #: builtin/symbolic-ref.c:8
-msgid "git symbolic-ref -d [-q] name"
-msgstr "git symbolic-ref -d [-q] 名称"
+msgid "git symbolic-ref -d [-q] <name>"
+msgstr "git symbolic-ref -d [-q] <名称>"
 
 #: builtin/symbolic-ref.c:40
 msgid "suppress error message for non-symbolic (detached) refs"
 msgstr "不显示非符号（分离的）引用的错误信息"
 
 #: builtin/symbolic-ref.c:41
@@ -9505,26 +9540,27 @@
 #: builtin/symbolic-ref.c:43 builtin/update-ref.c:358
 msgid "reason of the update"
 msgstr "更新的原因"
 
 #: builtin/tag.c:22
 msgid ""
-"git tag [-a|-s|-u <key-id>] [-f] [-m <msg>|-F <file>] <tagname> [<head>]"
-msgstr "git tag [-a|-s|-u <key-id>] [-f] [-m <说明>|-F <文件>] <标签名> [<头>]"
+"git tag [-a | -s | -u <key-id>] [-f] [-m <msg> | -F <file>] <tagname> "
+"[<head>]"
+msgstr ""
+"git tag [-a | -s | -u <key-id>] [-f] [-m <说明> | -F <文件>] <标签名> [<头>]"
 
 #: builtin/tag.c:23
 msgid "git tag -d <tagname>..."
 msgstr "git tag -d <标签名>..."
 
 #: builtin/tag.c:24
 msgid ""
-"git tag -l [-n[<num>]] [--contains <commit>] [--points-at <object>] \n"
+"git tag -l [-n[<num>]] [--contains <commit>] [--points-at <object>]\n"
 "\t\t[<pattern>...]"
 msgstr ""
-"git tag -l [-n[<数字>]] [--contains <提交>] [--points-at <对象>] \n"
-"\t\t[<模式>...]"
+"git tag -l [-n[<数字>]] [--contains <提交>] [--points-at <对象>] [<模式>...]"
 
 #: builtin/tag.c:26
 msgid "git tag -v <tagname>..."
 msgstr "git tag -v <标签名>..."
 
 #: builtin/tag.c:69
@@ -9660,24 +9696,24 @@
 msgstr "使用另外的私钥签名 tag"
 
 #: builtin/tag.c:607
 msgid "replace the tag if exists"
 msgstr "如果存在，替换现有的 tag"
 
-#: builtin/tag.c:608
+#: builtin/tag.c:609
+msgid "Tag listing options"
+msgstr "Tag 列表选项"
+
+#: builtin/tag.c:610
 msgid "show tag list in columns"
 msgstr "以列的方式显示 tag"
 
-#: builtin/tag.c:610
+#: builtin/tag.c:612
 msgid "sort tags"
 msgstr "排序 tags"
 
-#: builtin/tag.c:614
-msgid "Tag listing options"
-msgstr "Tag 列表选项"
-
 #: builtin/tag.c:617 builtin/tag.c:623
 msgid "print only tags that contain the commit"
 msgstr "只打印包含提交的tags"
 
 #: builtin/tag.c:629
 msgid "print only tags of the object"
@@ -9728,138 +9764,138 @@
 
 #: builtin/unpack-objects.c:489
 msgid "Unpacking objects"
 msgstr "展开对象中"
 
 #: builtin/update-index.c:403
-msgid "git update-index [options] [--] [<file>...]"
-msgstr "git update-index [选项] [--] [<文件>...]"
+msgid "git update-index [<options>] [--] [<file>...]"
+msgstr "git update-index [<选项>] [--] [<文件>...]"
 
-#: builtin/update-index.c:756
+#: builtin/update-index.c:757
 msgid "continue refresh even when index needs update"
 msgstr "当索引需要更新时继续刷新"
 
-#: builtin/update-index.c:759
+#: builtin/update-index.c:760
 msgid "refresh: ignore submodules"
 msgstr "刷新：忽略子模组"
 
-#: builtin/update-index.c:762
+#: builtin/update-index.c:763
 msgid "do not ignore new files"
 msgstr "不忽略新的文件"
 
-#: builtin/update-index.c:764
+#: builtin/update-index.c:765
 msgid "let files replace directories and vice-versa"
 msgstr "让文件替换目录（反之亦然）"
 
-#: builtin/update-index.c:766
+#: builtin/update-index.c:767
 msgid "notice files missing from worktree"
 msgstr "通知文件从工作区丢失"
 
-#: builtin/update-index.c:768
+#: builtin/update-index.c:769
 msgid "refresh even if index contains unmerged entries"
 msgstr "即使索引区包含未合并的条目也执行刷新"
 
-#: builtin/update-index.c:771
+#: builtin/update-index.c:772
 msgid "refresh stat information"
 msgstr "刷新统计信息"
 
-#: builtin/update-index.c:775
+#: builtin/update-index.c:776
 msgid "like --refresh, but ignore assume-unchanged setting"
 msgstr "类似于 --refresh，但是忽略 assume-unchanged 设置"
 
-#: builtin/update-index.c:779
+#: builtin/update-index.c:780
 msgid "<mode>,<object>,<path>"
 msgstr "<存取模式>,<对象>,<路径>"
 
-#: builtin/update-index.c:780
+#: builtin/update-index.c:781
 msgid "add the specified entry to the index"
 msgstr "添加指定的条目到索引区"
 
-#: builtin/update-index.c:784
+#: builtin/update-index.c:785
 msgid "(+/-)x"
 msgstr "(+/-)x"
 
-#: builtin/update-index.c:785
+#: builtin/update-index.c:786
 msgid "override the executable bit of the listed files"
 msgstr "覆盖列表里文件的可执行位"
 
-#: builtin/update-index.c:789
+#: builtin/update-index.c:790
 msgid "mark files as \"not changing\""
 msgstr "把文件标记为 \"没有变更\""
 
-#: builtin/update-index.c:792
+#: builtin/update-index.c:793
 msgid "clear assumed-unchanged bit"
 msgstr "清除 assumed-unchanged 位"
 
-#: builtin/update-index.c:795
+#: builtin/update-index.c:796
 msgid "mark files as \"index-only\""
 msgstr "把文件标记为 \"仅索引\""
 
-#: builtin/update-index.c:798
+#: builtin/update-index.c:799
 msgid "clear skip-worktree bit"
 msgstr "清除 skip-worktree 位"
 
-#: builtin/update-index.c:801
+#: builtin/update-index.c:802
 msgid "add to index only; do not add content to object database"
 msgstr "只添加到索引区；不添加对象到对象库"
 
-#: builtin/update-index.c:803
+#: builtin/update-index.c:804
 msgid "remove named paths even if present in worktree"
 msgstr "即使存在工作区里，也删除路径"
 
-#: builtin/update-index.c:805
+#: builtin/update-index.c:806
 msgid "with --stdin: input lines are terminated by null bytes"
 msgstr "携带 --stdin：输入的行以 null 字符终止"
 
-#: builtin/update-index.c:807
+#: builtin/update-index.c:808
 msgid "read list of paths to be updated from standard input"
 msgstr "从标准输入中读取需要更新的路径列表"
 
-#: builtin/update-index.c:811
+#: builtin/update-index.c:812
 msgid "add entries from standard input to the index"
 msgstr "从标准输入添加条目到索引区"
 
-#: builtin/update-index.c:815
+#: builtin/update-index.c:816
 msgid "repopulate stages #2 and #3 for the listed paths"
 msgstr "为指定文件重新生成第2和第3暂存区"
 
-#: builtin/update-index.c:819
+#: builtin/update-index.c:820
 msgid "only update entries that differ from HEAD"
 msgstr "只更新与 HEAD 不同的条目"
 
-#: builtin/update-index.c:823
+#: builtin/update-index.c:824
 msgid "ignore files missing from worktree"
 msgstr "忽略工作区丢失的文件"
 
-#: builtin/update-index.c:826
+#: builtin/update-index.c:827
 msgid "report actions to standard output"
 msgstr "在标准输出显示操作"
 
-#: builtin/update-index.c:828
+#: builtin/update-index.c:829
 msgid "(for porcelains) forget saved unresolved conflicts"
 msgstr "(for porcelains) 忘记保存的未解决的冲突"
 
-#: builtin/update-index.c:832
+#: builtin/update-index.c:833
 msgid "write index in this format"
 msgstr "以这种格式写入索引区"
 
-#: builtin/update-index.c:834
+#: builtin/update-index.c:835
 msgid "enable or disable split index"
 msgstr "启用或禁用索引拆分"
 
 #: builtin/update-ref.c:9
-msgid "git update-ref [options] -d <refname> [<oldval>]"
-msgstr "git update-ref [选项] -d <引用名> [<旧值>]"
+msgid "git update-ref [<options>] -d <refname> [<old-val>]"
+msgstr "git update-ref [<选项>] -d <引用名> [<旧值>]"
 
 #: builtin/update-ref.c:10
-msgid "git update-ref [options]    <refname> <newval> [<oldval>]"
-msgstr "git update-ref [选项]    <引用名> <新值> [<旧值>]"
+msgid "git update-ref [<options>]    <refname> <new-val> [<old-val>]"
+msgstr "git update-ref [<选项>]    <引用名> <新值> [<旧值>]"
 
 #: builtin/update-ref.c:11
-msgid "git update-ref [options] --stdin [-z]"
-msgstr "git update-ref [选项] --stdin [-z]"
+msgid "git update-ref [<options>] --stdin [-z]"
+msgstr "git update-ref [<选项>] --stdin [-z]"
 
 #: builtin/update-ref.c:359
 msgid "delete the reference"
 msgstr "删除引用"
 
 #: builtin/update-ref.c:361
@@ -9880,34 +9916,34 @@
 
 #: builtin/update-server-info.c:14
 msgid "update the info files from scratch"
 msgstr "从头开始更新文件信息"
 
 #: builtin/verify-commit.c:17
-msgid "git verify-commit [-v|--verbose] <commit>..."
-msgstr "git verify-commit [-v|--verbose] <提交>..."
+msgid "git verify-commit [-v | --verbose] <commit>..."
+msgstr "git verify-commit [-v | --verbose] <提交>..."
 
 #: builtin/verify-commit.c:75
 msgid "print commit contents"
 msgstr "打印提交内容"
 
 #: builtin/verify-pack.c:54
-msgid "git verify-pack [-v|--verbose] [-s|--stat-only] <pack>..."
-msgstr "git verify-pack [-v|--verbose] [-s|--stat-only] <包>..."
+msgid "git verify-pack [-v | --verbose] [-s | --stat-only] <pack>..."
+msgstr "git verify-pack [-v | --verbose] [-s | --stat-only] <包>..."
 
 #: builtin/verify-pack.c:64
 msgid "verbose"
 msgstr "冗长输出"
 
 #: builtin/verify-pack.c:66
 msgid "show statistics only"
 msgstr "只显示统计"
 
 #: builtin/verify-tag.c:17
-msgid "git verify-tag [-v|--verbose] <tag>..."
-msgstr "git verify-tag [-v|--verbose] <标签>..."
+msgid "git verify-tag [-v | --verbose] <tag>..."
+msgstr "git verify-tag [-v | --verbose] <标签>..."
 
 #: builtin/verify-tag.c:73
 msgid "print tag contents"
 msgstr "打印 tag 内容"
 
 #: builtin/write-tree.c:13
@@ -10245,13 +10281,13 @@
 msgid "Bad HEAD - I need a HEAD"
 msgstr "坏的 HEAD - 我需要一个 HEAD"
 
 #: git-bisect.sh:130
 #, sh-format
 msgid ""
-"Checking out '$start_head' failed. Try 'git bisect reset <validbranch>'."
+"Checking out '$start_head' failed. Try 'git bisect reset <valid-branch>'."
 msgstr "检出 '$start_head' 失败。尝试 'git bisect reset <有效分支>'。"
 
 #: git-bisect.sh:140
 msgid "won't bisect on cg-seek'ed tree"
 msgstr "不会在做了 cg-seek 的树上做二分查找"
 
@@ -10978,388 +11014,6 @@
 msgstr "无法递归进子模组路径 '$sm_path'"
 
 #: git-submodule.sh:1331
 #, sh-format
 msgid "Synchronizing submodule url for '$displaypath'"
 msgstr "为 '$displaypath' 同步子模组 url"
-
-#~ msgid "no files added"
-#~ msgstr "没有文件被添加"
-
-#~ msgid "force creation (when already exists)"
-#~ msgstr "强制创建（当已经存在）"
-
-#~ msgid "Malformed ident string: '%s'"
-#~ msgstr "非法的身份字符串：'%s'"
-
-#~ msgid "slot"
-#~ msgstr "slot"
-
-#~ msgid "Failed to lock ref for update"
-#~ msgstr "无法为更新锁定引用"
-
-#~ msgid "Failed to write ref"
-#~ msgstr "不能写引用"
-
-#~ msgid "Failed to lock HEAD during fast_forward_to"
-#~ msgstr "在快进时无法为 HEAD 加锁"
-
-#~ msgid "invalid commit: %s"
-#~ msgstr "无效的提交：%s"
-
-#~ msgid "cannot lock HEAD ref"
-#~ msgstr "无法锁定 HEAD 引用"
-
-#~ msgid "cannot update HEAD ref"
-#~ msgstr "无法更新 HEAD 引用"
-
-#~ msgid "Invalid %s: '%s'"
-#~ msgstr "无效的 %s：'%s'"
-
-#~ msgid "cannot tell cwd"
-#~ msgstr "无法获知当前路径"
-
-#~ msgid "%s: cannot lock the ref"
-#~ msgstr "%s：不能锁定引用"
-
-#~ msgid "%s: cannot update the ref"
-#~ msgstr "%s：不能更新引用"
-
-#~ msgid "commit has empty message"
-#~ msgstr "提交说明为空"
-
-#~ msgid "Failed to chdir: %s"
-#~ msgstr "无法切换目录：%s"
-
-#~ msgid "key id"
-#~ msgstr "key id"
-
-#~ msgid "Tracking not set up: name too long: %s"
-#~ msgstr "跟踪未设置：名字太长：%s"
-
-#~ msgid "bug"
-#~ msgstr "bug"
-
-#  译者：注意保持句尾空格
-#~ msgid "ahead "
-#~ msgstr "领先 "
-
-#  译者：注意保持句尾空格
-#~ msgid ", behind "
-#~ msgstr "，落后 "
-
-#~ msgid "could not find .gitmodules in index"
-#~ msgstr "无法在索引中找到 .gitmodules"
-
-#~ msgid "reading updated .gitmodules failed"
-#~ msgstr "读取更新后的 .gitmodules 失败"
-
-#~ msgid "unable to stat updated .gitmodules"
-#~ msgstr "不能枚举更新后的 .gitmodules"
-
-#~ msgid "unable to remove .gitmodules from index"
-#~ msgstr "不能从索引中移除 .gitmodules"
-
-#~ msgid "adding updated .gitmodules failed"
-#~ msgstr "添加更新后的 .gitmodules 失败"
-
-#  译者：字符串首行行首要添加“warning: ”字串，故此首行要较其余行短
-#~ msgid ""
-#~ "The behavior of 'git add %s (or %s)' with no path argument from a\n"
-#~ "subdirectory of the tree will change in Git 2.0 and should not be used "
-#~ "anymore.\n"
-#~ "To add content for the whole tree, run:\n"
-#~ "\n"
-#~ "  git add %s :/\n"
-#~ "  (or git add %s :/)\n"
-#~ "\n"
-#~ "To restrict the command to the current directory, run:\n"
-#~ "\n"
-#~ "  git add %s .\n"
-#~ "  (or git add %s .)\n"
-#~ "\n"
-#~ "With the current Git version, the command is restricted to the current "
-#~ "directory.\n"
-#~ msgstr ""
-#~ "在 Git 2.0 版本，位于一个子目录下不带任何路径参数地执行命令\n"
-#~ "'git add %s (或 %s)' 的行为将被改变，不要再继续使用了。\n"
-#~ "如果要添加整个目录树的内容，执行：\n"
-#~ "\n"
-#~ "  git add %s :/\n"
-#~ "  (或 git add %s :/)\n"
-#~ "\n"
-#~ "如果要限制该命令只作用于当前目录，执行：\n"
-#~ "\n"
-#~ "  git add %s .\n"
-#~ "  (或 git add %s .)\n"
-#~ "\n"
-#~ "对于当前版本的 Git，这条命令只作用于当前目录。\n"
-
-#~ msgid ""
-#~ "You ran 'git add' with neither '-A (--all)' or '--ignore-removal',\n"
-#~ "whose behaviour will change in Git 2.0 with respect to paths you "
-#~ "removed.\n"
-#~ "Paths like '%s' that are\n"
-#~ "removed from your working tree are ignored with this version of Git.\n"
-#~ "\n"
-#~ "* 'git add --ignore-removal <pathspec>', which is the current default,\n"
-#~ "  ignores paths you removed from your working tree.\n"
-#~ "\n"
-#~ "* 'git add --all <pathspec>' will let you also record the removals.\n"
-#~ "\n"
-#~ "Run 'git status' to check the paths you removed from your working tree.\n"
-#~ msgstr ""
-#~ "您在运行 'git add' 时没有指定 '-A (--all)' 或 '--ignore-removal'，\n"
-#~ "针对其中本地移除路径的行为将在 Git 2.0 版本库发生变化。\n"
-#~ "像本地工作区移除的路径 '%s'\n"
-#~ "在此版本的 Git 中被忽略。\n"
-#~ "\n"
-#~ "* 'git add --ignore-removal <路径规则>'，是当前版本的默认操作，\n"
-#~ "  忽略您本地工作区中移除的文件。\n"
-#~ "\n"
-#~ "* 'git add --all <路径规则>' 将让您同时对删除操作进行记录。\n"
-#~ "\n"
-#~ "运行 'git status' 来检查您本地工作区中移除的路径。\n"
-
-#~ msgid ""
-#~ "Auto packing the repository for optimum performance. You may also\n"
-#~ "run \"git gc\" manually. See \"git help gc\" for more information.\n"
-#~ msgstr ""
-#~ "自动打包版本库以求最佳性能。您还可以手动运行 \"git gc\"。\n"
-#~ "参见 \"git help gc\" 以获取更多信息。\n"
-
-#~ msgid ""
-#~ "Updates were rejected because a pushed branch tip is behind its remote\n"
-#~ "counterpart. If you did not intend to push that branch, you may want to\n"
-#~ "specify branches to push or set the 'push.default' configuration "
-#~ "variable\n"
-#~ "to 'simple', 'current' or 'upstream' to push only the current branch."
-#~ msgstr ""
-#~ "更新被拒绝，因为推送的一个分支的最新提交落后于其对应的远程分支。\n"
-#~ "如果您并非有意推送该分支，您可以在推送时指定要推送的分支，或者将\n"
-#~ "配置变量 'push.default' 设置为 'simple'、'current' 或 'upstream'\n"
-#~ "以便只推送当前分支。"
-
-#  译者：为保证在输出中对齐，注意调整句中空格！
-#~ msgid "copied:     %s -> %s"
-#~ msgstr "拷贝：      %s -> %s"
-
-#  译者：为保证在输出中对齐，注意调整句中空格！
-#~ msgid "deleted:    %s"
-#~ msgstr "删除：      %s"
-
-#  译者：为保证在输出中对齐，注意调整句中空格！
-#~ msgid "modified:   %s"
-#~ msgstr "修改：      %s"
-
-#  译者：为保证在输出中对齐，注意调整句中空格！
-#~ msgid "renamed:    %s -> %s"
-#~ msgstr "重命名：    %s -> %s"
-
-#  译者：为保证在输出中对齐，注意调整句中空格！
-#~ msgid "unmerged:   %s"
-#~ msgstr "未合并：    %s"
-
-#  译者：字符串首行行首要添加“warning: ”字串，故此首行要较其余行短
-#~ msgid ""
-#~ "push.default is unset; its implicit value is changing in\n"
-#~ "Git 2.0 from 'matching' to 'simple'. To squelch this message\n"
-#~ "and maintain the current behavior after the default changes, use:\n"
-#~ "\n"
-#~ "  git config --global push.default matching\n"
-#~ "\n"
-#~ "To squelch this message and adopt the new behavior now, use:\n"
-#~ "\n"
-#~ "  git config --global push.default simple\n"
-#~ "\n"
-#~ "See 'git help config' and search for 'push.default' for further "
-#~ "information.\n"
-#~ "(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode\n"
-#~ "'current' instead of 'simple' if you sometimes use older versions of Git)"
-#~ msgstr ""
-#~ "push.default 未设置，它的默认值将在 Git 2.0 由 'matching'\n"
-#~ "改变为 'simple'。若要不再显示本信息并保持传统习惯，进行如下设置：\n"
-#~ "\n"
-#~ "  git config --global push.default matching\n"
-#~ "\n"
-#~ "若要不再显示本信息并从现在开始采用新的使用习惯，设置：\n"
-#~ "\n"
-#~ "  git config --global push.default simple\n"
-#~ "\n"
-#~ "参见 'git help config' 并查找 'push.default' 以获取更多信息。\n"
-#~ "（'simple' 模式由 Git 1.7.11 版本引入。如果您有时要使用老版本的 Git，\n"
-#~ "为保持兼容，请用 'current' 代替 'simple'）"
-
-#~ msgid "input paths are terminated by a null character"
-#~ msgstr "输入路径以null字符终止"
-
-#~ msgid ""
-#~ "The following untracked files would NOT be saved but need to be removed "
-#~ "by stash save:"
-#~ msgstr "如下未跟踪文件将不会被保存但是将会因为进度保存而需要被删除："
-
-#~ msgid ""
-#~ "Aborting. Consider using either the --force or --include-untracked option."
-#~ msgstr "终止。考虑使用 --force 或者 --include-untracked 选项。"
-
-#~ msgid ""
-#~ "the following submodule (or one of its nested submodule)\n"
-#~ "uses a .git directory:"
-#~ msgid_plural ""
-#~ "the following submodules (or one of its nested submodule)\n"
-#~ "use a .git directory:"
-#~ msgstr[0] "如下子模组（或一个其嵌套的子模组）使用了一个 .git 目录："
-#~ msgstr[1] "如下子模组（或一个其嵌套的子模组）使用了一个 .git 目录："
-
-#  译者：注意保持前导空格
-#~ msgid "  (fix conflicts and then run \"git am --resolved\")"
-#~ msgstr "  （解决冲突，然后运行 \"git am --resolved\"）"
-
-#  译者：注意保持前导空格
-#~ msgid "  (all conflicts fixed: run \"git commit\")"
-#~ msgstr "  （解决所有冲突后，执行 \"git commit\"）"
-
-#~ msgid "more than %d trees given: '%s'"
-#~ msgstr "提供了超过 %d 个树对象：'%s'"
-
-#~ msgid "You cannot combine --no-ff with --ff-only."
-#~ msgstr "您不能将 --no-ff 与 --ff-only 同时使用。"
-
-#~ msgid ""
-#~ "submodule '%s' (or one of its nested submodules) uses a .git directory\n"
-#~ "(use 'rm -rf' if you really want to remove it including all of its "
-#~ "history)"
-#~ msgstr ""
-#~ "子模组 '%s'（或者它的一个嵌套子模组）使用一个 .git 目录\n"
-#~ "（使用 'rm -rf' 命令如果您真的想删除它及其全部历史）"
-
-#~ msgid ""
-#~ "'%s' has changes staged in the index\n"
-#~ "(use --cached to keep the file, or -f to force removal)"
-#~ msgstr ""
-#~ "'%s' 有变更已暂存至索引中\n"
-#~ "（使用 --cached 保存文件，或用 -f 强制删除）"
-
-#~ msgid "show commits where no parent comes before its children"
-#~ msgstr "显示提交时以时间为序且父提交不能领先子提交"
-
-#~ msgid "show the HEAD reference"
-#~ msgstr "显示 HEAD 引用"
-
-#~ msgid "Submodule '$name' ($url) registered for path '$sm_path'"
-#~ msgstr "子模组 '$name' ($url) 已为路径 '$sm_path' 注册"
-
-#~ msgid "Change flags"
-#~ msgstr "修改参数"
-
-#~ msgid ""
-#~ "NOTE: no more files to clean; press \"t\" to toggle flags of git-clean."
-#~ msgstr "注意：没有要清理的文件；尝试按 \"t\" 切换 git-clean 的选项。"
-
-#~ msgid "Failed to recurse into submodule path '$prefix$sm_path'"
-#~ msgstr "无法递归进子模组路径 '$prefix$sm_path'"
-
-#~ msgid "git shortlog [-n] [-s] [-e] [-w] [rev-opts] [--] [<commit-id>... ]"
-#~ msgstr "git shortlog [-n] [-s] [-e] [-w] [版本选项] [--] [<提交号>... ]"
-
-#~ msgid "See 'git help <command>' for more information on a specific command."
-#~ msgstr "参见 'git help <命令>' 以获得该特定命令的详细信息。"
-
-#~ msgid "BUG: impossible combination of %d and %p"
-#~ msgstr "BUG: 无法组合 %d 和 %p"
-
-#  译者：以下三条实际为一个段落
-#~ msgid "It took %.2f seconds to enumerate untracked files.  'status -uno'"
-#~ msgstr "耗费了 %.2f 秒以枚举未跟踪的文件。'status -uno'"
-
-#  译者：为对齐，下面两句内容有调整
-#~ msgid "may speed it up, but you have to be careful not to forget to add"
-#~ msgstr "也许能提高速度，但您需要小心不要忘了添加新文件"
-
-#~ msgid "new files yourself (see 'git help status')."
-#~ msgstr "（参见 'git help status'）。"
-
-#~ msgid "use any ref in .git/refs"
-#~ msgstr "使用 .git/refs 里的任意引用"
-
-#~ msgid "use any tag in .git/refs/tags"
-#~ msgstr "使用 .git/refs/tags 里的任意 tag"
-
-#~ msgid "bad object %s"
-#~ msgstr "坏对象 %s"
-
-#~ msgid "bogus committer info %s"
-#~ msgstr "虚假的提交者信息 %s"
-
-#~ msgid "can't fdopen 'show' output fd"
-#~ msgstr "不能打开 'show' 输出文件句柄"
-
-#~ msgid "failed to close pipe to 'show' for object '%s'"
-#~ msgstr "无法为对象 '%s' 的 'show' 关闭管道"
-
-#~ msgid " 0 files changed"
-#~ msgstr " 0 个文件被修改"
-
-#~ msgid " %d file changed"
-#~ msgid_plural " %d files changed"
-#~ msgstr[0] " %d 个文件被修改"
-#~ msgstr[1] " %d 个文件被修改"
-
-#~ msgid ", %d insertion(+)"
-#~ msgid_plural ", %d insertions(+)"
-#~ msgstr[0] "，插入 %d 行(+)"
-#~ msgstr[1] "，插入 %d 行(+)"
-
-#~ msgid ", %d deletion(-)"
-#~ msgid_plural ", %d deletions(-)"
-#~ msgstr[0] "，删除 %d 行(-)"
-#~ msgstr[1] "，删除 %d 行(-)"
-
-#~ msgid "You do not have a valid HEAD"
-#~ msgstr "您没有一个有效的 HEAD"
-
-#~ msgid "oops"
-#~ msgstr "哎哟"
-
-#~ msgid "Would not remove %s\n"
-#~ msgstr "不会删除 %s\n"
-
-#~ msgid "Not removing %s\n"
-#~ msgstr "未删除 %s\n"
-
-#~ msgid "git remote set-head <name> (-a | -d | <branch>])"
-#~ msgstr "git remote set-head <名称> (-a | -d | <分支>])"
-
-#~ msgid "Could not read index"
-#~ msgstr "不能读取索引"
-
-#  译者：中文字符串拼接，可删除前导空格
-#~ msgid " (use \"git add\" to track)"
-#~ msgstr "（使用 \"git add\" 建立跟踪）"
-
-#~ msgid "--detach cannot be used with -b/-B/--orphan"
-#~ msgstr "--detach 不能和 -b/-B/--orphan 同时使用"
-
-#~ msgid "--detach cannot be used with -t"
-#~ msgstr "--detach 不能和 -t 同时使用"
-
-#~ msgid "--orphan and -b|-B are mutually exclusive"
-#~ msgstr "--orphan 和 -b|-B 互斥"
-
-#~ msgid "--orphan cannot be used with -t"
-#~ msgstr "--orphan 不能和 -t 同时使用"
-
-#~ msgid "git checkout: -f and -m are incompatible"
-#~ msgstr "git checkout：-f 和 -m 不兼容"
-
-#~ msgid ""
-#~ "git checkout: updating paths is incompatible with switching branches."
-#~ msgstr "git checkout：更新路径和切换分支不兼容。"
-
-#~ msgid "diff setup failed"
-#~ msgstr "diff 设置失败"
-
-#~ msgid "merge-recursive: disk full?"
-#~ msgstr "merge-recursive：磁盘已满？"
-
-#~ msgid "diff_setup_done failed"
-#~ msgstr "diff_setup_done 失败"
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/preload-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/preload-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/preload-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/preload-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pretty.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pretty.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/pretty.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/pretty.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/prio-queue.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/prio-queue.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/prio-queue.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/prio-queue.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/progress.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/progress.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/progress.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/progress.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/prompt.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/prompt.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/prompt.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/prompt.c	2015-05-01 03:12:02.000000000 +0800
@@ -70,11 +70,6 @@
 			/* prompts already contain ": " at the end */
 			die("could not read %s%s", prompt, err);
 		}
 	}
 	return r;
 }
-
-char *git_getpass(const char *prompt)
-{
-	return git_prompt(prompt, PROMPT_ASKPASS);
-}
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/prompt.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/prompt.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/prompt.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/prompt.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/prompt.h	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/prompt.h	2015-05-01 03:12:02.000000000 +0800
@@ -2,9 +2,8 @@
 #define PROMPT_H
 
 #define PROMPT_ASKPASS (1<<0)
 #define PROMPT_ECHO    (1<<1)
 
 char *git_prompt(const char *prompt, int flags);
-char *git_getpass(const char *prompt);
 
 #endif /* PROMPT_H */
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/prompt.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/prompt.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/quote.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/quote.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/quote.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/quote.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/reachable.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/reachable.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/reachable.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/reachable.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/read-cache.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/read-cache.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/read-cache.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/read-cache.c	2015-05-01 03:12:02.000000000 +0800
@@ -678,21 +678,24 @@
 		}
 	}
 
 	alias = index_file_exists(istate, ce->name, ce_namelen(ce), ignore_case);
 	if (alias && !ce_stage(alias) && !ie_match_stat(istate, alias, st, ce_option)) {
 		/* Nothing changed, really */
-		free(ce);
 		if (!S_ISGITLINK(alias->ce_mode))
 			ce_mark_uptodate(alias);
 		alias->ce_flags |= CE_ADDED;
+
+		free(ce);
 		return 0;
 	}
 	if (!intent_only) {
-		if (index_path(ce->sha1, path, st, HASH_WRITE_OBJECT))
+		if (index_path(ce->sha1, path, st, HASH_WRITE_OBJECT)) {
+			free(ce);
 			return error("unable to index file %s", path);
+		}
 	} else
 		set_object_name_for_intent_to_add_entry(ce);
 
 	if (ignore_case && alias && different_name(ce, alias))
 		ce = create_alias_ce(istate, ce, alias);
 	ce->ce_flags |= CE_ADDED;
@@ -701,15 +704,17 @@
 	was_same = (alias &&
 		    !ce_stage(alias) &&
 		    !hashcmp(alias->sha1, ce->sha1) &&
 		    ce->ce_mode == alias->ce_mode);
 
 	if (pretend)
-		;
-	else if (add_index_entry(istate, ce, add_option))
-		return error("unable to add %s to index",path);
+		free(ce);
+	else if (add_index_entry(istate, ce, add_option)) {
+		free(ce);
+		return error("unable to add %s to index", path);
+	}
 	if (verbose && !was_same)
 		printf("add '%s'\n", path);
 	return 0;
 }
 
 int add_file_to_index(struct index_state *istate, const char *path, int flags)
@@ -740,18 +745,15 @@
 	memcpy(ce->name, path, len);
 	ce->ce_flags = create_ce_flags(stage);
 	ce->ce_namelen = len;
 	ce->ce_mode = create_ce_mode(mode);
 
 	ret = refresh_cache_entry(ce, refresh_options);
-	if (!ret) {
+	if (ret != ce)
 		free(ce);
-		return NULL;
-	} else {
-		return ret;
-	}
+	return ret;
 }
 
 int ce_same_name(const struct cache_entry *a, const struct cache_entry *b)
 {
 	int len = ce_namelen(a);
 	return ce_namelen(b) == len && !memcmp(a->name, b->name, len);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/read-cache.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/read-cache.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/read-cache.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/read-cache.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/reflog-walk.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/reflog-walk.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/reflog-walk.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/reflog-walk.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/refs.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/refs.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/refs.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/refs.c	2015-05-01 03:12:02.000000000 +0800
@@ -3,12 +3,20 @@
 #include "refs.h"
 #include "object.h"
 #include "tag.h"
 #include "dir.h"
 #include "string-list.h"
 
+struct ref_lock {
+	char *ref_name;
+	char *orig_ref_name;
+	struct lock_file *lk;
+	unsigned char old_sha1[20];
+	int lock_fd;
+};
+
 /*
  * How to handle various characters in refnames:
  * 0: An acceptable character for refs
  * 1: End-of-component
  * 2: ., look for a preceding . to reject .. in refs
  * 3: {, look for a preceding @ to reject @{ in refs
@@ -23,16 +31,35 @@
 	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 4, 0,
 	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 4, 4
 };
 
 /*
- * Used as a flag to ref_transaction_delete when a loose ref is being
+ * Flag passed to lock_ref_sha1_basic() telling it to tolerate broken
+ * refs (i.e., because the reference is about to be deleted anyway).
+ */
+#define REF_DELETING	0x02
+
+/*
+ * Used as a flag in ref_update::flags when a loose ref is being
  * pruned.
  */
-#define REF_ISPRUNING	0x0100
+#define REF_ISPRUNING	0x04
+
+/*
+ * Used as a flag in ref_update::flags when the reference should be
+ * updated to new_sha1.
+ */
+#define REF_HAVE_NEW	0x08
+
+/*
+ * Used as a flag in ref_update::flags when old_sha1 should be
+ * checked.
+ */
+#define REF_HAVE_OLD	0x10
+
 /*
  * Try to read one refname component from the front of refname.
  * Return the length of the component found, or -1 if the component is
  * not legal.  It is legal if it is something reasonable to have under
  * ".git/refs/"; We do not like it if:
  *
@@ -2095,12 +2122,22 @@
 		}
 	}
 
 	return 0;
 }
 
+static void unlock_ref(struct ref_lock *lock)
+{
+	/* Do not free lock->lk -- atexit() still looks at them */
+	if (lock->lk)
+		rollback_lock_file(lock->lk);
+	free(lock->ref_name);
+	free(lock->orig_ref_name);
+	free(lock);
+}
+
 /* This function should make sure errno is meaningful on error */
 static struct ref_lock *verify_lock(struct ref_lock *lock,
 	const unsigned char *old_sha1, int mustexist)
 {
 	if (read_ref_full(lock->ref_name,
 			  mustexist ? RESOLVE_REF_READING : 0,
@@ -2232,22 +2269,21 @@
  * Locks a ref returning the lock on success and NULL on failure.
  * On failure errno is set to something meaningful.
  */
 static struct ref_lock *lock_ref_sha1_basic(const char *refname,
 					    const unsigned char *old_sha1,
 					    const struct string_list *skip,
-					    int flags, int *type_p)
+					    unsigned int flags, int *type_p)
 {
 	char *ref_file;
 	const char *orig_refname = refname;
 	struct ref_lock *lock;
 	int last_errno = 0;
 	int type, lflags;
 	int mustexist = (old_sha1 && !is_null_sha1(old_sha1));
 	int resolve_flags = 0;
-	int missing = 0;
 	int attempts_remaining = 3;
 
 	lock = xcalloc(1, sizeof(struct ref_lock));
 	lock->lock_fd = -1;
 
 	if (mustexist)
@@ -2280,19 +2316,19 @@
 	if (!refname) {
 		last_errno = errno;
 		error("unable to resolve reference %s: %s",
 			orig_refname, strerror(errno));
 		goto error_return;
 	}
-	missing = is_null_sha1(lock->old_sha1);
-	/* When the ref did not exist and we are creating it,
-	 * make sure there is no existing ref that is packed
-	 * whose name begins with our refname, nor a ref whose
-	 * name is a proper prefix of our refname.
+	/*
+	 * If the ref did not exist and we are creating it, make sure
+	 * there is no existing packed ref whose name begins with our
+	 * refname, nor a packed ref whose name is a proper prefix of
+	 * our refname.
 	 */
-	if (missing &&
+	if (is_null_sha1(lock->old_sha1) &&
 	     !is_refname_available(refname, skip, get_packed_refs(&ref_cache))) {
 		last_errno = ENOTDIR;
 		goto error_return;
 	}
 
 	lock->lk = xcalloc(1, sizeof(struct lock_file));
@@ -2302,16 +2338,12 @@
 		refname = orig_refname;
 		lflags |= LOCK_NO_DEREF;
 	}
 	lock->ref_name = xstrdup(refname);
 	lock->orig_ref_name = xstrdup(orig_refname);
 	ref_file = git_path("%s", refname);
-	if (missing)
-		lock->force_write = 1;
-	if ((flags & REF_NODEREF) && (type & REF_ISSYMREF))
-		lock->force_write = 1;
 
  retry:
 	switch (safe_create_leading_directories(ref_file)) {
 	case SCLD_OK:
 		break; /* success */
 	case SCLD_VANISHED:
@@ -2347,19 +2379,12 @@
  error_return:
 	unlock_ref(lock);
 	errno = last_errno;
 	return NULL;
 }
 
-struct ref_lock *lock_any_ref_for_update(const char *refname,
-					 const unsigned char *old_sha1,
-					 int flags, int *type_p)
-{
-	return lock_ref_sha1_basic(refname, old_sha1, NULL, flags, type_p);
-}
-
 /*
  * Write an entry to the packed-refs file for the specified refname.
  * If peeled is non-NULL, write it as the entry's peeled value.
  */
 static void write_packed_entry(FILE *fh, char *refname, unsigned char *sha1,
 			       unsigned char *peeled)
@@ -2553,13 +2578,13 @@
 	if (check_refname_format(r->name, 0))
 		return;
 
 	transaction = ref_transaction_begin(&err);
 	if (!transaction ||
 	    ref_transaction_delete(transaction, r->name, r->sha1,
-				   REF_ISPRUNING, 1, NULL, &err) ||
+				   REF_ISPRUNING, NULL, &err) ||
 	    ref_transaction_commit(transaction, &err)) {
 		ref_transaction_free(transaction);
 		error("%s", err.buf);
 		strbuf_release(&err);
 		return;
 	}
@@ -2658,21 +2683,22 @@
 		if (res)
 			return 1;
 	}
 	return 0;
 }
 
-int delete_ref(const char *refname, const unsigned char *sha1, int delopt)
+int delete_ref(const char *refname, const unsigned char *sha1, unsigned int flags)
 {
 	struct ref_transaction *transaction;
 	struct strbuf err = STRBUF_INIT;
 
 	transaction = ref_transaction_begin(&err);
 	if (!transaction ||
-	    ref_transaction_delete(transaction, refname, sha1, delopt,
-				   sha1 && !is_null_sha1(sha1), NULL, &err) ||
+	    ref_transaction_delete(transaction, refname,
+				   (sha1 && !is_null_sha1(sha1)) ? sha1 : NULL,
+				   flags, NULL, &err) ||
 	    ref_transaction_commit(transaction, &err)) {
 		error("%s", err.buf);
 		ref_transaction_free(transaction);
 		strbuf_release(&err);
 		return 1;
 	}
@@ -2802,13 +2828,12 @@
 
 	lock = lock_ref_sha1_basic(newrefname, NULL, NULL, 0, NULL);
 	if (!lock) {
 		error("unable to lock %s for update", newrefname);
 		goto rollback;
 	}
-	lock->force_write = 1;
 	hashcpy(lock->old_sha1, orig_sha1);
 	if (write_ref_sha1(lock, orig_sha1, logmsg)) {
 		error("unable to write current sha1 into %s", newrefname);
 		goto rollback;
 	}
 
@@ -2818,13 +2843,12 @@
 	lock = lock_ref_sha1_basic(oldrefname, NULL, NULL, 0, NULL);
 	if (!lock) {
 		error("unable to lock %s for rollback", oldrefname);
 		goto rollbacklog;
 	}
 
-	lock->force_write = 1;
 	flag = log_all_ref_updates;
 	log_all_ref_updates = 0;
 	if (write_ref_sha1(lock, orig_sha1, NULL))
 		error("unable to write current sha1 into %s", oldrefname);
 	log_all_ref_updates = flag;
 
@@ -2837,38 +2861,28 @@
 		error("unable to restore logfile %s from "TMP_RENAMED_LOG": %s",
 			oldrefname, strerror(errno));
 
 	return 1;
 }
 
-int close_ref(struct ref_lock *lock)
+static int close_ref(struct ref_lock *lock)
 {
 	if (close_lock_file(lock->lk))
 		return -1;
 	lock->lock_fd = -1;
 	return 0;
 }
 
-int commit_ref(struct ref_lock *lock)
+static int commit_ref(struct ref_lock *lock)
 {
 	if (commit_lock_file(lock->lk))
 		return -1;
 	lock->lock_fd = -1;
 	return 0;
 }
 
-void unlock_ref(struct ref_lock *lock)
-{
-	/* Do not free lock->lk -- atexit() still looks at them */
-	if (lock->lk)
-		rollback_lock_file(lock->lk);
-	free(lock->ref_name);
-	free(lock->orig_ref_name);
-	free(lock);
-}
-
 /*
  * copy the reflog message msg to buf, which has been allocated sufficiently
  * large, while cleaning up the whitespaces.  Especially, convert LF to space,
  * because reflog file is one line per entry.
  */
 static int copy_msg(char *buf, const char *msg)
@@ -2939,45 +2953,57 @@
 
 	adjust_shared_perm(logfile);
 	close(logfd);
 	return 0;
 }
 
+static int log_ref_write_fd(int fd, const unsigned char *old_sha1,
+			    const unsigned char *new_sha1,
+			    const char *committer, const char *msg)
+{
+	int msglen, written;
+	unsigned maxlen, len;
+	char *logrec;
+
+	msglen = msg ? strlen(msg) : 0;
+	maxlen = strlen(committer) + msglen + 100;
+	logrec = xmalloc(maxlen);
+	len = sprintf(logrec, "%s %s %s\n",
+		      sha1_to_hex(old_sha1),
+		      sha1_to_hex(new_sha1),
+		      committer);
+	if (msglen)
+		len += copy_msg(logrec + len - 1, msg) - 1;
+
+	written = len <= maxlen ? write_in_full(fd, logrec, len) : -1;
+	free(logrec);
+	if (written != len)
+		return -1;
+
+	return 0;
+}
+
 static int log_ref_write(const char *refname, const unsigned char *old_sha1,
 			 const unsigned char *new_sha1, const char *msg)
 {
-	int logfd, result, written, oflags = O_APPEND | O_WRONLY;
-	unsigned maxlen, len;
-	int msglen;
+	int logfd, result, oflags = O_APPEND | O_WRONLY;
 	char log_file[PATH_MAX];
-	char *logrec;
-	const char *committer;
 
 	if (log_all_ref_updates < 0)
 		log_all_ref_updates = !is_bare_repository();
 
 	result = log_ref_setup(refname, log_file, sizeof(log_file));
 	if (result)
 		return result;
 
 	logfd = open(log_file, oflags);
 	if (logfd < 0)
 		return 0;
-	msglen = msg ? strlen(msg) : 0;
-	committer = git_committer_info(0);
-	maxlen = strlen(committer) + msglen + 100;
-	logrec = xmalloc(maxlen);
-	len = sprintf(logrec, "%s %s %s\n",
-		      sha1_to_hex(old_sha1),
-		      sha1_to_hex(new_sha1),
-		      committer);
-	if (msglen)
-		len += copy_msg(logrec + len - 1, msg) - 1;
-	written = len <= maxlen ? write_in_full(logfd, logrec, len) : -1;
-	free(logrec);
-	if (written != len) {
+	result = log_ref_write_fd(logfd, old_sha1, new_sha1,
+				  git_committer_info(0), msg);
+	if (result) {
 		int save_errno = errno;
 		close(logfd);
 		error("Unable to append to %s", log_file);
 		errno = save_errno;
 		return -1;
 	}
@@ -3002,20 +3028,12 @@
 static int write_ref_sha1(struct ref_lock *lock,
 	const unsigned char *sha1, const char *logmsg)
 {
 	static char term = '\n';
 	struct object *o;
 
-	if (!lock) {
-		errno = EINVAL;
-		return -1;
-	}
-	if (!lock->force_write && !hashcmp(lock->old_sha1, sha1)) {
-		unlock_ref(lock);
-		return 0;
-	}
 	o = parse_object(sha1);
 	if (!o) {
 		error("Trying to write ref %s with nonexistent object %s",
 			lock->ref_name, sha1_to_hex(sha1));
 		unlock_ref(lock);
 		errno = EINVAL;
@@ -3479,22 +3497,33 @@
 	retval = do_for_each_reflog(&name, fn, cb_data);
 	strbuf_release(&name);
 	return retval;
 }
 
 /**
- * Information needed for a single ref update.  Set new_sha1 to the
- * new value or to zero to delete the ref.  To check the old value
- * while locking the ref, set have_old to 1 and set old_sha1 to the
- * value or to zero to ensure the ref does not exist before update.
+ * Information needed for a single ref update. Set new_sha1 to the new
+ * value or to null_sha1 to delete the ref. To check the old value
+ * while the ref is locked, set (flags & REF_HAVE_OLD) and set
+ * old_sha1 to the old value, or to null_sha1 to ensure the ref does
+ * not exist before update.
  */
 struct ref_update {
+	/*
+	 * If (flags & REF_HAVE_NEW), set the reference to this value:
+	 */
 	unsigned char new_sha1[20];
+	/*
+	 * If (flags & REF_HAVE_OLD), check that the reference
+	 * previously had this value:
+	 */
 	unsigned char old_sha1[20];
-	int flags; /* REF_NODEREF? */
-	int have_old; /* 1 if old_sha1 is valid, 0 otherwise */
+	/*
+	 * One or more of REF_HAVE_NEW, REF_HAVE_OLD, REF_NODEREF,
+	 * REF_DELETING, and REF_ISPRUNING:
+	 */
+	unsigned int flags;
 	struct ref_lock *lock;
 	int type;
 	char *msg;
 	const char refname[FLEX_ARRAY];
 };
 
@@ -3560,115 +3589,93 @@
 }
 
 int ref_transaction_update(struct ref_transaction *transaction,
 			   const char *refname,
 			   const unsigned char *new_sha1,
 			   const unsigned char *old_sha1,
-			   int flags, int have_old, const char *msg,
+			   unsigned int flags, const char *msg,
 			   struct strbuf *err)
 {
 	struct ref_update *update;
 
 	assert(err);
 
 	if (transaction->state != REF_TRANSACTION_OPEN)
 		die("BUG: update called for transaction that is not open");
 
-	if (have_old && !old_sha1)
-		die("BUG: have_old is true but old_sha1 is NULL");
-
-	if (!is_null_sha1(new_sha1) &&
+	if (new_sha1 && !is_null_sha1(new_sha1) &&
 	    check_refname_format(refname, REFNAME_ALLOW_ONELEVEL)) {
 		strbuf_addf(err, "refusing to update ref with bad name %s",
 			    refname);
 		return -1;
 	}
 
 	update = add_update(transaction, refname);
-	hashcpy(update->new_sha1, new_sha1);
-	update->flags = flags;
-	update->have_old = have_old;
-	if (have_old)
+	if (new_sha1) {
+		hashcpy(update->new_sha1, new_sha1);
+		flags |= REF_HAVE_NEW;
+	}
+	if (old_sha1) {
 		hashcpy(update->old_sha1, old_sha1);
+		flags |= REF_HAVE_OLD;
+	}
+	update->flags = flags;
 	if (msg)
 		update->msg = xstrdup(msg);
 	return 0;
 }
 
 int ref_transaction_create(struct ref_transaction *transaction,
 			   const char *refname,
 			   const unsigned char *new_sha1,
-			   int flags, const char *msg,
+			   unsigned int flags, const char *msg,
 			   struct strbuf *err)
 {
-	struct ref_update *update;
-
-	assert(err);
-
-	if (transaction->state != REF_TRANSACTION_OPEN)
-		die("BUG: create called for transaction that is not open");
-
 	if (!new_sha1 || is_null_sha1(new_sha1))
-		die("BUG: create ref with null new_sha1");
-
-	if (check_refname_format(refname, REFNAME_ALLOW_ONELEVEL)) {
-		strbuf_addf(err, "refusing to create ref with bad name %s",
-			    refname);
-		return -1;
-	}
-
-	update = add_update(transaction, refname);
-
-	hashcpy(update->new_sha1, new_sha1);
-	hashclr(update->old_sha1);
-	update->flags = flags;
-	update->have_old = 1;
-	if (msg)
-		update->msg = xstrdup(msg);
-	return 0;
+		die("BUG: create called without valid new_sha1");
+	return ref_transaction_update(transaction, refname, new_sha1,
+				      null_sha1, flags, msg, err);
 }
 
 int ref_transaction_delete(struct ref_transaction *transaction,
 			   const char *refname,
 			   const unsigned char *old_sha1,
-			   int flags, int have_old, const char *msg,
+			   unsigned int flags, const char *msg,
 			   struct strbuf *err)
 {
-	struct ref_update *update;
-
-	assert(err);
-
-	if (transaction->state != REF_TRANSACTION_OPEN)
-		die("BUG: delete called for transaction that is not open");
-
-	if (have_old && !old_sha1)
-		die("BUG: have_old is true but old_sha1 is NULL");
+	if (old_sha1 && is_null_sha1(old_sha1))
+		die("BUG: delete called with old_sha1 set to zeros");
+	return ref_transaction_update(transaction, refname,
+				      null_sha1, old_sha1,
+				      flags, msg, err);
+}
 
-	update = add_update(transaction, refname);
-	update->flags = flags;
-	update->have_old = have_old;
-	if (have_old) {
-		assert(!is_null_sha1(old_sha1));
-		hashcpy(update->old_sha1, old_sha1);
-	}
-	if (msg)
-		update->msg = xstrdup(msg);
-	return 0;
+int ref_transaction_verify(struct ref_transaction *transaction,
+			   const char *refname,
+			   const unsigned char *old_sha1,
+			   unsigned int flags,
+			   struct strbuf *err)
+{
+	if (!old_sha1)
+		die("BUG: verify called with old_sha1 set to NULL");
+	return ref_transaction_update(transaction, refname,
+				      NULL, old_sha1,
+				      flags, NULL, err);
 }
 
-int update_ref(const char *action, const char *refname,
-	       const unsigned char *sha1, const unsigned char *oldval,
-	       int flags, enum action_on_err onerr)
+int update_ref(const char *msg, const char *refname,
+	       const unsigned char *new_sha1, const unsigned char *old_sha1,
+	       unsigned int flags, enum action_on_err onerr)
 {
 	struct ref_transaction *t;
 	struct strbuf err = STRBUF_INIT;
 
 	t = ref_transaction_begin(&err);
 	if (!t ||
-	    ref_transaction_update(t, refname, sha1, oldval, flags,
-				   !!oldval, action, &err) ||
+	    ref_transaction_update(t, refname, new_sha1, old_sha1,
+				   flags, msg, &err) ||
 	    ref_transaction_commit(t, &err)) {
 		const char *str = "update_ref failed for ref '%s': %s";
 
 		ref_transaction_free(t);
 		switch (onerr) {
 		case UPDATE_REFS_MSG_ON_ERR:
@@ -3738,23 +3745,23 @@
 		goto cleanup;
 	}
 
 	/* Acquire all locks while verifying old values */
 	for (i = 0; i < n; i++) {
 		struct ref_update *update = updates[i];
-		int flags = update->flags;
+		unsigned int flags = update->flags;
 
-		if (is_null_sha1(update->new_sha1))
+		if ((flags & REF_HAVE_NEW) && is_null_sha1(update->new_sha1))
 			flags |= REF_DELETING;
-		update->lock = lock_ref_sha1_basic(update->refname,
-						   (update->have_old ?
-						    update->old_sha1 :
-						    NULL),
-						   NULL,
-						   flags,
-						   &update->type);
+		update->lock = lock_ref_sha1_basic(
+				update->refname,
+				((update->flags & REF_HAVE_OLD) ?
+				 update->old_sha1 : NULL),
+				NULL,
+				flags,
+				&update->type);
 		if (!update->lock) {
 			ret = (errno == ENOTDIR)
 				? TRANSACTION_NAME_CONFLICT
 				: TRANSACTION_GENERIC_ERROR;
 			strbuf_addf(err, "Cannot lock the ref '%s'.",
 				    update->refname);
@@ -3762,37 +3769,52 @@
 		}
 	}
 
 	/* Perform updates first so live commits remain referenced */
 	for (i = 0; i < n; i++) {
 		struct ref_update *update = updates[i];
+		int flags = update->flags;
 
-		if (!is_null_sha1(update->new_sha1)) {
-			if (write_ref_sha1(update->lock, update->new_sha1,
-					   update->msg)) {
+		if ((flags & REF_HAVE_NEW) && !is_null_sha1(update->new_sha1)) {
+			int overwriting_symref = ((update->type & REF_ISSYMREF) &&
+						  (update->flags & REF_NODEREF));
+
+			if (!overwriting_symref
+			    && !hashcmp(update->lock->old_sha1, update->new_sha1)) {
+				/*
+				 * The reference already has the desired
+				 * value, so we don't need to write it.
+				 */
+				unlock_ref(update->lock);
+				update->lock = NULL;
+			} else if (write_ref_sha1(update->lock, update->new_sha1,
+						  update->msg)) {
 				update->lock = NULL; /* freed by write_ref_sha1 */
 				strbuf_addf(err, "Cannot update the ref '%s'.",
 					    update->refname);
 				ret = TRANSACTION_GENERIC_ERROR;
 				goto cleanup;
+			} else {
+				/* freed by write_ref_sha1(): */
+				update->lock = NULL;
 			}
-			update->lock = NULL; /* freed by write_ref_sha1 */
 		}
 	}
 
 	/* Perform deletes now that updates are safely completed */
 	for (i = 0; i < n; i++) {
 		struct ref_update *update = updates[i];
+		int flags = update->flags;
 
-		if (update->lock) {
+		if ((flags & REF_HAVE_NEW) && is_null_sha1(update->new_sha1)) {
 			if (delete_ref_loose(update->lock, update->type, err)) {
 				ret = TRANSACTION_GENERIC_ERROR;
 				goto cleanup;
 			}
 
-			if (!(update->flags & REF_ISPRUNING))
+			if (!(flags & REF_ISPRUNING))
 				string_list_append(&refs_to_delete,
 						   update->lock->ref_name);
 		}
 	}
 
 	if (repack_without_refs(&refs_to_delete, err)) {
@@ -3945,6 +3967,144 @@
 		len = strlen(item->string);
 		if (!refname[len] || refname[len] == '/')
 			return 1;
 	}
 	return 0;
 }
+
+struct expire_reflog_cb {
+	unsigned int flags;
+	reflog_expiry_should_prune_fn *should_prune_fn;
+	void *policy_cb;
+	FILE *newlog;
+	unsigned char last_kept_sha1[20];
+};
+
+static int expire_reflog_ent(unsigned char *osha1, unsigned char *nsha1,
+			     const char *email, unsigned long timestamp, int tz,
+			     const char *message, void *cb_data)
+{
+	struct expire_reflog_cb *cb = cb_data;
+	struct expire_reflog_policy_cb *policy_cb = cb->policy_cb;
+
+	if (cb->flags & EXPIRE_REFLOGS_REWRITE)
+		osha1 = cb->last_kept_sha1;
+
+	if ((*cb->should_prune_fn)(osha1, nsha1, email, timestamp, tz,
+				   message, policy_cb)) {
+		if (!cb->newlog)
+			printf("would prune %s", message);
+		else if (cb->flags & EXPIRE_REFLOGS_VERBOSE)
+			printf("prune %s", message);
+	} else {
+		if (cb->newlog) {
+			fprintf(cb->newlog, "%s %s %s %lu %+05d\t%s",
+				sha1_to_hex(osha1), sha1_to_hex(nsha1),
+				email, timestamp, tz, message);
+			hashcpy(cb->last_kept_sha1, nsha1);
+		}
+		if (cb->flags & EXPIRE_REFLOGS_VERBOSE)
+			printf("keep %s", message);
+	}
+	return 0;
+}
+
+int reflog_expire(const char *refname, const unsigned char *sha1,
+		 unsigned int flags,
+		 reflog_expiry_prepare_fn prepare_fn,
+		 reflog_expiry_should_prune_fn should_prune_fn,
+		 reflog_expiry_cleanup_fn cleanup_fn,
+		 void *policy_cb_data)
+{
+	static struct lock_file reflog_lock;
+	struct expire_reflog_cb cb;
+	struct ref_lock *lock;
+	char *log_file;
+	int status = 0;
+	int type;
+
+	memset(&cb, 0, sizeof(cb));
+	cb.flags = flags;
+	cb.policy_cb = policy_cb_data;
+	cb.should_prune_fn = should_prune_fn;
+
+	/*
+	 * The reflog file is locked by holding the lock on the
+	 * reference itself, plus we might need to update the
+	 * reference if --updateref was specified:
+	 */
+	lock = lock_ref_sha1_basic(refname, sha1, NULL, 0, &type);
+	if (!lock)
+		return error("cannot lock ref '%s'", refname);
+	if (!reflog_exists(refname)) {
+		unlock_ref(lock);
+		return 0;
+	}
+
+	log_file = git_pathdup("logs/%s", refname);
+	if (!(flags & EXPIRE_REFLOGS_DRY_RUN)) {
+		/*
+		 * Even though holding $GIT_DIR/logs/$reflog.lock has
+		 * no locking implications, we use the lock_file
+		 * machinery here anyway because it does a lot of the
+		 * work we need, including cleaning up if the program
+		 * exits unexpectedly.
+		 */
+		if (hold_lock_file_for_update(&reflog_lock, log_file, 0) < 0) {
+			struct strbuf err = STRBUF_INIT;
+			unable_to_lock_message(log_file, errno, &err);
+			error("%s", err.buf);
+			strbuf_release(&err);
+			goto failure;
+		}
+		cb.newlog = fdopen_lock_file(&reflog_lock, "w");
+		if (!cb.newlog) {
+			error("cannot fdopen %s (%s)",
+			      reflog_lock.filename.buf, strerror(errno));
+			goto failure;
+		}
+	}
+
+	(*prepare_fn)(refname, sha1, cb.policy_cb);
+	for_each_reflog_ent(refname, expire_reflog_ent, &cb);
+	(*cleanup_fn)(cb.policy_cb);
+
+	if (!(flags & EXPIRE_REFLOGS_DRY_RUN)) {
+		/*
+		 * It doesn't make sense to adjust a reference pointed
+		 * to by a symbolic ref based on expiring entries in
+		 * the symbolic reference's reflog. Nor can we update
+		 * a reference if there are no remaining reflog
+		 * entries.
+		 */
+		int update = (flags & EXPIRE_REFLOGS_UPDATE_REF) &&
+			!(type & REF_ISSYMREF) &&
+			!is_null_sha1(cb.last_kept_sha1);
+
+		if (close_lock_file(&reflog_lock)) {
+			status |= error("couldn't write %s: %s", log_file,
+					strerror(errno));
+		} else if (update &&
+			(write_in_full(lock->lock_fd,
+				sha1_to_hex(cb.last_kept_sha1), 40) != 40 ||
+			 write_str_in_full(lock->lock_fd, "\n") != 1 ||
+			 close_ref(lock) < 0)) {
+			status |= error("couldn't write %s",
+					lock->lk->filename.buf);
+			rollback_lock_file(&reflog_lock);
+		} else if (commit_lock_file(&reflog_lock)) {
+			status |= error("unable to commit reflog '%s' (%s)",
+					log_file, strerror(errno));
+		} else if (update && commit_ref(lock)) {
+			status |= error("couldn't set %s", lock->ref_name);
+		}
+	}
+	free(log_file);
+	unlock_ref(lock);
+	return status;
+
+ failure:
+	rollback_lock_file(&reflog_lock);
+	free(log_file);
+	unlock_ref(lock);
+	return -1;
+}
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/refs.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/refs.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/refs.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/refs.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/refs.h	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/refs.h	2015-05-01 03:12:02.000000000 +0800
@@ -1,18 +1,9 @@
 #ifndef REFS_H
 #define REFS_H
 
-struct ref_lock {
-	char *ref_name;
-	char *orig_ref_name;
-	struct lock_file *lk;
-	unsigned char old_sha1[20];
-	int lock_fd;
-	int force_write;
-};
-
 /*
  * A ref_transaction represents a collection of ref updates
  * that should succeed or fail together.
  *
  * Calling sequence
  * ----------------
@@ -186,37 +177,19 @@
  * Symbolic references are considered unpeelable, even if they
  * ultimately resolve to a peelable tag.
  */
 extern int peel_ref(const char *refname, unsigned char *sha1);
 
 /*
- * Flags controlling lock_any_ref_for_update(), ref_transaction_update(),
- * ref_transaction_create(), etc.
+ * Flags controlling ref_transaction_update(), ref_transaction_create(), etc.
  * REF_NODEREF: act on the ref directly, instead of dereferencing
  *              symbolic references.
- * REF_DELETING: tolerate broken refs
  *
- * Flags >= 0x100 are reserved for internal use.
+ * Other flags are reserved for internal use.
  */
 #define REF_NODEREF	0x01
-#define REF_DELETING	0x02
-/*
- * This function sets errno to something meaningful on failure.
- */
-extern struct ref_lock *lock_any_ref_for_update(const char *refname,
-						const unsigned char *old_sha1,
-						int flags, int *type_p);
-
-/** Close the file descriptor owned by a lock and return the status */
-extern int close_ref(struct ref_lock *lock);
-
-/** Close and commit the ref locked by the lock */
-extern int commit_ref(struct ref_lock *lock);
-
-/** Release any lock taken but not written. **/
-extern void unlock_ref(struct ref_lock *lock);
 
 /*
  * Setup reflog before using. Set errno to something meaningful on failure.
  */
 int log_ref_setup(const char *refname, char *logfile, int bufsize);
 
@@ -279,63 +252,101 @@
  * Begin a reference transaction.  The reference transaction must
  * be freed by calling ref_transaction_free().
  */
 struct ref_transaction *ref_transaction_begin(struct strbuf *err);
 
 /*
- * The following functions add a reference check or update to a
- * ref_transaction.  In all of them, refname is the name of the
- * reference to be affected.  The functions make internal copies of
- * refname and msg, so the caller retains ownership of these parameters.
- * flags can be REF_NODEREF; it is passed to update_ref_lock().
+ * Reference transaction updates
+ *
+ * The following four functions add a reference check or update to a
+ * ref_transaction.  They have some common similar parameters:
+ *
+ *     transaction -- a pointer to an open ref_transaction, obtained
+ *         from ref_transaction_begin().
+ *
+ *     refname -- the name of the reference to be affected.
+ *
+ *     flags -- flags affecting the update, passed to
+ *         update_ref_lock(). Can be REF_NODEREF, which means that
+ *         symbolic references should not be followed.
+ *
+ *     msg -- a message describing the change (for the reflog).
+ *
+ *     err -- a strbuf for receiving a description of any error that
+ *         might have occured.
+ *
+ * The functions make internal copies of refname and msg, so the
+ * caller retains ownership of these parameters.
+ *
+ * The functions return 0 on success and non-zero on failure. A
+ * failure means that the transaction as a whole has failed and needs
+ * to be rolled back.
  */
 
 /*
- * Add a reference update to transaction.  new_sha1 is the value that
- * the reference should have after the update, or zeros if it should
- * be deleted.  If have_old is true, then old_sha1 holds the value
- * that the reference should have had before the update, or zeros if
- * it must not have existed beforehand.
- * Function returns 0 on success and non-zero on failure. A failure to update
- * means that the transaction as a whole has failed and will need to be
- * rolled back.
+ * Add a reference update to transaction. new_sha1 is the value that
+ * the reference should have after the update, or null_sha1 if it
+ * should be deleted. If new_sha1 is NULL, then the reference is not
+ * changed at all. old_sha1 is the value that the reference must have
+ * before the update, or null_sha1 if it must not have existed
+ * beforehand. The old value is checked after the lock is taken to
+ * prevent races. If the old value doesn't agree with old_sha1, the
+ * whole transaction fails. If old_sha1 is NULL, then the previous
+ * value is not checked.
+ *
+ * See the above comment "Reference transaction updates" for more
+ * information.
  */
 int ref_transaction_update(struct ref_transaction *transaction,
 			   const char *refname,
 			   const unsigned char *new_sha1,
 			   const unsigned char *old_sha1,
-			   int flags, int have_old, const char *msg,
+			   unsigned int flags, const char *msg,
 			   struct strbuf *err);
 
 /*
- * Add a reference creation to transaction.  new_sha1 is the value
- * that the reference should have after the update; it must not be the
- * null SHA-1.  It is verified that the reference does not exist
+ * Add a reference creation to transaction. new_sha1 is the value that
+ * the reference should have after the update; it must not be
+ * null_sha1. It is verified that the reference does not exist
  * already.
- * Function returns 0 on success and non-zero on failure. A failure to create
- * means that the transaction as a whole has failed and will need to be
- * rolled back.
+ *
+ * See the above comment "Reference transaction updates" for more
+ * information.
  */
 int ref_transaction_create(struct ref_transaction *transaction,
 			   const char *refname,
 			   const unsigned char *new_sha1,
-			   int flags, const char *msg,
+			   unsigned int flags, const char *msg,
 			   struct strbuf *err);
 
 /*
- * Add a reference deletion to transaction.  If have_old is true, then
- * old_sha1 holds the value that the reference should have had before
- * the update (which must not be the null SHA-1).
- * Function returns 0 on success and non-zero on failure. A failure to delete
- * means that the transaction as a whole has failed and will need to be
- * rolled back.
+ * Add a reference deletion to transaction. If old_sha1 is non-NULL,
+ * then it holds the value that the reference should have had before
+ * the update (which must not be null_sha1).
+ *
+ * See the above comment "Reference transaction updates" for more
+ * information.
  */
 int ref_transaction_delete(struct ref_transaction *transaction,
 			   const char *refname,
 			   const unsigned char *old_sha1,
-			   int flags, int have_old, const char *msg,
+			   unsigned int flags, const char *msg,
+			   struct strbuf *err);
+
+/*
+ * Verify, within a transaction, that refname has the value old_sha1,
+ * or, if old_sha1 is null_sha1, then verify that the reference
+ * doesn't exist. old_sha1 must be non-NULL.
+ *
+ * See the above comment "Reference transaction updates" for more
+ * information.
+ */
+int ref_transaction_verify(struct ref_transaction *transaction,
+			   const char *refname,
+			   const unsigned char *old_sha1,
+			   unsigned int flags,
 			   struct strbuf *err);
 
 /*
  * Commit all of the changes that have been queued in transaction, as
  * atomically as possible.
  *
@@ -350,15 +361,68 @@
 
 /*
  * Free an existing transaction and all associated data.
  */
 void ref_transaction_free(struct ref_transaction *transaction);
 
-/** Lock a ref and then write its file */
-int update_ref(const char *action, const char *refname,
-		const unsigned char *sha1, const unsigned char *oldval,
-		int flags, enum action_on_err onerr);
+/**
+ * Lock, update, and unlock a single reference. This function
+ * basically does a transaction containing a single call to
+ * ref_transaction_update(). The parameters to this function have the
+ * same meaning as the corresponding parameters to
+ * ref_transaction_update(). Handle errors as requested by the `onerr`
+ * argument.
+ */
+int update_ref(const char *msg, const char *refname,
+	       const unsigned char *new_sha1, const unsigned char *old_sha1,
+	       unsigned int flags, enum action_on_err onerr);
 
 extern int parse_hide_refs_config(const char *var, const char *value, const char *);
 extern int ref_is_hidden(const char *);
 
+enum expire_reflog_flags {
+	EXPIRE_REFLOGS_DRY_RUN = 1 << 0,
+	EXPIRE_REFLOGS_UPDATE_REF = 1 << 1,
+	EXPIRE_REFLOGS_VERBOSE = 1 << 2,
+	EXPIRE_REFLOGS_REWRITE = 1 << 3
+};
+
+/*
+ * The following interface is used for reflog expiration. The caller
+ * calls reflog_expire(), supplying it with three callback functions,
+ * of the following types. The callback functions define the
+ * expiration policy that is desired.
+ *
+ * reflog_expiry_prepare_fn -- Called once after the reference is
+ *     locked.
+ *
+ * reflog_expiry_should_prune_fn -- Called once for each entry in the
+ *     existing reflog. It should return true iff that entry should be
+ *     pruned.
+ *
+ * reflog_expiry_cleanup_fn -- Called once before the reference is
+ *     unlocked again.
+ */
+typedef void reflog_expiry_prepare_fn(const char *refname,
+				      const unsigned char *sha1,
+				      void *cb_data);
+typedef int reflog_expiry_should_prune_fn(unsigned char *osha1,
+					  unsigned char *nsha1,
+					  const char *email,
+					  unsigned long timestamp, int tz,
+					  const char *message, void *cb_data);
+typedef void reflog_expiry_cleanup_fn(void *cb_data);
+
+/*
+ * Expire reflog entries for the specified reference. sha1 is the old
+ * value of the reference. flags is a combination of the constants in
+ * enum expire_reflog_flags. The three function pointers are described
+ * above. On success, return zero.
+ */
+extern int reflog_expire(const char *refname, const unsigned char *sha1,
+			 unsigned int flags,
+			 reflog_expiry_prepare_fn prepare_fn,
+			 reflog_expiry_should_prune_fn should_prune_fn,
+			 reflog_expiry_cleanup_fn cleanup_fn,
+			 void *policy_cb_data);
+
 #endif /* REFS_H */
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/refs.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/refs.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/RelNotes /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/RelNotes
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/RelNotes	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/RelNotes	2015-05-01 03:12:02.000000000 +0800
@@ -1,18 +1,514 @@
-Git v2.3.10 Release Notes
-=========================
+Git 2.4 Release Notes
+=====================
 
-Fixes since v2.3.9
+Backward compatibility warning(s)
+---------------------------------
+
+This release has a few changes in the user-visible output from
+Porcelain commands. These are not meant to be parsed by scripts, but
+users still may want to be aware of the changes:
+
+ * The output from "git log --decorate" (and, more generally, the "%d"
+   format specifier used in the "--format=<string>" parameter to the
+   "git log" family of commands) has changed. It used to list "HEAD"
+   just like other branches; e.g.,
+
+     $ git log --decorate -1 master
+     commit bdb0f6788fa5e3cacc4315e9ff318a27b2676ff4 (HEAD, master)
+     ...
+
+   This release changes the output slightly when HEAD refers to a
+   branch whose name is also shown in the output. The above is now
+   shown as:
+
+     $ git log --decorate -1 master
+     commit bdb0f6788fa5e3cacc4315e9ff318a27b2676ff4 (HEAD -> master)
+     ...
+
+ * The phrasing "git branch" uses to describe a detached HEAD has been
+   updated to agree with the phrasing used by "git status":
+
+    - When HEAD is at the same commit as when it was originally
+      detached, they now both show "detached at <commit object name>".
+
+    - When HEAD has moved since it was originally detached, they now
+      both show "detached from <commit object name>".
+
+   Previously, "git branch" always used "from".
+
+
+Updates since v2.3
 ------------------
 
- * xdiff code we use to generate diffs is not prepared to handle
-   extremely large files.  It uses "int" in many places, which can
-   overflow if we have a very large number of lines or even bytes in
-   our input files, for example.  Cap the input size to soemwhere
-   around 1GB for now.
-
- * Some protocols (like git-remote-ext) can execute arbitrary code
-   found in the URL.  The URLs that submodules use may come from
-   arbitrary sources (e.g., .gitmodules files in a remote
-   repository), and can hurt those who blindly enable recursive
-   fetch.  Restrict the allowed protocols to well known and safe
-   ones.
+Ports
+
+ * Our default I/O size (8 MiB) for large files was too large for some
+   platforms with smaller SSIZE_MAX, leading to read(2)/write(2)
+   failures.
+
+ * We did not check the curl library version before using the
+   CURLOPT_PROXYAUTH feature, which did not exist in older versions of
+   the library.
+
+ * We now detect number of CPUs on older BSD-derived systems.
+
+ * Portability fixes and workarounds for shell scripts have been added
+   to help BSD-derived systems.
+
+
+UI, Workflows & Features
+
+ * The command usage info strings given by "git cmd -h" and in
+   documentation have been tweaked for consistency.
+
+ * The "sync" subcommand of "git p4" now allows users to exclude
+   subdirectories like its "clone" subcommand does.
+
+ * "git log --invert-grep --grep=WIP" will show only commits that do
+   not have the string "WIP" in their messages.
+
+ * "git push" has been taught an "--atomic" option that makes a push
+   that updates more than one ref an "all-or-none" affair.
+
+ * Extending the "push to deploy" feature that was added in 2.3, the
+   behaviour of "git push" when updating the branch that is checked
+   out can now be tweaked by a "push-to-checkout" hook.
+
+ * HTTP-based transports now send Accept-Language when making
+   requests. The languages to accept are inferred from environment
+   variables on the client side (LANGUAGE, etc).
+
+ * "git send-email" used to accept a mistaken "y" (or "yes") as an
+   answer to "What encoding do you want to use [UTF-8]?" without
+   questioning. Now it asks for confirmation when the answer looks too
+   short to be a valid encoding name.
+
+ * When "git apply --whitespace=fix" fixed whitespace errors in the
+   common context lines, the command reports that it did so.
+
+ * "git status" now allows the "-v" option to be given twice, in which
+   case it also shows the differences in the working tree that are not
+   staged to be committed.
+
+ * "git cherry-pick" used to clean up the log message even when it is
+   merely replaying an existing commit. It now replays the message
+   verbatim unless you are editing the message of the resulting
+   commit.
+
+ * "git archive" can now be told to set the 'text' attribute in the
+   resulting zip archive.
+
+ * Output from "git log --decorate" now distinguishes between a
+   detached HEAD vs. a HEAD that points at a branch.
+
+   This is a potentially backward-incompatible change; see above for
+   more information.
+
+ * When HEAD was detached when at commit xyz and hasn't been moved
+   since it was detached, "git status" would report "detached at xyz"
+   whereas "git branch" would report "detached from xyz". Now the
+   output of "git branch" agrees with that of "git status".
+
+   This is a potentially backward-incompatible change; see above for
+   more information.
+
+ * "git -C '' subcmd" now works in the current directory (analogously
+   to "cd ''") rather than dying with an error message.
+   (merge 6a536e2 kn/git-cd-to-empty later to maint).
+
+ * The versionsort.prereleaseSuffix configuration variable can be used
+   to specify that, for example, v1.0-pre1 comes before v1.0.
+
+ * A new "push.followTags" configuration turns the "--follow-tags"
+   option on by default for the "git push" command.
+
+ * "git log --graph --no-walk A B..." is a nonsensical combination of
+   options: "--no-walk" requests discrete points in the history, while
+   "--graph" asks to draw connections between these discrete points.
+   Forbid the use of these options together.
+
+ * "git rev-list --bisect --first-parent" does not work (yet) and can
+   even cause SEGV; forbid it. "git log --bisect --first-parent" would
+   not be useful until "git bisect --first-parent" materializes, so
+   also forbid it for now.
+
+
+Performance, Internal Implementation, Development Support etc.
+
+ * Slightly change the implementation of the N_() macro to help us
+   detect mistakes.
+
+ * Restructure the implementation of "reflog expire" to fit better
+   with the recently updated reference API.
+
+ * The transport-helper did not pass transport options such as
+   verbosity, progress, cloning, etc. to import and export based
+   helpers, like it did for fetch and push based helpers, robbing them
+   of the chance to honor the wish of the end-users better.
+
+ * The tests that wanted to see that a file becomes unreadable after
+   running "chmod a-r file", and the tests that wanted to make sure
+   that they are not run as root, used "can we write into the /
+   directory?" as a cheap substitute. But on some platforms that is
+   not a good heuristic. The tests and their prerequisites have been
+   updated to check what they really require.
+   (merge f400e51 jk/sanity later to maint).
+
+ * Various issues around "reflog expire", e.g. using --updateref when
+   expiring a reflog for a symbolic reference, have been corrected
+   and/or made saner.
+
+ * The documentation for the strbuf API had been split between the API
+   documentation and the header file. Consolidate the documentation in
+   strbuf.h.
+
+ * The error handling functions and conventions are now documented in
+   the API manual (in api-error-handling.txt).
+
+ * Optimize gitattribute look-up, mostly useful in "git grep" on a
+   project that does not use many attributes, by avoiding it when we
+   (should) know that the attributes are not defined in the first
+   place.
+
+ * Typofix in comments.
+   (merge ef2956a ak/git-pm-typofix later to maint).
+
+ * Code clean-up.
+   (merge 0b868f0 sb/hex-object-name-is-at-most-41-bytes-long later to maint).
+   (merge 5d30851 dp/remove-duplicated-header-inclusion later to maint).
+
+ * Simplify the ref transaction API for verifying that "the ref should
+   be pointing at this object".
+
+ * Simplify the code in "git daemon" that parses out and holds
+   hostnames used in request interpolation.
+
+ * Restructure the "git push" codepath to make it easier to add new
+   configuration bits.
+
+ * The run-command interface made it easy to make a pipe for us to
+   read from a process, wait for the process to finish, and then
+   attempt to read its output. But this pattern can lead to deadlock.
+   So introduce a helper to do this correctly (i.e., first read, and
+   then wait the process to finish) and also add code to prevent such
+   abuse in the run-command helper.
+
+ * People often forget to chain the commands in their test together
+   with &&, letting a failure from an earlier command in the test go
+   unnoticed. The new GIT_TEST_CHAIN_LINT mechanism allows you to
+   catch such a mistake more easily.
+
+
+Also contains various documentation updates and code clean-ups.
+
+
+Fixes since v2.3
+----------------
+
+Unless otherwise noted, all the fixes since v2.3 in the maintenance
+track are contained in this release (see the maintenance releases'
+notes for details).
+
+ * "git blame HEAD -- missing" failed to correctly say "HEAD" when it
+   tried to say "No such path 'missing' in HEAD".
+   (merge a46442f jk/blame-commit-label later to maint).
+
+ * "git rerere" (invoked internally from many mergy operations) did
+   not correctly signal errors when it attempted to update the working
+   tree files but failed for whatever reason.
+   (merge 89ea903 jn/rerere-fail-on-auto-update-failure later to maint).
+
+ * Setting diff.submodule to 'log' made "git format-patch" produce
+   broken patches.
+   (merge 339de50 dk/format-patch-ignore-diff-submodule later to maint).
+
+ * After attempting and failing a password-less authentication (e.g.,
+   Kerberos), libcURL refuses to fall back to password-based Basic
+   authentication without a bit of help/encouragement.
+   (merge 4dbe664 bc/http-fallback-to-password-after-krb-fails later to maint).
+
+ * The "git push" documentation for the "--repo=<there>" option was
+   easily misunderstood.
+   (merge 57b92a7 mg/push-repo-option-doc later to maint).
+
+ * Code to read a branch name from various files in the .git/
+   directory would have overrun array limits if asked to read an empty
+   file.
+   (merge 66ec904 jk/status-read-branch-name-fix later to maint).
+
+ * Remove a superfluous conditional that is always true.
+   (merge 94ee8e2 jk/remote-curl-an-array-in-struct-cannot-be-null later to maint).
+
+ * The "git diff --raw" documentation incorrectly implied that C(opy)
+   and R(ename) are the only statuses that can be followed by a score
+   number.
+   (merge ac1c2d9 jc/diff-format-doc later to maint).
+
+ * A broken pack .idx file in the receiving repository prevented the
+   dumb http transport from fetching a good copy of it from the other
+   side.
+   (merge 8b9c2dd jk/dumb-http-idx-fetch-fix later to maint).
+
+ * The error message from "git commit", when a non-existing author
+   name was given as value to the "--author=" parameter, has been
+   reworded to avoid misunderstanding.
+   (merge 1044b1f mg/commit-author-no-match-malformed-message later to maint).
+
+ * "git log --help" used to show rev-list options that are irrelevant
+   to the "log" command.
+   (merge 3cab02d jc/doc-log-rev-list-options later to maint).
+
+ * "git apply --whitespace=fix" used to under-allocate memory when the
+   fix resulted in a longer text than the original patch.
+   (merge 407a792 jc/apply-ws-fix-expands later to maint).
+
+ * The interactive "show a list and let the user choose from it"
+   interface used by "git add -i" unnecessarily prompted the user even
+   when the candidate list was empty, against which the only "choice"
+   the user could have made was to choose nothing.
+   (merge a9c4641 ak/add-i-empty-candidates later to maint).
+
+ * The todo list created by "git rebase -i" did not fully honor
+   core.abbrev settings.
+   (merge edb72d5 ks/rebase-i-abbrev later to maint).
+
+ * "git fetch" over a remote-helper that cannot respond to the "list"
+   command could not fetch from a symbolic reference (e.g., HEAD).
+   (merge 33cae54 mh/deref-symref-over-helper-transport later to maint).
+
+ * "git push --signed" gave an incorrectly worded error message when
+   the other side did not support the capability.
+
+ * The "git push --signed" protocol extension did not limit what the
+   "nonce" (a server-chosen string) could contain nor how long it
+   could be, which was unnecessarily lax. Limit both the length and
+   the alphabet to a reasonably small space that can still have enough
+   entropy.
+   (merge afcb6ee jc/push-cert later to maint).
+
+ * The completion script (in contrib/) clobbered the shell variable $x
+   in the global shell namespace.
+   (merge 852ff1c ma/bash-completion-leaking-x later to maint).
+
+ * We incorrectly formatted a "uintmax_t" integer that doesn't fit in
+   "int".
+   (merge d306f3d jk/decimal-width-for-uintmax later to maint).
+
+ * The configuration parser used to be confused when reading
+   configuration from a blob object that ends with a lone CR.
+   (merge 1d0655c jk/config-no-ungetc-eof later to maint).
+
+ * The pack bitmap support did not build with older versions of GCC.
+   (merge bd4e882 jk/pack-bitmap later to maint).
+
+ * The documentation wasn't clear that "remote.<nick>.pushURL" and
+   "remote.<nick>.URL" are there to name the same repository accessed
+   via different transports, not two separate repositories.
+   (merge 697f652 jc/remote-set-url-doc later to maint).
+
+ * Older GnuPG implementations may not correctly import the keyring
+   material we prepare for the tests to use.
+   (merge 1f985d6 ch/new-gpg-drops-rfc-1991 later to maint).
+
+ * The credential helper for Windows (in contrib/) used to mishandle
+   user names that contain an at-sign.
+   (merge 13d261e av/wincred-with-at-in-username-fix later to maint).
+
+ * "diff-highlight" (in contrib/) used to show byte-by-byte
+   differences, which could cause multi-byte characters to be chopped
+   in the middle. It learned to pay attention to character boundaries
+   (assuming UTF-8).
+   (merge 8d00662 jk/colors later to maint).
+
+ * Document longstanding configuration variable naming rules in
+   CodingGuidelines.
+   (merge 35840a3 jc/conf-var-doc later to maint).
+
+ * An earlier workaround to squelch unhelpful deprecation warnings
+   from the compiler on OS X unnecessarily set a minimum required
+   version of the OS, which the user might want to raise (or lower)
+   for other reasons.
+   (merge 88c03eb es/squelch-openssl-warnings-on-macosx later to maint).
+
+ * Certain older vintages of cURL give irregular output from
+   "curl-config --vernum", which confused our build system.
+   (merge 3af6792 tc/curl-vernum-output-broken-in-7.11 later to maint).
+
+ * In v2.2.0, we broke "git prune" that runs in a repository that
+   borrows from an alternate object store.
+   (merge b0a4264 jk/prune-mtime later to maint).
+
+ * "git submodule add" failed to squash "path/to/././submodule" to
+   "path/to/submodule".
+   (merge 8196e72 ps/submodule-sanitize-path-upon-add later to maint).
+
+ * "git merge-file" did not work correctly when invoked in a
+   subdirectory.
+   (merge 204a8ff ab/merge-file-prefix later to maint).
+
+ * "git blame" could die trying to free an uninitialized piece of
+   memory.
+   (merge e600592 es/blame-commit-info-fix later to maint).
+
+ * "git fast-import" used to crash when it could not close and
+   finalize the resulting packfile cleanly.
+   (merge 5e915f3 jk/fast-import-die-nicely-fix later to maint).
+
+ * "update-index --refresh" used to leak memory when an entry could
+   not be refreshed for whatever reason.
+   (merge bc1c2ca sb/plug-leak-in-make-cache-entry later to maint).
+
+ * The "interpolated-path" option of "git daemon" inserted any string
+   the client declared on the "host=" capability request without
+   checking. Sanitize and limit %H and %CH to a saner and a valid DNS
+   name.
+   (merge b485373 jk/daemon-interpolate later to maint).
+
+ * "git daemon" unnecessarily looked up the hostname even when "%CH"
+   and "%IP" interpolations were not requested.
+   (merge dc8edc8 rs/daemon-interpolate later to maint).
+
+ * We relied on "--no-" prefix handling in Perl's Getopt::Long
+   package, even though that support didn't exist in Perl 5.8 (which
+   we still support). Manually add support to help people with older
+   Getopt::Long packages.
+   (merge f471494 km/send-email-getopt-long-workarounds later to maint).
+
+ * "git apply" was not very careful about reading from, removing,
+   updating and creating paths outside the working tree (under
+   --index/--cached) or the current directory (when used as a
+   replacement for GNU patch).
+   (merge e0d201b jc/apply-beyond-symlink later to maint).
+
+ * Correct a breakage in git-svn, introduced around the v2.2 era, that
+   can cause FileHandles to be closed prematurely.
+   (merge e426311 ew/svn-maint-fixes later to maint).
+
+ * We did not parse usernames followed by literal IPv6 addresses
+   correctly in SSH transport URLs; e.g.,
+   ssh://user@[2001:db8::1]:22/repo.git.
+   (merge 6b6c5f7 tb/connect-ipv6-parse-fix later to maint).
+
+ * The configuration variable 'mailinfo.scissors' was hard to
+   discover in the documentation.
+   (merge afb5de7 mm/am-c-doc later to maint).
+
+ * The interaction between "git submodule update" and the
+   submodule.*.update configuration was not clearly documented.
+   (merge 5c31acf ms/submodule-update-config-doc later to maint).
+
+ * "git diff --shortstat" used together with "--dirstat=changes" or
+   "--dirstat=files" incorrectly output dirstat information twice.
+   (merge ab27389 mk/diff-shortstat-dirstat-fix later to maint).
+
+ * The manpage for "git remote add" mentioned "--tags" and "--no-tags"
+   but did not explain what happens if neither option is provided.
+   (merge aaba0ab mg/doc-remote-tags-or-not later to maint).
+
+ * The description of "--exclude-standard option" in the output of
+   "git grep -h" was phrased poorly.
+   (merge 77fdb8a nd/grep-exclude-standard-help-fix later to maint).
+
+ * "git rebase -i" recently started to include the number of commits
+   in the todo list, but that output included extraneous whitespace on
+   a platform that prepends leading whitespaces to its "wc -l" output.
+   (merge 2185d3b es/rebase-i-count-todo later to maint).
+
+ * The borrowed code in the kwset API did not follow our usual
+   convention to use "unsigned char" to store values that range from
+   0-255.
+   (merge 189c860 bw/kwset-use-unsigned later to maint).
+
+ * A corrupt input to "git diff -M" used to cause it to segfault.
+   (merge 4d6be03 jk/diffcore-rename-duplicate later to maint).
+
+ * Certain builds of GPG triggered false breakages in a test.
+   (merge 3f88c1b mg/verify-commit later to maint).
+
+ * "git imap-send" learned to optionally talk with an IMAP server via
+   libcURL. Because there is no other option when Git is built with
+   the NO_OPENSSL option, use libcURL by default in that case.
+   (merge dcd01ea km/imap-send-libcurl-options later to maint).
+
+ * "git log --decorate" did not reset colors correctly around the
+   branch names.
+   (merge 5ee8758 jc/decorate-leaky-separator-color later to maint).
+
+ * The code that reads from the ctags file in the completion script
+   (in contrib/) did not spell ${param/pattern/string} substitution
+   correctly, which happened to work with bash but not with zsh.
+   (merge db8d750 js/completion-ctags-pattern-substitution-fix later to maint).
+
+ * The transfer.hiderefs support did not quite work for smart-http
+   transport.
+   (merge 8ddf3ca jk/smart-http-hide-refs later to maint).
+
+ * In the "git tag -h" output, move the documentation for the
+   "--column" and "--sort" options to the "Tag listing options"
+   section.
+   (merge dd059c6 jk/tag-h-column-is-a-listing-option later to maint).
+
+ * "git prune" used to largely ignore broken refs when deciding which
+   objects are still being used, which could cause reference
+   corruption to lead to object loss.
+   (merge ea56c4e jk/prune-with-corrupt-refs later to maint).
+
+ * The split-index mode introduced in v2.3.0-rc0~41 was broken in the
+   codepath to protect us against a broken reimplementation of Git
+   that writes an invalid index with duplicated index entries, etc.
+   (merge 03f15a7 tg/fix-check-order-with-split-index later to maint).
+
+ * "git fetch", when fetching a commit using the
+   allow-tip-sha1-in-want extension, could have failed to fetch all of
+   the requested refs.
+   (merge 32d0462 jk/fetch-pack later to maint).
+
+ * An failure early in the "git clone" that started creating the
+   working tree and repository could have resulted in the failure to
+   clean up some directories and files.
+   (merge 16eff6c jk/cleanup-failed-clone later to maint).
+
+ * Recommend format-patch and send-email for those who want to submit
+   patches to this project.
+   (merge b25c469 jc/submitting-patches-mention-send-email later to maint).
+
+ * Do not spawn the pager when "git grep" is run with "--quiet".
+   (merge c2048f0 ws/grep-quiet-no-pager later to maint).
+
+ * The prompt script (in contrib/) did not show the untracked sign
+   when working in a subdirectory without any untracked files.
+   (merge 9bdc517 ct/prompt-untracked-fix later to maint).
+
+ * An earlier update to the URL parser broke an address that contains
+   a colon but an empty string for the port number, like
+   ssh://example.com:/path/to/repo.
+   (merge 6b6c5f7 tb/connect-ipv6-parse-fix later to maint).
+
+ * Code cleanups and documentation updates.
+   (merge 2ce63e9 rs/simple-cleanups later to maint).
+   (merge 33baa69 rj/no-xopen-source-for-cygwin later to maint).
+   (merge 817d03e jc/diff-test-updates later to maint).
+   (merge eb32c66 ak/t5516-typofix later to maint).
+   (merge bcd57cb mr/doc-clean-f-f later to maint).
+   (merge 0d6accc mg/doc-status-color-slot later to maint).
+   (merge 53e53c7 sg/completion-remote later to maint).
+   (merge 8fa7975 ak/git-done-help-cleanup later to maint).
+   (merge 9a6f128 rs/deflate-init-cleanup later to maint).
+   (merge 6f75d45 rs/use-isxdigit later to maint).
+   (merge 376e4b3 jk/test-annoyances later to maint).
+   (merge 7032054 nd/doc-git-index-version later to maint).
+   (merge e869c5e tg/test-index-v4 later to maint).
+   (merge 599d223 jk/simplify-csum-file-sha1fd-check later to maint).
+   (merge 260d585 sg/completion-gitcomp-nl-for-refs later to maint).
+   (merge 777c55a jc/report-path-error-to-dir later to maint).
+   (merge fddfaf8 ph/push-doc-cas later to maint).
+   (merge d50d31e ss/pull-rebase-preserve later to maint).
+   (merge c8c3f1d pt/enter-repo-comment-fix later to maint).
+   (merge d7bfb9e jz/gitweb-conf-doc-fix later to maint).
+   (merge f907282 jk/cherry-pick-docfix later to maint).
+   (merge d3c0811 iu/fix-parse-options-h-comment later to maint).
+   (merge 6c3b2af jg/cguide-we-cannot-count later to maint).
+   (merge 2b8bd44 jk/pack-corruption-post-mortem later to maint).
+   (merge 9585cb8 jn/doc-fast-import-no-16-octopus-limit later to maint).
+   (merge 5dcd1b1 ps/grep-help-all-callback-arg later to maint).
+   (merge f1f4c84 va/fix-git-p4-tests later to maint).
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/remote.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/remote.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/remote.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/remote.c	2015-05-01 03:12:02.000000000 +0800
@@ -2153,13 +2153,13 @@
 	return stale_refs;
 }
 
 /*
  * Compare-and-swap
  */
-void clear_cas_option(struct push_cas_option *cas)
+static void clear_cas_option(struct push_cas_option *cas)
 {
 	int i;
 
 	for (i = 0; i < cas->nr; i++)
 		free(cas->entry[i].refname);
 	free(cas->entry);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/remote.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/remote.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/remote-curl.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/remote-curl.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/remote-curl.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/remote-curl.c	2015-05-01 03:12:02.000000000 +0800
@@ -958,12 +958,14 @@
 
 int main(int argc, const char **argv)
 {
 	struct strbuf buf = STRBUF_INIT;
 	int nongit;
 
+	git_setup_gettext();
+
 	git_extract_argv0_path(argv[0]);
 	setup_git_directory_gently(&nongit);
 	if (argc < 2) {
 		error("remote-curl: usage: git remote-curl <remote> [<url>]");
 		return 1;
 	}
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/remote.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/remote.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/remote.h	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/remote.h	2015-05-01 03:12:02.000000000 +0800
@@ -112,13 +112,14 @@
 		REF_STATUS_REJECT_FETCH_FIRST,
 		REF_STATUS_REJECT_NEEDS_FORCE,
 		REF_STATUS_REJECT_STALE,
 		REF_STATUS_REJECT_SHALLOW,
 		REF_STATUS_UPTODATE,
 		REF_STATUS_REMOTE_REJECT,
-		REF_STATUS_EXPECTING_REPORT
+		REF_STATUS_EXPECTING_REPORT,
+		REF_STATUS_ATOMIC_PUSH_FAILED
 	} status;
 	char *remote_status;
 	struct ref *peer_ref; /* when renaming */
 	char name[FLEX_ARRAY]; /* more */
 };
 
@@ -257,12 +258,11 @@
 	int nr;
 	int alloc;
 };
 
 extern int parseopt_push_cas_option(const struct option *, const char *arg, int unset);
 extern int parse_push_cas_option(struct push_cas_option *, const char *arg, int unset);
-extern void clear_cas_option(struct push_cas_option *);
 
 extern int is_empty_cas(const struct push_cas_option *);
 void apply_push_cas(struct push_cas_option *, struct remote *, struct ref *);
 
 #endif
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/remote.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/remote.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/remote-testsvn.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/remote-testsvn.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/remote-testsvn.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/remote-testsvn.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/replace_object.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/replace_object.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/replace_object.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/replace_object.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/rerere.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/rerere.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/rerere.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/rerere.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/resolve-undo.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/resolve-undo.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/resolve-undo.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/resolve-undo.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/revision.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/revision.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/revision.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/revision.c	2015-05-01 03:12:02.000000000 +0800
@@ -2014,12 +2014,14 @@
 	} else if (!strcmp(arg, "--fixed-strings") || !strcmp(arg, "-F")) {
 		grep_set_pattern_type_option(GREP_PATTERN_TYPE_FIXED, &revs->grep_filter);
 	} else if (!strcmp(arg, "--perl-regexp")) {
 		grep_set_pattern_type_option(GREP_PATTERN_TYPE_PCRE, &revs->grep_filter);
 	} else if (!strcmp(arg, "--all-match")) {
 		revs->grep_filter.all_match = 1;
+	} else if (!strcmp(arg, "--invert-grep")) {
+		revs->invert_grep = 1;
 	} else if ((argcount = parse_long_opt("encoding", argv, &optarg))) {
 		if (strcmp(optarg, "none"))
 			git_log_output_encoding = xstrdup(optarg);
 		else
 			git_log_output_encoding = "";
 		return argcount;
@@ -2334,15 +2336,20 @@
 	 */
 	if (revs->reverse && revs->graph)
 		die("cannot combine --reverse with --graph");
 
 	if (revs->reflog_info && revs->graph)
 		die("cannot combine --walk-reflogs with --graph");
+	if (revs->no_walk && revs->graph)
+		die("cannot combine --no-walk with --graph");
 	if (!revs->reflog_info && revs->grep_filter.use_reflog_filter)
 		die("cannot use --grep-reflog without --walk-reflogs");
 
+	if (revs->first_parent_only && revs->bisect)
+		die(_("--first-parent is incompatible with --bisect"));
+
 	return left;
 }
 
 static void add_child(struct rev_info *revs, struct commit *parent, struct commit *child)
 {
 	struct commit_list *l = xcalloc(1, sizeof(*l));
@@ -2912,13 +2919,13 @@
 		retval = grep_buffer(&opt->grep_filter, buf.buf, buf.len);
 	else
 		retval = grep_buffer(&opt->grep_filter,
 				     (char *)message, strlen(message));
 	strbuf_release(&buf);
 	unuse_commit_buffer(commit, message);
-	return retval;
+	return opt->invert_grep ? !retval : retval;
 }
 
 static inline int want_ancestry(const struct rev_info *revs)
 {
 	return (revs->rewrite_parents || revs->children.name);
 }
@@ -2965,12 +2972,67 @@
 			return commit_ignore;
 		}
 	}
 	return commit_show;
 }
 
+define_commit_slab(saved_parents, struct commit_list *);
+
+#define EMPTY_PARENT_LIST ((struct commit_list *)-1)
+
+/*
+ * You may only call save_parents() once per commit (this is checked
+ * for non-root commits).
+ */
+static void save_parents(struct rev_info *revs, struct commit *commit)
+{
+	struct commit_list **pp;
+
+	if (!revs->saved_parents_slab) {
+		revs->saved_parents_slab = xmalloc(sizeof(struct saved_parents));
+		init_saved_parents(revs->saved_parents_slab);
+	}
+
+	pp = saved_parents_at(revs->saved_parents_slab, commit);
+
+	/*
+	 * When walking with reflogs, we may visit the same commit
+	 * several times: once for each appearance in the reflog.
+	 *
+	 * In this case, save_parents() will be called multiple times.
+	 * We want to keep only the first set of parents.  We need to
+	 * store a sentinel value for an empty (i.e., NULL) parent
+	 * list to distinguish it from a not-yet-saved list, however.
+	 */
+	if (*pp)
+		return;
+	if (commit->parents)
+		*pp = copy_commit_list(commit->parents);
+	else
+		*pp = EMPTY_PARENT_LIST;
+}
+
+static void free_saved_parents(struct rev_info *revs)
+{
+	if (revs->saved_parents_slab)
+		clear_saved_parents(revs->saved_parents_slab);
+}
+
+struct commit_list *get_saved_parents(struct rev_info *revs, const struct commit *commit)
+{
+	struct commit_list *parents;
+
+	if (!revs->saved_parents_slab)
+		return commit->parents;
+
+	parents = *saved_parents_at(revs->saved_parents_slab, commit);
+	if (parents == EMPTY_PARENT_LIST)
+		return NULL;
+	return parents;
+}
+
 enum commit_action simplify_commit(struct rev_info *revs, struct commit *commit)
 {
 	enum commit_action action = get_commit_action(revs, commit);
 
 	if (action == commit_show &&
 	    !revs->show_all &&
@@ -3264,57 +3326,6 @@
 	char *mark = get_revision_mark(revs, commit);
 	if (!strlen(mark))
 		return;
 	fputs(mark, stdout);
 	putchar(' ');
 }
-
-define_commit_slab(saved_parents, struct commit_list *);
-
-#define EMPTY_PARENT_LIST ((struct commit_list *)-1)
-
-void save_parents(struct rev_info *revs, struct commit *commit)
-{
-	struct commit_list **pp;
-
-	if (!revs->saved_parents_slab) {
-		revs->saved_parents_slab = xmalloc(sizeof(struct saved_parents));
-		init_saved_parents(revs->saved_parents_slab);
-	}
-
-	pp = saved_parents_at(revs->saved_parents_slab, commit);
-
-	/*
-	 * When walking with reflogs, we may visit the same commit
-	 * several times: once for each appearance in the reflog.
-	 *
-	 * In this case, save_parents() will be called multiple times.
-	 * We want to keep only the first set of parents.  We need to
-	 * store a sentinel value for an empty (i.e., NULL) parent
-	 * list to distinguish it from a not-yet-saved list, however.
-	 */
-	if (*pp)
-		return;
-	if (commit->parents)
-		*pp = copy_commit_list(commit->parents);
-	else
-		*pp = EMPTY_PARENT_LIST;
-}
-
-struct commit_list *get_saved_parents(struct rev_info *revs, const struct commit *commit)
-{
-	struct commit_list *parents;
-
-	if (!revs->saved_parents_slab)
-		return commit->parents;
-
-	parents = *saved_parents_at(revs->saved_parents_slab, commit);
-	if (parents == EMPTY_PARENT_LIST)
-		return NULL;
-	return parents;
-}
-
-void free_saved_parents(struct rev_info *revs)
-{
-	if (revs->saved_parents_slab)
-		clear_saved_parents(revs->saved_parents_slab);
-}
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/revision.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/revision.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/revision.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/revision.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/revision.h	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/revision.h	2015-05-01 03:12:02.000000000 +0800
@@ -166,12 +166,14 @@
 	int		no_inline;
 	int		show_log_size;
 	struct string_list *mailmap;
 
 	/* Filter by commit log message */
 	struct grep_opt	grep_filter;
+	/* Negate the match of grep_filter */
+	int invert_grep;
 
 	/* Display history graph */
 	struct git_graph *graph;
 
 	/* special limits */
 	int skip_count;
@@ -295,21 +297,17 @@
 typedef enum rewrite_result (*rewrite_parent_fn_t)(struct rev_info *revs, struct commit **pp);
 
 extern int rewrite_parents(struct rev_info *revs, struct commit *commit,
 	rewrite_parent_fn_t rewrite_parent);
 
 /*
- * Save a copy of the parent list, and return the saved copy.  This is
- * used by the log machinery to retrieve the original parents when
- * commit->parents has been modified by history simpification.
- *
- * You may only call save_parents() once per commit (this is checked
- * for non-root commits).
+ * The log machinery saves the original parent list so that
+ * get_saved_parents() can later tell what the real parents of the
+ * commits are, when commit->parents has been modified by history
+ * simpification.
  *
  * get_saved_parents() will transparently return commit->parents if
  * history simplification is off.
  */
-extern void save_parents(struct rev_info *revs, struct commit *commit);
 extern struct commit_list *get_saved_parents(struct rev_info *revs, const struct commit *commit);
-extern void free_saved_parents(struct rev_info *revs);
 
 #endif
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/revision.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/revision.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/run-command.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/run-command.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/run-command.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/run-command.c	2015-05-01 03:12:02.000000000 +0800
@@ -1,16 +1,12 @@
 #include "cache.h"
 #include "run-command.h"
 #include "exec_cmd.h"
 #include "sigchain.h"
 #include "argv-array.h"
 
-#ifndef SHELL_PATH
-# define SHELL_PATH "/bin/sh"
-#endif
-
 void child_process_init(struct child_process *child)
 {
 	memset(child, 0, sizeof(*child));
 	argv_array_init(&child->args);
 	argv_array_init(&child->env_array);
 }
@@ -558,13 +554,18 @@
 	argv_array_clear(&cmd->env_array);
 	return ret;
 }
 
 int run_command(struct child_process *cmd)
 {
-	int code = start_command(cmd);
+	int code;
+
+	if (cmd->out < 0 || cmd->err < 0)
+		die("BUG: run_command with a pipe can cause deadlock");
+
+	code = start_command(cmd);
 	if (code)
 		return code;
 	return finish_command(cmd);
 }
 
 int run_command_v_opt(const char **argv, int opt)
@@ -830,6 +831,22 @@
 	va_start(args, name);
 	ret = run_hook_ve(env, name, args);
 	va_end(args);
 
 	return ret;
 }
+
+int capture_command(struct child_process *cmd, struct strbuf *buf, size_t hint)
+{
+	cmd->out = -1;
+	if (start_command(cmd) < 0)
+		return -1;
+
+	if (strbuf_read(buf, cmd->out, hint) < 0) {
+		close(cmd->out);
+		finish_command(cmd); /* throw away exit code */
+		return -1;
+	}
+
+	close(cmd->out);
+	return finish_command(cmd);
+}
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/run-command.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/run-command.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/run-command.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/run-command.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/run-command.h	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/run-command.h	2015-05-01 03:12:02.000000000 +0800
@@ -68,12 +68,25 @@
 /*
  * env (the environment) is to be formatted like environ: "VAR=VALUE".
  * To unset an environment variable use just "VAR".
  */
 int run_command_v_opt_cd_env(const char **argv, int opt, const char *dir, const char *const *env);
 
+/**
+ * Execute the given command, capturing its stdout in the given strbuf.
+ * Returns -1 if starting the command fails or reading fails, and otherwise
+ * returns the exit code of the command. The output collected in the
+ * buffer is kept even if the command returns a non-zero exit. The hint field
+ * gives a starting size for the strbuf allocation.
+ *
+ * The fields of "cmd" should be set up as they would for a normal run_command
+ * invocation. But note that there is no need to set cmd->out; the function
+ * sets it up for the caller.
+ */
+int capture_command(struct child_process *cmd, struct strbuf *buf, size_t hint);
+
 /*
  * The purpose of the following functions is to feed a pipe by running
  * a function asynchronously and providing output that the caller reads.
  *
  * It is expected that no synchronization and mutual exclusion between
  * the caller and the feed function is necessary so that the function
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/run-command.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/run-command.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/send-pack.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/send-pack.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/send-pack.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/send-pack.c	2015-05-01 03:12:02.000000000 +0800
@@ -190,29 +190,33 @@
 {
 	if (!is_repository_shallow())
 		return;
 	for_each_commit_graft(advertise_shallow_grafts_cb, sb);
 }
 
-static int ref_update_to_be_sent(const struct ref *ref, const struct send_pack_args *args)
+#define CHECK_REF_NO_PUSH -1
+#define CHECK_REF_STATUS_REJECTED -2
+#define CHECK_REF_UPTODATE -3
+static int check_to_send_update(const struct ref *ref, const struct send_pack_args *args)
 {
 	if (!ref->peer_ref && !args->send_mirror)
-		return 0;
+		return CHECK_REF_NO_PUSH;
 
 	/* Check for statuses set by set_ref_status_for_push() */
 	switch (ref->status) {
 	case REF_STATUS_REJECT_NONFASTFORWARD:
 	case REF_STATUS_REJECT_ALREADY_EXISTS:
 	case REF_STATUS_REJECT_FETCH_FIRST:
 	case REF_STATUS_REJECT_NEEDS_FORCE:
 	case REF_STATUS_REJECT_STALE:
 	case REF_STATUS_REJECT_NODELETE:
+		return CHECK_REF_STATUS_REJECTED;
 	case REF_STATUS_UPTODATE:
-		return 0;
+		return CHECK_REF_UPTODATE;
 	default:
-		return 1;
+		return 0;
 	}
 }
 
 /*
  * the beginning of the next line, or the end of buffer.
  *
@@ -250,13 +254,13 @@
 	}
 	if (push_cert_nonce[0])
 		strbuf_addf(&cert, "nonce %s\n", push_cert_nonce);
 	strbuf_addstr(&cert, "\n");
 
 	for (ref = remote_refs; ref; ref = ref->next) {
-		if (!ref_update_to_be_sent(ref, args))
+		if (check_to_send_update(ref, args) < 0)
 			continue;
 		update_seen = 1;
 		strbuf_addf(&cert, "%s %s %s\n",
 			    sha1_to_hex(ref->old_sha1),
 			    sha1_to_hex(ref->new_sha1),
 			    ref->name);
@@ -278,12 +282,35 @@
 free_return:
 	free(signing_key);
 	strbuf_release(&cert);
 	return update_seen;
 }
 
+
+static int atomic_push_failure(struct send_pack_args *args,
+			       struct ref *remote_refs,
+			       struct ref *failing_ref)
+{
+	struct ref *ref;
+	/* Mark other refs as failed */
+	for (ref = remote_refs; ref; ref = ref->next) {
+		if (!ref->peer_ref && !args->send_mirror)
+			continue;
+
+		switch (ref->status) {
+		case REF_STATUS_EXPECTING_REPORT:
+			ref->status = REF_STATUS_ATOMIC_PUSH_FAILED;
+			continue;
+		default:
+			break; /* do nothing */
+		}
+	}
+	return error("atomic push failed for ref %s. status: %d\n",
+		     failing_ref->name, failing_ref->status);
+}
+
 #define NONCE_LEN_LIMIT 256
 
 static void reject_invalid_nonce(const char *nonce, int len)
 {
 	int i = 0;
 
@@ -316,12 +343,14 @@
 	int need_pack_data = 0;
 	int allow_deleting_refs = 0;
 	int status_report = 0;
 	int use_sideband = 0;
 	int quiet_supported = 0;
 	int agent_supported = 0;
+	int use_atomic = 0;
+	int atomic_supported = 0;
 	unsigned cmds_sent = 0;
 	int ret;
 	struct async demux;
 	const char *push_cert_nonce = NULL;
 
 	/* Does the other end support the reporting? */
@@ -336,12 +365,14 @@
 	if (server_supports("quiet"))
 		quiet_supported = 1;
 	if (server_supports("agent"))
 		agent_supported = 1;
 	if (server_supports("no-thin"))
 		args->use_thin_pack = 0;
+	if (server_supports("atomic"))
+		atomic_supported = 1;
 	if (args->push_cert) {
 		int len;
 
 		push_cert_nonce = server_feature_value("push-cert", &len);
 		if (!push_cert_nonce)
 			die(_("the receiving end does not support --signed push"));
@@ -351,19 +382,25 @@
 
 	if (!remote_refs) {
 		fprintf(stderr, "No refs in common and none specified; doing nothing.\n"
 			"Perhaps you should specify a branch such as 'master'.\n");
 		return 0;
 	}
+	if (args->atomic && !atomic_supported)
+		die(_("the receiving end does not support --atomic push"));
+
+	use_atomic = atomic_supported && args->atomic;
 
 	if (status_report)
 		strbuf_addstr(&cap_buf, " report-status");
 	if (use_sideband)
 		strbuf_addstr(&cap_buf, " side-band-64k");
 	if (quiet_supported && (args->quiet || !args->progress))
 		strbuf_addstr(&cap_buf, " quiet");
+	if (use_atomic)
+		strbuf_addstr(&cap_buf, " atomic");
 	if (agent_supported)
 		strbuf_addf(&cap_buf, " agent=%s", git_user_agent_sanitized());
 
 	/*
 	 * NEEDSWORK: why does delete-refs have to be so specific to
 	 * send-pack machinery that set_ref_status_for_push() cannot
@@ -382,15 +419,27 @@
 
 	/*
 	 * Clear the status for each ref and see if we need to send
 	 * the pack data.
 	 */
 	for (ref = remote_refs; ref; ref = ref->next) {
-		if (!ref_update_to_be_sent(ref, args))
+		switch (check_to_send_update(ref, args)) {
+		case 0: /* no error */
+			break;
+		case CHECK_REF_STATUS_REJECTED:
+			/*
+			 * When we know the server would reject a ref update if
+			 * we were to send it and we're trying to send the refs
+			 * atomically, abort the whole operation.
+			 */
+			if (use_atomic)
+				return atomic_push_failure(args, remote_refs, ref);
+			/* Fallthrough for non atomic case. */
+		default:
 			continue;
-
+		}
 		if (!ref->deletion)
 			need_pack_data = 1;
 
 		if (args->dry_run || !status_report)
 			ref->status = REF_STATUS_OK;
 		else
@@ -403,13 +452,13 @@
 	for (ref = remote_refs; ref; ref = ref->next) {
 		char *old_hex, *new_hex;
 
 		if (args->dry_run || args->push_cert)
 			continue;
 
-		if (!ref_update_to_be_sent(ref, args))
+		if (check_to_send_update(ref, args) < 0)
 			continue;
 
 		old_hex = sha1_to_hex(ref->old_sha1);
 		new_hex = sha1_to_hex(ref->new_sha1);
 		if (!cmds_sent) {
 			packet_buf_write(&req_buf,
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/send-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/send-pack.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/send-pack.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/send-pack.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/send-pack.h	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/send-pack.h	2015-05-01 03:12:02.000000000 +0800
@@ -10,13 +10,14 @@
 		send_mirror:1,
 		force_update:1,
 		use_thin_pack:1,
 		use_ofs_delta:1,
 		dry_run:1,
 		push_cert:1,
-		stateless_rpc:1;
+		stateless_rpc:1,
+		atomic:1;
 };
 
 int send_pack(struct send_pack_args *args,
 	      int fd[], struct child_process *conn,
 	      struct ref *remote_refs, struct sha1_array *extra_have);
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/send-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/send-pack.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sequencer.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sequencer.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sequencer.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sequencer.c	2015-05-01 03:12:02.000000000 +0800
@@ -249,13 +249,13 @@
 	strbuf_addf(&sb, "%s: fast-forward", action_name(opts));
 
 	transaction = ref_transaction_begin(&err);
 	if (!transaction ||
 	    ref_transaction_update(transaction, "HEAD",
 				   to, unborn ? null_sha1 : from,
-				   0, 1, sb.buf, &err) ||
+				   0, sb.buf, &err) ||
 	    ref_transaction_commit(transaction, &err)) {
 		ref_transaction_free(transaction);
 		error("%s", err.buf);
 		strbuf_release(&sb);
 		strbuf_release(&err);
 		return -1;
@@ -370,24 +370,29 @@
  */
 static int run_git_commit(const char *defmsg, struct replay_opts *opts,
 			  int allow_empty)
 {
 	struct argv_array array;
 	int rc;
+	const char *value;
 
 	argv_array_init(&array);
 	argv_array_push(&array, "commit");
 	argv_array_push(&array, "-n");
 
 	if (opts->gpg_sign)
 		argv_array_pushf(&array, "-S%s", opts->gpg_sign);
 	if (opts->signoff)
 		argv_array_push(&array, "-s");
 	if (!opts->edit) {
 		argv_array_push(&array, "-F");
 		argv_array_push(&array, defmsg);
+		if (!opts->signoff &&
+		    !opts->record_origin &&
+		    git_config_get_value("commit.cleanup", &value))
+			argv_array_push(&array, "--cleanup=verbatim");
 	}
 
 	if (allow_empty)
 		argv_array_push(&array, "--allow-empty");
 
 	if (opts->allow_empty_message)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sequencer.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sequencer.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sequencer.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sequencer.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/server-info.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/server-info.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/server-info.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/server-info.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/setup.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/setup.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/setup.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/setup.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1-array.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1-array.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1-array.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1-array.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1_file.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1_file.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1_file.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1_file.c	2015-05-01 03:12:02.000000000 +0800
@@ -374,18 +374,21 @@
 
 void read_info_alternates(const char * relative_base, int depth)
 {
 	char *map;
 	size_t mapsz;
 	struct stat st;
-	char *path;
+	const char alt_file_name[] = "info/alternates";
+	/* Given that relative_base is no longer than PATH_MAX,
+	   ensure that "path" has enough space to append "/", the
+	   file name, "info/alternates", and a trailing NUL.  */
+	char path[PATH_MAX + 1 + sizeof alt_file_name];
 	int fd;
 
-	path = xstrfmt("%s/info/alternates", relative_base);
+	sprintf(path, "%s/%s", relative_base, alt_file_name);
 	fd = git_open_noatime(path);
-	free(path);
 	if (fd < 0)
 		return;
 	if (fstat(fd, &st) || (st.st_size == 0)) {
 		close(fd);
 		return;
 	}
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1_file.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1_file.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1_file.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1_file.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1-lookup.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1-lookup.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1-lookup.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1-lookup.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1_name.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1_name.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sha1_name.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sha1_name.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/shallow.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/shallow.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/shallow.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/shallow.c	2015-05-01 03:12:02.000000000 +0800
@@ -134,13 +134,13 @@
 		}
 	}
 
 	return result;
 }
 
-void check_shallow_file_for_update(void)
+static void check_shallow_file_for_update(void)
 {
 	if (is_shallow == -1)
 		die("BUG: shallow must be initialized by now");
 
 	if (!stat_validity_check(&shallow_stat, git_path("shallow")))
 		die("shallow file has changed since we read it");
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/shallow.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/shallow.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/shallow.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/shallow.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/shell.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/shell.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/shell.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/shell.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sh-i18n--envsubst.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sh-i18n--envsubst.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sh-i18n--envsubst.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sh-i18n--envsubst.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/show-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/show-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/show-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/show-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sideband.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sideband.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sideband.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sideband.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sigchain.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sigchain.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/sigchain.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/sigchain.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/split-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/split-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/split-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/split-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/strbuf.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/strbuf.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/strbuf.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/strbuf.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/strbuf.h	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/strbuf.h	2015-05-01 03:12:02.000000000 +0800
@@ -1,209 +1,513 @@
 #ifndef STRBUF_H
 #define STRBUF_H
 
-/* See Documentation/technical/api-strbuf.txt */
+/**
+ * strbuf's are meant to be used with all the usual C string and memory
+ * APIs. Given that the length of the buffer is known, it's often better to
+ * use the mem* functions than a str* one (memchr vs. strchr e.g.).
+ * Though, one has to be careful about the fact that str* functions often
+ * stop on NULs and that strbufs may have embedded NULs.
+ *
+ * A strbuf is NUL terminated for convenience, but no function in the
+ * strbuf API actually relies on the string being free of NULs.
+ *
+ * strbufs have some invariants that are very important to keep in mind:
+ *
+ *  - The `buf` member is never NULL, so it can be used in any usual C
+ *    string operations safely. strbuf's _have_ to be initialized either by
+ *    `strbuf_init()` or by `= STRBUF_INIT` before the invariants, though.
+ *
+ *    Do *not* assume anything on what `buf` really is (e.g. if it is
+ *    allocated memory or not), use `strbuf_detach()` to unwrap a memory
+ *    buffer from its strbuf shell in a safe way. That is the sole supported
+ *    way. This will give you a malloced buffer that you can later `free()`.
+ *
+ *    However, it is totally safe to modify anything in the string pointed by
+ *    the `buf` member, between the indices `0` and `len-1` (inclusive).
+ *
+ *  - The `buf` member is a byte array that has at least `len + 1` bytes
+ *    allocated. The extra byte is used to store a `'\0'`, allowing the
+ *    `buf` member to be a valid C-string. Every strbuf function ensure this
+ *    invariant is preserved.
+ *
+ *    NOTE: It is OK to "play" with the buffer directly if you work it this
+ *    way:
+ *
+ *        strbuf_grow(sb, SOME_SIZE); <1>
+ *        strbuf_setlen(sb, sb->len + SOME_OTHER_SIZE);
+ *
+ *    <1> Here, the memory array starting at `sb->buf`, and of length
+ *    `strbuf_avail(sb)` is all yours, and you can be sure that
+ *    `strbuf_avail(sb)` is at least `SOME_SIZE`.
+ *
+ *    NOTE: `SOME_OTHER_SIZE` must be smaller or equal to `strbuf_avail(sb)`.
+ *
+ *    Doing so is safe, though if it has to be done in many places, adding the
+ *    missing API to the strbuf module is the way to go.
+ *
+ *    WARNING: Do _not_ assume that the area that is yours is of size `alloc
+ *    - 1` even if it's true in the current implementation. Alloc is somehow a
+ *    "private" member that should not be messed with. Use `strbuf_avail()`
+ *    instead.
+*/
+
+/**
+ * Data Structures
+ * ---------------
+ */
 
-extern char strbuf_slopbuf[];
+/**
+ * This is the string buffer structure. The `len` member can be used to
+ * determine the current length of the string, and `buf` member provides
+ * access to the string itself.
+ */
 struct strbuf {
 	size_t alloc;
 	size_t len;
 	char *buf;
 };
 
+extern char strbuf_slopbuf[];
 #define STRBUF_INIT  { 0, 0, strbuf_slopbuf }
 
-/*----- strbuf life cycle -----*/
+/**
+ * Life Cycle Functions
+ * --------------------
+ */
+
+/**
+ * Initialize the structure. The second parameter can be zero or a bigger
+ * number to allocate memory, in case you want to prevent further reallocs.
+ */
 extern void strbuf_init(struct strbuf *, size_t);
+
+/**
+ * Release a string buffer and the memory it used. You should not use the
+ * string buffer after using this function, unless you initialize it again.
+ */
 extern void strbuf_release(struct strbuf *);
+
+/**
+ * Detach the string from the strbuf and returns it; you now own the
+ * storage the string occupies and it is your responsibility from then on
+ * to release it with `free(3)` when you are done with it.
+ */
 extern char *strbuf_detach(struct strbuf *, size_t *);
+
+/**
+ * Attach a string to a buffer. You should specify the string to attach,
+ * the current length of the string and the amount of allocated memory.
+ * The amount must be larger than the string length, because the string you
+ * pass is supposed to be a NUL-terminated string.  This string _must_ be
+ * malloc()ed, and after attaching, the pointer cannot be relied upon
+ * anymore, and neither be free()d directly.
+ */
 extern void strbuf_attach(struct strbuf *, void *, size_t, size_t);
+
+/**
+ * Swap the contents of two string buffers.
+ */
 static inline void strbuf_swap(struct strbuf *a, struct strbuf *b)
 {
 	struct strbuf tmp = *a;
 	*a = *b;
 	*b = tmp;
 }
 
-/*----- strbuf size related -----*/
+
+/**
+ * Functions related to the size of the buffer
+ * -------------------------------------------
+ */
+
+/**
+ * Determine the amount of allocated but unused memory.
+ */
 static inline size_t strbuf_avail(const struct strbuf *sb)
 {
 	return sb->alloc ? sb->alloc - sb->len - 1 : 0;
 }
 
+/**
+ * Ensure that at least this amount of unused memory is available after
+ * `len`. This is used when you know a typical size for what you will add
+ * and want to avoid repetitive automatic resizing of the underlying buffer.
+ * This is never a needed operation, but can be critical for performance in
+ * some cases.
+ */
 extern void strbuf_grow(struct strbuf *, size_t);
 
+/**
+ * Set the length of the buffer to a given value. This function does *not*
+ * allocate new memory, so you should not perform a `strbuf_setlen()` to a
+ * length that is larger than `len + strbuf_avail()`. `strbuf_setlen()` is
+ * just meant as a 'please fix invariants from this strbuf I just messed
+ * with'.
+ */
 static inline void strbuf_setlen(struct strbuf *sb, size_t len)
 {
 	if (len > (sb->alloc ? sb->alloc - 1 : 0))
 		die("BUG: strbuf_setlen() beyond buffer");
 	sb->len = len;
 	sb->buf[len] = '\0';
 }
+
+/**
+ * Empty the buffer by setting the size of it to zero.
+ */
 #define strbuf_reset(sb)  strbuf_setlen(sb, 0)
 
-/*----- content related -----*/
+
+/**
+ * Functions related to the contents of the buffer
+ * -----------------------------------------------
+ */
+
+/**
+ * Strip whitespace from the beginning (`ltrim`), end (`rtrim`), or both side
+ * (`trim`) of a string.
+ */
 extern void strbuf_trim(struct strbuf *);
 extern void strbuf_rtrim(struct strbuf *);
 extern void strbuf_ltrim(struct strbuf *);
-extern int strbuf_reencode(struct strbuf *sb, const char *from, const char *to);
-extern void strbuf_tolower(struct strbuf *sb);
-extern int strbuf_cmp(const struct strbuf *, const struct strbuf *);
 
-static inline int strbuf_strip_suffix(struct strbuf *sb, const char *suffix)
-{
-	if (strip_suffix_mem(sb->buf, &sb->len, suffix)) {
-		strbuf_setlen(sb, sb->len);
-		return 1;
-	} else
-		return 0;
-}
-
-/*
- * Split str (of length slen) at the specified terminator character.
- * Return a null-terminated array of pointers to strbuf objects
- * holding the substrings.  The substrings include the terminator,
- * except for the last substring, which might be unterminated if the
- * original string did not end with a terminator.  If max is positive,
- * then split the string into at most max substrings (with the last
- * substring containing everything following the (max-1)th terminator
- * character).
- *
- * For lighter-weight alternatives, see string_list_split() and
- * string_list_split_in_place().
+/**
+ * Replace the contents of the strbuf with a reencoded form.  Returns -1
+ * on error, 0 on success.
  */
-extern struct strbuf **strbuf_split_buf(const char *, size_t,
-					int terminator, int max);
+extern int strbuf_reencode(struct strbuf *sb, const char *from, const char *to);
 
-/*
- * Split a NUL-terminated string at the specified terminator
- * character.  See strbuf_split_buf() for more information.
+/**
+ * Lowercase each character in the buffer using `tolower`.
  */
-static inline struct strbuf **strbuf_split_str(const char *str,
-					       int terminator, int max)
-{
-	return strbuf_split_buf(str, strlen(str), terminator, max);
-}
+extern void strbuf_tolower(struct strbuf *sb);
 
-/*
- * Split a strbuf at the specified terminator character.  See
- * strbuf_split_buf() for more information.
+/**
+ * Compare two buffers. Returns an integer less than, equal to, or greater
+ * than zero if the first buffer is found, respectively, to be less than,
+ * to match, or be greater than the second buffer.
  */
-static inline struct strbuf **strbuf_split_max(const struct strbuf *sb,
-						int terminator, int max)
-{
-	return strbuf_split_buf(sb->buf, sb->len, terminator, max);
-}
+extern int strbuf_cmp(const struct strbuf *, const struct strbuf *);
 
-/*
- * Split a strbuf at the specified terminator character.  See
- * strbuf_split_buf() for more information.
- */
-static inline struct strbuf **strbuf_split(const struct strbuf *sb,
-					   int terminator)
-{
-	return strbuf_split_max(sb, terminator, 0);
-}
 
-/*
- * Free a NULL-terminated list of strbufs (for example, the return
- * values of the strbuf_split*() functions).
+/**
+ * Adding data to the buffer
+ * -------------------------
+ *
+ * NOTE: All of the functions in this section will grow the buffer as
+ * necessary.  If they fail for some reason other than memory shortage and the
+ * buffer hadn't been allocated before (i.e. the `struct strbuf` was set to
+ * `STRBUF_INIT`), then they will free() it.
  */
-extern void strbuf_list_free(struct strbuf **);
 
-/*----- add data in your buffer -----*/
+/**
+ * Add a single character to the buffer.
+ */
 static inline void strbuf_addch(struct strbuf *sb, int c)
 {
 	strbuf_grow(sb, 1);
 	sb->buf[sb->len++] = c;
 	sb->buf[sb->len] = '\0';
 }
 
+/**
+ * Add a character the specified number of times to the buffer.
+ */
+extern void strbuf_addchars(struct strbuf *sb, int c, size_t n);
+
+/**
+ * Insert data to the given position of the buffer. The remaining contents
+ * will be shifted, not overwritten.
+ */
 extern void strbuf_insert(struct strbuf *, size_t pos, const void *, size_t);
+
+/**
+ * Remove given amount of data from a given position of the buffer.
+ */
 extern void strbuf_remove(struct strbuf *, size_t pos, size_t len);
 
-/* splice pos..pos+len with given data */
+/**
+ * Remove the bytes between `pos..pos+len` and replace it with the given
+ * data.
+ */
 extern void strbuf_splice(struct strbuf *, size_t pos, size_t len,
                           const void *, size_t);
 
+/**
+ * Add a NUL-terminated string to the buffer. Each line will be prepended
+ * by a comment character and a blank.
+ */
 extern void strbuf_add_commented_lines(struct strbuf *out, const char *buf, size_t size);
 
+
+/**
+ * Add data of given length to the buffer.
+ */
 extern void strbuf_add(struct strbuf *, const void *, size_t);
+
+/**
+ * Add a NUL-terminated string to the buffer.
+ *
+ * NOTE: This function will *always* be implemented as an inline or a macro
+ * using strlen, meaning that this is efficient to write things like:
+ *
+ *     strbuf_addstr(sb, "immediate string");
+ *
+ */
 static inline void strbuf_addstr(struct strbuf *sb, const char *s)
 {
 	strbuf_add(sb, s, strlen(s));
 }
+
+/**
+ * Copy the contents of another buffer at the end of the current one.
+ */
 static inline void strbuf_addbuf(struct strbuf *sb, const struct strbuf *sb2)
 {
 	strbuf_grow(sb, sb2->len);
 	strbuf_add(sb, sb2->buf, sb2->len);
 }
+
+/**
+ * Copy part of the buffer from a given position till a given length to the
+ * end of the buffer.
+ */
 extern void strbuf_adddup(struct strbuf *sb, size_t pos, size_t len);
-extern void strbuf_addchars(struct strbuf *sb, int c, size_t n);
 
+/**
+ * This function can be used to expand a format string containing
+ * placeholders. To that end, it parses the string and calls the specified
+ * function for every percent sign found.
+ *
+ * The callback function is given a pointer to the character after the `%`
+ * and a pointer to the struct strbuf.  It is expected to add the expanded
+ * version of the placeholder to the strbuf, e.g. to add a newline
+ * character if the letter `n` appears after a `%`.  The function returns
+ * the length of the placeholder recognized and `strbuf_expand()` skips
+ * over it.
+ *
+ * The format `%%` is automatically expanded to a single `%` as a quoting
+ * mechanism; callers do not need to handle the `%` placeholder themselves,
+ * and the callback function will not be invoked for this placeholder.
+ *
+ * All other characters (non-percent and not skipped ones) are copied
+ * verbatim to the strbuf.  If the callback returned zero, meaning that the
+ * placeholder is unknown, then the percent sign is copied, too.
+ *
+ * In order to facilitate caching and to make it possible to give
+ * parameters to the callback, `strbuf_expand()` passes a context pointer,
+ * which can be used by the programmer of the callback as she sees fit.
+ */
 typedef size_t (*expand_fn_t) (struct strbuf *sb, const char *placeholder, void *context);
 extern void strbuf_expand(struct strbuf *sb, const char *format, expand_fn_t fn, void *context);
+
+/**
+ * Used as callback for `strbuf_expand()`, expects an array of
+ * struct strbuf_expand_dict_entry as context, i.e. pairs of
+ * placeholder and replacement string.  The array needs to be
+ * terminated by an entry with placeholder set to NULL.
+ */
 struct strbuf_expand_dict_entry {
 	const char *placeholder;
 	const char *value;
 };
 extern size_t strbuf_expand_dict_cb(struct strbuf *sb, const char *placeholder, void *context);
+
+/**
+ * Append the contents of one strbuf to another, quoting any
+ * percent signs ("%") into double-percents ("%%") in the
+ * destination. This is useful for literal data to be fed to either
+ * strbuf_expand or to the *printf family of functions.
+ */
 extern void strbuf_addbuf_percentquote(struct strbuf *dst, const struct strbuf *src);
 
+/**
+ * Append the given byte size as a human-readable string (i.e. 12.23 KiB,
+ * 3.50 MiB).
+ */
+extern void strbuf_humanise_bytes(struct strbuf *buf, off_t bytes);
+
+/**
+ * Add a formatted string to the buffer.
+ */
 __attribute__((format (printf,2,3)))
 extern void strbuf_addf(struct strbuf *sb, const char *fmt, ...);
+
+/**
+ * Add a formatted string prepended by a comment character and a
+ * blank to the buffer.
+ */
 __attribute__((format (printf, 2, 3)))
 extern void strbuf_commented_addf(struct strbuf *sb, const char *fmt, ...);
+
 __attribute__((format (printf,2,0)))
 extern void strbuf_vaddf(struct strbuf *sb, const char *fmt, va_list ap);
 
+/**
+ * Read a given size of data from a FILE* pointer to the buffer.
+ *
+ * NOTE: The buffer is rewound if the read fails. If -1 is returned,
+ * `errno` must be consulted, like you would do for `read(3)`.
+ * `strbuf_read()`, `strbuf_read_file()` and `strbuf_getline()` has the
+ * same behaviour as well.
+ */
+extern size_t strbuf_fread(struct strbuf *, size_t, FILE *);
+
+/**
+ * Read the contents of a given file descriptor. The third argument can be
+ * used to give a hint about the file size, to avoid reallocs.  If read fails,
+ * any partial read is undone.
+ */
+extern ssize_t strbuf_read(struct strbuf *, int fd, size_t hint);
+
+/**
+ * Read the contents of a file, specified by its path. The third argument
+ * can be used to give a hint about the file size, to avoid reallocs.
+ */
+extern int strbuf_read_file(struct strbuf *sb, const char *path, size_t hint);
+
+/**
+ * Read the target of a symbolic link, specified by its path.  The third
+ * argument can be used to give a hint about the size, to avoid reallocs.
+ */
+extern int strbuf_readlink(struct strbuf *sb, const char *path, size_t hint);
+
+/**
+ * Read a line from a FILE *, overwriting the existing contents
+ * of the strbuf. The second argument specifies the line
+ * terminator character, typically `'\n'`.
+ * Reading stops after the terminator or at EOF.  The terminator
+ * is removed from the buffer before returning.  Returns 0 unless
+ * there was nothing left before EOF, in which case it returns `EOF`.
+ */
+extern int strbuf_getline(struct strbuf *, FILE *, int);
+
+/**
+ * Like `strbuf_getline`, but keeps the trailing terminator (if
+ * any) in the buffer.
+ */
+extern int strbuf_getwholeline(struct strbuf *, FILE *, int);
+
+/**
+ * Like `strbuf_getwholeline`, but operates on a file descriptor.
+ * It reads one character at a time, so it is very slow.  Do not
+ * use it unless you need the correct position in the file
+ * descriptor.
+ */
+extern int strbuf_getwholeline_fd(struct strbuf *, int, int);
+
+/**
+ * Set the buffer to the path of the current working directory.
+ */
+extern int strbuf_getcwd(struct strbuf *sb);
+
+/**
+ * Add a path to a buffer, converting a relative path to an
+ * absolute one in the process.  Symbolic links are not
+ * resolved.
+ */
+extern void strbuf_add_absolute_path(struct strbuf *sb, const char *path);
+
+/**
+ * Strip whitespace from a buffer. The second parameter controls if
+ * comments are considered contents to be removed or not.
+ */
+extern void stripspace(struct strbuf *buf, int skip_comments);
+
+static inline int strbuf_strip_suffix(struct strbuf *sb, const char *suffix)
+{
+	if (strip_suffix_mem(sb->buf, &sb->len, suffix)) {
+		strbuf_setlen(sb, sb->len);
+		return 1;
+	} else
+		return 0;
+}
+
+/**
+ * Split str (of length slen) at the specified terminator character.
+ * Return a null-terminated array of pointers to strbuf objects
+ * holding the substrings.  The substrings include the terminator,
+ * except for the last substring, which might be unterminated if the
+ * original string did not end with a terminator.  If max is positive,
+ * then split the string into at most max substrings (with the last
+ * substring containing everything following the (max-1)th terminator
+ * character).
+ *
+ * The most generic form is `strbuf_split_buf`, which takes an arbitrary
+ * pointer/len buffer. The `_str` variant takes a NUL-terminated string,
+ * the `_max` variant takes a strbuf, and just `strbuf_split` is a convenience
+ * wrapper to drop the `max` parameter.
+ *
+ * For lighter-weight alternatives, see string_list_split() and
+ * string_list_split_in_place().
+ */
+extern struct strbuf **strbuf_split_buf(const char *, size_t,
+					int terminator, int max);
+
+static inline struct strbuf **strbuf_split_str(const char *str,
+					       int terminator, int max)
+{
+	return strbuf_split_buf(str, strlen(str), terminator, max);
+}
+
+static inline struct strbuf **strbuf_split_max(const struct strbuf *sb,
+						int terminator, int max)
+{
+	return strbuf_split_buf(sb->buf, sb->len, terminator, max);
+}
+
+static inline struct strbuf **strbuf_split(const struct strbuf *sb,
+					   int terminator)
+{
+	return strbuf_split_max(sb, terminator, 0);
+}
+
+/**
+ * Free a NULL-terminated list of strbufs (for example, the return
+ * values of the strbuf_split*() functions).
+ */
+extern void strbuf_list_free(struct strbuf **);
+
+/**
+ * Launch the user preferred editor to edit a file and fill the buffer
+ * with the file's contents upon the user completing their editing. The
+ * third argument can be used to set the environment which the editor is
+ * run in. If the buffer is NULL the editor is launched as usual but the
+ * file's contents are not read into the buffer upon completion.
+ */
+extern int launch_editor(const char *path, struct strbuf *buffer, const char *const *env);
+
 extern void strbuf_add_lines(struct strbuf *sb, const char *prefix, const char *buf, size_t size);
 
-/*
+/**
  * Append s to sb, with the characters '<', '>', '&' and '"' converted
  * into XML entities.
  */
 extern void strbuf_addstr_xml_quoted(struct strbuf *sb, const char *s);
 
 static inline void strbuf_complete_line(struct strbuf *sb)
 {
 	if (sb->len && sb->buf[sb->len - 1] != '\n')
 		strbuf_addch(sb, '\n');
 }
 
-extern size_t strbuf_fread(struct strbuf *, size_t, FILE *);
-/* XXX: if read fails, any partial read is undone */
-extern ssize_t strbuf_read(struct strbuf *, int fd, size_t hint);
-extern int strbuf_read_file(struct strbuf *sb, const char *path, size_t hint);
-extern int strbuf_readlink(struct strbuf *sb, const char *path, size_t hint);
-extern int strbuf_getcwd(struct strbuf *sb);
-
-extern int strbuf_getwholeline(struct strbuf *, FILE *, int);
-extern int strbuf_getline(struct strbuf *, FILE *, int);
-extern int strbuf_getwholeline_fd(struct strbuf *, int, int);
-
-extern void stripspace(struct strbuf *buf, int skip_comments);
-extern int launch_editor(const char *path, struct strbuf *buffer, const char *const *env);
-
 extern int strbuf_branchname(struct strbuf *sb, const char *name);
 extern int strbuf_check_branch_ref(struct strbuf *sb, const char *name);
 
 extern void strbuf_addstr_urlencode(struct strbuf *, const char *,
 				    int reserved);
-extern void strbuf_humanise_bytes(struct strbuf *buf, off_t bytes);
-
-extern void strbuf_add_absolute_path(struct strbuf *sb, const char *path);
 
 __attribute__((format (printf,1,2)))
 extern int printf_ln(const char *fmt, ...);
 __attribute__((format (printf,2,3)))
 extern int fprintf_ln(FILE *fp, const char *fmt, ...);
 
 char *xstrdup_tolower(const char *);
 
-/*
+/**
  * Create a newly allocated string using printf format. You can do this easily
  * with a strbuf, but this provides a shortcut to save a few lines.
  */
 __attribute__((format (printf, 1, 0)))
 char *xstrvfmt(const char *fmt, va_list ap);
 __attribute__((format (printf, 1, 2)))
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/strbuf.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/strbuf.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/streaming.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/streaming.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/streaming.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/streaming.c	2015-05-01 03:12:02.000000000 +0800
@@ -504,14 +504,17 @@
 	enum object_type type;
 	unsigned long sz;
 	ssize_t kept = 0;
 	int result = -1;
 
 	st = open_istream(sha1, &type, &sz, filter);
-	if (!st)
+	if (!st) {
+		if (filter)
+			free_stream_filter(filter);
 		return result;
+	}
 	if (type != OBJ_BLOB)
 		goto close_and_exit;
 	for (;;) {
 		char buf[1024 * 16];
 		ssize_t wrote, holeto;
 		ssize_t readlen = read_istream(st, buf, sizeof(buf));
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/streaming.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/streaming.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/streaming.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/streaming.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/string-list.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/string-list.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/string-list.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/string-list.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/submodule.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/submodule.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/submodule.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/submodule.c	2015-05-01 03:12:02.000000000 +0800
@@ -573,18 +573,16 @@
 
 		argv[3] = sha1_to_hex(sha1);
 		cp.argv = argv;
 		cp.env = local_repo_env;
 		cp.git_cmd = 1;
 		cp.no_stdin = 1;
-		cp.out = -1;
 		cp.dir = path;
-		if (!run_command(&cp) && !strbuf_read(&buf, cp.out, 1024))
+		if (!capture_command(&cp, &buf, 1024) && !buf.len)
 			is_present = 1;
 
-		close(cp.out);
 		strbuf_release(&buf);
 	}
 	return is_present;
 }
 
 static void submodule_collect_changed_cb(struct diff_queue_struct *q,
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/submodule.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/submodule.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/submodule.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/submodule.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/symlinks.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/symlinks.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/symlinks.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/symlinks.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/annotate-tests.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/annotate-tests.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/annotate-tests.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/annotate-tests.sh	2015-05-01 03:12:02.000000000 +0800
@@ -402,13 +402,13 @@
 	GIT_AUTHOR_NAME="G" GIT_AUTHOR_EMAIL="G@test.git" \
 	git commit -a -m "goodbye" &&
 
 	mv hello.c hello.orig &&
 	echo "#include <stdio.h>" >hello.c &&
 	cat hello.orig >>hello.c &&
-	tr Q "\\t" >>hello.c <<-\EOF
+	tr Q "\\t" >>hello.c <<-\EOF &&
 	void mail()
 	{
 	Qputs("mail");
 	}
 	EOF
 	GIT_AUTHOR_NAME="H" GIT_AUTHOR_EMAIL="H@test.git" \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/lib-httpd/apache.conf /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/lib-httpd/apache.conf
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/lib-httpd/apache.conf	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/lib-httpd/apache.conf	2015-05-01 03:12:02.000000000 +0800
@@ -116,16 +116,12 @@
 
 RewriteEngine on
 RewriteRule ^/smart-redir-perm/(.*)$ /smart/$1 [R=301]
 RewriteRule ^/smart-redir-temp/(.*)$ /smart/$1 [R=302]
 RewriteRule ^/smart-redir-auth/(.*)$ /auth/smart/$1 [R=301]
 RewriteRule ^/smart-redir-limited/(.*)/info/refs$ /smart/$1/info/refs [R=301]
-RewriteRule ^/ftp-redir/(.*)$ ftp://localhost:1000/$1 [R=302]
-
-RewriteRule ^/loop-redir/x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-(.*) /$1 [R=302]
-RewriteRule ^/loop-redir/(.*)$ /loop-redir/x-$1 [R=302]
 
 <IfDefine SSL>
 LoadModule ssl_module modules/mod_ssl.so
 
 SSLCertificateFile httpd.pem
 SSLCertificateKeyFile httpd.pem
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t: lib-proto-disable.sh
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/lib-terminal.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/lib-terminal.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/lib-terminal.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/lib-terminal.sh	2015-05-01 03:12:02.000000000 +0800
@@ -1,10 +1,10 @@
 # Helpers for terminal output tests.
 
 # Catch tests which should depend on TTY but forgot to. There's no need
-# to aditionally check that the TTY prereq is set here.  If the test declared
+# to additionally check that the TTY prereq is set here.  If the test declared
 # it and we are running the test, then it must have been set.
 test_terminal () {
 	if ! test_declared_prereq TTY
 	then
 		echo >&4 "test_terminal: need to declare TTY prerequisite"
 		return 127
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/perf/perf-lib.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/perf/perf-lib.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/perf/perf-lib.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/perf/perf-lib.sh	2015-05-01 03:12:02.000000000 +0800
@@ -88,13 +88,13 @@
 			cp -R "$source_git/objects" .; } &&
 		for stuff in "$source_git"/*; do
 			case "$stuff" in
 				*/objects|*/hooks|*/config)
 					;;
 				*)
-					cp -R "$stuff" . || break
+					cp -R "$stuff" . || exit 1
 					;;
 			esac
 		done &&
 		cd .. &&
 		git init -q &&
 		mv .git/hooks .git/hooks-disabled 2>/dev/null
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/README /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/README
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/README	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/README	2015-05-01 03:12:02.000000000 +0800
@@ -165,12 +165,22 @@
 --root=<directory>::
 	Create "trash" directories used to store all temporary data during
 	testing under <directory>, instead of the t/ directory.
 	Using this option with a RAM-based filesystem (such as tmpfs)
 	can massively speed up the test suite.
 
+--chain-lint::
+--no-chain-lint::
+	If --chain-lint is enabled, the test harness will check each
+	test to make sure that it properly "&&-chains" all commands (so
+	that a failure in the middle does not go unnoticed by the final
+	exit code of the test). This check is performed in addition to
+	running the tests themselves. You may also enable or disable
+	this feature by setting the GIT_TEST_CHAIN_LINT environment
+	variable to "1" or "0", respectively.
+
 You can also set the GIT_TEST_INSTALLED environment variable to
 the bindir of an existing git installation to test that installation.
 You still need to have built this git sandbox, from which various
 test-* support programs, templates, and perl libraries are used.
 If your installed git is incomplete, it will silently test parts of
 your built version instead.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t0000-basic.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t0000-basic.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t0000-basic.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t0000-basic.sh	2015-05-01 03:12:02.000000000 +0800
@@ -250,13 +250,13 @@
 		test-verbose "test verbose" --verbose <<-\EOF &&
 	test_expect_success "passing test" true
 	test_expect_success "test with output" "echo foo"
 	test_expect_success "failing test" false
 	test_done
 	EOF
-	mv test-verbose/out test-verbose/out+
+	mv test-verbose/out test-verbose/out+ &&
 	grep -v "^Initialized empty" test-verbose/out+ >test-verbose/out &&
 	check_sub_test_lib_test test-verbose <<-\EOF
 	> expecting success: true
 	> ok 1 - passing test
 	> Z
 	> expecting success: echo foo
@@ -971,13 +971,13 @@
 	git write-tree --missing-ok
 '
 
 
 ################################################################
 test_expect_success 'git read-tree followed by write-tree should be idempotent' '
-	rm -f .git/index
+	rm -f .git/index &&
 	git read-tree $tree &&
 	test -f .git/index &&
 	newtree=$(git write-tree) &&
 	test "$newtree" = "$tree"
 '
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t0005-signals.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t0005-signals.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t0005-signals.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t0005-signals.sh	2015-05-01 03:12:02.000000000 +0800
@@ -7,14 +7,14 @@
 three
 two
 one
 EOF
 
 test_expect_success 'sigchain works' '
-	test-sigchain >actual
-	case "$?" in
+	{ test-sigchain >actual; ret=$?; } &&
+	case "$ret" in
 	143) true ;; # POSIX w/ SIGTERM=15
 	271) true ;; # ksh w/ SIGTERM=15
 	  3) true ;; # Windows
 	  *) false ;;
 	esac &&
 	test_cmp expect actual
@@ -37,16 +37,16 @@
 test_expect_success 'create blob' '
 	test-genrandom foo 16384 >file &&
 	git add file
 '
 
 test_expect_success !MINGW 'a constipated git dies with SIGPIPE' '
-	OUT=$( ((large_git; echo $? 1>&3) | :) 3>&1 )
+	OUT=$( ((large_git; echo $? 1>&3) | :) 3>&1 ) &&
 	test "$OUT" -eq 141
 '
 
 test_expect_success !MINGW 'a constipated git dies with SIGPIPE even if parent ignores it' '
-	OUT=$( ((trap "" PIPE; large_git; echo $? 1>&3) | :) 3>&1 )
+	OUT=$( ((trap "" PIPE; large_git; echo $? 1>&3) | :) 3>&1 ) &&
 	test "$OUT" -eq 141
 '
 
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t0011-hashmap.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t0011-hashmap.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t0011-hashmap.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t0011-hashmap.sh	2015-05-01 03:12:02.000000000 +0800
@@ -215,13 +215,13 @@
 		echo put key$n value$n >> in &&
 		echo NULL >> expect
 	done &&
 	echo size >> in &&
 	echo 64 51 >> expect &&
 	echo put key52 value52 >> in &&
-	echo NULL >> expect
+	echo NULL >> expect &&
 	echo size >> in &&
 	echo 256 52 >> expect &&
 	for n in $(test_seq 12)
 	do
 		echo remove key$n >> in &&
 		echo value$n >> expect
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t0020-crlf.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t0020-crlf.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t0020-crlf.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t0020-crlf.sh	2015-05-01 03:12:02.000000000 +0800
@@ -5,12 +5,19 @@
 . ./test-lib.sh
 
 has_cr() {
 	tr '\015' Q <"$1" | grep Q >/dev/null
 }
 
+# add or remove CRs to disk file in-place
+# usage: munge_cr <append|remove> <file>
+munge_cr () {
+	"${1}_cr" <"$2" >tmp &&
+	mv tmp "$2"
+}
+
 test_expect_success setup '
 
 	git config core.autocrlf false &&
 
 	for w in Hello world how are you; do echo $w; done >one &&
 	mkdir dir &&
@@ -25,15 +32,13 @@
 	two=$(git rev-parse HEAD:dir/two) &&
 	three=$(git rev-parse HEAD:three) &&
 
 	for w in Some extra lines here; do echo $w; done >>one &&
 	git diff >patch.file &&
 	patched=$(git hash-object --stdin <one) &&
-	git read-tree --reset -u HEAD &&
-
-	echo happy.
+	git read-tree --reset -u HEAD
 '
 
 test_expect_success 'safecrlf: autocrlf=input, all CRLF' '
 
 	git config core.autocrlf input &&
 	git config core.safecrlf true &&
@@ -97,334 +102,197 @@
 
 test_expect_success 'update with autocrlf=input' '
 
 	rm -f tmp one dir/two three &&
 	git read-tree --reset -u HEAD &&
 	git config core.autocrlf input &&
-
-	for f in one dir/two
-	do
-		append_cr <$f >tmp && mv -f tmp $f &&
-		git update-index -- $f || {
-			echo Oops
-			false
-			break
-		}
-	done &&
-
+	munge_cr append one &&
+	munge_cr append dir/two &&
+	git update-index -- one dir/two &&
 	differs=$(git diff-index --cached HEAD) &&
-	test -z "$differs" || {
-		echo Oops "$differs"
-		false
-	}
+	verbose test -z "$differs"
 
 '
 
 test_expect_success 'update with autocrlf=true' '
 
 	rm -f tmp one dir/two three &&
 	git read-tree --reset -u HEAD &&
 	git config core.autocrlf true &&
-
-	for f in one dir/two
-	do
-		append_cr <$f >tmp && mv -f tmp $f &&
-		git update-index -- $f || {
-			echo "Oops $f"
-			false
-			break
-		}
-	done &&
-
+	munge_cr append one &&
+	munge_cr append dir/two &&
+	git update-index -- one dir/two &&
 	differs=$(git diff-index --cached HEAD) &&
-	test -z "$differs" || {
-		echo Oops "$differs"
-		false
-	}
+	verbose test -z "$differs"
 
 '
 
 test_expect_success 'checkout with autocrlf=true' '
 
 	rm -f tmp one dir/two three &&
 	git config core.autocrlf true &&
 	git read-tree --reset -u HEAD &&
-
-	for f in one dir/two
-	do
-		remove_cr <"$f" >tmp && mv -f tmp $f &&
-		git update-index -- $f || {
-			echo "Eh? $f"
-			false
-			break
-		}
-	done &&
+	munge_cr remove one &&
+	munge_cr remove dir/two &&
+	git update-index -- one dir/two &&
 	test "$one" = $(git hash-object --stdin <one) &&
 	test "$two" = $(git hash-object --stdin <dir/two) &&
 	differs=$(git diff-index --cached HEAD) &&
-	test -z "$differs" || {
-		echo Oops "$differs"
-		false
-	}
+	verbose test -z "$differs"
 '
 
 test_expect_success 'checkout with autocrlf=input' '
 
 	rm -f tmp one dir/two three &&
 	git config core.autocrlf input &&
 	git read-tree --reset -u HEAD &&
-
-	for f in one dir/two
-	do
-		if has_cr "$f"
-		then
-			echo "Eh? $f"
-			false
-			break
-		else
-			git update-index -- $f
-		fi
-	done &&
+	test_must_fail has_cr one &&
+	test_must_fail has_cr two &&
+	git update-index -- one dir/two &&
 	test "$one" = $(git hash-object --stdin <one) &&
 	test "$two" = $(git hash-object --stdin <dir/two) &&
 	differs=$(git diff-index --cached HEAD) &&
-	test -z "$differs" || {
-		echo Oops "$differs"
-		false
-	}
+	verbose test -z "$differs"
 '
 
 test_expect_success 'apply patch (autocrlf=input)' '
 
 	rm -f tmp one dir/two three &&
 	git config core.autocrlf input &&
 	git read-tree --reset -u HEAD &&
 
 	git apply patch.file &&
-	test "$patched" = "$(git hash-object --stdin <one)" || {
-		echo "Eh?  apply without index"
-		false
-	}
+	verbose test "$patched" = "$(git hash-object --stdin <one)"
 '
 
 test_expect_success 'apply patch --cached (autocrlf=input)' '
 
 	rm -f tmp one dir/two three &&
 	git config core.autocrlf input &&
 	git read-tree --reset -u HEAD &&
 
 	git apply --cached patch.file &&
-	test "$patched" = $(git rev-parse :one) || {
-		echo "Eh?  apply with --cached"
-		false
-	}
+	verbose test "$patched" = $(git rev-parse :one)
 '
 
 test_expect_success 'apply patch --index (autocrlf=input)' '
 
 	rm -f tmp one dir/two three &&
 	git config core.autocrlf input &&
 	git read-tree --reset -u HEAD &&
 
 	git apply --index patch.file &&
-	test "$patched" = $(git rev-parse :one) &&
-	test "$patched" = $(git hash-object --stdin <one) || {
-		echo "Eh?  apply with --index"
-		false
-	}
+	verbose test "$patched" = $(git rev-parse :one) &&
+	verbose test "$patched" = $(git hash-object --stdin <one)
 '
 
 test_expect_success 'apply patch (autocrlf=true)' '
 
 	rm -f tmp one dir/two three &&
 	git config core.autocrlf true &&
 	git read-tree --reset -u HEAD &&
 
 	git apply patch.file &&
-	test "$patched" = "$(remove_cr <one | git hash-object --stdin)" || {
-		echo "Eh?  apply without index"
-		false
-	}
+	verbose test "$patched" = "$(remove_cr <one | git hash-object --stdin)"
 '
 
 test_expect_success 'apply patch --cached (autocrlf=true)' '
 
 	rm -f tmp one dir/two three &&
 	git config core.autocrlf true &&
 	git read-tree --reset -u HEAD &&
 
 	git apply --cached patch.file &&
-	test "$patched" = $(git rev-parse :one) || {
-		echo "Eh?  apply without index"
-		false
-	}
+	verbose test "$patched" = $(git rev-parse :one)
 '
 
 test_expect_success 'apply patch --index (autocrlf=true)' '
 
 	rm -f tmp one dir/two three &&
 	git config core.autocrlf true &&
 	git read-tree --reset -u HEAD &&
 
 	git apply --index patch.file &&
-	test "$patched" = $(git rev-parse :one) &&
-	test "$patched" = "$(remove_cr <one | git hash-object --stdin)" || {
-		echo "Eh?  apply with --index"
-		false
-	}
+	verbose test "$patched" = $(git rev-parse :one) &&
+	verbose test "$patched" = "$(remove_cr <one | git hash-object --stdin)"
 '
 
 test_expect_success '.gitattributes says two is binary' '
 
 	rm -f tmp one dir/two three &&
 	echo "two -crlf" >.gitattributes &&
 	git config core.autocrlf true &&
 	git read-tree --reset -u HEAD &&
 
-	if has_cr dir/two
-	then
-		echo "Huh?"
-		false
-	else
-		: happy
-	fi &&
-
-	if has_cr one
-	then
-		: happy
-	else
-		echo "Huh?"
-		false
-	fi &&
-
-	if has_cr three
-	then
-		echo "Huh?"
-		false
-	else
-		: happy
-	fi
+	test_must_fail has_cr dir/two &&
+	verbose has_cr one &&
+	test_must_fail has_cr three
 '
 
 test_expect_success '.gitattributes says two is input' '
 
 	rm -f tmp one dir/two three &&
 	echo "two crlf=input" >.gitattributes &&
 	git read-tree --reset -u HEAD &&
 
-	if has_cr dir/two
-	then
-		echo "Huh?"
-		false
-	else
-		: happy
-	fi
+	test_must_fail has_cr dir/two
 '
 
 test_expect_success '.gitattributes says two and three are text' '
 
 	rm -f tmp one dir/two three &&
 	echo "t* crlf" >.gitattributes &&
 	git read-tree --reset -u HEAD &&
 
-	if has_cr dir/two
-	then
-		: happy
-	else
-		echo "Huh?"
-		false
-	fi &&
-
-	if has_cr three
-	then
-		: happy
-	else
-		echo "Huh?"
-		false
-	fi
+	verbose has_cr dir/two &&
+	verbose has_cr three
 '
 
 test_expect_success 'in-tree .gitattributes (1)' '
 
 	echo "one -crlf" >>.gitattributes &&
 	git add .gitattributes &&
 	git commit -m "Add .gitattributes" &&
 
 	rm -rf tmp one dir .gitattributes patch.file three &&
 	git read-tree --reset -u HEAD &&
 
-	if has_cr one
-	then
-		echo "Eh? one should not have CRLF"
-		false
-	else
-		: happy
-	fi &&
-	has_cr three || {
-		echo "Eh? three should still have CRLF"
-		false
-	}
+	test_must_fail has_cr one &&
+	verbose has_cr three
 '
 
 test_expect_success 'in-tree .gitattributes (2)' '
 
 	rm -rf tmp one dir .gitattributes patch.file three &&
 	git read-tree --reset HEAD &&
 	git checkout-index -f -q -u -a &&
 
-	if has_cr one
-	then
-		echo "Eh? one should not have CRLF"
-		false
-	else
-		: happy
-	fi &&
-	has_cr three || {
-		echo "Eh? three should still have CRLF"
-		false
-	}
+	test_must_fail has_cr one &&
+	verbose has_cr three
 '
 
 test_expect_success 'in-tree .gitattributes (3)' '
 
 	rm -rf tmp one dir .gitattributes patch.file three &&
 	git read-tree --reset HEAD &&
 	git checkout-index -u .gitattributes &&
 	git checkout-index -u one dir/two three &&
 
-	if has_cr one
-	then
-		echo "Eh? one should not have CRLF"
-		false
-	else
-		: happy
-	fi &&
-	has_cr three || {
-		echo "Eh? three should still have CRLF"
-		false
-	}
+	test_must_fail has_cr one &&
+	verbose has_cr three
 '
 
 test_expect_success 'in-tree .gitattributes (4)' '
 
 	rm -rf tmp one dir .gitattributes patch.file three &&
 	git read-tree --reset HEAD &&
 	git checkout-index -u one dir/two three &&
 	git checkout-index -u .gitattributes &&
 
-	if has_cr one
-	then
-		echo "Eh? one should not have CRLF"
-		false
-	else
-		: happy
-	fi &&
-	has_cr three || {
-		echo "Eh? three should still have CRLF"
-		false
-	}
+	test_must_fail has_cr one &&
+	verbose has_cr three
 '
 
 test_expect_success 'checkout with existing .gitattributes' '
 
 	git config core.autocrlf true &&
 	git config --unset core.safecrlf &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t0040-parse-options.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t0040-parse-options.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t0040-parse-options.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t0040-parse-options.sh	2015-05-01 03:12:02.000000000 +0800
@@ -169,18 +169,15 @@
 		--obsolete > output 2> output.err &&
 	test_must_be_empty output.err &&
 	test_cmp expect output
 '
 
 test_expect_success 'missing required value' '
-	test-parse-options -s;
-	test $? = 129 &&
-	test-parse-options --string;
-	test $? = 129 &&
-	test-parse-options --file;
-	test $? = 129
+	test_expect_code 129 test-parse-options -s &&
+	test_expect_code 129 test-parse-options --string &&
+	test_expect_code 129 test-parse-options --file
 '
 
 cat > expect << EOF
 boolean: 1
 integer: 13
 timestamp: 0
@@ -224,14 +221,13 @@
 	test-parse-options --int=2 > output 2> output.err &&
 	test_must_be_empty output.err &&
 	test_cmp expect output
 '
 
 test_expect_success 'ambiguously abbreviated option' '
-	test-parse-options --strin 123;
-	test $? = 129
+	test_expect_code 129 test-parse-options --strin 123
 '
 
 cat > expect << EOF
 boolean: 0
 integer: 0
 timestamp: 0
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t0050-filesystem.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t0050-filesystem.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t0050-filesystem.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t0050-filesystem.sh	2015-05-01 03:12:02.000000000 +0800
@@ -30,22 +30,26 @@
 then
 test_expect_success "detection of case insensitive filesystem during repo init" '
 	test $(git config --bool core.ignorecase) = true
 '
 else
 test_expect_success "detection of case insensitive filesystem during repo init" '
-	test_must_fail git config --bool core.ignorecase >/dev/null ||
-	test $(git config --bool core.ignorecase) = false
+	{
+		test_must_fail git config --bool core.ignorecase >/dev/null ||
+			test $(git config --bool core.ignorecase) = false
+	}
 '
 fi
 
 if test_have_prereq SYMLINKS
 then
 test_expect_success "detection of filesystem w/o symlink support during repo init" '
-	test_must_fail git config --bool core.symlinks ||
-	test "$(git config --bool core.symlinks)" = true
+	{
+		test_must_fail git config --bool core.symlinks ||
+		test "$(git config --bool core.symlinks)" = true
+	}
 '
 else
 test_expect_success "detection of filesystem w/o symlink support during repo init" '
 	v=$(git config --bool core.symlinks) &&
 	test "$v" = false
 '
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t0062-revision-walking.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t0062-revision-walking.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t0062-revision-walking.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t0062-revision-walking.sh	2015-05-01 03:12:02.000000000 +0800
@@ -23,11 +23,11 @@
 	echo b > b &&
 	git add b &&
 	git commit -m "add b"
 '
 
 test_expect_success 'revision walking can be done twice' '
-	test-revision-walking run-twice > run_twice_actual
+	test-revision-walking run-twice >run_twice_actual &&
 	test_cmp run_twice_expected run_twice_actual
 '
 
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t0201-gettext-fallbacks.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t0201-gettext-fallbacks.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t0201-gettext-fallbacks.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t0201-gettext-fallbacks.sh	2015-05-01 03:12:02.000000000 +0800
@@ -47,21 +47,21 @@
     GIT_INTERNAL_GETTEXT_TEST_FALLBACKS=YesPlease eval_gettext "test \$GIT_INTERNAL_GETTEXT_TEST_FALLBACKS" >actual &&
     test_i18ncmp expect actual
 '
 
 test_expect_success 'eval_gettext: our eval_gettext() fallback can interpolate variables with spaces' '
     cmdline="git am" &&
-    export cmdline;
+    export cmdline &&
     printf "When you have resolved this problem, run git am --resolved." >expect &&
-    eval_gettext "When you have resolved this problem, run \$cmdline --resolved." >actual
+    eval_gettext "When you have resolved this problem, run \$cmdline --resolved." >actual &&
     test_i18ncmp expect actual
 '
 
 test_expect_success 'eval_gettext: our eval_gettext() fallback can interpolate variables with spaces and quotes' '
     cmdline="git am" &&
-    export cmdline;
+    export cmdline &&
     printf "When you have resolved this problem, run \"git am --resolved\"." >expect &&
-    eval_gettext "When you have resolved this problem, run \"\$cmdline --resolved\"." >actual
+    eval_gettext "When you have resolved this problem, run \"\$cmdline --resolved\"." >actual &&
     test_i18ncmp expect actual
 '
 
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t1002-read-tree-m-u-2way.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t1002-read-tree-m-u-2way.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t1002-read-tree-m-u-2way.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t1002-read-tree-m-u-2way.sh	2015-05-01 03:12:02.000000000 +0800
@@ -72,14 +72,14 @@
     'rm -f .git/index nitfol bozbar rezrov frotz &&
      read_tree_u_must_succeed --reset -u $treeH &&
      echo "+100644 X 0	yomin" >expected &&
      echo yomin >yomin &&
      git update-index --add yomin &&
      read_tree_u_must_succeed -m -u $treeH $treeM &&
-     git ls-files --stage >4.out || return 1
-     git diff -U0 --no-index M.out 4.out >4diff.out
+     git ls-files --stage >4.out &&
+     test_might_fail git diff -U0 --no-index M.out 4.out >4diff.out &&
      compare_change 4diff.out expected &&
      check_cache_at yomin clean &&
      sum bozbar frotz nitfol >actual4.sum &&
      cmp M.sum actual4.sum &&
      echo yomin >yomin1 &&
      diff yomin yomin1 &&
@@ -91,14 +91,14 @@
      read_tree_u_must_succeed --reset -u $treeH &&
      read_tree_u_must_succeed -m -u $treeH &&
      echo yomin >yomin &&
      git update-index --add yomin &&
      echo yomin yomin >yomin &&
      read_tree_u_must_succeed -m -u $treeH $treeM &&
-     git ls-files --stage >5.out || return 1
-     git diff -U0 --no-index M.out 5.out >5diff.out
+     git ls-files --stage >5.out &&
+     test_might_fail git diff -U0 --no-index M.out 5.out >5diff.out &&
      compare_change 5diff.out expected &&
      check_cache_at yomin dirty &&
      sum bozbar frotz nitfol >actual5.sum &&
      cmp M.sum actual5.sum &&
      : dirty index should have prevented -u from checking it out. &&
      echo yomin yomin >yomin1 &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t1006-cat-file.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t1006-cat-file.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t1006-cat-file.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t1006-cat-file.sh	2015-05-01 03:12:02.000000000 +0800
@@ -271,13 +271,13 @@
 	HEAD:foo
 	HEAD:foo-plus
 	EOF
 '
 
 test_expect_success 'confirm that neither loose blob is a delta' '
-	cat >expect <<-EOF
+	cat >expect <<-EOF &&
 	$_z40
 	$_z40
 	EOF
 	git cat-file --batch-check="%(deltabase)" <blobs >actual &&
 	test_cmp expect actual
 '
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t1300-repo-config.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t1300-repo-config.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t1300-repo-config.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t1300-repo-config.sh	2015-05-01 03:12:02.000000000 +0800
@@ -674,13 +674,13 @@
 
 test_expect_success 'invalid unit' '
 	git config aninvalid.unit "1auto" &&
 	echo 1auto >expect &&
 	git config aninvalid.unit >actual &&
 	test_cmp expect actual &&
-	cat >expect <<-\EOF
+	cat >expect <<-\EOF &&
 	fatal: bad numeric config value '\''1auto'\'' for '\''aninvalid.unit'\'' in .git/config: invalid unit
 	EOF
 	test_must_fail git config --int --get aninvalid.unit 2>actual &&
 	test_i18ncmp expect actual
 '
 
@@ -1162,13 +1162,13 @@
 
 	q_to_tab >expect <<-\EOF &&
 	[section]
 	Qkey = value
 	EOF
 
-	git config section.key value
+	git config section.key value &&
 	test_cmp expect .git/config
 '
 
 test_expect_success POSIXPERM,PERL 'preserves existing permissions' '
 	chmod 0600 .git/config &&
 	git config imap.pass Hunter2 &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t1301-shared-repo.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t1301-shared-repo.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t1301-shared-repo.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t1301-shared-repo.sh	2015-05-01 03:12:02.000000000 +0800
@@ -9,18 +9,17 @@
 
 # Remove a default ACL from the test dir if possible.
 setfacl -k . 2>/dev/null
 
 # User must have read permissions to the repo -> failure on --shared=0400
 test_expect_success 'shared = 0400 (faulty permission u-w)' '
+	test_when_finished "rm -rf sub" &&
 	mkdir sub && (
-		cd sub && git init --shared=0400
+		cd sub &&
+		test_must_fail git init --shared=0400
 	)
-	ret="$?"
-	rm -rf sub
-	test $ret != "0"
 '
 
 modebits () {
 	ls -l "$1" | sed -e 's|^\(..........\).*|\1|'
 }
 
@@ -30,13 +29,13 @@
 		mkdir sub && (
 			cd sub &&
 			umask $u &&
 			git init --shared=1 &&
 			test 1 = "$(git config core.sharedrepository)"
 		) &&
-		actual=$(ls -l sub/.git/HEAD)
+		actual=$(ls -l sub/.git/HEAD) &&
 		case "$actual" in
 		-rw-rw-r--*)
 			: happy
 			;;
 		*)
 			echo Oops, .git/HEAD is not 0664 but $actual
@@ -87,28 +86,23 @@
 
 	test_expect_success POSIXPERM "shared = $u ($y) ro" '
 
 		rm -f .git/info/refs &&
 		git update-server-info &&
 		actual="$(modebits .git/info/refs)" &&
-		test "x$actual" = "x-$y" || {
-			ls -lt .git/info
-			false
-		}
+		verbose test "x$actual" = "x-$y"
+
 	'
 
 	umask 077 &&
 	test_expect_success POSIXPERM "shared = $u ($x) rw" '
 
 		rm -f .git/info/refs &&
 		git update-server-info &&
 		actual="$(modebits .git/info/refs)" &&
-		test "x$actual" = "x-$x" || {
-			ls -lt .git/info
-			false
-		}
+		verbose test "x$actual" = "x-$x"
 
 	'
 
 done
 
 test_expect_success POSIXPERM 'info/refs respects umask in unshared repo' '
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t1403-show-ref.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t1403-show-ref.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t1403-show-ref.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t1403-show-ref.sh	2015-05-01 03:12:02.000000000 +0800
@@ -25,13 +25,13 @@
 
 	git show-ref refs/tags/A >actual &&
 	test_cmp expect actual &&
 
 	>expect &&
 
-	test_must_fail git show-ref D >actual
+	test_must_fail git show-ref D >actual &&
 	test_cmp expect actual
 '
 
 test_expect_success 'show-ref -q' '
 	>expect &&
 
@@ -59,13 +59,13 @@
 	test_must_fail git show-ref --verify A >actual &&
 	test_cmp expect actual &&
 
 	test_must_fail git show-ref --verify tags/A >actual &&
 	test_cmp expect actual &&
 
-	test_must_fail git show-ref --verify D >actual
+	test_must_fail git show-ref --verify D >actual &&
 	test_cmp expect actual
 '
 
 test_expect_success 'show-ref --verify -q' '
 	>expect &&
 
@@ -75,13 +75,13 @@
 	test_must_fail git show-ref --verify -q A >actual &&
 	test_cmp expect actual &&
 
 	test_must_fail git show-ref --verify -q tags/A >actual &&
 	test_cmp expect actual &&
 
-	test_must_fail git show-ref --verify -q D >actual
+	test_must_fail git show-ref --verify -q D >actual &&
 	test_cmp expect actual
 '
 
 test_expect_success 'show-ref -d' '
 	{
 		echo $(git rev-parse refs/tags/A) refs/tags/A &&
@@ -102,16 +102,16 @@
 	test_cmp expect actual &&
 
 	git show-ref -d heads/master >actual &&
 	test_cmp expect actual &&
 
 	git show-ref -d refs/heads/master >actual &&
-	test_cmp expect actual
+	test_cmp expect actual &&
 
 	git show-ref -d --verify refs/heads/master >actual &&
-	test_cmp expect actual
+	test_cmp expect actual &&
 
 	>expect &&
 
 	test_must_fail git show-ref -d --verify master >actual &&
 	test_cmp expect actual &&
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t1700-split-index.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t1700-split-index.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t1700-split-index.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t1700-split-index.sh	2015-05-01 03:12:02.000000000 +0800
@@ -188,13 +188,13 @@
 	git update-index --no-split-index &&
 	git ls-files --stage >ls-files.actual &&
 	cat >ls-files.expect <<EOF &&
 100644 e69de29bb2d1d6434b8b29ae775ad8c2e48c5391 0	one
 100644 e69de29bb2d1d6434b8b29ae775ad8c2e48c5391 0	two
 EOF
-	test_cmp ls-files.expect ls-files.actual
+	test_cmp ls-files.expect ls-files.actual &&
 
 	test-dump-split-index .git/index | sed "/^own/d" >actual &&
 	cat >expect <<EOF &&
 not a split index
 EOF
 	test_cmp expect actual
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t3001-ls-files-others-exclude.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t3001-ls-files-others-exclude.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t3001-ls-files-others-exclude.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t3001-ls-files-others-exclude.sh	2015-05-01 03:12:02.000000000 +0800
@@ -291,13 +291,13 @@
 	cat <<\EOF >expect &&
 a.1
 one/a.1
 one/two/a.1
 three/a.1
 EOF
-	git ls-files -o -i --exclude "**/a.1" >actual
+	git ls-files -o -i --exclude "**/a.1" >actual &&
 	test_cmp expect actual
 '
 
 
 test_expect_success 'ls-files with "**" patterns and no slashes' '
 	: >expect &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t3010-ls-files-killed-modified.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t3010-ls-files-killed-modified.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t3010-ls-files-killed-modified.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t3010-ls-files-killed-modified.sh	2015-05-01 03:12:02.000000000 +0800
@@ -52,20 +52,17 @@
 	>pathx/ju &&
 	: >path7 &&
 	date >path8 &&
 	: >path9 &&
 	date >path10 &&
 	git update-index --add -- path0 path?/file? pathx/ju path7 path8 path9 path10 &&
-	for i in 1 2
-	do
-		git init submod$i &&
-		(
-			cd submod$i && git commit --allow-empty -m "empty $i"
-		) || break
-	done &&
-	git update-index --add submod[12]
+	git init submod1 &&
+	git -C submod1 commit --allow-empty -m "empty 1" &&
+	git init submod2 &&
+	git -C submod2 commit --allow-empty -m "empty 2" &&
+	git update-index --add submod[12] &&
 	(
 		cd submod1 &&
 		git commit --allow-empty -m "empty 1 (updated)"
 	) &&
 	rm -fr path?	# leave path10 alone
 '
@@ -96,18 +93,18 @@
 	path3
 	pathx/ju/nk
 	EOF
 '
 
 test_expect_success 'git ls-files -k output (w/o icase)' '
-	git ls-files -k >.output
+	git ls-files -k >.output &&
 	test_cmp .expected .output
 '
 
 test_expect_success 'git ls-files -k output (w/ icase)' '
-	git -c core.ignorecase=true ls-files -k >.output
+	git -c core.ignorecase=true ls-files -k >.output &&
 	test_cmp .expected .output
 '
 
 test_expect_success 'git ls-files -m to show modified files.' '
 	git ls-files -m >.output
 '
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t3031-merge-criscross.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t3031-merge-criscross.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t3031-merge-criscross.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t3031-merge-criscross.sh	2015-05-01 03:12:02.000000000 +0800
@@ -29,13 +29,13 @@
 	# create a bunch of files
 	n=1 &&
 	while test $n -le 10
 	do
 		echo $n > data/$n &&
 		n=$(($n+1)) ||
-		break
+		return 1
 	done &&
 
 	# check them in
 	git add data &&
 	git commit -m A &&
 	git branch A &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t3060-ls-files-with-tree.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t3060-ls-files-with-tree.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t3060-ls-files-with-tree.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t3060-ls-files-with-tree.sh	2015-05-01 03:12:02.000000000 +0800
@@ -15,28 +15,22 @@
 	# The bug we are exercising requires a fair number of entries
 	# in a sub-directory so that add_index_entry will trigger a
 	# realloc.
 
 	echo file >expected &&
 	mkdir sub &&
-	bad= &&
 	for n in 0 1 2 3 4 5
 	do
 		for m in 0 1 2 3 4 5 6 7 8 9
 		do
 			num=00$n$m &&
 			>sub/file-$num &&
-			echo file-$num >>expected || {
-				bad=t
-				break
-			}
-		done && test -z "$bad" || {
-			bad=t
-			break
-		}
-	done && test -z "$bad" &&
+			echo file-$num >>expected ||
+			return 1
+		done
+	done &&
 	git add . &&
 	git commit -m "add a bunch of files" &&
 
 	# We remove them all so that we will have something to add
 	# back with --with-tree and so that we will definitely be
 	# under the realloc size to trigger the bug.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t3202-show-branch-octopus.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t3202-show-branch-octopus.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t3202-show-branch-octopus.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t3202-show-branch-octopus.sh	2015-05-01 03:12:02.000000000 +0800
@@ -16,13 +16,13 @@
 	for i in $numbers
 	do
 		git checkout -b branch$i master &&
 		> file$i &&
 		git add file$i &&
 		test_tick &&
-		git commit -m branch$i || break
+		git commit -m branch$i || return 1
 	done
 
 '
 
 cat > expect << EOF
 ! [branch1] branch1
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t3203-branch-output.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t3203-branch-output.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t3203-branch-output.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t3203-branch-output.sh	2015-05-01 03:12:02.000000000 +0800
@@ -93,17 +93,54 @@
 test_expect_success 'git branch -v pattern does not show branch summaries' '
 	test_must_fail git branch -v branch*
 '
 
 test_expect_success 'git branch shows detached HEAD properly' '
 	cat >expect <<EOF &&
-* (detached from $(git rev-parse --short HEAD^0))
+* (HEAD detached at $(git rev-parse --short HEAD^0))
   branch-one
   branch-two
   master
 EOF
 	git checkout HEAD^0 &&
 	git branch >actual &&
 	test_i18ncmp expect actual
 '
 
+test_expect_success 'git branch shows detached HEAD properly after moving' '
+	cat >expect <<EOF &&
+* (HEAD detached from $(git rev-parse --short HEAD))
+  branch-one
+  branch-two
+  master
+EOF
+	git reset --hard HEAD^1 &&
+	git branch >actual &&
+	test_i18ncmp expect actual
+'
+
+test_expect_success 'git branch shows detached HEAD properly from tag' '
+	cat >expect <<EOF &&
+* (HEAD detached at fromtag)
+  branch-one
+  branch-two
+  master
+EOF
+	git tag fromtag master &&
+	git checkout fromtag &&
+	git branch >actual &&
+	test_i18ncmp expect actual
+'
+
+test_expect_success 'git branch shows detached HEAD properly after moving from tag' '
+	cat >expect <<EOF &&
+* (HEAD detached from fromtag)
+  branch-one
+  branch-two
+  master
+EOF
+	git reset --hard HEAD^1 &&
+	git branch >actual &&
+	test_i18ncmp expect actual
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t3305-notes-fanout.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t3305-notes-fanout.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t3305-notes-fanout.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t3305-notes-fanout.sh	2015-05-01 03:12:02.000000000 +0800
@@ -48,21 +48,18 @@
 '
 
 test_expect_success 'deleting most notes with git-notes' '
 	num_notes=250 &&
 	i=0 &&
 	git rev-list HEAD |
-	while read sha1
+	while test $i -lt $num_notes && read sha1
 	do
 		i=$(($i + 1)) &&
-		if test $i -gt $num_notes
-		then
-			break
-		fi &&
 		test_tick &&
-		git notes remove "$sha1"
+		git notes remove "$sha1" ||
+		exit 1
 	done
 '
 
 test_expect_success 'most notes deleted correctly with git-notes' '
 	git log HEAD~250 | grep "^    " > output &&
 	i=50 &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t3404-rebase-interactive.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t3404-rebase-interactive.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t3404-rebase-interactive.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t3404-rebase-interactive.sh	2015-05-01 03:12:02.000000000 +0800
@@ -947,13 +947,13 @@
 test_expect_success 'rebase --edit-todo can be used to modify todo' '
 	git reset --hard &&
 	git checkout no-conflict-branch^0 &&
 	set_fake_editor &&
 	FAKE_LINES="edit 1 2 3" git rebase -i HEAD~3 &&
 	FAKE_LINES="2 1" git rebase --edit-todo &&
-	git rebase --continue
+	git rebase --continue &&
 	test M = $(git cat-file commit HEAD^ | sed -ne \$p) &&
 	test L = $(git cat-file commit HEAD | sed -ne \$p)
 '
 
 test_expect_success 'rebase -i produces readable reflog' '
 	git reset --hard &&
@@ -1004,13 +1004,13 @@
 	EDITOR=true git rebase -i --strategy=recursive -Xours conflict-branch &&
 	test $(git show conflict-branch:conflict) = $(cat conflict) &&
 	test $(cat file1) = Z
 '
 
 test_expect_success 'rebase -i error on commits with \ in message' '
-	current_head=$(git rev-parse HEAD)
+	current_head=$(git rev-parse HEAD) &&
 	test_when_finished "git rebase --abort; git reset --hard $current_head; rm -f error" &&
 	test_commit TO-REMOVE will-conflict old-content &&
 	test_commit "\temp" will-conflict new-content dummy &&
 	test_must_fail env EDITOR=true git rebase -i HEAD^ --onto HEAD^^ 2>error &&
 	test_expect_code 1 grep  "	emp" error
 '
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t3405-rebase-malformed.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t3405-rebase-malformed.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t3405-rebase-malformed.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t3405-rebase-malformed.sh	2015-05-01 03:12:02.000000000 +0800
@@ -21,25 +21,25 @@
 
 	>file1 &&
 	>file2 &&
 	git add file1 file2 &&
 	test_tick &&
 	git commit -m "Initial commit" &&
-	git branch diff-in-message
+	git branch diff-in-message &&
 
 	git checkout -b multi-line-subject &&
 	cat F >file2 &&
 	git add file2 &&
 	test_tick &&
 	git commit -F F &&
 
 	git cat-file commit HEAD | sed -e "1,/^\$/d" >F0 &&
 
 	git checkout diff-in-message &&
 	echo "commit log message containing a diff" >G &&
-	echo "" >>G
+	echo "" >>G &&
 	cat G >file2 &&
 	git add file2 &&
 	git diff --cached >>G &&
 	test_tick &&
 	git commit -F G &&
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t3425-rebase-topology-merges.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t3425-rebase-topology-merges.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t3425-rebase-topology-merges.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t3425-rebase-topology-merges.sh	2015-05-01 03:12:02.000000000 +0800
@@ -21,22 +21,22 @@
 test_expect_success 'setup of non-linear-history' '
 	test_commit a &&
 	test_commit b &&
 	test_commit c &&
 	git checkout b &&
 	test_commit d &&
-	test_commit e
+	test_commit e &&
 
 	git checkout c &&
 	test_commit g &&
 	revert h g &&
 	git checkout d &&
 	cherry_pick gp g &&
 	test_commit i &&
 	git checkout b &&
-	test_commit f
+	test_commit f &&
 
 	git checkout d &&
 	test_commit n &&
 	test_commit o &&
 	test_merge w e &&
 	test_merge v c &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t3511-cherry-pick-x.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t3511-cherry-pick-x.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t3511-cherry-pick-x.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t3511-cherry-pick-x.sh	2015-05-01 03:12:02.000000000 +0800
@@ -33,12 +33,26 @@
 Signed-off-by: $GIT_COMMITTER_NAME <$GIT_COMMITTER_EMAIL>"
 
 mesg_with_cherry_footer="$mesg_with_footer_sob
 (cherry picked from commit da39a3ee5e6b4b0d3255bfef95601890afd80709)
 Tested-by: C.U. Thor <cuthor@example.com>"
 
+mesg_unclean="$mesg_one_line
+
+
+leading empty lines
+
+
+consecutive empty lines
+
+# hash tag comment
+
+trailing empty lines
+
+
+"
 
 test_expect_success setup '
 	git config advice.detachedhead false &&
 	echo unrelated >unrelated &&
 	git add unrelated &&
 	test_commit initial foo a &&
@@ -50,12 +64,16 @@
 	git reset --hard initial &&
 	test_commit "$mesg_with_footer" foo b mesg-with-footer &&
 	git reset --hard initial &&
 	test_commit "$mesg_with_footer_sob" foo b mesg-with-footer-sob &&
 	git reset --hard initial &&
 	test_commit "$mesg_with_cherry_footer" foo b mesg-with-cherry-footer &&
+	git reset --hard initial &&
+	test_config commit.cleanup verbatim &&
+	test_commit "$mesg_unclean" foo b mesg-unclean &&
+	test_unconfig commit.cleanup &&
 	pristine_detach initial &&
 	test_commit conflicting unrelated
 '
 
 test_expect_success 'cherry-pick -x inserts blank line after one line subject' '
 	pristine_detach initial &&
@@ -213,7 +231,17 @@
 		Signed-off-by: $GIT_COMMITTER_NAME <$GIT_COMMITTER_EMAIL>
 	EOF
 	git log -1 --pretty=format:%B >actual &&
 	test_cmp expect actual
 '
 
+test_expect_success 'cherry-pick preserves commit message' '
+	pristine_detach initial &&
+	printf "$mesg_unclean" >expect &&
+	git log -1 --pretty=format:%B mesg-unclean >actual &&
+	test_cmp expect actual &&
+	git cherry-pick mesg-unclean &&
+	git log -1 --pretty=format:%B >actual &&
+	test_cmp expect actual
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t3600-rm.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t3600-rm.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t3600-rm.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t3600-rm.sh	2015-05-01 03:12:02.000000000 +0800
@@ -35,43 +35,43 @@
 test_expect_success \
     'Test that git rm foo succeeds' \
     'git rm --cached foo'
 
 test_expect_success \
     'Test that git rm --cached foo succeeds if the index matches the file' \
-    'echo content > foo
-     git add foo
+    'echo content >foo &&
+     git add foo &&
      git rm --cached foo'
 
 test_expect_success \
     'Test that git rm --cached foo succeeds if the index matches the file' \
-    'echo content > foo
-     git add foo
-     git commit -m foo
-     echo "other content" > foo
+    'echo content >foo &&
+     git add foo &&
+     git commit -m foo &&
+     echo "other content" >foo &&
      git rm --cached foo'
 
 test_expect_success \
     'Test that git rm --cached foo fails if the index matches neither the file nor HEAD' '
-     echo content > foo
-     git add foo
-     git commit -m foo
-     echo "other content" > foo
-     git add foo
-     echo "yet another content" > foo
+     echo content >foo &&
+     git add foo &&
+     git commit -m foo --allow-empty &&
+     echo "other content" >foo &&
+     git add foo &&
+     echo "yet another content" >foo &&
      test_must_fail git rm --cached foo
 '
 
 test_expect_success \
     'Test that git rm --cached -f foo works in case where --cached only did not' \
-    'echo content > foo
-     git add foo
-     git commit -m foo
-     echo "other content" > foo
-     git add foo
-     echo "yet another content" > foo
+    'echo content >foo &&
+     git add foo &&
+     git commit -m foo --allow-empty &&
+     echo "other content" >foo &&
+     git add foo &&
+     echo "yet another content" >foo &&
      git rm --cached -f foo'
 
 test_expect_success \
     'Post-check that foo exists but is not in index after git rm foo' \
     '[ -f foo ] && test_must_fail git ls-files --error-unmatch foo'
 
@@ -167,26 +167,26 @@
 '
 
 test_expect_success 'but with -f it should work.' '
 	git rm -f foo baz &&
 	test ! -f foo &&
 	test ! -f baz &&
-	test_must_fail git ls-files --error-unmatch foo
+	test_must_fail git ls-files --error-unmatch foo &&
 	test_must_fail git ls-files --error-unmatch baz
 '
 
 test_expect_success 'refuse to remove cached empty file with modifications' '
 	>empty &&
 	git add empty &&
 	echo content >empty &&
 	test_must_fail git rm --cached empty
 '
 
 test_expect_success 'remove intent-to-add file without --force' '
 	echo content >intent-to-add &&
-	git add -N intent-to-add
+	git add -N intent-to-add &&
 	git rm --cached intent-to-add
 '
 
 test_expect_success 'Recursive test setup' '
 	mkdir -p frotz &&
 	echo qfwfq >frotz/nitfol &&
@@ -198,13 +198,13 @@
 	test_must_fail git rm frotz &&
 	test -d frotz &&
 	test -f frotz/nitfol
 '
 
 test_expect_success 'Recursive with -r but dirty' '
-	echo qfwfq >>frotz/nitfol
+	echo qfwfq >>frotz/nitfol &&
 	test_must_fail git rm -r frotz &&
 	test -d frotz &&
 	test -f frotz/nitfol
 '
 
 test_expect_success 'Recursive with -r -f' '
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t3901-i18n-patch.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t3901-i18n-patch.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t3901-i18n-patch.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t3901-i18n-patch.sh	2015-05-01 03:12:02.000000000 +0800
@@ -6,31 +6,27 @@
 test_description='i18n settings and format-patch | am pipe'
 
 . ./test-lib.sh
 
 check_encoding () {
 	# Make sure characters are not corrupted
-	cnt="$1" header="$2" i=1 j=0 bad=0
+	cnt="$1" header="$2" i=1 j=0
 	while test "$i" -le $cnt
 	do
 		git format-patch --encoding=UTF-8 --stdout HEAD~$i..HEAD~$j |
 		grep "^From: =?UTF-8?q?=C3=81=C3=A9=C3=AD=20=C3=B3=C3=BA?=" &&
 		git cat-file commit HEAD~$j |
 		case "$header" in
 		8859)
 			grep "^encoding ISO8859-1" ;;
 		*)
 			grep "^encoding ISO8859-1"; test "$?" != 0 ;;
-		esac || {
-			bad=1
-			break
-		}
+		esac || return 1
 		j=$i
 		i=$(($i+1))
 	done
-	(exit $bad)
 }
 
 test_expect_success setup '
 	git config i18n.commitencoding UTF-8 &&
 
 	# use UTF-8 in author and committer name to match the
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4013/diff.log_--decorate_--all /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4013/diff.log_--decorate_--all
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4013/diff.log_--decorate_--all	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4013/diff.log_--decorate_--all	2015-05-01 03:12:02.000000000 +0800
@@ -2,13 +2,13 @@
 commit cd4e72fd96faed3f0ba949dc42967430374e2290 (rearrange)
 Author: A U Thor <author@example.com>
 Date:   Mon Jun 26 00:06:00 2006 +0000
 
     Rearranged lines in dir/sub
 
-commit 59d314ad6f356dd08601a4cd5e530381da3e3c64 (HEAD, master)
+commit 59d314ad6f356dd08601a4cd5e530381da3e3c64 (HEAD -> master)
 Merge: 9a6d494 c7a2ab9
 Author: A U Thor <author@example.com>
 Date:   Mon Jun 26 00:04:00 2006 +0000
 
     Merge branch 'side'
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4014-format-patch.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4014-format-patch.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4014-format-patch.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4014-format-patch.sh	2015-05-01 03:12:02.000000000 +0800
@@ -799,13 +799,13 @@
 	git format-patch --stdout --no-signature -1 >output &&
 	check_patch output &&
 	! grep "^-- \$" output
 '
 
 test_expect_success '--signature-file overrides format.signaturefile' '
-	cat >other-mail-signature <<-\EOF
+	cat >other-mail-signature <<-\EOF &&
 	Use this other signature instead of mail-signature.
 	EOF
 	test_config format.signaturefile mail-signature &&
 	git format-patch --stdout \
 			--signature-file=other-mail-signature -1 >output &&
 	check_patch output &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4022-diff-rewrite.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4022-diff-rewrite.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4022-diff-rewrite.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4022-diff-rewrite.sh	2015-05-01 03:12:02.000000000 +0800
@@ -17,16 +17,13 @@
 
 '
 
 test_expect_success 'detect rewrite' '
 
 	actual=$(git diff-files -B --summary test) &&
-	expr "$actual" : " rewrite test ([0-9]*%)$" || {
-		echo "Eh? <<$actual>>"
-		false
-	}
+	verbose expr "$actual" : " rewrite test ([0-9]*%)$"
 
 '
 
 cat >expect <<EOF
 diff --git a/test2 b/test2
 deleted file mode 100644
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4024-diff-optimize-common.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4024-diff-optimize-common.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4024-diff-optimize-common.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4024-diff-optimize-common.sh	2015-05-01 03:12:02.000000000 +0800
@@ -136,13 +136,13 @@
 
 		( zs $n ; echo A ) >file-a$n &&
 		( echo B; zs $n; echo ) >file-b$n &&
 		( printf C; zs $n ) >file-c$n &&
 		( echo D; zs $n ) >file-d$n &&
 
-		expect_pattern $n || break
+		expect_pattern $n || return 1
 
 	done >expect
 '
 
 test_expect_success 'diff -U0' '
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4026-color.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4026-color.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4026-color.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4026-color.sh	2015-05-01 03:12:02.000000000 +0800
@@ -108,12 +108,12 @@
 test_expect_success 'unknown color slots are ignored (branch)' '
 	git config color.branch.nosuchslotwilleverbedefined white &&
 	git branch -a
 '
 
 test_expect_success 'unknown color slots are ignored (status)' '
-	git config color.status.nosuchslotwilleverbedefined white || exit
-	git status
-	case $? in 0|1) : ok ;; *) false ;; esac
+	git config color.status.nosuchslotwilleverbedefined white &&
+	{ git status; ret=$?; } &&
+	case $ret in 0|1) : ok ;; *) false ;; esac
 '
 
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4035-diff-quiet.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4035-diff-quiet.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4035-diff-quiet.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4035-diff-quiet.sh	2015-05-01 03:12:02.000000000 +0800
@@ -26,73 +26,71 @@
 		echo "1   1" >extra-space &&
 		echo "2" >never-match
 	)
 '
 
 test_expect_success 'git diff-tree HEAD^ HEAD' '
-	git diff-tree --quiet HEAD^ HEAD >cnt
-	test $? = 1 && test_line_count = 0 cnt
+	test_expect_code 1 git diff-tree --quiet HEAD^ HEAD >cnt &&
+	test_line_count = 0 cnt
 '
 test_expect_success 'git diff-tree HEAD^ HEAD -- a' '
-	git diff-tree --quiet HEAD^ HEAD -- a >cnt
-	test $? = 0 && test_line_count = 0 cnt
+	test_expect_code 0 git diff-tree --quiet HEAD^ HEAD -- a >cnt &&
+	test_line_count = 0 cnt
 '
 test_expect_success 'git diff-tree HEAD^ HEAD -- b' '
-	git diff-tree --quiet HEAD^ HEAD -- b >cnt
-	test $? = 1 && test_line_count = 0 cnt
+	test_expect_code 1 git diff-tree --quiet HEAD^ HEAD -- b >cnt &&
+	test_line_count = 0 cnt
 '
 # this diff outputs one line: sha1 of the given head
 test_expect_success 'echo HEAD | git diff-tree --stdin' '
-	echo $(git rev-parse HEAD) | git diff-tree --quiet --stdin >cnt
-	test $? = 1 && test_line_count = 1 cnt
+	echo $(git rev-parse HEAD) |
+	test_expect_code 1 git diff-tree --quiet --stdin >cnt &&
+	test_line_count = 1 cnt
 '
 test_expect_success 'git diff-tree HEAD HEAD' '
-	git diff-tree --quiet HEAD HEAD >cnt
-	test $? = 0 && test_line_count = 0 cnt
+	test_expect_code 0 git diff-tree --quiet HEAD HEAD >cnt &&
+	test_line_count = 0 cnt
 '
 test_expect_success 'git diff-files' '
-	git diff-files --quiet >cnt
-	test $? = 0 && test_line_count = 0 cnt
+	test_expect_code 0 git diff-files --quiet >cnt &&
+	test_line_count = 0 cnt
 '
 test_expect_success 'git diff-index --cached HEAD' '
-	git diff-index --quiet --cached HEAD >cnt
-	test $? = 0 && test_line_count = 0 cnt
+	test_expect_code 0 git diff-index --quiet --cached HEAD >cnt &&
+	test_line_count = 0 cnt
 '
 test_expect_success 'git diff-index --cached HEAD^' '
-	git diff-index --quiet --cached HEAD^ >cnt
-	test $? = 1 && test_line_count = 0 cnt
+	test_expect_code 1 git diff-index --quiet --cached HEAD^ >cnt &&
+	test_line_count = 0 cnt
 '
 test_expect_success 'git diff-index --cached HEAD^' '
 	echo text >>b &&
 	echo 3 >c &&
-	git add . && {
-		git diff-index --quiet --cached HEAD^ >cnt
-		test $? = 1 && test_line_count = 0 cnt
-	}
+	git add . &&
+	test_expect_code 1 git diff-index --quiet --cached HEAD^ >cnt &&
+	test_line_count = 0 cnt
 '
 test_expect_success 'git diff-tree -Stext HEAD^ HEAD -- b' '
-	git commit -m "text in b" && {
-		git diff-tree --quiet -Stext HEAD^ HEAD -- b >cnt
-		test $? = 1 && test_line_count = 0 cnt
-	}
+	git commit -m "text in b" &&
+	test_expect_code 1 git diff-tree --quiet -Stext HEAD^ HEAD -- b >cnt &&
+	test_line_count = 0 cnt
 '
 test_expect_success 'git diff-tree -Snot-found HEAD^ HEAD -- b' '
-	git diff-tree --quiet -Snot-found HEAD^ HEAD -- b >cnt
-	test $? = 0 && test_line_count = 0 cnt
+	test_expect_code 0 git diff-tree --quiet -Snot-found HEAD^ HEAD -- b >cnt &&
+	test_line_count = 0 cnt
 '
 test_expect_success 'git diff-files' '
-	echo 3 >>c && {
-		git diff-files --quiet >cnt
-		test $? = 1 && test_line_count = 0 cnt
-	}
+	echo 3 >>c &&
+	test_expect_code 1 git diff-files --quiet >cnt &&
+	test_line_count = 0 cnt
 '
+
 test_expect_success 'git diff-index --cached HEAD' '
-	git update-index c && {
-		git diff-index --quiet --cached HEAD >cnt
-		test $? = 1 && test_line_count = 0 cnt
-	}
+	git update-index c &&
+	test_expect_code 1 git diff-index --quiet --cached HEAD >cnt &&
+	test_line_count = 0 cnt
 '
 
 test_expect_success 'git diff, one file outside repo' '
 	(
 		cd test-outside/repo &&
 		test_expect_code 0 git diff --quiet a ../non/git/matching-file &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4041-diff-submodule-option.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4041-diff-submodule-option.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4041-diff-submodule-option.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4041-diff-submodule-option.sh	2015-05-01 03:12:02.000000000 +0800
@@ -525,22 +525,24 @@
 		git commit -m "sub a"
 	) &&
 	(cd sub_alt &&
 		sha1_before=$(git rev-parse --short HEAD)
 		echo b >b &&
 		git add b &&
-		git commit -m b
-		sha1_after=$(git rev-parse --short HEAD)
-		echo "Submodule sub $sha1_before..$sha1_after:
-  > b" >../expected
+		git commit -m b &&
+		sha1_after=$(git rev-parse --short HEAD) &&
+		{
+			echo "Submodule sub $sha1_before..$sha1_after:" &&
+			echo "  > b"
+		} >../expected
 	) &&
 	(cd super &&
 		(cd sub &&
 			git fetch &&
 			git checkout origin/master
 		) &&
 		git diff --submodule > ../actual
-	)
+	) &&
 	test_cmp expected actual
 '
 
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4046-diff-unmerged.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4046-diff-unmerged.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4046-diff-unmerged.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4046-diff-unmerged.sh	2015-05-01 03:12:02.000000000 +0800
@@ -5,13 +5,13 @@
 
 test_expect_success setup '
 	for i in 0 1 2 3
 	do
 		blob=$(echo $i | git hash-object --stdin) &&
 		eval "blob$i=$blob" &&
-		eval "m$i=\"100644 \$blob$i $i\"" || break
+		eval "m$i=\"100644 \$blob$i $i\"" || return 1
 	done &&
 	paths= &&
 	for b in o x
 	do
 		for o in o x
 		do
@@ -21,15 +21,15 @@
 				case "$path" in ooo) continue ;; esac
 				paths="$paths$path " &&
 				p="	$path" &&
 				case "$b" in x) echo "$m1$p" ;; esac &&
 				case "$o" in x) echo "$m2$p" ;; esac &&
 				case "$t" in x) echo "$m3$p" ;; esac ||
-				break
-			done || break
-		done || break
+				return 1
+			done
+		done
 	done >ls-files-s.expect &&
 	git update-index --index-info <ls-files-s.expect &&
 	git ls-files -s >ls-files-s.actual &&
 	test_cmp ls-files-s.expect ls-files-s.actual
 '
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4047-diff-dirstat.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4047-diff-dirstat.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4047-diff-dirstat.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4047-diff-dirstat.sh	2015-05-01 03:12:02.000000000 +0800
@@ -371,13 +371,13 @@
 test_expect_success 'later options override earlier options:' '
 	git diff --dirstat=files,10,cumulative,changes,noncumulative,3 HEAD^..HEAD >actual_diff_dirstat &&
 	test_cmp expect_diff_dirstat actual_diff_dirstat &&
 	git diff --dirstat=files,10,cumulative,changes,noncumulative,3 -M HEAD^..HEAD >actual_diff_dirstat_M &&
 	test_cmp expect_diff_dirstat_M actual_diff_dirstat_M &&
 	git diff --dirstat=files,10,cumulative,changes,noncumulative,3 -C -C HEAD^..HEAD >actual_diff_dirstat_CC &&
-	test_cmp expect_diff_dirstat_CC actual_diff_dirstat_CC
+	test_cmp expect_diff_dirstat_CC actual_diff_dirstat_CC &&
 	git diff --dirstat=files --dirstat=10 --dirstat=cumulative --dirstat=changes --dirstat=noncumulative -X3 HEAD^..HEAD >actual_diff_dirstat &&
 	test_cmp expect_diff_dirstat actual_diff_dirstat &&
 	git diff --dirstat=files --dirstat=10 --dirstat=cumulative --dirstat=changes --dirstat=noncumulative -X3 -M HEAD^..HEAD >actual_diff_dirstat_M &&
 	test_cmp expect_diff_dirstat_M actual_diff_dirstat_M &&
 	git diff --dirstat=files --dirstat=10 --dirstat=cumulative --dirstat=changes --dirstat=noncumulative -X3 -C -C HEAD^..HEAD >actual_diff_dirstat_CC &&
 	test_cmp expect_diff_dirstat_CC actual_diff_dirstat_CC
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4049-diff-stat-count.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4049-diff-stat-count.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4049-diff-stat-count.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4049-diff-stat-count.sh	2015-05-01 03:12:02.000000000 +0800
@@ -15,13 +15,13 @@
 
 test_expect_success 'mode-only change show as a 0-line change' '
 	git reset --hard &&
 	test_chmod +x b d &&
 	echo a >a &&
 	echo c >c &&
-	cat >expect <<-\EOF
+	cat >expect <<-\EOF &&
 	 a | 1 +
 	 b | 0
 	 ...
 	 4 files changed, 2 insertions(+)
 	EOF
 	git diff --stat --stat-count=2 HEAD >actual &&
@@ -30,13 +30,13 @@
 
 test_expect_success 'binary changes do not count in lines' '
 	git reset --hard &&
 	echo a >a &&
 	echo c >c &&
 	cat "$TEST_DIRECTORY"/test-binary-1.png >d &&
-	cat >expect <<-\EOF
+	cat >expect <<-\EOF &&
 	 a | 1 +
 	 c | 1 +
 	 ...
 	 3 files changed, 2 insertions(+)
 	EOF
 	git diff --stat --stat-count=2 >actual &&
@@ -52,13 +52,13 @@
 	for stage in 1 2 3
 	do
 		sed -e "s/ 0	a/ $stage	d/" x
 	done |
 	git update-index --index-info &&
 	echo d >d &&
-	cat >expect <<-\EOF
+	cat >expect <<-\EOF &&
 	 a | 1 +
 	 b | 1 +
 	 ...
 	 3 files changed, 3 insertions(+)
 	EOF
 	git diff --stat --stat-count=2 >actual &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4052-stat-output.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4052-stat-output.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4052-stat-output.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4052-stat-output.sh	2015-05-01 03:12:02.000000000 +0800
@@ -91,21 +91,21 @@
 cat >expect200-graph <<'EOF'
 |  abcd | 1000 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 EOF
 while read verb expect cmd args
 do
 	test_expect_success "$cmd $verb COLUMNS (big change)" '
-		COLUMNS=200 git $cmd $args >output
+		COLUMNS=200 git $cmd $args >output &&
 		grep " | " output >actual &&
 		test_cmp "$expect" actual
 	'
 
-	test "$cmd" != diff || continue
+	case "$cmd" in diff|show) continue;; esac
 
 	test_expect_success "$cmd --graph $verb COLUMNS (big change)" '
-		COLUMNS=200 git $cmd $args --graph >output
+		COLUMNS=200 git $cmd $args --graph >output &&
 		grep " | " output >actual &&
 		test_cmp "$expect-graph" actual
 	'
 done <<\EOF
 ignores expect80 format-patch -1 --stdout
 respects expect200 diff HEAD^ HEAD --stat
@@ -119,21 +119,21 @@
 cat >expect40-graph <<'EOF'
 |  abcd | 1000 ++++++++++++++++++++++++
 EOF
 while read verb expect cmd args
 do
 	test_expect_success "$cmd $verb not enough COLUMNS (big change)" '
-		COLUMNS=40 git $cmd $args >output
+		COLUMNS=40 git $cmd $args >output &&
 		grep " | " output >actual &&
 		test_cmp "$expect" actual
 	'
 
-	test "$cmd" != diff || continue
+	case "$cmd" in diff|show) continue;; esac
 
 	test_expect_success "$cmd --graph $verb not enough COLUMNS (big change)" '
-		COLUMNS=40 git $cmd $args --graph >output
+		COLUMNS=40 git $cmd $args --graph >output &&
 		grep " | " output >actual &&
 		test_cmp "$expect-graph" actual
 	'
 done <<\EOF
 ignores expect80 format-patch -1 --stdout
 respects expect40 diff HEAD^ HEAD --stat
@@ -147,21 +147,21 @@
 cat >expect40-graph <<'EOF'
 |  abcd | 1000 ++++++++++++++++++++++++++
 EOF
 while read verb expect cmd args
 do
 	test_expect_success "$cmd $verb statGraphWidth config" '
-		git -c diff.statGraphWidth=26 $cmd $args >output
+		git -c diff.statGraphWidth=26 $cmd $args >output &&
 		grep " | " output >actual &&
 		test_cmp "$expect" actual
 	'
 
-	test "$cmd" != diff || continue
+	case "$cmd" in diff|show) continue;; esac
 
 	test_expect_success "$cmd --graph $verb statGraphWidth config" '
-		git -c diff.statGraphWidth=26 $cmd $args --graph >output
+		git -c diff.statGraphWidth=26 $cmd $args --graph >output &&
 		grep " | " output >actual &&
 		test_cmp "$expect-graph" actual
 	'
 done <<\EOF
 ignores expect80 format-patch -1 --stdout
 respects expect40 diff HEAD^ HEAD --stat
@@ -176,39 +176,39 @@
 cat >expect-graph <<'EOF'
 |  abcd | 1000 ++++++++++++++++++++++++++
 EOF
 while read cmd args
 do
 	test_expect_success "$cmd --stat=width with big change" '
-		git $cmd $args --stat=40 >output
+		git $cmd $args --stat=40 >output &&
 		grep " | " output >actual &&
 		test_cmp expect actual
 	'
 
 	test_expect_success "$cmd --stat-width=width with big change" '
-		git $cmd $args --stat-width=40 >output
+		git $cmd $args --stat-width=40 >output &&
 		grep " | " output >actual &&
 		test_cmp expect actual
 	'
 
 	test_expect_success "$cmd --stat-graph-width with big change" '
-		git $cmd $args --stat-graph-width=26 >output
+		git $cmd $args --stat-graph-width=26 >output &&
 		grep " | " output >actual &&
 		test_cmp expect actual
 	'
 
-	test "$cmd" != diff || continue
+	case "$cmd" in diff|show) continue;; esac
 
 	test_expect_success "$cmd --stat-width=width --graph with big change" '
-		git $cmd $args --stat-width=40 --graph >output
+		git $cmd $args --stat-width=40 --graph >output &&
 		grep " | " output >actual &&
 		test_cmp expect-graph actual
 	'
 
 	test_expect_success "$cmd --stat-graph-width --graph with big change" '
-		git $cmd $args --stat-graph-width=26 --graph >output
+		git $cmd $args --stat-graph-width=26 --graph >output &&
 		grep " | " output >actual &&
 		test_cmp expect-graph actual
 	'
 done <<\EOF
 format-patch -1 --stdout
 diff HEAD^ HEAD --stat
@@ -233,13 +233,13 @@
 	test_expect_success "$cmd --stat=width with big change is more balanced" '
 		git $cmd $args --stat-width=60 >output &&
 		grep " | " output >actual &&
 		test_cmp expect actual
 	'
 
-	test "$cmd" != diff || continue
+	case "$cmd" in diff|show) continue;; esac
 
 	test_expect_success "$cmd --stat=width --graph with big change is balanced" '
 		git $cmd $args --stat-width=60 --graph >output &&
 		grep " | " output >actual &&
 		test_cmp expect-graph actual
 	'
@@ -262,21 +262,21 @@
 cat >expect200-graph <<'EOF'
 |  aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa | 1000 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 EOF
 while read verb expect cmd args
 do
 	test_expect_success "$cmd $verb COLUMNS (long filename)" '
-		COLUMNS=200 git $cmd $args >output
+		COLUMNS=200 git $cmd $args >output &&
 		grep " | " output >actual &&
 		test_cmp "$expect" actual
 	'
 
-	test "$cmd" != diff || continue
+	case "$cmd" in diff|show) continue;; esac
 
 	test_expect_success "$cmd --graph $verb COLUMNS (long filename)" '
-		COLUMNS=200 git $cmd $args --graph >output
+		COLUMNS=200 git $cmd $args --graph >output &&
 		grep " | " output >actual &&
 		test_cmp "$expect-graph" actual
 	'
 done <<\EOF
 ignores expect80 format-patch -1 --stdout
 respects expect200 diff HEAD^ HEAD --stat
@@ -291,22 +291,22 @@
 |  ...aaaaaaa | 1000 ++++++
 EOF
 while read verb expect cmd args
 do
 	test_expect_success COLUMNS_CAN_BE_1 \
 		"$cmd $verb prefix greater than COLUMNS (big change)" '
-		COLUMNS=1 git $cmd $args >output
+		COLUMNS=1 git $cmd $args >output &&
 		grep " | " output >actual &&
 		test_cmp "$expect" actual
 	'
 
-	test "$cmd" != diff || continue
+	case "$cmd" in diff|show) continue;; esac
 
 	test_expect_success COLUMNS_CAN_BE_1 \
 		"$cmd --graph $verb prefix greater than COLUMNS (big change)" '
-		COLUMNS=1 git $cmd $args --graph >output
+		COLUMNS=1 git $cmd $args --graph >output &&
 		grep " | " output >actual &&
 		test_cmp "$expect-graph" actual
 	'
 done <<\EOF
 ignores expect80 format-patch -1 --stdout
 respects expect1 diff HEAD^ HEAD --stat
@@ -317,20 +317,20 @@
 cat >expect <<'EOF'
  abcd | 1000 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 EOF
 test_expect_success 'merge --stat respects COLUMNS (big change)' '
 	git checkout -b branch HEAD^^ &&
 	COLUMNS=100 git merge --stat --no-ff master^ >output &&
-	grep " | " output >actual
+	grep " | " output >actual &&
 	test_cmp expect actual
 '
 
 cat >expect <<'EOF'
  aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa | 1000 +++++++++++++++++++++++++++++++++++++++
 EOF
 test_expect_success 'merge --stat respects COLUMNS (long filename)' '
 	COLUMNS=100 git merge --stat --no-ff master >output &&
-	grep " | " output >actual
+	grep " | " output >actual &&
 	test_cmp expect actual
 '
 
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4053-diff-no-index.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4053-diff-no-index.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4053-diff-no-index.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4053-diff-no-index.sh	2015-05-01 03:12:02.000000000 +0800
@@ -14,14 +14,14 @@
 	mkdir -p non/git &&
 	echo 1 >non/git/a &&
 	echo 1 >non/git/b
 '
 
 test_expect_success 'git diff --no-index directories' '
-	git diff --no-index a b >cnt
-	test $? = 1 && test_line_count = 14 cnt
+	test_expect_code 1 git diff --no-index a b >cnt &&
+	test_line_count = 14 cnt
 '
 
 test_expect_success 'git diff --no-index relative path outside repo' '
 	(
 		cd repo &&
 		test_expect_code 0 git diff --no-index a ../non/git/a &&
@@ -52,41 +52,7 @@
 		test_must_fail git diff --no-index a 2>actual.err &&
 		echo "usage: git diff --no-index <path> <path>" >expect.err &&
 		test_cmp expect.err actual.err
 	)
 '
 
-test_expect_success 'diff D F and diff F D' '
-	(
-		cd repo &&
-		echo in-repo >a &&
-		echo non-repo >../non/git/a &&
-		mkdir sub &&
-		echo sub-repo >sub/a &&
-
-		test_must_fail git diff --no-index sub/a ../non/git/a >expect &&
-		test_must_fail git diff --no-index sub/a ../non/git/ >actual &&
-		test_cmp expect actual &&
-
-		test_must_fail git diff --no-index a ../non/git/a >expect &&
-		test_must_fail git diff --no-index a ../non/git/ >actual &&
-		test_cmp expect actual &&
-
-		test_must_fail git diff --no-index ../non/git/a a >expect &&
-		test_must_fail git diff --no-index ../non/git a >actual &&
-		test_cmp expect actual
-	)
-'
-
-test_expect_success 'turning a file into a directory' '
-	(
-		cd non/git &&
-		mkdir d e e/sub &&
-		echo 1 >d/sub &&
-		echo 2 >e/sub/file &&
-		printf "D\td/sub\nA\te/sub/file\n" >expect &&
-		test_must_fail git diff --no-index --name-status d e >actual &&
-		test_cmp expect actual
-	)
-'
-
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4054-diff-bogus-tree.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4054-diff-bogus-tree.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4054-diff-bogus-tree.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4054-diff-bogus-tree.sh	2015-05-01 03:12:02.000000000 +0800
@@ -13,13 +13,13 @@
 	)
 '
 
 test_expect_success 'create tree with matching file' '
 	echo bar >foo &&
 	git add foo &&
-	good_tree=$(git write-tree)
+	good_tree=$(git write-tree) &&
 	blob=$(git rev-parse :foo)
 '
 
 test_expect_success 'raw diff shows null sha1 (addition)' '
 	echo ":000000 100644 $_z40 $_z40 A	foo" >expect &&
 	git diff-tree $empty_tree $bogus_tree >actual &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4104-apply-boundary.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4104-apply-boundary.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4104-apply-boundary.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4104-apply-boundary.sh	2015-05-01 03:12:02.000000000 +0800
@@ -15,76 +15,76 @@
 	do
 		echo $i
 	done >victim &&
 	cat victim >original &&
 	git update-index --add victim &&
 
-	: add to the head
+	# add to the head
 	for i in a b '"$L"' y
 	do
 		echo $i
 	done >victim &&
 	cat victim >add-a-expect &&
 	git diff victim >add-a-patch.with &&
 	git diff --unified=0 >add-a-patch.without &&
 
-	: insert at line two
+	# insert at line two
 	for i in b a '"$L"' y
 	do
 		echo $i
 	done >victim &&
 	cat victim >insert-a-expect &&
 	git diff victim >insert-a-patch.with &&
 	git diff --unified=0 >insert-a-patch.without &&
 
-	: modify at the head
+	# modify at the head
 	for i in a '"$L"' y
 	do
 		echo $i
 	done >victim &&
 	cat victim >mod-a-expect &&
 	git diff victim >mod-a-patch.with &&
 	git diff --unified=0 >mod-a-patch.without &&
 
-	: remove from the head
+	# remove from the head
 	for i in '"$L"' y
 	do
 		echo $i
 	done >victim &&
 	cat victim >del-a-expect &&
-	git diff victim >del-a-patch.with
+	git diff victim >del-a-patch.with &&
 	git diff --unified=0 >del-a-patch.without &&
 
-	: add to the tail
+	# add to the tail
 	for i in b '"$L"' y z
 	do
 		echo $i
 	done >victim &&
 	cat victim >add-z-expect &&
 	git diff victim >add-z-patch.with &&
 	git diff --unified=0 >add-z-patch.without &&
 
-	: modify at the tail
+	# modify at the tail
 	for i in b '"$L"' z
 	do
 		echo $i
 	done >victim &&
 	cat victim >mod-z-expect &&
 	git diff victim >mod-z-patch.with &&
 	git diff --unified=0 >mod-z-patch.without &&
 
-	: remove from the tail
+	# remove from the tail
 	for i in b '"$L"'
 	do
 		echo $i
 	done >victim &&
 	cat victim >del-z-expect &&
-	git diff victim >del-z-patch.with
-	git diff --unified=0 >del-z-patch.without &&
+	git diff victim >del-z-patch.with &&
+	git diff --unified=0 >del-z-patch.without
 
-	: done
+	# done
 '
 
 for with in with without
 do
 	case "$with" in
 	with) u= ;;
@@ -92,16 +92,13 @@
 	esac
 	for kind in add-a add-z insert-a mod-a mod-z del-a del-z
 	do
 		test_expect_success "apply $kind-patch $with context" '
 			cat original >victim &&
 			git update-index victim &&
-			git apply --index '"$u$kind-patch.$with"' || {
-				cat '"$kind-patch.$with"'
-				(exit 1)
-			} &&
+			git apply --index '"$u$kind-patch.$with"' &&
 			test_cmp '"$kind"'-expect victim
 		'
 	done
 done
 
 for kind in add-a add-z insert-a mod-a mod-z del-a del-z
@@ -110,16 +107,13 @@
 	sed	-e "s/^diff --git /diff /" \
 		-e '/^index /d' \
 		<$kind-patch.without >$kind-ng.without
 	test_expect_success "apply non-git $kind-patch without context" '
 		cat original >victim &&
 		git update-index victim &&
-		git apply --unidiff-zero --index '"$kind-ng.without"' || {
-			cat '"$kind-ng.without"'
-			(exit 1)
-		} &&
+		git apply --unidiff-zero --index '"$kind-ng.without"' &&
 		test_cmp '"$kind"'-expect victim
 	'
 done
 
 test_expect_success 'two lines' '
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4117-apply-reject.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4117-apply-reject.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4117-apply-reject.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4117-apply-reject.sh	2015-05-01 03:12:02.000000000 +0800
@@ -53,105 +53,59 @@
 	test_must_fail git apply --reject --3way patch.0 &&
 	git diff --exit-code
 '
 
 test_expect_success 'apply without --reject should fail' '
 
-	if git apply patch.1
-	then
-		echo "Eh? Why?"
-		exit 1
-	fi
-
+	test_must_fail git apply patch.1 &&
 	test_cmp file1 saved.file1
 '
 
 test_expect_success 'apply without --reject should fail' '
 
-	if git apply --verbose patch.1
-	then
-		echo "Eh? Why?"
-		exit 1
-	fi
-
+	test_must_fail git apply --verbose patch.1 &&
 	test_cmp file1 saved.file1
 '
 
 test_expect_success 'apply with --reject should fail but update the file' '
 
 	cat saved.file1 >file1 &&
 	rm -f file1.rej file2.rej &&
 
-	if git apply --reject patch.1
-	then
-		echo "succeeds with --reject?"
-		exit 1
-	fi
-
+	test_must_fail git apply --reject patch.1 &&
 	test_cmp file1 expected &&
 
 	cat file1.rej &&
-
-	if test -f file2.rej
-	then
-		echo "file2 should not have been touched"
-		exit 1
-	fi
+	test_path_is_missing file2.rej
 '
 
 test_expect_success 'apply with --reject should fail but update the file' '
 
 	cat saved.file1 >file1 &&
 	rm -f file1.rej file2.rej file2 &&
 
-	if git apply --reject patch.2 >rejects
-	then
-		echo "succeeds with --reject?"
-		exit 1
-	fi
-
-	test -f file1 && {
-		echo "file1 still exists?"
-		exit 1
-	}
+	test_must_fail git apply --reject patch.2 >rejects &&
+	test_path_is_missing file1 &&
 	test_cmp file2 expected &&
 
 	cat file2.rej &&
-
-	if test -f file1.rej
-	then
-		echo "file2 should not have been touched"
-		exit 1
-	fi
+	test_path_is_missing file1.rej
 
 '
 
 test_expect_success 'the same test with --verbose' '
 
 	cat saved.file1 >file1 &&
 	rm -f file1.rej file2.rej file2 &&
 
-	if git apply --reject --verbose patch.2 >rejects
-	then
-		echo "succeeds with --reject?"
-		exit 1
-	fi
-
-	test -f file1 && {
-		echo "file1 still exists?"
-		exit 1
-	}
+	test_must_fail git apply --reject --verbose patch.2 >rejects &&
+	test_path_is_missing file1 &&
 	test_cmp file2 expected &&
 
 	cat file2.rej &&
-
-	if test -f file1.rej
-	then
-		echo "file2 should not have been touched"
-		exit 1
-	fi
+	test_path_is_missing file1.rej
 
 '
 
 test_expect_success 'apply cleanly with --verbose' '
 
 	git cat-file -p HEAD:file1 >file1 &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4122-apply-symlink-inside.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4122-apply-symlink-inside.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4122-apply-symlink-inside.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4122-apply-symlink-inside.sh	2015-05-01 03:12:02.000000000 +0800
@@ -1,31 +1,24 @@
 #!/bin/sh
 
 test_description='apply to deeper directory without getting fooled with symlink'
 . ./test-lib.sh
 
-lecho () {
-	for l_
-	do
-		echo "$l_"
-	done
-}
-
 test_expect_success setup '
 
 	mkdir -p arch/i386/boot arch/x86_64 &&
-	lecho 1 2 3 4 5 >arch/i386/boot/Makefile &&
+	test_write_lines 1 2 3 4 5 >arch/i386/boot/Makefile &&
 	test_ln_s_add ../i386/boot arch/x86_64/boot &&
 	git add . &&
 	test_tick &&
 	git commit -m initial &&
 	git branch test &&
 
 	rm arch/x86_64/boot &&
 	mkdir arch/x86_64/boot &&
-	lecho 2 3 4 5 6 >arch/x86_64/boot/Makefile &&
+	test_write_lines 2 3 4 5 6 >arch/x86_64/boot/Makefile &&
 	git add . &&
 	test_tick &&
 	git commit -a -m second &&
 
 	git format-patch --binary -1 --stdout >test.patch
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4124-apply-ws-rule.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4124-apply-ws-rule.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4124-apply-ws-rule.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4124-apply-ws-rule.sh	2015-05-01 03:12:02.000000000 +0800
@@ -96,15 +96,14 @@
 	test_cmp file target
 
 '
 
 test_expect_success 'whitespace=error-all, default rule' '
 
-	apply_patch --whitespace=error-all && return 1
-	test -s target && return 1
-	: happy
+	test_must_fail apply_patch --whitespace=error-all &&
+	! test -s target
 
 '
 
 test_expect_success 'whitespace=error-all, no rule' '
 
 	git config core.whitespace -trailing,-space-before,-indent &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4151-am-abort.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4151-am-abort.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4151-am-abort.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4151-am-abort.sh	2015-05-01 03:12:02.000000000 +0800
@@ -17,13 +17,13 @@
 	for i in 2 3 4 5 6
 	do
 		echo $i >>file-1 &&
 		echo $i >otherfile-$i &&
 		git add otherfile-$i &&
 		test_tick &&
-		git commit -a -m $i || break
+		git commit -a -m $i || return 1
 	done &&
 	git format-patch --no-numbered initial &&
 	git checkout -b side initial &&
 	echo local change >file-2-expect
 '
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4202-log.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4202-log.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4202-log.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4202-log.sh	2015-05-01 03:12:02.000000000 +0800
@@ -110,65 +110,45 @@
 '
 
 test_expect_success 'diff-filter=M' '
 
 	actual=$(git log --pretty="format:%s" --diff-filter=M HEAD) &&
 	expect=$(echo second) &&
-	test "$actual" = "$expect" || {
-		echo Oops
-		echo "Actual: $actual"
-		false
-	}
+	verbose test "$actual" = "$expect"
 
 '
 
 test_expect_success 'diff-filter=D' '
 
 	actual=$(git log --pretty="format:%s" --diff-filter=D HEAD) &&
 	expect=$(echo sixth ; echo third) &&
-	test "$actual" = "$expect" || {
-		echo Oops
-		echo "Actual: $actual"
-		false
-	}
+	verbose test "$actual" = "$expect"
 
 '
 
 test_expect_success 'diff-filter=R' '
 
 	actual=$(git log -M --pretty="format:%s" --diff-filter=R HEAD) &&
 	expect=$(echo third) &&
-	test "$actual" = "$expect" || {
-		echo Oops
-		echo "Actual: $actual"
-		false
-	}
+	verbose test "$actual" = "$expect"
 
 '
 
 test_expect_success 'diff-filter=C' '
 
 	actual=$(git log -C -C --pretty="format:%s" --diff-filter=C HEAD) &&
 	expect=$(echo fourth) &&
-	test "$actual" = "$expect" || {
-		echo Oops
-		echo "Actual: $actual"
-		false
-	}
+	verbose test "$actual" = "$expect"
 
 '
 
 test_expect_success 'git log --follow' '
 
 	actual=$(git log --follow --pretty="format:%s" ichi) &&
 	expect=$(echo third ; echo second ; echo initial) &&
-	test "$actual" = "$expect" || {
-		echo Oops
-		echo "Actual: $actual"
-		false
-	}
+	verbose test "$actual" = "$expect"
 
 '
 
 cat > expect << EOF
 804a787 sixth
 394ef78 fifth
@@ -209,12 +189,27 @@
 test_expect_success 'log --grep' '
 	echo second >expect &&
 	git log -1 --pretty="tformat:%s" --grep=sec >actual &&
 	test_cmp expect actual
 '
 
+cat > expect << EOF
+second
+initial
+EOF
+test_expect_success 'log --invert-grep --grep' '
+	git log --pretty="tformat:%s" --invert-grep --grep=th --grep=Sec >actual &&
+	test_cmp expect actual
+'
+
+test_expect_success 'log --invert-grep --grep -i' '
+	echo initial >expect &&
+	git log --pretty="tformat:%s" --invert-grep -i --grep=th --grep=Sec >actual &&
+	test_cmp expect actual
+'
+
 test_expect_success 'log --grep option parsing' '
 	echo second >expect &&
 	git log -1 --pretty="tformat:%s" --grep sec >actual &&
 	test_cmp expect actual &&
 	test_must_fail git log -1 --pretty="tformat:%s" --grep
 '
@@ -463,13 +458,13 @@
 	test_config log.decorate full &&
 	git log --oneline >actual &&
 	test_cmp expect.full actual &&
 	git log --oneline --no-decorate >actual &&
 	test_cmp expect.none actual &&
 	git log --oneline --decorate >actual &&
-	test_cmp expect.short actual
+	test_cmp expect.short actual &&
 
 	test_unconfig log.decorate &&
 	git log --pretty=raw >expect.raw &&
 	test_config log.decorate full &&
 	git log --pretty=raw >actual &&
 	test_cmp expect.raw actual
@@ -869,7 +864,11 @@
 	git log --graph --show-signature -n1 plain >actual &&
 	grep "^|\\\  merged tag" actual &&
 	grep "^| | gpg: Signature made" actual &&
 	grep "^| | gpg: Good signature" actual
 '
 
+test_expect_success 'log --graph --no-walk is forbidden' '
+	test_must_fail git log --graph --no-walk
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4207-log-decoration-colors.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4207-log-decoration-colors.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4207-log-decoration-colors.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4207-log-decoration-colors.sh	2015-05-01 03:12:02.000000000 +0800
@@ -41,16 +41,16 @@
 	git tag v1.0 &&
 	echo >>A.t &&
 	git stash save Changes to A.t
 '
 
 cat >expected <<EOF
-${c_commit}COMMIT_ID${c_reset}${c_commit} (${c_reset}${c_HEAD}HEAD${c_reset}${c_commit},\
+${c_commit}COMMIT_ID${c_reset}${c_commit} (${c_reset}${c_HEAD}HEAD${c_reset}${c_commit} ->\
+ ${c_reset}${c_branch}master${c_reset}${c_commit},\
  ${c_reset}${c_tag}tag: v1.0${c_reset}${c_commit},\
- ${c_reset}${c_tag}tag: B${c_reset}${c_commit},\
- ${c_reset}${c_branch}master${c_reset}${c_commit})${c_reset} B
+ ${c_reset}${c_tag}tag: B${c_reset}${c_commit})${c_reset} B
 ${c_commit}COMMIT_ID${c_reset}${c_commit} (${c_reset}${c_tag}tag: A1${c_reset}${c_commit},\
  ${c_reset}${c_remoteBranch}other/master${c_reset}${c_commit})${c_reset} A1
 ${c_commit}COMMIT_ID${c_reset}${c_commit} (${c_reset}${c_stash}refs/stash${c_reset}${c_commit})${c_reset}\
  On master: Changes to A.t
 ${c_commit}COMMIT_ID${c_reset}${c_commit} (${c_reset}${c_tag}tag: A${c_reset}${c_commit})${c_reset} A
 EOF
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4211-line-log.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4211-line-log.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4211-line-log.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4211-line-log.sh	2015-05-01 03:12:02.000000000 +0800
@@ -51,20 +51,20 @@
 canned_test "-L 4,18:a.c -L ^:main:a.c simple" multiple-overlapping
 canned_test "-L :main:a.c -L 4,18:a.c simple" multiple-overlapping
 canned_test "-L 4:a.c -L 8,12:a.c simple" multiple-superset
 canned_test "-L 8,12:a.c -L 4:a.c simple" multiple-superset
 
 test_bad_opts "-L" "switch.*requires a value"
-test_bad_opts "-L b.c" "argument not .start,end:file"
-test_bad_opts "-L 1:" "argument not .start,end:file"
+test_bad_opts "-L b.c" "argument.*not of the form"
+test_bad_opts "-L 1:" "argument.*not of the form"
 test_bad_opts "-L 1:nonexistent" "There is no path"
 test_bad_opts "-L 1:simple" "There is no path"
-test_bad_opts "-L '/foo:b.c'" "argument not .start,end:file"
+test_bad_opts "-L '/foo:b.c'" "argument.*not of the form"
 test_bad_opts "-L 1000:b.c" "has only.*lines"
 test_bad_opts "-L 1,1000:b.c" "has only.*lines"
-test_bad_opts "-L :b.c" "argument not .start,end:file"
+test_bad_opts "-L :b.c" "argument.*not of the form"
 test_bad_opts "-L :foo:b.c" "no match"
 
 test_expect_success '-L X (X == nlines)' '
 	n=$(wc -l <b.c) &&
 	git log -L $n:b.c
 '
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4212-log-corrupt.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4212-log-corrupt.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t4212-log-corrupt.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t4212-log-corrupt.sh	2015-05-01 03:12:02.000000000 +0800
@@ -58,13 +58,13 @@
 	test_cmp expect actual
 '
 
 test_expect_success 'unparsable dates produce sentinel value (%ad)' '
 	commit=$(munge_author_date HEAD totally_bogus) &&
 	echo >expect &&
-	git log -1 --format=%ad $commit >actual
+	git log -1 --format=%ad $commit >actual &&
 	test_cmp expect actual
 '
 
 # date is 2^64 + 1
 test_expect_success 'date parser recognizes integer overflow' '
 	commit=$(munge_author_date HEAD 18446744073709551617) &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5003-archive-zip.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5003-archive-zip.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5003-archive-zip.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5003-archive-zip.sh	2015-05-01 03:12:02.000000000 +0800
@@ -30,20 +30,63 @@
 		test_cmp a.lst $listfile
 	"
 
 	test_expect_success UNZIP " validate file contents" "
 		diff -r a ${dir_with_prefix}a
 	"
+
+	dir=eol_$1
+	dir_with_prefix=$dir/$2
+	extracted=${dir_with_prefix}a
+	original=a
+
+	test_expect_success UNZIP " extract ZIP archive with EOL conversion" '
+		(mkdir $dir && cd $dir && "$GIT_UNZIP" -a ../$zipfile)
+	'
+
+	test_expect_success UNZIP " validate that text files are converted" "
+		test_cmp_bin $extracted/text.cr $extracted/text.crlf &&
+		test_cmp_bin $extracted/text.cr $extracted/text.lf
+	"
+
+	test_expect_success UNZIP " validate that binary files are unchanged" "
+		test_cmp_bin $original/binary.cr   $extracted/binary.cr &&
+		test_cmp_bin $original/binary.crlf $extracted/binary.crlf &&
+		test_cmp_bin $original/binary.lf   $extracted/binary.lf
+	"
+
+	test_expect_success UNZIP " validate that diff files are converted" "
+		test_cmp_bin $extracted/diff.cr $extracted/diff.crlf &&
+		test_cmp_bin $extracted/diff.cr $extracted/diff.lf
+	"
+
+	test_expect_success UNZIP " validate that -diff files are unchanged" "
+		test_cmp_bin $original/nodiff.cr   $extracted/nodiff.cr &&
+		test_cmp_bin $original/nodiff.crlf $extracted/nodiff.crlf &&
+		test_cmp_bin $original/nodiff.lf   $extracted/nodiff.lf
+	"
 }
 
 test_expect_success \
     'populate workdir' \
     'mkdir a &&
      echo simple textfile >a/a &&
      mkdir a/bin &&
      cp /bin/sh a/bin &&
+     printf "text\r"	>a/text.cr &&
+     printf "text\r\n"	>a/text.crlf &&
+     printf "text\n"	>a/text.lf &&
+     printf "text\r"	>a/nodiff.cr &&
+     printf "text\r\n"	>a/nodiff.crlf &&
+     printf "text\n"	>a/nodiff.lf &&
+     printf "\0\r"	>a/binary.cr &&
+     printf "\0\r\n"	>a/binary.crlf &&
+     printf "\0\n"	>a/binary.lf &&
+     printf "\0\r"	>a/diff.cr &&
+     printf "\0\r\n"	>a/diff.crlf &&
+     printf "\0\n"	>a/diff.lf &&
      printf "A\$Format:%s\$O" "$SUBSTFORMAT" >a/substfile1 &&
      printf "A not substituted O" >a/substfile2 &&
      (p=long_path_to_a_file && cd a &&
       for depth in 1 2 3 4 5; do mkdir $p && cd $p; done &&
       echo text >file_with_long_path)
 '
@@ -63,13 +106,15 @@
 
 test_expect_success 'add files to repository' '
 	git add a &&
 	GIT_COMMITTER_DATE="2005-05-27 22:00" git commit -m initial
 '
 
-test_expect_success 'setup export-subst' '
+test_expect_success 'setup export-subst and diff attributes' '
+	echo "a/nodiff.* -diff" >>.git/info/attributes &&
+	echo "a/diff.* diff" >>.git/info/attributes &&
 	echo "substfile?" export-subst >>.git/info/attributes &&
 	git log --max-count=1 "--pretty=format:A${SUBSTFORMAT}O" HEAD \
 		>a/substfile1
 '
 
 test_expect_success \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5004-archive-corner-cases.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5004-archive-corner-cases.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5004-archive-corner-cases.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5004-archive-corner-cases.sh	2015-05-01 03:12:02.000000000 +0800
@@ -63,14 +63,16 @@
 	# reasonable to exit 0, for example).
 	#
 	# This makes our test less rigorous on some platforms (unzip may not
 	# handle the empty repo at all, making our later check of its exit code
 	# a no-op). But we cannot do anything reasonable except skip the test
 	# on such platforms anyway, and this is the moral equivalent.
-	"$GIT_UNZIP" "$TEST_DIRECTORY"/t5004/empty.zip
-	expect_code=$?
+	{
+		"$GIT_UNZIP" "$TEST_DIRECTORY"/t5004/empty.zip
+		expect_code=$?
+	} &&
 
 	git archive --format=zip HEAD >empty.zip &&
 	make_dir extract &&
 	(
 		cd extract &&
 		test_expect_code $expect_code "$GIT_UNZIP" ../empty.zip
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5100-mailinfo.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5100-mailinfo.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5100-mailinfo.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5100-mailinfo.sh	2015-05-01 03:12:02.000000000 +0800
@@ -31,13 +31,13 @@
 		then
 			check_mailinfo $mail --scissors
 		fi &&
 		if test -f "$TEST_DIRECTORY"/t5100/msg$mail--no-inbody-headers
 		then
 			check_mailinfo $mail --no-inbody-headers
-		fi
+		fi &&
 		if test -f "$TEST_DIRECTORY"/t5100/msg$mail--message-id
 		then
 			check_mailinfo $mail --message-id
 		fi
 	'
 done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5500-fetch-pack.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5500-fetch-pack.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5500-fetch-pack.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5500-fetch-pack.sh	2015-05-01 03:12:02.000000000 +0800
@@ -411,13 +411,13 @@
 		add $head
 	done &&
 	for head in A B C D E F
 	do
 		git tag $head $head
 	done &&
-	cat >input <<-\EOF
+	cat >input <<-\EOF &&
 	refs/heads/C
 	refs/heads/A
 	refs/heads/D
 	refs/tags/C
 	refs/heads/B
 	refs/tags/A
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5503-tagfollow.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5503-tagfollow.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5503-tagfollow.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5503-tagfollow.sh	2015-05-01 03:12:02.000000000 +0800
@@ -136,14 +136,14 @@
 want $B
 want $S
 EOF
 '
 
 test_expect_success 'new clone fetch master and tags' '
-	git branch -D cat
-	rm -f $U
+	test_might_fail git branch -D cat &&
+	rm -f $U &&
 	(
 		mkdir clone2 &&
 		cd clone2 &&
 		git init &&
 		git remote add origin .. &&
 		GIT_TRACE_PACKET=$UPATH git fetch &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5505-remote.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5505-remote.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5505-remote.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5505-remote.sh	2015-05-01 03:12:02.000000000 +0800
@@ -576,13 +576,13 @@
 
 test_expect_success 'update with arguments' '
 	(
 		cd one &&
 		for b in $(git branch -r)
 		do
-		git branch -r -d $b || break
+		git branch -r -d $b || exit 1
 		done &&
 		git remote add manduca ../mirror &&
 		git remote add megaloprepus ../mirror &&
 		git config remotes.phobaeticus "drosophila megaloprepus" &&
 		git config remotes.titanus manduca &&
 		git remote update phobaeticus titanus &&
@@ -619,13 +619,13 @@
 
 test_expect_success 'update default' '
 	(
 		cd one &&
 		for b in $(git branch -r)
 		do
-		git branch -r -d $b || break
+		git branch -r -d $b || exit 1
 		done &&
 		git config remote.drosophila.skipDefaultUpdate true &&
 		git remote update default &&
 		git branch -r >output &&
 		test_cmp expect output
 	)
@@ -639,13 +639,13 @@
 
 test_expect_success 'update default (overridden, with funny whitespace)' '
 	(
 		cd one &&
 		for b in $(git branch -r)
 		do
-		git branch -r -d $b || break
+		git branch -r -d $b || exit 1
 		done &&
 		git config remotes.default "$(printf "\t drosophila  \n")" &&
 		git remote update default &&
 		git branch -r >output &&
 		test_cmp expect output
 	)
@@ -653,13 +653,13 @@
 
 test_expect_success 'update (with remotes.default defined)' '
 	(
 		cd one &&
 		for b in $(git branch -r)
 		do
-		git branch -r -d $b || break
+		git branch -r -d $b || exit 1
 		done &&
 		git config remotes.default "drosophila" &&
 		git remote update &&
 		git branch -r >output &&
 		test_cmp expect output
 	)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5510-fetch.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5510-fetch.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5510-fetch.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5510-fetch.sh	2015-05-01 03:12:02.000000000 +0800
@@ -121,13 +121,13 @@
 	git config --add remote.origin.fetch refs/pull/*/head:refs/remotes/origin/pr/* &&
 
 	git fetch --prune origin &&
 	git rev-parse origin/master &&
 	git rev-parse origin/pr/42 &&
 
-	git config --unset-all remote.origin.fetch
+	git config --unset-all remote.origin.fetch &&
 	git config remote.origin.fetch refs/pull/*/head:refs/remotes/origin/pr/* &&
 	git config --add remote.origin.fetch refs/heads/*:refs/remotes/origin/* &&
 
 	git fetch --prune origin &&
 	git rev-parse origin/master &&
 	git rev-parse origin/pr/42
@@ -593,13 +593,13 @@
 		(
 			cd one &&
 			test_unconfig fetch.prune &&
 			test_unconfig remote.origin.prune &&
 			git fetch &&
 			git rev-parse --verify refs/remotes/origin/newbranch
-		)
+		) &&
 
 		# now remove it
 		git branch -d newbranch &&
 
 		# then test
 		(
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5512-ls-remote.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5512-ls-remote.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5512-ls-remote.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5512-ls-remote.sh	2015-05-01 03:12:02.000000000 +0800
@@ -100,14 +100,16 @@
 	# role as a pattern.
 	test_must_fail git ls-remote refs*master >actual 2>&1 &&
 	test_cmp exp actual
 '
 
 test_expect_success 'die with non-2 for wrong repository even with --exit-code' '
-	git ls-remote --exit-code ./no-such-repository ;# not &&
-	status=$? &&
+	{
+		git ls-remote --exit-code ./no-such-repository
+		status=$?
+	} &&
 	test $status != 2 && test $status != 0
 '
 
 test_expect_success 'Report success even when nothing matches' '
 	git ls-remote other.git "refs/nsn/*" >actual &&
 	>expect &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5514-fetch-multiple.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5514-fetch-multiple.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5514-fetch-multiple.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5514-fetch-multiple.sh	2015-05-01 03:12:02.000000000 +0800
@@ -117,13 +117,13 @@
 
 
 test_expect_success 'git fetch --all (skipFetchAll)' '
 	(cd test4 &&
 	 for b in $(git branch -r)
 	 do
-		git branch -r -d $b || break
+		git branch -r -d $b || exit 1
 	 done &&
 	 git remote add three ../three &&
 	 git config remote.three.skipFetchAll true &&
 	 git fetch --all &&
 	 git branch -r > output &&
 	 test_cmp ../expect output)
@@ -141,13 +141,13 @@
 EOF
 
 test_expect_success 'git fetch --multiple (ignoring skipFetchAll)' '
 	(cd test4 &&
 	 for b in $(git branch -r)
 	 do
-		git branch -r -d $b || break
+		git branch -r -d $b || exit 1
 	 done &&
 	 git fetch --multiple one two three &&
 	 git branch -r > output &&
 	 test_cmp ../expect output)
 '
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5516-fetch-push.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5516-fetch-push.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5516-fetch-push.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5516-fetch-push.sh	2015-05-01 03:12:02.000000000 +0800
@@ -1434,11 +1434,127 @@
 	test_must_fail git push testrepo master &&
 	(
 		cd testrepo &&
 		test $(git -C .. rev-parse HEAD^^) = $(git rev-parse HEAD) &&
 		git diff --quiet &&
 		test fifth = "$(cat path3)"
+	) &&
+
+	# (5) push into void
+	rm -fr void &&
+	git init void &&
+	(
+		cd void &&
+		git config receive.denyCurrentBranch updateInstead
+	) &&
+	git push void master &&
+	(
+		cd void &&
+		test $(git -C .. rev-parse master) = $(git rev-parse HEAD) &&
+		git diff --quiet &&
+		git diff --cached --quiet
 	)
+'
+
+test_expect_success 'updateInstead with push-to-checkout hook' '
+	rm -fr testrepo &&
+	git init testrepo &&
+	(
+		cd testrepo &&
+		git pull .. master &&
+		git reset --hard HEAD^^ &&
+		git tag initial &&
+		git config receive.denyCurrentBranch updateInstead &&
+		write_script .git/hooks/push-to-checkout <<-\EOF
+		echo >&2 updating from $(git rev-parse HEAD)
+		echo >&2 updating to "$1"
+
+		git update-index -q --refresh &&
+		git read-tree -u -m HEAD "$1" || {
+			status=$?
+			echo >&2 read-tree failed
+			exit $status
+		}
+		EOF
+	) &&
+
+	# Try pushing into a pristine
+	git push testrepo master &&
+	(
+		cd testrepo &&
+		git diff --quiet &&
+		git diff HEAD --quiet &&
+		test $(git -C .. rev-parse HEAD) = $(git rev-parse HEAD)
+	) &&
+
+	# Try pushing into a repository with conflicting change
+	(
+		cd testrepo &&
+		git reset --hard initial &&
+		echo conflicting >path2
+	) &&
+	test_must_fail git push testrepo master &&
+	(
+		cd testrepo &&
+		test $(git rev-parse initial) = $(git rev-parse HEAD) &&
+		test conflicting = "$(cat path2)" &&
+		git diff-index --quiet --cached HEAD
+	) &&
 
+	# Try pushing into a repository with unrelated change
+	(
+		cd testrepo &&
+		git reset --hard initial &&
+		echo unrelated >path1 &&
+		echo irrelevant >path5 &&
+		git add path5
+	) &&
+	git push testrepo master &&
+	(
+		cd testrepo &&
+		test "$(cat path1)" = unrelated &&
+		test "$(cat path5)" = irrelevant &&
+		test "$(git diff --name-only --cached HEAD)" = path5 &&
+		test $(git -C .. rev-parse HEAD) = $(git rev-parse HEAD)
+	) &&
+
+	# push into void
+	rm -fr void &&
+	git init void &&
+	(
+		cd void &&
+		git config receive.denyCurrentBranch updateInstead &&
+		write_script .git/hooks/push-to-checkout <<-\EOF
+		if git rev-parse --quiet --verify HEAD
+		then
+			has_head=yes
+			echo >&2 updating from $(git rev-parse HEAD)
+		else
+			has_head=no
+			echo >&2 pushing into void
+		fi
+		echo >&2 updating to "$1"
+
+		git update-index -q --refresh &&
+		case "$has_head" in
+		yes)
+			git read-tree -u -m HEAD "$1" ;;
+		no)
+			git read-tree -u -m "$1" ;;
+		esac || {
+			status=$?
+			echo >&2 read-tree failed
+			exit $status
+		}
+		EOF
+	) &&
+
+	git push void master &&
+	(
+		cd void &&
+		git diff --quiet &&
+		git diff --cached --quiet &&
+		test $(git -C .. rev-parse HEAD) = $(git rev-parse HEAD)
+	)
 '
 
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5526-fetch-submodules.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5526-fetch-submodules.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5526-fetch-submodules.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5526-fetch-submodules.sh	2015-05-01 03:12:02.000000000 +0800
@@ -213,13 +213,13 @@
 	head1=$(git rev-parse --short HEAD) &&
 	git add submodule &&
 	git commit -m "new submodule" &&
 	head2=$(git rev-parse --short HEAD) &&
 	echo "Fetching submodule submodule" > expect.out.sub &&
 	echo "From $pwd/." > expect.err.sub &&
-	echo "   $head1..$head2  master     -> origin/master" >> expect.err.sub
+	echo "   $head1..$head2  master     -> origin/master" >>expect.err.sub &&
 	head -2 expect.err >> expect.err.sub &&
 	(
 		cd downstream &&
 		git fetch >../actual.out 2>../actual.err
 	) &&
 	test_i18ncmp expect.err.sub actual.err &&
@@ -312,13 +312,13 @@
 			cd subdir/deepsubmodule &&
 			git fetch &&
 			git checkout -q FETCH_HEAD
 		) &&
 		head1=$(git rev-parse --short HEAD^) &&
 		git add subdir/deepsubmodule &&
-		git commit -m "new deepsubmodule"
+		git commit -m "new deepsubmodule" &&
 		head2=$(git rev-parse --short HEAD) &&
 		echo "From $pwd/submodule" > ../expect.err.sub &&
 		echo "   $head1..$head2  master     -> origin/master" >> ../expect.err.sub
 	) &&
 	(
 		cd downstream &&
@@ -334,13 +334,13 @@
 	head1=$(git rev-parse --short HEAD) &&
 	git add submodule &&
 	git commit -m "new submodule" &&
 	head2=$(git rev-parse --short HEAD) &&
 	tail -2 expect.err > expect.err.deepsub &&
 	echo "From $pwd/." > expect.err &&
-	echo "   $head1..$head2  master     -> origin/master" >> expect.err
+	echo "   $head1..$head2  master     -> origin/master" >>expect.err &&
 	cat expect.err.sub >> expect.err &&
 	cat expect.err.deepsub >> expect.err &&
 	(
 		cd downstream &&
 		git config fetch.recurseSubmodules false &&
 		(
@@ -384,13 +384,13 @@
 	git config --global fetch.recurseSubmodules false &&
 	head1=$(git rev-parse --short HEAD) &&
 	git add submodule &&
 	git commit -m "new submodule" &&
 	head2=$(git rev-parse --short HEAD) &&
 	echo "From $pwd/." > expect.err.2 &&
-	echo "   $head1..$head2  master     -> origin/master" >> expect.err.2
+	echo "   $head1..$head2  master     -> origin/master" >>expect.err.2 &&
 	head -2 expect.err >> expect.err.2 &&
 	(
 		cd downstream &&
 		git config fetch.recurseSubmodules on-demand &&
 		git fetch >../actual.out 2>../actual.err
 	) &&
@@ -412,13 +412,13 @@
 	git config fetch.recurseSubmodules false &&
 	head1=$(git rev-parse --short HEAD) &&
 	git add submodule &&
 	git commit -m "new submodule" &&
 	head2=$(git rev-parse --short HEAD) &&
 	echo "From $pwd/." > expect.err.2 &&
-	echo "   $head1..$head2  master     -> origin/master" >> expect.err.2
+	echo "   $head1..$head2  master     -> origin/master" >>expect.err.2 &&
 	head -2 expect.err >> expect.err.2 &&
 	(
 		cd downstream &&
 		git config submodule.submodule.fetchRecurseSubmodules on-demand &&
 		git fetch >../actual.out 2>../actual.err
 	) &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5528-push-default.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5528-push-default.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5528-push-default.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5528-push-default.sh	2015-05-01 03:12:02.000000000 +0800
@@ -23,21 +23,21 @@
 }
 
 # $1 = push.default value
 # $2 = expected target branch for the push
 # $3 = [optional] repo to check for actual output (repo1 by default)
 test_push_success () {
-	git ${1:+-c push.default="$1"} push &&
+	git ${1:+-c} ${1:+push.default="$1"} push &&
 	check_pushed_commit HEAD "$2" "$3"
 }
 
 # $1 = push.default value
 # check that push fails and does not modify any remote branch
 test_push_failure () {
 	git --git-dir=repo1 log --no-walk --format='%h %s' --all >expect &&
-	test_must_fail git ${1:+-c push.default="$1"} push &&
+	test_must_fail git ${1:+-c} ${1:+push.default="$1"} push &&
 	git --git-dir=repo1 log --no-walk --format='%h %s' --all >actual &&
 	test_cmp expect actual
 }
 
 # $1 = success or failure
 # $2 = push.default value
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5531-deep-submodule-push.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5531-deep-submodule-push.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5531-deep-submodule-push.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5531-deep-submodule-push.sh	2015-05-01 03:12:02.000000000 +0800
@@ -101,13 +101,13 @@
 		git commit -m "First junk" &&
 		test_must_fail git push --recurse-submodules=check ../pub.git
 	)
 '
 
 test_expect_success 'push succeeds if submodule has no remote and is on the first superproject commit' '
-	git init --bare a
+	git init --bare a &&
 	git clone a a1 &&
 	(
 		cd a1 &&
 		git init b
 		(
 			cd b &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5533-push-cas.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5533-push-cas.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5533-push-cas.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5533-push-cas.sh	2015-05-01 03:12:02.000000000 +0800
@@ -11,13 +11,13 @@
 	(
 		cd src && git checkout HEAD^0
 	)
 }
 
 test_expect_success setup '
-	: create template repository
+	# create template repository
 	test_commit A &&
 	test_commit B &&
 	test_commit C
 '
 
 test_expect_success 'push to update (protected)' '
@@ -156,13 +156,13 @@
 
 test_expect_success 'cover everything with default force-with-lease (protected)' '
 	setup_srcdst_basic &&
 	(
 		cd src &&
 		git branch naster master^
-	)
+	) &&
 	git ls-remote src refs/heads/\* >expect &&
 	(
 		cd dst &&
 		test_must_fail git push --force-with-lease origin master master:naster
 	) &&
 	git ls-remote src refs/heads/\* >actual &&
@@ -171,13 +171,13 @@
 
 test_expect_success 'cover everything with default force-with-lease (allowed)' '
 	setup_srcdst_basic &&
 	(
 		cd src &&
 		git branch naster master^
-	)
+	) &&
 	(
 		cd dst &&
 		git fetch &&
 		git push --force-with-lease origin master master:naster
 	) &&
 	git ls-remote dst refs/heads/master |
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5540-http-push-webdav.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5540-http-push-webdav.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5540-http-push-webdav.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5540-http-push-webdav.sh	2015-05-01 03:12:02.000000000 +0800
@@ -166,13 +166,13 @@
 '
 
 test_expect_failure 'push to password-protected repository (no user in URL)' '
 	test_commit pw-nouser &&
 	set_askpass user@host pass@host &&
 	git push "$HTTPD_URL/auth/dumb/test_repo.git" HEAD &&
-	expect_askpass both user@host
+	expect_askpass both user@host &&
 	git rev-parse --verify HEAD >expect &&
 	git --git-dir="$HTTPD_DOCUMENT_ROOT_PATH/auth/dumb/test_repo.git" \
 		rev-parse --verify HEAD >actual &&
 	test_cmp expect actual
 '
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5541-http-push-smart.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5541-http-push-smart.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5541-http-push-smart.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5541-http-push-smart.sh	2015-05-01 03:12:02.000000000 +0800
@@ -155,13 +155,13 @@
 test_http_push_nonff "$HTTPD_DOCUMENT_ROOT_PATH"/test_repo.git \
 	"$ROOT_PATH"/test_repo_clone master 		success
 
 test_expect_success 'push fails for non-fast-forward refs unmatched by remote helper' '
 	# create a dissimilarly-named remote ref so that git is unable to match the
 	# two refs (viz. local, remote) unless an explicit refspec is provided.
-	git push origin master:retsam
+	git push origin master:retsam &&
 
 	echo "change changed" > path2 &&
 	git commit -a -m path2 --amend &&
 
 	# push master too; this ensures there is at least one '"'push'"' command to
 	# the remote helper and triggers interaction with the helper.
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t: t5543-atomic-push.sh
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5550-http-fetch-dumb.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5550-http-fetch-dumb.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5550-http-fetch-dumb.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5550-http-fetch-dumb.sh	2015-05-01 03:12:02.000000000 +0800
@@ -12,13 +12,13 @@
 start_httpd
 
 test_expect_success 'setup repository' '
 	git config push.default matching &&
 	echo content1 >file &&
 	git add file &&
-	git commit -m one
+	git commit -m one &&
 	echo content2 >file &&
 	git add file &&
 	git commit -m two
 '
 
 test_expect_success 'create http-accessible bare repository with loose objects' '
@@ -181,14 +181,14 @@
 	git --bare init clone_packed_branches.git &&
 	git --git-dir=clone_packed_branches.git fetch "$HTTPD_URL"/dumb/repo_packed_branches.git branch1:branch1 &&
 	git --git-dir=clone_packed_branches.git fetch "$HTTPD_URL"/dumb/repo_packed_branches.git branch2:branch2
 '
 
 test_expect_success 'did not use upload-pack service' '
-	grep '/git-upload-pack' <"$HTTPD_ROOT_PATH"/access.log >act
-	: >exp
+	test_might_fail grep '/git-upload-pack' <"$HTTPD_ROOT_PATH"/access.log >act &&
+	: >exp &&
 	test_cmp exp act
 '
 
 test_expect_success 'git client shows text/plain errors' '
 	test_must_fail git clone "$HTTPD_URL/error/text" 2>stderr &&
 	grep "this is the error message" stderr
@@ -211,8 +211,50 @@
 
 test_expect_success 'reencoding is robust to whitespace oddities' '
 	test_must_fail git clone "$HTTPD_URL/error/odd-spacing" 2>stderr &&
 	grep "this is the error message" stderr
 '
 
+check_language () {
+	case "$2" in
+	'')
+		>expect
+		;;
+	?*)
+		echo "Accept-Language: $1" >expect
+		;;
+	esac &&
+	GIT_CURL_VERBOSE=1 \
+	LANGUAGE=$2 \
+	git ls-remote "$HTTPD_URL/dumb/repo.git" >output 2>&1 &&
+	tr -d '\015' <output |
+	sort -u |
+	sed -ne '/^Accept-Language:/ p' >actual &&
+	test_cmp expect actual
+}
+
+test_expect_success 'git client sends Accept-Language based on LANGUAGE' '
+	check_language "ko-KR, *;q=0.9" ko_KR.UTF-8'
+
+test_expect_success 'git client sends Accept-Language correctly with unordinary LANGUAGE' '
+	check_language "ko-KR, *;q=0.9" "ko_KR:" &&
+	check_language "ko-KR, en-US;q=0.9, *;q=0.8" "ko_KR::en_US" &&
+	check_language "ko-KR, *;q=0.9" ":::ko_KR" &&
+	check_language "ko-KR, en-US;q=0.9, *;q=0.8" "ko_KR!!:en_US" &&
+	check_language "ko-KR, ja-JP;q=0.9, *;q=0.8" "ko_KR en_US:ja_JP"'
+
+test_expect_success 'git client sends Accept-Language with many preferred languages' '
+	check_language "ko-KR, en-US;q=0.9, fr-CA;q=0.8, de;q=0.7, sr;q=0.6, \
+ja;q=0.5, zh;q=0.4, sv;q=0.3, pt;q=0.2, *;q=0.1" \
+		ko_KR.EUC-KR:en_US.UTF-8:fr_CA:de.UTF-8@euro:sr@latin:ja:zh:sv:pt &&
+	check_language "ko-KR, en-US;q=0.99, fr-CA;q=0.98, de;q=0.97, sr;q=0.96, \
+ja;q=0.95, zh;q=0.94, sv;q=0.93, pt;q=0.92, nb;q=0.91, *;q=0.90" \
+		ko_KR.EUC-KR:en_US.UTF-8:fr_CA:de.UTF-8@euro:sr@latin:ja:zh:sv:pt:nb
+'
+
+test_expect_success 'git client does not send an empty Accept-Language' '
+	GIT_CURL_VERBOSE=1 LANGUAGE= git ls-remote "$HTTPD_URL/dumb/repo.git" 2>stderr &&
+	! grep "^Accept-Language:" stderr
+'
+
 stop_httpd
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5551-http-fetch-smart.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5551-http-fetch-smart.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5551-http-fetch-smart.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5551-http-fetch-smart.sh	2015-05-01 03:12:02.000000000 +0800
@@ -80,13 +80,13 @@
 	test_cmp exp act
 '
 
 test_expect_success 'fetch changes via http' '
 	echo content >>file &&
 	git commit -a -m two &&
-	git push public
+	git push public &&
 	(cd clone && git pull) &&
 	test_cmp file clone/file
 '
 
 cat >exp <<EOF
 GET  /smart/repo.git/info/refs?service=git-upload-pack HTTP/1.1 200
@@ -166,13 +166,13 @@
 	 export GIT_SMART_HTTP &&
 	 cd clone &&
 	 test_must_fail git fetch)
 '
 
 test_expect_success 'invalid Content-Type rejected' '
-	test_must_fail git clone $HTTPD_URL/broken_smart/repo.git 2>actual
+	test_must_fail git clone $HTTPD_URL/broken_smart/repo.git 2>actual &&
 	grep "not valid:" actual
 '
 
 test_expect_success 'create namespaced refs' '
 	test_commit namespaced &&
 	git push public HEAD:refs/namespaces/ns/refs/heads/master &&
@@ -206,13 +206,13 @@
 127.0.0.1	FALSE	/smart_cookies/repo.git/info/	FALSE	0	name	value
 EOF
 test_expect_success 'cookies stored in http.cookiefile when http.savecookies set' '
 	git config http.cookiefile cookies.txt &&
 	git config http.savecookies true &&
 	git ls-remote $HTTPD_URL/smart_cookies/repo.git master &&
-	tail -3 cookies.txt > cookies_tail.txt
+	tail -3 cookies.txt >cookies_tail.txt &&
 	test_cmp expect_cookies.txt cookies_tail.txt
 '
 
 test_expect_success 'transfer.hiderefs works over smart-http' '
 	test_commit hidden &&
 	test_commit visible &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5709-clone-refspec.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5709-clone-refspec.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t5709-clone-refspec.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t5709-clone-refspec.sh	2015-05-01 03:12:02.000000000 +0800
@@ -144,13 +144,13 @@
 test_expect_success '--single-branch with detached' '
 	(
 		cd dir_detached && git fetch &&
 		git for-each-ref refs/remotes/origin |
 		sed -e "/HEAD$/d" \
 		    -e "s|/remotes/origin/|/heads/|" >../actual
-	)
+	) &&
 	# nothing
 	>expect &&
 	test_cmp expect actual
 '
 
 test_done
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t: t5810-proto-disable-local.sh
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t: t5811-proto-disable-git.sh
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t: t5812-proto-disable-http.sh
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t: t5813-proto-disable-ssh.sh
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t: t5814-proto-disable-ext.sh
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t: t5815-submodule-protos.sh
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6000-rev-list-misc.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6000-rev-list-misc.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6000-rev-list-misc.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6000-rev-list-misc.sh	2015-05-01 03:12:02.000000000 +0800
@@ -39,13 +39,13 @@
 	echo frotz >one &&
 	cp one two/three &&
 	git add one two/three &&
 	test_tick &&
 	git commit -m that &&
 
-	ONE=$(git rev-parse HEAD:one)
+	ONE=$(git rev-parse HEAD:one) &&
 	git rev-list --objects HEAD two >output &&
 	grep "$ONE two/three" output &&
 	! grep one output
 '
 
 test_expect_success 'rev-list A..B and rev-list ^A B are the same' '
@@ -82,18 +82,22 @@
 	#   - we do show the tree "two", because it has a valid cache tree
 	#     from the last commit
 	#
 	#   - we do not show the root tree; since we updated the index, it
 	#     does not have a valid cache tree
 	#
-	cat >expect <<-\EOF
+	cat >expect <<-\EOF &&
 	8e4020bb5a8d8c873b25de15933e75cc0fc275df one
 	d9d3a7417b9605cfd88ee6306b28dadc29e6ab08 only-in-index
 	9200b628cf9dc883a85a7abc8d6e6730baee589c two
 	EOF
 	echo only-in-index >only-in-index &&
 	git add only-in-index &&
 	git rev-list --objects --indexed-objects >actual &&
 	test_cmp expect actual
 '
 
+test_expect_success '--bisect and --first-parent can not be combined' '
+	test_must_fail git rev-list --bisect --first-parent HEAD
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6006-rev-list-format.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6006-rev-list-format.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6006-rev-list-format.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6006-rev-list-format.sh	2015-05-01 03:12:02.000000000 +0800
@@ -42,13 +42,13 @@
 	tree1_short=$(git rev-parse --verify --short $tree1) &&
 	echo "$changed" > foo &&
 	echo "$changed_iso88591" | git commit -a -F - &&
 	head2=$(git rev-parse --verify HEAD) &&
 	head2_short=$(git rev-parse --verify --short $head2) &&
 	tree2=$(git rev-parse --verify HEAD:) &&
-	tree2_short=$(git rev-parse --verify --short $tree2)
+	tree2_short=$(git rev-parse --verify --short $tree2) &&
 	git config --unset i18n.commitEncoding
 '
 
 # usage: test_format name format_string [failure] <expected_output
 test_format () {
 	cat >expect.$1
@@ -355,16 +355,13 @@
 '
 
 test_expect_success 'empty email' '
 	test_tick &&
 	C=$(GIT_AUTHOR_EMAIL= git commit-tree HEAD^{tree} </dev/null) &&
 	A=$(git show --pretty=format:%an,%ae,%ad%n -s $C) &&
-	test "$A" = "A U Thor,,Thu Apr 7 15:14:13 2005 -0700" || {
-		echo "Eh? $A" >failure
-		false
-	}
+	verbose test "$A" = "A U Thor,,Thu Apr 7 15:14:13 2005 -0700"
 '
 
 test_expect_success 'del LF before empty (1)' '
 	git show -s --pretty=format:"%s%n%-b%nThanks%n" HEAD^^ >actual &&
 	test_line_count = 2 actual
 '
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6012-rev-list-simplify.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6012-rev-list-simplify.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6012-rev-list-simplify.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6012-rev-list-simplify.sh	2015-05-01 03:12:02.000000000 +0800
@@ -92,16 +92,13 @@
 	shift &&
 	param="$*" &&
 	test_expect_$outcome "log $param" '
 		git log --pretty="$FMT" --parents $param |
 		unnote >actual &&
 		sed -e "s/^.*	\([^ ]*\) .*/\1/" >check <actual &&
-		test_cmp expect check || {
-			cat actual
-			false
-		}
+		test_cmp expect check
 	'
 }
 
 check_result () {
 	check_outcome success "$@"
 }
@@ -118,16 +115,13 @@
 check_result 'E C B A' --full-history E -- lost
 test_expect_success 'full history simplification without parent' '
 	printf "%s\n" E C B A >expect &&
 	git log --pretty="$FMT" --full-history E -- lost |
 	unnote >actual &&
 	sed -e "s/^.*	\([^ ]*\) .*/\1/" >check <actual &&
-	test_cmp expect check || {
-		cat actual
-		false
-	}
+	test_cmp expect check
 '
 
 test_expect_success '--full-diff is not affected by --parents' '
 	git log -p --pretty="%H" --full-diff -- file >expected &&
 	git log -p --pretty="%H" --full-diff --parents -- file >actual &&
 	test_cmp expected actual
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6014-rev-list-all.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6014-rev-list-all.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6014-rev-list-all.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6014-rev-list-all.sh	2015-05-01 03:12:02.000000000 +0800
@@ -32,7 +32,11 @@
 	git gc &&
 	git prune --expire=now &&
 	git show HEAD
 
 '
 
+test_expect_success 'rev-list --graph --no-walk is forbidden' '
+	test_must_fail git rev-list --graph --no-walk HEAD
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6022-merge-rename.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6022-merge-rename.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6022-merge-rename.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6022-merge-rename.sh	2015-05-01 03:12:02.000000000 +0800
@@ -682,13 +682,13 @@
 	>irrelevant &&
 	mkdir df &&
 	>df/file &&
 	git add -A &&
 	git commit -mA &&
 
-	git checkout -b side
+	git checkout -b side &&
 	git rm -rf df &&
 	git commit -mB &&
 
 	git checkout master &&
 	git rm -rf df &&
 	echo bla >df &&
@@ -713,13 +713,13 @@
 
 	>irrelevant &&
 	>file &&
 	git add -A &&
 	git commit -mA &&
 
-	git checkout -b side
+	git checkout -b side &&
 	git rm -f file &&
 	git commit -m "Delete file" &&
 
 	git checkout master &&
 	echo bla >file &&
 	git add -A &&
@@ -742,13 +742,13 @@
 	git init &&
 
 	printf "1\n2\n3\n4\n5\n6\n7\n8\n" >file &&
 	git add -A &&
 	git commit -mA &&
 
-	git checkout -b side
+	git checkout -b side &&
 	cp file newfile &&
 	git add -A &&
 	git commit -m "Add file copy" &&
 
 	git checkout master &&
 	git mv file newfile &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6026-merge-attr.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6026-merge-attr.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6026-merge-attr.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6026-merge-attr.sh	2015-05-01 03:12:02.000000000 +0800
@@ -8,29 +8,29 @@
 . ./test-lib.sh
 
 test_expect_success setup '
 
 	for f in text binary union
 	do
-		echo Initial >$f && git add $f || break
+		echo Initial >$f && git add $f || return 1
 	done &&
 	test_tick &&
 	git commit -m Initial &&
 
 	git branch side &&
 	for f in text binary union
 	do
-		echo Master >>$f && git add $f || break
+		echo Master >>$f && git add $f || return 1
 	done &&
 	test_tick &&
 	git commit -m Master &&
 
 	git checkout side &&
 	for f in text binary union
 	do
-		echo Side >>$f && git add $f || break
+		echo Side >>$f && git add $f || return 1
 	done &&
 	test_tick &&
 	git commit -m Side &&
 
 	git tag anchor
 '
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6028-merge-up-to-date.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6028-merge-up-to-date.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6028-merge-up-to-date.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6028-merge-up-to-date.sh	2015-05-01 03:12:02.000000000 +0800
@@ -80,13 +80,13 @@
 '
 
 test_expect_success 'merge fast-forward octopus' '
 
 	git reset --hard c0 &&
 	test_tick &&
-	git merge c1 c2
+	git merge c1 c2 &&
 	expect=$(git rev-parse c2) &&
 	current=$(git rev-parse HEAD) &&
 	test "$expect" = "$current"
 '
 
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6030-bisect-porcelain.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6030-bisect-porcelain.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6030-bisect-porcelain.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6030-bisect-porcelain.sh	2015-05-01 03:12:02.000000000 +0800
@@ -49,21 +49,14 @@
 	git bisect next
 '
 
 test_expect_success 'bisect does not start with only one good' '
 	git bisect reset &&
 	git bisect start &&
-	git bisect good $HASH1 || return 1
-
-	if git bisect next
-	then
-		echo Oops, should have failed.
-		false
-	else
-		:
-	fi
+	git bisect good $HASH1 &&
+	test_must_fail git bisect next
 '
 
 test_expect_success 'bisect start with one bad and good' '
 	git bisect reset &&
 	git bisect start &&
 	git bisect good $HASH1 &&
@@ -188,88 +181,68 @@
 '
 
 # $HASH1 is good, $HASH4 is bad, we skip $HASH3
 # but $HASH2 is bad,
 # so we should find $HASH2 as the first bad commit
 test_expect_success 'bisect skip: successful result' '
+	test_when_finished git bisect reset &&
 	git bisect reset &&
 	git bisect start $HASH4 $HASH1 &&
 	git bisect skip &&
 	git bisect bad > my_bisect_log.txt &&
-	grep "$HASH2 is the first bad commit" my_bisect_log.txt &&
-	git bisect reset
+	grep "$HASH2 is the first bad commit" my_bisect_log.txt
 '
 
 # $HASH1 is good, $HASH4 is bad, we skip $HASH3 and $HASH2
 # so we should not be able to tell the first bad commit
 # among $HASH2, $HASH3 and $HASH4
 test_expect_success 'bisect skip: cannot tell between 3 commits' '
+	test_when_finished git bisect reset &&
 	git bisect start $HASH4 $HASH1 &&
-	git bisect skip || return 1
-
-	if git bisect skip > my_bisect_log.txt
-	then
-		echo Oops, should have failed.
-		false
-	else
-		test $? -eq 2 &&
-		grep "first bad commit could be any of" my_bisect_log.txt &&
-		! grep $HASH1 my_bisect_log.txt &&
-		grep $HASH2 my_bisect_log.txt &&
-		grep $HASH3 my_bisect_log.txt &&
-		grep $HASH4 my_bisect_log.txt &&
-		git bisect reset
-	fi
+	git bisect skip &&
+	test_expect_code 2 git bisect skip >my_bisect_log.txt &&
+	grep "first bad commit could be any of" my_bisect_log.txt &&
+	! grep $HASH1 my_bisect_log.txt &&
+	grep $HASH2 my_bisect_log.txt &&
+	grep $HASH3 my_bisect_log.txt &&
+	grep $HASH4 my_bisect_log.txt
 '
 
 # $HASH1 is good, $HASH4 is bad, we skip $HASH3
 # but $HASH2 is good,
 # so we should not be able to tell the first bad commit
 # among $HASH3 and $HASH4
 test_expect_success 'bisect skip: cannot tell between 2 commits' '
+	test_when_finished git bisect reset &&
 	git bisect start $HASH4 $HASH1 &&
-	git bisect skip || return 1
-
-	if git bisect good > my_bisect_log.txt
-	then
-		echo Oops, should have failed.
-		false
-	else
-		test $? -eq 2 &&
-		grep "first bad commit could be any of" my_bisect_log.txt &&
-		! grep $HASH1 my_bisect_log.txt &&
-		! grep $HASH2 my_bisect_log.txt &&
-		grep $HASH3 my_bisect_log.txt &&
-		grep $HASH4 my_bisect_log.txt &&
-		git bisect reset
-	fi
+	git bisect skip &&
+	test_expect_code 2 git bisect good >my_bisect_log.txt &&
+	grep "first bad commit could be any of" my_bisect_log.txt &&
+	! grep $HASH1 my_bisect_log.txt &&
+	! grep $HASH2 my_bisect_log.txt &&
+	grep $HASH3 my_bisect_log.txt &&
+	grep $HASH4 my_bisect_log.txt
 '
 
 # $HASH1 is good, $HASH4 is both skipped and bad, we skip $HASH3
 # and $HASH2 is good,
 # so we should not be able to tell the first bad commit
 # among $HASH3 and $HASH4
 test_expect_success 'bisect skip: with commit both bad and skipped' '
+	test_when_finished git bisect reset &&
 	git bisect start &&
 	git bisect skip &&
 	git bisect bad &&
 	git bisect good $HASH1 &&
 	git bisect skip &&
-	if git bisect good > my_bisect_log.txt
-	then
-		echo Oops, should have failed.
-		false
-	else
-		test $? -eq 2 &&
-		grep "first bad commit could be any of" my_bisect_log.txt &&
-		! grep $HASH1 my_bisect_log.txt &&
-		! grep $HASH2 my_bisect_log.txt &&
-		grep $HASH3 my_bisect_log.txt &&
-		grep $HASH4 my_bisect_log.txt &&
-		git bisect reset
-	fi
+	test_expect_code 2 git bisect good >my_bisect_log.txt &&
+	grep "first bad commit could be any of" my_bisect_log.txt &&
+	! grep $HASH1 my_bisect_log.txt &&
+	! grep $HASH2 my_bisect_log.txt &&
+	grep $HASH3 my_bisect_log.txt &&
+	grep $HASH4 my_bisect_log.txt
 '
 
 # We want to automatically find the commit that
 # introduced "Another" into hello.
 test_expect_success \
     '"git bisect run" simple case' \
@@ -598,14 +571,13 @@
 		cd bare.nocheckout &&
 		git bisect start --no-checkout &&
 		git bisect good $HASH1 &&
 		git bisect bad $HASH4 &&
 		git bisect run eval \
 			"test \$(git rev-list BISECT_HEAD ^$HASH2 --max-count=1 | wc -l) = 0" \
-			>../nocheckout.log &&
-		git bisect reset
+			>../nocheckout.log
 	) &&
 	grep "$HASH3 is the first bad commit" nocheckout.log
 '
 
 
 test_expect_success 'test bisection on bare repo - --no-checkout defaulted' '
@@ -614,14 +586,13 @@
 		cd bare.defaulted &&
 		git bisect start &&
 		git bisect good $HASH1 &&
 		git bisect bad $HASH4 &&
 		git bisect run eval \
 			"test \$(git rev-list BISECT_HEAD ^$HASH2 --max-count=1 | wc -l) = 0" \
-			>../defaulted.log &&
-		git bisect reset
+			>../defaulted.log
 	) &&
 	grep "$HASH3 is the first bad commit" defaulted.log
 '
 
 #
 # This creates a broken branch which cannot be checked out because
@@ -639,20 +610,20 @@
 	git tag BROKEN_HASH4 $HASH4 &&
 	add_line_into_file "5(broken): first line on a broken branch" hello2 &&
 	git tag BROKEN_HASH5 &&
 	mkdir missing &&
 	:> missing/MISSING &&
 	git add missing/MISSING &&
-	git commit -m "6(broken): Added file that will be deleted"
+	git commit -m "6(broken): Added file that will be deleted" &&
 	git tag BROKEN_HASH6 &&
 	add_line_into_file "7(broken): second line on a broken branch" hello2 &&
 	git tag BROKEN_HASH7 &&
 	add_line_into_file "8(broken): third line on a broken branch" hello2 &&
 	git tag BROKEN_HASH8 &&
 	git rm missing/MISSING &&
-	git commit -m "9(broken): Remove missing file"
+	git commit -m "9(broken): Remove missing file" &&
 	git tag BROKEN_HASH9 &&
 	rm .git/objects/39/f7e61a724187ab767d2e08442d9b6b9dab587d
 '
 
 echo "" > expected.ok
 cat > expected.missing-tree.default <<EOF
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6032-merge-large-rename.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6032-merge-large-rename.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6032-merge-large-rename.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6032-merge-large-rename.sh	2015-05-01 03:12:02.000000000 +0800
@@ -25,16 +25,16 @@
 	done
 	echo $1: $3
 }
 
 test_rename() {
 	test_expect_success "rename ($1, $2)" '
-	n='$1'
-	expect='$2'
+	n='$1' &&
+	expect='$2' &&
 	git checkout -f master &&
-	git branch -D test$n || true &&
+	test_might_fail git branch -D test$n &&
 	git reset --hard initial &&
 	for i in $(count $n); do
 		make_text $i initial initial >$i
 	done &&
 	git add . &&
 	git commit -m add=$n &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6034-merge-rename-nocruft.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6034-merge-rename-nocruft.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6034-merge-rename-nocruft.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6034-merge-rename-nocruft.sh	2015-05-01 03:12:02.000000000 +0800
@@ -70,70 +70,30 @@
 
 # This test broke in 65ac6e9c3f47807cb603af07a6a9e1a43bc119ae
 test_expect_success 'merge white into red (A->B,M->N)' \
 '
 	git checkout -b red-white red &&
 	git merge white &&
-	git write-tree >/dev/null || {
-		echo "BAD: merge did not complete"
-		return 1
-	}
-
-	test -f B || {
-		echo "BAD: B does not exist in working directory"
-		return 1
-	}
-	test -f N || {
-		echo "BAD: N does not exist in working directory"
-		return 1
-	}
-	test -f R || {
-		echo "BAD: R does not exist in working directory"
-		return 1
-	}
-
-	test -f A && {
-		echo "BAD: A still exists in working directory"
-		return 1
-	}
-	test -f M && {
-		echo "BAD: M still exists in working directory"
-		return 1
-	}
-	return 0
+	git write-tree &&
+	test_path_is_file B &&
+	test_path_is_file N &&
+	test_path_is_file R &&
+	test_path_is_missing A &&
+	test_path_is_missing M
 '
 
 # This test broke in 8371234ecaaf6e14fe3f2082a855eff1bbd79ae9
 test_expect_success 'merge blue into white (A->B, mod A, A untracked)' \
 '
 	git checkout -b white-blue white &&
 	echo dirty >A &&
 	git merge blue &&
-	git write-tree >/dev/null || {
-		echo "BAD: merge did not complete"
-		return 1
-	}
-
-	test -f A || {
-		echo "BAD: A does not exist in working directory"
-		return 1
-	}
-	test `cat A` = dirty || {
-		echo "BAD: A content is wrong"
-		return 1
-	}
-	test -f B || {
-		echo "BAD: B does not exist in working directory"
-		return 1
-	}
-	test -f N || {
-		echo "BAD: N does not exist in working directory"
-		return 1
-	}
-	test -f M && {
-		echo "BAD: M still exists in working directory"
-		return 1
-	}
-	return 0
+	git write-tree &&
+	test_path_is_file A &&
+	echo dirty >expect &&
+	test_cmp expect A &&
+	test_path_is_file B &&
+	test_path_is_file N &&
+	test_path_is_missing M
 '
 
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6036-recursive-corner-cases.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6036-recursive-corner-cases.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6036-recursive-corner-cases.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6036-recursive-corner-cases.sh	2015-05-01 03:12:02.000000000 +0800
@@ -83,13 +83,13 @@
 test_expect_success 'setup criss-cross + rename merges with basic modification' '
 	git rm -rf . &&
 	git clean -fdqx &&
 	rm -rf .git &&
 	git init &&
 
-	ten="0 1 2 3 4 5 6 7 8 9"
+	ten="0 1 2 3 4 5 6 7 8 9" &&
 	for i in $ten
 	do
 		echo line $i in a sample file
 	done >one &&
 	for i in $ten
 	do
@@ -192,18 +192,13 @@
 '
 
 test_expect_success 'git detects differently handled merges conflict' '
 	git reset --hard &&
 	git checkout D^0 &&
 
-	git merge -s recursive E^0 && {
-		echo "BAD: should have conflicted"
-		test "Incorrectly merged content" = "$(cat new_a)" &&
-			echo "BAD: Silently accepted wrong content"
-		return 1
-	}
+	test_must_fail git merge -s recursive E^0 &&
 
 	test 3 = $(git ls-files -s | wc -l) &&
 	test 3 = $(git ls-files -u | wc -l) &&
 	test 0 = $(git ls-files -o | wc -l) &&
 
 	test $(git rev-parse :2:new_a) = $(git rev-parse D:new_a) &&
@@ -530,13 +525,13 @@
 	test 4 -eq $(git ls-files -s | wc -l) &&
 	test 3 -eq $(git ls-files -u | wc -l) &&
 	test 1 -eq $(git ls-files -o | wc -l) &&
 
 	test $(git rev-parse :3:a) = $(git rev-parse B:a) &&
 	test $(git rev-parse :2:a/file) = $(git rev-parse E2:a/file) &&
-	test $(git rev-parse :1:a/file) = $(git rev-parse C:a/file)
+	test $(git rev-parse :1:a/file) = $(git rev-parse C:a/file) &&
 	test $(git rev-parse :0:ignore-me) = $(git rev-parse A:ignore-me) &&
 
 	test -f a~D^0
 '
 
 #
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6039-merge-ignorecase.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6039-merge-ignorecase.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6039-merge-ignorecase.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6039-merge-ignorecase.sh	2015-05-01 03:12:02.000000000 +0800
@@ -12,13 +12,13 @@
 
 test_expect_success 'merge with case-changing rename' '
 	test $(git config core.ignorecase) = true &&
 	>TestCase &&
 	git add TestCase &&
 	git commit -m "add TestCase" &&
-	git tag baseline
+	git tag baseline &&
 	git checkout -b with-camel &&
 	>foo &&
 	git add foo &&
 	git commit -m "intervening commit" &&
 	git checkout master &&
 	git rm TestCase &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6040-tracking-info.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6040-tracking-info.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6040-tracking-info.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6040-tracking-info.sh	2015-05-01 03:12:02.000000000 +0800
@@ -9,16 +9,15 @@
 	git add "$1" &&
 	test_tick &&
 	git commit -m "$1"
 }
 
 test_expect_success setup '
-	for i in a b c;
-	do
-		advance $i || break
-	done &&
+	advance a &&
+	advance b &&
+	advance c &&
 	git clone . test &&
 	(
 		cd test &&
 		git checkout -b b1 origin &&
 		git reset --hard HEAD^ &&
 		advance d &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6111-rev-list-treesame.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6111-rev-list-treesame.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6111-rev-list-treesame.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6111-rev-list-treesame.sh	2015-05-01 03:12:02.000000000 +0800
@@ -55,13 +55,13 @@
 	test_commit "Bad commit" file "Silly" I &&
 
 	test_tick && git revert I && note J &&
 
 	git checkout master &&
 	test_tick && git merge --no-ff fiddler-branch &&
-	note K
+	note K &&
 
 	test_commit "file=Part 1" file "Part 1" L &&
 
 	test_tick && test_must_fail git merge part2-branch &&
 	test_commit M file "Parts 1+2"
 '
@@ -89,16 +89,13 @@
 
 	param="$*" &&
 	test_expect_$outcome "log $param" '
 		git log --format="$FMT" $param |
 		unnote >actual &&
 		sed -e "$munge_actual" <actual >check &&
-		test_cmp expect check || {
-			cat actual
-			false
-		}
+		test_cmp expect check
 	'
 }
 
 check_result () {
 	check_outcome success "$@"
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6132-pathspec-exclude.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6132-pathspec-exclude.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6132-pathspec-exclude.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6132-pathspec-exclude.sh	2015-05-01 03:12:02.000000000 +0800
@@ -27,153 +27,153 @@
 
 test_expect_success 'exclude only should error out' '
 	test_must_fail git log --oneline --format=%s -- ":(exclude)sub"
 '
 
 test_expect_success 't_e_i() exclude sub' '
-	git log --oneline --format=%s -- . ":(exclude)sub" >actual
+	git log --oneline --format=%s -- . ":(exclude)sub" >actual &&
 	cat <<EOF >expect &&
 sub2/file
 file
 EOF
 	test_cmp expect actual
 '
 
 test_expect_success 't_e_i() exclude sub/sub/file' '
-	git log --oneline --format=%s -- . ":(exclude)sub/sub/file" >actual
+	git log --oneline --format=%s -- . ":(exclude)sub/sub/file" >actual &&
 	cat <<EOF >expect &&
 sub2/file
 sub/sub/sub/file
 sub/file2
 sub/file
 file
 EOF
 	test_cmp expect actual
 '
 
 test_expect_success 't_e_i() exclude sub using mnemonic' '
-	git log --oneline --format=%s -- . ":!sub" >actual
+	git log --oneline --format=%s -- . ":!sub" >actual &&
 	cat <<EOF >expect &&
 sub2/file
 file
 EOF
 	test_cmp expect actual
 '
 
 test_expect_success 't_e_i() exclude :(icase)SUB' '
-	git log --oneline --format=%s -- . ":(exclude,icase)SUB" >actual
+	git log --oneline --format=%s -- . ":(exclude,icase)SUB" >actual &&
 	cat <<EOF >expect &&
 sub2/file
 file
 EOF
 	test_cmp expect actual
 '
 
 test_expect_success 't_e_i() exclude sub2 from sub' '
 	(
 	cd sub &&
-	git log --oneline --format=%s -- :/ ":/!sub2" >actual
+	git log --oneline --format=%s -- :/ ":/!sub2" >actual &&
 	cat <<EOF >expect &&
 sub/sub/sub/file
 sub/file2
 sub/sub/file
 sub/file
 file
 EOF
 	test_cmp expect actual
 	)
 '
 
 test_expect_success 't_e_i() exclude sub/*file' '
-	git log --oneline --format=%s -- . ":(exclude)sub/*file" >actual
+	git log --oneline --format=%s -- . ":(exclude)sub/*file" >actual &&
 	cat <<EOF >expect &&
 sub2/file
 sub/file2
 file
 EOF
 	test_cmp expect actual
 '
 
 test_expect_success 't_e_i() exclude :(glob)sub/*/file' '
-	git log --oneline --format=%s -- . ":(exclude,glob)sub/*/file" >actual
+	git log --oneline --format=%s -- . ":(exclude,glob)sub/*/file" >actual &&
 	cat <<EOF >expect &&
 sub2/file
 sub/sub/sub/file
 sub/file2
 sub/file
 file
 EOF
 	test_cmp expect actual
 '
 
 test_expect_success 'm_p_d() exclude sub' '
-	git ls-files -- . ":(exclude)sub" >actual
+	git ls-files -- . ":(exclude)sub" >actual &&
 	cat <<EOF >expect &&
 file
 sub2/file
 EOF
 	test_cmp expect actual
 '
 
 test_expect_success 'm_p_d() exclude sub/sub/file' '
-	git ls-files -- . ":(exclude)sub/sub/file" >actual
+	git ls-files -- . ":(exclude)sub/sub/file" >actual &&
 	cat <<EOF >expect &&
 file
 sub/file
 sub/file2
 sub/sub/sub/file
 sub2/file
 EOF
 	test_cmp expect actual
 '
 
 test_expect_success 'm_p_d() exclude sub using mnemonic' '
-	git ls-files -- . ":!sub" >actual
+	git ls-files -- . ":!sub" >actual &&
 	cat <<EOF >expect &&
 file
 sub2/file
 EOF
 	test_cmp expect actual
 '
 
 test_expect_success 'm_p_d() exclude :(icase)SUB' '
-	git ls-files -- . ":(exclude,icase)SUB" >actual
+	git ls-files -- . ":(exclude,icase)SUB" >actual &&
 	cat <<EOF >expect &&
 file
 sub2/file
 EOF
 	test_cmp expect actual
 '
 
 test_expect_success 'm_p_d() exclude sub2 from sub' '
 	(
 	cd sub &&
-	git ls-files -- :/ ":/!sub2" >actual
+	git ls-files -- :/ ":/!sub2" >actual &&
 	cat <<EOF >expect &&
 ../file
 file
 file2
 sub/file
 sub/sub/file
 EOF
 	test_cmp expect actual
 	)
 '
 
 test_expect_success 'm_p_d() exclude sub/*file' '
-	git ls-files -- . ":(exclude)sub/*file" >actual
+	git ls-files -- . ":(exclude)sub/*file" >actual &&
 	cat <<EOF >expect &&
 file
 sub/file2
 sub2/file
 EOF
 	test_cmp expect actual
 '
 
 test_expect_success 'm_p_d() exclude :(glob)sub/*/file' '
-	git ls-files -- . ":(exclude,glob)sub/*/file" >actual
+	git ls-files -- . ":(exclude,glob)sub/*/file" >actual &&
 	cat <<EOF >expect &&
 file
 sub/file
 sub/file2
 sub/sub/sub/file
 sub2/file
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6200-fmt-merge-msg.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6200-fmt-merge-msg.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t6200-fmt-merge-msg.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t6200-fmt-merge-msg.sh	2015-05-01 03:12:02.000000000 +0800
@@ -191,13 +191,13 @@
 
 	git -c core.commentchar="x" fmt-merge-msg --log=5 <.git/FETCH_HEAD >actual &&
 	test_cmp expected actual
 '
 
 test_expect_success 'merge.log=0 disables shortlog' '
-	echo "Merge branch ${apos}left${apos}" >expected
+	echo "Merge branch ${apos}left${apos}" >expected &&
 	git -c merge.log=0 fmt-merge-msg <.git/FETCH_HEAD >actual &&
 	test_cmp expected actual
 '
 
 test_expect_success '--log=3 limits shortlog length' '
 	cat >expected <<-EOF &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t7001-mv.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t7001-mv.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t7001-mv.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t7001-mv.sh	2015-05-01 03:12:02.000000000 +0800
@@ -158,16 +158,13 @@
 	git add papers partA &&
 	T1=`git write-tree` &&
 
 	git mv papers/unsorted/Thesis.pdf papers/all-papers/moo-blah.pdf &&
 
 	T=`git write-tree` &&
-	git ls-tree -r $T | grep partA/outline.txt || {
-		git ls-tree -r $T
-		(exit 1)
-	}
+	git ls-tree -r $T | verbose grep partA/outline.txt
 '
 
 rm -fr papers partA path?
 
 test_expect_success "Sergey Vlasov's test case" '
 	rm -fr .git &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t7004-tag.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t7004-tag.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t7004-tag.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t7004-tag.sh	2015-05-01 03:12:02.000000000 +0800
@@ -1177,14 +1177,14 @@
 	test_i18ncmp first.expect first.actual
 '
 
 test_expect_success \
 	'message in editor has initial comment: remainder' '
 	# remove commented lines from the remainder -- should be empty
-	>rest.expect
-	sed -e 1d -e '/^#/d' <actual >rest.actual &&
+	>rest.expect &&
+	sed -e 1d -e "/^#/d" <actual >rest.actual &&
 	test_cmp rest.expect rest.actual
 '
 
 get_tag_header reuse $commit commit $time >expect
 echo "An annotation to be reused" >> expect
 test_expect_success \
@@ -1456,12 +1456,40 @@
 	foo1.3
 	foo1.6
 	EOF
 	test_cmp expect actual
 '
 
+test_expect_success 'version sort with prerelease reordering' '
+	git config --unset tag.sort &&
+	git config versionsort.prereleaseSuffix -rc &&
+	git tag foo1.6-rc1 &&
+	git tag foo1.6-rc2 &&
+	git tag -l --sort=version:refname "foo*" >actual &&
+	cat >expect <<-\EOF &&
+	foo1.3
+	foo1.6-rc1
+	foo1.6-rc2
+	foo1.6
+	foo1.10
+	EOF
+	test_cmp expect actual
+'
+
+test_expect_success 'reverse version sort with prerelease reordering' '
+	git tag -l --sort=-version:refname "foo*" >actual &&
+	cat >expect <<-\EOF &&
+	foo1.10
+	foo1.6
+	foo1.6-rc2
+	foo1.6-rc1
+	foo1.3
+	EOF
+	test_cmp expect actual
+'
+
 run_with_limited_stack () {
 	(ulimit -s 128 && "$@")
 }
 
 test_lazy_prereq ULIMIT 'run_with_limited_stack true'
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t7006-pager.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t7006-pager.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t7006-pager.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t7006-pager.sh	2015-05-01 03:12:02.000000000 +0800
@@ -393,13 +393,13 @@
 '
 
 test_expect_success TTY 'command-specific pager overrides core.pager' '
 	sane_unset PAGER GIT_PAGER &&
 	echo "foo:initial" >expect &&
 	>actual &&
-	test_config core.pager "exit 1"
+	test_config core.pager "exit 1" &&
 	test_config pager.log "sed s/^/foo:/ >actual" &&
 	test_terminal git log --format=%s -1 &&
 	test_cmp expect actual
 '
 
 test_expect_success TTY 'command-specific pager overridden by environment' '
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t7007-show.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t7007-show.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t7007-show.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t7007-show.sh	2015-05-01 03:12:02.000000000 +0800
@@ -121,7 +121,11 @@
 test_expect_success '--quiet suppresses diff' '
 	echo main3 >expect &&
 	git show --quiet --format=%s main3 >actual &&
 	test_cmp expect actual
 '
 
+test_expect_success 'show --graph is forbidden' '
+  test_must_fail git show --graph HEAD
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t7009-filter-branch-null-sha1.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t7009-filter-branch-null-sha1.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t7009-filter-branch-null-sha1.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t7009-filter-branch-null-sha1.sh	2015-05-01 03:12:02.000000000 +0800
@@ -10,13 +10,13 @@
 '
 
 test_expect_success 'setup: a commit with a bogus null sha1 in the tree' '
 	{
 		git ls-tree HEAD &&
 		printf "160000 commit $_z40\\tbroken\\n"
-	} >broken-tree
+	} >broken-tree &&
 	echo "add broken entry" >msg &&
 
 	tree=$(git mktree <broken-tree) &&
 	test_tick &&
 	commit=$(git commit-tree $tree -p HEAD <msg) &&
 	git update-ref HEAD "$commit"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t7201-co.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t7201-co.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t7201-co.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t7201-co.sh	2015-05-01 03:12:02.000000000 +0800
@@ -85,20 +85,16 @@
 '
 
 test_expect_success "checkout with unrelated dirty tree without -m" '
 
 	git checkout -f master &&
 	fill 0 1 2 3 4 5 6 7 8 >same &&
-	cp same kept
+	cp same kept &&
 	git checkout side >messages &&
-	test_cmp same kept
-	(cat > messages.expect <<EOF
-M	same
-EOF
-) &&
-	touch messages.expect &&
+	test_cmp same kept &&
+	printf "M\t%s\n" same >messages.expect &&
 	test_cmp messages.expect messages
 '
 
 test_expect_success "checkout -m with dirty tree" '
 
 	git checkout -f master &&
@@ -106,16 +102,13 @@
 
 	fill 0 1 2 3 4 5 6 7 8 >one &&
 	git checkout -m side > messages &&
 
 	test "$(git symbolic-ref HEAD)" = "refs/heads/side" &&
 
-	(cat >expect.messages <<EOF
-M	one
-EOF
-) &&
+	printf "M\t%s\n" one >expect.messages &&
 	test_cmp expect.messages messages &&
 
 	fill "M	one" "A	three" "D	two" >expect.master &&
 	git diff --name-status master >current.master &&
 	test_cmp expect.master current.master &&
 
@@ -406,18 +399,18 @@
     git checkout --track -b track1 &&
     test "$(git config branch.track1.remote)" &&
     test "$(git config branch.track1.merge)"'
 
 test_expect_success \
     'checkout w/autosetupmerge=always sets up tracking' '
+    test_when_finished git config branch.autosetupmerge false &&
     git config branch.autosetupmerge always &&
     git checkout master &&
     git checkout -b track2 &&
     test "$(git config branch.track2.remote)" &&
-    test "$(git config branch.track2.merge)"
-    git config branch.autosetupmerge false'
+    test "$(git config branch.track2.merge)"'
 
 test_expect_success 'checkout w/--track from non-branch HEAD fails' '
     git checkout master^0 &&
     test_must_fail git symbolic-ref HEAD &&
     test_must_fail git checkout --track -b track &&
     test_must_fail git rev-parse --verify track &&
@@ -588,13 +581,13 @@
 	test_cmp expect fild &&
 	test_cmp expect filf &&
 	test_cmp merged file
 '
 
 test_expect_success 'checkout --conflict=diff3' '
-	git config --unset merge.conflictstyle
+	test_unconfig merge.conflictstyle &&
 	setup_conflicting_index &&
 	echo "none of the above" >sample &&
 	echo ourside >expect &&
 	cat sample >fild &&
 	cat sample >file &&
 	cat sample >filf &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t7300-clean.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t7300-clean.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t7300-clean.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t7300-clean.sh	2015-05-01 03:12:02.000000000 +0800
@@ -116,31 +116,25 @@
 	touch a.out src/part3.c docs/manual.txt obj.o build/lib.so &&
 	would_clean=$(
 		cd docs &&
 		git clean -n ../src |
 		sed -n -e "s|^Would remove ||p"
 	) &&
-	test "$would_clean" = ../src/part3.c || {
-		echo "OOps <$would_clean>"
-		false
-	}
+	verbose test "$would_clean" = ../src/part3.c
 '
 
 test_expect_success C_LOCALE_OUTPUT 'git clean with absolute path' '
 
 	mkdir -p build docs &&
 	touch a.out src/part3.c docs/manual.txt obj.o build/lib.so &&
 	would_clean=$(
 		cd docs &&
 		git clean -n "$(pwd)/../src" |
 		sed -n -e "s|^Would remove ||p"
 	) &&
-	test "$would_clean" = ../src/part3.c || {
-		echo "OOps <$would_clean>"
-		false
-	}
+	verbose test "$would_clean" = ../src/part3.c
 '
 
 test_expect_success 'git clean with out of work tree relative path' '
 
 	mkdir -p build docs &&
 	touch a.out src/part3.c docs/manual.txt obj.o build/lib.so &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t7400-submodule-basic.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t7400-submodule-basic.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t7400-submodule-basic.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t7400-submodule-basic.sh	2015-05-01 03:12:02.000000000 +0800
@@ -763,13 +763,13 @@
 '
 
 test_expect_success 'moving the superproject does not break submodules' '
 	(
 		cd addtest &&
 		git submodule status >expect
-	)
+	) &&
 	mv addtest addtest2 &&
 	(
 		cd addtest2 &&
 		git submodule status >actual &&
 		test_cmp expect actual
 	)
@@ -984,13 +984,13 @@
 	git submodule >&2 &&
 	test -n "$(git submodule | grep "$svname")"
 '
 
 test_expect_success 'submodule add clone shallow submodule' '
 	mkdir super &&
-	pwd=$(pwd)
+	pwd=$(pwd) &&
 	(
 		cd super &&
 		git init &&
 		git submodule add --depth=1 file://"$pwd"/example2 submodule &&
 		(
 			cd submodule &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t7406-submodule-update.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t7406-submodule-update.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t7406-submodule-update.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t7406-submodule-update.sh	2015-05-01 03:12:02.000000000 +0800
@@ -751,13 +751,13 @@
 	 )
 	)
 '
 
 test_expect_success 'submodule update clone shallow submodule' '
 	git clone cloned super3 &&
-	pwd=$(pwd)
+	pwd=$(pwd) &&
 	(cd super3 &&
 	 sed -e "s#url = ../#url = file://$pwd/#" <.gitmodules >.gitmodules.tmp &&
 	 mv -f .gitmodules.tmp .gitmodules &&
 	 git submodule update --init --depth=3
 	 (cd submodule &&
 	  test 1 = $(git log --oneline | wc -l)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t7508-status.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t7508-status.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t7508-status.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t7508-status.sh	2015-05-01 03:12:02.000000000 +0800
@@ -63,12 +63,18 @@
 strip_comments () {
 	tab='	'
 	sed "s/^\# //; s/^\#$//; s/^#$tab/$tab/" <"$1" >"$1".tmp &&
 	rm "$1" && mv "$1".tmp "$1"
 }
 
+cat >.gitignore <<\EOF
+.gitignore
+expect*
+output*
+EOF
+
 test_expect_success 'status --column' '
 	cat >expect <<\EOF &&
 # On branch master
 # Changes to be committed:
 #   (use "git reset HEAD <file>..." to unstage)
 #
@@ -80,14 +86,14 @@
 #
 #	modified:   dir1/modified
 #
 # Untracked files:
 #   (use "git add <file>..." to include in what will be committed)
 #
-#	dir1/untracked dir2/untracked output
-#	dir2/modified  expect         untracked
+#	dir1/untracked dir2/untracked
+#	dir2/modified  untracked
 #
 EOF
 	COLUMNS=50 git -c status.displayCommentPrefix=true status --column="column dense" >output &&
 	test_i18ncmp expect output
 '
 
@@ -113,14 +119,12 @@
 # Untracked files:
 #   (use "git add <file>..." to include in what will be committed)
 #
 #	dir1/untracked
 #	dir2/modified
 #	dir2/untracked
-#	expect
-#	output
 #	untracked
 #
 EOF
 
 test_expect_success 'status with status.displayCommentPrefix=true' '
 	git -c status.displayCommentPrefix=true status >output &&
@@ -130,12 +134,29 @@
 test_expect_success 'status with status.displayCommentPrefix=false' '
 	strip_comments expect &&
 	git -c status.displayCommentPrefix=false status >output &&
 	test_i18ncmp expect output
 '
 
+test_expect_success 'status -v' '
+	(cat expect && git diff --cached) >expect-with-v &&
+	git status -v >output &&
+	test_i18ncmp expect-with-v output
+'
+
+test_expect_success 'status -v -v' '
+	(cat expect &&
+	 echo "Changes to be committed:" &&
+	 git -c diff.mnemonicprefix=true diff --cached &&
+	 echo "--------------------------------------------------" &&
+	 echo "Changes not staged for commit:" &&
+	 git -c diff.mnemonicprefix=true diff) >expect-with-v &&
+	git status -v -v >output &&
+	test_i18ncmp expect-with-v output
+'
+
 test_expect_success 'setup fake editor' '
 	cat >.git/editor <<-\EOF &&
 	#! /bin/sh
 	cp "$1" output
 EOF
 	chmod 755 .git/editor
@@ -164,14 +185,12 @@
 	modified:   dir1/modified
 
 Untracked files:
 	dir1/untracked
 	dir2/modified
 	dir2/untracked
-	expect
-	output
 	untracked
 
 EOF
 
 test_expect_success 'status (advice.statusHints false)' '
 	test_config advice.statusHints false &&
@@ -183,14 +202,12 @@
 cat >expect <<\EOF
  M dir1/modified
 A  dir2/added
 ?? dir1/untracked
 ?? dir2/modified
 ?? dir2/untracked
-?? expect
-?? output
 ?? untracked
 EOF
 
 test_expect_success 'status -s' '
 
 	git status -s >output &&
@@ -198,13 +215,13 @@
 
 '
 
 test_expect_success 'status with gitignore' '
 	{
 		echo ".gitignore" &&
-		echo "expect" &&
+		echo "expect*" &&
 		echo "output" &&
 		echo "untracked"
 	} >.gitignore &&
 
 	cat >expect <<-\EOF &&
 	 M dir1/modified
@@ -219,12 +236,13 @@
 	A  dir2/added
 	?? dir2/modified
 	!! .gitignore
 	!! dir1/untracked
 	!! dir2/untracked
 	!! expect
+	!! expect-with-v
 	!! output
 	!! untracked
 	EOF
 	git status -s --ignored >output &&
 	test_cmp expect output &&
 
@@ -250,24 +268,25 @@
   (use "git add -f <file>..." to include in what will be committed)
 
 	.gitignore
 	dir1/untracked
 	dir2/untracked
 	expect
+	expect-with-v
 	output
 	untracked
 
 EOF
 	git status --ignored >output &&
 	test_i18ncmp expect output
 '
 
 test_expect_success 'status with gitignore (nothing untracked)' '
 	{
 		echo ".gitignore" &&
-		echo "expect" &&
+		echo "expect*" &&
 		echo "dir2/modified" &&
 		echo "output" &&
 		echo "untracked"
 	} >.gitignore &&
 
 	cat >expect <<-\EOF &&
@@ -282,12 +301,13 @@
 	A  dir2/added
 	!! .gitignore
 	!! dir1/untracked
 	!! dir2/modified
 	!! dir2/untracked
 	!! expect
+	!! expect-with-v
 	!! output
 	!! untracked
 	EOF
 	git status -s --ignored >output &&
 	test_cmp expect output &&
 
@@ -309,31 +329,34 @@
 
 	.gitignore
 	dir1/untracked
 	dir2/modified
 	dir2/untracked
 	expect
+	expect-with-v
 	output
 	untracked
 
 EOF
 	git status --ignored >output &&
 	test_i18ncmp expect output
 '
 
-rm -f .gitignore
+cat >.gitignore <<\EOF
+.gitignore
+expect*
+output*
+EOF
 
 cat >expect <<\EOF
 ## master
  M dir1/modified
 A  dir2/added
 ?? dir1/untracked
 ?? dir2/modified
 ?? dir2/untracked
-?? expect
-?? output
 ?? untracked
 EOF
 
 test_expect_success 'status -s -b' '
 
 	git status -s -b >output &&
@@ -405,13 +428,13 @@
 test_expect_success 'status -s -uno' '
 	git status -s -uno >output &&
 	test_cmp expect output
 '
 
 test_expect_success 'status -s (status.showUntrackedFiles no)' '
-	git config status.showuntrackedfiles no
+	git config status.showuntrackedfiles no &&
 	git status -s >output &&
 	test_cmp expect output
 '
 
 test_expect_success 'status -unormal' '
 	cat >expect <<EOF &&
@@ -431,45 +454,41 @@
   (use "git add <file>..." to include in what will be committed)
 
 	dir1/untracked
 	dir2/modified
 	dir2/untracked
 	dir3/
-	expect
-	output
 	untracked
 
 EOF
 	git status -unormal >output &&
 	test_i18ncmp expect output
 '
 
 test_expect_success 'status (status.showUntrackedFiles normal)' '
-	test_config status.showuntrackedfiles normal
+	test_config status.showuntrackedfiles normal &&
 	git status >output &&
 	test_i18ncmp expect output
 '
 
 cat >expect <<EOF
  M dir1/modified
 A  dir2/added
 ?? dir1/untracked
 ?? dir2/modified
 ?? dir2/untracked
 ?? dir3/
-?? expect
-?? output
 ?? untracked
 EOF
 test_expect_success 'status -s -unormal' '
 	git status -s -unormal >output &&
 	test_cmp expect output
 '
 
 test_expect_success 'status -s (status.showUntrackedFiles normal)' '
-	git config status.showuntrackedfiles normal
+	git config status.showuntrackedfiles normal &&
 	git status -s >output &&
 	test_cmp expect output
 '
 
 test_expect_success 'status -uall' '
 	cat >expect <<EOF &&
@@ -490,23 +509,21 @@
 
 	dir1/untracked
 	dir2/modified
 	dir2/untracked
 	dir3/untracked1
 	dir3/untracked2
-	expect
-	output
 	untracked
 
 EOF
 	git status -uall >output &&
 	test_i18ncmp expect output
 '
 
 test_expect_success 'status (status.showUntrackedFiles all)' '
-	test_config status.showuntrackedfiles all
+	test_config status.showuntrackedfiles all &&
 	git status >output &&
 	test_i18ncmp expect output
 '
 
 test_expect_success 'teardown dir3' '
 	rm -rf dir3
@@ -515,18 +532,16 @@
 cat >expect <<EOF
  M dir1/modified
 A  dir2/added
 ?? dir1/untracked
 ?? dir2/modified
 ?? dir2/untracked
-?? expect
-?? output
 ?? untracked
 EOF
 test_expect_success 'status -s -uall' '
-	git config --unset status.showuntrackedfiles
+	test_unconfig status.showuntrackedfiles &&
 	git status -s -uall >output &&
 	test_cmp expect output
 '
 test_expect_success 'status -s (status.showUntrackedFiles all)' '
 	test_config status.showuntrackedfiles all &&
 	git status -s >output &&
@@ -551,14 +566,12 @@
 Untracked files:
   (use "git add <file>..." to include in what will be committed)
 
 	untracked
 	../dir2/modified
 	../dir2/untracked
-	../expect
-	../output
 	../untracked
 
 EOF
 	(cd dir1 && git status) >output &&
 	test_i18ncmp expect output
 '
@@ -566,14 +579,12 @@
 cat >expect <<\EOF
  M modified
 A  ../dir2/added
 ?? untracked
 ?? ../dir2/modified
 ?? ../dir2/untracked
-?? ../expect
-?? ../output
 ?? ../untracked
 EOF
 test_expect_success 'status -s with relative paths' '
 
 	(cd dir1 && git status -s) >output &&
 	test_cmp expect output
@@ -583,14 +594,12 @@
 cat >expect <<\EOF
  M dir1/modified
 A  dir2/added
 ?? dir1/untracked
 ?? dir2/modified
 ?? dir2/untracked
-?? expect
-?? output
 ?? untracked
 EOF
 
 test_expect_success 'status --porcelain ignores relative paths setting' '
 
 	(cd dir1 && git status --porcelain) >output &&
@@ -622,14 +631,12 @@
 Untracked files:
   (use "git add <file>..." to include in what will be committed)
 
 	<BLUE>dir1/untracked<RESET>
 	<BLUE>dir2/modified<RESET>
 	<BLUE>dir2/untracked<RESET>
-	<BLUE>expect<RESET>
-	<BLUE>output<RESET>
 	<BLUE>untracked<RESET>
 
 EOF
 	test_config color.ui always &&
 	git status | test_decode_color >output &&
 	test_i18ncmp expect output
@@ -644,14 +651,12 @@
 cat >expect <<\EOF
  <RED>M<RESET> dir1/modified
 <GREEN>A<RESET>  dir2/added
 <BLUE>??<RESET> dir1/untracked
 <BLUE>??<RESET> dir2/modified
 <BLUE>??<RESET> dir2/untracked
-<BLUE>??<RESET> expect
-<BLUE>??<RESET> output
 <BLUE>??<RESET> untracked
 EOF
 
 test_expect_success 'status -s with color.ui' '
 
 	git config color.ui always &&
@@ -673,14 +678,12 @@
 ## <GREEN>master<RESET>
  <RED>M<RESET> dir1/modified
 <GREEN>A<RESET>  dir2/added
 <BLUE>??<RESET> dir1/untracked
 <BLUE>??<RESET> dir2/modified
 <BLUE>??<RESET> dir2/untracked
-<BLUE>??<RESET> expect
-<BLUE>??<RESET> output
 <BLUE>??<RESET> untracked
 EOF
 
 test_expect_success 'status -s -b with color.status' '
 
 	git status -s -b | test_decode_color >output &&
@@ -691,14 +694,12 @@
 cat >expect <<\EOF
  M dir1/modified
 A  dir2/added
 ?? dir1/untracked
 ?? dir2/modified
 ?? dir2/untracked
-?? expect
-?? output
 ?? untracked
 EOF
 
 test_expect_success 'status --porcelain ignores color.ui' '
 
 	git config --unset color.status &&
@@ -752,14 +753,12 @@
 Untracked files:
   (use "git add <file>..." to include in what will be committed)
 
 	dir1/untracked
 	dir2/modified
 	dir2/untracked
-	expect
-	output
 	untracked
 
 EOF
 	test_config status.relativePaths false &&
 	(cd dir1 && git status) >output &&
 	test_i18ncmp expect output
@@ -769,14 +768,12 @@
 cat >expect <<\EOF
  M dir1/modified
 A  dir2/added
 ?? dir1/untracked
 ?? dir2/modified
 ?? dir2/untracked
-?? expect
-?? output
 ?? untracked
 EOF
 
 test_expect_success 'status -s without relative paths' '
 
 	test_config status.relativePaths false &&
@@ -795,14 +792,12 @@
 
 Untracked files:
   (use "git add <file>..." to include in what will be committed)
 
 	dir1/untracked
 	dir2/
-	expect
-	output
 	untracked
 
 EOF
 	git commit --dry-run dir1/modified >output &&
 	test_i18ncmp expect output
 '
@@ -845,14 +840,12 @@
 Untracked files:
   (use "git add <file>..." to include in what will be committed)
 
 	dir1/untracked
 	dir2/modified
 	dir2/untracked
-	expect
-	output
 	untracked
 
 EOF
 	git status >output &&
 	test_i18ncmp expect output
 '
@@ -867,14 +860,12 @@
  M dir1/modified
 A  dir2/added
 A  sm
 ?? dir1/untracked
 ?? dir2/modified
 ?? dir2/untracked
-?? expect
-?? output
 ?? untracked
 EOF
 test_expect_success 'status -s submodule summary is disabled by default' '
 	git status -s >output &&
 	test_cmp expect output
 '
@@ -910,14 +901,12 @@
 Untracked files:
   (use "git add <file>..." to include in what will be committed)
 
 	dir1/untracked
 	dir2/modified
 	dir2/untracked
-	expect
-	output
 	untracked
 
 EOF
 	git config status.submodulesummary 10 &&
 	git status >output &&
 	test_i18ncmp expect output
@@ -937,14 +926,12 @@
  M dir1/modified
 A  dir2/added
 A  sm
 ?? dir1/untracked
 ?? dir2/modified
 ?? dir2/untracked
-?? expect
-?? output
 ?? untracked
 EOF
 test_expect_success 'status -s submodule summary' '
 	git status -s >output &&
 	test_cmp expect output
 '
@@ -961,14 +948,12 @@
 Untracked files:
   (use "git add <file>..." to include in what will be committed)
 
 	dir1/untracked
 	dir2/modified
 	dir2/untracked
-	expect
-	output
 	untracked
 
 no changes added to commit (use "git add" and/or "git commit -a")
 EOF
 	git commit -m "commit submodule" &&
 	git config status.submodulesummary 10 &&
@@ -980,14 +965,12 @@
 
 cat >expect <<EOF
  M dir1/modified
 ?? dir1/untracked
 ?? dir2/modified
 ?? dir2/untracked
-?? expect
-?? output
 ?? untracked
 EOF
 test_expect_success 'status -s submodule summary (clean submodule)' '
 	git status -s >output &&
 	test_cmp expect output
 '
@@ -1022,14 +1005,12 @@
 Untracked files:
   (use "git add <file>..." to include in what will be committed)
 
 	dir1/untracked
 	dir2/modified
 	dir2/untracked
-	expect
-	output
 	untracked
 
 EOF
 	git config status.submodulesummary 10 &&
 	git commit --dry-run --amend >output &&
 	test_i18ncmp expect output
@@ -1077,14 +1058,12 @@
   (use "git add <file>..." to include in what will be committed)
 
 	.gitmodules
 	dir1/untracked
 	dir2/modified
 	dir2/untracked
-	expect
-	output
 	untracked
 
 EOF
 	echo modified  sm/untracked &&
 	git status --ignore-submodules=untracked >output &&
 	test_i18ncmp expect output
@@ -1189,14 +1168,12 @@
   (use "git add <file>..." to include in what will be committed)
 
 	.gitmodules
 	dir1/untracked
 	dir2/modified
 	dir2/untracked
-	expect
-	output
 	untracked
 
 EOF
 	git status --ignore-submodules=untracked > output &&
 	test_i18ncmp expect output
 '
@@ -1251,14 +1228,12 @@
   (use "git add <file>..." to include in what will be committed)
 
 	.gitmodules
 	dir1/untracked
 	dir2/modified
 	dir2/untracked
-	expect
-	output
 	untracked
 
 EOF
 	git status --ignore-submodules=untracked > output &&
 	test_i18ncmp expect output
 '
@@ -1333,14 +1308,12 @@
 ;   (use "git add <file>..." to include in what will be committed)
 ;
 ;	.gitmodules
 ;	dir1/untracked
 ;	dir2/modified
 ;	dir2/untracked
-;	expect
-;	output
 ;	untracked
 ;
 EOF
 
 test_expect_success "status (core.commentchar with submodule summary)" '
 	test_config core.commentchar ";" &&
@@ -1366,14 +1339,12 @@
   (use "git add <file>..." to include in what will be committed)
 
 	.gitmodules
 	dir1/untracked
 	dir2/modified
 	dir2/untracked
-	expect
-	output
 	untracked
 
 no changes added to commit (use "git add" and/or "git commit -a")
 EOF
 	git status --ignore-submodules=all > output &&
 	test_i18ncmp expect output
@@ -1397,14 +1368,12 @@
   (use "git add <file>..." to include in what will be committed)
 
 	.gitmodules
 	dir1/untracked
 	dir2/modified
 	dir2/untracked
-	expect
-	output
 	untracked
 
 EOF
 	git config --add -f .gitmodules submodule.subname.ignore all &&
 	git config --add -f .gitmodules submodule.subname.path sm &&
 	git status > output &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t7510-signed-commit.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t7510-signed-commit.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t7510-signed-commit.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t7510-signed-commit.sh	2015-05-01 03:12:02.000000000 +0800
@@ -39,13 +39,13 @@
 
 	git config commit.gpgsign true &&
 	echo 7 >file && test_tick && git commit -a -m "seventh" --no-gpg-sign &&
 	git tag seventh-unsigned &&
 
 	test_tick && git rebase -f HEAD^^ && git tag sixth-signed HEAD^ &&
-	git tag seventh-signed
+	git tag seventh-signed &&
 
 	echo 8 >file && test_tick && git commit -a -m eighth -SB7227189 &&
 	git tag eighth-signed-alt
 '
 
 test_expect_success GPG 'verify and show signatures' '
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t: t7516-commit-races.sh
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t7600-merge.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t7600-merge.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t7600-merge.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t7600-merge.sh	2015-05-01 03:12:02.000000000 +0800
@@ -130,13 +130,13 @@
 	git reset --hard "$c0" &&
 	cp file.9 file &&
 	git add file &&
 	test_tick &&
 	git commit -m "commit 3" &&
 	git tag c3 &&
-	c3=$(git rev-parse HEAD)
+	c3=$(git rev-parse HEAD) &&
 	git reset --hard "$c0" &&
 	create_merge_msgs
 '
 
 test_debug 'git log --graph --decorate --oneline --all'
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t7612-merge-verify-signatures.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t7612-merge-verify-signatures.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t7612-merge-verify-signatures.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t7612-merge-verify-signatures.sh	2015-05-01 03:12:02.000000000 +0800
@@ -26,13 +26,13 @@
 	sed -e "s/bad/forged bad/" raw >forged &&
 	git hash-object -w -t commit forged >forged.commit &&
 	git checkout initial &&
 
 	git checkout -b side-untrusted &&
 	echo 3 >baz && git add baz &&
-	test_tick && git commit -SB7227189 -m "untrusted on side"
+	test_tick && git commit -SB7227189 -m "untrusted on side" &&
 
 	git checkout master
 '
 
 test_expect_success GPG 'merge unsigned commit with verification' '
 	test_must_fail git merge --ff-only --verify-signatures side-unsigned 2>mergeerror &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t7701-repack-unpack-unreachable.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t7701-repack-unpack-unreachable.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t7701-repack-unpack-unreachable.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t7701-repack-unpack-unreachable.sh	2015-05-01 03:12:02.000000000 +0800
@@ -54,13 +54,13 @@
 '
 
 compare_mtimes ()
 {
 	read tref rest &&
 	while read t rest; do
-		test "$tref" = "$t" || break
+		test "$tref" = "$t" || return 1
 	done
 }
 
 test_expect_success '-A without -d option leaves unreachable objects packed' '
 	fsha1path=$(echo "$fsha1" | sed -e "s|\(..\)|\1/|") &&
 	fsha1path=".git/objects/$fsha1path" &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t8003-blame-corner-cases.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t8003-blame-corner-cases.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t8003-blame-corner-cases.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t8003-blame-corner-cases.sh	2015-05-01 03:12:02.000000000 +0800
@@ -23,13 +23,13 @@
 	test_tick &&
 	GIT_AUTHOR_NAME=Initial git commit -m Initial &&
 
 	cat one >uno &&
 	mv two dos &&
 	cat one >>tres &&
-	echo DEF >>mouse
+	echo DEF >>mouse &&
 	git add uno dos tres mouse &&
 	test_tick &&
 	GIT_AUTHOR_NAME=Second git commit -a -m Second &&
 
 	echo GHIJK >>mouse &&
 	git add mouse &&
@@ -150,21 +150,21 @@
 	test_tick &&
 	git commit -m "path is a regular file" &&
 	git blame HEAD^.. -- path
 '
 
 test_expect_success 'blame to a commit with no author name' '
-  TREE=`git rev-parse HEAD:`
-  cat >badcommit <<EOF
+  TREE=`git rev-parse HEAD:` &&
+  cat >badcommit <<EOF &&
 tree $TREE
 author <noname> 1234567890 +0000
 committer David Reiss <dreiss@facebook.com> 1234567890 +0000
 
 some message
 EOF
-  COMMIT=`git hash-object -t commit -w badcommit`
+  COMMIT=`git hash-object -t commit -w badcommit` &&
   git --no-pager blame $COMMIT -- uno >/dev/null
 '
 
 test_expect_success 'blame -L with invalid start' '
 	test_must_fail git blame -L5 tres 2>errors &&
 	grep "has only 2 lines" errors
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t8008-blame-formats.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t8008-blame-formats.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t8008-blame-formats.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t8008-blame-formats.sh	2015-05-01 03:12:02.000000000 +0800
@@ -2,13 +2,13 @@
 
 test_description='blame output in various formats on a simple case'
 . ./test-lib.sh
 
 test_expect_success 'setup' '
 	echo a >file &&
-	git add file
+	git add file &&
 	test_tick &&
 	git commit -m one &&
 	echo b >>file &&
 	echo c >>file &&
 	echo d >>file &&
 	test_tick &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t9001-send-email.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t9001-send-email.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t9001-send-email.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t9001-send-email.sh	2015-05-01 03:12:02.000000000 +0800
@@ -815,73 +815,58 @@
 
 test_expect_success $PREREQ '--confirm=compose' '
 	test_confirm --confirm=compose --compose
 '
 
 test_expect_success $PREREQ 'confirm by default (due to cc)' '
-	CONFIRM=$(git config --get sendemail.confirm) &&
+	test_when_finished git config sendemail.confirm never &&
 	git config --unset sendemail.confirm &&
 	test_confirm
-	ret="$?"
-	git config sendemail.confirm ${CONFIRM:-never}
-	test $ret = "0"
 '
 
 test_expect_success $PREREQ 'confirm by default (due to --compose)' '
-	CONFIRM=$(git config --get sendemail.confirm) &&
+	test_when_finished git config sendemail.confirm never &&
 	git config --unset sendemail.confirm &&
 	test_confirm --suppress-cc=all --compose
-	ret="$?"
-	git config sendemail.confirm ${CONFIRM:-never}
-	test $ret = "0"
 '
 
 test_expect_success $PREREQ 'confirm detects EOF (inform assumes y)' '
-	CONFIRM=$(git config --get sendemail.confirm) &&
+	test_when_finished git config sendemail.confirm never &&
 	git config --unset sendemail.confirm &&
 	rm -fr outdir &&
 	git format-patch -2 -o outdir &&
 	GIT_SEND_EMAIL_NOTTY=1 \
 		git send-email \
 			--from="Example <nobody@example.com>" \
 			--to=nobody@example.com \
 			--smtp-server="$(pwd)/fake.sendmail" \
 			outdir/*.patch </dev/null
-	ret="$?"
-	git config sendemail.confirm ${CONFIRM:-never}
-	test $ret = "0"
 '
 
 test_expect_success $PREREQ 'confirm detects EOF (auto causes failure)' '
-	CONFIRM=$(git config --get sendemail.confirm) &&
+	test_when_finished git config sendemail.confirm never &&
 	git config sendemail.confirm auto &&
 	GIT_SEND_EMAIL_NOTTY=1 &&
 	export GIT_SEND_EMAIL_NOTTY &&
 		test_must_fail git send-email \
 			--from="Example <nobody@example.com>" \
 			--to=nobody@example.com \
 			--smtp-server="$(pwd)/fake.sendmail" \
 			$patches </dev/null
-	ret="$?"
-	git config sendemail.confirm ${CONFIRM:-never}
-	test $ret = "0"
 '
 
 test_expect_success $PREREQ 'confirm does not loop forever' '
-	CONFIRM=$(git config --get sendemail.confirm) &&
+	test_when_finished git config sendemail.confirm never &&
 	git config sendemail.confirm auto &&
 	GIT_SEND_EMAIL_NOTTY=1 &&
 	export GIT_SEND_EMAIL_NOTTY &&
 		yes "bogus" | test_must_fail git send-email \
 			--from="Example <nobody@example.com>" \
 			--to=nobody@example.com \
 			--smtp-server="$(pwd)/fake.sendmail" \
 			$patches
-	ret="$?"
-	git config sendemail.confirm ${CONFIRM:-never}
-	test $ret = "0"
 '
 
 test_expect_success $PREREQ 'utf8 Cc is rfc2047 encoded' '
 	clean_fake_sendmail &&
 	rm -fr outdir &&
 	git format-patch -1 -o outdir --cc="àéìöú <utf8@example.com>" &&
@@ -1322,13 +1307,13 @@
 	grep "cannot send message as 7bit" errors &&
 	test -z "$(ls msgtxt*)"
 '
 
 test_expect_success $PREREQ '--transfer-encoding overrides sendemail.transferEncoding' '
 	clean_fake_sendmail &&
-	git config sendemail.transferEncoding 8bit
+	git config sendemail.transferEncoding 8bit &&
 	test_must_fail git send-email \
 		--transfer-encoding=7bit \
 		--smtp-server="$(pwd)/fake.sendmail" \
 		email-using-8bit \
 		2>errors >out &&
 	grep "cannot send message as 7bit" errors &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t9104-git-svn-follow-parent.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t9104-git-svn-follow-parent.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t9104-git-svn-follow-parent.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t9104-git-svn-follow-parent.sh	2015-05-01 03:12:02.000000000 +0800
@@ -69,22 +69,24 @@
 test_expect_success 'follow larger parent' '
         mkdir -p import/trunk/thunk/bump/thud &&
         echo hi > import/trunk/thunk/bump/thud/file &&
         svn import -m "import a larger parent" import "$svnrepo"/larger-parent &&
         svn cp -m "hi" "$svnrepo"/larger-parent "$svnrepo"/another-larger &&
         git svn init --minimize-url -i larger \
-          "$svnrepo"/another-larger/trunk/thunk/bump/thud &&
+	  "$svnrepo"/larger-parent/trunk/thunk/bump/thud &&
         git svn fetch -i larger &&
+	git svn init --minimize-url -i larger-parent \
+	  "$svnrepo"/another-larger/trunk/thunk/bump/thud &&
+	git svn fetch -i larger-parent &&
         git rev-parse --verify refs/remotes/larger &&
         git rev-parse --verify \
-           refs/remotes/larger-parent/trunk/thunk/bump/thud &&
+	   refs/remotes/larger-parent &&
         test "`git merge-base \
-                 refs/remotes/larger-parent/trunk/thunk/bump/thud \
+		 refs/remotes/larger-parent \
                  refs/remotes/larger`" = \
              "`git rev-parse refs/remotes/larger`"
-        true
         '
 
 test_expect_success 'follow higher-level parent' '
 	svn mkdir -m "follow higher-level parent" "$svnrepo"/blob &&
 	svn co "$svnrepo"/blob blob &&
 	(
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t9158-git-svn-mergeinfo.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t9158-git-svn-mergeinfo.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t9158-git-svn-mergeinfo.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t9158-git-svn-mergeinfo.sh	2015-05-01 03:12:02.000000000 +0800
@@ -31,24 +31,24 @@
 	git add bar &&
 	git commit -m "bar" &&
 	git svn dcommit --mergeinfo="/branches/foo:1-10"
 '
 
 test_expect_success 'verify svn:mergeinfo' '
-	mergeinfo=$(svn_cmd propget svn:mergeinfo "$svnrepo"/trunk)
+	mergeinfo=$(svn_cmd propget svn:mergeinfo "$svnrepo"/trunk) &&
 	test "$mergeinfo" = "/branches/foo:1-10"
 '
 
 test_expect_success 'change svn:mergeinfo multiline' '
 	touch baz &&
 	git add baz &&
 	git commit -m "baz" &&
 	git svn dcommit --mergeinfo="/branches/bar:1-10 /branches/other:3-5,8,10-11"
 '
 
 test_expect_success 'verify svn:mergeinfo multiline' '
-	mergeinfo=$(svn_cmd propget svn:mergeinfo "$svnrepo"/trunk)
+	mergeinfo=$(svn_cmd propget svn:mergeinfo "$svnrepo"/trunk) &&
 	test "$mergeinfo" = "/branches/bar:1-10
 /branches/other:3-5,8,10-11"
 '
 
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t9161-git-svn-mergeinfo-push.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t9161-git-svn-mergeinfo-push.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t9161-git-svn-mergeinfo-push.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t9161-git-svn-mergeinfo-push.sh	2015-05-01 03:12:02.000000000 +0800
@@ -21,34 +21,34 @@
 	git checkout origin/svnb1 &&
 	git merge --no-ff origin/svnb2 &&
 	git svn dcommit
 	'
 
 test_expect_success 'check svn:mergeinfo' '
-	mergeinfo=$(svn_cmd propget svn:mergeinfo "$svnrepo"/branches/svnb1)
+	mergeinfo=$(svn_cmd propget svn:mergeinfo "$svnrepo"/branches/svnb1) &&
 	test "$mergeinfo" = "/branches/svnb2:3,8"
 	'
 
 test_expect_success 'merge another branch' '
 	git merge --no-ff origin/svnb3 &&
 	git svn dcommit
 	'
 
 test_expect_success 'check primary parent mergeinfo respected' '
-	mergeinfo=$(svn_cmd propget svn:mergeinfo "$svnrepo"/branches/svnb1)
+	mergeinfo=$(svn_cmd propget svn:mergeinfo "$svnrepo"/branches/svnb1) &&
 	test "$mergeinfo" = "/branches/svnb2:3,8
 /branches/svnb3:4,9"
 	'
 
 test_expect_success 'merge existing merge' '
 	git merge --no-ff origin/svnb4 &&
 	git svn dcommit
 	'
 
 test_expect_success "check both parents' mergeinfo respected" '
-	mergeinfo=$(svn_cmd propget svn:mergeinfo "$svnrepo"/branches/svnb1)
+	mergeinfo=$(svn_cmd propget svn:mergeinfo "$svnrepo"/branches/svnb1) &&
 	test "$mergeinfo" = "/branches/svnb2:3,8
 /branches/svnb3:4,9
 /branches/svnb4:5-6,10-12
 /branches/svnb5:6,11"
 	'
 
@@ -67,13 +67,13 @@
 	git checkout origin/svnb1 &&
 	git merge --no-ff origin/svnb2 &&
 	git svn dcommit
 	'
 
 test_expect_success 'check new mergeinfo added' '
-	mergeinfo=$(svn_cmd propget svn:mergeinfo "$svnrepo"/branches/svnb1)
+	mergeinfo=$(svn_cmd propget svn:mergeinfo "$svnrepo"/branches/svnb1) &&
 	test "$mergeinfo" = "/branches/svnb2:3,8,16-17
 /branches/svnb3:4,9
 /branches/svnb4:5-6,10-12
 /branches/svnb5:6,11"
 	'
 
@@ -81,13 +81,13 @@
 	git checkout origin/svnb4 &&
 	git merge --no-ff origin/svnb1 &&
 	git svn dcommit
 	'
 
 test_expect_success 'check reintegration mergeinfo' '
-	mergeinfo=$(svn_cmd propget svn:mergeinfo "$svnrepo"/branches/svnb4)
+	mergeinfo=$(svn_cmd propget svn:mergeinfo "$svnrepo"/branches/svnb4) &&
 	test "$mergeinfo" = "/branches/svnb1:2-4,7-9,13-18
 /branches/svnb2:3,8,16-17
 /branches/svnb3:4,9
 /branches/svnb5:6,11"
 	'
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t9300-fast-import.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t9300-fast-import.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t9300-fast-import.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t9300-fast-import.sh	2015-05-01 03:12:02.000000000 +0800
@@ -1129,13 +1129,13 @@
 	INPUT_END
 	 git fast-import <input &&
 	 git diff-tree -C --find-copies-harder -r N4^ N4 >actual &&
 	 compare_diff_raw expect actual'
 
 test_expect_success PIPE 'N: read and copy directory' '
-	cat >expect <<-\EOF
+	cat >expect <<-\EOF &&
 	:100755 100755 f1fb5da718392694d0076d677d6d0e364c79b0bc f1fb5da718392694d0076d677d6d0e364c79b0bc C100	file2/newf	file3/newf
 	:100644 100644 7123f7f44e39be127c5eb701e5968176ee9d78b1 7123f7f44e39be127c5eb701e5968176ee9d78b1 C100	file2/oldf	file3/oldf
 	EOF
 	git update-ref -d refs/heads/N4 &&
 	rm -f backflow &&
 	mkfifo backflow &&
@@ -2225,13 +2225,13 @@
 	EOF
 	test_cmp expect io.marks &&
 
 	>expect &&
 
 	git fast-import --import-marks-if-exists=not_io.marks \
-			--export-marks=io.marks <<-\EOF
+			--export-marks=io.marks <<-\EOF &&
 	feature import-marks-if-exists=io.marks
 	EOF
 	test_cmp expect io.marks
 '
 
 cat >input << EOF
@@ -2850,27 +2850,24 @@
 '
 
 #
 # from
 #
 test_expect_success 'S: from with garbage after mark must fail' '
-	# no &&
-	git fast-import --import-marks=marks --export-marks=marks <<-EOF 2>err
+	test_must_fail \
+	git fast-import --import-marks=marks --export-marks=marks <<-EOF 2>err &&
 	commit refs/heads/S2
 	mark :303
 	committer $GIT_COMMITTER_NAME <$GIT_COMMITTER_EMAIL> $GIT_COMMITTER_DATE
 	data <<COMMIT
 	commit 3
 	COMMIT
 	from :301x
 	M 100644 :403 hello.c
 	EOF
 
-	ret=$? &&
-	echo returned $ret &&
-	test $ret -ne 0 && # failed, but it created the commit
 
 	# go create the commit, need it for merge test
 	git fast-import --import-marks=marks --export-marks=marks <<-EOF &&
 	commit refs/heads/S2
 	mark :303
 	committer $GIT_COMMITTER_NAME <$GIT_COMMITTER_EMAIL> $GIT_COMMITTER_DATE
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t9500-gitweb-standalone-no-errors.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t9500-gitweb-standalone-no-errors.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t9500-gitweb-standalone-no-errors.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t9500-gitweb-standalone-no-errors.sh	2015-05-01 03:12:02.000000000 +0800
@@ -294,13 +294,13 @@
 	mv -f file+ file &&
 	git commit -a -m "Incomplete context line" &&
 	git tag incomplete_lines_ctx &&
 	echo "Dominus regit me," >file &&
 	echo "incomplete line" | tr -d "\\012" >>file &&
 	git commit -a -m "Change incomplete line" &&
-	git tag incomplete_lines_chg
+	git tag incomplete_lines_chg &&
 	echo "Dominus regit me," >file &&
 	git commit -a -m "Remove incomplete line" &&
 	git tag incomplete_lines_rem
 '
 
 test_expect_success 'commitdiff(1): addition of incomplete line' '
@@ -776,11 +776,14 @@
 
 # ----------------------------------------------------------------------
 # unborn branches
 
 test_expect_success \
 	'unborn HEAD: "summary" page (with "heads" subview)' \
-	'git checkout orphan_branch || git checkout --orphan orphan_branch &&
+	'{
+		git checkout orphan_branch ||
+		git checkout --orphan orphan_branch
+	 } &&
 	 test_when_finished "git checkout master" &&
 	 gitweb_run "p=.git;a=summary"'
 
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t9502-gitweb-standalone-parse-output.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t9502-gitweb-standalone-parse-output.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t9502-gitweb-standalone-parse-output.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t9502-gitweb-standalone-parse-output.sh	2015-05-01 03:12:02.000000000 +0800
@@ -142,15 +142,17 @@
 	grep -q ">foo\\.bar\\.git<"      gitweb.body &&
 	grep -q ">foo_baz\\.git<"        gitweb.body &&
 	grep -q ">foo/foo-forked\\.git<" gitweb.body &&
 	grep -q ">fork of .*<"           gitweb.body
 '
 
-cat >>gitweb_config.perl <<\EOF &&
-$feature{'forks'}{'default'} = [1];
-EOF
+test_expect_success 'enable forks feature' '
+	cat >>gitweb_config.perl <<-\EOF
+	$feature{"forks"}{"default"} = [1];
+	EOF
+'
 
 test_expect_success 'forks: forks skipped if "forks" feature enabled' '
 	gitweb_run "a=project_list" &&
 	grep -q ">\\.git<"               gitweb.body &&
 	grep -q ">foo\\.git<"            gitweb.body &&
 	grep -q ">foo_baz\\.git<"        gitweb.body &&
@@ -170,13 +172,13 @@
 	gitweb_run "p=foo/foo-forked.git;a=summary" &&
 	grep -q "200 OK"        gitweb.headers &&
 	grep -q ">fork of foo<" gitweb.body
 '
 
 test_expect_success 'forks: project_index lists all projects (incl. forks)' '
-	cat >expected <<-\EOF
+	cat >expected <<-\EOF &&
 	.git
 	foo.bar.git
 	foo.git
 	foo/foo-forked.git
 	foo_baz.git
 	EOF
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t9814-git-p4-rename.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t9814-git-p4-rename.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t9814-git-p4-rename.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t9814-git-p4-rename.sh	2015-05-01 03:12:02.000000000 +0800
@@ -129,82 +129,101 @@
 	git p4 clone --dest="$git" //depot@all &&
 	test_when_finished cleanup_git &&
 	(
 		cd "$git" &&
 		git config git-p4.skipSubmitEdit true &&
 
+		echo "file8" >>file2 &&
+		git commit -a -m "Differentiate file2" &&
+		git p4 submit &&
 		cp file2 file8 &&
 		git add file8 &&
 		git commit -a -m "Copy file2 to file8" &&
 		git diff-tree -r -C HEAD &&
 		git p4 submit &&
 		p4 filelog //depot/file8 &&
 		p4 filelog //depot/file8 | test_must_fail grep -q "branch from" &&
 
+		echo "file9" >>file2 &&
+		git commit -a -m "Differentiate file2" &&
+		git p4 submit &&
+
 		cp file2 file9 &&
 		git add file9 &&
 		git commit -a -m "Copy file2 to file9" &&
 		git diff-tree -r -C HEAD &&
 		git config git-p4.detectCopies true &&
 		git p4 submit &&
 		p4 filelog //depot/file9 &&
 		p4 filelog //depot/file9 | test_must_fail grep -q "branch from" &&
 
+		echo "file10" >>file2 &&
+		git commit -a -m "Differentiate file2" &&
+		git p4 submit &&
+
 		echo "file2" >>file2 &&
 		cp file2 file10 &&
 		git add file2 file10 &&
 		git commit -a -m "Modify and copy file2 to file10" &&
 		git diff-tree -r -C HEAD &&
+		src=$(git diff-tree -r -C HEAD | sed 1d | sed 2d | cut -f2) &&
+		test "$src" = file2 &&
 		git p4 submit &&
 		p4 filelog //depot/file10 &&
-		p4 filelog //depot/file10 | grep -q "branch from //depot/file" &&
+		p4 filelog //depot/file10 | grep -q "branch from //depot/file2" &&
+
+		echo "file11" >>file2 &&
+		git commit -a -m "Differentiate file2" &&
+		git p4 submit &&
 
 		cp file2 file11 &&
 		git add file11 &&
 		git commit -a -m "Copy file2 to file11" &&
 		git diff-tree -r -C --find-copies-harder HEAD &&
 		src=$(git diff-tree -r -C --find-copies-harder HEAD | sed 1d | cut -f2) &&
-		test "$src" = file10 &&
+		test "$src" = file2 &&
 		git config git-p4.detectCopiesHarder true &&
 		git p4 submit &&
 		p4 filelog //depot/file11 &&
-		p4 filelog //depot/file11 | grep -q "branch from //depot/file" &&
+		p4 filelog //depot/file11 | grep -q "branch from //depot/file2" &&
+
+		echo "file12" >>file2 &&
+		git commit -a -m "Differentiate file2" &&
+		git p4 submit &&
 
 		cp file2 file12 &&
 		echo "some text" >>file12 &&
 		git add file12 &&
 		git commit -a -m "Copy file2 to file12 with changes" &&
 		git diff-tree -r -C --find-copies-harder HEAD &&
 		level=$(git diff-tree -r -C --find-copies-harder HEAD | sed 1d | cut -f1 | cut -d" " -f5 | sed "s/C0*//") &&
 		test -n "$level" && test "$level" -gt 0 && test "$level" -lt 98 &&
 		src=$(git diff-tree -r -C --find-copies-harder HEAD | sed 1d | cut -f2) &&
-		case "$src" in
-		file10 | file11) : ;; # happy
-		*) false ;; # not
-		&&
+		test "$src" = file2 &&
 		git config git-p4.detectCopies $(($level + 2)) &&
 		git p4 submit &&
 		p4 filelog //depot/file12 &&
 		p4 filelog //depot/file12 | test_must_fail grep -q "branch from" &&
 
+		echo "file13" >>file2 &&
+		git commit -a -m "Differentiate file2" &&
+		git p4 submit &&
+
 		cp file2 file13 &&
 		echo "different text" >>file13 &&
 		git add file13 &&
 		git commit -a -m "Copy file2 to file13 with changes" &&
 		git diff-tree -r -C --find-copies-harder HEAD &&
 		level=$(git diff-tree -r -C --find-copies-harder HEAD | sed 1d | cut -f1 | cut -d" " -f5 | sed "s/C0*//") &&
 		test -n "$level" && test "$level" -gt 2 && test "$level" -lt 100 &&
 		src=$(git diff-tree -r -C --find-copies-harder HEAD | sed 1d | cut -f2) &&
-		case "$src" in
-		file10 | file11 | file12) : ;; # happy
-		*) false ;; # not
-		&&
+		test "$src" = file2 &&
 		git config git-p4.detectCopies $(($level - 2)) &&
 		git p4 submit &&
 		p4 filelog //depot/file13 &&
-		p4 filelog //depot/file13 | grep -q "branch from //depot/file"
+		p4 filelog //depot/file13 | grep -q "branch from //depot/file2"
 	)
 '
 
 # See if configurables can be set, and in particular if the run.move.allow
 # variable exists, which allows admins to disable the "p4 move" command.
 test_expect_success 'p4 configure command and run.move.allow are available' '
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t: t9817-git-p4-exclude.sh
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t9902-completion.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t9902-completion.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t9902-completion.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t9902-completion.sh	2015-05-01 03:12:02.000000000 +0800
@@ -565,13 +565,13 @@
 	untracked-dir
 	EOF
 
 	test_completion "git commit " "modified" &&
 
 	: TODO .gitignore should not be here &&
-	test_completion "git ls-files " <<-\EOF
+	test_completion "git ls-files " <<-\EOF &&
 	.gitignore
 	dir
 	modified
 	EOF
 
 	touch momified &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t9903-bash-prompt.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t9903-bash-prompt.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/t9903-bash-prompt.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/t9903-bash-prompt.sh	2015-05-01 03:12:02.000000000 +0800
@@ -163,13 +163,13 @@
 		__git_ps1 >"$actual"
 	) &&
 	test_cmp expected "$actual"
 '
 
 test_expect_success 'prompt - interactive rebase' '
-	printf " (b1|REBASE-i 2/3)" >expected
+	printf " (b1|REBASE-i 2/3)" >expected &&
 	write_script fake_editor.sh <<-\EOF &&
 		echo "exec echo" >"$1"
 		echo "edit $(git log -1 --format="%h")" >>"$1"
 		echo "exec echo" >>"$1"
 	EOF
 	test_when_finished "rm -f fake_editor.sh" &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/test-lib.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/test-lib.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/t/test-lib.sh	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/t/test-lib.sh	2015-05-01 03:12:02.000000000 +0800
@@ -226,12 +226,18 @@
 		shift ;;
 	--tee)
 		shift ;; # was handled already
 	--root=*)
 		root=$(expr "z$1" : 'z[^=]*=\(.*\)')
 		shift ;;
+	--chain-lint)
+		GIT_TEST_CHAIN_LINT=1
+		shift ;;
+	--no-chain-lint)
+		GIT_TEST_CHAIN_LINT=0
+		shift ;;
 	-x)
 		trace=t
 		verbose=t
 		shift ;;
 	*)
 		echo "error: unknown test option '$1'" >&2; exit 1 ;;
@@ -519,12 +525,22 @@
 	return $test_eval_ret_
 }
 
 test_run_ () {
 	test_cleanup=:
 	expecting_failure=$2
+
+	if test "${GIT_TEST_CHAIN_LINT:-0}" != 0; then
+		# 117 is magic because it is unlikely to match the exit
+		# code of other programs
+		test_eval_ "(exit 117) && $1"
+		if test "$?" != 117; then
+			error "bug in the test script: broken &&-chain: $1"
+		fi
+	fi
+
 	setup_malloc_check
 	test_eval_ "$1"
 	eval_ret=$?
 	teardown_malloc_check
 
 	if test -z "$immediate" || test $eval_ret = 0 ||
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/tag.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/tag.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/tag.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/tag.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/boilerplates.made /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/boilerplates.made
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/templates/boilerplates.made	2017-10-10 12:31:59.438631516 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/templates/boilerplates.made	2017-10-10 13:04:28.510560083 +0800
@@ -1 +1 @@
-Tue Oct 10 12:31:59 CST 2017
+Tue Oct 10 13:04:28 CST 2017
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-chmtime and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-chmtime differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-chmtime.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-chmtime.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-chmtime.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-chmtime.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-config and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-config differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-config.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-config.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-config.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-config.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-ctype and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-ctype differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-ctype.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-ctype.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-ctype.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-ctype.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-date and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-date differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-date.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-date.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-date.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-date.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-delta and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-delta differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-delta.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-delta.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-delta.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-delta.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-dump-cache-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-dump-cache-tree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-dump-cache-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-dump-cache-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-dump-cache-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-dump-cache-tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-dump-split-index and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-dump-split-index differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-dump-split-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-dump-split-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-dump-split-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-dump-split-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-genrandom and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-genrandom differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-genrandom.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-genrandom.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-genrandom.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-genrandom.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-hashmap and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-hashmap differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-hashmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-hashmap.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-hashmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-hashmap.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-index-version and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-index-version differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-index-version.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-index-version.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-index-version.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-index-version.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-line-buffer and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-line-buffer differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-line-buffer.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-line-buffer.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-line-buffer.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-line-buffer.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-match-trees and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-match-trees differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-match-trees.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-match-trees.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-match-trees.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-match-trees.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-mergesort and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-mergesort differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-mergesort.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-mergesort.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-mergesort.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-mergesort.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-mktemp and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-mktemp differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-mktemp.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-mktemp.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-mktemp.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-mktemp.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-parse-options and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-parse-options differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-parse-options.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-parse-options.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-parse-options.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-parse-options.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-path-utils and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-path-utils differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-path-utils.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-path-utils.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-path-utils.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-path-utils.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-prio-queue and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-prio-queue differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-prio-queue.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-prio-queue.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-prio-queue.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-prio-queue.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-read-cache and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-read-cache differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-read-cache.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-read-cache.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-read-cache.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-read-cache.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-regex and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-regex differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-regex.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-regex.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-regex.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-regex.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-revision-walking and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-revision-walking differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-revision-walking.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-revision-walking.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-revision-walking.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-revision-walking.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-run-command and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-run-command differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-run-command.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-run-command.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-run-command.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-run-command.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-scrap-cache-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-scrap-cache-tree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-scrap-cache-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-scrap-cache-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-scrap-cache-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-scrap-cache-tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-sha1 and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-sha1 differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-sha1-array and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-sha1-array differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-sha1-array.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-sha1-array.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-sha1-array.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-sha1-array.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-sha1.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-sha1.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-sha1.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-sha1.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-sigchain and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-sigchain differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-sigchain.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-sigchain.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-sigchain.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-sigchain.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-string-list and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-string-list differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-string-list.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-string-list.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-string-list.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-string-list.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-subprocess and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-subprocess differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-subprocess.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-subprocess.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-subprocess.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-subprocess.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-svn-fe and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-svn-fe differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-svn-fe.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-svn-fe.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-svn-fe.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-svn-fe.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-urlmatch-normalization and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-urlmatch-normalization differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-urlmatch-normalization.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-urlmatch-normalization.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-urlmatch-normalization.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-urlmatch-normalization.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-wildmatch and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-wildmatch differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-wildmatch.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-wildmatch.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/test-wildmatch.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/test-wildmatch.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/thread-utils.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/thread-utils.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/thread-utils.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/thread-utils.c	2015-05-01 03:12:02.000000000 +0800
@@ -32,13 +32,29 @@
 		return (int)info.dwNumberOfProcessors;
 #elif defined(hpux) || defined(__hpux) || defined(_hpux)
 	struct pst_dynamic psd;
 
 	if (!pstat_getdynamic(&psd, sizeof(psd), (size_t)1, 0))
 		return (int)psd.psd_proc_cnt;
-#endif
+#elif defined(HAVE_BSD_SYSCTL) && defined(HW_NCPU)
+	int mib[2];
+	size_t len;
+	int cpucount;
+
+	mib[0] = CTL_HW;
+#  ifdef HW_AVAILCPU
+	mib[1] = HW_AVAILCPU;
+	len = sizeof(cpucount);
+	if (!sysctl(mib, 2, &cpucount, &len, NULL, 0))
+		return cpucount;
+#  endif /* HW_AVAILCPU */
+	mib[1] = HW_NCPU;
+	len = sizeof(cpucount);
+	if (!sysctl(mib, 2, &cpucount, &len, NULL, 0))
+		return cpucount;
+#endif /* defined(HAVE_BSD_SYSCTL) && defined(HW_NCPU) */
 
 #ifdef _SC_NPROCESSORS_ONLN
 	if ((ncpus = (long)sysconf(_SC_NPROCESSORS_ONLN)) > 0)
 		return (int)ncpus;
 #endif
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/thread-utils.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/thread-utils.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/thread-utils.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/thread-utils.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/trace.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/trace.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/trace.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/trace.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/trailer.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/trailer.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/trailer.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/trailer.c	2015-05-01 03:12:02.000000000 +0800
@@ -211,22 +211,12 @@
 		item->next->previous = NULL;
 		item->next = NULL;
 	}
 	return item;
 }
 
-static int read_from_command(struct child_process *cp, struct strbuf *buf)
-{
-	if (run_command(cp))
-		return error("running trailer command '%s' failed", cp->argv[0]);
-	if (strbuf_read(buf, cp->out, 1024) < 1)
-		return error("reading from trailer command '%s' failed", cp->argv[0]);
-	strbuf_trim(buf);
-	return 0;
-}
-
 static const char *apply_command(const char *command, const char *arg)
 {
 	struct strbuf cmd = STRBUF_INIT;
 	struct strbuf buf = STRBUF_INIT;
 	struct child_process cp = CHILD_PROCESS_INIT;
 	const char *argv[] = {NULL, NULL};
@@ -237,20 +227,22 @@
 		strbuf_replace(&cmd, TRAILER_ARG_STRING, arg);
 
 	argv[0] = cmd.buf;
 	cp.argv = argv;
 	cp.env = local_repo_env;
 	cp.no_stdin = 1;
-	cp.out = -1;
 	cp.use_shell = 1;
 
-	if (read_from_command(&cp, &buf)) {
+	if (capture_command(&cp, &buf, 1024)) {
+		error("running trailer command '%s' failed", cmd.buf);
 		strbuf_release(&buf);
 		result = xstrdup("");
-	} else
+	} else {
+		strbuf_trim(&buf);
 		result = strbuf_detach(&buf, NULL);
+	}
 
 	strbuf_release(&cmd);
 	return result;
 }
 
 static void apply_item_command(struct trailer_item *in_tok, struct trailer_item *arg_tok)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/trailer.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/trailer.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/trailer.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/trailer.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/transport.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/transport.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/transport.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/transport.c	2015-05-01 03:12:02.000000000 +0800
@@ -727,12 +727,16 @@
 		break;
 	case REF_STATUS_EXPECTING_REPORT:
 		print_ref_status('!', "[remote failure]", ref,
 						 ref->deletion ? NULL : ref->peer_ref,
 						 "remote failed to report status", porcelain);
 		break;
+	case REF_STATUS_ATOMIC_PUSH_FAILED:
+		print_ref_status('!', "[rejected]", ref, ref->peer_ref,
+						 "atomic push failed", porcelain);
+		break;
 	case REF_STATUS_OK:
 		print_ok_ref_status(ref, porcelain);
 		break;
 	}
 
 	return 1;
@@ -825,12 +829,13 @@
 	args.verbose = (transport->verbose > 0);
 	args.quiet = (transport->verbose < 0);
 	args.progress = transport->progress;
 	args.dry_run = !!(flags & TRANSPORT_PUSH_DRY_RUN);
 	args.porcelain = !!(flags & TRANSPORT_PUSH_PORCELAIN);
 	args.push_cert = !!(flags & TRANSPORT_PUSH_CERT);
+	args.atomic = !!(flags & TRANSPORT_PUSH_ATOMIC);
 	args.url = transport->url;
 
 	ret = send_pack(&args, data->fd, data->conn, remote_refs,
 			&data->extra_have);
 
 	close(data->fd[1]);
@@ -906,48 +911,12 @@
 
 static int external_specification_len(const char *url)
 {
 	return strchr(url, ':') - url;
 }
 
-static const struct string_list *protocol_whitelist(void)
-{
-	static int enabled = -1;
-	static struct string_list allowed = STRING_LIST_INIT_DUP;
-
-	if (enabled < 0) {
-		const char *v = getenv("GIT_ALLOW_PROTOCOL");
-		if (v) {
-			string_list_split(&allowed, v, ':', -1);
-			string_list_sort(&allowed);
-			enabled = 1;
-		} else {
-			enabled = 0;
-		}
-	}
-
-	return enabled ? &allowed : NULL;
-}
-
-int is_transport_allowed(const char *type)
-{
-	const struct string_list *allowed = protocol_whitelist();
-	return !allowed || string_list_has_string(allowed, type);
-}
-
-void transport_check_allowed(const char *type)
-{
-	if (!is_transport_allowed(type))
-		die("transport '%s' not allowed", type);
-}
-
-int transport_restrict_protocols(void)
-{
-	return !!protocol_whitelist();
-}
-
 struct transport *transport_get(struct remote *remote, const char *url)
 {
 	const char *helper;
 	struct transport *ret = xcalloc(1, sizeof(*ret));
 
 	ret->progress = isatty(2);
@@ -973,35 +942,30 @@
 			helper = xstrndup(url, p - url);
 	}
 
 	if (helper) {
 		transport_helper_init(ret, helper);
 	} else if (starts_with(url, "rsync:")) {
-		transport_check_allowed("rsync");
 		ret->get_refs_list = get_refs_via_rsync;
 		ret->fetch = fetch_objs_via_rsync;
 		ret->push = rsync_transport_push;
 		ret->smart_options = NULL;
 	} else if (url_is_local_not_ssh(url) && is_file(url) && is_bundle(url, 1)) {
 		struct bundle_transport_data *data = xcalloc(1, sizeof(*data));
-		transport_check_allowed("file");
 		ret->data = data;
 		ret->get_refs_list = get_refs_from_bundle;
 		ret->fetch = fetch_refs_from_bundle;
 		ret->disconnect = close_bundle;
 		ret->smart_options = NULL;
 	} else if (!is_url(url)
 		|| starts_with(url, "file://")
 		|| starts_with(url, "git://")
 		|| starts_with(url, "ssh://")
 		|| starts_with(url, "git+ssh://")
 		|| starts_with(url, "ssh+git://")) {
-		/*
-		 * These are builtin smart transports; "allowed" transports
-		 * will be checked individually in git_connect.
-		 */
+		/* These are builtin smart transports. */
 		struct git_transport_data *data = xcalloc(1, sizeof(*data));
 		ret->data = data;
 		ret->set_option = NULL;
 		ret->get_refs_list = get_refs_via_connect;
 		ret->fetch = fetch_refs_via_pack;
 		ret->push_refs = git_transport_push;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/transport.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/transport.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/transport.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/transport.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/transport.h	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/transport.h	2015-05-01 03:12:02.000000000 +0800
@@ -122,37 +122,20 @@
 #define TRANSPORT_RECURSE_SUBMODULES_CHECK 64
 #define TRANSPORT_PUSH_PRUNE 128
 #define TRANSPORT_RECURSE_SUBMODULES_ON_DEMAND 256
 #define TRANSPORT_PUSH_NO_HOOK 512
 #define TRANSPORT_PUSH_FOLLOW_TAGS 1024
 #define TRANSPORT_PUSH_CERT 2048
+#define TRANSPORT_PUSH_ATOMIC 4096
 
 #define TRANSPORT_SUMMARY_WIDTH (2 * DEFAULT_ABBREV + 3)
 #define TRANSPORT_SUMMARY(x) (int)(TRANSPORT_SUMMARY_WIDTH + strlen(x) - gettext_width(x)), (x)
 
 /* Returns a transport suitable for the url */
 struct transport *transport_get(struct remote *, const char *);
 
-/*
- * Check whether a transport is allowed by the environment. Type should
- * generally be the URL scheme, as described in Documentation/git.txt
- */
-int is_transport_allowed(const char *type);
-
-/*
- * Check whether a transport is allowed by the environment,
- * and die otherwise.
- */
-void transport_check_allowed(const char *type);
-
-/*
- * Returns true if the user has attempted to turn on protocol
- * restrictions at all.
- */
-int transport_restrict_protocols(void);
-
 /* Transport options which apply to git:// and scp-style URLs */
 
 /* The program to use on the remote side to send a pack */
 #define TRANS_OPT_UPLOADPACK "uploadpack"
 
 /* The program to use on the remote side to receive a pack */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/transport-helper.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/transport-helper.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/transport-helper.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/transport-helper.c	2015-05-01 03:12:02.000000000 +0800
@@ -94,12 +94,14 @@
 	data = (struct helper_data *)transport->data;
 	transport_take_over(transport, data->helper);
 	fclose(data->out);
 	free(data);
 }
 
+static void standard_options(struct transport *t);
+
 static struct child_process *get_helper(struct transport *transport)
 {
 	struct helper_data *data = transport->data;
 	struct strbuf buf = STRBUF_INIT;
 	struct child_process *helper;
 	const char **refspecs = NULL;
@@ -208,12 +210,13 @@
 	} else if (data->import || data->bidi_import || data->export) {
 		warning("This remote helper should implement refspec capability.");
 	}
 	strbuf_release(&buf);
 	if (debug)
 		fprintf(stderr, "Debug: Capabilities complete.\n");
+	standard_options(transport);
 	return data->helper;
 }
 
 static int disconnect_helper(struct transport *transport)
 {
 	struct helper_data *data = transport->data;
@@ -335,23 +338,12 @@
 			    int nr_heads, struct ref **to_fetch)
 {
 	struct helper_data *data = transport->data;
 	int i;
 	struct strbuf buf = STRBUF_INIT;
 
-	standard_options(transport);
-	if (data->check_connectivity &&
-	    data->transport_options.check_self_contained_and_connected)
-		set_helper_option(transport, "check-connectivity", "true");
-
-	if (transport->cloning)
-		set_helper_option(transport, "cloning", "true");
-
-	if (data->transport_options.update_shallow)
-		set_helper_option(transport, "update-shallow", "true");
-
 	for (i = 0; i < nr_heads; i++) {
 		const struct ref *posn = to_fetch[i];
 		if (posn->status & REF_STATUS_UPTODATE)
 			continue;
 
 		strbuf_addf(&buf, "fetch %s %s\n",
@@ -619,12 +611,22 @@
 		if (!(to_fetch[i]->status & REF_STATUS_UPTODATE))
 			count++;
 
 	if (!count)
 		return 0;
 
+	if (data->check_connectivity &&
+	    data->transport_options.check_self_contained_and_connected)
+		set_helper_option(transport, "check-connectivity", "true");
+
+	if (transport->cloning)
+		set_helper_option(transport, "cloning", "true");
+
+	if (data->transport_options.update_shallow)
+		set_helper_option(transport, "update-shallow", "true");
+
 	if (data->fetch)
 		return fetch_with_fetch(transport, nr_heads, to_fetch);
 
 	if (data->import)
 		return fetch_with_import(transport, nr_heads, to_fetch);
 
@@ -823,13 +825,12 @@
 	}
 	if (buf.len == 0) {
 		string_list_clear(&cas_options, 0);
 		return 0;
 	}
 
-	standard_options(transport);
 	for_each_string_list_item(cas_option, &cas_options)
 		set_helper_option(transport, "cas", cas_option->string);
 
 	if (flags & TRANSPORT_PUSH_DRY_RUN) {
 		if (set_helper_option(transport, "dry-run", "true") != 0)
 			die("helper %s does not support dry-run", data->name);
@@ -1035,14 +1036,12 @@
 
 int transport_helper_init(struct transport *transport, const char *name)
 {
 	struct helper_data *data = xcalloc(1, sizeof(*data));
 	data->name = name;
 
-	transport_check_allowed(name);
-
 	if (getenv("GIT_TRANSPORT_HELPER_DEBUG"))
 		debug = 1;
 
 	transport->data = data;
 	transport->set_option = set_helper_option;
 	transport->get_refs_list = get_refs_list;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/transport-helper.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/transport-helper.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/transport-helper.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/transport-helper.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/transport.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/transport.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/tree-diff.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/tree-diff.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/tree-diff.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/tree-diff.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/tree-walk.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/tree-walk.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/tree-walk.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/tree-walk.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/unix-socket.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/unix-socket.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/unix-socket.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/unix-socket.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/unpack-trees.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/unpack-trees.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/unpack-trees.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/unpack-trees.c	2015-05-01 03:12:02.000000000 +0800
@@ -1431,24 +1431,21 @@
 		return 0;
 
 	len = check_leading_path(ce->name, ce_namelen(ce));
 	if (!len)
 		return 0;
 	else if (len > 0) {
-		char *path;
-		int ret;
-
-		path = xmemdupz(ce->name, len);
+		char path[PATH_MAX + 1];
+		memcpy(path, ce->name, len);
+		path[len] = 0;
 		if (lstat(path, &st))
-			ret = error("cannot stat '%s': %s", path,
+			return error("cannot stat '%s': %s", path,
 					strerror(errno));
-		else
-			ret = check_ok_to_remove(path, len, DT_UNKNOWN, NULL,
-						 &st, error_type, o);
-		free(path);
-		return ret;
+
+		return check_ok_to_remove(path, len, DT_UNKNOWN, NULL, &st,
+				error_type, o);
 	} else if (lstat(ce->name, &st)) {
 		if (errno != ENOENT)
 			return error("cannot stat '%s': %s", ce->name,
 				     strerror(errno));
 		return 0;
 	} else {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/unpack-trees.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/unpack-trees.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/unpack-trees.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/unpack-trees.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/upload-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/upload-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/upload-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/upload-pack.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/url.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/url.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/urlmatch.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/urlmatch.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/urlmatch.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/urlmatch.c	2015-05-01 03:12:02.000000000 +0800
@@ -409,15 +409,15 @@
 		return 0;
 	if ((strlen(url) == url_prefix_len) || (url[url_prefix_len] == '/'))
 		return url_prefix_len + 1;
 	return 0;
 }
 
-int match_urls(const struct url_info *url,
-	       const struct url_info *url_prefix,
-	       int *exactusermatch)
+static int match_urls(const struct url_info *url,
+		      const struct url_info *url_prefix,
+		      int *exactusermatch)
 {
 	/*
 	 * url_prefix matches url if the scheme, host and port of url_prefix
 	 * are the same as those of url and the path portion of url_prefix
 	 * is the same as the path portion of url or it is a prefix that
 	 * matches at a '/' boundary.  If url_prefix contains a user name,
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/urlmatch.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/urlmatch.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/urlmatch.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/urlmatch.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/urlmatch.h	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/urlmatch.h	2015-05-01 03:12:02.000000000 +0800
@@ -28,13 +28,12 @@
 				 * after the url has been normalized */
 	size_t path_len;	/* length of path portion excluding any trailing
 				 * '?...' and '#...' portion; will always be >= 1 */
 };
 
 extern char *url_normalize(const char *, struct url_info *);
-extern int match_urls(const struct url_info *url, const struct url_info *url_prefix, int *exactusermatch);
 
 struct urlmatch_item {
 	size_t matched_len;
 	char user_matched;
 };
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/urlmatch.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/urlmatch.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/url.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/url.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/usage.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/usage.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/usage.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/usage.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/userdiff.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/userdiff.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/userdiff.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/userdiff.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/utf8.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/utf8.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/utf8.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/utf8.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/varint.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/varint.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/varint.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/varint.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/fast_export.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/fast_export.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/fast_export.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/fast_export.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/lib.a and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/lib.a differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/line_buffer.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/line_buffer.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/line_buffer.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/line_buffer.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/repo_tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/repo_tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/repo_tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/repo_tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/sliding_window.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/sliding_window.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/sliding_window.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/sliding_window.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/svndiff.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/svndiff.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/svndiff.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/svndiff.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/svndump.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/svndump.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/vcs-svn/svndump.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/vcs-svn/svndump.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/version /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/version
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/version	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/version	2015-05-01 03:12:02.000000000 +0800
@@ -1 +1 @@
-2.3.10
+2.4.0
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/version.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/version.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/versioncmp.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/versioncmp.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/versioncmp.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/versioncmp.c	2015-05-01 03:12:02.000000000 +0800
@@ -1,7 +1,8 @@
 #include "cache.h"
+#include "string-list.h"
 
 /*
  * versioncmp(): copied from string/strverscmp.c in glibc commit
  * ee9247c38a8def24a59eb5cfb7196a98bef8cfdc, reformatted to Git coding
  * style. The implementation is under LGPL-2.1 and Git relicenses it
  * to GPLv2.
@@ -17,12 +18,54 @@
 #define  S_Z    0x9
 
 /* result_type: CMP: return diff; LEN: compare using len_diff/diff */
 #define  CMP    2
 #define  LEN    3
 
+static const struct string_list *prereleases;
+static int initialized;
+
+/*
+ * p1 and p2 point to the first different character in two strings. If
+ * either p1 or p2 starts with a prerelease suffix, it will be forced
+ * to be on top.
+ *
+ * If both p1 and p2 start with (different) suffix, the order is
+ * determined by config file.
+ *
+ * Note that we don't have to deal with the situation when both p1 and
+ * p2 start with the same suffix because the common part is already
+ * consumed by the caller.
+ *
+ * Return non-zero if *diff contains the return value for versioncmp()
+ */
+static int swap_prereleases(const void *p1_,
+			    const void *p2_,
+			    int *diff)
+{
+	const char *p1 = p1_;
+	const char *p2 = p2_;
+	int i, i1 = -1, i2 = -1;
+
+	for (i = 0; i < prereleases->nr; i++) {
+		const char *suffix = prereleases->items[i].string;
+		if (i1 == -1 && starts_with(p1, suffix))
+			i1 = i;
+		if (i2 == -1 && starts_with(p2, suffix))
+			i2 = i;
+	}
+	if (i1 == -1 && i2 == -1)
+		return 0;
+	if (i1 >= 0 && i2 >= 0)
+		*diff = i1 - i2;
+	else if (i1 >= 0)
+		*diff = -1;
+	else /* if (i2 >= 0) */
+		*diff = 1;
+	return 1;
+}
 
 /*
  * Compare S1 and S2 as strings holding indices/version numbers,
  * returning less than, equal to or greater than zero if S1 is less
  * than, equal to or greater than S2 (for more info, see the texinfo
  * doc).
@@ -71,12 +114,19 @@
 		state = next_state[state];
 		c1 = *p1++;
 		c2 = *p2++;
 		state += (c1 == '0') + (isdigit (c1) != 0);
 	}
 
+	if (!initialized) {
+		initialized = 1;
+		prereleases = git_config_get_value_multi("versionsort.prereleasesuffix");
+	}
+	if (prereleases && swap_prereleases(p1 - 1, p2 - 1, &diff))
+		return diff;
+
 	state = result_type[state * 3 + (((c2 == '0') + (isdigit (c2) != 0)))];
 
 	switch (state) {
 	case CMP:
 		return diff;
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/versioncmp.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/versioncmp.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/versioncmp.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/versioncmp.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/version.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/version.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/walker.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/walker.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/walker.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/walker.c	2015-05-01 03:12:02.000000000 +0800
@@ -296,13 +296,13 @@
 	for (i = 0; i < targets; i++) {
 		if (!write_ref[i])
 			continue;
 		strbuf_reset(&refname);
 		strbuf_addf(&refname, "refs/%s", write_ref[i]);
 		if (ref_transaction_update(transaction, refname.buf,
-					   &sha1[20 * i], NULL, 0, 0,
+					   &sha1[20 * i], NULL, 0,
 					   msg ? msg : "fetch (unknown)",
 					   &err)) {
 			error("%s", err.buf);
 			goto done;
 		}
 	}
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/walker.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/walker.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/walker.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/walker.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/wildmatch.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/wildmatch.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/wildmatch.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/wildmatch.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/wrapper.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/wrapper.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/wrapper.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/wrapper.c	2015-05-01 03:12:02.000000000 +0800
@@ -169,14 +169,28 @@
 
 /*
  * Limit size of IO chunks, because huge chunks only cause pain.  OS X
  * 64-bit is buggy, returning EINVAL if len >= INT_MAX; and even in
  * the absence of bugs, large chunks can result in bad latencies when
  * you decide to kill the process.
+ *
+ * We pick 8 MiB as our default, but if the platform defines SSIZE_MAX
+ * that is smaller than that, clip it to SSIZE_MAX, as a call to
+ * read(2) or write(2) larger than that is allowed to fail.  As the last
+ * resort, we allow a port to pass via CFLAGS e.g. "-DMAX_IO_SIZE=value"
+ * to override this, if the definition of SSIZE_MAX given by the platform
+ * is broken.
  */
-#define MAX_IO_SIZE (8*1024*1024)
+#ifndef MAX_IO_SIZE
+# define MAX_IO_SIZE_DEFAULT (8*1024*1024)
+# if defined(SSIZE_MAX) && (SSIZE_MAX < MAX_IO_SIZE_DEFAULT)
+#  define MAX_IO_SIZE SSIZE_MAX
+# else
+#  define MAX_IO_SIZE MAX_IO_SIZE_DEFAULT
+# endif
+#endif
 
 /*
  * xread() is the same a read(), but it automatically restarts read()
  * operations with a recoverable error (EAGAIN and EINTR). xread()
  * DOES NOT GUARANTEE that "len" bytes is read even if the data is available.
  */
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/wrapper.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/wrapper.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/wrapper.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/wrapper.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/write_or_die.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/write_or_die.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/write_or_die.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/write_or_die.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ws.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ws.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/ws.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/ws.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/wt-status.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/wt-status.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/wt-status.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/wt-status.c	2015-05-01 03:12:02.000000000 +0800
@@ -726,13 +726,12 @@
 static void wt_status_print_submodule_summary(struct wt_status *s, int uncommitted)
 {
 	struct child_process sm_summary = CHILD_PROCESS_INIT;
 	struct strbuf cmd_stdout = STRBUF_INIT;
 	struct strbuf summary = STRBUF_INIT;
 	char *summary_content;
-	size_t len;
 
 	argv_array_pushf(&sm_summary.env_array, "GIT_INDEX_FILE=%s",
 			 s->index_file);
 
 	argv_array_push(&sm_summary.args, "submodule");
 	argv_array_push(&sm_summary.args, "summary");
@@ -742,31 +741,28 @@
 	argv_array_pushf(&sm_summary.args, "%d", s->submodule_summary);
 	if (!uncommitted)
 		argv_array_push(&sm_summary.args, s->amend ? "HEAD^" : "HEAD");
 
 	sm_summary.git_cmd = 1;
 	sm_summary.no_stdin = 1;
-	fflush(s->fp);
-	sm_summary.out = -1;
 
-	run_command(&sm_summary);
-
-	len = strbuf_read(&cmd_stdout, sm_summary.out, 1024);
+	capture_command(&sm_summary, &cmd_stdout, 1024);
 
 	/* prepend header, only if there's an actual output */
-	if (len) {
+	if (cmd_stdout.len) {
 		if (uncommitted)
 			strbuf_addstr(&summary, _("Submodules changed but not updated:"));
 		else
 			strbuf_addstr(&summary, _("Submodule changes to be committed:"));
 		strbuf_addstr(&summary, "\n\n");
 	}
 	strbuf_addbuf(&summary, &cmd_stdout);
 	strbuf_release(&cmd_stdout);
 
 	if (s->display_comment_prefix) {
+		size_t len;
 		summary_content = strbuf_detach(&summary, &len);
 		strbuf_add_commented_lines(&summary, summary_content, len);
 		free(summary_content);
 	}
 
 	fputs(summary.buf, s->fp);
@@ -846,12 +842,14 @@
 }
 
 static void wt_status_print_verbose(struct wt_status *s)
 {
 	struct rev_info rev;
 	struct setup_revision_opt opt;
+	int dirty_submodules;
+	const char *c = color(WT_STATUS_HEADER, s);
 
 	init_revisions(&rev, NULL);
 	DIFF_OPT_SET(&rev.diffopt, ALLOW_TEXTCONV);
 
 	memset(&opt, 0, sizeof(opt));
 	opt.def = s->is_initial ? EMPTY_TREE_SHA1_HEX : s->reference;
@@ -870,13 +868,31 @@
 	 * diff before committing.
 	 */
 	if (s->fp != stdout) {
 		rev.diffopt.use_color = 0;
 		wt_status_add_cut_line(s->fp);
 	}
+	if (s->verbose > 1 && s->commitable) {
+		/* print_updated() printed a header, so do we */
+		if (s->fp != stdout)
+			wt_status_print_trailer(s);
+		status_printf_ln(s, c, _("Changes to be committed:"));
+		rev.diffopt.a_prefix = "c/";
+		rev.diffopt.b_prefix = "i/";
+	} /* else use prefix as per user config */
 	run_diff_index(&rev, 1);
+	if (s->verbose > 1 &&
+	    wt_status_check_worktree_changes(s, &dirty_submodules)) {
+		status_printf_ln(s, c,
+			"--------------------------------------------------");
+		status_printf_ln(s, c, _("Changes not staged for commit:"));
+		setup_work_tree();
+		rev.diffopt.a_prefix = "i/";
+		rev.diffopt.b_prefix = "w/";
+		run_diff_files(&rev, 0);
+	}
 }
 
 static void wt_status_print_tracking(struct wt_status *s)
 {
 	struct strbuf sb = STRBUF_INIT;
 	const char *cp, *ep;
@@ -1219,12 +1235,14 @@
 			ofs = 0;
 		state->detached_from = xstrdup(ref + ofs);
 	} else
 		state->detached_from =
 			xstrdup(find_unique_abbrev(cb.nsha1, DEFAULT_ABBREV));
 	hashcpy(state->detached_sha1, cb.nsha1);
+	state->detached_at = !get_sha1("HEAD", sha1) &&
+			     !hashcmp(sha1, state->detached_sha1);
 
 	free(ref);
 	strbuf_release(&cb.buf);
 }
 
 void wt_status_get_state(struct wt_status_state *state,
@@ -1307,16 +1325,14 @@
 		else if (!strcmp(branch_name, "HEAD")) {
 			branch_status_color = color(WT_STATUS_NOBRANCH, s);
 			if (state.rebase_in_progress || state.rebase_interactive_in_progress) {
 				on_what = _("rebase in progress; onto ");
 				branch_name = state.onto;
 			} else if (state.detached_from) {
-				unsigned char sha1[20];
 				branch_name = state.detached_from;
-				if (!get_sha1("HEAD", sha1) &&
-				    !hashcmp(sha1, state.detached_sha1))
+				if (state.detached_at)
 					on_what = _("HEAD detached at ");
 				else
 					on_what = _("HEAD detached from ");
 			} else {
 				branch_name = "";
 				on_what = _("Not currently on any branch.");
@@ -1531,12 +1547,13 @@
 	}
 
 	base = branch->merge[0]->dst;
 	base = shorten_unambiguous_ref(base, 0);
 	color_fprintf(s->fp, header_color, "...");
 	color_fprintf(s->fp, branch_color_remote, "%s", base);
+	free((char *)base);
 
 	if (!upstream_is_gone && !num_ours && !num_theirs) {
 		fputc(s->null_termination ? '\0' : '\n', s->fp);
 		return;
 	}
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/wt-status.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/wt-status.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/wt-status.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/wt-status.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/wt-status.h	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/wt-status.h	2015-05-01 03:12:02.000000000 +0800
@@ -81,12 +81,13 @@
 	int am_empty_patch;
 	int rebase_in_progress;
 	int rebase_interactive_in_progress;
 	int cherry_pick_in_progress;
 	int bisect_in_progress;
 	int revert_in_progress;
+	int detached_at;
 	char *branch;
 	char *onto;
 	char *detached_from;
 	unsigned char detached_sha1[20];
 	unsigned char revert_head_sha1[20];
 	unsigned char cherry_pick_head_sha1[20];
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/wt-status.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/wt-status.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/lib.a and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/lib.a differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xdiffi.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xdiffi.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xdiffi.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xdiffi.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xemit.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xemit.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xemit.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xemit.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xhistogram.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xhistogram.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xhistogram.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xhistogram.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xmerge.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xmerge.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xmerge.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xmerge.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xpatience.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xpatience.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xpatience.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xpatience.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xprepare.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xprepare.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xprepare.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xprepare.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xutils.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xutils.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff/xutils.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff/xutils.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff-interface.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff-interface.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff-interface.c	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff-interface.c	2015-05-01 03:12:02.000000000 +0800
@@ -128,15 +128,12 @@
 
 int xdi_diff(mmfile_t *mf1, mmfile_t *mf2, xpparam_t const *xpp, xdemitconf_t const *xecfg, xdemitcb_t *xecb)
 {
 	mmfile_t a = *mf1;
 	mmfile_t b = *mf2;
 
-	if (mf1->size > MAX_XDIFF_SIZE || mf2->size > MAX_XDIFF_SIZE)
-		return -1;
-
 	trim_common_tail(&a, &b, xecfg->ctxlen);
 
 	return xdl_diff(&a, &b, xpp, xecfg, xecb);
 }
 
 int xdi_diff_outf(mmfile_t *mf1, mmfile_t *mf2,
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff-interface.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff-interface.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff-interface.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff-interface.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff-interface.h	2015-10-03 06:42:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff-interface.h	2015-05-01 03:12:02.000000000 +0800
@@ -1,18 +1,11 @@
 #ifndef XDIFF_INTERFACE_H
 #define XDIFF_INTERFACE_H
 
 #include "xdiff/xdiff.h"
 
-/*
- * xdiff isn't equipped to handle content over a gigabyte;
- * we make the cutoff 1GB - 1MB to give some breathing
- * room for constant-sized additions (e.g., merge markers)
- */
-#define MAX_XDIFF_SIZE (1024UL * 1024 * 1023)
-
 typedef void (*xdiff_emit_consume_fn)(void *, char *, unsigned long);
 
 int xdi_diff(mmfile_t *mf1, mmfile_t *mf2, xpparam_t const *xpp, xdemitconf_t const *xecfg, xdemitcb_t *ecb);
 int xdi_diff_outf(mmfile_t *mf1, mmfile_t *mf2,
 		  xdiff_emit_consume_fn fn, void *consume_callback_data,
 		  xpparam_t const *xpp, xdemitconf_t const *xecfg);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/xdiff-interface.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/xdiff-interface.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/zlib.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/zlib.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.10/zlib.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.0/zlib.o differ

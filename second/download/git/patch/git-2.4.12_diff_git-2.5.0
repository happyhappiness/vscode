Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/abspath.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/abspath.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/abspath.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/abspath.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/advice.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/advice.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/advice.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/advice.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/alias.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/alias.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/alias.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/alias.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/alloc.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/alloc.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/alloc.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/alloc.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/archive.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/archive.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/archive.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/archive.c	2015-07-28 04:34:56.000000000 +0800
@@ -98,13 +98,13 @@
 	check[0].attr = attr_export_ignore;
 	check[1].attr = attr_export_subst;
 }
 
 struct directory {
 	struct directory *up;
-	unsigned char sha1[20];
+	struct object_id oid;
 	int baselen, len;
 	unsigned mode;
 	int stage;
 	char path[FLEX_ARRAY];
 };
 
@@ -174,13 +174,13 @@
 	d->up	   = c->bottom;
 	d->baselen = base->len;
 	d->mode	   = mode;
 	d->stage   = stage;
 	c->bottom  = d;
 	d->len = sprintf(d->path, "%.*s%s/", (int)base->len, base->buf, filename);
-	hashcpy(d->sha1, sha1);
+	hashcpy(d->oid.hash, sha1);
 }
 
 static int write_directory(struct archiver_context *c)
 {
 	struct directory *d = c->bottom;
 	int ret;
@@ -188,13 +188,13 @@
 	if (!d)
 		return 0;
 	c->bottom = d->up;
 	d->path[d->len - 1] = '\0'; /* no trailing slash */
 	ret =
 		write_directory(c) ||
-		write_archive_entry(d->sha1, d->path, d->baselen,
+		write_archive_entry(d->oid.hash, d->path, d->baselen,
 				    d->path + d->baselen, d->mode,
 				    d->stage, c) != READ_TREE_RECURSIVE;
 	free(d);
 	return ret ? -1 : 0;
 }
 
@@ -351,52 +351,52 @@
 {
 	const char *name = argv[0];
 	const unsigned char *commit_sha1;
 	time_t archive_time;
 	struct tree *tree;
 	const struct commit *commit;
-	unsigned char sha1[20];
+	struct object_id oid;
 
 	/* Remotes are only allowed to fetch actual refs */
 	if (remote && !remote_allow_unreachable) {
 		char *ref = NULL;
 		const char *colon = strchrnul(name, ':');
 		int refnamelen = colon - name;
 
-		if (!dwim_ref(name, refnamelen, sha1, &ref))
+		if (!dwim_ref(name, refnamelen, oid.hash, &ref))
 			die("no such ref: %.*s", refnamelen, name);
 		free(ref);
 	}
 
-	if (get_sha1(name, sha1))
+	if (get_sha1(name, oid.hash))
 		die("Not a valid object name");
 
-	commit = lookup_commit_reference_gently(sha1, 1);
+	commit = lookup_commit_reference_gently(oid.hash, 1);
 	if (commit) {
 		commit_sha1 = commit->object.sha1;
 		archive_time = commit->date;
 	} else {
 		commit_sha1 = NULL;
 		archive_time = time(NULL);
 	}
 
-	tree = parse_tree_indirect(sha1);
+	tree = parse_tree_indirect(oid.hash);
 	if (tree == NULL)
 		die("not a tree object");
 
 	if (prefix) {
-		unsigned char tree_sha1[20];
+		struct object_id tree_oid;
 		unsigned int mode;
 		int err;
 
 		err = get_tree_entry(tree->object.sha1, prefix,
-				     tree_sha1, &mode);
+				     tree_oid.hash, &mode);
 		if (err || !S_ISDIR(mode))
 			die("current working directory is untracked");
 
-		tree = parse_tree_indirect(tree_sha1);
+		tree = parse_tree_indirect(tree_oid.hash);
 	}
 	ar_args->tree = tree;
 	ar_args->commit_sha1 = commit_sha1;
 	ar_args->commit = commit;
 	ar_args->time = archive_time;
 }
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/archive.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/archive.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/archive.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/archive.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/archive-tar.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/archive-tar.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/archive-tar.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/archive-tar.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/archive-zip.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/archive-zip.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/archive-zip.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/archive-zip.c	2015-07-28 04:34:56.000000000 +0800
@@ -445,18 +445,18 @@
 	copy_le16(trailer.disk, 0);
 	copy_le16(trailer.directory_start_disk, 0);
 	copy_le16(trailer.entries_on_this_disk, zip_dir_entries);
 	copy_le16(trailer.entries, zip_dir_entries);
 	copy_le32(trailer.size, zip_dir_offset);
 	copy_le32(trailer.offset, zip_offset);
-	copy_le16(trailer.comment_length, sha1 ? 40 : 0);
+	copy_le16(trailer.comment_length, sha1 ? GIT_SHA1_HEXSZ : 0);
 
 	write_or_die(1, zip_dir, zip_dir_offset);
 	write_or_die(1, &trailer, ZIP_DIR_TRAILER_SIZE);
 	if (sha1)
-		write_or_die(1, sha1_to_hex(sha1), 40);
+		write_or_die(1, sha1_to_hex(sha1), GIT_SHA1_HEXSZ);
 }
 
 static void dos_time(time_t *time, int *dos_date, int *dos_time)
 {
 	struct tm *t = localtime(time);
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/archive-zip.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/archive-zip.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/archive-zip.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/archive-zip.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/argv-array.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/argv-array.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/argv-array.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/argv-array.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/attr.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/attr.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/attr.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/attr.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/base85.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/base85.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/base85.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/base85.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/git /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/git
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/git	2017-10-10 13:19:01.842528076 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/git	2017-10-10 13:51:34.322456519 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and git.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and git.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/git" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/git-cvsserver /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/git-cvsserver
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/git-cvsserver	2017-10-10 13:19:01.858528076 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/git-cvsserver	2017-10-10 13:51:34.338456518 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and git-cvsserver.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and git-cvsserver.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/git-cvsserver" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/git-receive-pack /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/git-receive-pack
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/git-receive-pack	2017-10-10 13:19:01.850528076 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/git-receive-pack	2017-10-10 13:51:34.330456519 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and git-receive-pack.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and git-receive-pack.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/git-receive-pack" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/git-shell /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/git-shell
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/git-shell	2017-10-10 13:19:01.854528076 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/git-shell	2017-10-10 13:51:34.334456519 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and git-shell.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and git-shell.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/git-shell" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/git-upload-archive /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/git-upload-archive
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/git-upload-archive	2017-10-10 13:19:01.850528076 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/git-upload-archive	2017-10-10 13:51:34.330456519 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and git-upload-archive.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and git-upload-archive.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/git-upload-archive" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/git-upload-pack /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/git-upload-pack
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/git-upload-pack	2017-10-10 13:19:01.846528076 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/git-upload-pack	2017-10-10 13:51:34.326456519 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and git-upload-pack.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and git-upload-pack.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/git-upload-pack" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-chmtime /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-chmtime
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-chmtime	2017-10-10 13:19:01.858528076 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-chmtime	2017-10-10 13:51:34.338456518 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-chmtime.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-chmtime.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-chmtime" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-config /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-config
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-config	2017-10-10 13:19:01.862528076 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-config	2017-10-10 13:51:34.342456518 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-config.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-config.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-config" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-ctype /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-ctype
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-ctype	2017-10-10 13:19:01.862528076 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-ctype	2017-10-10 13:51:34.342456518 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-ctype.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-ctype.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-ctype" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-date /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-date
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-date	2017-10-10 13:19:01.866528075 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-date	2017-10-10 13:51:34.346456518 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-date.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-date.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-date" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-delta /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-delta
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-delta	2017-10-10 13:19:01.870528075 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-delta	2017-10-10 13:51:34.350456518 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-delta.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-delta.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-delta" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-dump-cache-tree /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-dump-cache-tree
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-dump-cache-tree	2017-10-10 13:19:01.870528075 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-dump-cache-tree	2017-10-10 13:51:34.350456518 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-dump-cache-tree.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-dump-cache-tree.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-dump-cache-tree" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-dump-split-index /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-dump-split-index
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-dump-split-index	2017-10-10 13:19:01.874528075 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-dump-split-index	2017-10-10 13:51:34.354456518 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-dump-split-index.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-dump-split-index.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-dump-split-index" "$@"
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers: test-dump-untracked-cache
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-genrandom /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-genrandom
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-genrandom	2017-10-10 13:19:01.874528075 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-genrandom	2017-10-10 13:51:34.358456518 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-genrandom.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-genrandom.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-genrandom" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-hashmap /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-hashmap
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-hashmap	2017-10-10 13:19:01.878528075 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-hashmap	2017-10-10 13:51:34.362456518 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-hashmap.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-hashmap.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-hashmap" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-index-version /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-index-version
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-index-version	2017-10-10 13:19:01.882528075 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-index-version	2017-10-10 13:51:34.362456518 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-index-version.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-index-version.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-index-version" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-line-buffer /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-line-buffer
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-line-buffer	2017-10-10 13:19:01.882528075 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-line-buffer	2017-10-10 13:51:34.366456517 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-line-buffer.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-line-buffer.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-line-buffer" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-match-trees /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-match-trees
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-match-trees	2017-10-10 13:19:01.886528075 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-match-trees	2017-10-10 13:51:34.366456517 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-match-trees.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-match-trees.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-match-trees" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-mergesort /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-mergesort
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-mergesort	2017-10-10 13:19:01.890528074 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-mergesort	2017-10-10 13:51:34.370456517 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-mergesort.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-mergesort.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-mergesort" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-mktemp /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-mktemp
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-mktemp	2017-10-10 13:19:01.890528074 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-mktemp	2017-10-10 13:51:34.370456517 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-mktemp.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-mktemp.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-mktemp" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-parse-options /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-parse-options
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-parse-options	2017-10-10 13:19:01.894528074 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-parse-options	2017-10-10 13:51:34.374456517 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-parse-options.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-parse-options.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-parse-options" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-path-utils /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-path-utils
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-path-utils	2017-10-10 13:19:01.894528074 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-path-utils	2017-10-10 13:51:34.374456517 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-path-utils.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-path-utils.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-path-utils" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-prio-queue /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-prio-queue
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-prio-queue	2017-10-10 13:19:01.898528074 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-prio-queue	2017-10-10 13:51:34.378456517 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-prio-queue.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-prio-queue.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-prio-queue" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-read-cache /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-read-cache
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-read-cache	2017-10-10 13:19:01.898528074 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-read-cache	2017-10-10 13:51:34.382456517 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-read-cache.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-read-cache.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-read-cache" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-regex /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-regex
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-regex	2017-10-10 13:19:01.902528074 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-regex	2017-10-10 13:51:34.382456517 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-regex.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-regex.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-regex" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-revision-walking /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-revision-walking
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-revision-walking	2017-10-10 13:19:01.906528074 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-revision-walking	2017-10-10 13:51:34.386456517 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-revision-walking.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-revision-walking.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-revision-walking" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-run-command /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-run-command
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-run-command	2017-10-10 13:19:01.906528074 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-run-command	2017-10-10 13:51:34.386456517 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-run-command.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-run-command.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-run-command" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-scrap-cache-tree /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-scrap-cache-tree
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-scrap-cache-tree	2017-10-10 13:19:01.910528074 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-scrap-cache-tree	2017-10-10 13:51:34.390456517 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-scrap-cache-tree.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-scrap-cache-tree.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-scrap-cache-tree" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-sha1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-sha1
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-sha1	2017-10-10 13:19:01.910528074 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-sha1	2017-10-10 13:51:34.390456517 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-sha1.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-sha1.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-sha1" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-sha1-array /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-sha1-array
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-sha1-array	2017-10-10 13:19:01.914528074 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-sha1-array	2017-10-10 13:51:34.394456516 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-sha1-array.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-sha1-array.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-sha1-array" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-sigchain /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-sigchain
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-sigchain	2017-10-10 13:19:01.914528074 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-sigchain	2017-10-10 13:51:34.394456516 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-sigchain.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-sigchain.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-sigchain" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-string-list /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-string-list
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-string-list	2017-10-10 13:19:01.918528073 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-string-list	2017-10-10 13:51:34.398456516 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-string-list.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-string-list.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-string-list" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-subprocess /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-subprocess
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-subprocess	2017-10-10 13:19:01.922528073 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-subprocess	2017-10-10 13:51:34.402456516 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-subprocess.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-subprocess.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-subprocess" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-svn-fe /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-svn-fe
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-svn-fe	2017-10-10 13:19:01.922528073 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-svn-fe	2017-10-10 13:51:34.402456516 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-svn-fe.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-svn-fe.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-svn-fe" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-urlmatch-normalization /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-urlmatch-normalization
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-urlmatch-normalization	2017-10-10 13:19:01.926528073 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-urlmatch-normalization	2017-10-10 13:51:34.406456516 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-urlmatch-normalization.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-urlmatch-normalization.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-urlmatch-normalization" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-wildmatch /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-wildmatch
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers/test-wildmatch	2017-10-10 13:19:01.926528073 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers/test-wildmatch	2017-10-10 13:51:34.406456516 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12 and test-wildmatch.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0 and test-wildmatch.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-wildmatch" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bisect.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bisect.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bisect.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bisect.c	2015-07-28 04:34:56.000000000 +0800
@@ -12,13 +12,13 @@
 #include "sha1-array.h"
 #include "argv-array.h"
 
 static struct sha1_array good_revs;
 static struct sha1_array skipped_revs;
 
-static unsigned char *current_bad_sha1;
+static struct object_id *current_bad_oid;
 
 static const char *argv_checkout[] = {"checkout", "-q", NULL, "--", NULL};
 static const char *argv_show_branch[] = {"show-branch", NULL, NULL};
 static const char *argv_update_ref[] = {"update-ref", "--no-deref", "BISECT_HEAD", NULL, NULL};
 
 /* Remember to update object flag allocation in object.h */
@@ -397,22 +397,22 @@
 		*reaches = weight(best);
 	}
 	free(weights);
 	return best;
 }
 
-static int register_ref(const char *refname, const unsigned char *sha1,
+static int register_ref(const char *refname, const struct object_id *oid,
 			int flags, void *cb_data)
 {
 	if (!strcmp(refname, "bad")) {
-		current_bad_sha1 = xmalloc(20);
-		hashcpy(current_bad_sha1, sha1);
+		current_bad_oid = xmalloc(sizeof(*current_bad_oid));
+		oidcpy(current_bad_oid, oid);
 	} else if (starts_with(refname, "good-")) {
-		sha1_array_append(&good_revs, sha1);
+		sha1_array_append(&good_revs, oid->hash);
 	} else if (starts_with(refname, "skip-")) {
-		sha1_array_append(&skipped_revs, sha1);
+		sha1_array_append(&skipped_revs, oid->hash);
 	}
 
 	return 0;
 }
 
 static int read_bisect_refs(void)
@@ -561,13 +561,13 @@
 
 	cur = list;
 	previous = NULL;
 
 	for (i = 0; cur; cur = cur->next, i++) {
 		if (i == index) {
-			if (hashcmp(cur->item->object.sha1, current_bad_sha1))
+			if (hashcmp(cur->item->object.sha1, current_bad_oid->hash))
 				return cur;
 			if (previous)
 				return previous;
 			return list;
 		}
 		previous = cur;
@@ -604,13 +604,13 @@
 	init_revisions(revs, prefix);
 	revs->abbrev = 0;
 	revs->commit_format = CMIT_FMT_UNSPECIFIED;
 
 	/* rev_argv.argv[0] will be ignored by setup_revisions */
 	argv_array_push(&rev_argv, "bisect_rev_setup");
-	argv_array_pushf(&rev_argv, bad_format, sha1_to_hex(current_bad_sha1));
+	argv_array_pushf(&rev_argv, bad_format, oid_to_hex(current_bad_oid));
 	for (i = 0; i < good_revs.nr; i++)
 		argv_array_pushf(&rev_argv, good_format,
 				 sha1_to_hex(good_revs.sha1[i]));
 	argv_array_push(&rev_argv, "--");
 	if (read_paths)
 		read_bisect_paths(&rev_argv);
@@ -625,27 +625,27 @@
 		die("revision walk setup failed");
 	if (revs->tree_objects)
 		mark_edges_uninteresting(revs, NULL);
 }
 
 static void exit_if_skipped_commits(struct commit_list *tried,
-				    const unsigned char *bad)
+				    const struct object_id *bad)
 {
 	if (!tried)
 		return;
 
 	printf("There are only 'skip'ped commits left to test.\n"
 	       "The first bad commit could be any of:\n");
 	print_commit_list(tried, "%s\n", "%s\n");
 	if (bad)
-		printf("%s\n", sha1_to_hex(bad));
+		printf("%s\n", oid_to_hex(bad));
 	printf("We cannot bisect more!\n");
 	exit(2);
 }
 
-static int is_expected_rev(const unsigned char *sha1)
+static int is_expected_rev(const struct object_id *oid)
 {
 	const char *filename = git_path("BISECT_EXPECTED_REV");
 	struct stat st;
 	struct strbuf str = STRBUF_INIT;
 	FILE *fp;
 	int res = 0;
@@ -655,13 +655,13 @@
 
 	fp = fopen(filename, "r");
 	if (!fp)
 		return 0;
 
 	if (strbuf_getline(&str, fp, '\n') != EOF)
-		res = !strcmp(str.buf, sha1_to_hex(sha1));
+		res = !strcmp(str.buf, oid_to_hex(oid));
 
 	strbuf_release(&str);
 	fclose(fp);
 
 	return res;
 }
@@ -716,24 +716,24 @@
 static struct commit **get_bad_and_good_commits(int *rev_nr)
 {
 	int len = 1 + good_revs.nr;
 	struct commit **rev = xmalloc(len * sizeof(*rev));
 	int i, n = 0;
 
-	rev[n++] = get_commit_reference(current_bad_sha1);
+	rev[n++] = get_commit_reference(current_bad_oid->hash);
 	for (i = 0; i < good_revs.nr; i++)
 		rev[n++] = get_commit_reference(good_revs.sha1[i]);
 	*rev_nr = n;
 
 	return rev;
 }
 
 static void handle_bad_merge_base(void)
 {
-	if (is_expected_rev(current_bad_sha1)) {
-		char *bad_hex = sha1_to_hex(current_bad_sha1);
+	if (is_expected_rev(current_bad_oid)) {
+		char *bad_hex = oid_to_hex(current_bad_oid);
 		char *good_hex = join_sha1_array_hex(&good_revs, ' ');
 
 		fprintf(stderr, "The merge base %s is bad.\n"
 			"This means the bug has been fixed "
 			"between %s and [%s].\n",
 			bad_hex, bad_hex, good_hex);
@@ -747,13 +747,13 @@
 	exit(1);
 }
 
 static void handle_skipped_merge_base(const unsigned char *mb)
 {
 	char *mb_hex = sha1_to_hex(mb);
-	char *bad_hex = sha1_to_hex(current_bad_sha1);
+	char *bad_hex = sha1_to_hex(current_bad_oid->hash);
 	char *good_hex = join_sha1_array_hex(&good_revs, ' ');
 
 	warning("the merge base between %s and [%s] "
 		"must be skipped.\n"
 		"So we cannot be sure the first bad commit is "
 		"between %s and %s.\n"
@@ -778,13 +778,13 @@
 	struct commit **rev = get_bad_and_good_commits(&rev_nr);
 
 	result = get_merge_bases_many(rev[0], rev_nr - 1, rev + 1);
 
 	for (; result; result = result->next) {
 		const unsigned char *mb = result->item->object.sha1;
-		if (!hashcmp(mb, current_bad_sha1)) {
+		if (!hashcmp(mb, current_bad_oid->hash)) {
 			handle_bad_merge_base();
 		} else if (0 <= sha1_array_lookup(&good_revs, mb)) {
 			continue;
 		} else if (0 <= sha1_array_lookup(&skipped_revs, mb)) {
 			handle_skipped_merge_base(mb);
 		} else {
@@ -835,13 +835,13 @@
 static void check_good_are_ancestors_of_bad(const char *prefix, int no_checkout)
 {
 	char *filename = git_pathdup("BISECT_ANCESTORS_OK");
 	struct stat st;
 	int fd;
 
-	if (!current_bad_sha1)
+	if (!current_bad_oid)
 		die("a bad revision is needed");
 
 	/* Check if file BISECT_ANCESTORS_OK exists. */
 	if (!stat(filename, &st) && S_ISREG(st.st_mode))
 		goto done;
 
@@ -900,13 +900,13 @@
 int bisect_next_all(const char *prefix, int no_checkout)
 {
 	struct rev_info revs;
 	struct commit_list *tried;
 	int reaches = 0, all = 0, nr, steps;
 	const unsigned char *bisect_rev;
-	char bisect_rev_hex[41];
+	char bisect_rev_hex[GIT_SHA1_HEXSZ + 1];
 
 	if (read_bisect_refs())
 		die("reading bisect refs failed");
 
 	check_good_are_ancestors_of_bad(prefix, no_checkout);
 
@@ -924,27 +924,27 @@
 		 * We should exit here only if the "bad"
 		 * commit is also a "skip" commit.
 		 */
 		exit_if_skipped_commits(tried, NULL);
 
 		printf("%s was both good and bad\n",
-		       sha1_to_hex(current_bad_sha1));
+		       oid_to_hex(current_bad_oid));
 		exit(1);
 	}
 
 	if (!all) {
 		fprintf(stderr, "No testable commit found.\n"
 			"Maybe you started with bad path parameters?\n");
 		exit(4);
 	}
 
 	bisect_rev = revs.commits->item->object.sha1;
-	memcpy(bisect_rev_hex, sha1_to_hex(bisect_rev), 41);
+	memcpy(bisect_rev_hex, sha1_to_hex(bisect_rev), GIT_SHA1_HEXSZ + 1);
 
-	if (!hashcmp(bisect_rev, current_bad_sha1)) {
-		exit_if_skipped_commits(tried, current_bad_sha1);
+	if (!hashcmp(bisect_rev, current_bad_oid->hash)) {
+		exit_if_skipped_commits(tried, current_bad_oid);
 		printf("%s is the first bad commit\n", bisect_rev_hex);
 		show_diff_tree(prefix, revs.commits->item);
 		/* This means the bisection process succeeded. */
 		exit(10);
 	}
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bisect.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bisect.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bisect.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bisect.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/blob.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/blob.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/blob.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/blob.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/block-sha1/sha1.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/block-sha1/sha1.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/block-sha1/sha1.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/block-sha1/sha1.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/branch.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/branch.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/branch.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/branch.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/build_ir.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/build_ir.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/build_ir.sh	2017-10-10 13:19:01.950528072 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/build_ir.sh	2017-10-10 13:51:34.426456515 +0800
@@ -11,1562 +11,1572 @@
 	then
 		succ=`expr $succ + 1`;
 	fi
 	total=`expr $total + 1`;
 }
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/credential-store.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/credential-store.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/credential-store.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/credential-store.c.bc
 check
-echo "1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/credential-store.c to bc" >&2
+echo "1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/credential-store.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/abspath.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/abspath.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/abspath.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/abspath.c.bc
 check
-echo "2 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/abspath.c to bc" >&2
+echo "2 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/abspath.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/advice.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/advice.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/advice.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/advice.c.bc
 check
-echo "3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/advice.c to bc" >&2
+echo "3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/advice.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/alias.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/alias.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/alias.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/alias.c.bc
 check
-echo "4 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/alias.c to bc" >&2
+echo "4 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/alias.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/alloc.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/alloc.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/alloc.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/alloc.c.bc
 check
-echo "5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/alloc.c to bc" >&2
+echo "5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/alloc.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/archive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/archive.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/archive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/archive.c.bc
 check
-echo "6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/archive.c to bc" >&2
+echo "6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/archive.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/archive-tar.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/archive-tar.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/archive-tar.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/archive-tar.c.bc
 check
-echo "7 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/archive-tar.c to bc" >&2
+echo "7 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/archive-tar.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/archive-zip.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/archive-zip.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/archive-zip.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/archive-zip.c.bc
 check
-echo "8 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/archive-zip.c to bc" >&2
+echo "8 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/archive-zip.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/argv-array.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/argv-array.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/argv-array.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/argv-array.c.bc
 check
-echo "9 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/argv-array.c to bc" >&2
+echo "9 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/argv-array.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DETC_GITATTRIBUTES=\"/usr/local/etc/gitattributes\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/attr.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/attr.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DETC_GITATTRIBUTES=\"/usr/local/etc/gitattributes\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/attr.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/attr.c.bc
 check
-echo "10 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/attr.c to bc" >&2
+echo "10 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/attr.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/base85.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/base85.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/base85.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/base85.c.bc
 check
-echo "11 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/base85.c to bc" >&2
+echo "11 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/base85.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bisect.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bisect.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bisect.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bisect.c.bc
 check
-echo "12 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bisect.c to bc" >&2
+echo "12 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bisect.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/blob.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/blob.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/blob.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/blob.c.bc
 check
-echo "13 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/blob.c to bc" >&2
+echo "13 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/blob.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/branch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/branch.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/branch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/branch.c.bc
 check
-echo "14 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/branch.c to bc" >&2
+echo "14 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/branch.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bulk-checkin.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bulk-checkin.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bulk-checkin.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bulk-checkin.c.bc
 check
-echo "15 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bulk-checkin.c to bc" >&2
+echo "15 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bulk-checkin.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bundle.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bundle.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bundle.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bundle.c.bc
 check
-echo "16 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bundle.c to bc" >&2
+echo "16 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bundle.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/cache-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/cache-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/cache-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/cache-tree.c.bc
 check
-echo "17 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/cache-tree.c to bc" >&2
+echo "17 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/cache-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/color.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/color.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/color.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/color.c.bc
 check
-echo "18 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/color.c to bc" >&2
+echo "18 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/color.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/column.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/column.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/column.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/column.c.bc
 check
-echo "19 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/column.c to bc" >&2
+echo "19 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/column.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/combine-diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/combine-diff.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/combine-diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/combine-diff.c.bc
 check
-echo "20 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/combine-diff.c to bc" >&2
+echo "20 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/combine-diff.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/commit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/commit.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/commit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/commit.c.bc
 check
-echo "21 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/commit.c to bc" >&2
+echo "21 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/commit.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/compat/obstack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/compat/obstack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/compat/obstack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/compat/obstack.c.bc
 check
-echo "22 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/compat/obstack.c to bc" >&2
+echo "22 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/compat/obstack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/compat/terminal.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/compat/terminal.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/compat/terminal.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/compat/terminal.c.bc
 check
-echo "23 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/compat/terminal.c to bc" >&2
+echo "23 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/compat/terminal.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DETC_GITCONFIG=\"/usr/local/etc/gitconfig\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/config.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DETC_GITCONFIG=\"/usr/local/etc/gitconfig\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/config.c.bc
 check
-echo "24 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/config.c to bc" >&2
+echo "24 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/config.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/connect.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/connect.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/connect.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/connect.c.bc
 check
-echo "25 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/connect.c to bc" >&2
+echo "25 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/connect.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/connected.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/connected.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/connected.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/connected.c.bc
 check
-echo "26 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/connected.c to bc" >&2
+echo "26 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/connected.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/convert.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/convert.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/convert.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/convert.c.bc
 check
-echo "27 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/convert.c to bc" >&2
+echo "27 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/convert.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/copy.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/copy.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/copy.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/copy.c.bc
 check
-echo "28 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/copy.c to bc" >&2
+echo "28 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/copy.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/credential.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/credential.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/credential.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/credential.c.bc
 check
-echo "29 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/credential.c to bc" >&2
+echo "29 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/credential.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/csum-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/csum-file.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/csum-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/csum-file.c.bc
 check
-echo "30 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/csum-file.c to bc" >&2
+echo "30 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/csum-file.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ctype.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ctype.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ctype.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ctype.c.bc
 check
-echo "31 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ctype.c to bc" >&2
+echo "31 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ctype.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/date.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/date.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/date.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/date.c.bc
 check
-echo "32 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/date.c to bc" >&2
+echo "32 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/date.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/decorate.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/decorate.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/decorate.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/decorate.c.bc
 check
-echo "33 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/decorate.c to bc" >&2
+echo "33 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/decorate.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-break.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-break.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-break.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-break.c.bc
 check
-echo "34 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-break.c to bc" >&2
+echo "34 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-break.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-delta.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-delta.c.bc
 check
-echo "35 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-delta.c to bc" >&2
+echo "35 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-delta.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-order.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-order.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-order.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-order.c.bc
 check
-echo "36 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-order.c to bc" >&2
+echo "36 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-order.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-pickaxe.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-pickaxe.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-pickaxe.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-pickaxe.c.bc
 check
-echo "37 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-pickaxe.c to bc" >&2
+echo "37 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-pickaxe.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-rename.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-rename.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-rename.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-rename.c.bc
 check
-echo "38 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-rename.c to bc" >&2
+echo "38 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-rename.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff-delta.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff-delta.c.bc
 check
-echo "39 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff-delta.c to bc" >&2
+echo "39 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff-delta.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff-lib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff-lib.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff-lib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff-lib.c.bc
 check
-echo "40 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff-lib.c to bc" >&2
+echo "40 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff-lib.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff-no-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff-no-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff-no-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff-no-index.c.bc
 check
-echo "41 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff-no-index.c to bc" >&2
+echo "41 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff-no-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff.c.bc
 check
-echo "42 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff.c to bc" >&2
+echo "42 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/dir.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/dir.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/dir.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/dir.c.bc
 check
-echo "43 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/dir.c to bc" >&2
+echo "43 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/dir.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/editor.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/editor.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/editor.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/editor.c.bc
 check
-echo "44 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/editor.c to bc" >&2
+echo "44 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/editor.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/entry.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/entry.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/entry.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/entry.c.bc
 check
-echo "45 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/entry.c to bc" >&2
+echo "45 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/entry.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/environment.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/environment.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/environment.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/environment.c.bc
 check
-echo "46 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/environment.c to bc" >&2
+echo "46 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/environment.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/bitmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/bitmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/bitmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/bitmap.c.bc
 check
-echo "47 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/bitmap.c to bc" >&2
+echo "47 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/bitmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/ewah_bitmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/ewah_bitmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/ewah_bitmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/ewah_bitmap.c.bc
 check
-echo "48 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/ewah_bitmap.c to bc" >&2
+echo "48 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/ewah_bitmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/ewah_io.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/ewah_io.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/ewah_io.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/ewah_io.c.bc
 check
-echo "49 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/ewah_io.c to bc" >&2
+echo "49 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/ewah_io.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/ewah_rlw.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/ewah_rlw.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/ewah_rlw.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/ewah_rlw.c.bc
 check
-echo "50 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/ewah_rlw.c to bc" >&2
+echo "50 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/ewah_rlw.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_EXEC_PATH=\"/usr/local/libexec/git-core\" -DBINDIR=\"bin\" -DPREFIX=\"/usr/local\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/exec_cmd.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/exec_cmd.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_EXEC_PATH=\"/usr/local/libexec/git-core\" -DBINDIR=\"bin\" -DPREFIX=\"/usr/local\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/exec_cmd.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/exec_cmd.c.bc
 check
-echo "51 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/exec_cmd.c to bc" >&2
+echo "51 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/exec_cmd.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/fetch-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/fetch-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/fetch-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/fetch-pack.c.bc
 check
-echo "52 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/fetch-pack.c to bc" >&2
+echo "52 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/fetch-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/fsck.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/fsck.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/fsck.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/fsck.c.bc
 check
-echo "53 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/fsck.c to bc" >&2
+echo "53 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/fsck.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_LOCALE_PATH=\"/usr/local/share/locale\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/gettext.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/gettext.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_LOCALE_PATH=\"/usr/local/share/locale\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/gettext.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/gettext.c.bc
 check
-echo "54 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/gettext.c to bc" >&2
+echo "54 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/gettext.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/gpg-interface.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/gpg-interface.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/gpg-interface.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/gpg-interface.c.bc
 check
-echo "55 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/gpg-interface.c to bc" >&2
+echo "55 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/gpg-interface.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/graph.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/graph.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/graph.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/graph.c.bc
 check
-echo "56 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/graph.c to bc" >&2
+echo "56 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/graph.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/grep.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/grep.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/grep.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/grep.c.bc
 check
-echo "57 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/grep.c to bc" >&2
+echo "57 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/grep.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/hashmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/hashmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/hashmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/hashmap.c.bc
 check
-echo "58 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/hashmap.c to bc" >&2
+echo "58 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/hashmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/help.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/help.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/help.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/help.c.bc
 check
-echo "59 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/help.c to bc" >&2
+echo "59 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/help.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/hex.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/hex.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/hex.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/hex.c.bc
 check
-echo "60 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/hex.c to bc" >&2
+echo "60 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/hex.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ident.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ident.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ident.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ident.c.bc
 check
-echo "61 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ident.c to bc" >&2
+echo "61 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ident.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/kwset.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/kwset.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/kwset.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/kwset.c.bc
 check
-echo "62 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/kwset.c to bc" >&2
+echo "62 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/kwset.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/levenshtein.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/levenshtein.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/levenshtein.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/levenshtein.c.bc
 check
-echo "63 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/levenshtein.c to bc" >&2
+echo "63 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/levenshtein.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/line-log.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/line-log.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/line-log.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/line-log.c.bc
 check
-echo "64 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/line-log.c to bc" >&2
+echo "64 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/line-log.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/line-range.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/line-range.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/line-range.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/line-range.c.bc
 check
-echo "65 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/line-range.c to bc" >&2
+echo "65 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/line-range.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/list-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/list-objects.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/list-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/list-objects.c.bc
 check
-echo "66 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/list-objects.c to bc" >&2
+echo "66 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/list-objects.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ll-merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ll-merge.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ll-merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ll-merge.c.bc
 check
-echo "67 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ll-merge.c to bc" >&2
+echo "67 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ll-merge.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/lockfile.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/lockfile.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/lockfile.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/lockfile.c.bc
 check
-echo "68 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/lockfile.c to bc" >&2
+echo "68 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/lockfile.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/log-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/log-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/log-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/log-tree.c.bc
 check
-echo "69 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/log-tree.c to bc" >&2
+echo "69 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/log-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/mailmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/mailmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/mailmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/mailmap.c.bc
 check
-echo "70 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/mailmap.c to bc" >&2
+echo "70 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/mailmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/match-trees.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/match-trees.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/match-trees.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/match-trees.c.bc
 check
-echo "71 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/match-trees.c to bc" >&2
+echo "71 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/match-trees.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/merge.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/merge.c.bc
 check
-echo "72 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/merge.c to bc" >&2
+echo "72 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/merge.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/merge-blobs.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/merge-blobs.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/merge-blobs.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/merge-blobs.c.bc
 check
-echo "73 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/merge-blobs.c to bc" >&2
+echo "73 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/merge-blobs.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/merge-recursive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/merge-recursive.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/merge-recursive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/merge-recursive.c.bc
 check
-echo "74 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/merge-recursive.c to bc" >&2
+echo "74 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/merge-recursive.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/mergesort.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/mergesort.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/mergesort.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/mergesort.c.bc
 check
-echo "75 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/mergesort.c to bc" >&2
+echo "75 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/mergesort.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/name-hash.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/name-hash.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/name-hash.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/name-hash.c.bc
 check
-echo "76 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/name-hash.c to bc" >&2
+echo "76 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/name-hash.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes.c.bc
 check
-echo "77 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes.c to bc" >&2
+echo "77 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes-cache.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes-cache.c.bc
 check
-echo "78 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes-cache.c to bc" >&2
+echo "78 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes-cache.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes-merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes-merge.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes-merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes-merge.c.bc
 check
-echo "79 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes-merge.c to bc" >&2
+echo "79 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes-merge.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes-utils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes-utils.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes-utils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes-utils.c.bc
 check
-echo "80 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes-utils.c to bc" >&2
+echo "80 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes-utils.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/object.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/object.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/object.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/object.c.bc
 check
-echo "81 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/object.c to bc" >&2
+echo "81 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/object.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-bitmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-bitmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-bitmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-bitmap.c.bc
 check
-echo "82 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-bitmap.c to bc" >&2
+echo "82 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-bitmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-bitmap-write.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-bitmap-write.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-bitmap-write.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-bitmap-write.c.bc
 check
-echo "83 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-bitmap-write.c to bc" >&2
+echo "83 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-bitmap-write.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-check.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-check.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-check.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-check.c.bc
 check
-echo "84 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-check.c to bc" >&2
+echo "84 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-check.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-objects.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-objects.c.bc
 check
-echo "85 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-objects.c to bc" >&2
+echo "85 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-objects.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-revindex.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-revindex.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-revindex.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-revindex.c.bc
 check
-echo "86 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-revindex.c to bc" >&2
+echo "86 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-revindex.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-write.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-write.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-write.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-write.c.bc
 check
-echo "87 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-write.c to bc" >&2
+echo "87 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-write.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pager.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pager.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pager.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pager.c.bc
 check
-echo "88 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pager.c to bc" >&2
+echo "88 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pager.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/parse-options.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/parse-options.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/parse-options.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/parse-options.c.bc
 check
-echo "89 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/parse-options.c to bc" >&2
+echo "89 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/parse-options.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/parse-options-cb.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/parse-options-cb.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/parse-options-cb.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/parse-options-cb.c.bc
 check
-echo "90 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/parse-options-cb.c to bc" >&2
+echo "90 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/parse-options-cb.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/patch-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/patch-delta.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/patch-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/patch-delta.c.bc
 check
-echo "91 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/patch-delta.c to bc" >&2
+echo "91 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/patch-delta.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/patch-ids.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/patch-ids.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/patch-ids.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/patch-ids.c.bc
 check
-echo "92 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/patch-ids.c to bc" >&2
+echo "92 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/patch-ids.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/path.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/path.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/path.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/path.c.bc
 check
-echo "93 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/path.c to bc" >&2
+echo "93 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/path.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pathspec.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pathspec.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pathspec.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pathspec.c.bc
 check
-echo "94 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pathspec.c to bc" >&2
+echo "94 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pathspec.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pkt-line.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pkt-line.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pkt-line.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pkt-line.c.bc
 check
-echo "95 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pkt-line.c to bc" >&2
+echo "95 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pkt-line.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/preload-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/preload-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/preload-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/preload-index.c.bc
 check
-echo "96 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/preload-index.c to bc" >&2
+echo "96 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/preload-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pretty.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pretty.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pretty.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pretty.c.bc
 check
-echo "97 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pretty.c to bc" >&2
+echo "97 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pretty.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/prio-queue.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/prio-queue.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/prio-queue.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/prio-queue.c.bc
 check
-echo "98 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/prio-queue.c to bc" >&2
+echo "98 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/prio-queue.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/progress.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/progress.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/progress.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/progress.c.bc
 check
-echo "99 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/progress.c to bc" >&2
+echo "99 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/progress.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/prompt.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/prompt.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/prompt.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/prompt.c.bc
 check
-echo "100 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/prompt.c to bc" >&2
+echo "100 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/prompt.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/quote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/quote.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/quote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/quote.c.bc
 check
-echo "101 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/quote.c to bc" >&2
+echo "101 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/quote.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/reachable.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/reachable.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/reachable.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/reachable.c.bc
 check
-echo "102 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/reachable.c to bc" >&2
+echo "102 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/reachable.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/read-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/read-cache.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/read-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/read-cache.c.bc
 check
-echo "103 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/read-cache.c to bc" >&2
+echo "103 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/read-cache.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/reflog-walk.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/reflog-walk.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/reflog-walk.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/reflog-walk.c.bc
 check
-echo "104 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/reflog-walk.c to bc" >&2
+echo "104 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/reflog-walk.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/refs.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/refs.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/refs.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/refs.c.bc
 check
-echo "105 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/refs.c to bc" >&2
+echo "105 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/refs.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/remote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/remote.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/remote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/remote.c.bc
 check
-echo "106 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/remote.c to bc" >&2
+echo "106 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/remote.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/replace_object.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/replace_object.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/replace_object.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/replace_object.c.bc
 check
-echo "107 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/replace_object.c to bc" >&2
+echo "107 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/replace_object.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/rerere.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/rerere.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/rerere.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/rerere.c.bc
 check
-echo "108 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/rerere.c to bc" >&2
+echo "108 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/rerere.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/resolve-undo.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/resolve-undo.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/resolve-undo.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/resolve-undo.c.bc
 check
-echo "109 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/resolve-undo.c to bc" >&2
+echo "109 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/resolve-undo.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/revision.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/revision.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/revision.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/revision.c.bc
 check
-echo "110 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/revision.c to bc" >&2
+echo "110 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/revision.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/run-command.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/run-command.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/run-command.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/run-command.c.bc
 check
-echo "111 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/run-command.c to bc" >&2
+echo "111 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/run-command.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/send-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/send-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/send-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/send-pack.c.bc
 check
-echo "112 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/send-pack.c to bc" >&2
+echo "112 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/send-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sequencer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sequencer.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sequencer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sequencer.c.bc
 check
-echo "113 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sequencer.c to bc" >&2
+echo "113 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sequencer.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/server-info.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/server-info.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/server-info.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/server-info.c.bc
 check
-echo "114 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/server-info.c to bc" >&2
+echo "114 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/server-info.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/setup.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/setup.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/setup.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/setup.c.bc
 check
-echo "115 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/setup.c to bc" >&2
+echo "115 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/setup.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1-array.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1-array.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1-array.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1-array.c.bc
 check
-echo "116 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1-array.c to bc" >&2
+echo "116 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1-array.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1-lookup.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1-lookup.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1-lookup.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1-lookup.c.bc
 check
-echo "117 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1-lookup.c to bc" >&2
+echo "117 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1-lookup.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1_file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1_file.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1_file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1_file.c.bc
 check
-echo "118 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1_file.c to bc" >&2
+echo "118 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1_file.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1_name.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1_name.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1_name.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1_name.c.bc
 check
-echo "119 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1_name.c to bc" >&2
+echo "119 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1_name.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/shallow.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/shallow.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/shallow.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/shallow.c.bc
 check
-echo "120 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/shallow.c to bc" >&2
+echo "120 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/shallow.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sideband.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sideband.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sideband.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sideband.c.bc
 check
-echo "121 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sideband.c to bc" >&2
+echo "121 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sideband.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sigchain.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sigchain.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sigchain.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sigchain.c.bc
 check
-echo "122 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sigchain.c to bc" >&2
+echo "122 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sigchain.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/split-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/split-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/split-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/split-index.c.bc
 check
-echo "123 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/split-index.c to bc" >&2
+echo "123 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/split-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/strbuf.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/strbuf.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/strbuf.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/strbuf.c.bc
 check
-echo "124 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/strbuf.c to bc" >&2
+echo "124 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/strbuf.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/streaming.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/streaming.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/streaming.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/streaming.c.bc
 check
-echo "125 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/streaming.c to bc" >&2
+echo "125 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/streaming.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/string-list.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/string-list.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/string-list.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/string-list.c.bc
 check
-echo "126 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/string-list.c to bc" >&2
+echo "126 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/string-list.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/submodule.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/submodule.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/submodule.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/submodule.c.bc
 check
-echo "127 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/submodule.c to bc" >&2
+echo "127 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/submodule.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/symlinks.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/symlinks.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/symlinks.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/symlinks.c.bc
 check
-echo "128 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/symlinks.c to bc" >&2
+echo "128 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/symlinks.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tag.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tag.c.bc
 check
-echo "129 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tag.c to bc" >&2
+echo "129 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tag.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/trace.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/trace.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/trace.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/trace.c.bc
 check
-echo "130 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/trace.c to bc" >&2
+echo "130 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/trace.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/trailer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/trailer.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/trailer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/trailer.c.bc
 check
-echo "131 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/trailer.c to bc" >&2
+echo "131 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/trailer.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/transport.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/transport.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/transport.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/transport.c.bc
 check
-echo "132 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/transport.c to bc" >&2
+echo "132 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/transport.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/transport-helper.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/transport-helper.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/transport-helper.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/transport-helper.c.bc
 check
-echo "133 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/transport-helper.c to bc" >&2
+echo "133 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/transport-helper.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tree-diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tree-diff.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tree-diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tree-diff.c.bc
 check
-echo "134 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tree-diff.c to bc" >&2
+echo "134 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tree-diff.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tree.c.bc
 check
-echo "135 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tree.c to bc" >&2
+echo "135 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tree-walk.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tree-walk.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tree-walk.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tree-walk.c.bc
 check
-echo "136 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tree-walk.c to bc" >&2
+echo "136 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tree-walk.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/unpack-trees.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/unpack-trees.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/unpack-trees.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/unpack-trees.c.bc
 check
-echo "137 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/unpack-trees.c to bc" >&2
+echo "137 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/unpack-trees.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/url.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/url.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/url.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/url.c.bc
 check
-echo "138 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/url.c to bc" >&2
+echo "138 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/url.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/urlmatch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/urlmatch.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/urlmatch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/urlmatch.c.bc
 check
-echo "139 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/urlmatch.c to bc" >&2
+echo "139 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/urlmatch.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/usage.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/usage.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/usage.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/usage.c.bc
 check
-echo "140 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/usage.c to bc" >&2
+echo "140 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/usage.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/userdiff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/userdiff.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/userdiff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/userdiff.c.bc
 check
-echo "141 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/userdiff.c to bc" >&2
+echo "141 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/userdiff.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/utf8.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/utf8.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/utf8.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/utf8.c.bc
 check
-echo "142 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/utf8.c to bc" >&2
+echo "142 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/utf8.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/varint.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/varint.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/varint.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/varint.c.bc
 check
-echo "143 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/varint.c to bc" >&2
+echo "143 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/varint.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_VERSION=\"2.4.12\" -DGIT_USER_AGENT=\"git/2.4.12\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/version.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/version.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_VERSION=\"2.5.0\" -DGIT_USER_AGENT=\"git/2.5.0\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/version.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/version.c.bc
 check
-echo "144 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/version.c to bc" >&2
+echo "144 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/version.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/versioncmp.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/versioncmp.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/versioncmp.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/versioncmp.c.bc
 check
-echo "145 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/versioncmp.c to bc" >&2
+echo "145 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/versioncmp.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/walker.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/walker.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/walker.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/walker.c.bc
 check
-echo "146 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/walker.c to bc" >&2
+echo "146 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/walker.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/wildmatch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/wildmatch.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/wildmatch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/wildmatch.c.bc
 check
-echo "147 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/wildmatch.c to bc" >&2
+echo "147 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/wildmatch.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/wrapper.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/wrapper.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/wrapper.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/wrapper.c.bc
 check
-echo "148 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/wrapper.c to bc" >&2
+echo "148 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/wrapper.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/write_or_die.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/write_or_die.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/write_or_die.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/write_or_die.c.bc
 check
-echo "149 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/write_or_die.c to bc" >&2
+echo "149 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/write_or_die.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ws.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ws.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ws.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ws.c.bc
 check
-echo "150 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ws.c to bc" >&2
+echo "150 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ws.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/wt-status.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/wt-status.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/wt-status.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/wt-status.c.bc
 check
-echo "151 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/wt-status.c to bc" >&2
+echo "151 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/wt-status.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff-interface.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff-interface.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff-interface.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff-interface.c.bc
 check
-echo "152 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff-interface.c to bc" >&2
+echo "152 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff-interface.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/zlib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/zlib.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/zlib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/zlib.c.bc
 check
-echo "153 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/zlib.c to bc" >&2
+echo "153 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/zlib.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/unix-socket.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/unix-socket.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/unix-socket.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/unix-socket.c.bc
 check
-echo "154 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/unix-socket.c to bc" >&2
+echo "154 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/unix-socket.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/block-sha1/sha1.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/block-sha1/sha1.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/block-sha1/sha1.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/block-sha1/sha1.c.bc
 check
-echo "155 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/block-sha1/sha1.c to bc" >&2
+echo "155 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/block-sha1/sha1.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/thread-utils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/thread-utils.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/thread-utils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/thread-utils.c.bc
 check
-echo "156 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/thread-utils.c to bc" >&2
+echo "156 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/thread-utils.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/compat/strlcpy.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/compat/strlcpy.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/compat/strlcpy.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/compat/strlcpy.c.bc
 check
-echo "157 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/compat/strlcpy.c to bc" >&2
+echo "157 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/compat/strlcpy.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xdiffi.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xdiffi.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xdiffi.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xdiffi.c.bc
 check
-echo "158 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xdiffi.c to bc" >&2
+echo "158 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xdiffi.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xprepare.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xprepare.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xprepare.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xprepare.c.bc
 check
-echo "159 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xprepare.c to bc" >&2
+echo "159 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xprepare.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xutils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xutils.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xutils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xutils.c.bc
 check
-echo "160 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xutils.c to bc" >&2
+echo "160 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xutils.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xemit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xemit.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xemit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xemit.c.bc
 check
-echo "161 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xemit.c to bc" >&2
+echo "161 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xemit.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xmerge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xmerge.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xmerge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xmerge.c.bc
 check
-echo "162 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xmerge.c to bc" >&2
+echo "162 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xmerge.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xpatience.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xpatience.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xpatience.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xpatience.c.bc
 check
-echo "163 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xpatience.c to bc" >&2
+echo "163 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xpatience.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xhistogram.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xhistogram.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xhistogram.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xhistogram.c.bc
 check
-echo "164 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xhistogram.c to bc" >&2
+echo "164 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xhistogram.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/daemon.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/daemon.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/daemon.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/daemon.c.bc
 check
-echo "165 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/daemon.c to bc" >&2
+echo "165 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/daemon.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/fast-import.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/fast-import.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/fast-import.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/fast-import.c.bc
 check
-echo "166 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/fast-import.c to bc" >&2
+echo "166 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/fast-import.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/http-backend.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/http-backend.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/http-backend.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/http-backend.c.bc
 check
-echo "167 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/http-backend.c to bc" >&2
+echo "167 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/http-backend.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/imap-send.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/imap-send.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/imap-send.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/imap-send.c.bc
 check
-echo "168 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/imap-send.c to bc" >&2
+echo "168 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/imap-send.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sh-i18n--envsubst.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sh-i18n--envsubst.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sh-i18n--envsubst.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sh-i18n--envsubst.c.bc
 check
-echo "169 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sh-i18n--envsubst.c to bc" >&2
+echo "169 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sh-i18n--envsubst.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/shell.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/shell.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/shell.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/shell.c.bc
 check
-echo "170 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/shell.c to bc" >&2
+echo "170 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/shell.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/show-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/show-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/show-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/show-index.c.bc
 check
-echo "171 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/show-index.c to bc" >&2
+echo "171 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/show-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/upload-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/upload-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/upload-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/upload-pack.c.bc
 check
-echo "172 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/upload-pack.c to bc" >&2
+echo "172 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/upload-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/remote-testsvn.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/remote-testsvn.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/remote-testsvn.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/remote-testsvn.c.bc
 check
-echo "173 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/remote-testsvn.c to bc" >&2
+echo "173 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/remote-testsvn.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/line_buffer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/line_buffer.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/line_buffer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/line_buffer.c.bc
 check
-echo "174 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/line_buffer.c to bc" >&2
+echo "174 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/line_buffer.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/sliding_window.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/sliding_window.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/sliding_window.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/sliding_window.c.bc
 check
-echo "175 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/sliding_window.c to bc" >&2
+echo "175 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/sliding_window.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/repo_tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/repo_tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/repo_tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/repo_tree.c.bc
 check
-echo "176 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/repo_tree.c to bc" >&2
+echo "176 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/repo_tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/fast_export.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/fast_export.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/fast_export.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/fast_export.c.bc
 check
-echo "177 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/fast_export.c to bc" >&2
+echo "177 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/fast_export.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/svndiff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/svndiff.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/svndiff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/svndiff.c.bc
 check
-echo "178 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/svndiff.c to bc" >&2
+echo "178 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/svndiff.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/svndump.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/svndump.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/svndump.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/svndump.c.bc
 check
-echo "179 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/svndump.c to bc" >&2
+echo "179 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/svndump.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/credential-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/credential-cache.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/credential-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/credential-cache.c.bc
 check
-echo "180 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/credential-cache.c to bc" >&2
+echo "180 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/credential-cache.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/credential-cache--daemon.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/credential-cache--daemon.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/credential-cache--daemon.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/credential-cache--daemon.c.bc
 check
-echo "181 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/credential-cache--daemon.c to bc" >&2
+echo "181 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/credential-cache--daemon.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_HTML_PATH=\"share/doc/git\" -DGIT_MAN_PATH=\"share/man\" -DGIT_INFO_PATH=\"share/info\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_HTML_PATH=\"share/doc/git\" -DGIT_MAN_PATH=\"share/man\" -DGIT_INFO_PATH=\"share/info\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git.c.bc
 check
-echo "182 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git.c to bc" >&2
+echo "182 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/add.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/add.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/add.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/add.c.bc
 check
-echo "183 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/add.c to bc" >&2
+echo "183 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/add.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/annotate.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/annotate.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/annotate.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/annotate.c.bc
 check
-echo "184 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/annotate.c to bc" >&2
+echo "184 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/annotate.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/apply.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/apply.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/apply.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/apply.c.bc
 check
-echo "185 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/apply.c to bc" >&2
+echo "185 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/apply.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/archive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/archive.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/archive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/archive.c.bc
 check
-echo "186 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/archive.c to bc" >&2
+echo "186 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/archive.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/bisect--helper.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/bisect--helper.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/bisect--helper.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/bisect--helper.c.bc
 check
-echo "187 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/bisect--helper.c to bc" >&2
+echo "187 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/bisect--helper.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/blame.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/blame.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/blame.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/blame.c.bc
 check
-echo "188 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/blame.c to bc" >&2
+echo "188 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/blame.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/branch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/branch.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/branch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/branch.c.bc
 check
-echo "189 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/branch.c to bc" >&2
+echo "189 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/branch.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/bundle.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/bundle.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/bundle.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/bundle.c.bc
 check
-echo "190 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/bundle.c to bc" >&2
+echo "190 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/bundle.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/cat-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/cat-file.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/cat-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/cat-file.c.bc
 check
-echo "191 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/cat-file.c to bc" >&2
+echo "191 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/cat-file.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/check-attr.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/check-attr.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/check-attr.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/check-attr.c.bc
 check
-echo "192 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/check-attr.c to bc" >&2
+echo "192 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/check-attr.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/check-ignore.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/check-ignore.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/check-ignore.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/check-ignore.c.bc
 check
-echo "193 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/check-ignore.c to bc" >&2
+echo "193 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/check-ignore.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/check-mailmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/check-mailmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/check-mailmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/check-mailmap.c.bc
 check
-echo "194 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/check-mailmap.c to bc" >&2
+echo "194 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/check-mailmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/check-ref-format.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/check-ref-format.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/check-ref-format.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/check-ref-format.c.bc
 check
-echo "195 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/check-ref-format.c to bc" >&2
+echo "195 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/check-ref-format.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/checkout-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/checkout-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/checkout-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/checkout-index.c.bc
 check
-echo "196 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/checkout-index.c to bc" >&2
+echo "196 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/checkout-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/checkout.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/checkout.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/checkout.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/checkout.c.bc
 check
-echo "197 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/checkout.c to bc" >&2
+echo "197 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/checkout.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/clean.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/clean.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/clean.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/clean.c.bc
 check
-echo "198 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/clean.c to bc" >&2
+echo "198 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/clean.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/clone.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/clone.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/clone.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/clone.c.bc
 check
-echo "199 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/clone.c to bc" >&2
+echo "199 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/clone.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/column.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/column.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/column.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/column.c.bc
 check
-echo "200 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/column.c to bc" >&2
+echo "200 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/column.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/commit-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/commit-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/commit-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/commit-tree.c.bc
 check
-echo "201 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/commit-tree.c to bc" >&2
+echo "201 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/commit-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/commit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/commit.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/commit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/commit.c.bc
 check
-echo "202 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/commit.c to bc" >&2
+echo "202 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/commit.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/config.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/config.c.bc
 check
-echo "203 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/config.c to bc" >&2
+echo "203 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/config.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/count-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/count-objects.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/count-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/count-objects.c.bc
 check
-echo "204 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/count-objects.c to bc" >&2
+echo "204 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/count-objects.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/credential.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/credential.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/credential.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/credential.c.bc
 check
-echo "205 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/credential.c to bc" >&2
+echo "205 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/credential.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/describe.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/describe.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/describe.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/describe.c.bc
 check
-echo "206 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/describe.c to bc" >&2
+echo "206 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/describe.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/diff-files.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/diff-files.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/diff-files.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/diff-files.c.bc
 check
-echo "207 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/diff-files.c to bc" >&2
+echo "207 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/diff-files.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/diff-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/diff-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/diff-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/diff-index.c.bc
 check
-echo "208 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/diff-index.c to bc" >&2
+echo "208 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/diff-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/diff-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/diff-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/diff-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/diff-tree.c.bc
 check
-echo "209 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/diff-tree.c to bc" >&2
+echo "209 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/diff-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/diff.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/diff.c.bc
 check
-echo "210 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/diff.c to bc" >&2
+echo "210 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/diff.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fast-export.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fast-export.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fast-export.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fast-export.c.bc
 check
-echo "211 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fast-export.c to bc" >&2
+echo "211 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fast-export.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fetch-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fetch-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fetch-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fetch-pack.c.bc
 check
-echo "212 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fetch-pack.c to bc" >&2
+echo "212 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fetch-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fetch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fetch.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fetch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fetch.c.bc
 check
-echo "213 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fetch.c to bc" >&2
+echo "213 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fetch.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fmt-merge-msg.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fmt-merge-msg.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fmt-merge-msg.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fmt-merge-msg.c.bc
 check
-echo "214 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fmt-merge-msg.c to bc" >&2
+echo "214 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fmt-merge-msg.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/for-each-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/for-each-ref.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/for-each-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/for-each-ref.c.bc
 check
-echo "215 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/for-each-ref.c to bc" >&2
+echo "215 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/for-each-ref.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fsck.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fsck.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fsck.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fsck.c.bc
 check
-echo "216 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fsck.c to bc" >&2
+echo "216 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fsck.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/gc.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/gc.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/gc.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/gc.c.bc
 check
-echo "217 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/gc.c to bc" >&2
+echo "217 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/gc.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/get-tar-commit-id.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/get-tar-commit-id.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/get-tar-commit-id.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/get-tar-commit-id.c.bc
 check
-echo "218 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/get-tar-commit-id.c to bc" >&2
+echo "218 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/get-tar-commit-id.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/grep.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/grep.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/grep.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/grep.c.bc
 check
-echo "219 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/grep.c to bc" >&2
+echo "219 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/grep.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/hash-object.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/hash-object.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/hash-object.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/hash-object.c.bc
 check
-echo "220 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/hash-object.c to bc" >&2
+echo "220 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/hash-object.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_HTML_PATH=\"share/doc/git\" -DGIT_MAN_PATH=\"share/man\" -DGIT_INFO_PATH=\"share/info\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/help.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/help.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_HTML_PATH=\"share/doc/git\" -DGIT_MAN_PATH=\"share/man\" -DGIT_INFO_PATH=\"share/info\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/help.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/help.c.bc
 check
-echo "221 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/help.c to bc" >&2
+echo "221 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/help.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/index-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/index-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/index-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/index-pack.c.bc
 check
-echo "222 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/index-pack.c to bc" >&2
+echo "222 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/index-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DDEFAULT_GIT_TEMPLATE_DIR=\"/usr/local/share/git-core/templates\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/init-db.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/init-db.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DDEFAULT_GIT_TEMPLATE_DIR=\"/usr/local/share/git-core/templates\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/init-db.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/init-db.c.bc
 check
-echo "223 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/init-db.c to bc" >&2
+echo "223 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/init-db.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/interpret-trailers.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/interpret-trailers.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/interpret-trailers.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/interpret-trailers.c.bc
 check
-echo "224 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/interpret-trailers.c to bc" >&2
+echo "224 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/interpret-trailers.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/log.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/log.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/log.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/log.c.bc
 check
-echo "225 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/log.c to bc" >&2
+echo "225 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/log.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/ls-files.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/ls-files.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/ls-files.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/ls-files.c.bc
 check
-echo "226 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/ls-files.c to bc" >&2
+echo "226 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/ls-files.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/ls-remote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/ls-remote.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/ls-remote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/ls-remote.c.bc
 check
-echo "227 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/ls-remote.c to bc" >&2
+echo "227 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/ls-remote.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/ls-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/ls-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/ls-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/ls-tree.c.bc
 check
-echo "228 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/ls-tree.c to bc" >&2
+echo "228 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/ls-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mailinfo.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mailinfo.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mailinfo.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mailinfo.c.bc
 check
-echo "229 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mailinfo.c to bc" >&2
+echo "229 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mailinfo.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mailsplit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mailsplit.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mailsplit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mailsplit.c.bc
 check
-echo "230 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mailsplit.c to bc" >&2
+echo "230 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mailsplit.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge.c.bc
 check
-echo "231 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge.c to bc" >&2
+echo "231 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-base.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-base.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-base.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-base.c.bc
 check
-echo "232 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-base.c to bc" >&2
+echo "232 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-base.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-file.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-file.c.bc
 check
-echo "233 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-file.c to bc" >&2
+echo "233 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-file.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-index.c.bc
 check
-echo "234 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-index.c to bc" >&2
+echo "234 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-ours.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-ours.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-ours.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-ours.c.bc
 check
-echo "235 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-ours.c to bc" >&2
+echo "235 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-ours.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-recursive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-recursive.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-recursive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-recursive.c.bc
 check
-echo "236 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-recursive.c to bc" >&2
+echo "236 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-recursive.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-tree.c.bc
 check
-echo "237 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-tree.c to bc" >&2
+echo "237 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mktag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mktag.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mktag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mktag.c.bc
 check
-echo "238 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mktag.c to bc" >&2
+echo "238 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mktag.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mktree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mktree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mktree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mktree.c.bc
 check
-echo "239 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mktree.c to bc" >&2
+echo "239 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mktree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mv.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mv.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mv.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mv.c.bc
 check
-echo "240 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mv.c to bc" >&2
+echo "240 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mv.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/name-rev.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/name-rev.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/name-rev.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/name-rev.c.bc
 check
-echo "241 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/name-rev.c to bc" >&2
+echo "241 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/name-rev.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/notes.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/notes.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/notes.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/notes.c.bc
 check
-echo "242 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/notes.c to bc" >&2
+echo "242 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/notes.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/pack-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/pack-objects.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/pack-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/pack-objects.c.bc
 check
-echo "243 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/pack-objects.c to bc" >&2
+echo "243 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/pack-objects.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/pack-redundant.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/pack-redundant.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/pack-redundant.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/pack-redundant.c.bc
 check
-echo "244 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/pack-redundant.c to bc" >&2
+echo "244 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/pack-redundant.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/pack-refs.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/pack-refs.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/pack-refs.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/pack-refs.c.bc
 check
-echo "245 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/pack-refs.c to bc" >&2
+echo "245 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/pack-refs.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/patch-id.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/patch-id.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/patch-id.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/patch-id.c.bc
 check
-echo "246 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/patch-id.c to bc" >&2
+echo "246 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/patch-id.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/prune-packed.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/prune-packed.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/prune-packed.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/prune-packed.c.bc
 check
-echo "247 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/prune-packed.c to bc" >&2
+echo "247 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/prune-packed.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/prune.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/prune.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/prune.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/prune.c.bc
 check
-echo "248 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/prune.c to bc" >&2
+echo "248 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/prune.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/push.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/push.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/push.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/push.c.bc
 check
-echo "249 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/push.c to bc" >&2
+echo "249 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/push.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/read-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/read-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/read-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/read-tree.c.bc
 check
-echo "250 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/read-tree.c to bc" >&2
+echo "250 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/read-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/receive-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/receive-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/receive-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/receive-pack.c.bc
 check
-echo "251 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/receive-pack.c to bc" >&2
+echo "251 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/receive-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/reflog.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/reflog.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/reflog.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/reflog.c.bc
 check
-echo "252 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/reflog.c to bc" >&2
+echo "252 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/reflog.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/remote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/remote.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/remote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/remote.c.bc
 check
-echo "253 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/remote.c to bc" >&2
+echo "253 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/remote.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/remote-ext.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/remote-ext.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/remote-ext.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/remote-ext.c.bc
 check
-echo "254 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/remote-ext.c to bc" >&2
+echo "254 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/remote-ext.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/remote-fd.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/remote-fd.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/remote-fd.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/remote-fd.c.bc
 check
-echo "255 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/remote-fd.c to bc" >&2
+echo "255 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/remote-fd.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/repack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/repack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/repack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/repack.c.bc
 check
-echo "256 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/repack.c to bc" >&2
+echo "256 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/repack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/replace.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/replace.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/replace.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/replace.c.bc
 check
-echo "257 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/replace.c to bc" >&2
+echo "257 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/replace.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rerere.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rerere.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rerere.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rerere.c.bc
 check
-echo "258 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rerere.c to bc" >&2
+echo "258 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rerere.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/reset.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/reset.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/reset.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/reset.c.bc
 check
-echo "259 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/reset.c to bc" >&2
+echo "259 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/reset.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rev-list.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rev-list.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rev-list.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rev-list.c.bc
 check
-echo "260 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rev-list.c to bc" >&2
+echo "260 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rev-list.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rev-parse.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rev-parse.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rev-parse.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rev-parse.c.bc
 check
-echo "261 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rev-parse.c to bc" >&2
+echo "261 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rev-parse.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/revert.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/revert.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/revert.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/revert.c.bc
 check
-echo "262 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/revert.c to bc" >&2
+echo "262 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/revert.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rm.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rm.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rm.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rm.c.bc
 check
-echo "263 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rm.c to bc" >&2
+echo "263 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rm.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/send-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/send-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/send-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/send-pack.c.bc
 check
-echo "264 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/send-pack.c to bc" >&2
+echo "264 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/send-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/shortlog.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/shortlog.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/shortlog.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/shortlog.c.bc
 check
-echo "265 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/shortlog.c to bc" >&2
+echo "265 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/shortlog.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/show-branch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/show-branch.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/show-branch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/show-branch.c.bc
 check
-echo "266 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/show-branch.c to bc" >&2
+echo "266 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/show-branch.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/show-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/show-ref.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/show-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/show-ref.c.bc
 check
-echo "267 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/show-ref.c to bc" >&2
+echo "267 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/show-ref.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/stripspace.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/stripspace.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/stripspace.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/stripspace.c.bc
 check
-echo "268 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/stripspace.c to bc" >&2
+echo "268 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/stripspace.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/symbolic-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/symbolic-ref.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/symbolic-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/symbolic-ref.c.bc
 check
-echo "269 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/symbolic-ref.c to bc" >&2
+echo "269 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/symbolic-ref.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/tag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/tag.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/tag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/tag.c.bc
 check
-echo "270 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/tag.c to bc" >&2
+echo "270 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/tag.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/unpack-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/unpack-file.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/unpack-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/unpack-file.c.bc
 check
-echo "271 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/unpack-file.c to bc" >&2
+echo "271 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/unpack-file.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/unpack-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/unpack-objects.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/unpack-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/unpack-objects.c.bc
 check
-echo "272 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/unpack-objects.c to bc" >&2
+echo "272 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/unpack-objects.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/update-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/update-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/update-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/update-index.c.bc
 check
-echo "273 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/update-index.c to bc" >&2
+echo "273 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/update-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/update-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/update-ref.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/update-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/update-ref.c.bc
 check
-echo "274 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/update-ref.c to bc" >&2
+echo "274 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/update-ref.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/update-server-info.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/update-server-info.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/update-server-info.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/update-server-info.c.bc
 check
-echo "275 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/update-server-info.c to bc" >&2
+echo "275 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/update-server-info.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/upload-archive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/upload-archive.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/upload-archive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/upload-archive.c.bc
 check
-echo "276 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/upload-archive.c to bc" >&2
+echo "276 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/upload-archive.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/var.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/var.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/var.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/var.c.bc
 check
-echo "277 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/var.c to bc" >&2
+echo "277 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/var.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/verify-commit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/verify-commit.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/verify-commit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/verify-commit.c.bc
 check
-echo "278 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/verify-commit.c to bc" >&2
+echo "278 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/verify-commit.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/verify-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/verify-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/verify-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/verify-pack.c.bc
 check
-echo "279 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/verify-pack.c to bc" >&2
+echo "279 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/verify-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/verify-tag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/verify-tag.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/verify-tag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/verify-tag.c.bc
 check
-echo "280 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/verify-tag.c to bc" >&2
+echo "280 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/verify-tag.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/write-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/write-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/worktree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/worktree.c.bc
 check
-echo "281 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/write-tree.c to bc" >&2
+echo "281 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/worktree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-chmtime.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-chmtime.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/write-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/write-tree.c.bc
 check
-echo "282 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-chmtime.c to bc" >&2
+echo "282 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/write-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-ctype.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-ctype.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-chmtime.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-chmtime.c.bc
 check
-echo "283 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-ctype.c to bc" >&2
+echo "283 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-chmtime.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-config.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-ctype.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-ctype.c.bc
 check
-echo "284 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-config.c to bc" >&2
+echo "284 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-ctype.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-date.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-date.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-config.c.bc
 check
-echo "285 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-date.c to bc" >&2
+echo "285 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-config.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-delta.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-date.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-date.c.bc
 check
-echo "286 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-delta.c to bc" >&2
+echo "286 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-date.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-dump-cache-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-dump-cache-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-delta.c.bc
 check
-echo "287 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-dump-cache-tree.c to bc" >&2
+echo "287 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-delta.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-dump-split-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-dump-split-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-dump-cache-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-dump-cache-tree.c.bc
 check
-echo "288 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-dump-split-index.c to bc" >&2
+echo "288 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-dump-cache-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-genrandom.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-genrandom.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-dump-split-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-dump-split-index.c.bc
 check
-echo "289 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-genrandom.c to bc" >&2
+echo "289 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-dump-split-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-hashmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-hashmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-dump-untracked-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-dump-untracked-cache.c.bc
 check
-echo "290 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-hashmap.c to bc" >&2
+echo "290 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-dump-untracked-cache.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-index-version.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-index-version.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-genrandom.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-genrandom.c.bc
 check
-echo "291 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-index-version.c to bc" >&2
+echo "291 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-genrandom.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-line-buffer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-line-buffer.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-hashmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-hashmap.c.bc
 check
-echo "292 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-line-buffer.c to bc" >&2
+echo "292 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-hashmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-match-trees.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-match-trees.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-index-version.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-index-version.c.bc
 check
-echo "293 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-match-trees.c to bc" >&2
+echo "293 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-index-version.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-mergesort.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-mergesort.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-line-buffer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-line-buffer.c.bc
 check
-echo "294 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-mergesort.c to bc" >&2
+echo "294 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-line-buffer.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-mktemp.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-mktemp.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-match-trees.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-match-trees.c.bc
 check
-echo "295 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-mktemp.c to bc" >&2
+echo "295 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-match-trees.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-parse-options.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-parse-options.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-mergesort.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-mergesort.c.bc
 check
-echo "296 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-parse-options.c to bc" >&2
+echo "296 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-mergesort.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-path-utils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-path-utils.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-mktemp.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-mktemp.c.bc
 check
-echo "297 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-path-utils.c to bc" >&2
+echo "297 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-mktemp.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-prio-queue.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-prio-queue.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-parse-options.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-parse-options.c.bc
 check
-echo "298 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-prio-queue.c to bc" >&2
+echo "298 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-parse-options.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-read-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-read-cache.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-path-utils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-path-utils.c.bc
 check
-echo "299 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-read-cache.c to bc" >&2
+echo "299 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-path-utils.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-regex.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-regex.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-prio-queue.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-prio-queue.c.bc
 check
-echo "300 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-regex.c to bc" >&2
+echo "300 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-prio-queue.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-revision-walking.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-revision-walking.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-read-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-read-cache.c.bc
 check
-echo "301 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-revision-walking.c to bc" >&2
+echo "301 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-read-cache.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-run-command.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-run-command.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-regex.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-regex.c.bc
 check
-echo "302 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-run-command.c to bc" >&2
+echo "302 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-regex.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-scrap-cache-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-scrap-cache-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-revision-walking.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-revision-walking.c.bc
 check
-echo "303 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-scrap-cache-tree.c to bc" >&2
+echo "303 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-revision-walking.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-sha1.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-sha1.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-run-command.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-run-command.c.bc
 check
-echo "304 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-sha1.c to bc" >&2
+echo "304 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-run-command.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-sha1-array.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-sha1-array.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-scrap-cache-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-scrap-cache-tree.c.bc
 check
-echo "305 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-sha1-array.c to bc" >&2
+echo "305 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-scrap-cache-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-sigchain.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-sigchain.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-sha1.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-sha1.c.bc
 check
-echo "306 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-sigchain.c to bc" >&2
+echo "306 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-sha1.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-string-list.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-string-list.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-sha1-array.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-sha1-array.c.bc
 check
-echo "307 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-string-list.c to bc" >&2
+echo "307 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-sha1-array.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-subprocess.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-subprocess.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-sigchain.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-sigchain.c.bc
 check
-echo "308 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-subprocess.c to bc" >&2
+echo "308 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-sigchain.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-svn-fe.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-svn-fe.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-string-list.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-string-list.c.bc
 check
-echo "309 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-svn-fe.c to bc" >&2
+echo "309 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-string-list.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-urlmatch-normalization.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-urlmatch-normalization.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-subprocess.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-subprocess.c.bc
 check
-echo "310 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-urlmatch-normalization.c to bc" >&2
+echo "310 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-subprocess.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-wildmatch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-wildmatch.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-svn-fe.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-svn-fe.c.bc
 check
-echo "311 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-wildmatch.c to bc" >&2
+echo "311 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-svn-fe.c to bc" >&2
+
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-urlmatch-normalization.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-urlmatch-normalization.c.bc
+check
+echo "312 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-urlmatch-normalization.c to bc" >&2
+
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-wildmatch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-wildmatch.c.bc
+check
+echo "313 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-wildmatch.c to bc" >&2
 echo "Total ir $total" >&2
 echo "Succ ir $succ" >&2
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/add.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/add.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/add.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/add.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/annotate.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/annotate.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/annotate.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/annotate.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/apply.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/apply.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/apply.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/apply.c	2015-07-28 04:34:56.000000000 +0800
@@ -205,13 +205,13 @@
 	size_t resultsize;
 	char old_sha1_prefix[41];
 	char new_sha1_prefix[41];
 	struct patch *next;
 
 	/* three-way fallback result */
-	unsigned char threeway_stage[3][20];
+	struct object_id threeway_stage[3];
 };
 
 static void free_fragment_list(struct fragment *list)
 {
 	while (list) {
 		struct fragment *next = list->next;
@@ -1635,12 +1635,15 @@
 				return -1;
 			break;
 		}
 	}
 	if (oldlines || newlines)
 		return -1;
+	if (!deleted && !added)
+		return -1;
+
 	fragment->leading = leading;
 	fragment->trailing = trailing;
 
 	/*
 	 * If a fragment ends with an incomplete line, we failed to include
 	 * it in the above loop because we hit oldlines == newlines == 0
@@ -3423,17 +3426,17 @@
 		return status;
 	}
 
 	if (status) {
 		patch->conflicted_threeway = 1;
 		if (patch->is_new)
-			hashclr(patch->threeway_stage[0]);
+			oidclr(&patch->threeway_stage[0]);
 		else
-			hashcpy(patch->threeway_stage[0], pre_sha1);
-		hashcpy(patch->threeway_stage[1], our_sha1);
-		hashcpy(patch->threeway_stage[2], post_sha1);
+			hashcpy(patch->threeway_stage[0].hash, pre_sha1);
+		hashcpy(patch->threeway_stage[1].hash, our_sha1);
+		hashcpy(patch->threeway_stage[2].hash, post_sha1);
 		fprintf(stderr, "Applied patch to '%s' with conflicts.\n", patch->new_name);
 	} else {
 		fprintf(stderr, "Applied patch to '%s' cleanly.\n", patch->new_name);
 	}
 	return 0;
 }
@@ -4183,20 +4186,20 @@
 	namelen = strlen(patch->new_name);
 	ce_size = cache_entry_size(namelen);
 	mode = patch->new_mode ? patch->new_mode : (S_IFREG | 0644);
 
 	remove_file_from_cache(patch->new_name);
 	for (stage = 1; stage < 4; stage++) {
-		if (is_null_sha1(patch->threeway_stage[stage - 1]))
+		if (is_null_oid(&patch->threeway_stage[stage - 1]))
 			continue;
 		ce = xcalloc(1, ce_size);
 		memcpy(ce->name, patch->new_name, namelen);
 		ce->ce_mode = create_ce_mode(mode);
 		ce->ce_flags = create_ce_flags(stage);
 		ce->ce_namelen = namelen;
-		hashcpy(ce->sha1, patch->threeway_stage[stage - 1]);
+		hashcpy(ce->sha1, patch->threeway_stage[stage - 1].hash);
 		if (add_cache_entry(ce, ADD_CACHE_OK_TO_ADD) < 0)
 			die(_("unable to add cache entry for %s"), patch->new_name);
 	}
 }
 
 static void create_file(struct patch *patch)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/apply.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/apply.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/apply.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/apply.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/archive.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/archive.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/archive.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/archive.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/bisect--helper.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/bisect--helper.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/bisect--helper.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/bisect--helper.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/blame.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/blame.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/blame.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/blame.c	2015-07-28 04:34:56.000000000 +0800
@@ -970,16 +970,13 @@
 	d.dstq = &newdest; d.srcq = &target->suspects;
 
 	fill_origin_blob(&sb->revs->diffopt, parent, &file_p);
 	fill_origin_blob(&sb->revs->diffopt, target, &file_o);
 	num_get_patch++;
 
-	if (diff_hunks(&file_p, &file_o, 0, blame_chunk_cb, &d))
-		die("unable to generate diff (%s -> %s)",
-		    sha1_to_hex(parent->commit->object.sha1),
-		    sha1_to_hex(target->commit->object.sha1));
+	diff_hunks(&file_p, &file_o, 0, blame_chunk_cb, &d);
 	/* The rest are the same as the parent */
 	blame_chunk(&d.dstq, &d.srcq, INT_MAX, d.offset, INT_MAX, parent);
 	*d.dstq = NULL;
 	queue_blames(sb, parent, newdest);
 
 	return;
@@ -1119,15 +1116,13 @@
 
 	/*
 	 * file_o is a part of final image we are annotating.
 	 * file_p partially may match that image.
 	 */
 	memset(split, 0, sizeof(struct blame_entry [3]));
-	if (diff_hunks(file_p, &file_o, 1, handle_split_cb, &d))
-		die("unable to generate diff (%s)",
-		    sha1_to_hex(parent->commit->object.sha1));
+	diff_hunks(file_p, &file_o, 1, handle_split_cb, &d);
 	/* remainder, if any, all match the preimage */
 	handle_split(sb, ent, d.tlno, d.plno, ent->num_lines, parent, split);
 }
 
 /* Move all blame entries from list *source that have a score smaller
  * than score_min to the front of list *small.
@@ -2178,12 +2173,20 @@
 		return 0;
 	}
 	if (!strcmp(var, "blame.blankboundary")) {
 		blank_boundary = git_config_bool(var, value);
 		return 0;
 	}
+	if (!strcmp(var, "blame.showemail")) {
+		int *output_option = cb;
+		if (git_config_bool(var, value))
+			*output_option |= OUTPUT_SHOW_EMAIL;
+		else
+			*output_option &= ~OUTPUT_SHOW_EMAIL;
+		return 0;
+	}
 	if (!strcmp(var, "blame.date")) {
 		if (!value)
 			return config_error_nonbool(var);
 		blame_date_mode = parse_date_format(value);
 		return 0;
 	}
@@ -2522,13 +2525,13 @@
 	struct parse_opt_ctx_t ctx;
 	int cmd_is_annotate = !strcmp(argv[0], "annotate");
 	struct range_set ranges;
 	unsigned int range_i;
 	long anchor;
 
-	git_config(git_blame_config, NULL);
+	git_config(git_blame_config, &output_option);
 	init_revisions(&revs, NULL);
 	revs.date_mode = blame_date_mode;
 	DIFF_OPT_SET(&revs.diffopt, ALLOW_TEXTCONV);
 	DIFF_OPT_SET(&revs.diffopt, FOLLOW_RENAMES);
 
 	save_commit_buffer = 0;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/blame.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/blame.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/blame.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/blame.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/branch.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/branch.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/branch.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/branch.c	2015-07-28 04:34:56.000000000 +0800
@@ -120,20 +120,18 @@
 	const char *reference_name = NULL;
 	void *reference_name_to_free = NULL;
 	int merged;
 
 	if (kind == REF_LOCAL_BRANCH) {
 		struct branch *branch = branch_get(name);
+		const char *upstream = branch_get_upstream(branch, NULL);
 		unsigned char sha1[20];
 
-		if (branch &&
-		    branch->merge &&
-		    branch->merge[0] &&
-		    branch->merge[0]->dst &&
+		if (upstream &&
 		    (reference_name = reference_name_to_free =
-		     resolve_refdup(branch->merge[0]->dst, RESOLVE_REF_READING,
+		     resolve_refdup(upstream, RESOLVE_REF_READING,
 				    sha1, NULL)) != NULL)
 			reference_rev = lookup_commit_reference(sha1);
 	}
 	if (!reference_rev)
 		reference_rev = head_rev;
 
@@ -325,13 +323,13 @@
 			return 1;
 		pattern++;
 	}
 	return 0;
 }
 
-static int append_ref(const char *refname, const unsigned char *sha1, int flags, void *cb_data)
+static int append_ref(const char *refname, const struct object_id *oid, int flags, void *cb_data)
 {
 	struct append_ref_cb *cb = (struct append_ref_cb *)(cb_data);
 	struct ref_list *ref_list = cb->ref_list;
 	struct ref_item *newitem;
 	struct commit *commit;
 	int kind, i;
@@ -362,13 +360,13 @@
 
 	if (!match_patterns(cb->pattern, refname))
 		return 0;
 
 	commit = NULL;
 	if (ref_list->verbose || ref_list->with_commit || merge_filter != NO_FILTER) {
-		commit = lookup_commit_reference_gently(sha1, 1);
+		commit = lookup_commit_reference_gently(oid->hash, 1);
 		if (!commit) {
 			cb->ret = error(_("branch '%s' does not point at a commit"), refname);
 			return 0;
 		}
 
 		/* Filter with with_commit if specified */
@@ -424,31 +422,25 @@
 static void fill_tracking_info(struct strbuf *stat, const char *branch_name,
 		int show_upstream_ref)
 {
 	int ours, theirs;
 	char *ref = NULL;
 	struct branch *branch = branch_get(branch_name);
+	const char *upstream;
 	struct strbuf fancy = STRBUF_INIT;
 	int upstream_is_gone = 0;
 	int added_decoration = 1;
 
-	switch (stat_tracking_info(branch, &ours, &theirs)) {
-	case 0:
-		/* no base */
-		return;
-	case -1:
-		/* with "gone" base */
+	if (stat_tracking_info(branch, &ours, &theirs, &upstream) < 0) {
+		if (!upstream)
+			return;
 		upstream_is_gone = 1;
-		break;
-	default:
-		/* with base */
-		break;
 	}
 
 	if (show_upstream_ref) {
-		ref = shorten_unambiguous_ref(branch->merge[0]->dst, 0);
+		ref = shorten_unambiguous_ref(upstream, 0);
 		if (want_color(branch_use_color))
 			strbuf_addf(&fancy, "%s%s%s",
 					branch_get_color(BRANCH_COLOR_UPSTREAM),
 					ref, branch_get_color(BRANCH_COLOR_RESET));
 		else
 			strbuf_addstr(&fancy, ref);
@@ -768,27 +760,25 @@
 }
 
 static const char edit_description[] = "BRANCH_DESCRIPTION";
 
 static int edit_branch_description(const char *branch_name)
 {
-	FILE *fp;
 	int status;
 	struct strbuf buf = STRBUF_INIT;
 	struct strbuf name = STRBUF_INIT;
 
 	read_branch_desc(&buf, branch_name);
 	if (!buf.len || buf.buf[buf.len-1] != '\n')
 		strbuf_addch(&buf, '\n');
 	strbuf_commented_addf(&buf,
 		    "Please edit the description for the branch\n"
 		    "  %s\n"
 		    "Lines starting with '%c' will be stripped.\n",
 		    branch_name, comment_line_char);
-	fp = fopen(git_path(edit_description), "w");
-	if ((fwrite(buf.buf, 1, buf.len, fp) < buf.len) || fclose(fp)) {
+	if (write_file(git_path(edit_description), 0, "%s", buf.buf)) {
 		strbuf_release(&buf);
 		return error(_("could not write branch description template: %s"),
 			     strerror(errno));
 	}
 	strbuf_reset(&buf);
 	if (launch_editor(git_path(edit_description), &buf, NULL)) {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/branch.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/branch.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/branch.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/branch.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/bundle.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/bundle.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/bundle.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/bundle.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/cat-file.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/cat-file.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/cat-file.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/cat-file.c	2015-07-28 04:34:56.000000000 +0800
@@ -5,41 +5,51 @@
  */
 #include "cache.h"
 #include "builtin.h"
 #include "parse-options.h"
 #include "userdiff.h"
 #include "streaming.h"
+#include "tree-walk.h"
 
-static int cat_one_file(int opt, const char *exp_type, const char *obj_name)
+static int cat_one_file(int opt, const char *exp_type, const char *obj_name,
+			int unknown_type)
 {
 	unsigned char sha1[20];
 	enum object_type type;
 	char *buf;
 	unsigned long size;
 	struct object_context obj_context;
+	struct object_info oi = {NULL};
+	struct strbuf sb = STRBUF_INIT;
+	unsigned flags = LOOKUP_REPLACE_OBJECT;
+
+	if (unknown_type)
+		flags |= LOOKUP_UNKNOWN_OBJECT;
 
 	if (get_sha1_with_context(obj_name, 0, sha1, &obj_context))
 		die("Not a valid object name %s", obj_name);
 
 	buf = NULL;
 	switch (opt) {
 	case 't':
-		type = sha1_object_info(sha1, NULL);
-		if (type > 0) {
-			printf("%s\n", typename(type));
+		oi.typename = &sb;
+		if (sha1_object_info_extended(sha1, &oi, flags) < 0)
+			die("git cat-file: could not get object info");
+		if (sb.len) {
+			printf("%s\n", sb.buf);
+			strbuf_release(&sb);
 			return 0;
 		}
 		break;
 
 	case 's':
-		type = sha1_object_info(sha1, &size);
-		if (type > 0) {
-			printf("%lu\n", size);
-			return 0;
-		}
-		break;
+		oi.sizep = &size;
+		if (sha1_object_info_extended(sha1, &oi, flags) < 0)
+			die("git cat-file: could not get object info");
+		printf("%lu\n", size);
+		return 0;
 
 	case 'e':
 		return !has_sha1_file(sha1);
 
 	case 'c':
 		if (!obj_context.path[0])
@@ -221,26 +231,59 @@
 		free(contents);
 	}
 }
 
 struct batch_options {
 	int enabled;
+	int follow_symlinks;
 	int print_contents;
 	const char *format;
 };
 
 static int batch_one_object(const char *obj_name, struct batch_options *opt,
 			    struct expand_data *data)
 {
 	struct strbuf buf = STRBUF_INIT;
+	struct object_context ctx;
+	int flags = opt->follow_symlinks ? GET_SHA1_FOLLOW_SYMLINKS : 0;
+	enum follow_symlinks_result result;
 
 	if (!obj_name)
 	   return 1;
 
-	if (get_sha1(obj_name, data->sha1)) {
-		printf("%s missing\n", obj_name);
+	result = get_sha1_with_context(obj_name, flags, data->sha1, &ctx);
+	if (result != FOUND) {
+		switch (result) {
+		case MISSING_OBJECT:
+			printf("%s missing\n", obj_name);
+			break;
+		case DANGLING_SYMLINK:
+			printf("dangling %"PRIuMAX"\n%s\n",
+			       (uintmax_t)strlen(obj_name), obj_name);
+			break;
+		case SYMLINK_LOOP:
+			printf("loop %"PRIuMAX"\n%s\n",
+			       (uintmax_t)strlen(obj_name), obj_name);
+			break;
+		case NOT_DIR:
+			printf("notdir %"PRIuMAX"\n%s\n",
+			       (uintmax_t)strlen(obj_name), obj_name);
+			break;
+		default:
+			die("BUG: unknown get_sha1_with_context result %d\n",
+			       result);
+			break;
+		}
+		fflush(stdout);
+		return 0;
+	}
+
+	if (ctx.mode == 0) {
+		printf("symlink %"PRIuMAX"\n%s\n",
+		       (uintmax_t)ctx.symlink_path.len,
+		       ctx.symlink_path.buf);
 		fflush(stdout);
 		return 0;
 	}
 
 	if (sha1_object_info_extended(data->sha1, &data->info, LOOKUP_REPLACE_OBJECT) < 0) {
 		printf("%s missing\n", obj_name);
@@ -320,14 +363,14 @@
 	strbuf_release(&buf);
 	warn_on_object_refname_ambiguity = save_warning;
 	return retval;
 }
 
 static const char * const cat_file_usage[] = {
-	N_("git cat-file (-t | -s | -e | -p | <type> | --textconv) <object>"),
-	N_("git cat-file (--batch | --batch-check) < <list-of-objects>"),
+	N_("git cat-file (-t [--allow-unknown-type]|-s [--allow-unknown-type]|-e|-p|<type>|--textconv) <object>"),
+	N_("git cat-file (--batch | --batch-check) [--follow-symlinks] < <list-of-objects>"),
 	NULL
 };
 
 static int git_cat_file_config(const char *var, const char *value, void *cb)
 {
 	if (userdiff_config(var, value) < 0)
@@ -339,15 +382,14 @@
 static int batch_option_callback(const struct option *opt,
 				 const char *arg,
 				 int unset)
 {
 	struct batch_options *bo = opt->value;
 
-	if (unset) {
-		memset(bo, 0, sizeof(*bo));
-		return 0;
+	if (bo->enabled) {
+		return 1;
 	}
 
 	bo->enabled = 1;
 	bo->print_contents = !strcmp(opt->long_name, "batch");
 	bo->format = arg;
 
@@ -356,36 +398,38 @@
 
 int cmd_cat_file(int argc, const char **argv, const char *prefix)
 {
 	int opt = 0;
 	const char *exp_type = NULL, *obj_name = NULL;
 	struct batch_options batch = {0};
+	int unknown_type = 0;
 
 	const struct option options[] = {
 		OPT_GROUP(N_("<type> can be one of: blob, tree, commit, tag")),
-		OPT_SET_INT('t', NULL, &opt, N_("show object type"), 't'),
-		OPT_SET_INT('s', NULL, &opt, N_("show object size"), 's'),
-		OPT_SET_INT('e', NULL, &opt,
+		OPT_CMDMODE('t', NULL, &opt, N_("show object type"), 't'),
+		OPT_CMDMODE('s', NULL, &opt, N_("show object size"), 's'),
+		OPT_CMDMODE('e', NULL, &opt,
 			    N_("exit with zero when there's no error"), 'e'),
-		OPT_SET_INT('p', NULL, &opt, N_("pretty-print object's content"), 'p'),
-		OPT_SET_INT(0, "textconv", &opt,
+		OPT_CMDMODE('p', NULL, &opt, N_("pretty-print object's content"), 'p'),
+		OPT_CMDMODE(0, "textconv", &opt,
 			    N_("for blob objects, run textconv on object's content"), 'c'),
+		OPT_BOOL( 0, "allow-unknown-type", &unknown_type,
+			  N_("allow -s and -t to work with broken/corrupt objects")),
 		{ OPTION_CALLBACK, 0, "batch", &batch, "format",
 			N_("show info and content of objects fed from the standard input"),
 			PARSE_OPT_OPTARG, batch_option_callback },
 		{ OPTION_CALLBACK, 0, "batch-check", &batch, "format",
 			N_("show info about objects fed from the standard input"),
 			PARSE_OPT_OPTARG, batch_option_callback },
+		OPT_BOOL(0, "follow-symlinks", &batch.follow_symlinks,
+			 N_("follow in-tree symlinks (used with --batch or --batch-check)")),
 		OPT_END()
 	};
 
 	git_config(git_cat_file_config, NULL);
 
-	if (argc != 3 && argc != 2)
-		usage_with_options(cat_file_usage, options);
-
 	argc = parse_options(argc, argv, prefix, options, cat_file_usage, 0);
 
 	if (opt) {
 		if (argc == 1)
 			obj_name = argv[0];
 		else
@@ -399,11 +443,17 @@
 			usage_with_options(cat_file_usage, options);
 	}
 	if (batch.enabled && (opt || argc)) {
 		usage_with_options(cat_file_usage, options);
 	}
 
+	if (batch.follow_symlinks && !batch.enabled) {
+		usage_with_options(cat_file_usage, options);
+	}
+
 	if (batch.enabled)
 		return batch_objects(&batch);
 
-	return cat_one_file(opt, exp_type, obj_name);
+	if (unknown_type && opt != 't' && opt != 's')
+		die("git cat-file --allow-unknown-type: use with -s or -t");
+	return cat_one_file(opt, exp_type, obj_name, unknown_type);
 }
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/cat-file.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/cat-file.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/cat-file.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/cat-file.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/check-attr.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/check-attr.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/check-attr.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/check-attr.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/check-ignore.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/check-ignore.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/check-ignore.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/check-ignore.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/check-mailmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/check-mailmap.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/check-mailmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/check-mailmap.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/checkout.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/checkout.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/checkout.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/checkout.c	2015-07-28 04:34:56.000000000 +0800
@@ -16,13 +16,12 @@
 #include "remote.h"
 #include "blob.h"
 #include "xdiff-interface.h"
 #include "ll-merge.h"
 #include "resolve-undo.h"
 #include "submodule.h"
-#include "argv-array.h"
 
 static const char * const checkout_usage[] = {
 	N_("git checkout [<options>] <branch>"),
 	N_("git checkout [<options>] [<branch>] -- <file>..."),
 	NULL,
 };
@@ -33,24 +32,27 @@
 	int merge;
 	int force;
 	int force_detach;
 	int writeout_stage;
 	int overwrite_ignore;
 	int ignore_skipworktree;
+	int ignore_other_worktrees;
 
 	const char *new_branch;
 	const char *new_branch_force;
 	const char *new_orphan_branch;
 	int new_branch_log;
 	enum branch_track track;
 	struct diff_options diff_options;
 
 	int branch_exists;
 	const char *prefix;
 	struct pathspec pathspec;
 	struct tree *source_tree;
+
+	int new_worktree_mode;
 };
 
 static int post_checkout_hook(struct commit *old, struct commit *new,
 			      int changed)
 {
 	return run_hook_le(NULL, "post-checkout",
@@ -438,12 +440,17 @@
 }
 
 struct branch_info {
 	const char *name; /* The short name used */
 	const char *path; /* The full name of a real branch */
 	struct commit *commit; /* The named commit */
+	/*
+	 * if not null the branch is detached because it's already
+	 * checked out in this checkout
+	 */
+	char *checkout;
 };
 
 static void setup_branch_path(struct branch_info *branch)
 {
 	struct strbuf buf = STRBUF_INIT;
 
@@ -499,13 +506,13 @@
 		topts.fn = twoway_merge;
 		if (opts->overwrite_ignore) {
 			topts.dir = xcalloc(1, sizeof(*topts.dir));
 			topts.dir->flags |= DIR_SHOW_IGNORED;
 			setup_standard_excludes(topts.dir);
 		}
-		tree = parse_tree_indirect(old->commit ?
+		tree = parse_tree_indirect(old->commit && !opts->new_worktree_mode ?
 					   old->commit->object.sha1 :
 					   EMPTY_TREE_SHA1_BIN);
 		init_tree_desc(&trees[0], tree->buffer, tree->size);
 		tree = parse_tree_indirect(new->commit->object.sha1);
 		init_tree_desc(&trees[1], tree->buffer, tree->size);
 
@@ -603,24 +610,27 @@
 	struct strbuf msg = STRBUF_INIT;
 	const char *old_desc, *reflog_msg;
 	if (opts->new_branch) {
 		if (opts->new_orphan_branch) {
 			if (opts->new_branch_log && !log_all_ref_updates) {
 				int temp;
-				char log_file[PATH_MAX];
-				char *ref_name = mkpath("refs/heads/%s", opts->new_orphan_branch);
+				struct strbuf log_file = STRBUF_INIT;
+				int ret;
+				const char *ref_name;
 
+				ref_name = mkpath("refs/heads/%s", opts->new_orphan_branch);
 				temp = log_all_ref_updates;
 				log_all_ref_updates = 1;
-				if (log_ref_setup(ref_name, log_file, sizeof(log_file))) {
+				ret = log_ref_setup(ref_name, &log_file);
+				log_all_ref_updates = temp;
+				strbuf_release(&log_file);
+				if (ret) {
 					fprintf(stderr, _("Can not do reflog for '%s'\n"),
 					    opts->new_orphan_branch);
-					log_all_ref_updates = temp;
 					return;
 				}
-				log_all_ref_updates = temp;
 			}
 		}
 		else
 			create_branch(old->name, opts->new_branch, new->name,
 				      opts->new_branch_force ? 1 : 0,
 				      opts->new_branch_log,
@@ -682,16 +692,16 @@
 	if (!opts->quiet &&
 	    (new->path || (!opts->force_detach && !strcmp(new->name, "HEAD"))))
 		report_tracking(new);
 }
 
 static int add_pending_uninteresting_ref(const char *refname,
-					 const unsigned char *sha1,
+					 const struct object_id *oid,
 					 int flags, void *cb_data)
 {
-	add_pending_sha1(cb_data, refname, sha1, UNINTERESTING);
+	add_pending_sha1(cb_data, refname, oid->hash, UNINTERESTING);
 	return 0;
 }
 
 static void describe_one_orphan(struct strbuf *sb, struct commit *commit)
 {
 	strbuf_addstr(sb, "  ");
@@ -740,16 +750,23 @@
 		lost,
 		sb.buf);
 	strbuf_release(&sb);
 
 	if (advice_detached_head)
 		fprintf(stderr,
-			_(
+			Q_(
+			/* The singular version */
+			"If you want to keep it by creating a new branch, "
+			"this may be a good time\nto do so with:\n\n"
+			" git branch <new-branch-name> %s\n\n",
+			/* The plural version */
 			"If you want to keep them by creating a new branch, "
 			"this may be a good time\nto do so with:\n\n"
-			" git branch <new-branch-name> %s\n\n"),
+			" git branch <new-branch-name> %s\n\n",
+			/* Give ngettext() the count */
+			lost),
 			find_unique_abbrev(commit->object.sha1, DEFAULT_ABBREV));
 }
 
 /*
  * We are about to leave commit that was at the tip of a detached
  * HEAD.  If it is not reachable from any ref, this is the last chance
@@ -812,13 +829,14 @@
 	ret = merge_working_tree(opts, &old, new, &writeout_error);
 	if (ret) {
 		free(path_to_free);
 		return ret;
 	}
 
-	if (!opts->quiet && !old.path && old.commit && new->commit != old.commit)
+	if (!opts->quiet && !old.path && old.commit &&
+	    new->commit != old.commit && !opts->new_worktree_mode)
 		orphaned_commit_warning(old.commit, new->commit);
 
 	update_refs_for_switch(opts, &old, new);
 
 	ret = post_checkout_hook(old.commit, new->commit, 1);
 	free(path_to_free);
@@ -877,19 +895,85 @@
 	if (cb_data.unique)
 		return cb_data.dst_ref;
 	free(cb_data.dst_ref);
 	return NULL;
 }
 
+static void check_linked_checkout(struct branch_info *new, const char *id)
+{
+	struct strbuf sb = STRBUF_INIT;
+	struct strbuf path = STRBUF_INIT;
+	struct strbuf gitdir = STRBUF_INIT;
+	const char *start, *end;
+
+	if (id)
+		strbuf_addf(&path, "%s/worktrees/%s/HEAD", get_git_common_dir(), id);
+	else
+		strbuf_addf(&path, "%s/HEAD", get_git_common_dir());
+
+	if (strbuf_read_file(&sb, path.buf, 0) < 0 ||
+	    !skip_prefix(sb.buf, "ref:", &start))
+		goto done;
+	while (isspace(*start))
+		start++;
+	end = start;
+	while (*end && !isspace(*end))
+		end++;
+	if (strncmp(start, new->path, end - start) || new->path[end - start] != '\0')
+		goto done;
+	if (id) {
+		strbuf_reset(&path);
+		strbuf_addf(&path, "%s/worktrees/%s/gitdir", get_git_common_dir(), id);
+		if (strbuf_read_file(&gitdir, path.buf, 0) <= 0)
+			goto done;
+		strbuf_rtrim(&gitdir);
+	} else
+		strbuf_addstr(&gitdir, get_git_common_dir());
+	die(_("'%s' is already checked out at '%s'"), new->name, gitdir.buf);
+done:
+	strbuf_release(&path);
+	strbuf_release(&sb);
+	strbuf_release(&gitdir);
+}
+
+static void check_linked_checkouts(struct branch_info *new)
+{
+	struct strbuf path = STRBUF_INIT;
+	DIR *dir;
+	struct dirent *d;
+
+	strbuf_addf(&path, "%s/worktrees", get_git_common_dir());
+	if ((dir = opendir(path.buf)) == NULL) {
+		strbuf_release(&path);
+		return;
+	}
+
+	/*
+	 * $GIT_COMMON_DIR/HEAD is practically outside
+	 * $GIT_DIR so resolve_ref_unsafe() won't work (it
+	 * uses git_path). Parse the ref ourselves.
+	 */
+	check_linked_checkout(new, NULL);
+
+	while ((d = readdir(dir)) != NULL) {
+		if (!strcmp(d->d_name, ".") || !strcmp(d->d_name, ".."))
+			continue;
+		check_linked_checkout(new, d->d_name);
+	}
+	strbuf_release(&path);
+	closedir(dir);
+}
+
 static int parse_branchname_arg(int argc, const char **argv,
 				int dwim_new_local_branch_ok,
 				struct branch_info *new,
-				struct tree **source_tree,
-				unsigned char rev[20],
-				const char **new_branch)
+				struct checkout_opts *opts,
+				unsigned char rev[20])
 {
+	struct tree **source_tree = &opts->source_tree;
+	const char **new_branch = &opts->new_branch;
 	int argcount = 0;
 	unsigned char branch_rev[20];
 	const char *arg;
 	int dash_dash_pos;
 	int has_dash_dash = 0;
 	int i;
@@ -1083,12 +1167,23 @@
 		opts->track = git_branch_track;
 
 	if (new->name && !new->commit)
 		die(_("Cannot switch branch to a non-commit '%s'"),
 		    new->name);
 
+	if (new->path && !opts->force_detach && !opts->new_branch) {
+		unsigned char sha1[20];
+		int flag;
+		char *head_ref = resolve_refdup("HEAD", 0, sha1, &flag);
+		if (head_ref &&
+		    (!(flag & REF_ISSYMREF) || strcmp(head_ref, new->path)) &&
+		    !opts->ignore_other_worktrees)
+			check_linked_checkouts(new);
+		free(head_ref);
+	}
+
 	if (!new->commit && opts->new_branch) {
 		unsigned char rev[20];
 		int flag;
 
 		if (!read_ref_full("HEAD", 0, rev, &flag) &&
 		    (flag & REF_ISSYMREF) && is_null_sha1(rev))
@@ -1125,12 +1220,14 @@
 			   N_("conflict style (merge or diff3)")),
 		OPT_BOOL('p', "patch", &opts.patch_mode, N_("select hunks interactively")),
 		OPT_BOOL(0, "ignore-skip-worktree-bits", &opts.ignore_skipworktree,
 			 N_("do not limit pathspecs to sparse entries only")),
 		OPT_HIDDEN_BOOL(0, "guess", &dwim_new_local_branch,
 				N_("second guess 'git checkout <no-such-branch>'")),
+		OPT_BOOL(0, "ignore-other-worktrees", &opts.ignore_other_worktrees,
+			 N_("do not check if another worktree is holding the given ref")),
 		OPT_END(),
 	};
 
 	memset(&opts, 0, sizeof(opts));
 	memset(&new, 0, sizeof(new));
 	opts.overwrite_ignore = 1;
@@ -1141,12 +1238,14 @@
 
 	opts.track = BRANCH_TRACK_UNSPECIFIED;
 
 	argc = parse_options(argc, argv, prefix, options, checkout_usage,
 			     PARSE_OPT_KEEP_DASHDASH);
 
+	opts.new_worktree_mode = getenv("GIT_CHECKOUT_NEW_WORKTREE") != NULL;
+
 	if (conflict_style) {
 		opts.merge = 1; /* implied */
 		git_xmerge_config("merge.conflictstyle", conflict_style, NULL);
 	}
 
 	if ((!!opts.new_branch + !!opts.new_branch_force + !!opts.new_orphan_branch) > 1)
@@ -1194,14 +1293,13 @@
 		int dwim_ok =
 			!opts.patch_mode &&
 			dwim_new_local_branch &&
 			opts.track == BRANCH_TRACK_UNSPECIFIED &&
 			!opts.new_branch;
 		int n = parse_branchname_arg(argc, argv, dwim_ok,
-					     &new, &opts.source_tree,
-					     rev, &opts.new_branch);
+					     &new, &opts, rev);
 		argv += n;
 		argc -= n;
 	}
 
 	if (argc) {
 		parse_pathspec(&opts.pathspec, 0,
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/checkout.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/checkout.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/checkout-index.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/checkout-index.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/checkout-index.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/checkout-index.c	2015-07-28 04:34:56.000000000 +0800
@@ -238,42 +238,40 @@
 		state.refresh_cache = 0;
 	}
 
 	/* Check out named files first */
 	for (i = 0; i < argc; i++) {
 		const char *arg = argv[i];
-		const char *p;
+		char *p;
 
 		if (all)
 			die("git checkout-index: don't mix '--all' and explicit filenames");
 		if (read_from_stdin)
 			die("git checkout-index: don't mix '--stdin' and explicit filenames");
 		p = prefix_path(prefix, prefix_length, arg);
 		checkout_file(p, prefix);
-		if (p < arg || p > arg + strlen(arg))
-			free((char *)p);
+		free(p);
 	}
 
 	if (read_from_stdin) {
 		struct strbuf buf = STRBUF_INIT, nbuf = STRBUF_INIT;
 
 		if (all)
 			die("git checkout-index: don't mix '--all' and '--stdin'");
 
 		while (strbuf_getline(&buf, stdin, line_termination) != EOF) {
-			const char *p;
+			char *p;
 			if (line_termination && buf.buf[0] == '"') {
 				strbuf_reset(&nbuf);
 				if (unquote_c_style(&nbuf, buf.buf, NULL))
 					die("line is badly quoted");
 				strbuf_swap(&buf, &nbuf);
 			}
 			p = prefix_path(prefix, prefix_length, buf.buf);
 			checkout_file(p, prefix);
-			if (p < buf.buf || p > buf.buf + buf.len)
-				free((char *)p);
+			free(p);
 		}
 		strbuf_release(&nbuf);
 		strbuf_release(&buf);
 	}
 
 	if (all)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/checkout-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/checkout-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/checkout-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/checkout-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/checkout.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/checkout.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/check-ref-format.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/check-ref-format.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/check-ref-format.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/check-ref-format.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/clean.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/clean.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/clean.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/clean.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/clone.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/clone.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/clone.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/clone.c	2015-07-28 04:34:56.000000000 +0800
@@ -274,22 +274,23 @@
 	 * absolute, so that they can be used in the new repository.
 	 */
 	FILE *in = fopen(src->buf, "r");
 	struct strbuf line = STRBUF_INIT;
 
 	while (strbuf_getline(&line, in, '\n') != EOF) {
-		char *abs_path, abs_buf[PATH_MAX];
+		char *abs_path;
 		if (!line.len || line.buf[0] == '#')
 			continue;
 		if (is_absolute_path(line.buf)) {
 			add_to_alternates_file(line.buf);
 			continue;
 		}
-		abs_path = mkpath("%s/objects/%s", src_repo, line.buf);
-		normalize_path_copy(abs_buf, abs_path);
-		add_to_alternates_file(abs_buf);
+		abs_path = mkpathdup("%s/objects/%s", src_repo, line.buf);
+		normalize_path_copy(abs_path, abs_path);
+		add_to_alternates_file(abs_path);
+		free(abs_path);
 	}
 	strbuf_release(&line);
 	fclose(in);
 }
 
 static void copy_or_link_directory(struct strbuf *src, struct strbuf *dest,
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/clone.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/clone.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/clone.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/clone.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/column.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/column.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/column.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/column.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/commit.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/commit.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/commit.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/commit.c	2015-07-28 04:34:56.000000000 +0800
@@ -167,13 +167,13 @@
 static void determine_whence(struct wt_status *s)
 {
 	if (file_exists(git_path("MERGE_HEAD")))
 		whence = FROM_MERGE;
 	else if (file_exists(git_path("CHERRY_PICK_HEAD"))) {
 		whence = FROM_CHERRY_PICK;
-		if (file_exists(git_path("sequencer")))
+		if (file_exists(git_path(SEQ_DIR)))
 			sequencer_in_use = 1;
 	}
 	else
 		whence = FROM_COMMIT;
 	if (s)
 		s->whence = whence;
@@ -1363,19 +1363,20 @@
 		       prefix, argv);
 
 	read_cache_preload(&s.pathspec);
 	refresh_index(&the_index, REFRESH_QUIET|REFRESH_UNMERGED, &s.pathspec, NULL, NULL);
 
 	fd = hold_locked_index(&index_lock, 0);
-	if (0 <= fd)
-		update_index_if_able(&the_index, &index_lock);
 
 	s.is_initial = get_sha1(s.reference, sha1) ? 1 : 0;
 	s.ignore_submodule_arg = ignore_submodule_arg;
 	wt_status_collect(&s);
 
+	if (0 <= fd)
+		update_index_if_able(&the_index, &index_lock);
+
 	if (s.relative_paths)
 		s.prefix = prefix;
 
 	switch (status_format) {
 	case STATUS_FORMAT_SHORT:
 		wt_shortstatus_print(&s);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/commit.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/commit.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/commit.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/commit.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/commit-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/commit-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/commit-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/commit-tree.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/config.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/config.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/config.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/config.c	2015-07-28 04:34:56.000000000 +0800
@@ -190,13 +190,13 @@
 			*tl = tolower(*tl);
 		for (tl = key; *tl && *tl != '.'; tl++)
 			*tl = tolower(*tl);
 
 		key_regexp = (regex_t*)xmalloc(sizeof(regex_t));
 		if (regcomp(key_regexp, key, REG_EXTENDED)) {
-			fprintf(stderr, "Invalid key pattern: %s\n", key_);
+			error("invalid key pattern: %s", key_);
 			free(key_regexp);
 			key_regexp = NULL;
 			ret = CONFIG_INVALID_PATTERN;
 			goto free_strings;
 		}
 	} else {
@@ -211,13 +211,13 @@
 			do_not_match = 1;
 			regex_++;
 		}
 
 		regexp = (regex_t*)xmalloc(sizeof(regex_t));
 		if (regcomp(regexp, regex_, REG_EXTENDED)) {
-			fprintf(stderr, "Invalid pattern: %s\n", regex_);
+			error("invalid pattern: %s", regex_);
 			free(regexp);
 			regexp = NULL;
 			ret = CONFIG_INVALID_PATTERN;
 			goto free_strings;
 		}
 	}
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/config.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/config.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/config.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/config.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/count-objects.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/count-objects.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/count-objects.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/count-objects.c	2015-07-28 04:34:56.000000000 +0800
@@ -67,14 +67,16 @@
 	};
 
 	argc = parse_options(argc, argv, prefix, opts, count_objects_usage, 0);
 	/* we do not take arguments other than flags for now */
 	if (argc)
 		usage_with_options(count_objects_usage, opts);
-	if (verbose)
+	if (verbose) {
 		report_garbage = real_report_garbage;
+		report_linked_checkout_garbage();
+	}
 
 	for_each_loose_file_in_objdir(get_object_directory(),
 				      count_loose, count_cruft, NULL, NULL);
 
 	if (verbose) {
 		struct packed_git *p;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/count-objects.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/count-objects.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/count-objects.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/count-objects.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/credential.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/credential.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/credential.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/credential.o differ
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/.depend: worktree.o.d
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/describe.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/describe.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/describe.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/describe.c	2015-07-28 04:34:56.000000000 +0800
@@ -116,31 +116,31 @@
 		hashcpy(e->sha1, sha1);
 		free(e->path);
 		e->path = xstrdup(path);
 	}
 }
 
-static int get_name(const char *path, const unsigned char *sha1, int flag, void *cb_data)
+static int get_name(const char *path, const struct object_id *oid, int flag, void *cb_data)
 {
 	int is_tag = starts_with(path, "refs/tags/");
-	unsigned char peeled[20];
+	struct object_id peeled;
 	int is_annotated, prio;
 
 	/* Reject anything outside refs/tags/ unless --all */
 	if (!all && !is_tag)
 		return 0;
 
 	/* Accept only tags that match the pattern, if given */
 	if (pattern && (!is_tag || wildmatch(pattern, path + 10, 0, NULL)))
 		return 0;
 
 	/* Is it annotated? */
-	if (!peel_ref(path, peeled)) {
-		is_annotated = !!hashcmp(sha1, peeled);
+	if (!peel_ref(path, peeled.hash)) {
+		is_annotated = !!oidcmp(oid, &peeled);
 	} else {
-		hashcpy(peeled, sha1);
+		oidcpy(&peeled, oid);
 		is_annotated = 0;
 	}
 
 	/*
 	 * By default, we only use annotated tags, but with --tags
 	 * we fall back to lightweight ones (even without --tags,
@@ -151,13 +151,13 @@
 		prio = 2;
 	else if (is_tag)
 		prio = 1;
 	else
 		prio = 0;
 
-	add_to_known_names(all ? path + 5 : path + 10, peeled, prio, sha1);
+	add_to_known_names(all ? path + 5 : path + 10, peeled.hash, prio, oid->hash);
 	return 0;
 }
 
 struct possible_tag {
 	struct commit_name *name;
 	int depth;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/describe.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/describe.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/describe.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/describe.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/diff.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/diff.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/diff-files.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/diff-files.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/diff-files.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/diff-files.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/diff-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/diff-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/diff-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/diff-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/diff.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/diff.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/diff-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/diff-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/diff-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/diff-tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fast-export.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fast-export.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fast-export.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fast-export.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fetch.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fetch.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fetch.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fetch.c	2015-07-28 04:34:56.000000000 +0800
@@ -176,19 +176,21 @@
 		get_fetch_map(remote_refs, &refspec, tail, 1);
 		for (rm = *old_tail; rm; rm = rm->next)
 			rm->fetch_head_status = FETCH_HEAD_MERGE;
 	}
 }
 
-static int add_existing(const char *refname, const unsigned char *sha1,
+static int add_existing(const char *refname, const struct object_id *oid,
 			int flag, void *cbdata)
 {
 	struct string_list *list = (struct string_list *)cbdata;
 	struct string_list_item *item = string_list_insert(list, refname);
-	item->util = xmalloc(20);
-	hashcpy(item->util, sha1);
+	struct object_id *old_oid = xmalloc(sizeof(*old_oid));
+
+	oidcpy(old_oid, oid);
+	item->util = old_oid;
 	return 0;
 }
 
 static int will_fetch(struct ref **head, const unsigned char *sha1)
 {
 	struct ref *rm = *head;
@@ -585,13 +587,14 @@
 	FILE *fp;
 	struct commit *commit;
 	int url_len, i, rc = 0;
 	struct strbuf note = STRBUF_INIT;
 	const char *what, *kind;
 	struct ref *rm;
-	char *url, *filename = dry_run ? "/dev/null" : git_path("FETCH_HEAD");
+	char *url;
+	const char *filename = dry_run ? "/dev/null" : git_path("FETCH_HEAD");
 	int want_status;
 
 	fp = fopen(filename, "a");
 	if (!fp)
 		return error(_("cannot open %s: %s\n"), filename, strerror(errno));
 
@@ -819,13 +822,13 @@
 			die(_("Refusing to fetch into current branch %s "
 			    "of non-bare repository"), current_branch->refname);
 }
 
 static int truncate_fetch_head(void)
 {
-	char *filename = git_path("FETCH_HEAD");
+	const char *filename = git_path("FETCH_HEAD");
 	FILE *fp = fopen(filename, "w");
 
 	if (!fp)
 		return error(_("cannot open %s: %s\n"), filename, strerror(errno));
 	fclose(fp);
 	return 0;
@@ -909,15 +912,16 @@
 
 	for (rm = ref_map; rm; rm = rm->next) {
 		if (rm->peer_ref) {
 			struct string_list_item *peer_item =
 				string_list_lookup(&existing_refs,
 						   rm->peer_ref->name);
-			if (peer_item)
-				hashcpy(rm->peer_ref->old_sha1,
-					peer_item->util);
+			if (peer_item) {
+				struct object_id *old_oid = peer_item->util;
+				hashcpy(rm->peer_ref->old_sha1, old_oid->hash);
+			}
 		}
 	}
 
 	if (tags == TAGS_DEFAULT && autotags)
 		transport_set_option(transport, TRANS_OPT_FOLLOWTAGS, "1");
 	if (prune) {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fetch.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fetch.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fetch.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fetch.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fetch-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fetch-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fetch-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fetch-pack.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fmt-merge-msg.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fmt-merge-msg.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fmt-merge-msg.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fmt-merge-msg.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/for-each-ref.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/for-each-ref.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/for-each-ref.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/for-each-ref.c	2015-07-28 04:34:56.000000000 +0800
@@ -71,12 +71,13 @@
 	{ "body" },
 	{ "contents" },
 	{ "contents:subject" },
 	{ "contents:body" },
 	{ "contents:signature" },
 	{ "upstream" },
+	{ "push" },
 	{ "symref" },
 	{ "flag" },
 	{ "HEAD" },
 	{ "color" },
 };
 
@@ -656,21 +657,32 @@
 
 		if (starts_with(name, "refname"))
 			refname = ref->refname;
 		else if (starts_with(name, "symref"))
 			refname = ref->symref ? ref->symref : "";
 		else if (starts_with(name, "upstream")) {
+			const char *branch_name;
 			/* only local branches may have an upstream */
-			if (!starts_with(ref->refname, "refs/heads/"))
+			if (!skip_prefix(ref->refname, "refs/heads/",
+					 &branch_name))
 				continue;
-			branch = branch_get(ref->refname + 11);
+			branch = branch_get(branch_name);
 
-			if (!branch || !branch->merge || !branch->merge[0] ||
-			    !branch->merge[0]->dst)
+			refname = branch_get_upstream(branch, NULL);
+			if (!refname)
+				continue;
+		} else if (starts_with(name, "push")) {
+			const char *branch_name;
+			if (!skip_prefix(ref->refname, "refs/heads/",
+					 &branch_name))
+				continue;
+			branch = branch_get(branch_name);
+
+			refname = branch_get_push(branch, NULL);
+			if (!refname)
 				continue;
-			refname = branch->merge[0]->dst;
 		} else if (starts_with(name, "color:")) {
 			char color[COLOR_MAXLEN] = "";
 
 			if (color_parse(name + 6, color) < 0)
 				die(_("unable to parse format"));
 			v->s = xstrdup(color);
@@ -710,17 +722,18 @@
 
 			formatp++;
 			if (!strcmp(formatp, "short"))
 				refname = shorten_unambiguous_ref(refname,
 						      warn_ambiguous_refs);
 			else if (!strcmp(formatp, "track") &&
-				 starts_with(name, "upstream")) {
+				 (starts_with(name, "upstream") ||
+				  starts_with(name, "push"))) {
 				char buf[40];
 
 				if (stat_tracking_info(branch, &num_ours,
-						       &num_theirs) != 1)
+						       &num_theirs, NULL))
 					continue;
 
 				if (!num_ours && !num_theirs)
 					v->s = "";
 				else if (!num_ours) {
 					sprintf(buf, "[behind %d]", num_theirs);
@@ -732,17 +745,18 @@
 					sprintf(buf, "[ahead %d, behind %d]",
 						num_ours, num_theirs);
 					v->s = xstrdup(buf);
 				}
 				continue;
 			} else if (!strcmp(formatp, "trackshort") &&
-				   starts_with(name, "upstream")) {
+				   (starts_with(name, "upstream") ||
+				    starts_with(name, "push"))) {
 				assert(branch);
 
 				if (stat_tracking_info(branch, &num_ours,
-							&num_theirs) != 1)
+							&num_theirs, NULL))
 					continue;
 
 				if (!num_ours && !num_theirs)
 					v->s = "=";
 				else if (!num_ours)
 					v->s = "<";
@@ -837,13 +851,14 @@
 };
 
 /*
  * A call-back given to for_each_ref().  Filter refs and keep them for
  * later object processing.
  */
-static int grab_single_ref(const char *refname, const unsigned char *sha1, int flag, void *cb_data)
+static int grab_single_ref(const char *refname, const struct object_id *oid,
+			   int flag, void *cb_data)
 {
 	struct grab_ref_cbdata *cb = cb_data;
 	struct refinfo *ref;
 	int cnt;
 
 	if (flag & REF_BAD_NAME) {
@@ -880,13 +895,13 @@
 	 * We do not open the object yet; sort may only need refname
 	 * to do its job and the resulting list may yet to be pruned
 	 * by maxcount logic.
 	 */
 	ref = xcalloc(1, sizeof(*ref));
 	ref->refname = xstrdup(refname);
-	hashcpy(ref->objectname, sha1);
+	hashcpy(ref->objectname, oid->hash);
 	ref->flag = flag;
 
 	cnt = cb->grab_cnt;
 	REALLOC_ARRAY(cb->grab_array, cnt + 1);
 	cb->grab_array[cnt++] = ref;
 	cb->grab_cnt = cnt;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/for-each-ref.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/for-each-ref.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/for-each-ref.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/for-each-ref.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fsck.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fsck.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fsck.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fsck.c	2015-07-28 04:34:56.000000000 +0800
@@ -22,13 +22,13 @@
 static int show_tags;
 static int show_unreachable;
 static int include_reflogs = 1;
 static int check_full = 1;
 static int check_strict;
 static int keep_cache_objects;
-static unsigned char head_sha1[20];
+static struct object_id head_oid;
 static const char *head_points_at;
 static int errors_found;
 static int write_lost_and_found;
 static int verbose;
 static int show_progress = -1;
 static int show_dangling = 1;
@@ -222,18 +222,18 @@
 	 */
 	if (!obj->used) {
 		if (show_dangling)
 			printf("dangling %s %s\n", typename(obj->type),
 			       sha1_to_hex(obj->sha1));
 		if (write_lost_and_found) {
-			char *filename = git_path("lost-found/%s/%s",
+			const char *filename = git_path("lost-found/%s/%s",
 				obj->type == OBJ_COMMIT ? "commit" : "other",
 				sha1_to_hex(obj->sha1));
 			FILE *f;
 
-			if (safe_create_leading_directories(filename)) {
+			if (safe_create_leading_directories_const(filename)) {
 				error("Could not create lost-found");
 				return;
 			}
 			if (!(f = fopen(filename, "w")))
 				die_errno("Could not open '%s'", filename);
 			if (obj->type == OBJ_BLOB) {
@@ -479,25 +479,27 @@
 
 	fsck_handle_reflog_sha1(refname, osha1);
 	fsck_handle_reflog_sha1(refname, nsha1);
 	return 0;
 }
 
-static int fsck_handle_reflog(const char *logname, const unsigned char *sha1, int flag, void *cb_data)
+static int fsck_handle_reflog(const char *logname, const struct object_id *oid,
+			      int flag, void *cb_data)
 {
 	for_each_reflog_ent(logname, fsck_handle_reflog_ent, (void *)logname);
 	return 0;
 }
 
-static int fsck_handle_ref(const char *refname, const unsigned char *sha1, int flag, void *cb_data)
+static int fsck_handle_ref(const char *refname, const struct object_id *oid,
+			   int flag, void *cb_data)
 {
 	struct object *obj;
 
-	obj = parse_object(sha1);
+	obj = parse_object(oid->hash);
 	if (!obj) {
-		error("%s: invalid sha1 pointer %s", refname, sha1_to_hex(sha1));
+		error("%s: invalid sha1 pointer %s", refname, oid_to_hex(oid));
 		errors_found |= ERROR_REACHABLE;
 		/* We'll continue with the rest despite the error.. */
 		return 0;
 	}
 	if (obj->type != OBJ_COMMIT && is_branch(refname))
 		error("%s: not a commit", refname);
@@ -507,14 +509,14 @@
 
 	return 0;
 }
 
 static void get_default_heads(void)
 {
-	if (head_points_at && !is_null_sha1(head_sha1))
-		fsck_handle_ref("HEAD", head_sha1, 0, NULL);
+	if (head_points_at && !is_null_oid(&head_oid))
+		fsck_handle_ref("HEAD", &head_oid, 0, NULL);
 	for_each_rawref(fsck_handle_ref, NULL);
 	if (include_reflogs)
 		for_each_reflog(fsck_handle_reflog, NULL);
 
 	/*
 	 * Not having any default heads isn't really fatal, but
@@ -559,22 +561,22 @@
 	int flag;
 	int null_is_error = 0;
 
 	if (verbose)
 		fprintf(stderr, "Checking HEAD link\n");
 
-	head_points_at = resolve_ref_unsafe("HEAD", 0, head_sha1, &flag);
+	head_points_at = resolve_ref_unsafe("HEAD", 0, head_oid.hash, &flag);
 	if (!head_points_at)
 		return error("Invalid HEAD");
 	if (!strcmp(head_points_at, "HEAD"))
 		/* detached HEAD */
 		null_is_error = 1;
 	else if (!starts_with(head_points_at, "refs/heads/"))
 		return error("HEAD points to something strange (%s)",
 			     head_points_at);
-	if (is_null_sha1(head_sha1)) {
+	if (is_null_oid(&head_oid)) {
 		if (null_is_error)
 			return error("HEAD: detached HEAD points at nothing");
 		fprintf(stderr, "notice: HEAD points to an unborn branch (%s)\n",
 			head_points_at + 11);
 	}
 	return 0;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fsck.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fsck.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fsck.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fsck.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/gc.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/gc.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/gc.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/gc.c	2015-07-28 04:34:56.000000000 +0800
@@ -30,17 +30,19 @@
 static int aggressive_depth = 250;
 static int aggressive_window = 250;
 static int gc_auto_threshold = 6700;
 static int gc_auto_pack_limit = 50;
 static int detach_auto = 1;
 static const char *prune_expire = "2.weeks.ago";
+static const char *prune_worktrees_expire = "3.months.ago";
 
 static struct argv_array pack_refs_cmd = ARGV_ARRAY_INIT;
 static struct argv_array reflog = ARGV_ARRAY_INIT;
 static struct argv_array repack = ARGV_ARRAY_INIT;
 static struct argv_array prune = ARGV_ARRAY_INIT;
+static struct argv_array prune_worktrees = ARGV_ARRAY_INIT;
 static struct argv_array rerere = ARGV_ARRAY_INIT;
 
 static char *pidfile;
 
 static void remove_pidfile(void)
 {
@@ -52,12 +54,23 @@
 {
 	remove_pidfile();
 	sigchain_pop(signo);
 	raise(signo);
 }
 
+static void git_config_date_string(const char *key, const char **output)
+{
+	if (git_config_get_string_const(key, output))
+		return;
+	if (strcmp(*output, "now")) {
+		unsigned long now = approxidate("now");
+		if (approxidate(*output) >= now)
+			git_die_config(key, _("Invalid %s: '%s'"), key, *output);
+	}
+}
+
 static void gc_config(void)
 {
 	const char *value;
 
 	if (!git_config_get_value("gc.packrefs", &value)) {
 		if (value && !strcmp(value, "notbare"))
@@ -68,22 +81,14 @@
 
 	git_config_get_int("gc.aggressivewindow", &aggressive_window);
 	git_config_get_int("gc.aggressivedepth", &aggressive_depth);
 	git_config_get_int("gc.auto", &gc_auto_threshold);
 	git_config_get_int("gc.autopacklimit", &gc_auto_pack_limit);
 	git_config_get_bool("gc.autodetach", &detach_auto);
-
-	if (!git_config_get_string_const("gc.pruneexpire", &prune_expire)) {
-		if (strcmp(prune_expire, "now")) {
-			unsigned long now = approxidate("now");
-			if (approxidate(prune_expire) >= now) {
-				git_die_config("gc.pruneexpire", _("Invalid gc.pruneexpire: '%s'"),
-						prune_expire);
-			}
-		}
-	}
+	git_config_date_string("gc.pruneexpire", &prune_expire);
+	git_config_date_string("gc.pruneworktreesexpire", &prune_worktrees_expire);
 	git_config(git_default_config, NULL);
 }
 
 static int too_many_loose_objects(void)
 {
 	/*
@@ -284,13 +289,14 @@
 	if (argc == 2 && !strcmp(argv[1], "-h"))
 		usage_with_options(builtin_gc_usage, builtin_gc_options);
 
 	argv_array_pushl(&pack_refs_cmd, "pack-refs", "--all", "--prune", NULL);
 	argv_array_pushl(&reflog, "reflog", "expire", "--all", NULL);
 	argv_array_pushl(&repack, "repack", "-d", "-l", NULL);
-	argv_array_pushl(&prune, "prune", "--expire", NULL );
+	argv_array_pushl(&prune, "prune", "--expire", NULL);
+	argv_array_pushl(&prune_worktrees, "worktree", "prune", "--expire", NULL);
 	argv_array_pushl(&rerere, "rerere", "gc", NULL);
 
 	gc_config();
 
 	if (pack_refs < 0)
 		pack_refs = !is_bare_repository();
@@ -354,12 +360,18 @@
 		if (quiet)
 			argv_array_push(&prune, "--no-progress");
 		if (run_command_v_opt(prune.argv, RUN_GIT_CMD))
 			return error(FAILED_RUN, prune.argv[0]);
 	}
 
+	if (prune_worktrees_expire) {
+		argv_array_push(&prune_worktrees, prune_worktrees_expire);
+		if (run_command_v_opt(prune_worktrees.argv, RUN_GIT_CMD))
+			return error(FAILED_RUN, prune_worktrees.argv[0]);
+	}
+
 	if (run_command_v_opt(rerere.argv, RUN_GIT_CMD))
 		return error(FAILED_RUN, rerere.argv[0]);
 
 	if (auto_gc && too_many_loose_objects())
 		warning(_("There are too many unreachable loose objects; "
 			"run 'git prune' to remove them."));
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/gc.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/gc.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/gc.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/gc.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/get-tar-commit-id.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/get-tar-commit-id.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/get-tar-commit-id.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/get-tar-commit-id.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/grep.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/grep.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/grep.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/grep.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/hash-object.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/hash-object.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/hash-object.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/hash-object.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/help.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/help.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/help.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/help.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/index-pack.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/index-pack.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/index-pack.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/index-pack.c	2015-07-28 04:34:56.000000000 +0800
@@ -15,22 +15,20 @@
 static const char index_pack_usage[] =
 "git index-pack [-v] [-o <index-file>] [--keep | --keep=<msg>] [--verify] [--strict] (<pack-file> | --stdin [--fix-thin] [<pack-file>])";
 
 struct object_entry {
 	struct pack_idx_entry idx;
 	unsigned long size;
-	unsigned int hdr_size;
-	enum object_type type;
-	enum object_type real_type;
-	unsigned delta_depth;
-	int base_object_no;
+	unsigned char hdr_size;
+	signed char type;
+	signed char real_type;
 };
 
-union delta_base {
-	unsigned char sha1[20];
-	off_t offset;
+struct object_stat {
+	unsigned delta_depth;
+	int base_object_no;
 };
 
 struct base_data {
 	struct base_data *base;
 	struct base_data *child;
 	struct object_entry *obj;
@@ -46,31 +44,34 @@
 #endif
 	struct base_data *base_cache;
 	size_t base_cache_used;
 	int pack_fd;
 };
 
-/*
- * Even if sizeof(union delta_base) == 24 on 64-bit archs, we really want
- * to memcmp() only the first 20 bytes.
- */
-#define UNION_BASE_SZ	20
-
 #define FLAG_LINK (1u<<20)
 #define FLAG_CHECKED (1u<<21)
 
-struct delta_entry {
-	union delta_base base;
+struct ofs_delta_entry {
+	off_t offset;
+	int obj_no;
+};
+
+struct ref_delta_entry {
+	unsigned char sha1[20];
 	int obj_no;
 };
 
 static struct object_entry *objects;
-static struct delta_entry *deltas;
+static struct object_stat *obj_stat;
+static struct ofs_delta_entry *ofs_deltas;
+static struct ref_delta_entry *ref_deltas;
 static struct thread_local nothread_data;
 static int nr_objects;
-static int nr_deltas;
+static int nr_ofs_deltas;
+static int nr_ref_deltas;
+static int ref_deltas_alloc;
 static int nr_resolved_deltas;
 static int nr_threads;
 
 static int from_stdin;
 static int strict;
 static int do_fsck_object;
@@ -473,13 +474,14 @@
 	if (sha1)
 		git_SHA1_Final(sha1, &c);
 	return buf == fixed_buf ? NULL : buf;
 }
 
 static void *unpack_raw_entry(struct object_entry *obj,
-			      union delta_base *delta_base,
+			      off_t *ofs_offset,
+			      unsigned char *ref_sha1,
 			      unsigned char *sha1)
 {
 	unsigned char *p;
 	unsigned long size, c;
 	off_t base_offset;
 	unsigned shift;
@@ -502,17 +504,16 @@
 		shift += 7;
 	}
 	obj->size = size;
 
 	switch (obj->type) {
 	case OBJ_REF_DELTA:
-		hashcpy(delta_base->sha1, fill(20));
+		hashcpy(ref_sha1, fill(20));
 		use(20);
 		break;
 	case OBJ_OFS_DELTA:
-		memset(delta_base, 0, sizeof(*delta_base));
 		p = fill(1);
 		c = *p;
 		use(1);
 		base_offset = c & 127;
 		while (c & 128) {
 			base_offset += 1;
@@ -520,14 +521,14 @@
 				bad_object(obj->idx.offset, _("offset value overflow for delta base object"));
 			p = fill(1);
 			c = *p;
 			use(1);
 			base_offset = (base_offset << 7) + (c & 127);
 		}
-		delta_base->offset = obj->idx.offset - base_offset;
-		if (delta_base->offset <= 0 || delta_base->offset >= obj->idx.offset)
+		*ofs_offset = obj->idx.offset - base_offset;
+		if (*ofs_offset <= 0 || *ofs_offset >= obj->idx.offset)
 			bad_object(obj->idx.offset, _("delta base offset is out of bound"));
 		break;
 	case OBJ_COMMIT:
 	case OBJ_TREE:
 	case OBJ_BLOB:
 	case OBJ_TAG:
@@ -605,61 +606,116 @@
 
 static void *get_data_from_pack(struct object_entry *obj)
 {
 	return unpack_data(obj, NULL, NULL);
 }
 
-static int compare_delta_bases(const union delta_base *base1,
-			       const union delta_base *base2,
-			       enum object_type type1,
-			       enum object_type type2)
+static int compare_ofs_delta_bases(off_t offset1, off_t offset2,
+				   enum object_type type1,
+				   enum object_type type2)
+{
+	int cmp = type1 - type2;
+	if (cmp)
+		return cmp;
+	return offset1 < offset2 ? -1 :
+	       offset1 > offset2 ?  1 :
+	       0;
+}
+
+static int find_ofs_delta(const off_t offset, enum object_type type)
+{
+	int first = 0, last = nr_ofs_deltas;
+
+	while (first < last) {
+		int next = (first + last) / 2;
+		struct ofs_delta_entry *delta = &ofs_deltas[next];
+		int cmp;
+
+		cmp = compare_ofs_delta_bases(offset, delta->offset,
+					      type, objects[delta->obj_no].type);
+		if (!cmp)
+			return next;
+		if (cmp < 0) {
+			last = next;
+			continue;
+		}
+		first = next+1;
+	}
+	return -first-1;
+}
+
+static void find_ofs_delta_children(off_t offset,
+				    int *first_index, int *last_index,
+				    enum object_type type)
+{
+	int first = find_ofs_delta(offset, type);
+	int last = first;
+	int end = nr_ofs_deltas - 1;
+
+	if (first < 0) {
+		*first_index = 0;
+		*last_index = -1;
+		return;
+	}
+	while (first > 0 && ofs_deltas[first - 1].offset == offset)
+		--first;
+	while (last < end && ofs_deltas[last + 1].offset == offset)
+		++last;
+	*first_index = first;
+	*last_index = last;
+}
+
+static int compare_ref_delta_bases(const unsigned char *sha1,
+				   const unsigned char *sha2,
+				   enum object_type type1,
+				   enum object_type type2)
 {
 	int cmp = type1 - type2;
 	if (cmp)
 		return cmp;
-	return memcmp(base1, base2, UNION_BASE_SZ);
+	return hashcmp(sha1, sha2);
 }
 
-static int find_delta(const union delta_base *base, enum object_type type)
+static int find_ref_delta(const unsigned char *sha1, enum object_type type)
 {
-	int first = 0, last = nr_deltas;
+	int first = 0, last = nr_ref_deltas;
 
         while (first < last) {
                 int next = (first + last) / 2;
-                struct delta_entry *delta = &deltas[next];
+		struct ref_delta_entry *delta = &ref_deltas[next];
                 int cmp;
 
-		cmp = compare_delta_bases(base, &delta->base,
-					  type, objects[delta->obj_no].type);
+		cmp = compare_ref_delta_bases(sha1, delta->sha1,
+					      type, objects[delta->obj_no].type);
                 if (!cmp)
                         return next;
                 if (cmp < 0) {
                         last = next;
                         continue;
                 }
                 first = next+1;
         }
         return -first-1;
 }
 
-static void find_delta_children(const union delta_base *base,
-				int *first_index, int *last_index,
-				enum object_type type)
+static void find_ref_delta_children(const unsigned char *sha1,
+				    int *first_index, int *last_index,
+				    enum object_type type)
 {
-	int first = find_delta(base, type);
+	int first = find_ref_delta(sha1, type);
 	int last = first;
-	int end = nr_deltas - 1;
+	int end = nr_ref_deltas - 1;
 
 	if (first < 0) {
 		*first_index = 0;
 		*last_index = -1;
 		return;
 	}
-	while (first > 0 && !memcmp(&deltas[first - 1].base, base, UNION_BASE_SZ))
+	while (first > 0 && !hashcmp(ref_deltas[first - 1].sha1, sha1))
 		--first;
-	while (last < end && !memcmp(&deltas[last + 1].base, base, UNION_BASE_SZ))
+	while (last < end && !hashcmp(ref_deltas[last + 1].sha1, sha1))
 		++last;
 	*first_index = first;
 	*last_index = last;
 }
 
 struct compare_data {
@@ -870,19 +926,21 @@
 static void resolve_delta(struct object_entry *delta_obj,
 			  struct base_data *base, struct base_data *result)
 {
 	void *base_data, *delta_data;
 
 	if (show_stat) {
-		delta_obj->delta_depth = base->obj->delta_depth + 1;
+		int i = delta_obj - objects;
+		int j = base->obj - objects;
+		obj_stat[i].delta_depth = obj_stat[j].delta_depth + 1;
 		deepest_delta_lock();
-		if (deepest_delta < delta_obj->delta_depth)
-			deepest_delta = delta_obj->delta_depth;
+		if (deepest_delta < obj_stat[i].delta_depth)
+			deepest_delta = obj_stat[i].delta_depth;
 		deepest_delta_unlock();
+		obj_stat[i].base_object_no = j;
 	}
-	delta_obj->base_object_no = base->obj - objects;
 	delta_data = get_data_from_pack(delta_obj);
 	base_data = get_base_data(base);
 	result->obj = delta_obj;
 	result->data = patch_delta(base_data, base->size,
 				   delta_data, delta_obj->size, &result->size);
 	free(delta_data);
@@ -899,13 +957,13 @@
 
 /*
  * Standard boolean compare-and-swap: atomically check whether "*type" is
  * "want"; if so, swap in "set" and return true. Otherwise, leave it untouched
  * and return false.
  */
-static int compare_and_swap_type(enum object_type *type,
+static int compare_and_swap_type(signed char *type,
 				 enum object_type want,
 				 enum object_type set)
 {
 	enum object_type old;
 
 	type_cas_lock();
@@ -918,33 +976,30 @@
 }
 
 static struct base_data *find_unresolved_deltas_1(struct base_data *base,
 						  struct base_data *prev_base)
 {
 	if (base->ref_last == -1 && base->ofs_last == -1) {
-		union delta_base base_spec;
-
-		hashcpy(base_spec.sha1, base->obj->idx.sha1);
-		find_delta_children(&base_spec,
-				    &base->ref_first, &base->ref_last, OBJ_REF_DELTA);
-
-		memset(&base_spec, 0, sizeof(base_spec));
-		base_spec.offset = base->obj->idx.offset;
-		find_delta_children(&base_spec,
-				    &base->ofs_first, &base->ofs_last, OBJ_OFS_DELTA);
+		find_ref_delta_children(base->obj->idx.sha1,
+					&base->ref_first, &base->ref_last,
+					OBJ_REF_DELTA);
+
+		find_ofs_delta_children(base->obj->idx.offset,
+					&base->ofs_first, &base->ofs_last,
+					OBJ_OFS_DELTA);
 
 		if (base->ref_last == -1 && base->ofs_last == -1) {
 			free(base->data);
 			return NULL;
 		}
 
 		link_base_data(prev_base, base);
 	}
 
 	if (base->ref_first <= base->ref_last) {
-		struct object_entry *child = objects + deltas[base->ref_first].obj_no;
+		struct object_entry *child = objects + ref_deltas[base->ref_first].obj_no;
 		struct base_data *result = alloc_base_data();
 
 		if (!compare_and_swap_type(&child->real_type, OBJ_REF_DELTA,
 					   base->obj->real_type))
 			die("BUG: child->real_type != OBJ_REF_DELTA");
 
@@ -954,13 +1009,13 @@
 
 		base->ref_first++;
 		return result;
 	}
 
 	if (base->ofs_first <= base->ofs_last) {
-		struct object_entry *child = objects + deltas[base->ofs_first].obj_no;
+		struct object_entry *child = objects + ofs_deltas[base->ofs_first].obj_no;
 		struct base_data *result = alloc_base_data();
 
 		assert(child->real_type == OBJ_OFS_DELTA);
 		child->real_type = base->obj->real_type;
 		resolve_delta(child, base, result);
 		if (base->ofs_first == base->ofs_last)
@@ -990,21 +1045,28 @@
 				return;
 			prev_base = base->base;
 		}
 	}
 }
 
-static int compare_delta_entry(const void *a, const void *b)
+static int compare_ofs_delta_entry(const void *a, const void *b)
 {
-	const struct delta_entry *delta_a = a;
-	const struct delta_entry *delta_b = b;
+	const struct ofs_delta_entry *delta_a = a;
+	const struct ofs_delta_entry *delta_b = b;
 
-	/* group by type (ref vs ofs) and then by value (sha-1 or offset) */
-	return compare_delta_bases(&delta_a->base, &delta_b->base,
-				   objects[delta_a->obj_no].type,
-				   objects[delta_b->obj_no].type);
+	return delta_a->offset < delta_b->offset ? -1 :
+	       delta_a->offset > delta_b->offset ?  1 :
+	       0;
+}
+
+static int compare_ref_delta_entry(const void *a, const void *b)
+{
+	const struct ref_delta_entry *delta_a = a;
+	const struct ref_delta_entry *delta_b = b;
+
+	return hashcmp(delta_a->sha1, delta_b->sha1);
 }
 
 static void resolve_base(struct object_entry *obj)
 {
 	struct base_data *base_obj = alloc_base_data();
 	base_obj->obj = obj;
@@ -1044,27 +1106,34 @@
  * - calculate SHA1 of all non-delta objects;
  * - remember base (SHA1 or offset) for all deltas.
  */
 static void parse_pack_objects(unsigned char *sha1)
 {
 	int i, nr_delays = 0;
-	struct delta_entry *delta = deltas;
+	struct ofs_delta_entry *ofs_delta = ofs_deltas;
+	unsigned char ref_delta_sha1[20];
 	struct stat st;
 
 	if (verbose)
 		progress = start_progress(
 				from_stdin ? _("Receiving objects") : _("Indexing objects"),
 				nr_objects);
 	for (i = 0; i < nr_objects; i++) {
 		struct object_entry *obj = &objects[i];
-		void *data = unpack_raw_entry(obj, &delta->base, obj->idx.sha1);
+		void *data = unpack_raw_entry(obj, &ofs_delta->offset,
+					      ref_delta_sha1, obj->idx.sha1);
 		obj->real_type = obj->type;
-		if (is_delta_type(obj->type)) {
-			nr_deltas++;
-			delta->obj_no = i;
-			delta++;
+		if (obj->type == OBJ_OFS_DELTA) {
+			nr_ofs_deltas++;
+			ofs_delta->obj_no = i;
+			ofs_delta++;
+		} else if (obj->type == OBJ_REF_DELTA) {
+			ALLOC_GROW(ref_deltas, nr_ref_deltas + 1, ref_deltas_alloc);
+			hashcpy(ref_deltas[nr_ref_deltas].sha1, ref_delta_sha1);
+			ref_deltas[nr_ref_deltas].obj_no = i;
+			nr_ref_deltas++;
 		} else if (!data) {
 			/* large blobs, check later */
 			obj->real_type = OBJ_BAD;
 			nr_delays++;
 		} else
 			sha1_object(data, NULL, obj->size, obj->type, obj->idx.sha1);
@@ -1109,21 +1178,24 @@
  *   for some more deltas.
  */
 static void resolve_deltas(void)
 {
 	int i;
 
-	if (!nr_deltas)
+	if (!nr_ofs_deltas && !nr_ref_deltas)
 		return;
 
 	/* Sort deltas by base SHA1/offset for fast searching */
-	qsort(deltas, nr_deltas, sizeof(struct delta_entry),
-	      compare_delta_entry);
+	qsort(ofs_deltas, nr_ofs_deltas, sizeof(struct ofs_delta_entry),
+	      compare_ofs_delta_entry);
+	qsort(ref_deltas, nr_ref_deltas, sizeof(struct ref_delta_entry),
+	      compare_ref_delta_entry);
 
 	if (verbose)
-		progress = start_progress(_("Resolving deltas"), nr_deltas);
+		progress = start_progress(_("Resolving deltas"),
+					  nr_ref_deltas + nr_ofs_deltas);
 
 #ifndef NO_PTHREADS
 	nr_dispatched = 0;
 	if (nr_threads > 1 || getenv("GIT_FORCE_THREADS")) {
 		init_thread();
 		for (i = 0; i < nr_threads; i++) {
@@ -1152,35 +1224,35 @@
 
 /*
  * Third pass:
  * - append objects to convert thin pack to full pack if required
  * - write the final 20-byte SHA-1
  */
-static void fix_unresolved_deltas(struct sha1file *f, int nr_unresolved);
+static void fix_unresolved_deltas(struct sha1file *f);
 static void conclude_pack(int fix_thin_pack, const char *curr_pack, unsigned char *pack_sha1)
 {
-	if (nr_deltas == nr_resolved_deltas) {
+	if (nr_ref_deltas + nr_ofs_deltas == nr_resolved_deltas) {
 		stop_progress(&progress);
 		/* Flush remaining pack final 20-byte SHA1. */
 		flush();
 		return;
 	}
 
 	if (fix_thin_pack) {
 		struct sha1file *f;
 		unsigned char read_sha1[20], tail_sha1[20];
 		struct strbuf msg = STRBUF_INIT;
-		int nr_unresolved = nr_deltas - nr_resolved_deltas;
+		int nr_unresolved = nr_ofs_deltas + nr_ref_deltas - nr_resolved_deltas;
 		int nr_objects_initial = nr_objects;
 		if (nr_unresolved <= 0)
 			die(_("confusion beyond insanity"));
 		REALLOC_ARRAY(objects, nr_objects + nr_unresolved + 1);
 		memset(objects + nr_objects + 1, 0,
 		       nr_unresolved * sizeof(*objects));
 		f = sha1fd(output_fd, curr_pack);
-		fix_unresolved_deltas(f, nr_unresolved);
+		fix_unresolved_deltas(f);
 		strbuf_addf(&msg, _("completed with %d local objects"),
 			    nr_objects - nr_objects_initial);
 		stop_progress_msg(&progress, msg.buf);
 		strbuf_release(&msg);
 		sha1close(f, tail_sha1, 0);
 		hashcpy(read_sha1, pack_sha1);
@@ -1188,17 +1260,17 @@
 					 curr_pack, nr_objects,
 					 read_sha1, consumed_bytes-20);
 		if (hashcmp(read_sha1, tail_sha1) != 0)
 			die(_("Unexpected tail checksum for %s "
 			      "(disk corruption?)"), curr_pack);
 	}
-	if (nr_deltas != nr_resolved_deltas)
+	if (nr_ofs_deltas + nr_ref_deltas != nr_resolved_deltas)
 		die(Q_("pack has %d unresolved delta",
 		       "pack has %d unresolved deltas",
-		       nr_deltas - nr_resolved_deltas),
-		    nr_deltas - nr_resolved_deltas);
+		       nr_ofs_deltas + nr_ref_deltas - nr_resolved_deltas),
+		    nr_ofs_deltas + nr_ref_deltas - nr_resolved_deltas);
 }
 
 static int write_compressed(struct sha1file *f, void *in, unsigned int size)
 {
 	git_zstream stream;
 	int status;
@@ -1251,55 +1323,52 @@
 	hashcpy(obj->idx.sha1, sha1);
 	return obj;
 }
 
 static int delta_pos_compare(const void *_a, const void *_b)
 {
-	struct delta_entry *a = *(struct delta_entry **)_a;
-	struct delta_entry *b = *(struct delta_entry **)_b;
+	struct ref_delta_entry *a = *(struct ref_delta_entry **)_a;
+	struct ref_delta_entry *b = *(struct ref_delta_entry **)_b;
 	return a->obj_no - b->obj_no;
 }
 
-static void fix_unresolved_deltas(struct sha1file *f, int nr_unresolved)
+static void fix_unresolved_deltas(struct sha1file *f)
 {
-	struct delta_entry **sorted_by_pos;
-	int i, n = 0;
+	struct ref_delta_entry **sorted_by_pos;
+	int i;
 
 	/*
 	 * Since many unresolved deltas may well be themselves base objects
 	 * for more unresolved deltas, we really want to include the
 	 * smallest number of base objects that would cover as much delta
 	 * as possible by picking the
 	 * trunc deltas first, allowing for other deltas to resolve without
 	 * additional base objects.  Since most base objects are to be found
 	 * before deltas depending on them, a good heuristic is to start
 	 * resolving deltas in the same order as their position in the pack.
 	 */
-	sorted_by_pos = xmalloc(nr_unresolved * sizeof(*sorted_by_pos));
-	for (i = 0; i < nr_deltas; i++) {
-		if (objects[deltas[i].obj_no].real_type != OBJ_REF_DELTA)
-			continue;
-		sorted_by_pos[n++] = &deltas[i];
-	}
-	qsort(sorted_by_pos, n, sizeof(*sorted_by_pos), delta_pos_compare);
+	sorted_by_pos = xmalloc(nr_ref_deltas * sizeof(*sorted_by_pos));
+	for (i = 0; i < nr_ref_deltas; i++)
+		sorted_by_pos[i] = &ref_deltas[i];
+	qsort(sorted_by_pos, nr_ref_deltas, sizeof(*sorted_by_pos), delta_pos_compare);
 
-	for (i = 0; i < n; i++) {
-		struct delta_entry *d = sorted_by_pos[i];
+	for (i = 0; i < nr_ref_deltas; i++) {
+		struct ref_delta_entry *d = sorted_by_pos[i];
 		enum object_type type;
 		struct base_data *base_obj = alloc_base_data();
 
 		if (objects[d->obj_no].real_type != OBJ_REF_DELTA)
 			continue;
-		base_obj->data = read_sha1_file(d->base.sha1, &type, &base_obj->size);
+		base_obj->data = read_sha1_file(d->sha1, &type, &base_obj->size);
 		if (!base_obj->data)
 			continue;
 
-		if (check_sha1_signature(d->base.sha1, base_obj->data,
+		if (check_sha1_signature(d->sha1, base_obj->data,
 				base_obj->size, typename(type)))
-			die(_("local object %s is corrupt"), sha1_to_hex(d->base.sha1));
-		base_obj->obj = append_obj_to_pack(f, d->base.sha1,
+			die(_("local object %s is corrupt"), sha1_to_hex(d->sha1));
+		base_obj->obj = append_obj_to_pack(f, d->sha1,
 					base_obj->data, base_obj->size, type);
 		find_unresolved_deltas(base_obj);
 		display_progress(progress, nr_resolved_deltas);
 	}
 	free(sorted_by_pos);
 }
@@ -1485,33 +1554,33 @@
 	close_pack_index(p);
 	free(p);
 }
 
 static void show_pack_info(int stat_only)
 {
-	int i, baseobjects = nr_objects - nr_deltas;
+	int i, baseobjects = nr_objects - nr_ref_deltas - nr_ofs_deltas;
 	unsigned long *chain_histogram = NULL;
 
 	if (deepest_delta)
 		chain_histogram = xcalloc(deepest_delta, sizeof(unsigned long));
 
 	for (i = 0; i < nr_objects; i++) {
 		struct object_entry *obj = &objects[i];
 
 		if (is_delta_type(obj->type))
-			chain_histogram[obj->delta_depth - 1]++;
+			chain_histogram[obj_stat[i].delta_depth - 1]++;
 		if (stat_only)
 			continue;
 		printf("%s %-6s %lu %lu %"PRIuMAX,
 		       sha1_to_hex(obj->idx.sha1),
 		       typename(obj->real_type), obj->size,
 		       (unsigned long)(obj[1].idx.offset - obj->idx.offset),
 		       (uintmax_t)obj->idx.offset);
 		if (is_delta_type(obj->type)) {
-			struct object_entry *bobj = &objects[obj->base_object_no];
-			printf(" %u %s", obj->delta_depth, sha1_to_hex(bobj->idx.sha1));
+			struct object_entry *bobj = &objects[obj_stat[i].base_object_no];
+			printf(" %u %s", obj_stat[i].delta_depth, sha1_to_hex(bobj->idx.sha1));
 		}
 		putchar('\n');
 	}
 
 	if (baseobjects)
 		printf_ln(Q_("non delta: %d object",
@@ -1668,17 +1737,20 @@
 	}
 #endif
 
 	curr_pack = open_pack_file(pack_name);
 	parse_pack_header();
 	objects = xcalloc(nr_objects + 1, sizeof(struct object_entry));
-	deltas = xcalloc(nr_objects, sizeof(struct delta_entry));
+	if (show_stat)
+		obj_stat = xcalloc(nr_objects + 1, sizeof(struct object_stat));
+	ofs_deltas = xcalloc(nr_objects, sizeof(struct ofs_delta_entry));
 	parse_pack_objects(pack_sha1);
 	resolve_deltas();
 	conclude_pack(fix_thin_pack, curr_pack, pack_sha1);
-	free(deltas);
+	free(ofs_deltas);
+	free(ref_deltas);
 	if (strict)
 		foreign_nr = check_objects();
 
 	if (show_stat)
 		show_pack_info(stat_only);
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/index-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/index-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/index-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/index-pack.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/init-db.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/init-db.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/init-db.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/init-db.c	2015-07-28 04:34:56.000000000 +0800
@@ -359,13 +359,12 @@
 	return 0;
 }
 
 static void separate_git_dir(const char *git_dir)
 {
 	struct stat st;
-	FILE *fp;
 
 	if (!stat(git_link, &st)) {
 		const char *src;
 
 		if (S_ISREG(st.st_mode))
 			src = read_gitfile(git_link);
@@ -375,17 +374,13 @@
 			die(_("unable to handle file type %d"), (int)st.st_mode);
 
 		if (rename(src, git_dir))
 			die_errno(_("unable to move %s to %s"), src, git_dir);
 	}
 
-	fp = fopen(git_link, "w");
-	if (!fp)
-		die(_("Could not create git link %s"), git_link);
-	fprintf(fp, "gitdir: %s\n", git_dir);
-	fclose(fp);
+	write_file(git_link, 1, "gitdir: %s\n", git_dir);
 }
 
 int init_db(const char *template_dir, unsigned int flags)
 {
 	int reinit;
 	const char *git_dir = get_git_dir();
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/init-db.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/init-db.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/init-db.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/init-db.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/interpret-trailers.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/interpret-trailers.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/interpret-trailers.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/interpret-trailers.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/log.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/log.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/log.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/log.c	2015-07-28 04:34:56.000000000 +0800
@@ -1629,22 +1629,19 @@
 		/* FALLTHROUGH */
 	case 1:
 		upstream = argv[0];
 		break;
 	default:
 		current_branch = branch_get(NULL);
-		if (!current_branch || !current_branch->merge
-					|| !current_branch->merge[0]
-					|| !current_branch->merge[0]->dst) {
+		upstream = branch_get_upstream(current_branch, NULL);
+		if (!upstream) {
 			fprintf(stderr, _("Could not find a tracked"
 					" remote branch, please"
 					" specify <upstream> manually.\n"));
 			usage_with_options(cherry_usage, options);
 		}
-
-		upstream = current_branch->merge[0]->dst;
 	}
 
 	init_revisions(&revs, prefix);
 	revs.max_parents = 1;
 
 	if (add_pending_commit(head, &revs, 0))
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/log.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/log.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/log.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/log.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/ls-files.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/ls-files.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/ls-files.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/ls-files.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/ls-remote.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/ls-remote.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/ls-remote.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/ls-remote.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/ls-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/ls-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/ls-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/ls-tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mailinfo.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mailinfo.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mailinfo.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mailinfo.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mailsplit.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mailsplit.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mailsplit.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mailsplit.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-base.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-base.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-base.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-base.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge.c	2015-07-28 04:34:56.000000000 +0800
@@ -489,46 +489,24 @@
 			else if (len == 1)
 				early = 1; /* "name~" is "name~1"! */
 		}
 	}
 	if (len) {
 		struct strbuf truname = STRBUF_INIT;
-		strbuf_addstr(&truname, "refs/heads/");
-		strbuf_addstr(&truname, remote);
+		strbuf_addf(&truname, "refs/heads/%s", remote);
 		strbuf_setlen(&truname, truname.len - len);
 		if (ref_exists(truname.buf)) {
 			strbuf_addf(msg,
 				    "%s\t\tbranch '%s'%s of .\n",
 				    sha1_to_hex(remote_head->object.sha1),
 				    truname.buf + 11,
 				    (early ? " (early part)" : ""));
 			strbuf_release(&truname);
 			goto cleanup;
 		}
-	}
-
-	if (!strcmp(remote, "FETCH_HEAD") &&
-			!access(git_path("FETCH_HEAD"), R_OK)) {
-		const char *filename;
-		FILE *fp;
-		struct strbuf line = STRBUF_INIT;
-		char *ptr;
-
-		filename = git_path("FETCH_HEAD");
-		fp = fopen(filename, "r");
-		if (!fp)
-			die_errno(_("could not open '%s' for reading"),
-				  filename);
-		strbuf_getline(&line, fp, '\n');
-		fclose(fp);
-		ptr = strstr(line.buf, "\tnot-for-merge\t");
-		if (ptr)
-			strbuf_remove(&line, ptr-line.buf+1, 13);
-		strbuf_addbuf(msg, &line);
-		strbuf_release(&line);
-		goto cleanup;
+		strbuf_release(&truname);
 	}
 
 	if (remote_head->util) {
 		struct merge_remote_desc *desc;
 		desc = merge_remote_util(remote_head);
 		if (desc && desc->obj && desc->obj->type == OBJ_TAG) {
@@ -952,13 +930,13 @@
 	struct branch *branch = branch_get(NULL);
 	int i;
 	const char **args;
 
 	if (!branch)
 		die(_("No current branch."));
-	if (!branch->remote)
+	if (!branch->remote_name)
 		die(_("No remote for the current branch."));
 	if (!branch->merge_nr)
 		die(_("No default upstream defined for the current branch."));
 
 	args = xcalloc(branch->merge_nr + 1, sizeof(char *));
 	for (i = 0; i < branch->merge_nr; i++) {
@@ -1034,44 +1012,152 @@
 		isatty(0) && isatty(1) &&
 		st_stdin.st_dev == st_stdout.st_dev &&
 		st_stdin.st_ino == st_stdout.st_ino &&
 		st_stdin.st_mode == st_stdout.st_mode);
 }
 
-static struct commit_list *collect_parents(struct commit *head_commit,
-					   int *head_subsumed,
-					   int argc, const char **argv)
+static struct commit_list *reduce_parents(struct commit *head_commit,
+					  int *head_subsumed,
+					  struct commit_list *remoteheads)
 {
-	int i;
-	struct commit_list *remoteheads = NULL, *parents, *next;
-	struct commit_list **remotes = &remoteheads;
+	struct commit_list *parents, *next, **remotes = &remoteheads;
 
-	if (head_commit)
-		remotes = &commit_list_insert(head_commit, remotes)->next;
-	for (i = 0; i < argc; i++) {
-		struct commit *commit = get_merge_parent(argv[i]);
-		if (!commit)
-			help_unknown_ref(argv[i], "merge",
-					 "not something we can merge");
-		remotes = &commit_list_insert(commit, remotes)->next;
-	}
-	*remotes = NULL;
+	/*
+	 * Is the current HEAD reachable from another commit being
+	 * merged?  If so we do not want to record it as a parent of
+	 * the resulting merge, unless --no-ff is given.  We will flip
+	 * this variable to 0 when we find HEAD among the independent
+	 * tips being merged.
+	 */
+	*head_subsumed = 1;
 
+	/* Find what parents to record by checking independent ones. */
 	parents = reduce_heads(remoteheads);
 
-	*head_subsumed = 1; /* we will flip this to 0 when we find it */
 	for (remoteheads = NULL, remotes = &remoteheads;
 	     parents;
 	     parents = next) {
 		struct commit *commit = parents->item;
 		next = parents->next;
 		if (commit == head_commit)
 			*head_subsumed = 0;
 		else
 			remotes = &commit_list_insert(commit, remotes)->next;
+		free(parents);
+	}
+	return remoteheads;
+}
+
+static void prepare_merge_message(struct strbuf *merge_names, struct strbuf *merge_msg)
+{
+	struct fmt_merge_msg_opts opts;
+
+	memset(&opts, 0, sizeof(opts));
+	opts.add_title = !have_message;
+	opts.shortlog_len = shortlog_len;
+	opts.credit_people = (0 < option_edit);
+
+	fmt_merge_msg(merge_names, merge_msg, &opts);
+	if (merge_msg->len)
+		strbuf_setlen(merge_msg, merge_msg->len - 1);
+}
+
+static void handle_fetch_head(struct commit_list **remotes, struct strbuf *merge_names)
+{
+	const char *filename;
+	int fd, pos, npos;
+	struct strbuf fetch_head_file = STRBUF_INIT;
+
+	if (!merge_names)
+		merge_names = &fetch_head_file;
+
+	filename = git_path("FETCH_HEAD");
+	fd = open(filename, O_RDONLY);
+	if (fd < 0)
+		die_errno(_("could not open '%s' for reading"), filename);
+
+	if (strbuf_read(merge_names, fd, 0) < 0)
+		die_errno(_("could not read '%s'"), filename);
+	if (close(fd) < 0)
+		die_errno(_("could not close '%s'"), filename);
+
+	for (pos = 0; pos < merge_names->len; pos = npos) {
+		unsigned char sha1[20];
+		char *ptr;
+		struct commit *commit;
+
+		ptr = strchr(merge_names->buf + pos, '\n');
+		if (ptr)
+			npos = ptr - merge_names->buf + 1;
+		else
+			npos = merge_names->len;
+
+		if (npos - pos < 40 + 2 ||
+		    get_sha1_hex(merge_names->buf + pos, sha1))
+			commit = NULL; /* bad */
+		else if (memcmp(merge_names->buf + pos + 40, "\t\t", 2))
+			continue; /* not-for-merge */
+		else {
+			char saved = merge_names->buf[pos + 40];
+			merge_names->buf[pos + 40] = '\0';
+			commit = get_merge_parent(merge_names->buf + pos);
+			merge_names->buf[pos + 40] = saved;
+		}
+		if (!commit) {
+			if (ptr)
+				*ptr = '\0';
+			die("not something we can merge in %s: %s",
+			    filename, merge_names->buf + pos);
+		}
+		remotes = &commit_list_insert(commit, remotes)->next;
+	}
+
+	if (merge_names == &fetch_head_file)
+		strbuf_release(&fetch_head_file);
+}
+
+static struct commit_list *collect_parents(struct commit *head_commit,
+					   int *head_subsumed,
+					   int argc, const char **argv,
+					   struct strbuf *merge_msg)
+{
+	int i;
+	struct commit_list *remoteheads = NULL;
+	struct commit_list **remotes = &remoteheads;
+	struct strbuf merge_names = STRBUF_INIT, *autogen = NULL;
+
+	if (merge_msg && (!have_message || shortlog_len))
+		autogen = &merge_names;
+
+	if (head_commit)
+		remotes = &commit_list_insert(head_commit, remotes)->next;
+
+	if (argc == 1 && !strcmp(argv[0], "FETCH_HEAD")) {
+		handle_fetch_head(remotes, autogen);
+		remoteheads = reduce_parents(head_commit, head_subsumed, remoteheads);
+	} else {
+		for (i = 0; i < argc; i++) {
+			struct commit *commit = get_merge_parent(argv[i]);
+			if (!commit)
+				help_unknown_ref(argv[i], "merge",
+						 "not something we can merge");
+			remotes = &commit_list_insert(commit, remotes)->next;
+		}
+		remoteheads = reduce_parents(head_commit, head_subsumed, remoteheads);
+		if (autogen) {
+			struct commit_list *p;
+			for (p = remoteheads; p; p = p->next)
+				merge_name(merge_remote_util(p->item)->name, autogen);
+		}
+	}
+
+	if (autogen) {
+		prepare_merge_message(autogen, merge_msg);
+		strbuf_release(autogen);
 	}
+
 	return remoteheads;
 }
 
 int cmd_merge(int argc, const char **argv, const char *prefix)
 {
 	unsigned char result_tree[20];
@@ -1155,90 +1241,78 @@
 	if (squash) {
 		if (fast_forward == FF_NO)
 			die(_("You cannot combine --squash with --no-ff."));
 		option_commit = 0;
 	}
 
-	if (!abort_current_merge) {
-		if (!argc) {
-			if (default_to_upstream)
-				argc = setup_with_upstream(&argv);
-			else
-				die(_("No commit specified and merge.defaultToUpstream not set."));
-		} else if (argc == 1 && !strcmp(argv[0], "-"))
-			argv[0] = "@{-1}";
+	if (!argc) {
+		if (default_to_upstream)
+			argc = setup_with_upstream(&argv);
+		else
+			die(_("No commit specified and merge.defaultToUpstream not set."));
+	} else if (argc == 1 && !strcmp(argv[0], "-")) {
+		argv[0] = "@{-1}";
 	}
+
 	if (!argc)
 		usage_with_options(builtin_merge_usage,
 			builtin_merge_options);
 
-	/*
-	 * This could be traditional "merge <msg> HEAD <commit>..."  and
-	 * the way we can tell it is to see if the second token is HEAD,
-	 * but some people might have misused the interface and used a
-	 * commit-ish that is the same as HEAD there instead.
-	 * Traditional format never would have "-m" so it is an
-	 * additional safety measure to check for it.
-	 */
-
-	if (!have_message && head_commit &&
-	    is_old_style_invocation(argc, argv, head_commit->object.sha1)) {
-		strbuf_addstr(&merge_msg, argv[0]);
-		head_arg = argv[1];
-		argv += 2;
-		argc -= 2;
-		remoteheads = collect_parents(head_commit, &head_subsumed, argc, argv);
-	} else if (!head_commit) {
+	if (!head_commit) {
 		struct commit *remote_head;
 		/*
 		 * If the merged head is a valid one there is no reason
 		 * to forbid "git merge" into a branch yet to be born.
 		 * We do the same for "git pull".
 		 */
-		if (argc != 1)
-			die(_("Can merge only exactly one commit into "
-				"empty head"));
 		if (squash)
 			die(_("Squash commit into empty head not supported yet"));
 		if (fast_forward == FF_NO)
 			die(_("Non-fast-forward commit does not make sense into "
 			    "an empty head"));
-		remoteheads = collect_parents(head_commit, &head_subsumed, argc, argv);
+		remoteheads = collect_parents(head_commit, &head_subsumed,
+					      argc, argv, NULL);
 		remote_head = remoteheads->item;
 		if (!remote_head)
 			die(_("%s - not something we can merge"), argv[0]);
+		if (remoteheads->next)
+			die(_("Can merge only exactly one commit into empty head"));
 		read_empty(remote_head->object.sha1, 0);
 		update_ref("initial pull", "HEAD", remote_head->object.sha1,
 			   NULL, 0, UPDATE_REFS_DIE_ON_ERR);
 		goto done;
-	} else {
-		struct strbuf merge_names = STRBUF_INIT;
+	}
 
+	/*
+	 * This could be traditional "merge <msg> HEAD <commit>..."  and
+	 * the way we can tell it is to see if the second token is HEAD,
+	 * but some people might have misused the interface and used a
+	 * commit-ish that is the same as HEAD there instead.
+	 * Traditional format never would have "-m" so it is an
+	 * additional safety measure to check for it.
+	 */
+	if (!have_message &&
+	    is_old_style_invocation(argc, argv, head_commit->object.sha1)) {
+		warning("old-style 'git merge <msg> HEAD <commit>' is deprecated.");
+		strbuf_addstr(&merge_msg, argv[0]);
+		head_arg = argv[1];
+		argv += 2;
+		argc -= 2;
+		remoteheads = collect_parents(head_commit, &head_subsumed,
+					      argc, argv, NULL);
+	} else {
 		/* We are invoked directly as the first-class UI. */
 		head_arg = "HEAD";
 
 		/*
 		 * All the rest are the commits being merged; prepare
 		 * the standard merge summary message to be appended
 		 * to the given message.
 		 */
-		remoteheads = collect_parents(head_commit, &head_subsumed, argc, argv);
-		for (p = remoteheads; p; p = p->next)
-			merge_name(merge_remote_util(p->item)->name, &merge_names);
-
-		if (!have_message || shortlog_len) {
-			struct fmt_merge_msg_opts opts;
-			memset(&opts, 0, sizeof(opts));
-			opts.add_title = !have_message;
-			opts.shortlog_len = shortlog_len;
-			opts.credit_people = (0 < option_edit);
-
-			fmt_merge_msg(&merge_names, &merge_msg, &opts);
-			if (merge_msg.len)
-				strbuf_setlen(&merge_msg, merge_msg.len - 1);
-		}
+		remoteheads = collect_parents(head_commit, &head_subsumed,
+					      argc, argv, &merge_msg);
 	}
 
 	if (!head_commit || !argc)
 		usage_with_options(builtin_merge_usage,
 			builtin_merge_options);
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-file.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-file.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-file.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-file.c	2015-07-28 04:34:56.000000000 +0800
@@ -72,14 +72,13 @@
 	for (i = 0; i < 3; i++) {
 		const char *fname = prefix_filename(prefix, prefixlen, argv[i]);
 		if (!names[i])
 			names[i] = argv[i];
 		if (read_mmfile(mmfs + i, fname))
 			return -1;
-		if (mmfs[i].size > MAX_XDIFF_SIZE ||
-		    buffer_is_binary(mmfs[i].ptr, mmfs[i].size))
+		if (buffer_is_binary(mmfs[i].ptr, mmfs[i].size))
 			return error("Cannot merge binary files: %s",
 					argv[i]);
 	}
 
 	xmp.ancestor = names[1];
 	xmp.file1 = names[0];
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-file.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-file.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-file.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-file.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-ours.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-ours.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-ours.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-ours.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-recursive.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-recursive.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-recursive.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-recursive.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-tree.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-tree.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-tree.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-tree.c	2015-07-28 04:34:56.000000000 +0800
@@ -115,14 +115,13 @@
 		size = 0;
 	src.size = size;
 	dst.ptr = result(entry, &size);
 	if (!dst.ptr)
 		size = 0;
 	dst.size = size;
-	if (xdi_diff(&src, &dst, &xpp, &xecfg, &ecb))
-		die("unable to generate diff");
+	xdi_diff(&src, &dst, &xpp, &xecfg, &ecb);
 	free(src.ptr);
 	free(dst.ptr);
 }
 
 static void show_result_list(struct merge_list *entry)
 {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mktag.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mktag.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mktag.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mktag.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mktree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mktree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mktree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mktree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mv.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mv.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mv.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mv.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/name-rev.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/name-rev.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/name-rev.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/name-rev.c	2015-07-28 04:34:56.000000000 +0800
@@ -135,15 +135,15 @@
 static int tipcmp(const void *a_, const void *b_)
 {
 	const struct tip_table_entry *a = a_, *b = b_;
 	return hashcmp(a->sha1, b->sha1);
 }
 
-static int name_ref(const char *path, const unsigned char *sha1, int flags, void *cb_data)
+static int name_ref(const char *path, const struct object_id *oid, int flags, void *cb_data)
 {
-	struct object *o = parse_object(sha1);
+	struct object *o = parse_object(oid->hash);
 	struct name_ref_data *data = cb_data;
 	int can_abbreviate_output = data->tags_only && data->name_only;
 	int deref = 0;
 
 	if (data->tags_only && !starts_with(path, "refs/tags/"))
 		return 0;
@@ -157,13 +157,13 @@
 		default: /* matched subpath */
 			can_abbreviate_output = 1;
 			break;
 		}
 	}
 
-	add_to_tip_table(sha1, path, can_abbreviate_output);
+	add_to_tip_table(oid->hash, path, can_abbreviate_output);
 
 	while (o && o->type == OBJ_TAG) {
 		struct tag *t = (struct tag *) o;
 		if (!t->tagged)
 			break; /* broken repository */
 		o = parse_object(t->tagged->sha1);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/name-rev.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/name-rev.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/name-rev.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/name-rev.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/notes.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/notes.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/notes.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/notes.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/pack-objects.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/pack-objects.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/pack-objects.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/pack-objects.c	2015-07-28 04:34:56.000000000 +0800
@@ -537,17 +537,17 @@
 	if (signed_add_overflows(*offset, size))
 		die("pack too large for current definition of off_t");
 	*offset += size;
 	return WRITE_ONE_WRITTEN;
 }
 
-static int mark_tagged(const char *path, const unsigned char *sha1, int flag,
+static int mark_tagged(const char *path, const struct object_id *oid, int flag,
 		       void *cb_data)
 {
 	unsigned char peeled[20];
-	struct object_entry *entry = packlist_find(&to_pack, sha1, NULL);
+	struct object_entry *entry = packlist_find(&to_pack, oid->hash, NULL);
 
 	if (entry)
 		entry->tagged = 1;
 	if (!peel_ref(path, peeled)) {
 		entry = packlist_find(&to_pack, peeled, NULL);
 		if (entry)
@@ -2094,20 +2094,20 @@
 }
 
 #else
 #define ll_find_deltas(l, s, w, d, p)	find_deltas(l, &s, w, d, p)
 #endif
 
-static int add_ref_tag(const char *path, const unsigned char *sha1, int flag, void *cb_data)
+static int add_ref_tag(const char *path, const struct object_id *oid, int flag, void *cb_data)
 {
-	unsigned char peeled[20];
+	struct object_id peeled;
 
 	if (starts_with(path, "refs/tags/") && /* is a tag? */
-	    !peel_ref(path, peeled)        && /* peelable? */
-	    packlist_find(&to_pack, peeled, NULL))      /* object packed? */
-		add_object_entry(sha1, OBJ_TAG, NULL, 0);
+	    !peel_ref(path, peeled.hash)    && /* peelable? */
+	    packlist_find(&to_pack, peeled.hash, NULL))      /* object packed? */
+		add_object_entry(oid->hash, OBJ_TAG, NULL, 0);
 	return 0;
 }
 
 static void prepare_pack(int window, int depth)
 {
 	struct object_entry **delta_list;
@@ -2281,17 +2281,27 @@
 	commit->object.flags |= OBJECT_ADDED;
 
 	if (write_bitmap_index)
 		index_commit_for_bitmap(commit);
 }
 
-static void show_object(struct object *obj, const char *name, void *data)
+static void show_object(struct object *obj,
+			const struct name_path *path, const char *last,
+			void *data)
 {
+	char *name = path_name(path, last);
+
 	add_preferred_base_object(name);
 	add_object_entry(obj->sha1, obj->type, name, 0);
 	obj->flags |= OBJECT_ADDED;
+
+	/*
+	 * We will have generated the hash from the name,
+	 * but not saved a pointer to it - we can free it
+	 */
+	free((char *)name);
 }
 
 static void show_edge(struct commit *commit)
 {
 	add_preferred_base(commit->object.sha1);
 }
@@ -2467,13 +2477,14 @@
 
 	traverse_bitmap_commit_list(&add_object_entry_from_bitmap);
 	return 0;
 }
 
 static void record_recent_object(struct object *obj,
-				 const char *name,
+				 const struct name_path *path,
+				 const char *last,
 				 void *data)
 {
 	sha1_array_append(&recent_objects, obj->sha1);
 }
 
 static void record_recent_commit(struct commit *commit, void *data)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/pack-objects.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/pack-objects.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/pack-objects.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/pack-objects.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/pack-redundant.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/pack-redundant.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/pack-redundant.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/pack-redundant.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/pack-refs.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/pack-refs.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/pack-refs.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/pack-refs.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/patch-id.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/patch-id.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/patch-id.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/patch-id.c	2015-07-28 04:34:56.000000000 +0800
@@ -1,17 +1,17 @@
 #include "builtin.h"
 
-static void flush_current_id(int patchlen, unsigned char *id, unsigned char *result)
+static void flush_current_id(int patchlen, struct object_id *id, struct object_id *result)
 {
 	char name[50];
 
 	if (!patchlen)
 		return;
 
-	memcpy(name, sha1_to_hex(id), 41);
-	printf("%s %s\n", sha1_to_hex(result), name);
+	memcpy(name, oid_to_hex(id), GIT_SHA1_HEXSZ + 1);
+	printf("%s %s\n", oid_to_hex(result), name);
 }
 
 static int remove_space(char *line)
 {
 	char *src = line;
 	char *dst = line;
@@ -50,37 +50,37 @@
 
 	*p_before = atoi(q);
 	*p_after = atoi(r);
 	return 1;
 }
 
-static void flush_one_hunk(unsigned char *result, git_SHA_CTX *ctx)
+static void flush_one_hunk(struct object_id *result, git_SHA_CTX *ctx)
 {
-	unsigned char hash[20];
+	unsigned char hash[GIT_SHA1_RAWSZ];
 	unsigned short carry = 0;
 	int i;
 
 	git_SHA1_Final(hash, ctx);
 	git_SHA1_Init(ctx);
 	/* 20-byte sum, with carry */
-	for (i = 0; i < 20; ++i) {
-		carry += result[i] + hash[i];
-		result[i] = carry;
+	for (i = 0; i < GIT_SHA1_RAWSZ; ++i) {
+		carry += result->hash[i] + hash[i];
+		result->hash[i] = carry;
 		carry >>= 8;
 	}
 }
 
-static int get_one_patchid(unsigned char *next_sha1, unsigned char *result,
+static int get_one_patchid(struct object_id *next_oid, struct object_id *result,
 			   struct strbuf *line_buf, int stable)
 {
 	int patchlen = 0, found_next = 0;
 	int before = -1, after = -1;
 	git_SHA_CTX ctx;
 
 	git_SHA1_Init(&ctx);
-	hashclr(result);
+	oidclr(result);
 
 	while (strbuf_getwholeline(line_buf, stdin, '\n') != EOF) {
 		char *line = line_buf->buf;
 		char *p = line;
 		int len;
 
@@ -90,13 +90,13 @@
 			p += 7;
 		else if (!memcmp(line, "From ", 5))
 			p += 5;
 		else if (!memcmp(line, "\\ ", 2) && 12 < strlen(line))
 			continue;
 
-		if (!get_sha1_hex(p, next_sha1)) {
+		if (!get_oid_hex(p, next_oid)) {
 			found_next = 1;
 			break;
 		}
 
 		/* Ignore commit comments */
 		if (!patchlen && memcmp(line, "diff ", 5))
@@ -140,30 +140,30 @@
 		len = remove_space(line);
 		patchlen += len;
 		git_SHA1_Update(&ctx, line, len);
 	}
 
 	if (!found_next)
-		hashclr(next_sha1);
+		oidclr(next_oid);
 
 	flush_one_hunk(result, &ctx);
 
 	return patchlen;
 }
 
 static void generate_id_list(int stable)
 {
-	unsigned char sha1[20], n[20], result[20];
+	struct object_id oid, n, result;
 	int patchlen;
 	struct strbuf line_buf = STRBUF_INIT;
 
-	hashclr(sha1);
+	oidclr(&oid);
 	while (!feof(stdin)) {
-		patchlen = get_one_patchid(n, result, &line_buf, stable);
-		flush_current_id(patchlen, sha1, result);
-		hashcpy(sha1, n);
+		patchlen = get_one_patchid(&n, &result, &line_buf, stable);
+		flush_current_id(patchlen, &oid, &result);
+		oidcpy(&oid, &n);
 	}
 	strbuf_release(&line_buf);
 }
 
 static const char patch_id_usage[] = "git patch-id [--stable | --unstable] < patch";
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/patch-id.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/patch-id.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/patch-id.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/patch-id.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/prune.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/prune.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/prune.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/prune.c	2015-07-28 04:34:56.000000000 +0800
@@ -3,13 +3,12 @@
 #include "diff.h"
 #include "revision.h"
 #include "builtin.h"
 #include "reachable.h"
 #include "parse-options.h"
 #include "progress.h"
-#include "dir.h"
 
 static const char * const prune_usage[] = {
 	N_("git prune [-n] [-v] [--expire <time>] [--] [<head>...]"),
 	NULL
 };
 static int show_only;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/prune.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/prune.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/prune.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/prune.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/prune-packed.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/prune-packed.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/prune-packed.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/prune-packed.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/push.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/push.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/push.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/push.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/read-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/read-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/read-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/read-tree.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/receive-pack.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/receive-pack.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/receive-pack.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/receive-pack.c	2015-07-28 04:34:56.000000000 +0800
@@ -194,26 +194,26 @@
 			     sha1_to_hex(sha1), path, 0, cap.buf);
 		strbuf_release(&cap);
 		sent_capabilities = 1;
 	}
 }
 
-static int show_ref_cb(const char *path, const unsigned char *sha1, int flag, void *unused)
+static int show_ref_cb(const char *path, const struct object_id *oid, int flag, void *unused)
 {
 	path = strip_namespace(path);
 	/*
 	 * Advertise refs outside our current namespace as ".have"
 	 * refs, so that the client can use them to minimize data
 	 * transfer but will otherwise ignore them. This happens to
 	 * cover ".have" that are thrown in by add_one_alternate_ref()
 	 * to mark histories that are complete in our alternates as
 	 * well.
 	 */
 	if (!path)
 		path = ".have";
-	show_ref(path, sha1);
+	show_ref(path, oid->hash);
 	return 0;
 }
 
 static void show_one_alternate_sha1(const unsigned char sha1[20], void *unused)
 {
 	show_ref(".have", sha1);
@@ -1005,13 +1006,13 @@
 static void run_update_post_hook(struct command *commands)
 {
 	struct command *cmd;
 	int argc;
 	const char **argv;
 	struct child_process proc = CHILD_PROCESS_INIT;
-	char *hook;
+	const char *hook;
 
 	hook = find_hook("post-update");
 	for (argc = 0, cmd = commands; cmd; cmd = cmd->next) {
 		if (cmd->error_string || cmd->did_not_exist)
 			continue;
 		argc++;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/receive-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/receive-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/receive-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/receive-pack.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/reflog.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/reflog.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/reflog.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/reflog.c	2015-07-28 04:34:56.000000000 +0800
@@ -310,20 +310,20 @@
 	if (cb->cmd.recno && --(cb->cmd.recno) == 0)
 		return 1;
 
 	return 0;
 }
 
-static int push_tip_to_list(const char *refname, const unsigned char *sha1,
+static int push_tip_to_list(const char *refname, const struct object_id *oid,
 			    int flags, void *cb_data)
 {
 	struct commit_list **list = cb_data;
 	struct commit *tip_commit;
 	if (flags & REF_ISSYMREF)
 		return 0;
-	tip_commit = lookup_commit_reference_gently(sha1, 1);
+	tip_commit = lookup_commit_reference_gently(oid->hash, 1);
 	if (!tip_commit)
 		return 0;
 	commit_list_insert(tip_commit, list);
 	return 0;
 }
 
@@ -376,20 +377,20 @@
 		} else {
 			clear_commit_marks(cb->tip_commit, REACHABLE);
 		}
 	}
 }
 
-static int collect_reflog(const char *ref, const unsigned char *sha1, int unused, void *cb_data)
+static int collect_reflog(const char *ref, const struct object_id *oid, int unused, void *cb_data)
 {
 	struct collected_reflog *e;
 	struct collect_reflog_cb *cb = cb_data;
 	size_t namelen = strlen(ref);
 
 	e = xmalloc(sizeof(*e) + namelen + 1);
-	hashcpy(e->sha1, sha1);
+	hashcpy(e->sha1, oid->hash);
 	memcpy(e->reflog, ref, namelen + 1);
 	ALLOC_GROW(cb->e, cb->nr + 1, cb->alloc);
 	cb->e[cb->nr++] = e;
 	return 0;
 }
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/reflog.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/reflog.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/reflog.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/reflog.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/remote.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/remote.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/remote.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/remote.c	2015-07-28 04:34:56.000000000 +0800
@@ -506,17 +506,16 @@
 	struct remote *remote;
 	struct string_list *branches, *skipped;
 	struct known_remotes *keep;
 };
 
 static int add_branch_for_removal(const char *refname,
-	const unsigned char *sha1, int flags, void *cb_data)
+	const struct object_id *oid, int flags, void *cb_data)
 {
 	struct branches_for_remote *branches = cb_data;
 	struct refspec refspec;
-	struct string_list_item *item;
 	struct known_remote *kr;
 
 	memset(&refspec, 0, sizeof(refspec));
 	refspec.dst = (char *)refname;
 	if (remote_find_tracking(branches->remote, &refspec))
 		return 0;
@@ -540,40 +539,38 @@
 	}
 
 	/* make sure that symrefs are deleted */
 	if (flags & REF_ISSYMREF)
 		return unlink(git_path("%s", refname));
 
-	item = string_list_append(branches->branches, refname);
-	item->util = xmalloc(20);
-	hashcpy(item->util, sha1);
+	string_list_append(branches->branches, refname);
 
 	return 0;
 }
 
 struct rename_info {
 	const char *old;
 	const char *new;
 	struct string_list *remote_branches;
 };
 
 static int read_remote_branches(const char *refname,
-	const unsigned char *sha1, int flags, void *cb_data)
+	const struct object_id *oid, int flags, void *cb_data)
 {
 	struct rename_info *rename = cb_data;
 	struct strbuf buf = STRBUF_INIT;
 	struct string_list_item *item;
 	int flag;
-	unsigned char orig_sha1[20];
+	struct object_id orig_oid;
 	const char *symref;
 
 	strbuf_addf(&buf, "refs/remotes/%s/", rename->old);
 	if (starts_with(refname, buf.buf)) {
 		item = string_list_append(rename->remote_branches, xstrdup(refname));
 		symref = resolve_ref_unsafe(refname, RESOLVE_REF_READING,
-					    orig_sha1, &flag);
+					    orig_oid.hash, &flag);
 		if (flag & REF_ISSYMREF)
 			item->util = xstrdup(symref);
 		else
 			item->util = NULL;
 	}
 
@@ -581,13 +578,13 @@
 }
 
 static int migrate_file(struct remote *remote)
 {
 	struct strbuf buf = STRBUF_INIT;
 	int i;
-	char *path = NULL;
+	const char *path = NULL;
 
 	strbuf_addf(&buf, "remote.%s.url", remote->name);
 	for (i = 0; i < remote->url_nr; i++)
 		if (git_config_set_multivar(buf.buf, remote->url[i], "^$", 0))
 			return error(_("Could not append '%s' to '%s'"),
 					remote->url[i], buf.buf);
@@ -701,15 +698,15 @@
 	 * the new symrefs.
 	 */
 	for_each_ref(read_remote_branches, &rename);
 	for (i = 0; i < remote_branches.nr; i++) {
 		struct string_list_item *item = remote_branches.items + i;
 		int flag = 0;
-		unsigned char sha1[20];
+		struct object_id oid;
 
-		read_ref_full(item->string, RESOLVE_REF_READING, sha1, &flag);
+		read_ref_full(item->string, RESOLVE_REF_READING, oid.hash, &flag);
 		if (!(flag & REF_ISSYMREF))
 			continue;
 		if (delete_ref(item->string, NULL, REF_NODEREF))
 			die(_("deleting '%s' failed"), item->string);
 	}
 	for (i = 0; i < remote_branches.nr; i++) {
@@ -823,13 +820,13 @@
 	cb_data.remote = remote;
 	result = for_each_ref(add_branch_for_removal, &cb_data);
 	strbuf_release(&buf);
 
 	if (!result)
 		result = remove_branches(&branches);
-	string_list_clear(&branches, 1);
+	string_list_clear(&branches, 0);
 
 	if (skipped.nr) {
 		fprintf_ln(stderr,
 			   Q_("Note: A branch outside the refs/remotes/ hierarchy was not removed;\n"
 			      "to delete it, use:",
 			      "Note: Some branches outside the refs/remotes/ hierarchy were not removed;\n"
@@ -864,13 +861,13 @@
 	string_list_clear(&states->tracked, 0);
 	string_list_clear(&states->heads, 0);
 	string_list_clear_func(&states->push, clear_push_info);
 }
 
 static int append_ref_to_tracked_list(const char *refname,
-	const unsigned char *sha1, int flags, void *cb_data)
+	const struct object_id *oid, int flags, void *cb_data)
 {
 	struct ref_states *states = cb_data;
 	struct refspec refspec;
 
 	if (flags & REF_ISSYMREF)
 		return 0;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/remote.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/remote.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/remote-ext.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/remote-ext.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/remote-ext.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/remote-ext.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/remote-fd.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/remote-fd.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/remote-fd.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/remote-fd.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/remote.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/remote.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/repack.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/repack.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/repack.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/repack.c	2015-07-28 04:34:56.000000000 +0800
@@ -282,13 +282,14 @@
 	 * if we can move them out of the way (this can happen if we
 	 * repacked immediately after packing fully.
 	 */
 	failed = 0;
 	for_each_string_list_item(item, &names) {
 		for (ext = 0; ext < ARRAY_SIZE(exts); ext++) {
-			char *fname, *fname_old;
+			const char *fname_old;
+			char *fname;
 			fname = mkpathdup("%s/pack-%s%s", packdir,
 						item->string, exts[ext].name);
 			if (!file_exists(fname)) {
 				free(fname);
 				continue;
 			}
@@ -310,13 +311,14 @@
 		if (failed)
 			break;
 	}
 	if (failed) {
 		struct string_list rollback_failure = STRING_LIST_INIT_DUP;
 		for_each_string_list_item(item, &rollback) {
-			char *fname, *fname_old;
+			const char *fname_old;
+			char *fname;
 			fname = mkpathdup("%s/%s", packdir, item->string);
 			fname_old = mkpath("%s/old-%s", packdir, item->string);
 			if (rename(fname_old, fname))
 				string_list_append(&rollback_failure, fname);
 			free(fname);
 		}
@@ -363,13 +365,13 @@
 		}
 	}
 
 	/* Remove the "old-" files */
 	for_each_string_list_item(item, &names) {
 		for (ext = 0; ext < ARRAY_SIZE(exts); ext++) {
-			char *fname;
+			const char *fname;
 			fname = mkpath("%s/old-%s%s",
 					packdir,
 					item->string,
 					exts[ext].name);
 			if (remove_path(fname))
 				warning(_("removing '%s' failed"), fname);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/repack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/repack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/repack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/repack.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/replace.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/replace.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/replace.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/replace.c	2015-07-28 04:34:56.000000000 +0800
@@ -32,34 +32,34 @@
 
 struct show_data {
 	const char *pattern;
 	enum replace_format format;
 };
 
-static int show_reference(const char *refname, const unsigned char *sha1,
+static int show_reference(const char *refname, const struct object_id *oid,
 			  int flag, void *cb_data)
 {
 	struct show_data *data = cb_data;
 
 	if (!wildmatch(data->pattern, refname, 0, NULL)) {
 		if (data->format == REPLACE_FORMAT_SHORT)
 			printf("%s\n", refname);
 		else if (data->format == REPLACE_FORMAT_MEDIUM)
-			printf("%s -> %s\n", refname, sha1_to_hex(sha1));
+			printf("%s -> %s\n", refname, oid_to_hex(oid));
 		else { /* data->format == REPLACE_FORMAT_LONG */
-			unsigned char object[20];
+			struct object_id object;
 			enum object_type obj_type, repl_type;
 
-			if (get_sha1(refname, object))
+			if (get_sha1(refname, object.hash))
 				return error("Failed to resolve '%s' as a valid ref.", refname);
 
-			obj_type = sha1_object_info(object, NULL);
-			repl_type = sha1_object_info(sha1, NULL);
+			obj_type = sha1_object_info(object.hash, NULL);
+			repl_type = sha1_object_info(oid->hash, NULL);
 
 			printf("%s (%s) -> %s (%s)\n", refname, typename(obj_type),
-			       sha1_to_hex(sha1), typename(repl_type));
+			       oid_to_hex(oid), typename(repl_type));
 		}
 	}
 
 	return 0;
 }
 
@@ -79,13 +79,13 @@
 		data.format = REPLACE_FORMAT_LONG;
 	else
 		die("invalid replace format '%s'\n"
 		    "valid formats are 'short', 'medium' and 'long'\n",
 		    format);
 
-	for_each_replace_ref(show_reference, (void *) &data);
+	for_each_replace_ref(show_reference, (void *)&data);
 
 	return 0;
 }
 
 typedef int (*each_replace_name_fn)(const char *name, const char *ref,
 				    const unsigned char *sha1);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/replace.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/replace.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/replace.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/replace.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rerere.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rerere.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rerere.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rerere.c	2015-07-28 04:34:56.000000000 +0800
@@ -26,29 +26,28 @@
 		const char *file2, const char *label2)
 {
 	xpparam_t xpp;
 	xdemitconf_t xecfg;
 	xdemitcb_t ecb;
 	mmfile_t minus, plus;
-	int ret;
 
 	if (read_mmfile(&minus, file1) || read_mmfile(&plus, file2))
-		return -1;
+		return 1;
 
 	printf("--- a/%s\n+++ b/%s\n", label1, label2);
 	fflush(stdout);
 	memset(&xpp, 0, sizeof(xpp));
 	xpp.flags = 0;
 	memset(&xecfg, 0, sizeof(xecfg));
 	xecfg.ctxlen = 3;
 	ecb.outf = outf;
-	ret = xdi_diff(&minus, &plus, &xpp, &xecfg, &ecb);
+	xdi_diff(&minus, &plus, &xpp, &xecfg, &ecb);
 
 	free(minus.ptr);
 	free(plus.ptr);
-	return ret;
+	return 0;
 }
 
 int cmd_rerere(int argc, const char **argv, const char *prefix)
 {
 	struct string_list merge_rr = STRING_LIST_INIT_DUP;
 	int i, fd, autoupdate = -1, flags = 0;
@@ -102,14 +101,13 @@
 				merge_rr.items[i].util = NULL;
 		}
 	} else if (!strcmp(argv[0], "diff"))
 		for (i = 0; i < merge_rr.nr; i++) {
 			const char *path = merge_rr.items[i].string;
 			const char *name = (const char *)merge_rr.items[i].util;
-			if (diff_two(rerere_path(name, "preimage"), path, path, path))
-				die("unable to generate diff for %s", name);
+			diff_two(rerere_path(name, "preimage"), path, path, path);
 		}
 	else
 		usage_with_options(rerere_usage, options);
 
 	string_list_clear(&merge_rr, 1);
 	return 0;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rerere.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rerere.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rerere.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rerere.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/reset.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/reset.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/reset.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/reset.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/revert.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/revert.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/revert.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/revert.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rev-list.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rev-list.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rev-list.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rev-list.c	2015-07-28 04:34:56.000000000 +0800
@@ -174,28 +174,32 @@
 		free_commit_list(commit->parents);
 		commit->parents = NULL;
 	}
 	free_commit_buffer(commit);
 }
 
-static void finish_object(struct object *obj, const char *name, void *cb_data)
+static void finish_object(struct object *obj,
+			  const struct name_path *path, const char *name,
+			  void *cb_data)
 {
 	struct rev_list_info *info = cb_data;
 	if (obj->type == OBJ_BLOB && !has_sha1_file(obj->sha1))
 		die("missing blob object '%s'", sha1_to_hex(obj->sha1));
 	if (info->revs->verify_objects && !obj->parsed && obj->type != OBJ_COMMIT)
 		parse_object(obj->sha1);
 }
 
-static void show_object(struct object *obj, const char *name, void *cb_data)
+static void show_object(struct object *obj,
+			const struct name_path *path, const char *component,
+			void *cb_data)
 {
 	struct rev_list_info *info = cb_data;
-	finish_object(obj, name, cb_data);
+	finish_object(obj, path, component, cb_data);
 	if (info->flags & REV_LIST_QUIET)
 		return;
-	show_object_with_name(stdout, obj, name);
+	show_object_with_name(stdout, obj, path, component);
 }
 
 static void show_edge(struct commit *commit)
 {
 	printf("-%s\n", sha1_to_hex(commit->object.sha1));
 }
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rev-list.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rev-list.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rev-list.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rev-list.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rev-parse.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rev-parse.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rev-parse.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rev-parse.c	2015-07-28 04:34:56.000000000 +0800
@@ -187,23 +187,23 @@
 			return 1;
 		}
 	}
 	return 0;
 }
 
-static int show_reference(const char *refname, const unsigned char *sha1, int flag, void *cb_data)
+static int show_reference(const char *refname, const struct object_id *oid, int flag, void *cb_data)
 {
 	if (ref_excluded(ref_excludes, refname))
 		return 0;
-	show_rev(NORMAL, sha1, refname);
+	show_rev(NORMAL, oid->hash, refname);
 	return 0;
 }
 
-static int anti_reference(const char *refname, const unsigned char *sha1, int flag, void *cb_data)
+static int anti_reference(const char *refname, const struct object_id *oid, int flag, void *cb_data)
 {
-	show_rev(REVERSED, sha1, refname);
+	show_rev(REVERSED, oid->hash, refname);
 	return 0;
 }
 
 static int show_abbrev(const unsigned char *sha1, void *cb_data)
 {
 	show_rev(NORMAL, sha1, NULL);
@@ -530,12 +530,19 @@
 
 	prefix = setup_git_directory();
 	git_config(git_default_config, NULL);
 	for (i = 1; i < argc; i++) {
 		const char *arg = argv[i];
 
+		if (!strcmp(arg, "--git-path")) {
+			if (!argv[i + 1])
+				die("--git-path requires an argument");
+			puts(git_path("%s", argv[i + 1]));
+			i++;
+			continue;
+		}
 		if (as_is) {
 			if (show_file(arg, output_prefix) && as_is < 2)
 				verify_filename(prefix, arg, 0);
 			continue;
 		}
 		if (!strcmp(arg,"-n")) {
@@ -752,12 +759,16 @@
 				cwd = xgetcwd();
 				len = strlen(cwd);
 				printf("%s%s.git\n", cwd, len && cwd[len-1] != '/' ? "/" : "");
 				free(cwd);
 				continue;
 			}
+			if (!strcmp(arg, "--git-common-dir")) {
+				puts(get_git_common_dir());
+				continue;
+			}
 			if (!strcmp(arg, "--resolve-git-dir")) {
 				const char *gitdir = argv[++i];
 				if (!gitdir)
 					die("--resolve-git-dir requires an argument");
 				gitdir = resolve_gitdir(gitdir);
 				if (!gitdir)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rev-parse.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rev-parse.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rev-parse.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rev-parse.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rm.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rm.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rm.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rm.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/send-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/send-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/send-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/send-pack.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/shortlog.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/shortlog.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/shortlog.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/shortlog.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/show-branch.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/show-branch.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/show-branch.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/show-branch.c	2015-07-28 04:34:56.000000000 +0800
@@ -366,16 +366,16 @@
 static void sort_ref_range(int bottom, int top)
 {
 	qsort(ref_name + bottom, top - bottom, sizeof(ref_name[0]),
 	      compare_ref_name);
 }
 
-static int append_ref(const char *refname, const unsigned char *sha1,
+static int append_ref(const char *refname, const struct object_id *oid,
 		      int allow_dups)
 {
-	struct commit *commit = lookup_commit_reference_gently(sha1, 1);
+	struct commit *commit = lookup_commit_reference_gently(oid->hash, 1);
 	int i;
 
 	if (!commit)
 		return 0;
 
 	if (!allow_dups) {
@@ -391,45 +391,48 @@
 	}
 	ref_name[ref_name_cnt++] = xstrdup(refname);
 	ref_name[ref_name_cnt] = NULL;
 	return 0;
 }
 
-static int append_head_ref(const char *refname, const unsigned char *sha1, int flag, void *cb_data)
+static int append_head_ref(const char *refname, const struct object_id *oid,
+			   int flag, void *cb_data)
 {
-	unsigned char tmp[20];
+	struct object_id tmp;
 	int ofs = 11;
 	if (!starts_with(refname, "refs/heads/"))
 		return 0;
 	/* If both heads/foo and tags/foo exists, get_sha1 would
 	 * get confused.
 	 */
-	if (get_sha1(refname + ofs, tmp) || hashcmp(tmp, sha1))
+	if (get_sha1(refname + ofs, tmp.hash) || oidcmp(&tmp, oid))
 		ofs = 5;
-	return append_ref(refname + ofs, sha1, 0);
+	return append_ref(refname + ofs, oid, 0);
 }
 
-static int append_remote_ref(const char *refname, const unsigned char *sha1, int flag, void *cb_data)
+static int append_remote_ref(const char *refname, const struct object_id *oid,
+			     int flag, void *cb_data)
 {
-	unsigned char tmp[20];
+	struct object_id tmp;
 	int ofs = 13;
 	if (!starts_with(refname, "refs/remotes/"))
 		return 0;
 	/* If both heads/foo and tags/foo exists, get_sha1 would
 	 * get confused.
 	 */
-	if (get_sha1(refname + ofs, tmp) || hashcmp(tmp, sha1))
+	if (get_sha1(refname + ofs, tmp.hash) || oidcmp(&tmp, oid))
 		ofs = 5;
-	return append_ref(refname + ofs, sha1, 0);
+	return append_ref(refname + ofs, oid, 0);
 }
 
-static int append_tag_ref(const char *refname, const unsigned char *sha1, int flag, void *cb_data)
+static int append_tag_ref(const char *refname, const struct object_id *oid,
+			  int flag, void *cb_data)
 {
 	if (!starts_with(refname, "refs/tags/"))
 		return 0;
-	return append_ref(refname + 5, sha1, 0);
+	return append_ref(refname + 5, oid, 0);
 }
 
 static const char *match_ref_pattern = NULL;
 static int match_ref_slash = 0;
 static int count_slash(const char *s)
 {
@@ -437,13 +440,14 @@
 	while (*s)
 		if (*s++ == '/')
 			cnt++;
 	return cnt;
 }
 
-static int append_matching_ref(const char *refname, const unsigned char *sha1, int flag, void *cb_data)
+static int append_matching_ref(const char *refname, const struct object_id *oid,
+			       int flag, void *cb_data)
 {
 	/* we want to allow pattern hold/<asterisk> to show all
 	 * branches under refs/heads/hold/, and v0.99.9? to show
 	 * refs/tags/v0.99.9a and friends.
 	 */
 	const char *tail;
@@ -453,16 +457,16 @@
 			slash--;
 	if (!*tail)
 		return 0;
 	if (wildmatch(match_ref_pattern, tail, 0, NULL))
 		return 0;
 	if (starts_with(refname, "refs/heads/"))
-		return append_head_ref(refname, sha1, flag, cb_data);
+		return append_head_ref(refname, oid, flag, cb_data);
 	if (starts_with(refname, "refs/tags/"))
-		return append_tag_ref(refname, sha1, flag, cb_data);
-	return append_ref(refname, sha1, 0);
+		return append_tag_ref(refname, oid, flag, cb_data);
+	return append_ref(refname, oid, 0);
 }
 
 static void snarf_refs(int head, int remotes)
 {
 	if (head) {
 		int orig_cnt = ref_name_cnt;
@@ -527,20 +533,21 @@
 	}
 	return 0;
 }
 
 static void append_one_rev(const char *av)
 {
-	unsigned char revkey[20];
-	if (!get_sha1(av, revkey)) {
-		append_ref(av, revkey, 0);
+	struct object_id revkey;
+	if (!get_sha1(av, revkey.hash)) {
+		append_ref(av, &revkey, 0);
 		return;
 	}
 	if (strchr(av, '*') || strchr(av, '?') || strchr(av, '[')) {
 		/* glob style match */
 		int saved_matches = ref_name_cnt;
+
 		match_ref_pattern = av;
 		match_ref_slash = count_slash(av);
 		for_each_ref(append_matching_ref, NULL);
 		if (saved_matches == ref_name_cnt &&
 		    ref_name_cnt < MAX_REVS)
 			error("no matching refs with %s", av);
@@ -633,13 +640,13 @@
 	int all_heads = 0, all_remotes = 0;
 	int all_mask, all_revs;
 	enum rev_sort_order sort_order = REV_SORT_IN_GRAPH_ORDER;
 	char head[128];
 	const char *head_p;
 	int head_len;
-	unsigned char head_sha1[20];
+	struct object_id head_oid;
 	int merge_base = 0;
 	int independent = 0;
 	int no_name = 0;
 	int sha1_name = 0;
 	int shown_merge_point = 0;
 	int with_current_branch = 0;
@@ -715,61 +722,61 @@
 			 */
 			die("--reflog is incompatible with --all, --remotes, "
 			    "--independent or --merge-base");
 	}
 
 	/* If nothing is specified, show all branches by default */
-	if (ac + all_heads + all_remotes == 0)
+	if (ac <= topics && all_heads + all_remotes == 0)
 		all_heads = 1;
 
 	if (reflog) {
-		unsigned char sha1[20];
+		struct object_id oid;
+		char nth_desc[256];
 		char *ref;
 		int base = 0;
 		unsigned int flags = 0;
 
 		if (ac == 0) {
 			static const char *fake_av[2];
 
 			fake_av[0] = resolve_refdup("HEAD",
 						    RESOLVE_REF_READING,
-						    sha1, NULL);
+						    oid.hash, NULL);
 			fake_av[1] = NULL;
 			av = fake_av;
 			ac = 1;
 		}
 		if (ac != 1)
 			die("--reflog option needs one branch name");
 
 		if (MAX_REVS < reflog)
 			die("Only %d entries can be shown at one time.",
 			    MAX_REVS);
-		if (!dwim_ref(*av, strlen(*av), sha1, &ref))
+		if (!dwim_ref(*av, strlen(*av), oid.hash, &ref))
 			die("No such ref %s", *av);
 
 		/* Has the base been specified? */
 		if (reflog_base) {
 			char *ep;
 			base = strtoul(reflog_base, &ep, 10);
 			if (*ep) {
 				/* Ah, that is a date spec... */
 				unsigned long at;
 				at = approxidate(reflog_base);
-				read_ref_at(ref, flags, at, -1, sha1, NULL,
+				read_ref_at(ref, flags, at, -1, oid.hash, NULL,
 					    NULL, NULL, &base);
 			}
 		}
 
 		for (i = 0; i < reflog; i++) {
 			char *logmsg;
-			char *nth_desc;
 			const char *msg;
 			unsigned long timestamp;
 			int tz;
 
-			if (read_ref_at(ref, flags, 0, base+i, sha1, &logmsg,
+			if (read_ref_at(ref, flags, 0, base+i, oid.hash, &logmsg,
 					&timestamp, &tz, NULL)) {
 				reflog = i;
 				break;
 			}
 			msg = strchr(logmsg, '\t');
 			if (!msg)
@@ -777,30 +784,28 @@
 			else
 				msg++;
 			reflog_msg[i] = xstrfmt("(%s) %s",
 						show_date(timestamp, tz, 1),
 						msg);
 			free(logmsg);
-
-			nth_desc = xstrfmt("%s@{%d}", *av, base+i);
-			append_ref(nth_desc, sha1, 1);
-			free(nth_desc);
+			sprintf(nth_desc, "%s@{%d}", *av, base+i);
+			append_ref(nth_desc, &oid, 1);
 		}
 		free(ref);
 	}
-	else if (all_heads + all_remotes)
-		snarf_refs(all_heads, all_remotes);
 	else {
 		while (0 < ac) {
 			append_one_rev(*av);
 			ac--; av++;
 		}
+		if (all_heads + all_remotes)
+			snarf_refs(all_heads, all_remotes);
 	}
 
 	head_p = resolve_ref_unsafe("HEAD", RESOLVE_REF_READING,
-				    head_sha1, NULL);
+				    head_oid.hash, NULL);
 	if (head_p) {
 		head_len = strlen(head_p);
 		memcpy(head, head_p, head_len + 1);
 	}
 	else {
 		head_len = 0;
@@ -813,13 +818,13 @@
 			/* We are only interested in adding the branch
 			 * HEAD points at.
 			 */
 			if (rev_is_head(head,
 					head_len,
 					ref_name[i],
-					head_sha1, NULL))
+					head_oid.hash, NULL))
 				has_head++;
 		}
 		if (!has_head) {
 			int offset = starts_with(head, "refs/heads/") ? 11 : 0;
 			append_one_rev(head + offset);
 		}
@@ -828,23 +833,23 @@
 	if (!ref_name_cnt) {
 		fprintf(stderr, "No revs to be shown.\n");
 		exit(0);
 	}
 
 	for (num_rev = 0; ref_name[num_rev]; num_rev++) {
-		unsigned char revkey[20];
+		struct object_id revkey;
 		unsigned int flag = 1u << (num_rev + REV_SHIFT);
 
 		if (MAX_REVS <= num_rev)
 			die("cannot handle more than %d revs.", MAX_REVS);
-		if (get_sha1(ref_name[num_rev], revkey))
+		if (get_sha1(ref_name[num_rev], revkey.hash))
 			die("'%s' is not a valid ref.", ref_name[num_rev]);
-		commit = lookup_commit_reference(revkey);
+		commit = lookup_commit_reference(revkey.hash);
 		if (!commit)
 			die("cannot find commit %s (%s)",
-			    ref_name[num_rev], revkey);
+			    ref_name[num_rev], oid_to_hex(&revkey));
 		parse_commit(commit);
 		mark_seen(commit, &seen);
 
 		/* rev#0 uses bit REV_SHIFT, rev#1 uses bit REV_SHIFT+1,
 		 * and so on.  REV_SHIFT bits from bit 0 are used for
 		 * internal bookkeeping.
@@ -872,13 +877,13 @@
 	if (1 < num_rev || extra < 0) {
 		for (i = 0; i < num_rev; i++) {
 			int j;
 			int is_head = rev_is_head(head,
 						  head_len,
 						  ref_name[i],
-						  head_sha1,
+						  head_oid.hash,
 						  rev[i]->object.sha1);
 			if (extra < 0)
 				printf("%c [%s] ",
 				       is_head ? '*' : ' ', ref_name[i]);
 			else {
 				for (j = 0; j < i; j++)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/show-branch.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/show-branch.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/show-branch.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/show-branch.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/show-ref.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/show-ref.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/show-ref.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/show-ref.c	2015-07-28 04:34:56.000000000 +0800
@@ -14,25 +14,26 @@
 
 static int deref_tags, show_head, tags_only, heads_only, found_match, verify,
 	   quiet, hash_only, abbrev, exclude_arg;
 static const char **pattern;
 static const char *exclude_existing_arg;
 
-static void show_one(const char *refname, const unsigned char *sha1)
+static void show_one(const char *refname, const struct object_id *oid)
 {
-	const char *hex = find_unique_abbrev(sha1, abbrev);
+	const char *hex = find_unique_abbrev(oid->hash, abbrev);
 	if (hash_only)
 		printf("%s\n", hex);
 	else
 		printf("%s %s\n", hex, refname);
 }
 
-static int show_ref(const char *refname, const unsigned char *sha1, int flag, void *cbdata)
+static int show_ref(const char *refname, const struct object_id *oid,
+		    int flag, void *cbdata)
 {
 	const char *hex;
-	unsigned char peeled[20];
+	struct object_id peeled;
 
 	if (show_head && !strcmp(refname, "HEAD"))
 		goto match;
 
 	if (tags_only || heads_only) {
 		int match;
@@ -66,32 +67,33 @@
 	found_match++;
 
 	/* This changes the semantics slightly that even under quiet we
 	 * detect and return error if the repository is corrupt and
 	 * ref points at a nonexistent object.
 	 */
-	if (!has_sha1_file(sha1))
+	if (!has_sha1_file(oid->hash))
 		die("git show-ref: bad ref %s (%s)", refname,
-		    sha1_to_hex(sha1));
+		    oid_to_hex(oid));
 
 	if (quiet)
 		return 0;
 
-	show_one(refname, sha1);
+	show_one(refname, oid);
 
 	if (!deref_tags)
 		return 0;
 
-	if (!peel_ref(refname, peeled)) {
-		hex = find_unique_abbrev(peeled, abbrev);
+	if (!peel_ref(refname, peeled.hash)) {
+		hex = find_unique_abbrev(peeled.hash, abbrev);
 		printf("%s %s^{}\n", hex, refname);
 	}
 	return 0;
 }
 
-static int add_existing(const char *refname, const unsigned char *sha1, int flag, void *cbdata)
+static int add_existing(const char *refname, const struct object_id *oid,
+			int flag, void *cbdata)
 {
 	struct string_list *list = (struct string_list *)cbdata;
 	string_list_insert(list, refname);
 	return 0;
 }
 
@@ -205,18 +207,18 @@
 		pattern = NULL;
 
 	if (verify) {
 		if (!pattern)
 			die("--verify requires a reference");
 		while (*pattern) {
-			unsigned char sha1[20];
+			struct object_id oid;
 
 			if (starts_with(*pattern, "refs/") &&
-			    !read_ref(*pattern, sha1)) {
+			    !read_ref(*pattern, oid.hash)) {
 				if (!quiet)
-					show_one(*pattern, sha1);
+					show_one(*pattern, &oid);
 			}
 			else if (!quiet)
 				die("'%s' - not a valid ref", *pattern);
 			else
 				return 1;
 			pattern++;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/show-ref.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/show-ref.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/show-ref.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/show-ref.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/stripspace.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/stripspace.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/stripspace.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/stripspace.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/symbolic-ref.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/symbolic-ref.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/symbolic-ref.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/symbolic-ref.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/tag.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/tag.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/tag.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/tag.c	2015-07-28 04:34:56.000000000 +0800
@@ -173,28 +173,28 @@
 		}
 	}
 	free(stack.stack);
 	return contains_test(candidate, want);
 }
 
-static void show_tag_lines(const unsigned char *sha1, int lines)
+static void show_tag_lines(const struct object_id *oid, int lines)
 {
 	int i;
 	unsigned long size;
 	enum object_type type;
 	char *buf, *sp, *eol;
 	size_t len;
 
-	buf = read_sha1_file(sha1, &type, &size);
+	buf = read_sha1_file(oid->hash, &type, &size);
 	if (!buf)
-		die_errno("unable to read object %s", sha1_to_hex(sha1));
+		die_errno("unable to read object %s", oid_to_hex(oid));
 	if (type != OBJ_COMMIT && type != OBJ_TAG)
 		goto free_return;
 	if (!size)
 		die("an empty %s object %s?",
-		    typename(type), sha1_to_hex(sha1));
+		    typename(type), oid_to_hex(oid));
 
 	/* skip header */
 	sp = strstr(buf, "\n\n");
 	if (!sp)
 		goto free_return;
 
@@ -212,40 +212,40 @@
 		sp = eol + 1;
 	}
 free_return:
 	free(buf);
 }
 
-static int show_reference(const char *refname, const unsigned char *sha1,
+static int show_reference(const char *refname, const struct object_id *oid,
 			  int flag, void *cb_data)
 {
 	struct tag_filter *filter = cb_data;
 
 	if (match_pattern(filter->patterns, refname)) {
 		if (filter->with_commit) {
 			struct commit *commit;
 
-			commit = lookup_commit_reference_gently(sha1, 1);
+			commit = lookup_commit_reference_gently(oid->hash, 1);
 			if (!commit)
 				return 0;
 			if (!contains(commit, filter->with_commit))
 				return 0;
 		}
 
-		if (points_at.nr && !match_points_at(refname, sha1))
+		if (points_at.nr && !match_points_at(refname, oid->hash))
 			return 0;
 
 		if (!filter->lines) {
 			if (filter->sort)
 				string_list_append(&filter->tags, refname);
 			else
 				printf("%s\n", refname);
 			return 0;
 		}
 		printf("%-15s ", refname);
-		show_tag_lines(sha1, filter->lines);
+		show_tag_lines(oid, filter->lines);
 		putchar('\n');
 	}
 
 	return 0;
 }
 
@@ -265,13 +265,13 @@
 	filter.lines = lines;
 	filter.sort = sort;
 	filter.with_commit = with_commit;
 	memset(&filter.tags, 0, sizeof(filter.tags));
 	filter.tags.strdup_strings = 1;
 
-	for_each_tag_ref(show_reference, (void *) &filter);
+	for_each_tag_ref(show_reference, (void *)&filter);
 	if (sort) {
 		int i;
 		if ((sort & SORT_MASK) == VERCMP_SORT)
 			qsort(filter.tags.items, filter.tags.nr,
 			      sizeof(struct string_list_item), sort_by_version);
 		if (sort & REVERSE_SORT)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/tag.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/tag.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/tag.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/tag.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/unpack-file.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/unpack-file.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/unpack-file.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/unpack-file.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/unpack-objects.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/unpack-objects.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/unpack-objects.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/unpack-objects.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/update-index.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/update-index.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/update-index.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/update-index.c	2015-07-28 04:34:56.000000000 +0800
@@ -30,12 +30,13 @@
 static int force_remove;
 static int verbose;
 static int mark_valid_only;
 static int mark_skip_worktree_only;
 #define MARK_FLAG 1
 #define UNMARK_FLAG 2
+static struct strbuf mtime_dir = STRBUF_INIT;
 
 __attribute__((format (printf, 1, 2)))
 static void report(const char *fmt, ...)
 {
 	va_list vp;
 
@@ -45,12 +46,172 @@
 	va_start(vp, fmt);
 	vprintf(fmt, vp);
 	putchar('\n');
 	va_end(vp);
 }
 
+static void remove_test_directory(void)
+{
+	if (mtime_dir.len)
+		remove_dir_recursively(&mtime_dir, 0);
+}
+
+static const char *get_mtime_path(const char *path)
+{
+	static struct strbuf sb = STRBUF_INIT;
+	strbuf_reset(&sb);
+	strbuf_addf(&sb, "%s/%s", mtime_dir.buf, path);
+	return sb.buf;
+}
+
+static void xmkdir(const char *path)
+{
+	path = get_mtime_path(path);
+	if (mkdir(path, 0700))
+		die_errno(_("failed to create directory %s"), path);
+}
+
+static int xstat_mtime_dir(struct stat *st)
+{
+	if (stat(mtime_dir.buf, st))
+		die_errno(_("failed to stat %s"), mtime_dir.buf);
+	return 0;
+}
+
+static int create_file(const char *path)
+{
+	int fd;
+	path = get_mtime_path(path);
+	fd = open(path, O_CREAT | O_RDWR, 0644);
+	if (fd < 0)
+		die_errno(_("failed to create file %s"), path);
+	return fd;
+}
+
+static void xunlink(const char *path)
+{
+	path = get_mtime_path(path);
+	if (unlink(path))
+		die_errno(_("failed to delete file %s"), path);
+}
+
+static void xrmdir(const char *path)
+{
+	path = get_mtime_path(path);
+	if (rmdir(path))
+		die_errno(_("failed to delete directory %s"), path);
+}
+
+static void avoid_racy(void)
+{
+	/*
+	 * not use if we could usleep(10) if USE_NSEC is defined. The
+	 * field nsec could be there, but the OS could choose to
+	 * ignore it?
+	 */
+	sleep(1);
+}
+
+static int test_if_untracked_cache_is_supported(void)
+{
+	struct stat st;
+	struct stat_data base;
+	int fd, ret = 0;
+
+	strbuf_addstr(&mtime_dir, "mtime-test-XXXXXX");
+	if (!mkdtemp(mtime_dir.buf))
+		die_errno("Could not make temporary directory");
+
+	fprintf(stderr, _("Testing "));
+	atexit(remove_test_directory);
+	xstat_mtime_dir(&st);
+	fill_stat_data(&base, &st);
+	fputc('.', stderr);
+
+	avoid_racy();
+	fd = create_file("newfile");
+	xstat_mtime_dir(&st);
+	if (!match_stat_data(&base, &st)) {
+		close(fd);
+		fputc('\n', stderr);
+		fprintf_ln(stderr,_("directory stat info does not "
+				    "change after adding a new file"));
+		goto done;
+	}
+	fill_stat_data(&base, &st);
+	fputc('.', stderr);
+
+	avoid_racy();
+	xmkdir("new-dir");
+	xstat_mtime_dir(&st);
+	if (!match_stat_data(&base, &st)) {
+		close(fd);
+		fputc('\n', stderr);
+		fprintf_ln(stderr, _("directory stat info does not change "
+				     "after adding a new directory"));
+		goto done;
+	}
+	fill_stat_data(&base, &st);
+	fputc('.', stderr);
+
+	avoid_racy();
+	write_or_die(fd, "data", 4);
+	close(fd);
+	xstat_mtime_dir(&st);
+	if (match_stat_data(&base, &st)) {
+		fputc('\n', stderr);
+		fprintf_ln(stderr, _("directory stat info changes "
+				     "after updating a file"));
+		goto done;
+	}
+	fputc('.', stderr);
+
+	avoid_racy();
+	close(create_file("new-dir/new"));
+	xstat_mtime_dir(&st);
+	if (match_stat_data(&base, &st)) {
+		fputc('\n', stderr);
+		fprintf_ln(stderr, _("directory stat info changes after "
+				     "adding a file inside subdirectory"));
+		goto done;
+	}
+	fputc('.', stderr);
+
+	avoid_racy();
+	xunlink("newfile");
+	xstat_mtime_dir(&st);
+	if (!match_stat_data(&base, &st)) {
+		fputc('\n', stderr);
+		fprintf_ln(stderr, _("directory stat info does not "
+				     "change after deleting a file"));
+		goto done;
+	}
+	fill_stat_data(&base, &st);
+	fputc('.', stderr);
+
+	avoid_racy();
+	xunlink("new-dir/new");
+	xrmdir("new-dir");
+	xstat_mtime_dir(&st);
+	if (!match_stat_data(&base, &st)) {
+		fputc('\n', stderr);
+		fprintf_ln(stderr, _("directory stat info does not "
+				     "change after deleting a directory"));
+		goto done;
+	}
+
+	if (rmdir(mtime_dir.buf))
+		die_errno(_("failed to delete directory %s"), mtime_dir.buf);
+	fprintf_ln(stderr, _(" OK"));
+	ret = 1;
+
+done:
+	strbuf_release(&mtime_dir);
+	return ret;
+}
+
 static int mark_ce_flags(const char *path, int flag, int mark)
 {
 	int namelen = strlen(path);
 	int pos = cache_name_pos(path, namelen);
 	if (0 <= pos) {
 		if (mark)
@@ -529,16 +690,15 @@
 	 * are not doing a merge, so exit with success status.
 	 */
 	read_head_pointers();
 
 	for (i = 1; i < ac; i++) {
 		const char *arg = av[i];
-		const char *p = prefix_path(prefix, prefix_length, arg);
+		char *p = prefix_path(prefix, prefix_length, arg);
 		err |= unresolve_one(p);
-		if (p < arg || p > arg + strlen(arg))
-			free((char *)p);
+		free(p);
 	}
 	return err;
 }
 
 static int do_reupdate(int ac, const char **av,
 		       const char *prefix, int prefix_length)
@@ -739,12 +899,13 @@
 	return 0;
 }
 
 int cmd_update_index(int argc, const char **argv, const char *prefix)
 {
 	int newfd, entries, has_errors = 0, line_termination = '\n';
+	int untracked_cache = -1;
 	int read_from_stdin = 0;
 	int prefix_length = prefix ? strlen(prefix) : 0;
 	int preferred_index_format = 0;
 	char set_executable_bit = 0;
 	struct refresh_params refresh_args = {0, &has_errors};
 	int lock_error = 0;
@@ -830,12 +991,16 @@
 			PARSE_OPT_NOARG | PARSE_OPT_NONEG,
 			resolve_undo_clear_callback},
 		OPT_INTEGER(0, "index-version", &preferred_index_format,
 			N_("write index in this format")),
 		OPT_BOOL(0, "split-index", &split_index,
 			N_("enable or disable split index")),
+		OPT_BOOL(0, "untracked-cache", &untracked_cache,
+			N_("enable/disable untracked cache")),
+		OPT_SET_INT(0, "force-untracked-cache", &untracked_cache,
+			    N_("enable untracked cache without testing the filesystem"), 2),
 		OPT_END()
 	};
 
 	if (argc == 2 && !strcmp(argv[1], "-h"))
 		usage_with_options(update_index_usage, options);
 
@@ -868,20 +1033,20 @@
 		case PARSE_OPT_HELP:
 			exit(129);
 		case PARSE_OPT_NON_OPTION:
 		case PARSE_OPT_DONE:
 		{
 			const char *path = ctx.argv[0];
-			const char *p;
+			char *p;
 
 			setup_work_tree();
 			p = prefix_path(prefix, prefix_length, path);
 			update_one(p);
 			if (set_executable_bit)
 				chmod_path(set_executable_bit, p);
-			free((char *)p);
+			free(p);
 			ctx.argc--;
 			ctx.argv++;
 			break;
 		}
 		case PARSE_OPT_UNKNOWN:
 			if (ctx.argv[0][1] == '-')
@@ -906,24 +1071,24 @@
 
 	if (read_from_stdin) {
 		struct strbuf buf = STRBUF_INIT, nbuf = STRBUF_INIT;
 
 		setup_work_tree();
 		while (strbuf_getline(&buf, stdin, line_termination) != EOF) {
-			const char *p;
+			char *p;
 			if (line_termination && buf.buf[0] == '"') {
 				strbuf_reset(&nbuf);
 				if (unquote_c_style(&nbuf, buf.buf, NULL))
 					die("line is badly quoted");
 				strbuf_swap(&buf, &nbuf);
 			}
 			p = prefix_path(prefix, prefix_length, buf.buf);
 			update_one(p);
 			if (set_executable_bit)
 				chmod_path(set_executable_bit, p);
-			free((char *)p);
+			free(p);
 		}
 		strbuf_release(&nbuf);
 		strbuf_release(&buf);
 	}
 
 	if (split_index > 0) {
@@ -936,12 +1101,34 @@
 		 * be shared with the_index.cache[]. So yeah we're
 		 * leaking a bit here.
 		 */
 		the_index.split_index = NULL;
 		the_index.cache_changed |= SOMETHING_CHANGED;
 	}
+	if (untracked_cache > 0) {
+		struct untracked_cache *uc;
+
+		if (untracked_cache < 2) {
+			setup_work_tree();
+			if (!test_if_untracked_cache_is_supported())
+				return 1;
+		}
+		if (!the_index.untracked) {
+			uc = xcalloc(1, sizeof(*uc));
+			strbuf_init(&uc->ident, 100);
+			uc->exclude_per_dir = ".gitignore";
+			/* should be the same flags used by git-status */
+			uc->dir_flags = DIR_SHOW_OTHER_DIRECTORIES | DIR_HIDE_EMPTY_DIRECTORIES;
+			the_index.untracked = uc;
+		}
+		add_untracked_ident(the_index.untracked);
+		the_index.cache_changed |= UNTRACKED_CHANGED;
+	} else if (!untracked_cache && the_index.untracked) {
+		the_index.untracked = NULL;
+		the_index.cache_changed |= UNTRACKED_CHANGED;
+	}
 
 	if (active_cache_changed) {
 		if (newfd < 0) {
 			if (refresh_args.flags & REFRESH_QUIET)
 				exit(128);
 			unable_to_lock_die(get_index_file(), lock_error);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/update-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/update-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/update-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/update-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/update-ref.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/update-ref.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/update-ref.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/update-ref.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/update-server-info.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/update-server-info.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/update-server-info.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/update-server-info.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/upload-archive.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/upload-archive.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/upload-archive.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/upload-archive.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/var.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/var.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/var.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/var.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/verify-commit.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/verify-commit.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/verify-commit.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/verify-commit.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/verify-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/verify-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/verify-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/verify-pack.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/verify-tag.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/verify-tag.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/verify-tag.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/verify-tag.o differ
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin: worktree.c
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin: worktree.c.bc
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin: worktree.o
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/write-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/write-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/write-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/write-tree.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin.h	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin.h	2015-07-28 04:34:56.000000000 +0800
@@ -130,12 +130,13 @@
 extern int cmd_upload_archive_writer(int argc, const char **argv, const char *prefix);
 extern int cmd_var(int argc, const char **argv, const char *prefix);
 extern int cmd_verify_commit(int argc, const char **argv, const char *prefix);
 extern int cmd_verify_tag(int argc, const char **argv, const char *prefix);
 extern int cmd_version(int argc, const char **argv, const char *prefix);
 extern int cmd_whatchanged(int argc, const char **argv, const char *prefix);
+extern int cmd_worktree(int argc, const char **argv, const char *prefix);
 extern int cmd_write_tree(int argc, const char **argv, const char *prefix);
 extern int cmd_verify_pack(int argc, const char **argv, const char *prefix);
 extern int cmd_show_ref(int argc, const char **argv, const char *prefix);
 extern int cmd_pack_refs(int argc, const char **argv, const char *prefix);
 extern int cmd_replace(int argc, const char **argv, const char *prefix);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bulk-checkin.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bulk-checkin.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bulk-checkin.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bulk-checkin.c	2015-07-28 04:34:56.000000000 +0800
@@ -21,37 +21,37 @@
 	uint32_t alloc_written;
 	uint32_t nr_written;
 } state;
 
 static void finish_bulk_checkin(struct bulk_checkin_state *state)
 {
-	unsigned char sha1[20];
+	struct object_id oid;
 	struct strbuf packname = STRBUF_INIT;
 	int i;
 
 	if (!state->f)
 		return;
 
 	if (state->nr_written == 0) {
 		close(state->f->fd);
 		unlink(state->pack_tmp_name);
 		goto clear_exit;
 	} else if (state->nr_written == 1) {
-		sha1close(state->f, sha1, CSUM_FSYNC);
+		sha1close(state->f, oid.hash, CSUM_FSYNC);
 	} else {
-		int fd = sha1close(state->f, sha1, 0);
-		fixup_pack_header_footer(fd, sha1, state->pack_tmp_name,
-					 state->nr_written, sha1,
+		int fd = sha1close(state->f, oid.hash, 0);
+		fixup_pack_header_footer(fd, oid.hash, state->pack_tmp_name,
+					 state->nr_written, oid.hash,
 					 state->offset);
 		close(fd);
 	}
 
 	strbuf_addf(&packname, "%s/pack/pack-", get_object_directory());
 	finish_tmp_packfile(&packname, state->pack_tmp_name,
 			    state->written, state->nr_written,
-			    &state->pack_idx_opts, sha1);
+			    &state->pack_idx_opts, oid.hash);
 	for (i = 0; i < state->nr_written; i++)
 		free(state->written[i]);
 
 clear_exit:
 	free(state->written);
 	memset(state, 0, sizeof(*state));
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bulk-checkin.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bulk-checkin.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bulk-checkin.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bulk-checkin.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bundle.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bundle.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bundle.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bundle.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/cache.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/cache.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/cache.h	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/cache.h	2015-07-28 04:34:56.000000000 +0800
@@ -40,12 +40,20 @@
 void git_deflate_end(git_zstream *);
 int git_deflate_abort(git_zstream *);
 int git_deflate_end_gently(git_zstream *);
 int git_deflate(git_zstream *, int flush);
 unsigned long git_deflate_bound(git_zstream *, unsigned long);
 
+/* The length in bytes and in hex digits of an object name (SHA-1 value). */
+#define GIT_SHA1_RAWSZ 20
+#define GIT_SHA1_HEXSZ (2 * GIT_SHA1_RAWSZ)
+
+struct object_id {
+	unsigned char hash[GIT_SHA1_RAWSZ];
+};
+
 #if defined(DT_UNKNOWN) && !defined(NO_D_TYPE_IN_DIRENT)
 #define DTYPE(de)	((de)->d_type)
 #else
 #undef DT_UNKNOWN
 #undef DT_DIR
 #undef DT_REG
@@ -286,14 +294,17 @@
 #define CE_ENTRY_CHANGED	(1 << 1)
 #define CE_ENTRY_REMOVED	(1 << 2)
 #define CE_ENTRY_ADDED		(1 << 3)
 #define RESOLVE_UNDO_CHANGED	(1 << 4)
 #define CACHE_TREE_CHANGED	(1 << 5)
 #define SPLIT_INDEX_ORDERED	(1 << 6)
+#define UNTRACKED_CHANGED	(1 << 7)
 
 struct split_index;
+struct untracked_cache;
+
 struct index_state {
 	struct cache_entry **cache;
 	unsigned int version;
 	unsigned int cache_nr, cache_alloc, cache_changed;
 	struct string_list *resolve_undo;
 	struct cache_tree *cache_tree;
@@ -301,12 +312,13 @@
 	struct cache_time timestamp;
 	unsigned name_hash_initialized : 1,
 		 initialized : 1;
 	struct hashmap name_hash;
 	struct hashmap dir_hash;
 	unsigned char sha1[20];
+	struct untracked_cache *untracked;
 };
 
 extern struct index_state the_index;
 
 /* Name hashing */
 extern void add_name_hash(struct index_state *istate, struct cache_entry *ce);
@@ -367,12 +379,13 @@
 		S_ISGITLINK(mode) ? OBJ_COMMIT :
 		OBJ_BLOB;
 }
 
 /* Double-check local_repo_env below if you add to this list. */
 #define GIT_DIR_ENVIRONMENT "GIT_DIR"
+#define GIT_COMMON_DIR_ENVIRONMENT "GIT_COMMON_DIR"
 #define GIT_NAMESPACE_ENVIRONMENT "GIT_NAMESPACE"
 #define GIT_WORK_TREE_ENVIRONMENT "GIT_WORK_TREE"
 #define GIT_PREFIX_ENVIRONMENT "GIT_PREFIX"
 #define DEFAULT_GIT_DIR_ENVIRONMENT ".git"
 #define DB_ENVIRONMENT "GIT_OBJECT_DIRECTORY"
 #define INDEX_ENVIRONMENT "GIT_INDEX_FILE"
@@ -420,17 +433,19 @@
 extern int is_bare_repository_cfg;
 extern int is_bare_repository(void);
 extern int is_inside_git_dir(void);
 extern char *git_work_tree_cfg;
 extern int is_inside_work_tree(void);
 extern const char *get_git_dir(void);
+extern const char *get_git_common_dir(void);
 extern int is_git_directory(const char *path);
 extern char *get_object_directory(void);
 extern char *get_index_file(void);
 extern char *get_graft_file(void);
 extern int set_git_dir(const char *path);
+extern int get_common_dir(struct strbuf *sb, const char *gitdir);
 extern const char *get_git_namespace(void);
 extern const char *strip_namespace(const char *namespaced_ref);
 extern const char *get_git_work_tree(void);
 extern const char *read_gitfile(const char *path);
 extern const char *resolve_gitdir(const char *suspect);
 extern void set_git_work_tree(const char *tree);
@@ -549,12 +564,14 @@
  * Return 0 if st is consistent with a file not having been changed
  * since sd was filled.  If there are differences, return a
  * combination of MTIME_CHANGED, CTIME_CHANGED, OWNER_CHANGED,
  * INODE_CHANGED, and DATA_CHANGED.
  */
 extern int match_stat_data(const struct stat_data *sd, struct stat *st);
+extern int match_stat_data_racy(const struct index_state *istate,
+				const struct stat_data *sd, struct stat *st);
 
 extern void fill_stat_cache_info(struct cache_entry *ce, struct stat *st);
 
 #define REFRESH_REALLY		0x0001	/* ignore_valid */
 #define REFRESH_UNMERGED	0x0002	/* allow unmerged */
 #define REFRESH_QUIET		0x0004	/* be quiet about it */
@@ -609,12 +626,13 @@
 extern int fsync_object_files;
 extern int core_preload_index;
 extern int core_apply_sparse_checkout;
 extern int precomposed_unicode;
 extern int protect_hfs;
 extern int protect_ntfs;
+extern int git_db_env, git_index_env, git_graft_env, git_common_dir_env;
 
 /*
  * Include broken refs in all ref iterations, which will
  * generally choke dangerous operations rather than letting
  * them silently proceed without taking the broken ref into
  * account.
@@ -679,24 +697,25 @@
 #define INODE_CHANGED   0x0010
 #define DATA_CHANGED    0x0020
 #define TYPE_CHANGED    0x0040
 
 extern char *mksnpath(char *buf, size_t n, const char *fmt, ...)
 	__attribute__((format (printf, 3, 4)));
-extern char *git_snpath(char *buf, size_t n, const char *fmt, ...)
-	__attribute__((format (printf, 3, 4)));
+extern void strbuf_git_path(struct strbuf *sb, const char *fmt, ...)
+	__attribute__((format (printf, 2, 3)));
 extern char *git_pathdup(const char *fmt, ...)
 	__attribute__((format (printf, 1, 2)));
 extern char *mkpathdup(const char *fmt, ...)
 	__attribute__((format (printf, 1, 2)));
 
 /* Return a statically allocated filename matching the sha1 signature */
-extern char *mkpath(const char *fmt, ...) __attribute__((format (printf, 1, 2)));
-extern char *git_path(const char *fmt, ...) __attribute__((format (printf, 1, 2)));
-extern char *git_path_submodule(const char *path, const char *fmt, ...)
+extern const char *mkpath(const char *fmt, ...) __attribute__((format (printf, 1, 2)));
+extern const char *git_path(const char *fmt, ...) __attribute__((format (printf, 1, 2)));
+extern const char *git_path_submodule(const char *path, const char *fmt, ...)
 	__attribute__((format (printf, 2, 3)));
+extern void report_linked_checkout_garbage(void);
 
 /*
  * Return the name of the file in the local object database that would
  * be used to store a loose object with the specified sha1.  The
  * return value is a pointer to a statically allocated buffer that is
  * overwritten each time the function is called.
@@ -715,40 +734,62 @@
  * sha1 in its name.  The return value is a pointer to memory that is
  * overwritten each time this function is called.
  */
 extern char *sha1_pack_index_name(const unsigned char *sha1);
 
 extern const char *find_unique_abbrev(const unsigned char *sha1, int);
-extern const unsigned char null_sha1[20];
+extern const unsigned char null_sha1[GIT_SHA1_RAWSZ];
 
 static inline int hashcmp(const unsigned char *sha1, const unsigned char *sha2)
 {
 	int i;
 
-	for (i = 0; i < 20; i++, sha1++, sha2++) {
+	for (i = 0; i < GIT_SHA1_RAWSZ; i++, sha1++, sha2++) {
 		if (*sha1 != *sha2)
 			return *sha1 - *sha2;
 	}
 
 	return 0;
 }
 
+static inline int oidcmp(const struct object_id *oid1, const struct object_id *oid2)
+{
+	return hashcmp(oid1->hash, oid2->hash);
+}
+
 static inline int is_null_sha1(const unsigned char *sha1)
 {
 	return !hashcmp(sha1, null_sha1);
 }
 
+static inline int is_null_oid(const struct object_id *oid)
+{
+	return !hashcmp(oid->hash, null_sha1);
+}
+
 static inline void hashcpy(unsigned char *sha_dst, const unsigned char *sha_src)
 {
-	memcpy(sha_dst, sha_src, 20);
+	memcpy(sha_dst, sha_src, GIT_SHA1_RAWSZ);
+}
+
+static inline void oidcpy(struct object_id *dst, const struct object_id *src)
+{
+	hashcpy(dst->hash, src->hash);
 }
+
 static inline void hashclr(unsigned char *hash)
 {
-	memset(hash, 0, 20);
+	memset(hash, 0, GIT_SHA1_RAWSZ);
 }
 
+static inline void oidclr(struct object_id *oid)
+{
+	hashclr(oid->hash);
+}
+
+
 #define EMPTY_TREE_SHA1_HEX \
 	"4b825dc642cb6eb9a060e54bf8d69288fbee4904"
 #define EMPTY_TREE_SHA1_BIN_LITERAL \
 	 "\x4b\x82\x5d\xc6\x42\xcb\x6e\xb9\xa0\x60" \
 	 "\xe5\x4b\xf8\xd6\x92\x88\xfb\xee\x49\x04"
 #define EMPTY_TREE_SHA1_BIN \
@@ -841,12 +882,13 @@
  * "$HOME/.config/git/$filename". Return NULL upon error.
  */
 extern char *xdg_config_home(const char *filename);
 
 /* object replacement */
 #define LOOKUP_REPLACE_OBJECT 1
+#define LOOKUP_UNKNOWN_OBJECT 2
 extern void *read_sha1_file_extended(const unsigned char *sha1, enum object_type *type, unsigned long *size, unsigned flag);
 static inline void *read_sha1_file(const unsigned char *sha1, enum object_type *type, unsigned long *size)
 {
 	return read_sha1_file_extended(sha1, type, size, LOOKUP_REPLACE_OBJECT);
 }
 
@@ -935,21 +977,27 @@
 #define DEFAULT_ABBREV default_abbrev
 
 struct object_context {
 	unsigned char tree[20];
 	char path[PATH_MAX];
 	unsigned mode;
+	/*
+	 * symlink_path is only used by get_tree_entry_follow_symlinks,
+	 * and only for symlinks that point outside the repository.
+	 */
+	struct strbuf symlink_path;
 };
 
-#define GET_SHA1_QUIETLY        01
-#define GET_SHA1_COMMIT         02
-#define GET_SHA1_COMMITTISH     04
-#define GET_SHA1_TREE          010
-#define GET_SHA1_TREEISH       020
-#define GET_SHA1_BLOB	       040
-#define GET_SHA1_ONLY_TO_DIE 04000
+#define GET_SHA1_QUIETLY           01
+#define GET_SHA1_COMMIT            02
+#define GET_SHA1_COMMITTISH        04
+#define GET_SHA1_TREE             010
+#define GET_SHA1_TREEISH          020
+#define GET_SHA1_BLOB             040
+#define GET_SHA1_FOLLOW_SYMLINKS 0100
+#define GET_SHA1_ONLY_TO_DIE    04000
 
 extern int get_sha1(const char *str, unsigned char *sha1);
 extern int get_sha1_commit(const char *str, unsigned char *sha1);
 extern int get_sha1_committish(const char *str, unsigned char *sha1);
 extern int get_sha1_tree(const char *str, unsigned char *sha1);
 extern int get_sha1_treeish(const char *str, unsigned char *sha1);
@@ -965,14 +1013,16 @@
  * starting at hex.  Write the 20-byte result to sha1 in binary form.
  * Return 0 on success.  Reading stops if a NUL is encountered in the
  * input, so it is safe to pass this function an arbitrary
  * null-terminated string.
  */
 extern int get_sha1_hex(const char *hex, unsigned char *sha1);
+extern int get_oid_hex(const char *hex, struct object_id *sha1);
 
 extern char *sha1_to_hex(const unsigned char *sha1);	/* static buffer result! */
+extern char *oid_to_hex(const struct object_id *oid);	/* same static buffer as sha1_to_hex */
 extern int read_ref_full(const char *refname, int resolve_flags,
 			 unsigned char *sha1, int *flags);
 extern int read_ref(const char *refname, unsigned char *sha1);
 
 /*
  * Resolve a reference, recursively following symbolic refererences.
@@ -1320,12 +1370,13 @@
 struct object_info {
 	/* Request */
 	enum object_type *typep;
 	unsigned long *sizep;
 	unsigned long *disk_sizep;
 	unsigned char *delta_base_sha1;
+	struct strbuf *typename;
 
 	/* Response */
 	enum {
 		OI_CACHED,
 		OI_LOOSE,
 		OI_PACKED,
@@ -1508,15 +1559,19 @@
 extern const char *git_mailmap_blob;
 
 /* IO helper functions */
 extern void maybe_flush_or_die(FILE *, const char *);
 __attribute__((format (printf, 2, 3)))
 extern void fprintf_or_die(FILE *, const char *fmt, ...);
+
+#define COPY_READ_ERROR (-2)
+#define COPY_WRITE_ERROR (-3)
 extern int copy_fd(int ifd, int ofd);
 extern int copy_file(const char *dst, const char *src, int mode);
 extern int copy_file_with_time(const char *dst, const char *src, int mode);
+
 extern void write_or_die(int fd, const void *buf, size_t count);
 extern int write_or_whine(int fd, const void *buf, size_t count, const char *msg);
 extern int write_or_whine_pipe(int fd, const void *buf, size_t count, const char *msg);
 extern void fsync_or_die(int fd, const char *);
 
 extern ssize_t read_in_full(int fd, void *buf, size_t count);
@@ -1524,12 +1579,14 @@
 extern ssize_t pread_in_full(int fd, void *buf, size_t count, off_t offset);
 
 static inline ssize_t write_str_in_full(int fd, const char *str)
 {
 	return write_in_full(fd, str, strlen(str));
 }
+__attribute__((format (printf, 3, 4)))
+extern int write_file(const char *path, int fatal, const char *fmt, ...);
 
 /* pager.c */
 extern void setup_pager(void);
 extern const char *pager_program;
 extern int pager_in_use(void);
 extern int pager_use_color;
@@ -1647,8 +1704,9 @@
  * future calls to stat_validity_check will match iff one of those
  * conditions continues to be true.
  */
 void stat_validity_update(struct stat_validity *sv, int fd);
 
 int versioncmp(const char *s1, const char *s2);
+void sleep_millisec(int millisec);
 
 #endif /* CACHE_H */
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/cache-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/cache-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/cache-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/cache-tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/color.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/color.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/color.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/color.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/column.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/column.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/column.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/column.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/combine-diff.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/combine-diff.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/combine-diff.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/combine-diff.c	2015-07-28 04:34:56.000000000 +0800
@@ -41,15 +41,15 @@
 			memcpy(p->path, path, len);
 			p->path[len] = 0;
 			p->next = NULL;
 			memset(p->parent, 0,
 			       sizeof(p->parent[0]) * num_parent);
 
-			hashcpy(p->sha1, q->queue[i]->two->sha1);
+			hashcpy(p->oid.hash, q->queue[i]->two->sha1);
 			p->mode = q->queue[i]->two->mode;
-			hashcpy(p->parent[n].sha1, q->queue[i]->one->sha1);
+			hashcpy(p->parent[n].oid.hash, q->queue[i]->one->sha1);
 			p->parent[n].mode = q->queue[i]->one->mode;
 			p->parent[n].status = q->queue[i]->status;
 			*tail = p;
 			tail = &p->next;
 		}
 		return curr;
@@ -74,13 +74,13 @@
 		if (cmp > 0) {
 			/* q->queue[i] not in p->path; skip it */
 			i++;
 			continue;
 		}
 
-		hashcpy(p->parent[n].sha1, q->queue[i]->one->sha1);
+		hashcpy(p->parent[n].oid.hash, q->queue[i]->one->sha1);
 		p->parent[n].mode = q->queue[i]->one->mode;
 		p->parent[n].status = q->queue[i]->status;
 
 		tail = &p->next;
 		i++;
 	}
@@ -281,36 +281,36 @@
 		free(directions[i]);
 	free(directions);
 
 	return base;
 }
 
-static char *grab_blob(const unsigned char *sha1, unsigned int mode,
+static char *grab_blob(const struct object_id *oid, unsigned int mode,
 		       unsigned long *size, struct userdiff_driver *textconv,
 		       const char *path)
 {
 	char *blob;
 	enum object_type type;
 
 	if (S_ISGITLINK(mode)) {
 		blob = xmalloc(100);
 		*size = snprintf(blob, 100,
-				 "Subproject commit %s\n", sha1_to_hex(sha1));
-	} else if (is_null_sha1(sha1)) {
+				 "Subproject commit %s\n", oid_to_hex(oid));
+	} else if (is_null_oid(oid)) {
 		/* deleted blob */
 		*size = 0;
 		return xcalloc(1, 1);
 	} else if (textconv) {
 		struct diff_filespec *df = alloc_filespec(path);
-		fill_filespec(df, sha1, 1, mode);
+		fill_filespec(df, oid->hash, 1, mode);
 		*size = fill_textconv(textconv, df, &blob);
 		free_filespec(df);
 	} else {
-		blob = read_sha1_file(sha1, &type, size);
+		blob = read_sha1_file(oid->hash, &type, size);
 		if (type != OBJ_BLOB)
-			die("object '%s' is not a blob!", sha1_to_hex(sha1));
+			die("object '%s' is not a blob!", oid_to_hex(oid));
 	}
 	return blob;
 }
 
 static void append_lost(struct sline *sline, int n, const char *line, int len)
 {
@@ -386,13 +386,13 @@
 		state->sline[state->lno-1].flag |= state->nmask;
 		state->lno++;
 		break;
 	}
 }
 
-static void combine_diff(const unsigned char *parent, unsigned int mode,
+static void combine_diff(const struct object_id *parent, unsigned int mode,
 			 mmfile_t *result_file,
 			 struct sline *sline, unsigned int cnt, int n,
 			 int num_parent, int result_deleted,
 			 struct userdiff_driver *textconv,
 			 const char *path, long flags)
 {
@@ -416,16 +416,14 @@
 	state.nmask = nmask;
 	state.sline = sline;
 	state.lno = 1;
 	state.num_parent = num_parent;
 	state.n = n;
 
-	if (xdi_diff_outf(&parent_file, result_file, consume_line, &state,
-			  &xpp, &xecfg))
-		die("unable to generate combined diff for %s",
-		    sha1_to_hex(parent));
+	xdi_diff_outf(&parent_file, result_file, consume_line, &state,
+		      &xpp, &xecfg);
 	free(parent_file.ptr);
 
 	/* Assign line numbers for this parent.
 	 *
 	 * sline[lno].p_lno[n] records the first line number
 	 * (counting from 1) for parent N if the final hunk display
@@ -896,13 +894,13 @@
 				 struct rev_info *rev,
 				 const char *line_prefix,
 				 int mode_differs,
 				 int show_file_header)
 {
 	struct diff_options *opt = &rev->diffopt;
-	int abbrev = DIFF_OPT_TST(opt, FULL_INDEX) ? 40 : DEFAULT_ABBREV;
+	int abbrev = DIFF_OPT_TST(opt, FULL_INDEX) ? GIT_SHA1_HEXSZ : DEFAULT_ABBREV;
 	const char *a_prefix = opt->a_prefix ? opt->a_prefix : "a/";
 	const char *b_prefix = opt->b_prefix ? opt->b_prefix : "b/";
 	const char *c_meta = diff_get_color_opt(opt, DIFF_METAINFO);
 	const char *c_reset = diff_get_color_opt(opt, DIFF_RESET);
 	const char *abb;
 	int added = 0;
@@ -913,17 +911,17 @@
 		show_log(rev);
 
 	dump_quoted_path(dense ? "diff --cc " : "diff --combined ",
 			 "", elem->path, line_prefix, c_meta, c_reset);
 	printf("%s%sindex ", line_prefix, c_meta);
 	for (i = 0; i < num_parent; i++) {
-		abb = find_unique_abbrev(elem->parent[i].sha1,
+		abb = find_unique_abbrev(elem->parent[i].oid.hash,
 					 abbrev);
 		printf("%s%s", i ? "," : "", abb);
 	}
-	abb = find_unique_abbrev(elem->sha1, abbrev);
+	abb = find_unique_abbrev(elem->oid.hash, abbrev);
 	printf("..%s%s\n", abb, c_reset);
 
 	if (mode_differs) {
 		deleted = !elem->mode;
 
 		/* We say it was added if nobody had it */
@@ -990,13 +988,13 @@
 		userdiff = userdiff_find_by_name("default");
 	if (DIFF_OPT_TST(opt, ALLOW_TEXTCONV))
 		textconv = userdiff_get_textconv(userdiff);
 
 	/* Read the result of merge first */
 	if (!working_tree_file)
-		result = grab_blob(elem->sha1, elem->mode, &result_size,
+		result = grab_blob(&elem->oid, elem->mode, &result_size,
 				   textconv, elem->path);
 	else {
 		/* Used by diff-tree to read from the working tree */
 		struct stat st;
 		int fd = -1;
 
@@ -1012,18 +1010,18 @@
 				return;
 			}
 			result_size = buf.len;
 			result = strbuf_detach(&buf, NULL);
 			elem->mode = canon_mode(st.st_mode);
 		} else if (S_ISDIR(st.st_mode)) {
-			unsigned char sha1[20];
-			if (resolve_gitlink_ref(elem->path, "HEAD", sha1) < 0)
-				result = grab_blob(elem->sha1, elem->mode,
+			struct object_id oid;
+			if (resolve_gitlink_ref(elem->path, "HEAD", oid.hash) < 0)
+				result = grab_blob(&elem->oid, elem->mode,
 						   &result_size, NULL, NULL);
 			else
-				result = grab_blob(sha1, elem->mode,
+				result = grab_blob(&oid, elem->mode,
 						   &result_size, NULL, NULL);
 		} else if (textconv) {
 			struct diff_filespec *df = alloc_filespec(elem->path);
 			fill_filespec(df, null_sha1, 0, st.st_mode);
 			result_size = fill_textconv(textconv, df, &result);
 			free_filespec(df);
@@ -1089,13 +1087,13 @@
 		is_binary = userdiff->binary;
 	else {
 		is_binary = buffer_is_binary(result, result_size);
 		for (i = 0; !is_binary && i < num_parent; i++) {
 			char *buf;
 			unsigned long size;
-			buf = grab_blob(elem->parent[i].sha1,
+			buf = grab_blob(&elem->parent[i].oid,
 					elem->parent[i].mode,
 					&size, NULL, NULL);
 			if (buffer_is_binary(buf, size))
 				is_binary = 1;
 			free(buf);
 		}
@@ -1138,20 +1136,20 @@
 	for (lno = 0; lno <= cnt; lno++)
 		sline[lno+1].p_lno = sline[lno].p_lno + num_parent;
 
 	for (i = 0; i < num_parent; i++) {
 		int j;
 		for (j = 0; j < i; j++) {
-			if (!hashcmp(elem->parent[i].sha1,
-				     elem->parent[j].sha1)) {
+			if (!oidcmp(&elem->parent[i].oid,
+				     &elem->parent[j].oid)) {
 				reuse_combine_diff(sline, cnt, i, j);
 				break;
 			}
 		}
 		if (i <= j)
-			combine_diff(elem->parent[i].sha1,
+			combine_diff(&elem->parent[i].oid,
 				     elem->parent[i].mode,
 				     &result_file, sline,
 				     cnt, i, num_parent, result_deleted,
 				     textconv, elem->path, opt->xdl_opts);
 	}
 
@@ -1205,15 +1203,15 @@
 		for (i = 0; i < num_parent; i++)
 			printf("%06o ", p->parent[i].mode);
 		printf("%06o", p->mode);
 
 		/* Show sha1's */
 		for (i = 0; i < num_parent; i++)
-			printf(" %s", diff_unique_abbrev(p->parent[i].sha1,
+			printf(" %s", diff_unique_abbrev(p->parent[i].oid.hash,
 							 opt->abbrev));
-		printf(" %s ", diff_unique_abbrev(p->sha1, opt->abbrev));
+		printf(" %s ", diff_unique_abbrev(p->oid.hash, opt->abbrev));
 	}
 
 	if (opt->output_format & (DIFF_FORMAT_RAW | DIFF_FORMAT_NAME_STATUS)) {
 		for (i = 0; i < num_parent; i++)
 			putchar(p->parent[i].status);
 		putchar(inter_name_termination);
@@ -1270,22 +1268,22 @@
 	pair->one = pool + 1;
 	pair->two = pool;
 
 	for (i = 0; i < num_parent; i++) {
 		pair->one[i].path = p->path;
 		pair->one[i].mode = p->parent[i].mode;
-		hashcpy(pair->one[i].sha1, p->parent[i].sha1);
-		pair->one[i].sha1_valid = !is_null_sha1(p->parent[i].sha1);
+		hashcpy(pair->one[i].sha1, p->parent[i].oid.hash);
+		pair->one[i].sha1_valid = !is_null_oid(&p->parent[i].oid);
 		pair->one[i].has_more_entries = 1;
 	}
 	pair->one[num_parent - 1].has_more_entries = 0;
 
 	pair->two->path = p->path;
 	pair->two->mode = p->mode;
-	hashcpy(pair->two->sha1, p->sha1);
-	pair->two->sha1_valid = !is_null_sha1(p->sha1);
+	hashcpy(pair->two->sha1, p->oid.hash);
+	pair->two->sha1_valid = !is_null_oid(&p->oid);
 	return pair;
 }
 
 static void handle_combined_callback(struct diff_options *opt,
 				     struct combine_diff_path *paths,
 				     int num_parent,
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/combine-diff.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/combine-diff.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/combine-diff.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/combine-diff.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/command-list.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/command-list.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/command-list.txt	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/command-list.txt	2015-07-28 04:34:56.000000000 +0800
@@ -1,133 +1,143 @@
-# List of known git commands.
+# common commands are grouped by themes
+# these groups are output by 'git help' in the order declared here.
+# map each common command in the command list to one of these groups.
+### common groups (do not change this line)
+init         start a working area (see also: git help tutorial)
+worktree     work on the current change (see also: git help everyday)
+info         examine the history and state (see also: git help revisions)
+history      grow, mark and tweak your common history
+remote       collaborate (see also: git help workflows)
+
+### command list (do not change this line)
 # command name				category [deprecated] [common]
-git-add                                 mainporcelain common
+git-add                                 mainporcelain           worktree
 git-am                                  mainporcelain
 git-annotate                            ancillaryinterrogators
 git-apply                               plumbingmanipulators
 git-archimport                          foreignscminterface
 git-archive                             mainporcelain
-git-bisect                              mainporcelain common
+git-bisect                              mainporcelain           info
 git-blame                               ancillaryinterrogators
-git-branch                              mainporcelain common
+git-branch                              mainporcelain           history
 git-bundle                              mainporcelain
 git-cat-file                            plumbinginterrogators
 git-check-attr                          purehelpers
 git-check-ignore                        purehelpers
 git-check-mailmap                       purehelpers
-git-checkout                            mainporcelain common
+git-checkout                            mainporcelain           history
 git-checkout-index                      plumbingmanipulators
 git-check-ref-format                    purehelpers
 git-cherry                              ancillaryinterrogators
 git-cherry-pick                         mainporcelain
 git-citool                              mainporcelain
 git-clean                               mainporcelain
-git-clone                               mainporcelain common
+git-clone                               mainporcelain           init
 git-column                              purehelpers
-git-commit                              mainporcelain common
+git-commit                              mainporcelain           history
 git-commit-tree                         plumbingmanipulators
 git-config                              ancillarymanipulators
 git-count-objects                       ancillaryinterrogators
 git-credential                          purehelpers
 git-credential-cache                    purehelpers
 git-credential-store                    purehelpers
 git-cvsexportcommit                     foreignscminterface
 git-cvsimport                           foreignscminterface
 git-cvsserver                           foreignscminterface
 git-daemon                              synchingrepositories
 git-describe                            mainporcelain
-git-diff                                mainporcelain common
+git-diff                                mainporcelain           history
 git-diff-files                          plumbinginterrogators
 git-diff-index                          plumbinginterrogators
 git-diff-tree                           plumbinginterrogators
 git-difftool                            ancillaryinterrogators
 git-fast-export				ancillarymanipulators
 git-fast-import				ancillarymanipulators
-git-fetch                               mainporcelain common
+git-fetch                               mainporcelain           remote
 git-fetch-pack                          synchingrepositories
 git-filter-branch                       ancillarymanipulators
 git-fmt-merge-msg                       purehelpers
 git-for-each-ref                        plumbinginterrogators
 git-format-patch                        mainporcelain
 git-fsck	                        ancillaryinterrogators
 git-gc                                  mainporcelain
 git-get-tar-commit-id                   ancillaryinterrogators
-git-grep                                mainporcelain common
+git-grep                                mainporcelain           info
 git-gui                                 mainporcelain
 git-hash-object                         plumbingmanipulators
 git-help				ancillaryinterrogators
 git-http-backend                        synchingrepositories
 git-http-fetch                          synchelpers
 git-http-push                           synchelpers
 git-imap-send                           foreignscminterface
 git-index-pack                          plumbingmanipulators
-git-init                                mainporcelain common
+git-init                                mainporcelain           init
 git-instaweb                            ancillaryinterrogators
 git-interpret-trailers                  purehelpers
 gitk                                    mainporcelain
-git-log                                 mainporcelain common
+git-log                                 mainporcelain           info
 git-ls-files                            plumbinginterrogators
 git-ls-remote                           plumbinginterrogators
 git-ls-tree                             plumbinginterrogators
 git-mailinfo                            purehelpers
 git-mailsplit                           purehelpers
-git-merge                               mainporcelain common
+git-merge                               mainporcelain           history
 git-merge-base                          plumbinginterrogators
 git-merge-file                          plumbingmanipulators
 git-merge-index                         plumbingmanipulators
 git-merge-one-file                      purehelpers
 git-mergetool                           ancillarymanipulators
 git-merge-tree                          ancillaryinterrogators
 git-mktag                               plumbingmanipulators
 git-mktree                              plumbingmanipulators
-git-mv                                  mainporcelain common
+git-mv                                  mainporcelain           worktree
 git-name-rev                            plumbinginterrogators
 git-notes                               mainporcelain
 git-p4                                  foreignscminterface
 git-pack-objects                        plumbingmanipulators
 git-pack-redundant                      plumbinginterrogators
 git-pack-refs                           ancillarymanipulators
 git-parse-remote                        synchelpers
 git-patch-id                            purehelpers
 git-prune                               ancillarymanipulators
 git-prune-packed                        plumbingmanipulators
-git-pull                                mainporcelain common
-git-push                                mainporcelain common
+git-pull                                mainporcelain           remote
+git-push                                mainporcelain           remote
 git-quiltimport                         foreignscminterface
 git-read-tree                           plumbingmanipulators
-git-rebase                              mainporcelain common
+git-rebase                              mainporcelain           history
 git-receive-pack                        synchelpers
 git-reflog                              ancillarymanipulators
 git-relink                              ancillarymanipulators
 git-remote                              ancillarymanipulators
 git-repack                              ancillarymanipulators
 git-replace                             ancillarymanipulators
 git-request-pull                        foreignscminterface
 git-rerere                              ancillaryinterrogators
-git-reset                               mainporcelain common
+git-reset                               mainporcelain           worktree
 git-revert                              mainporcelain
 git-rev-list                            plumbinginterrogators
 git-rev-parse                           ancillaryinterrogators
-git-rm                                  mainporcelain common
+git-rm                                  mainporcelain           worktree
 git-send-email                          foreignscminterface
 git-send-pack                           synchingrepositories
 git-shell                               synchelpers
 git-shortlog                            mainporcelain
-git-show                                mainporcelain common
+git-show                                mainporcelain           info
 git-show-branch                         ancillaryinterrogators
 git-show-index                          plumbinginterrogators
 git-show-ref                            plumbinginterrogators
 git-sh-i18n                             purehelpers
 git-sh-setup                            purehelpers
 git-stash                               mainporcelain
-git-status                              mainporcelain common
+git-status                              mainporcelain           info
 git-stripspace                          purehelpers
 git-submodule                           mainporcelain
 git-svn                                 foreignscminterface
 git-symbolic-ref                        plumbingmanipulators
-git-tag                                 mainporcelain common
+git-tag                                 mainporcelain           history
 git-unpack-file                         plumbinginterrogators
 git-unpack-objects                      plumbingmanipulators
 git-update-index                        plumbingmanipulators
 git-update-ref                          plumbingmanipulators
 git-update-server-info                  synchingrepositories
 git-upload-archive                      synchelpers
@@ -135,7 +145,8 @@
 git-var                                 plumbinginterrogators
 git-verify-commit                       ancillaryinterrogators
 git-verify-pack                         plumbinginterrogators
 git-verify-tag                          ancillaryinterrogators
 gitweb                                  ancillaryinterrogators
 git-whatchanged                         ancillaryinterrogators
+git-worktree                            mainporcelain
 git-write-tree                          plumbingmanipulators
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/commit.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/commit.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/commit.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/commit.c	2015-07-28 04:34:56.000000000 +0800
@@ -52,18 +52,18 @@
 		return create_object(sha1, alloc_commit_node());
 	return object_as_type(obj, OBJ_COMMIT, 0);
 }
 
 struct commit *lookup_commit_reference_by_name(const char *name)
 {
-	unsigned char sha1[20];
+	struct object_id oid;
 	struct commit *commit;
 
-	if (get_sha1_committish(name, sha1))
+	if (get_sha1_committish(name, oid.hash))
 		return NULL;
-	commit = lookup_commit_reference(sha1);
+	commit = lookup_commit_reference(oid.hash);
 	if (parse_commit(commit))
 		return NULL;
 	return commit;
 }
 
 static unsigned long parse_commit_date(const char *buf, const char *tail)
@@ -96,24 +96,24 @@
 static struct commit_graft **commit_graft;
 static int commit_graft_alloc, commit_graft_nr;
 
 static const unsigned char *commit_graft_sha1_access(size_t index, void *table)
 {
 	struct commit_graft **commit_graft_table = table;
-	return commit_graft_table[index]->sha1;
+	return commit_graft_table[index]->oid.hash;
 }
 
 static int commit_graft_pos(const unsigned char *sha1)
 {
 	return sha1_pos(sha1, commit_graft, commit_graft_nr,
 			commit_graft_sha1_access);
 }
 
 int register_commit_graft(struct commit_graft *graft, int ignore_dups)
 {
-	int pos = commit_graft_pos(graft->sha1);
+	int pos = commit_graft_pos(graft->oid.hash);
 
 	if (0 <= pos) {
 		if (ignore_dups)
 			free(graft);
 		else {
 			free(commit_graft[pos]);
@@ -135,28 +135,29 @@
 
 struct commit_graft *read_graft_line(char *buf, int len)
 {
 	/* The format is just "Commit Parent1 Parent2 ...\n" */
 	int i;
 	struct commit_graft *graft = NULL;
+	const int entry_size = GIT_SHA1_HEXSZ + 1;
 
 	while (len && isspace(buf[len-1]))
 		buf[--len] = '\0';
 	if (buf[0] == '#' || buf[0] == '\0')
 		return NULL;
-	if ((len + 1) % 41)
+	if ((len + 1) % entry_size)
 		goto bad_graft_data;
-	i = (len + 1) / 41 - 1;
-	graft = xmalloc(sizeof(*graft) + 20 * i);
+	i = (len + 1) / entry_size - 1;
+	graft = xmalloc(sizeof(*graft) + GIT_SHA1_RAWSZ * i);
 	graft->nr_parent = i;
-	if (get_sha1_hex(buf, graft->sha1))
+	if (get_oid_hex(buf, &graft->oid))
 		goto bad_graft_data;
-	for (i = 40; i < len; i += 41) {
+	for (i = GIT_SHA1_HEXSZ; i < len; i += entry_size) {
 		if (buf[i] != ' ')
 			goto bad_graft_data;
-		if (get_sha1_hex(buf + i + 1, graft->parent[i/41]))
+		if (get_sha1_hex(buf + i + 1, graft->parent[i/entry_size].hash))
 			goto bad_graft_data;
 	}
 	return graft;
 
 bad_graft_data:
 	error("bad graft data: %s", buf);
@@ -299,53 +300,56 @@
 }
 
 int parse_commit_buffer(struct commit *item, const void *buffer, unsigned long size)
 {
 	const char *tail = buffer;
 	const char *bufptr = buffer;
-	unsigned char parent[20];
+	struct object_id parent;
 	struct commit_list **pptr;
 	struct commit_graft *graft;
+	const int tree_entry_len = GIT_SHA1_HEXSZ + 5;
+	const int parent_entry_len = GIT_SHA1_HEXSZ + 7;
 
 	if (item->object.parsed)
 		return 0;
 	item->object.parsed = 1;
 	tail += size;
-	if (tail <= bufptr + 46 || memcmp(bufptr, "tree ", 5) || bufptr[45] != '\n')
+	if (tail <= bufptr + tree_entry_len + 1 || memcmp(bufptr, "tree ", 5) ||
+			bufptr[tree_entry_len] != '\n')
 		return error("bogus commit object %s", sha1_to_hex(item->object.sha1));
-	if (get_sha1_hex(bufptr + 5, parent) < 0)
+	if (get_sha1_hex(bufptr + 5, parent.hash) < 0)
 		return error("bad tree pointer in commit %s",
 			     sha1_to_hex(item->object.sha1));
-	item->tree = lookup_tree(parent);
-	bufptr += 46; /* "tree " + "hex sha1" + "\n" */
+	item->tree = lookup_tree(parent.hash);
+	bufptr += tree_entry_len + 1; /* "tree " + "hex sha1" + "\n" */
 	pptr = &item->parents;
 
 	graft = lookup_commit_graft(item->object.sha1);
-	while (bufptr + 48 < tail && !memcmp(bufptr, "parent ", 7)) {
+	while (bufptr + parent_entry_len < tail && !memcmp(bufptr, "parent ", 7)) {
 		struct commit *new_parent;
 
-		if (tail <= bufptr + 48 ||
-		    get_sha1_hex(bufptr + 7, parent) ||
-		    bufptr[47] != '\n')
+		if (tail <= bufptr + parent_entry_len + 1 ||
+		    get_sha1_hex(bufptr + 7, parent.hash) ||
+		    bufptr[parent_entry_len] != '\n')
 			return error("bad parents in commit %s", sha1_to_hex(item->object.sha1));
-		bufptr += 48;
+		bufptr += parent_entry_len + 1;
 		/*
 		 * The clone is shallow if nr_parent < 0, and we must
 		 * not traverse its real parents even when we unhide them.
 		 */
 		if (graft && (graft->nr_parent < 0 || grafts_replace_parents))
 			continue;
-		new_parent = lookup_commit(parent);
+		new_parent = lookup_commit(parent.hash);
 		if (new_parent)
 			pptr = &commit_list_insert(new_parent, pptr)->next;
 	}
 	if (graft) {
 		int i;
 		struct commit *new_parent;
 		for (i = 0; i < graft->nr_parent; i++) {
-			new_parent = lookup_commit(graft->parent[i]);
+			new_parent = lookup_commit(graft->parent[i].hash);
 			if (!new_parent)
 				continue;
 			pptr = &commit_list_insert(new_parent, pptr)->next;
 		}
 	}
 	item->date = parse_commit_date(bufptr, tail);
@@ -1578,16 +1582,16 @@
 }
 
 struct commit *get_merge_parent(const char *name)
 {
 	struct object *obj;
 	struct commit *commit;
-	unsigned char sha1[20];
-	if (get_sha1(name, sha1))
+	struct object_id oid;
+	if (get_sha1(name, oid.hash))
 		return NULL;
-	obj = parse_object(sha1);
+	obj = parse_object(oid.hash);
 	commit = (struct commit *)peel_to_type(name, 0, obj, OBJ_COMMIT);
 	if (commit && !commit->util) {
 		struct merge_remote_desc *desc;
 		desc = xmalloc(sizeof(*desc));
 		desc->obj = obj;
 		desc->name = strdup(name);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/commit.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/commit.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/commit.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/commit.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/commit.h	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/commit.h	2015-07-28 04:34:56.000000000 +0800
@@ -227,15 +227,15 @@
  *                            chain together.
  *   REV_SORT_BY_COMMIT_DATE: show eligible commits in committer-date order.
  */
 void sort_in_topological_order(struct commit_list **, enum rev_sort_order);
 
 struct commit_graft {
-	unsigned char sha1[20];
+	struct object_id oid;
 	int nr_parent; /* < 0 if shallow commit */
-	unsigned char parent[FLEX_ARRAY][20]; /* more */
+	struct object_id parent[FLEX_ARRAY]; /* more */
 };
 typedef int (*each_commit_graft_fn)(const struct commit_graft *, void *);
 
 struct commit_graft *read_graft_line(char *buf, int len);
 int register_commit_graft(struct commit_graft *, int);
 struct commit_graft *lookup_commit_graft(const unsigned char *sha1);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/commit.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/commit.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/common-cmds.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/common-cmds.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/common-cmds.h	2017-10-10 13:18:20.454529593 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/common-cmds.h	2017-10-10 13:50:52.150458065 +0800
@@ -1,29 +1,39 @@
-/* Automatically generated by ./generate-cmdlist.sh */
+/* Automatically generated by generate-cmdlist.perl */
+
 struct cmdname_help {
-    char name[16];
-    char help[80];
+	char name[16];
+	char help[80];
+	unsigned char group;
+};
+
+static char *common_cmd_groups[] = {
+	N_("start a working area (see also: git help tutorial)"),
+	N_("work on the current change (see also: git help everyday)"),
+	N_("examine the history and state (see also: git help revisions)"),
+	N_("grow, mark and tweak your common history"),
+	N_("collaborate (see also: git help workflows)"),
 };
 
 static struct cmdname_help common_cmds[] = {
-  {"add", N_("Add file contents to the index")},
-  {"bisect", N_("Find by binary search the change that introduced a bug")},
-  {"branch", N_("List, create, or delete branches")},
-  {"checkout", N_("Switch branches or restore working tree files")},
-  {"clone", N_("Clone a repository into a new directory")},
-  {"commit", N_("Record changes to the repository")},
-  {"diff", N_("Show changes between commits, commit and working tree, etc")},
-  {"fetch", N_("Download objects and refs from another repository")},
-  {"grep", N_("Print lines matching a pattern")},
-  {"init", N_("Create an empty Git repository or reinitialize an existing one")},
-  {"log", N_("Show commit logs")},
-  {"merge", N_("Join two or more development histories together")},
-  {"mv", N_("Move or rename a file, a directory, or a symlink")},
-  {"pull", N_("Fetch from and integrate with another repository or a local branch")},
-  {"push", N_("Update remote refs along with associated objects")},
-  {"rebase", N_("Forward-port local commits to the updated upstream head")},
-  {"reset", N_("Reset current HEAD to the specified state")},
-  {"rm", N_("Remove files from the working tree and from the index")},
-  {"show", N_("Show various types of objects")},
-  {"status", N_("Show the working tree status")},
-  {"tag", N_("Create, list, delete or verify a tag object signed with GPG")},
+	{"add", N_("Add file contents to the index"), 1},
+	{"bisect", N_("Find by binary search the change that introduced a bug"), 2},
+	{"branch", N_("List, create, or delete branches"), 3},
+	{"checkout", N_("Switch branches or restore working tree files"), 3},
+	{"clone", N_("Clone a repository into a new directory"), 0},
+	{"commit", N_("Record changes to the repository"), 3},
+	{"diff", N_("Show changes between commits, commit and working tree, etc"), 3},
+	{"fetch", N_("Download objects and refs from another repository"), 4},
+	{"grep", N_("Print lines matching a pattern"), 2},
+	{"init", N_("Create an empty Git repository or reinitialize an existing one"), 0},
+	{"log", N_("Show commit logs"), 2},
+	{"merge", N_("Join two or more development histories together"), 3},
+	{"mv", N_("Move or rename a file, a directory, or a symlink"), 1},
+	{"pull", N_("Fetch from and integrate with another repository or a local branch"), 4},
+	{"push", N_("Update remote refs along with associated objects"), 4},
+	{"rebase", N_("Forward-port local commits to the updated upstream head"), 3},
+	{"reset", N_("Reset current HEAD to the specified state"), 1},
+	{"rm", N_("Remove files from the working tree and from the index"), 1},
+	{"show", N_("Show various types of objects"), 2},
+	{"status", N_("Show the working tree status"), 2},
+	{"tag", N_("Create, list, delete or verify a tag object signed with GPG"), 3},
 };
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/compat/mingw.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/compat/mingw.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/compat/mingw.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/compat/mingw.c	2015-07-28 04:34:56.000000000 +0800
@@ -2125,6 +2125,17 @@
 	_setmode(_fileno(stdout), _O_BINARY);
 	_setmode(_fileno(stderr), _O_BINARY);
 
 	/* initialize Unicode console */
 	winansi_init();
 }
+
+int uname(struct utsname *buf)
+{
+	DWORD v = GetVersion();
+	memset(buf, 0, sizeof(*buf));
+	strcpy(buf->sysname, "Windows");
+	sprintf(buf->release, "%u.%u", v & 0xff, (v >> 8) & 0xff);
+	/* assuming NT variants only.. */
+	sprintf(buf->version, "%u", (v >> 16) & 0x7fff);
+	return 0;
+}
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/compat/mingw.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/compat/mingw.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/compat/mingw.h	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/compat/mingw.h	2015-07-28 04:34:56.000000000 +0800
@@ -73,12 +73,20 @@
 
 struct itimerval {
 	struct timeval it_value, it_interval;
 };
 #define ITIMER_REAL 0
 
+struct utsname {
+	char sysname[16];
+	char nodename[1];
+	char release[16];
+	char version[16];
+	char machine[1];
+};
+
 /*
  * sanitize preprocessor namespace polluted by Windows headers defining
  * macros which collide with git local versions
  */
 #undef HELP_COMMAND /* from winuser.h */
 
@@ -95,14 +103,12 @@
 static inline pid_t fork(void)
 { errno = ENOSYS; return -1; }
 static inline unsigned int alarm(unsigned int seconds)
 { return 0; }
 static inline int fsync(int fd)
 { return _commit(fd); }
-static inline pid_t getppid(void)
-{ return 1; }
 static inline void sync(void)
 {}
 static inline uid_t getuid(void)
 { return 1; }
 static inline struct passwd *getpwnam(const char *name)
 { return NULL; }
@@ -118,12 +124,18 @@
 #define sigemptyset(x) (void)0
 static inline int sigaddset(sigset_t *set, int signum)
 { return 0; }
 #define SIG_UNBLOCK 0
 static inline int sigprocmask(int how, const sigset_t *set, sigset_t *oldset)
 { return 0; }
+static inline pid_t getppid(void)
+{ return 1; }
+static inline pid_t getpgid(pid_t pid)
+{ return pid == 0 ? getpid() : pid; }
+static inline pid_t tcgetpgrp(int fd)
+{ return getpid(); }
 
 /*
  * simple adaptors
  */
 
 int mingw_mkdir(const char *path, int mode);
@@ -168,12 +180,13 @@
 struct tm *localtime_r(const time_t *timep, struct tm *result);
 int getpagesize(void);	/* defined in MinGW's libgcc.a */
 struct passwd *getpwuid(uid_t uid);
 int setitimer(int type, struct itimerval *in, struct itimerval *out);
 int sigaction(int sig, struct sigaction *in, struct sigaction *out);
 int link(const char *oldpath, const char *newpath);
+int uname(struct utsname *buf);
 
 /*
  * replacements of existing functions
  */
 
 int mingw_unlink(const char *pathname);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/compat/obstack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/compat/obstack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/compat/obstack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/compat/obstack.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/compat/strlcpy.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/compat/strlcpy.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/compat/strlcpy.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/compat/strlcpy.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/compat/terminal.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/compat/terminal.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/compat/terminal.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/compat/terminal.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/compile_commands.json /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/compile_commands.json
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/compile_commands.json	2017-10-10 13:19:01.942528073 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/compile_commands.json	2017-10-10 13:51:34.418456515 +0800
@@ -1,1867 +1,1879 @@
 [
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o credential-store.o -c -MF ./.depend/credential-store.o.d -MQ credential-store.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" credential-store.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/credential-store.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o credential-store.o -c -MF ./.depend/credential-store.o.d -MQ credential-store.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" credential-store.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/credential-store.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o abspath.o -c -MF ./.depend/abspath.o.d -MQ abspath.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" abspath.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/abspath.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o abspath.o -c -MF ./.depend/abspath.o.d -MQ abspath.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" abspath.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/abspath.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o advice.o -c -MF ./.depend/advice.o.d -MQ advice.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" advice.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/advice.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o advice.o -c -MF ./.depend/advice.o.d -MQ advice.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" advice.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/advice.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o alias.o -c -MF ./.depend/alias.o.d -MQ alias.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" alias.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/alias.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o alias.o -c -MF ./.depend/alias.o.d -MQ alias.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" alias.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/alias.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o alloc.o -c -MF ./.depend/alloc.o.d -MQ alloc.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" alloc.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/alloc.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o alloc.o -c -MF ./.depend/alloc.o.d -MQ alloc.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" alloc.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/alloc.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o archive.o -c -MF ./.depend/archive.o.d -MQ archive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" archive.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/archive.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o archive.o -c -MF ./.depend/archive.o.d -MQ archive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" archive.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/archive.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o archive-tar.o -c -MF ./.depend/archive-tar.o.d -MQ archive-tar.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" archive-tar.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/archive-tar.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o archive-tar.o -c -MF ./.depend/archive-tar.o.d -MQ archive-tar.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" archive-tar.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/archive-tar.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o archive-zip.o -c -MF ./.depend/archive-zip.o.d -MQ archive-zip.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" archive-zip.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/archive-zip.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o archive-zip.o -c -MF ./.depend/archive-zip.o.d -MQ archive-zip.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" archive-zip.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/archive-zip.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o argv-array.o -c -MF ./.depend/argv-array.o.d -MQ argv-array.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" argv-array.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/argv-array.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o argv-array.o -c -MF ./.depend/argv-array.o.d -MQ argv-array.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" argv-array.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/argv-array.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o attr.o -c -MF ./.depend/attr.o.d -MQ attr.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DETC_GITATTRIBUTES=\"/usr/local/etc/gitattributes\" attr.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/attr.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o attr.o -c -MF ./.depend/attr.o.d -MQ attr.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DETC_GITATTRIBUTES=\"/usr/local/etc/gitattributes\" attr.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/attr.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o base85.o -c -MF ./.depend/base85.o.d -MQ base85.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" base85.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/base85.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o base85.o -c -MF ./.depend/base85.o.d -MQ base85.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" base85.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/base85.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o bisect.o -c -MF ./.depend/bisect.o.d -MQ bisect.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" bisect.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bisect.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o bisect.o -c -MF ./.depend/bisect.o.d -MQ bisect.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" bisect.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bisect.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o blob.o -c -MF ./.depend/blob.o.d -MQ blob.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" blob.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/blob.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o blob.o -c -MF ./.depend/blob.o.d -MQ blob.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" blob.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/blob.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o branch.o -c -MF ./.depend/branch.o.d -MQ branch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" branch.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/branch.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o branch.o -c -MF ./.depend/branch.o.d -MQ branch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" branch.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/branch.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o bulk-checkin.o -c -MF ./.depend/bulk-checkin.o.d -MQ bulk-checkin.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" bulk-checkin.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bulk-checkin.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o bulk-checkin.o -c -MF ./.depend/bulk-checkin.o.d -MQ bulk-checkin.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" bulk-checkin.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bulk-checkin.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o bundle.o -c -MF ./.depend/bundle.o.d -MQ bundle.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" bundle.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bundle.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o bundle.o -c -MF ./.depend/bundle.o.d -MQ bundle.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" bundle.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bundle.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o cache-tree.o -c -MF ./.depend/cache-tree.o.d -MQ cache-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" cache-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/cache-tree.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o cache-tree.o -c -MF ./.depend/cache-tree.o.d -MQ cache-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" cache-tree.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/cache-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o color.o -c -MF ./.depend/color.o.d -MQ color.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" color.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/color.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o color.o -c -MF ./.depend/color.o.d -MQ color.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" color.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/color.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o column.o -c -MF ./.depend/column.o.d -MQ column.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" column.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/column.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o column.o -c -MF ./.depend/column.o.d -MQ column.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" column.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/column.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o combine-diff.o -c -MF ./.depend/combine-diff.o.d -MQ combine-diff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" combine-diff.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/combine-diff.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o combine-diff.o -c -MF ./.depend/combine-diff.o.d -MQ combine-diff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" combine-diff.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/combine-diff.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o commit.o -c -MF ./.depend/commit.o.d -MQ commit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" commit.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/commit.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o commit.o -c -MF ./.depend/commit.o.d -MQ commit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" commit.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/commit.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o compat/obstack.o -c -MF compat/.depend/obstack.o.d -MQ compat/obstack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" compat/obstack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/compat/obstack.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o compat/obstack.o -c -MF compat/.depend/obstack.o.d -MQ compat/obstack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" compat/obstack.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/compat/obstack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o compat/terminal.o -c -MF compat/.depend/terminal.o.d -MQ compat/terminal.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" compat/terminal.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/compat/terminal.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o compat/terminal.o -c -MF compat/.depend/terminal.o.d -MQ compat/terminal.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" compat/terminal.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/compat/terminal.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o config.o -c -MF ./.depend/config.o.d -MQ config.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DETC_GITCONFIG=\"/usr/local/etc/gitconfig\" config.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/config.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o config.o -c -MF ./.depend/config.o.d -MQ config.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DETC_GITCONFIG=\"/usr/local/etc/gitconfig\" config.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/config.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o connect.o -c -MF ./.depend/connect.o.d -MQ connect.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" connect.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/connect.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o connect.o -c -MF ./.depend/connect.o.d -MQ connect.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" connect.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/connect.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o connected.o -c -MF ./.depend/connected.o.d -MQ connected.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" connected.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/connected.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o connected.o -c -MF ./.depend/connected.o.d -MQ connected.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" connected.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/connected.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o convert.o -c -MF ./.depend/convert.o.d -MQ convert.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" convert.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/convert.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o convert.o -c -MF ./.depend/convert.o.d -MQ convert.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" convert.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/convert.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o copy.o -c -MF ./.depend/copy.o.d -MQ copy.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" copy.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/copy.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o copy.o -c -MF ./.depend/copy.o.d -MQ copy.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" copy.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/copy.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o credential.o -c -MF ./.depend/credential.o.d -MQ credential.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" credential.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/credential.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o credential.o -c -MF ./.depend/credential.o.d -MQ credential.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" credential.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/credential.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o csum-file.o -c -MF ./.depend/csum-file.o.d -MQ csum-file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" csum-file.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/csum-file.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o csum-file.o -c -MF ./.depend/csum-file.o.d -MQ csum-file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" csum-file.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/csum-file.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o ctype.o -c -MF ./.depend/ctype.o.d -MQ ctype.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ctype.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ctype.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o ctype.o -c -MF ./.depend/ctype.o.d -MQ ctype.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ctype.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ctype.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o date.o -c -MF ./.depend/date.o.d -MQ date.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" date.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/date.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o date.o -c -MF ./.depend/date.o.d -MQ date.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" date.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/date.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o decorate.o -c -MF ./.depend/decorate.o.d -MQ decorate.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" decorate.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/decorate.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o decorate.o -c -MF ./.depend/decorate.o.d -MQ decorate.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" decorate.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/decorate.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o diffcore-break.o -c -MF ./.depend/diffcore-break.o.d -MQ diffcore-break.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-break.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-break.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o diffcore-break.o -c -MF ./.depend/diffcore-break.o.d -MQ diffcore-break.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-break.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-break.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o diffcore-delta.o -c -MF ./.depend/diffcore-delta.o.d -MQ diffcore-delta.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-delta.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-delta.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o diffcore-delta.o -c -MF ./.depend/diffcore-delta.o.d -MQ diffcore-delta.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-delta.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-delta.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o diffcore-order.o -c -MF ./.depend/diffcore-order.o.d -MQ diffcore-order.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-order.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-order.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o diffcore-order.o -c -MF ./.depend/diffcore-order.o.d -MQ diffcore-order.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-order.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-order.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o diffcore-pickaxe.o -c -MF ./.depend/diffcore-pickaxe.o.d -MQ diffcore-pickaxe.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-pickaxe.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-pickaxe.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o diffcore-pickaxe.o -c -MF ./.depend/diffcore-pickaxe.o.d -MQ diffcore-pickaxe.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-pickaxe.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-pickaxe.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o diffcore-rename.o -c -MF ./.depend/diffcore-rename.o.d -MQ diffcore-rename.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-rename.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-rename.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o diffcore-rename.o -c -MF ./.depend/diffcore-rename.o.d -MQ diffcore-rename.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-rename.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-rename.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o diff-delta.o -c -MF ./.depend/diff-delta.o.d -MQ diff-delta.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diff-delta.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff-delta.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o diff-delta.o -c -MF ./.depend/diff-delta.o.d -MQ diff-delta.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diff-delta.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff-delta.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o diff-lib.o -c -MF ./.depend/diff-lib.o.d -MQ diff-lib.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diff-lib.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff-lib.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o diff-lib.o -c -MF ./.depend/diff-lib.o.d -MQ diff-lib.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diff-lib.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff-lib.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o diff-no-index.o -c -MF ./.depend/diff-no-index.o.d -MQ diff-no-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diff-no-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff-no-index.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o diff-no-index.o -c -MF ./.depend/diff-no-index.o.d -MQ diff-no-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diff-no-index.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff-no-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o diff.o -c -MF ./.depend/diff.o.d -MQ diff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diff.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o diff.o -c -MF ./.depend/diff.o.d -MQ diff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diff.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o dir.o -c -MF ./.depend/dir.o.d -MQ dir.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" dir.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/dir.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o dir.o -c -MF ./.depend/dir.o.d -MQ dir.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" dir.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/dir.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o editor.o -c -MF ./.depend/editor.o.d -MQ editor.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" editor.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/editor.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o editor.o -c -MF ./.depend/editor.o.d -MQ editor.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" editor.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/editor.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o entry.o -c -MF ./.depend/entry.o.d -MQ entry.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" entry.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/entry.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o entry.o -c -MF ./.depend/entry.o.d -MQ entry.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" entry.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/entry.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o environment.o -c -MF ./.depend/environment.o.d -MQ environment.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" environment.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/environment.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o environment.o -c -MF ./.depend/environment.o.d -MQ environment.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" environment.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/environment.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o ewah/bitmap.o -c -MF ewah/.depend/bitmap.o.d -MQ ewah/bitmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ewah/bitmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/bitmap.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o ewah/bitmap.o -c -MF ewah/.depend/bitmap.o.d -MQ ewah/bitmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ewah/bitmap.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/bitmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o ewah/ewah_bitmap.o -c -MF ewah/.depend/ewah_bitmap.o.d -MQ ewah/ewah_bitmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ewah/ewah_bitmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/ewah_bitmap.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o ewah/ewah_bitmap.o -c -MF ewah/.depend/ewah_bitmap.o.d -MQ ewah/ewah_bitmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ewah/ewah_bitmap.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/ewah_bitmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o ewah/ewah_io.o -c -MF ewah/.depend/ewah_io.o.d -MQ ewah/ewah_io.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ewah/ewah_io.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/ewah_io.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o ewah/ewah_io.o -c -MF ewah/.depend/ewah_io.o.d -MQ ewah/ewah_io.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ewah/ewah_io.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/ewah_io.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o ewah/ewah_rlw.o -c -MF ewah/.depend/ewah_rlw.o.d -MQ ewah/ewah_rlw.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ewah/ewah_rlw.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/ewah_rlw.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o ewah/ewah_rlw.o -c -MF ewah/.depend/ewah_rlw.o.d -MQ ewah/ewah_rlw.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ewah/ewah_rlw.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/ewah_rlw.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o exec_cmd.o -c -MF ./.depend/exec_cmd.o.d -MQ exec_cmd.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_EXEC_PATH=\"/usr/local/libexec/git-core\" -DBINDIR=\"bin\" -DPREFIX=\"/usr/local\" exec_cmd.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/exec_cmd.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o exec_cmd.o -c -MF ./.depend/exec_cmd.o.d -MQ exec_cmd.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_EXEC_PATH=\"/usr/local/libexec/git-core\" -DBINDIR=\"bin\" -DPREFIX=\"/usr/local\" exec_cmd.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/exec_cmd.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o fetch-pack.o -c -MF ./.depend/fetch-pack.o.d -MQ fetch-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" fetch-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/fetch-pack.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o fetch-pack.o -c -MF ./.depend/fetch-pack.o.d -MQ fetch-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" fetch-pack.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/fetch-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o fsck.o -c -MF ./.depend/fsck.o.d -MQ fsck.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" fsck.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/fsck.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o fsck.o -c -MF ./.depend/fsck.o.d -MQ fsck.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" fsck.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/fsck.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o gettext.o -c -MF ./.depend/gettext.o.d -MQ gettext.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_LOCALE_PATH=\"/usr/local/share/locale\" gettext.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/gettext.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o gettext.o -c -MF ./.depend/gettext.o.d -MQ gettext.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_LOCALE_PATH=\"/usr/local/share/locale\" gettext.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/gettext.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o gpg-interface.o -c -MF ./.depend/gpg-interface.o.d -MQ gpg-interface.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" gpg-interface.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/gpg-interface.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o gpg-interface.o -c -MF ./.depend/gpg-interface.o.d -MQ gpg-interface.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" gpg-interface.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/gpg-interface.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o graph.o -c -MF ./.depend/graph.o.d -MQ graph.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" graph.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/graph.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o graph.o -c -MF ./.depend/graph.o.d -MQ graph.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" graph.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/graph.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o grep.o -c -MF ./.depend/grep.o.d -MQ grep.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" grep.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/grep.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o grep.o -c -MF ./.depend/grep.o.d -MQ grep.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" grep.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/grep.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o hashmap.o -c -MF ./.depend/hashmap.o.d -MQ hashmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" hashmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/hashmap.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o hashmap.o -c -MF ./.depend/hashmap.o.d -MQ hashmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" hashmap.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/hashmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o help.o -c -MF ./.depend/help.o.d -MQ help.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" help.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/help.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o help.o -c -MF ./.depend/help.o.d -MQ help.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" help.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/help.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o hex.o -c -MF ./.depend/hex.o.d -MQ hex.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" hex.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/hex.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o hex.o -c -MF ./.depend/hex.o.d -MQ hex.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" hex.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/hex.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o ident.o -c -MF ./.depend/ident.o.d -MQ ident.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ident.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ident.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o ident.o -c -MF ./.depend/ident.o.d -MQ ident.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ident.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ident.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o kwset.o -c -MF ./.depend/kwset.o.d -MQ kwset.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" kwset.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/kwset.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o kwset.o -c -MF ./.depend/kwset.o.d -MQ kwset.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" kwset.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/kwset.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o levenshtein.o -c -MF ./.depend/levenshtein.o.d -MQ levenshtein.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" levenshtein.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/levenshtein.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o levenshtein.o -c -MF ./.depend/levenshtein.o.d -MQ levenshtein.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" levenshtein.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/levenshtein.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o line-log.o -c -MF ./.depend/line-log.o.d -MQ line-log.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" line-log.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/line-log.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o line-log.o -c -MF ./.depend/line-log.o.d -MQ line-log.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" line-log.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/line-log.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o line-range.o -c -MF ./.depend/line-range.o.d -MQ line-range.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" line-range.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/line-range.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o line-range.o -c -MF ./.depend/line-range.o.d -MQ line-range.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" line-range.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/line-range.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o list-objects.o -c -MF ./.depend/list-objects.o.d -MQ list-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" list-objects.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/list-objects.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o list-objects.o -c -MF ./.depend/list-objects.o.d -MQ list-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" list-objects.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/list-objects.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o ll-merge.o -c -MF ./.depend/ll-merge.o.d -MQ ll-merge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ll-merge.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ll-merge.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o ll-merge.o -c -MF ./.depend/ll-merge.o.d -MQ ll-merge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ll-merge.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ll-merge.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o lockfile.o -c -MF ./.depend/lockfile.o.d -MQ lockfile.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" lockfile.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/lockfile.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o lockfile.o -c -MF ./.depend/lockfile.o.d -MQ lockfile.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" lockfile.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/lockfile.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o log-tree.o -c -MF ./.depend/log-tree.o.d -MQ log-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" log-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/log-tree.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o log-tree.o -c -MF ./.depend/log-tree.o.d -MQ log-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" log-tree.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/log-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o mailmap.o -c -MF ./.depend/mailmap.o.d -MQ mailmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" mailmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/mailmap.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o mailmap.o -c -MF ./.depend/mailmap.o.d -MQ mailmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" mailmap.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/mailmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o match-trees.o -c -MF ./.depend/match-trees.o.d -MQ match-trees.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" match-trees.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/match-trees.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o match-trees.o -c -MF ./.depend/match-trees.o.d -MQ match-trees.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" match-trees.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/match-trees.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o merge.o -c -MF ./.depend/merge.o.d -MQ merge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" merge.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/merge.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o merge.o -c -MF ./.depend/merge.o.d -MQ merge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" merge.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/merge.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o merge-blobs.o -c -MF ./.depend/merge-blobs.o.d -MQ merge-blobs.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" merge-blobs.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/merge-blobs.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o merge-blobs.o -c -MF ./.depend/merge-blobs.o.d -MQ merge-blobs.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" merge-blobs.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/merge-blobs.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o merge-recursive.o -c -MF ./.depend/merge-recursive.o.d -MQ merge-recursive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" merge-recursive.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/merge-recursive.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o merge-recursive.o -c -MF ./.depend/merge-recursive.o.d -MQ merge-recursive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" merge-recursive.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/merge-recursive.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o mergesort.o -c -MF ./.depend/mergesort.o.d -MQ mergesort.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" mergesort.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/mergesort.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o mergesort.o -c -MF ./.depend/mergesort.o.d -MQ mergesort.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" mergesort.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/mergesort.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o name-hash.o -c -MF ./.depend/name-hash.o.d -MQ name-hash.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" name-hash.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/name-hash.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o name-hash.o -c -MF ./.depend/name-hash.o.d -MQ name-hash.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" name-hash.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/name-hash.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o notes.o -c -MF ./.depend/notes.o.d -MQ notes.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" notes.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o notes.o -c -MF ./.depend/notes.o.d -MQ notes.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" notes.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o notes-cache.o -c -MF ./.depend/notes-cache.o.d -MQ notes-cache.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" notes-cache.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes-cache.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o notes-cache.o -c -MF ./.depend/notes-cache.o.d -MQ notes-cache.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" notes-cache.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes-cache.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o notes-merge.o -c -MF ./.depend/notes-merge.o.d -MQ notes-merge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" notes-merge.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes-merge.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o notes-merge.o -c -MF ./.depend/notes-merge.o.d -MQ notes-merge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" notes-merge.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes-merge.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o notes-utils.o -c -MF ./.depend/notes-utils.o.d -MQ notes-utils.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" notes-utils.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes-utils.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o notes-utils.o -c -MF ./.depend/notes-utils.o.d -MQ notes-utils.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" notes-utils.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes-utils.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o object.o -c -MF ./.depend/object.o.d -MQ object.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" object.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/object.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o object.o -c -MF ./.depend/object.o.d -MQ object.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" object.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/object.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o pack-bitmap.o -c -MF ./.depend/pack-bitmap.o.d -MQ pack-bitmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-bitmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-bitmap.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o pack-bitmap.o -c -MF ./.depend/pack-bitmap.o.d -MQ pack-bitmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-bitmap.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-bitmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o pack-bitmap-write.o -c -MF ./.depend/pack-bitmap-write.o.d -MQ pack-bitmap-write.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-bitmap-write.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-bitmap-write.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o pack-bitmap-write.o -c -MF ./.depend/pack-bitmap-write.o.d -MQ pack-bitmap-write.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-bitmap-write.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-bitmap-write.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o pack-check.o -c -MF ./.depend/pack-check.o.d -MQ pack-check.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-check.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-check.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o pack-check.o -c -MF ./.depend/pack-check.o.d -MQ pack-check.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-check.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-check.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o pack-objects.o -c -MF ./.depend/pack-objects.o.d -MQ pack-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-objects.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-objects.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o pack-objects.o -c -MF ./.depend/pack-objects.o.d -MQ pack-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-objects.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-objects.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o pack-revindex.o -c -MF ./.depend/pack-revindex.o.d -MQ pack-revindex.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-revindex.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-revindex.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o pack-revindex.o -c -MF ./.depend/pack-revindex.o.d -MQ pack-revindex.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-revindex.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-revindex.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o pack-write.o -c -MF ./.depend/pack-write.o.d -MQ pack-write.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-write.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-write.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o pack-write.o -c -MF ./.depend/pack-write.o.d -MQ pack-write.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-write.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-write.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o pager.o -c -MF ./.depend/pager.o.d -MQ pager.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pager.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pager.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o pager.o -c -MF ./.depend/pager.o.d -MQ pager.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pager.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pager.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o parse-options.o -c -MF ./.depend/parse-options.o.d -MQ parse-options.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" parse-options.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/parse-options.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o parse-options.o -c -MF ./.depend/parse-options.o.d -MQ parse-options.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" parse-options.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/parse-options.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o parse-options-cb.o -c -MF ./.depend/parse-options-cb.o.d -MQ parse-options-cb.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" parse-options-cb.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/parse-options-cb.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o parse-options-cb.o -c -MF ./.depend/parse-options-cb.o.d -MQ parse-options-cb.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" parse-options-cb.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/parse-options-cb.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o patch-delta.o -c -MF ./.depend/patch-delta.o.d -MQ patch-delta.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" patch-delta.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/patch-delta.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o patch-delta.o -c -MF ./.depend/patch-delta.o.d -MQ patch-delta.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" patch-delta.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/patch-delta.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o patch-ids.o -c -MF ./.depend/patch-ids.o.d -MQ patch-ids.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" patch-ids.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/patch-ids.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o patch-ids.o -c -MF ./.depend/patch-ids.o.d -MQ patch-ids.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" patch-ids.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/patch-ids.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o path.o -c -MF ./.depend/path.o.d -MQ path.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" path.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/path.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o path.o -c -MF ./.depend/path.o.d -MQ path.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" path.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/path.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o pathspec.o -c -MF ./.depend/pathspec.o.d -MQ pathspec.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pathspec.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pathspec.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o pathspec.o -c -MF ./.depend/pathspec.o.d -MQ pathspec.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pathspec.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pathspec.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o pkt-line.o -c -MF ./.depend/pkt-line.o.d -MQ pkt-line.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pkt-line.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pkt-line.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o pkt-line.o -c -MF ./.depend/pkt-line.o.d -MQ pkt-line.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pkt-line.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pkt-line.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o preload-index.o -c -MF ./.depend/preload-index.o.d -MQ preload-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" preload-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/preload-index.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o preload-index.o -c -MF ./.depend/preload-index.o.d -MQ preload-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" preload-index.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/preload-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o pretty.o -c -MF ./.depend/pretty.o.d -MQ pretty.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pretty.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pretty.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o pretty.o -c -MF ./.depend/pretty.o.d -MQ pretty.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pretty.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pretty.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o prio-queue.o -c -MF ./.depend/prio-queue.o.d -MQ prio-queue.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" prio-queue.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/prio-queue.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o prio-queue.o -c -MF ./.depend/prio-queue.o.d -MQ prio-queue.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" prio-queue.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/prio-queue.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o progress.o -c -MF ./.depend/progress.o.d -MQ progress.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" progress.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/progress.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o progress.o -c -MF ./.depend/progress.o.d -MQ progress.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" progress.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/progress.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o prompt.o -c -MF ./.depend/prompt.o.d -MQ prompt.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" prompt.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/prompt.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o prompt.o -c -MF ./.depend/prompt.o.d -MQ prompt.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" prompt.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/prompt.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o quote.o -c -MF ./.depend/quote.o.d -MQ quote.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" quote.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/quote.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o quote.o -c -MF ./.depend/quote.o.d -MQ quote.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" quote.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/quote.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o reachable.o -c -MF ./.depend/reachable.o.d -MQ reachable.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" reachable.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/reachable.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o reachable.o -c -MF ./.depend/reachable.o.d -MQ reachable.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" reachable.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/reachable.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o read-cache.o -c -MF ./.depend/read-cache.o.d -MQ read-cache.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" read-cache.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/read-cache.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o read-cache.o -c -MF ./.depend/read-cache.o.d -MQ read-cache.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" read-cache.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/read-cache.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o reflog-walk.o -c -MF ./.depend/reflog-walk.o.d -MQ reflog-walk.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" reflog-walk.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/reflog-walk.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o reflog-walk.o -c -MF ./.depend/reflog-walk.o.d -MQ reflog-walk.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" reflog-walk.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/reflog-walk.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o refs.o -c -MF ./.depend/refs.o.d -MQ refs.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" refs.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/refs.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o refs.o -c -MF ./.depend/refs.o.d -MQ refs.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" refs.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/refs.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o remote.o -c -MF ./.depend/remote.o.d -MQ remote.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" remote.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/remote.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o remote.o -c -MF ./.depend/remote.o.d -MQ remote.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" remote.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/remote.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o replace_object.o -c -MF ./.depend/replace_object.o.d -MQ replace_object.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" replace_object.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/replace_object.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o replace_object.o -c -MF ./.depend/replace_object.o.d -MQ replace_object.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" replace_object.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/replace_object.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o rerere.o -c -MF ./.depend/rerere.o.d -MQ rerere.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" rerere.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/rerere.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o rerere.o -c -MF ./.depend/rerere.o.d -MQ rerere.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" rerere.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/rerere.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o resolve-undo.o -c -MF ./.depend/resolve-undo.o.d -MQ resolve-undo.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" resolve-undo.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/resolve-undo.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o resolve-undo.o -c -MF ./.depend/resolve-undo.o.d -MQ resolve-undo.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" resolve-undo.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/resolve-undo.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o revision.o -c -MF ./.depend/revision.o.d -MQ revision.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" revision.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/revision.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o revision.o -c -MF ./.depend/revision.o.d -MQ revision.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" revision.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/revision.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o run-command.o -c -MF ./.depend/run-command.o.d -MQ run-command.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" run-command.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/run-command.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o run-command.o -c -MF ./.depend/run-command.o.d -MQ run-command.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" run-command.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/run-command.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o send-pack.o -c -MF ./.depend/send-pack.o.d -MQ send-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" send-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/send-pack.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o send-pack.o -c -MF ./.depend/send-pack.o.d -MQ send-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" send-pack.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/send-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o sequencer.o -c -MF ./.depend/sequencer.o.d -MQ sequencer.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sequencer.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sequencer.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o sequencer.o -c -MF ./.depend/sequencer.o.d -MQ sequencer.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sequencer.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sequencer.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o server-info.o -c -MF ./.depend/server-info.o.d -MQ server-info.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" server-info.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/server-info.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o server-info.o -c -MF ./.depend/server-info.o.d -MQ server-info.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" server-info.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/server-info.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o setup.o -c -MF ./.depend/setup.o.d -MQ setup.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" setup.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/setup.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o setup.o -c -MF ./.depend/setup.o.d -MQ setup.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" setup.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/setup.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o sha1-array.o -c -MF ./.depend/sha1-array.o.d -MQ sha1-array.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sha1-array.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1-array.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o sha1-array.o -c -MF ./.depend/sha1-array.o.d -MQ sha1-array.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sha1-array.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1-array.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o sha1-lookup.o -c -MF ./.depend/sha1-lookup.o.d -MQ sha1-lookup.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sha1-lookup.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1-lookup.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o sha1-lookup.o -c -MF ./.depend/sha1-lookup.o.d -MQ sha1-lookup.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sha1-lookup.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1-lookup.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o sha1_file.o -c -MF ./.depend/sha1_file.o.d -MQ sha1_file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sha1_file.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1_file.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o sha1_file.o -c -MF ./.depend/sha1_file.o.d -MQ sha1_file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sha1_file.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1_file.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o sha1_name.o -c -MF ./.depend/sha1_name.o.d -MQ sha1_name.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sha1_name.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1_name.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o sha1_name.o -c -MF ./.depend/sha1_name.o.d -MQ sha1_name.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sha1_name.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1_name.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o shallow.o -c -MF ./.depend/shallow.o.d -MQ shallow.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" shallow.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/shallow.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o shallow.o -c -MF ./.depend/shallow.o.d -MQ shallow.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" shallow.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/shallow.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o sideband.o -c -MF ./.depend/sideband.o.d -MQ sideband.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sideband.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sideband.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o sideband.o -c -MF ./.depend/sideband.o.d -MQ sideband.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sideband.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sideband.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o sigchain.o -c -MF ./.depend/sigchain.o.d -MQ sigchain.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sigchain.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sigchain.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o sigchain.o -c -MF ./.depend/sigchain.o.d -MQ sigchain.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sigchain.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sigchain.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o split-index.o -c -MF ./.depend/split-index.o.d -MQ split-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" split-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/split-index.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o split-index.o -c -MF ./.depend/split-index.o.d -MQ split-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" split-index.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/split-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o strbuf.o -c -MF ./.depend/strbuf.o.d -MQ strbuf.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" strbuf.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/strbuf.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o strbuf.o -c -MF ./.depend/strbuf.o.d -MQ strbuf.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" strbuf.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/strbuf.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o streaming.o -c -MF ./.depend/streaming.o.d -MQ streaming.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" streaming.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/streaming.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o streaming.o -c -MF ./.depend/streaming.o.d -MQ streaming.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" streaming.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/streaming.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o string-list.o -c -MF ./.depend/string-list.o.d -MQ string-list.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" string-list.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/string-list.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o string-list.o -c -MF ./.depend/string-list.o.d -MQ string-list.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" string-list.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/string-list.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o submodule.o -c -MF ./.depend/submodule.o.d -MQ submodule.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" submodule.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/submodule.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o submodule.o -c -MF ./.depend/submodule.o.d -MQ submodule.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" submodule.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/submodule.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o symlinks.o -c -MF ./.depend/symlinks.o.d -MQ symlinks.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" symlinks.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/symlinks.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o symlinks.o -c -MF ./.depend/symlinks.o.d -MQ symlinks.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" symlinks.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/symlinks.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o tag.o -c -MF ./.depend/tag.o.d -MQ tag.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" tag.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tag.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o tag.o -c -MF ./.depend/tag.o.d -MQ tag.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" tag.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tag.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o trace.o -c -MF ./.depend/trace.o.d -MQ trace.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" trace.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/trace.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o trace.o -c -MF ./.depend/trace.o.d -MQ trace.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" trace.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/trace.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o trailer.o -c -MF ./.depend/trailer.o.d -MQ trailer.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" trailer.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/trailer.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o trailer.o -c -MF ./.depend/trailer.o.d -MQ trailer.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" trailer.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/trailer.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o transport.o -c -MF ./.depend/transport.o.d -MQ transport.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" transport.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/transport.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o transport.o -c -MF ./.depend/transport.o.d -MQ transport.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" transport.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/transport.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o transport-helper.o -c -MF ./.depend/transport-helper.o.d -MQ transport-helper.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" transport-helper.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/transport-helper.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o transport-helper.o -c -MF ./.depend/transport-helper.o.d -MQ transport-helper.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" transport-helper.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/transport-helper.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o tree-diff.o -c -MF ./.depend/tree-diff.o.d -MQ tree-diff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" tree-diff.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tree-diff.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o tree-diff.o -c -MF ./.depend/tree-diff.o.d -MQ tree-diff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" tree-diff.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tree-diff.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o tree.o -c -MF ./.depend/tree.o.d -MQ tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tree.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o tree.o -c -MF ./.depend/tree.o.d -MQ tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" tree.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o tree-walk.o -c -MF ./.depend/tree-walk.o.d -MQ tree-walk.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" tree-walk.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tree-walk.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o tree-walk.o -c -MF ./.depend/tree-walk.o.d -MQ tree-walk.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" tree-walk.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tree-walk.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o unpack-trees.o -c -MF ./.depend/unpack-trees.o.d -MQ unpack-trees.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" unpack-trees.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/unpack-trees.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o unpack-trees.o -c -MF ./.depend/unpack-trees.o.d -MQ unpack-trees.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" unpack-trees.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/unpack-trees.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o url.o -c -MF ./.depend/url.o.d -MQ url.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" url.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/url.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o url.o -c -MF ./.depend/url.o.d -MQ url.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" url.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/url.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o urlmatch.o -c -MF ./.depend/urlmatch.o.d -MQ urlmatch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" urlmatch.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/urlmatch.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o urlmatch.o -c -MF ./.depend/urlmatch.o.d -MQ urlmatch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" urlmatch.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/urlmatch.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o usage.o -c -MF ./.depend/usage.o.d -MQ usage.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" usage.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/usage.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o usage.o -c -MF ./.depend/usage.o.d -MQ usage.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" usage.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/usage.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o userdiff.o -c -MF ./.depend/userdiff.o.d -MQ userdiff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" userdiff.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/userdiff.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o userdiff.o -c -MF ./.depend/userdiff.o.d -MQ userdiff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" userdiff.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/userdiff.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o utf8.o -c -MF ./.depend/utf8.o.d -MQ utf8.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" utf8.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/utf8.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o utf8.o -c -MF ./.depend/utf8.o.d -MQ utf8.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" utf8.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/utf8.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o varint.o -c -MF ./.depend/varint.o.d -MQ varint.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" varint.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/varint.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o varint.o -c -MF ./.depend/varint.o.d -MQ varint.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" varint.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/varint.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o version.o -c -MF ./.depend/version.o.d -MQ version.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_VERSION=\"2.4.12\" -DGIT_USER_AGENT=\"git/2.4.12\" version.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/version.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o version.o -c -MF ./.depend/version.o.d -MQ version.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_VERSION=\"2.5.0\" -DGIT_USER_AGENT=\"git/2.5.0\" version.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/version.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o versioncmp.o -c -MF ./.depend/versioncmp.o.d -MQ versioncmp.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" versioncmp.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/versioncmp.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o versioncmp.o -c -MF ./.depend/versioncmp.o.d -MQ versioncmp.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" versioncmp.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/versioncmp.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o walker.o -c -MF ./.depend/walker.o.d -MQ walker.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" walker.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/walker.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o walker.o -c -MF ./.depend/walker.o.d -MQ walker.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" walker.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/walker.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o wildmatch.o -c -MF ./.depend/wildmatch.o.d -MQ wildmatch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" wildmatch.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/wildmatch.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o wildmatch.o -c -MF ./.depend/wildmatch.o.d -MQ wildmatch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" wildmatch.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/wildmatch.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o wrapper.o -c -MF ./.depend/wrapper.o.d -MQ wrapper.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" wrapper.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/wrapper.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o wrapper.o -c -MF ./.depend/wrapper.o.d -MQ wrapper.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" wrapper.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/wrapper.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o write_or_die.o -c -MF ./.depend/write_or_die.o.d -MQ write_or_die.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" write_or_die.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/write_or_die.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o write_or_die.o -c -MF ./.depend/write_or_die.o.d -MQ write_or_die.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" write_or_die.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/write_or_die.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o ws.o -c -MF ./.depend/ws.o.d -MQ ws.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ws.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ws.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o ws.o -c -MF ./.depend/ws.o.d -MQ ws.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ws.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ws.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o wt-status.o -c -MF ./.depend/wt-status.o.d -MQ wt-status.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" wt-status.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/wt-status.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o wt-status.o -c -MF ./.depend/wt-status.o.d -MQ wt-status.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" wt-status.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/wt-status.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o xdiff-interface.o -c -MF ./.depend/xdiff-interface.o.d -MQ xdiff-interface.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff-interface.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff-interface.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o xdiff-interface.o -c -MF ./.depend/xdiff-interface.o.d -MQ xdiff-interface.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff-interface.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff-interface.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o zlib.o -c -MF ./.depend/zlib.o.d -MQ zlib.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" zlib.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/zlib.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o zlib.o -c -MF ./.depend/zlib.o.d -MQ zlib.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" zlib.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/zlib.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o unix-socket.o -c -MF ./.depend/unix-socket.o.d -MQ unix-socket.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" unix-socket.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/unix-socket.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o unix-socket.o -c -MF ./.depend/unix-socket.o.d -MQ unix-socket.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" unix-socket.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/unix-socket.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o block-sha1/sha1.o -c -MF block-sha1/.depend/sha1.o.d -MQ block-sha1/sha1.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" block-sha1/sha1.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/block-sha1/sha1.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o block-sha1/sha1.o -c -MF block-sha1/.depend/sha1.o.d -MQ block-sha1/sha1.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" block-sha1/sha1.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/block-sha1/sha1.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o thread-utils.o -c -MF ./.depend/thread-utils.o.d -MQ thread-utils.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" thread-utils.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/thread-utils.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o thread-utils.o -c -MF ./.depend/thread-utils.o.d -MQ thread-utils.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" thread-utils.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/thread-utils.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o compat/strlcpy.o -c -MF compat/.depend/strlcpy.o.d -MQ compat/strlcpy.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" compat/strlcpy.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/compat/strlcpy.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o compat/strlcpy.o -c -MF compat/.depend/strlcpy.o.d -MQ compat/strlcpy.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" compat/strlcpy.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/compat/strlcpy.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o xdiff/xdiffi.o -c -MF xdiff/.depend/xdiffi.o.d -MQ xdiff/xdiffi.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xdiffi.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xdiffi.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o xdiff/xdiffi.o -c -MF xdiff/.depend/xdiffi.o.d -MQ xdiff/xdiffi.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xdiffi.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xdiffi.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o xdiff/xprepare.o -c -MF xdiff/.depend/xprepare.o.d -MQ xdiff/xprepare.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xprepare.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xprepare.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o xdiff/xprepare.o -c -MF xdiff/.depend/xprepare.o.d -MQ xdiff/xprepare.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xprepare.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xprepare.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o xdiff/xutils.o -c -MF xdiff/.depend/xutils.o.d -MQ xdiff/xutils.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xutils.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xutils.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o xdiff/xutils.o -c -MF xdiff/.depend/xutils.o.d -MQ xdiff/xutils.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xutils.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xutils.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o xdiff/xemit.o -c -MF xdiff/.depend/xemit.o.d -MQ xdiff/xemit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xemit.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xemit.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o xdiff/xemit.o -c -MF xdiff/.depend/xemit.o.d -MQ xdiff/xemit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xemit.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xemit.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o xdiff/xmerge.o -c -MF xdiff/.depend/xmerge.o.d -MQ xdiff/xmerge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xmerge.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xmerge.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o xdiff/xmerge.o -c -MF xdiff/.depend/xmerge.o.d -MQ xdiff/xmerge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xmerge.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xmerge.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o xdiff/xpatience.o -c -MF xdiff/.depend/xpatience.o.d -MQ xdiff/xpatience.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xpatience.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xpatience.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o xdiff/xpatience.o -c -MF xdiff/.depend/xpatience.o.d -MQ xdiff/xpatience.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xpatience.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xpatience.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o xdiff/xhistogram.o -c -MF xdiff/.depend/xhistogram.o.d -MQ xdiff/xhistogram.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xhistogram.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xhistogram.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o xdiff/xhistogram.o -c -MF xdiff/.depend/xhistogram.o.d -MQ xdiff/xhistogram.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xhistogram.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xhistogram.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o daemon.o -c -MF ./.depend/daemon.o.d -MQ daemon.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" daemon.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/daemon.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o daemon.o -c -MF ./.depend/daemon.o.d -MQ daemon.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" daemon.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/daemon.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o fast-import.o -c -MF ./.depend/fast-import.o.d -MQ fast-import.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" fast-import.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/fast-import.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o fast-import.o -c -MF ./.depend/fast-import.o.d -MQ fast-import.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" fast-import.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/fast-import.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o http-backend.o -c -MF ./.depend/http-backend.o.d -MQ http-backend.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" http-backend.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/http-backend.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o http-backend.o -c -MF ./.depend/http-backend.o.d -MQ http-backend.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" http-backend.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/http-backend.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o imap-send.o -c -MF ./.depend/imap-send.o.d -MQ imap-send.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" imap-send.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/imap-send.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o imap-send.o -c -MF ./.depend/imap-send.o.d -MQ imap-send.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" imap-send.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/imap-send.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o sh-i18n--envsubst.o -c -MF ./.depend/sh-i18n--envsubst.o.d -MQ sh-i18n--envsubst.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sh-i18n--envsubst.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sh-i18n--envsubst.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o sh-i18n--envsubst.o -c -MF ./.depend/sh-i18n--envsubst.o.d -MQ sh-i18n--envsubst.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sh-i18n--envsubst.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sh-i18n--envsubst.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o shell.o -c -MF ./.depend/shell.o.d -MQ shell.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" shell.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/shell.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o shell.o -c -MF ./.depend/shell.o.d -MQ shell.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" shell.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/shell.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o show-index.o -c -MF ./.depend/show-index.o.d -MQ show-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" show-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/show-index.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o show-index.o -c -MF ./.depend/show-index.o.d -MQ show-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" show-index.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/show-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o upload-pack.o -c -MF ./.depend/upload-pack.o.d -MQ upload-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" upload-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/upload-pack.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o upload-pack.o -c -MF ./.depend/upload-pack.o.d -MQ upload-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" upload-pack.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/upload-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o remote-testsvn.o -c -MF ./.depend/remote-testsvn.o.d -MQ remote-testsvn.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" remote-testsvn.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/remote-testsvn.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o remote-testsvn.o -c -MF ./.depend/remote-testsvn.o.d -MQ remote-testsvn.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" remote-testsvn.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/remote-testsvn.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o vcs-svn/line_buffer.o -c -MF vcs-svn/.depend/line_buffer.o.d -MQ vcs-svn/line_buffer.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/line_buffer.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/line_buffer.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o vcs-svn/line_buffer.o -c -MF vcs-svn/.depend/line_buffer.o.d -MQ vcs-svn/line_buffer.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/line_buffer.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/line_buffer.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o vcs-svn/sliding_window.o -c -MF vcs-svn/.depend/sliding_window.o.d -MQ vcs-svn/sliding_window.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/sliding_window.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/sliding_window.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o vcs-svn/sliding_window.o -c -MF vcs-svn/.depend/sliding_window.o.d -MQ vcs-svn/sliding_window.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/sliding_window.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/sliding_window.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o vcs-svn/repo_tree.o -c -MF vcs-svn/.depend/repo_tree.o.d -MQ vcs-svn/repo_tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/repo_tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/repo_tree.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o vcs-svn/repo_tree.o -c -MF vcs-svn/.depend/repo_tree.o.d -MQ vcs-svn/repo_tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/repo_tree.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/repo_tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o vcs-svn/fast_export.o -c -MF vcs-svn/.depend/fast_export.o.d -MQ vcs-svn/fast_export.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/fast_export.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/fast_export.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o vcs-svn/fast_export.o -c -MF vcs-svn/.depend/fast_export.o.d -MQ vcs-svn/fast_export.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/fast_export.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/fast_export.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o vcs-svn/svndiff.o -c -MF vcs-svn/.depend/svndiff.o.d -MQ vcs-svn/svndiff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/svndiff.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/svndiff.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o vcs-svn/svndiff.o -c -MF vcs-svn/.depend/svndiff.o.d -MQ vcs-svn/svndiff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/svndiff.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/svndiff.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o vcs-svn/svndump.o -c -MF vcs-svn/.depend/svndump.o.d -MQ vcs-svn/svndump.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/svndump.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/svndump.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o vcs-svn/svndump.o -c -MF vcs-svn/.depend/svndump.o.d -MQ vcs-svn/svndump.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/svndump.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/svndump.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o credential-cache.o -c -MF ./.depend/credential-cache.o.d -MQ credential-cache.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" credential-cache.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/credential-cache.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o credential-cache.o -c -MF ./.depend/credential-cache.o.d -MQ credential-cache.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" credential-cache.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/credential-cache.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o credential-cache--daemon.o -c -MF ./.depend/credential-cache--daemon.o.d -MQ credential-cache--daemon.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" credential-cache--daemon.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/credential-cache--daemon.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o credential-cache--daemon.o -c -MF ./.depend/credential-cache--daemon.o.d -MQ credential-cache--daemon.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" credential-cache--daemon.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/credential-cache--daemon.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o git.o -c -MF ./.depend/git.o.d -MQ git.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_HTML_PATH=\"share/doc/git\" -DGIT_MAN_PATH=\"share/man\" -DGIT_INFO_PATH=\"share/info\" git.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o git.o -c -MF ./.depend/git.o.d -MQ git.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_HTML_PATH=\"share/doc/git\" -DGIT_MAN_PATH=\"share/man\" -DGIT_INFO_PATH=\"share/info\" git.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/add.o -c -MF builtin/.depend/add.o.d -MQ builtin/add.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/add.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/add.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/add.o -c -MF builtin/.depend/add.o.d -MQ builtin/add.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/add.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/add.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/annotate.o -c -MF builtin/.depend/annotate.o.d -MQ builtin/annotate.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/annotate.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/annotate.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/annotate.o -c -MF builtin/.depend/annotate.o.d -MQ builtin/annotate.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/annotate.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/annotate.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/apply.o -c -MF builtin/.depend/apply.o.d -MQ builtin/apply.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/apply.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/apply.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/apply.o -c -MF builtin/.depend/apply.o.d -MQ builtin/apply.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/apply.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/apply.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/archive.o -c -MF builtin/.depend/archive.o.d -MQ builtin/archive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/archive.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/archive.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/archive.o -c -MF builtin/.depend/archive.o.d -MQ builtin/archive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/archive.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/archive.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/bisect--helper.o -c -MF builtin/.depend/bisect--helper.o.d -MQ builtin/bisect--helper.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/bisect--helper.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/bisect--helper.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/bisect--helper.o -c -MF builtin/.depend/bisect--helper.o.d -MQ builtin/bisect--helper.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/bisect--helper.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/bisect--helper.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/blame.o -c -MF builtin/.depend/blame.o.d -MQ builtin/blame.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/blame.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/blame.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/blame.o -c -MF builtin/.depend/blame.o.d -MQ builtin/blame.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/blame.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/blame.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/branch.o -c -MF builtin/.depend/branch.o.d -MQ builtin/branch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/branch.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/branch.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/branch.o -c -MF builtin/.depend/branch.o.d -MQ builtin/branch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/branch.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/branch.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/bundle.o -c -MF builtin/.depend/bundle.o.d -MQ builtin/bundle.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/bundle.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/bundle.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/bundle.o -c -MF builtin/.depend/bundle.o.d -MQ builtin/bundle.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/bundle.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/bundle.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/cat-file.o -c -MF builtin/.depend/cat-file.o.d -MQ builtin/cat-file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/cat-file.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/cat-file.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/cat-file.o -c -MF builtin/.depend/cat-file.o.d -MQ builtin/cat-file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/cat-file.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/cat-file.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/check-attr.o -c -MF builtin/.depend/check-attr.o.d -MQ builtin/check-attr.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/check-attr.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/check-attr.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/check-attr.o -c -MF builtin/.depend/check-attr.o.d -MQ builtin/check-attr.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/check-attr.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/check-attr.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/check-ignore.o -c -MF builtin/.depend/check-ignore.o.d -MQ builtin/check-ignore.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/check-ignore.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/check-ignore.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/check-ignore.o -c -MF builtin/.depend/check-ignore.o.d -MQ builtin/check-ignore.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/check-ignore.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/check-ignore.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/check-mailmap.o -c -MF builtin/.depend/check-mailmap.o.d -MQ builtin/check-mailmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/check-mailmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/check-mailmap.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/check-mailmap.o -c -MF builtin/.depend/check-mailmap.o.d -MQ builtin/check-mailmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/check-mailmap.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/check-mailmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/check-ref-format.o -c -MF builtin/.depend/check-ref-format.o.d -MQ builtin/check-ref-format.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/check-ref-format.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/check-ref-format.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/check-ref-format.o -c -MF builtin/.depend/check-ref-format.o.d -MQ builtin/check-ref-format.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/check-ref-format.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/check-ref-format.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/checkout-index.o -c -MF builtin/.depend/checkout-index.o.d -MQ builtin/checkout-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/checkout-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/checkout-index.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/checkout-index.o -c -MF builtin/.depend/checkout-index.o.d -MQ builtin/checkout-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/checkout-index.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/checkout-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/checkout.o -c -MF builtin/.depend/checkout.o.d -MQ builtin/checkout.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/checkout.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/checkout.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/checkout.o -c -MF builtin/.depend/checkout.o.d -MQ builtin/checkout.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/checkout.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/checkout.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/clean.o -c -MF builtin/.depend/clean.o.d -MQ builtin/clean.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/clean.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/clean.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/clean.o -c -MF builtin/.depend/clean.o.d -MQ builtin/clean.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/clean.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/clean.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/clone.o -c -MF builtin/.depend/clone.o.d -MQ builtin/clone.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/clone.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/clone.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/clone.o -c -MF builtin/.depend/clone.o.d -MQ builtin/clone.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/clone.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/clone.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/column.o -c -MF builtin/.depend/column.o.d -MQ builtin/column.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/column.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/column.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/column.o -c -MF builtin/.depend/column.o.d -MQ builtin/column.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/column.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/column.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/commit-tree.o -c -MF builtin/.depend/commit-tree.o.d -MQ builtin/commit-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/commit-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/commit-tree.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/commit-tree.o -c -MF builtin/.depend/commit-tree.o.d -MQ builtin/commit-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/commit-tree.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/commit-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/commit.o -c -MF builtin/.depend/commit.o.d -MQ builtin/commit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/commit.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/commit.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/commit.o -c -MF builtin/.depend/commit.o.d -MQ builtin/commit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/commit.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/commit.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/config.o -c -MF builtin/.depend/config.o.d -MQ builtin/config.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/config.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/config.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/config.o -c -MF builtin/.depend/config.o.d -MQ builtin/config.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/config.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/config.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/count-objects.o -c -MF builtin/.depend/count-objects.o.d -MQ builtin/count-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/count-objects.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/count-objects.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/count-objects.o -c -MF builtin/.depend/count-objects.o.d -MQ builtin/count-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/count-objects.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/count-objects.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/credential.o -c -MF builtin/.depend/credential.o.d -MQ builtin/credential.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/credential.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/credential.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/credential.o -c -MF builtin/.depend/credential.o.d -MQ builtin/credential.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/credential.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/credential.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/describe.o -c -MF builtin/.depend/describe.o.d -MQ builtin/describe.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/describe.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/describe.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/describe.o -c -MF builtin/.depend/describe.o.d -MQ builtin/describe.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/describe.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/describe.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/diff-files.o -c -MF builtin/.depend/diff-files.o.d -MQ builtin/diff-files.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/diff-files.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/diff-files.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/diff-files.o -c -MF builtin/.depend/diff-files.o.d -MQ builtin/diff-files.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/diff-files.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/diff-files.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/diff-index.o -c -MF builtin/.depend/diff-index.o.d -MQ builtin/diff-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/diff-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/diff-index.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/diff-index.o -c -MF builtin/.depend/diff-index.o.d -MQ builtin/diff-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/diff-index.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/diff-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/diff-tree.o -c -MF builtin/.depend/diff-tree.o.d -MQ builtin/diff-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/diff-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/diff-tree.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/diff-tree.o -c -MF builtin/.depend/diff-tree.o.d -MQ builtin/diff-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/diff-tree.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/diff-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/diff.o -c -MF builtin/.depend/diff.o.d -MQ builtin/diff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/diff.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/diff.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/diff.o -c -MF builtin/.depend/diff.o.d -MQ builtin/diff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/diff.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/diff.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/fast-export.o -c -MF builtin/.depend/fast-export.o.d -MQ builtin/fast-export.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fast-export.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fast-export.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/fast-export.o -c -MF builtin/.depend/fast-export.o.d -MQ builtin/fast-export.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fast-export.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fast-export.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/fetch-pack.o -c -MF builtin/.depend/fetch-pack.o.d -MQ builtin/fetch-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fetch-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fetch-pack.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/fetch-pack.o -c -MF builtin/.depend/fetch-pack.o.d -MQ builtin/fetch-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fetch-pack.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fetch-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/fetch.o -c -MF builtin/.depend/fetch.o.d -MQ builtin/fetch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fetch.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fetch.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/fetch.o -c -MF builtin/.depend/fetch.o.d -MQ builtin/fetch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fetch.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fetch.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/fmt-merge-msg.o -c -MF builtin/.depend/fmt-merge-msg.o.d -MQ builtin/fmt-merge-msg.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fmt-merge-msg.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fmt-merge-msg.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/fmt-merge-msg.o -c -MF builtin/.depend/fmt-merge-msg.o.d -MQ builtin/fmt-merge-msg.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fmt-merge-msg.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fmt-merge-msg.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/for-each-ref.o -c -MF builtin/.depend/for-each-ref.o.d -MQ builtin/for-each-ref.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/for-each-ref.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/for-each-ref.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/for-each-ref.o -c -MF builtin/.depend/for-each-ref.o.d -MQ builtin/for-each-ref.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/for-each-ref.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/for-each-ref.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/fsck.o -c -MF builtin/.depend/fsck.o.d -MQ builtin/fsck.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fsck.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fsck.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/fsck.o -c -MF builtin/.depend/fsck.o.d -MQ builtin/fsck.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fsck.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fsck.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/gc.o -c -MF builtin/.depend/gc.o.d -MQ builtin/gc.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/gc.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/gc.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/gc.o -c -MF builtin/.depend/gc.o.d -MQ builtin/gc.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/gc.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/gc.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/get-tar-commit-id.o -c -MF builtin/.depend/get-tar-commit-id.o.d -MQ builtin/get-tar-commit-id.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/get-tar-commit-id.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/get-tar-commit-id.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/get-tar-commit-id.o -c -MF builtin/.depend/get-tar-commit-id.o.d -MQ builtin/get-tar-commit-id.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/get-tar-commit-id.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/get-tar-commit-id.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/grep.o -c -MF builtin/.depend/grep.o.d -MQ builtin/grep.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/grep.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/grep.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/grep.o -c -MF builtin/.depend/grep.o.d -MQ builtin/grep.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/grep.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/grep.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/hash-object.o -c -MF builtin/.depend/hash-object.o.d -MQ builtin/hash-object.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/hash-object.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/hash-object.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/hash-object.o -c -MF builtin/.depend/hash-object.o.d -MQ builtin/hash-object.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/hash-object.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/hash-object.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/help.o -c -MF builtin/.depend/help.o.d -MQ builtin/help.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_HTML_PATH=\"share/doc/git\" -DGIT_MAN_PATH=\"share/man\" -DGIT_INFO_PATH=\"share/info\" builtin/help.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/help.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/help.o -c -MF builtin/.depend/help.o.d -MQ builtin/help.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_HTML_PATH=\"share/doc/git\" -DGIT_MAN_PATH=\"share/man\" -DGIT_INFO_PATH=\"share/info\" builtin/help.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/help.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/index-pack.o -c -MF builtin/.depend/index-pack.o.d -MQ builtin/index-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/index-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/index-pack.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/index-pack.o -c -MF builtin/.depend/index-pack.o.d -MQ builtin/index-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/index-pack.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/index-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/init-db.o -c -MF builtin/.depend/init-db.o.d -MQ builtin/init-db.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DDEFAULT_GIT_TEMPLATE_DIR=\"/usr/local/share/git-core/templates\" builtin/init-db.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/init-db.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/init-db.o -c -MF builtin/.depend/init-db.o.d -MQ builtin/init-db.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DDEFAULT_GIT_TEMPLATE_DIR=\"/usr/local/share/git-core/templates\" builtin/init-db.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/init-db.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/interpret-trailers.o -c -MF builtin/.depend/interpret-trailers.o.d -MQ builtin/interpret-trailers.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/interpret-trailers.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/interpret-trailers.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/interpret-trailers.o -c -MF builtin/.depend/interpret-trailers.o.d -MQ builtin/interpret-trailers.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/interpret-trailers.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/interpret-trailers.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/log.o -c -MF builtin/.depend/log.o.d -MQ builtin/log.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/log.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/log.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/log.o -c -MF builtin/.depend/log.o.d -MQ builtin/log.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/log.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/log.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/ls-files.o -c -MF builtin/.depend/ls-files.o.d -MQ builtin/ls-files.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/ls-files.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/ls-files.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/ls-files.o -c -MF builtin/.depend/ls-files.o.d -MQ builtin/ls-files.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/ls-files.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/ls-files.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/ls-remote.o -c -MF builtin/.depend/ls-remote.o.d -MQ builtin/ls-remote.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/ls-remote.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/ls-remote.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/ls-remote.o -c -MF builtin/.depend/ls-remote.o.d -MQ builtin/ls-remote.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/ls-remote.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/ls-remote.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/ls-tree.o -c -MF builtin/.depend/ls-tree.o.d -MQ builtin/ls-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/ls-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/ls-tree.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/ls-tree.o -c -MF builtin/.depend/ls-tree.o.d -MQ builtin/ls-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/ls-tree.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/ls-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/mailinfo.o -c -MF builtin/.depend/mailinfo.o.d -MQ builtin/mailinfo.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mailinfo.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mailinfo.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/mailinfo.o -c -MF builtin/.depend/mailinfo.o.d -MQ builtin/mailinfo.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mailinfo.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mailinfo.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/mailsplit.o -c -MF builtin/.depend/mailsplit.o.d -MQ builtin/mailsplit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mailsplit.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mailsplit.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/mailsplit.o -c -MF builtin/.depend/mailsplit.o.d -MQ builtin/mailsplit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mailsplit.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mailsplit.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/merge.o -c -MF builtin/.depend/merge.o.d -MQ builtin/merge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/merge.o -c -MF builtin/.depend/merge.o.d -MQ builtin/merge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/merge-base.o -c -MF builtin/.depend/merge-base.o.d -MQ builtin/merge-base.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-base.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-base.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/merge-base.o -c -MF builtin/.depend/merge-base.o.d -MQ builtin/merge-base.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-base.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-base.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/merge-file.o -c -MF builtin/.depend/merge-file.o.d -MQ builtin/merge-file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-file.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-file.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/merge-file.o -c -MF builtin/.depend/merge-file.o.d -MQ builtin/merge-file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-file.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-file.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/merge-index.o -c -MF builtin/.depend/merge-index.o.d -MQ builtin/merge-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-index.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/merge-index.o -c -MF builtin/.depend/merge-index.o.d -MQ builtin/merge-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-index.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/merge-ours.o -c -MF builtin/.depend/merge-ours.o.d -MQ builtin/merge-ours.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-ours.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-ours.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/merge-ours.o -c -MF builtin/.depend/merge-ours.o.d -MQ builtin/merge-ours.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-ours.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-ours.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/merge-recursive.o -c -MF builtin/.depend/merge-recursive.o.d -MQ builtin/merge-recursive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-recursive.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-recursive.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/merge-recursive.o -c -MF builtin/.depend/merge-recursive.o.d -MQ builtin/merge-recursive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-recursive.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-recursive.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/merge-tree.o -c -MF builtin/.depend/merge-tree.o.d -MQ builtin/merge-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-tree.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/merge-tree.o -c -MF builtin/.depend/merge-tree.o.d -MQ builtin/merge-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-tree.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/mktag.o -c -MF builtin/.depend/mktag.o.d -MQ builtin/mktag.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mktag.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mktag.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/mktag.o -c -MF builtin/.depend/mktag.o.d -MQ builtin/mktag.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mktag.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mktag.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/mktree.o -c -MF builtin/.depend/mktree.o.d -MQ builtin/mktree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mktree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mktree.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/mktree.o -c -MF builtin/.depend/mktree.o.d -MQ builtin/mktree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mktree.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mktree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/mv.o -c -MF builtin/.depend/mv.o.d -MQ builtin/mv.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mv.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mv.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/mv.o -c -MF builtin/.depend/mv.o.d -MQ builtin/mv.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mv.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mv.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/name-rev.o -c -MF builtin/.depend/name-rev.o.d -MQ builtin/name-rev.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/name-rev.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/name-rev.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/name-rev.o -c -MF builtin/.depend/name-rev.o.d -MQ builtin/name-rev.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/name-rev.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/name-rev.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/notes.o -c -MF builtin/.depend/notes.o.d -MQ builtin/notes.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/notes.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/notes.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/notes.o -c -MF builtin/.depend/notes.o.d -MQ builtin/notes.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/notes.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/notes.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/pack-objects.o -c -MF builtin/.depend/pack-objects.o.d -MQ builtin/pack-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/pack-objects.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/pack-objects.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/pack-objects.o -c -MF builtin/.depend/pack-objects.o.d -MQ builtin/pack-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/pack-objects.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/pack-objects.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/pack-redundant.o -c -MF builtin/.depend/pack-redundant.o.d -MQ builtin/pack-redundant.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/pack-redundant.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/pack-redundant.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/pack-redundant.o -c -MF builtin/.depend/pack-redundant.o.d -MQ builtin/pack-redundant.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/pack-redundant.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/pack-redundant.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/pack-refs.o -c -MF builtin/.depend/pack-refs.o.d -MQ builtin/pack-refs.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/pack-refs.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/pack-refs.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/pack-refs.o -c -MF builtin/.depend/pack-refs.o.d -MQ builtin/pack-refs.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/pack-refs.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/pack-refs.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/patch-id.o -c -MF builtin/.depend/patch-id.o.d -MQ builtin/patch-id.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/patch-id.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/patch-id.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/patch-id.o -c -MF builtin/.depend/patch-id.o.d -MQ builtin/patch-id.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/patch-id.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/patch-id.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/prune-packed.o -c -MF builtin/.depend/prune-packed.o.d -MQ builtin/prune-packed.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/prune-packed.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/prune-packed.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/prune-packed.o -c -MF builtin/.depend/prune-packed.o.d -MQ builtin/prune-packed.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/prune-packed.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/prune-packed.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/prune.o -c -MF builtin/.depend/prune.o.d -MQ builtin/prune.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/prune.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/prune.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/prune.o -c -MF builtin/.depend/prune.o.d -MQ builtin/prune.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/prune.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/prune.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/push.o -c -MF builtin/.depend/push.o.d -MQ builtin/push.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/push.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/push.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/push.o -c -MF builtin/.depend/push.o.d -MQ builtin/push.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/push.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/push.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/read-tree.o -c -MF builtin/.depend/read-tree.o.d -MQ builtin/read-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/read-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/read-tree.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/read-tree.o -c -MF builtin/.depend/read-tree.o.d -MQ builtin/read-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/read-tree.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/read-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/receive-pack.o -c -MF builtin/.depend/receive-pack.o.d -MQ builtin/receive-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/receive-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/receive-pack.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/receive-pack.o -c -MF builtin/.depend/receive-pack.o.d -MQ builtin/receive-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/receive-pack.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/receive-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/reflog.o -c -MF builtin/.depend/reflog.o.d -MQ builtin/reflog.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/reflog.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/reflog.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/reflog.o -c -MF builtin/.depend/reflog.o.d -MQ builtin/reflog.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/reflog.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/reflog.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/remote.o -c -MF builtin/.depend/remote.o.d -MQ builtin/remote.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/remote.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/remote.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/remote.o -c -MF builtin/.depend/remote.o.d -MQ builtin/remote.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/remote.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/remote.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/remote-ext.o -c -MF builtin/.depend/remote-ext.o.d -MQ builtin/remote-ext.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/remote-ext.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/remote-ext.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/remote-ext.o -c -MF builtin/.depend/remote-ext.o.d -MQ builtin/remote-ext.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/remote-ext.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/remote-ext.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/remote-fd.o -c -MF builtin/.depend/remote-fd.o.d -MQ builtin/remote-fd.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/remote-fd.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/remote-fd.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/remote-fd.o -c -MF builtin/.depend/remote-fd.o.d -MQ builtin/remote-fd.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/remote-fd.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/remote-fd.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/repack.o -c -MF builtin/.depend/repack.o.d -MQ builtin/repack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/repack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/repack.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/repack.o -c -MF builtin/.depend/repack.o.d -MQ builtin/repack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/repack.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/repack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/replace.o -c -MF builtin/.depend/replace.o.d -MQ builtin/replace.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/replace.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/replace.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/replace.o -c -MF builtin/.depend/replace.o.d -MQ builtin/replace.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/replace.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/replace.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/rerere.o -c -MF builtin/.depend/rerere.o.d -MQ builtin/rerere.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/rerere.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rerere.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/rerere.o -c -MF builtin/.depend/rerere.o.d -MQ builtin/rerere.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/rerere.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rerere.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/reset.o -c -MF builtin/.depend/reset.o.d -MQ builtin/reset.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/reset.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/reset.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/reset.o -c -MF builtin/.depend/reset.o.d -MQ builtin/reset.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/reset.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/reset.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/rev-list.o -c -MF builtin/.depend/rev-list.o.d -MQ builtin/rev-list.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/rev-list.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rev-list.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/rev-list.o -c -MF builtin/.depend/rev-list.o.d -MQ builtin/rev-list.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/rev-list.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rev-list.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/rev-parse.o -c -MF builtin/.depend/rev-parse.o.d -MQ builtin/rev-parse.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/rev-parse.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rev-parse.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/rev-parse.o -c -MF builtin/.depend/rev-parse.o.d -MQ builtin/rev-parse.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/rev-parse.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rev-parse.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/revert.o -c -MF builtin/.depend/revert.o.d -MQ builtin/revert.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/revert.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/revert.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/revert.o -c -MF builtin/.depend/revert.o.d -MQ builtin/revert.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/revert.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/revert.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/rm.o -c -MF builtin/.depend/rm.o.d -MQ builtin/rm.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/rm.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rm.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/rm.o -c -MF builtin/.depend/rm.o.d -MQ builtin/rm.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/rm.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rm.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/send-pack.o -c -MF builtin/.depend/send-pack.o.d -MQ builtin/send-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/send-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/send-pack.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/send-pack.o -c -MF builtin/.depend/send-pack.o.d -MQ builtin/send-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/send-pack.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/send-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/shortlog.o -c -MF builtin/.depend/shortlog.o.d -MQ builtin/shortlog.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/shortlog.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/shortlog.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/shortlog.o -c -MF builtin/.depend/shortlog.o.d -MQ builtin/shortlog.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/shortlog.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/shortlog.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/show-branch.o -c -MF builtin/.depend/show-branch.o.d -MQ builtin/show-branch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/show-branch.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/show-branch.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/show-branch.o -c -MF builtin/.depend/show-branch.o.d -MQ builtin/show-branch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/show-branch.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/show-branch.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/show-ref.o -c -MF builtin/.depend/show-ref.o.d -MQ builtin/show-ref.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/show-ref.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/show-ref.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/show-ref.o -c -MF builtin/.depend/show-ref.o.d -MQ builtin/show-ref.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/show-ref.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/show-ref.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/stripspace.o -c -MF builtin/.depend/stripspace.o.d -MQ builtin/stripspace.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/stripspace.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/stripspace.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/stripspace.o -c -MF builtin/.depend/stripspace.o.d -MQ builtin/stripspace.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/stripspace.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/stripspace.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/symbolic-ref.o -c -MF builtin/.depend/symbolic-ref.o.d -MQ builtin/symbolic-ref.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/symbolic-ref.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/symbolic-ref.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/symbolic-ref.o -c -MF builtin/.depend/symbolic-ref.o.d -MQ builtin/symbolic-ref.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/symbolic-ref.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/symbolic-ref.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/tag.o -c -MF builtin/.depend/tag.o.d -MQ builtin/tag.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/tag.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/tag.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/tag.o -c -MF builtin/.depend/tag.o.d -MQ builtin/tag.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/tag.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/tag.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/unpack-file.o -c -MF builtin/.depend/unpack-file.o.d -MQ builtin/unpack-file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/unpack-file.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/unpack-file.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/unpack-file.o -c -MF builtin/.depend/unpack-file.o.d -MQ builtin/unpack-file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/unpack-file.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/unpack-file.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/unpack-objects.o -c -MF builtin/.depend/unpack-objects.o.d -MQ builtin/unpack-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/unpack-objects.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/unpack-objects.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/unpack-objects.o -c -MF builtin/.depend/unpack-objects.o.d -MQ builtin/unpack-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/unpack-objects.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/unpack-objects.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/update-index.o -c -MF builtin/.depend/update-index.o.d -MQ builtin/update-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/update-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/update-index.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/update-index.o -c -MF builtin/.depend/update-index.o.d -MQ builtin/update-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/update-index.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/update-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/update-ref.o -c -MF builtin/.depend/update-ref.o.d -MQ builtin/update-ref.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/update-ref.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/update-ref.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/update-ref.o -c -MF builtin/.depend/update-ref.o.d -MQ builtin/update-ref.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/update-ref.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/update-ref.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/update-server-info.o -c -MF builtin/.depend/update-server-info.o.d -MQ builtin/update-server-info.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/update-server-info.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/update-server-info.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/update-server-info.o -c -MF builtin/.depend/update-server-info.o.d -MQ builtin/update-server-info.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/update-server-info.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/update-server-info.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/upload-archive.o -c -MF builtin/.depend/upload-archive.o.d -MQ builtin/upload-archive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/upload-archive.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/upload-archive.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/upload-archive.o -c -MF builtin/.depend/upload-archive.o.d -MQ builtin/upload-archive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/upload-archive.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/upload-archive.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/var.o -c -MF builtin/.depend/var.o.d -MQ builtin/var.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/var.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/var.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/var.o -c -MF builtin/.depend/var.o.d -MQ builtin/var.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/var.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/var.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/verify-commit.o -c -MF builtin/.depend/verify-commit.o.d -MQ builtin/verify-commit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/verify-commit.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/verify-commit.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/verify-commit.o -c -MF builtin/.depend/verify-commit.o.d -MQ builtin/verify-commit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/verify-commit.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/verify-commit.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/verify-pack.o -c -MF builtin/.depend/verify-pack.o.d -MQ builtin/verify-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/verify-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/verify-pack.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/verify-pack.o -c -MF builtin/.depend/verify-pack.o.d -MQ builtin/verify-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/verify-pack.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/verify-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/verify-tag.o -c -MF builtin/.depend/verify-tag.o.d -MQ builtin/verify-tag.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/verify-tag.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/verify-tag.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/verify-tag.o -c -MF builtin/.depend/verify-tag.o.d -MQ builtin/verify-tag.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/verify-tag.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/verify-tag.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o builtin/write-tree.o -c -MF builtin/.depend/write-tree.o.d -MQ builtin/write-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/write-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/write-tree.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/worktree.o -c -MF builtin/.depend/worktree.o.d -MQ builtin/worktree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/worktree.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/worktree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-chmtime.o -c -MF ./.depend/test-chmtime.o.d -MQ test-chmtime.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-chmtime.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-chmtime.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o builtin/write-tree.o -c -MF builtin/.depend/write-tree.o.d -MQ builtin/write-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/write-tree.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/write-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-ctype.o -c -MF ./.depend/test-ctype.o.d -MQ test-ctype.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-ctype.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-ctype.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-chmtime.o -c -MF ./.depend/test-chmtime.o.d -MQ test-chmtime.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-chmtime.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-chmtime.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-config.o -c -MF ./.depend/test-config.o.d -MQ test-config.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-config.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-config.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-ctype.o -c -MF ./.depend/test-ctype.o.d -MQ test-ctype.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-ctype.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-ctype.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-date.o -c -MF ./.depend/test-date.o.d -MQ test-date.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-date.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-date.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-config.o -c -MF ./.depend/test-config.o.d -MQ test-config.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-config.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-config.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-delta.o -c -MF ./.depend/test-delta.o.d -MQ test-delta.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-delta.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-delta.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-date.o -c -MF ./.depend/test-date.o.d -MQ test-date.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-date.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-date.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-dump-cache-tree.o -c -MF ./.depend/test-dump-cache-tree.o.d -MQ test-dump-cache-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-dump-cache-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-dump-cache-tree.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-delta.o -c -MF ./.depend/test-delta.o.d -MQ test-delta.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-delta.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-delta.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-dump-split-index.o -c -MF ./.depend/test-dump-split-index.o.d -MQ test-dump-split-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-dump-split-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-dump-split-index.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-dump-cache-tree.o -c -MF ./.depend/test-dump-cache-tree.o.d -MQ test-dump-cache-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-dump-cache-tree.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-dump-cache-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-genrandom.o -c -MF ./.depend/test-genrandom.o.d -MQ test-genrandom.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-genrandom.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-genrandom.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-dump-split-index.o -c -MF ./.depend/test-dump-split-index.o.d -MQ test-dump-split-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-dump-split-index.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-dump-split-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-hashmap.o -c -MF ./.depend/test-hashmap.o.d -MQ test-hashmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-hashmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-hashmap.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-dump-untracked-cache.o -c -MF ./.depend/test-dump-untracked-cache.o.d -MQ test-dump-untracked-cache.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-dump-untracked-cache.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-dump-untracked-cache.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-index-version.o -c -MF ./.depend/test-index-version.o.d -MQ test-index-version.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-index-version.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-index-version.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-genrandom.o -c -MF ./.depend/test-genrandom.o.d -MQ test-genrandom.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-genrandom.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-genrandom.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-line-buffer.o -c -MF ./.depend/test-line-buffer.o.d -MQ test-line-buffer.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-line-buffer.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-line-buffer.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-hashmap.o -c -MF ./.depend/test-hashmap.o.d -MQ test-hashmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-hashmap.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-hashmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-match-trees.o -c -MF ./.depend/test-match-trees.o.d -MQ test-match-trees.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-match-trees.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-match-trees.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-index-version.o -c -MF ./.depend/test-index-version.o.d -MQ test-index-version.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-index-version.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-index-version.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-mergesort.o -c -MF ./.depend/test-mergesort.o.d -MQ test-mergesort.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-mergesort.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-mergesort.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-line-buffer.o -c -MF ./.depend/test-line-buffer.o.d -MQ test-line-buffer.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-line-buffer.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-line-buffer.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-mktemp.o -c -MF ./.depend/test-mktemp.o.d -MQ test-mktemp.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-mktemp.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-mktemp.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-match-trees.o -c -MF ./.depend/test-match-trees.o.d -MQ test-match-trees.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-match-trees.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-match-trees.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-parse-options.o -c -MF ./.depend/test-parse-options.o.d -MQ test-parse-options.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-parse-options.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-parse-options.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-mergesort.o -c -MF ./.depend/test-mergesort.o.d -MQ test-mergesort.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-mergesort.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-mergesort.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-path-utils.o -c -MF ./.depend/test-path-utils.o.d -MQ test-path-utils.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-path-utils.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-path-utils.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-mktemp.o -c -MF ./.depend/test-mktemp.o.d -MQ test-mktemp.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-mktemp.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-mktemp.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-prio-queue.o -c -MF ./.depend/test-prio-queue.o.d -MQ test-prio-queue.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-prio-queue.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-prio-queue.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-parse-options.o -c -MF ./.depend/test-parse-options.o.d -MQ test-parse-options.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-parse-options.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-parse-options.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-read-cache.o -c -MF ./.depend/test-read-cache.o.d -MQ test-read-cache.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-read-cache.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-read-cache.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-path-utils.o -c -MF ./.depend/test-path-utils.o.d -MQ test-path-utils.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-path-utils.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-path-utils.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-regex.o -c -MF ./.depend/test-regex.o.d -MQ test-regex.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-regex.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-regex.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-prio-queue.o -c -MF ./.depend/test-prio-queue.o.d -MQ test-prio-queue.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-prio-queue.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-prio-queue.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-revision-walking.o -c -MF ./.depend/test-revision-walking.o.d -MQ test-revision-walking.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-revision-walking.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-revision-walking.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-read-cache.o -c -MF ./.depend/test-read-cache.o.d -MQ test-read-cache.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-read-cache.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-read-cache.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-run-command.o -c -MF ./.depend/test-run-command.o.d -MQ test-run-command.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-run-command.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-run-command.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-regex.o -c -MF ./.depend/test-regex.o.d -MQ test-regex.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-regex.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-regex.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-scrap-cache-tree.o -c -MF ./.depend/test-scrap-cache-tree.o.d -MQ test-scrap-cache-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-scrap-cache-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-scrap-cache-tree.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-revision-walking.o -c -MF ./.depend/test-revision-walking.o.d -MQ test-revision-walking.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-revision-walking.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-revision-walking.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-sha1.o -c -MF ./.depend/test-sha1.o.d -MQ test-sha1.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-sha1.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-sha1.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-run-command.o -c -MF ./.depend/test-run-command.o.d -MQ test-run-command.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-run-command.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-run-command.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-sha1-array.o -c -MF ./.depend/test-sha1-array.o.d -MQ test-sha1-array.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-sha1-array.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-sha1-array.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-scrap-cache-tree.o -c -MF ./.depend/test-scrap-cache-tree.o.d -MQ test-scrap-cache-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-scrap-cache-tree.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-scrap-cache-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-sigchain.o -c -MF ./.depend/test-sigchain.o.d -MQ test-sigchain.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-sigchain.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-sigchain.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-sha1.o -c -MF ./.depend/test-sha1.o.d -MQ test-sha1.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-sha1.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-sha1.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-string-list.o -c -MF ./.depend/test-string-list.o.d -MQ test-string-list.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-string-list.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-string-list.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-sha1-array.o -c -MF ./.depend/test-sha1-array.o.d -MQ test-sha1-array.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-sha1-array.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-sha1-array.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-subprocess.o -c -MF ./.depend/test-subprocess.o.d -MQ test-subprocess.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-subprocess.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-subprocess.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-sigchain.o -c -MF ./.depend/test-sigchain.o.d -MQ test-sigchain.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-sigchain.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-sigchain.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-svn-fe.o -c -MF ./.depend/test-svn-fe.o.d -MQ test-svn-fe.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-svn-fe.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-svn-fe.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-string-list.o -c -MF ./.depend/test-string-list.o.d -MQ test-string-list.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-string-list.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-string-list.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-urlmatch-normalization.o -c -MF ./.depend/test-urlmatch-normalization.o.d -MQ test-urlmatch-normalization.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-urlmatch-normalization.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-urlmatch-normalization.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-subprocess.o -c -MF ./.depend/test-subprocess.o.d -MQ test-subprocess.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-subprocess.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-subprocess.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12",
-  "command": "gcc -o test-wildmatch.o -c -MF ./.depend/test-wildmatch.o.d -MQ test-wildmatch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-wildmatch.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-wildmatch.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-svn-fe.o -c -MF ./.depend/test-svn-fe.o.d -MQ test-svn-fe.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-svn-fe.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-svn-fe.c"
+}
+,
+{
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-urlmatch-normalization.o -c -MF ./.depend/test-urlmatch-normalization.o.d -MQ test-urlmatch-normalization.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-urlmatch-normalization.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-urlmatch-normalization.c"
+}
+,
+{
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0",
+  "command": "gcc -o test-wildmatch.o -c -MF ./.depend/test-wildmatch.o.d -MQ test-wildmatch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-wildmatch.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-wildmatch.c"
 }
 ]
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/compiled_files.def /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/compiled_files.def
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/compiled_files.def	2017-10-10 13:19:01.950528072 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/compiled_files.def	2017-10-10 13:51:34.426456515 +0800
@@ -1,311 +1,313 @@
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/credential-store.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/abspath.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/advice.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/alias.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/alloc.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/archive.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/archive-tar.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/archive-zip.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/argv-array.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/attr.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/base85.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bisect.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/blob.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/branch.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bulk-checkin.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/bundle.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/cache-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/color.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/column.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/combine-diff.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/commit.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/compat/obstack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/compat/terminal.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/config.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/connect.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/connected.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/convert.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/copy.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/credential.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/csum-file.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ctype.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/date.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/decorate.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-break.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-delta.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-order.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-pickaxe.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-rename.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff-delta.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff-lib.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff-no-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/dir.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/editor.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/entry.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/environment.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/bitmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/ewah_bitmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/ewah_io.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/ewah_rlw.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/exec_cmd.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/fetch-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/fsck.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/gettext.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/gpg-interface.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/graph.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/grep.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/hashmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/help.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/hex.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ident.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/kwset.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/levenshtein.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/line-log.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/line-range.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/list-objects.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ll-merge.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/lockfile.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/log-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/mailmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/match-trees.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/merge.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/merge-blobs.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/merge-recursive.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/mergesort.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/name-hash.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes-cache.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes-merge.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes-utils.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/object.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-bitmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-bitmap-write.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-check.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-objects.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-revindex.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-write.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pager.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/parse-options.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/parse-options-cb.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/patch-delta.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/patch-ids.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/path.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pathspec.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pkt-line.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/preload-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pretty.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/prio-queue.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/progress.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/prompt.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/quote.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/reachable.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/read-cache.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/reflog-walk.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/refs.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/remote.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/replace_object.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/rerere.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/resolve-undo.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/revision.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/run-command.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/send-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sequencer.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/server-info.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/setup.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1-array.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1-lookup.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1_file.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1_name.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/shallow.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sideband.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sigchain.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/split-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/strbuf.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/streaming.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/string-list.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/submodule.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/symlinks.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tag.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/trace.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/trailer.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/transport.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/transport-helper.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tree-diff.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tree-walk.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/unpack-trees.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/url.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/urlmatch.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/usage.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/userdiff.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/utf8.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/varint.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/version.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/versioncmp.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/walker.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/wildmatch.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/wrapper.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/write_or_die.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ws.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/wt-status.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff-interface.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/zlib.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/unix-socket.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/block-sha1/sha1.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/thread-utils.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/compat/strlcpy.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xdiffi.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xprepare.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xutils.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xemit.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xmerge.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xpatience.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xhistogram.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/daemon.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/fast-import.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/http-backend.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/imap-send.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sh-i18n--envsubst.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/shell.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/show-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/upload-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/remote-testsvn.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/line_buffer.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/sliding_window.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/repo_tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/fast_export.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/svndiff.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/svndump.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/credential-cache.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/credential-cache--daemon.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/add.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/annotate.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/apply.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/archive.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/bisect--helper.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/blame.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/branch.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/bundle.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/cat-file.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/check-attr.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/check-ignore.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/check-mailmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/check-ref-format.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/checkout-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/checkout.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/clean.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/clone.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/column.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/commit-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/commit.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/config.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/count-objects.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/credential.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/describe.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/diff-files.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/diff-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/diff-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/diff.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fast-export.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fetch-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fetch.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fmt-merge-msg.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/for-each-ref.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/fsck.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/gc.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/get-tar-commit-id.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/grep.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/hash-object.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/help.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/index-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/init-db.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/interpret-trailers.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/log.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/ls-files.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/ls-remote.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/ls-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mailinfo.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mailsplit.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-base.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-file.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-ours.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-recursive.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/merge-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mktag.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mktree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/mv.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/name-rev.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/notes.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/pack-objects.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/pack-redundant.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/pack-refs.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/patch-id.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/prune-packed.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/prune.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/push.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/read-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/receive-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/reflog.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/remote.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/remote-ext.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/remote-fd.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/repack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/replace.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rerere.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/reset.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rev-list.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rev-parse.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/revert.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/rm.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/send-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/shortlog.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/show-branch.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/show-ref.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/stripspace.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/symbolic-ref.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/tag.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/unpack-file.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/unpack-objects.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/update-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/update-ref.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/update-server-info.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/upload-archive.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/var.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/verify-commit.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/verify-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/verify-tag.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/builtin/write-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-chmtime.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-ctype.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-config.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-date.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-delta.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-dump-cache-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-dump-split-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-genrandom.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-hashmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-index-version.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-line-buffer.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-match-trees.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-mergesort.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-mktemp.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-parse-options.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-path-utils.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-prio-queue.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-read-cache.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-regex.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-revision-walking.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-run-command.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-scrap-cache-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-sha1.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-sha1-array.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-sigchain.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-string-list.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-subprocess.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-svn-fe.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-urlmatch-normalization.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-wildmatch.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/credential-store.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/abspath.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/advice.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/alias.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/alloc.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/archive.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/archive-tar.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/archive-zip.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/argv-array.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/attr.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/base85.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bisect.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/blob.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/branch.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bulk-checkin.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/bundle.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/cache-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/color.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/column.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/combine-diff.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/commit.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/compat/obstack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/compat/terminal.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/config.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/connect.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/connected.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/convert.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/copy.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/credential.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/csum-file.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ctype.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/date.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/decorate.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-break.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-delta.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-order.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-pickaxe.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-rename.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff-delta.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff-lib.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff-no-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/dir.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/editor.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/entry.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/environment.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/bitmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/ewah_bitmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/ewah_io.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/ewah_rlw.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/exec_cmd.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/fetch-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/fsck.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/gettext.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/gpg-interface.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/graph.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/grep.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/hashmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/help.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/hex.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ident.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/kwset.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/levenshtein.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/line-log.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/line-range.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/list-objects.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ll-merge.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/lockfile.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/log-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/mailmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/match-trees.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/merge.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/merge-blobs.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/merge-recursive.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/mergesort.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/name-hash.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes-cache.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes-merge.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes-utils.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/object.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-bitmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-bitmap-write.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-check.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-objects.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-revindex.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-write.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pager.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/parse-options.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/parse-options-cb.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/patch-delta.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/patch-ids.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/path.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pathspec.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pkt-line.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/preload-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pretty.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/prio-queue.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/progress.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/prompt.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/quote.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/reachable.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/read-cache.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/reflog-walk.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/refs.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/remote.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/replace_object.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/rerere.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/resolve-undo.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/revision.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/run-command.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/send-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sequencer.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/server-info.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/setup.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1-array.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1-lookup.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1_file.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1_name.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/shallow.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sideband.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sigchain.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/split-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/strbuf.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/streaming.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/string-list.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/submodule.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/symlinks.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tag.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/trace.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/trailer.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/transport.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/transport-helper.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tree-diff.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tree-walk.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/unpack-trees.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/url.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/urlmatch.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/usage.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/userdiff.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/utf8.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/varint.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/version.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/versioncmp.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/walker.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/wildmatch.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/wrapper.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/write_or_die.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ws.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/wt-status.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff-interface.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/zlib.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/unix-socket.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/block-sha1/sha1.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/thread-utils.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/compat/strlcpy.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xdiffi.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xprepare.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xutils.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xemit.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xmerge.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xpatience.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xhistogram.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/daemon.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/fast-import.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/http-backend.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/imap-send.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sh-i18n--envsubst.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/shell.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/show-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/upload-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/remote-testsvn.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/line_buffer.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/sliding_window.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/repo_tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/fast_export.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/svndiff.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/svndump.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/credential-cache.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/credential-cache--daemon.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/add.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/annotate.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/apply.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/archive.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/bisect--helper.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/blame.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/branch.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/bundle.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/cat-file.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/check-attr.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/check-ignore.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/check-mailmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/check-ref-format.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/checkout-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/checkout.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/clean.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/clone.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/column.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/commit-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/commit.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/config.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/count-objects.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/credential.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/describe.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/diff-files.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/diff-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/diff-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/diff.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fast-export.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fetch-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fetch.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fmt-merge-msg.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/for-each-ref.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/fsck.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/gc.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/get-tar-commit-id.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/grep.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/hash-object.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/help.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/index-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/init-db.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/interpret-trailers.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/log.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/ls-files.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/ls-remote.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/ls-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mailinfo.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mailsplit.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-base.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-file.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-ours.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-recursive.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/merge-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mktag.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mktree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/mv.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/name-rev.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/notes.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/pack-objects.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/pack-redundant.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/pack-refs.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/patch-id.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/prune-packed.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/prune.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/push.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/read-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/receive-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/reflog.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/remote.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/remote-ext.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/remote-fd.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/repack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/replace.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rerere.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/reset.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rev-list.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rev-parse.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/revert.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/rm.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/send-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/shortlog.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/show-branch.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/show-ref.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/stripspace.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/symbolic-ref.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/tag.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/unpack-file.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/unpack-objects.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/update-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/update-ref.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/update-server-info.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/upload-archive.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/var.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/verify-commit.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/verify-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/verify-tag.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/worktree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/builtin/write-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-chmtime.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-ctype.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-config.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-date.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-delta.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-dump-cache-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-dump-split-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-dump-untracked-cache.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-genrandom.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-hashmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-index-version.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-line-buffer.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-match-trees.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-mergesort.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-mktemp.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-parse-options.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-path-utils.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-prio-queue.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-read-cache.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-regex.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-revision-walking.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-run-command.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-scrap-cache-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-sha1.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-sha1-array.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-sigchain.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-string-list.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-subprocess.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-svn-fe.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-urlmatch-normalization.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-wildmatch.c
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/config.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/config.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/config.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/config.c	2015-07-28 04:34:56.000000000 +0800
@@ -47,13 +47,13 @@
  * config file and the global /etc/gitconfig)
  */
 static struct config_set the_config_set;
 
 static int config_file_fgetc(struct config_source *conf)
 {
-	return fgetc(conf->u.file);
+	return getc_unlocked(conf->u.file);
 }
 
 static int config_file_ungetc(int c, struct config_source *conf)
 {
 	return ungetc(c, conf->u.file);
 }
@@ -1085,13 +1085,15 @@
 {
 	int ret = -1;
 	FILE *f;
 
 	f = fopen(filename, "r");
 	if (f) {
+		flockfile(f);
 		ret = do_config_from_file(fn, filename, filename, f, data);
+		funlockfile(f);
 		fclose(f);
 	}
 	return ret;
 }
 
 int git_config_from_buf(config_fn_t fn, const char *name, const char *buf,
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/config.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/config.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/config.log /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/config.log
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/config.log	2017-10-10 13:18:11.298529929 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/config.log	2017-10-10 13:50:42.634458413 +0800
@@ -1,10 +1,10 @@
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by git configure 2.4.12, which was
+It was created by git configure 2.5.0, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   $ ./configure 
 
 ## --------- ##
 ## Platform. ##
@@ -118,14 +118,14 @@
 compilation terminated.
 configure:3293: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.4.12"
-| #define PACKAGE_STRING "git 2.4.12"
+| #define PACKAGE_VERSION "2.5.0"
+| #define PACKAGE_STRING "git 2.5.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | /* end confdefs.h.  */
 | #include <ac_nonexistent.h>
 configure:3318: result: gcc -E
 configure:3338: gcc -E  conftest.c
@@ -137,14 +137,14 @@
 compilation terminated.
 configure:3352: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.4.12"
-| #define PACKAGE_STRING "git 2.4.12"
+| #define PACKAGE_VERSION "2.5.0"
+| #define PACKAGE_STRING "git 2.5.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | /* end confdefs.h.  */
 | #include <ac_nonexistent.h>
 configure:3381: checking for grep that handles long lines and -e
 configure:3439: result: /bin/grep
@@ -204,14 +204,14 @@
                      ^
 configure:3640: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.4.12"
-| #define PACKAGE_STRING "git 2.4.12"
+| #define PACKAGE_VERSION "2.5.0"
+| #define PACKAGE_STRING "git 2.5.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -315,14 +315,14 @@
 gcc: error: unrecognized command line option '-R'
 configure:4588: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.4.12"
-| #define PACKAGE_STRING "git 2.4.12"
+| #define PACKAGE_VERSION "2.5.0"
+| #define PACKAGE_STRING "git 2.5.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -374,14 +374,14 @@
 collect2: error: ld returned 1 exit status
 configure:5024: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.4.12"
-| #define PACKAGE_STRING "git 2.4.12"
+| #define PACKAGE_VERSION "2.5.0"
+| #define PACKAGE_STRING "git 2.5.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -416,14 +416,14 @@
 collect2: error: ld returned 1 exit status
 configure:5063: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.4.12"
-| #define PACKAGE_STRING "git 2.4.12"
+| #define PACKAGE_VERSION "2.5.0"
+| #define PACKAGE_STRING "git 2.5.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -458,14 +458,14 @@
 collect2: error: ld returned 1 exit status
 configure:5205: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.4.12"
-| #define PACKAGE_STRING "git 2.4.12"
+| #define PACKAGE_VERSION "2.5.0"
+| #define PACKAGE_STRING "git 2.5.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -581,14 +581,14 @@
                         ^
 configure:5867: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.4.12"
-| #define PACKAGE_STRING "git 2.4.12"
+| #define PACKAGE_VERSION "2.5.0"
+| #define PACKAGE_STRING "git 2.5.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -623,14 +623,14 @@
                                ^
 configure:5939: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.4.12"
-| #define PACKAGE_STRING "git 2.4.12"
+| #define PACKAGE_VERSION "2.5.0"
+| #define PACKAGE_STRING "git 2.5.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -662,14 +662,14 @@
             ^
 configure:5958: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.4.12"
-| #define PACKAGE_STRING "git 2.4.12"
+| #define PACKAGE_VERSION "2.5.0"
+| #define PACKAGE_STRING "git 2.5.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -732,14 +732,14 @@
                    ^
 configure:5958: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.4.12"
-| #define PACKAGE_STRING "git 2.4.12"
+| #define PACKAGE_VERSION "2.5.0"
+| #define PACKAGE_STRING "git 2.5.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -822,14 +822,14 @@
                                       ^
 configure:6018: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.4.12"
-| #define PACKAGE_STRING "git 2.4.12"
+| #define PACKAGE_VERSION "2.5.0"
+| #define PACKAGE_STRING "git 2.5.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -867,14 +867,14 @@
                               ^
 configure:6033: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.4.12"
-| #define PACKAGE_STRING "git 2.4.12"
+| #define PACKAGE_VERSION "2.5.0"
+| #define PACKAGE_STRING "git 2.5.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -956,14 +956,14 @@
 compilation terminated.
 configure:6344: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.4.12"
-| #define PACKAGE_STRING "git 2.4.12"
+| #define PACKAGE_VERSION "2.5.0"
+| #define PACKAGE_STRING "git 2.5.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1020,14 +1020,14 @@
 compilation terminated.
 configure:6344: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.4.12"
-| #define PACKAGE_STRING "git 2.4.12"
+| #define PACKAGE_VERSION "2.5.0"
+| #define PACKAGE_STRING "git 2.5.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1053,14 +1053,14 @@
 collect2: error: ld returned 1 exit status
 configure:6394: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.4.12"
-| #define PACKAGE_STRING "git 2.4.12"
+| #define PACKAGE_VERSION "2.5.0"
+| #define PACKAGE_STRING "git 2.5.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1096,14 +1096,14 @@
 collect2: error: ld returned 1 exit status
 configure:6433: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.4.12"
-| #define PACKAGE_STRING "git 2.4.12"
+| #define PACKAGE_VERSION "2.5.0"
+| #define PACKAGE_STRING "git 2.5.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1139,14 +1139,14 @@
 collect2: error: ld returned 1 exit status
 configure:6479: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.4.12"
-| #define PACKAGE_STRING "git 2.4.12"
+| #define PACKAGE_VERSION "2.5.0"
+| #define PACKAGE_STRING "git 2.5.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1211,22 +1211,22 @@
 configure:6751: checking for library containing memmem
 configure:6782: gcc -o conftest -g -O2   conftest.c  >&5
 configure:6782: $? = 0
 configure:6799: result: none required
 configure:6818: checking for strlcpy
 configure:6818: gcc -o conftest -g -O2   conftest.c  >&5
-/tmp/cceSQcOf.o: In function `main':
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/conftest.c:56: undefined reference to `strlcpy'
+/tmp/ccxAChTD.o: In function `main':
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/conftest.c:56: undefined reference to `strlcpy'
 collect2: error: ld returned 1 exit status
 configure:6818: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.4.12"
-| #define PACKAGE_STRING "git 2.4.12"
+| #define PACKAGE_VERSION "2.5.0"
+| #define PACKAGE_STRING "git 2.5.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1289,14 +1289,14 @@
                         ^
 configure:6888: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.4.12"
-| #define PACKAGE_STRING "git 2.4.12"
+| #define PACKAGE_VERSION "2.5.0"
+| #define PACKAGE_STRING "git 2.5.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1368,26 +1368,34 @@
 configure:7252: $? = 0
 configure:7252: result: yes
 configure:7255: checking for library containing initgroups
 configure:7286: gcc -o conftest -g -O2   conftest.c  >&5
 configure:7286: $? = 0
 configure:7303: result: none required
-configure:7330: checking for BSD sysctl
-configure:7355: gcc -c -g -O2  conftest.c >&5
+configure:7322: checking for getdelim
+configure:7322: gcc -o conftest -g -O2   conftest.c  >&5
+configure:7322: $? = 0
+configure:7322: result: yes
+configure:7325: checking for library containing getdelim
+configure:7356: gcc -o conftest -g -O2   conftest.c  >&5
+configure:7356: $? = 0
+configure:7373: result: none required
+configure:7400: checking for BSD sysctl
+configure:7425: gcc -c -g -O2  conftest.c >&5
 conftest.c: In function 'main':
 conftest.c:34:10: error: 'CTL_HW' undeclared (first use in this function)
  mib[0] = CTL_HW;
           ^
 conftest.c:34:10: note: each undeclared identifier is reported only once for each function it appears in
-configure:7355: $? = 1
+configure:7425: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.4.12"
-| #define PACKAGE_STRING "git 2.4.12"
+| #define PACKAGE_VERSION "2.5.0"
+| #define PACKAGE_STRING "git 2.5.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1418,25 +1426,25 @@
 | len = sizeof(val);
 | return sysctl(mib, 2, &val, &len, NULL, 0) ? 1 : 0;
 | 
 |   ;
 |   return 0;
 | }
-configure:7360: result: no
-configure:7404: checking for POSIX Threads with ''
-configure:7429: gcc -o conftest  -g -O2   conftest.c  >&5
-/tmp/ccrPDMwy.o: In function `main':
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/conftest.c:33: undefined reference to `pthread_key_create'
+configure:7430: result: no
+configure:7474: checking for POSIX Threads with ''
+configure:7499: gcc -o conftest  -g -O2   conftest.c  >&5
+/tmp/cciwftO5.o: In function `main':
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/conftest.c:33: undefined reference to `pthread_key_create'
 collect2: error: ld returned 1 exit status
-configure:7429: $? = 1
+configure:7499: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.4.12"
-| #define PACKAGE_STRING "git 2.4.12"
+| #define PACKAGE_VERSION "2.5.0"
+| #define PACKAGE_STRING "git 2.5.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1467,23 +1475,23 @@
 | 	retcode |= pthread_mutex_unlock(&test_mutex);
 | 	return retcode;
 | 
 |   ;
 |   return 0;
 | }
-configure:7439: result: no
-configure:7404: checking for POSIX Threads with '-mt'
-configure:7429: gcc -o conftest -mt -g -O2   conftest.c  >&5
+configure:7509: result: no
+configure:7474: checking for POSIX Threads with '-mt'
+configure:7499: gcc -o conftest -mt -g -O2   conftest.c  >&5
 gcc: error: unrecognized command line option '-mt'
-configure:7429: $? = 1
+configure:7499: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.4.12"
-| #define PACKAGE_STRING "git 2.4.12"
+| #define PACKAGE_VERSION "2.5.0"
+| #define PACKAGE_STRING "git 2.5.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1514,36 +1522,36 @@
 | 	retcode |= pthread_mutex_unlock(&test_mutex);
 | 	return retcode;
 | 
 |   ;
 |   return 0;
 | }
-configure:7439: result: no
-configure:7404: checking for POSIX Threads with '-pthread'
-configure:7429: gcc -o conftest -pthread -g -O2   conftest.c  >&5
-configure:7429: $? = 0
-configure:7430: result: yes
-configure:7696: creating ./config.status
+configure:7509: result: no
+configure:7474: checking for POSIX Threads with '-pthread'
+configure:7499: gcc -o conftest -pthread -g -O2   conftest.c  >&5
+configure:7499: $? = 0
+configure:7500: result: yes
+configure:7766: creating ./config.status
 
 ## ---------------------- ##
 ## Running config.status. ##
 ## ---------------------- ##
 
-This file was extended by git config.status 2.4.12, which was
+This file was extended by git config.status 2.5.0, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = 
   CONFIG_HEADERS  = 
   CONFIG_LINKS    = 
   CONFIG_COMMANDS = 
   $ ./config.status 
 
 on sarah-Erazer-X310
 
-config.status:800: creating config.mak.autogen
-config.status:961: executing config.mak.autogen commands
+config.status:801: creating config.mak.autogen
+config.status:962: executing config.mak.autogen commands
 
 ## ---------------- ##
 ## Cache variables. ##
 ## ---------------- ##
 
 ac_cv_c_compiler_gnu=yes
@@ -1568,12 +1576,13 @@
 ac_cv_env_target_alias_set=
 ac_cv_env_target_alias_value=
 ac_cv_fread_reads_directories=no
 ac_cv_func_alloca_works=yes
 ac_cv_func_clock_gettime=yes
 ac_cv_func_getaddrinfo=yes
+ac_cv_func_getdelim=yes
 ac_cv_func_hstrerror=yes
 ac_cv_func_inet_ntop=yes
 ac_cv_func_inet_pton=yes
 ac_cv_func_initgroups=yes
 ac_cv_func_memmem=yes
 ac_cv_func_mkdtemp=yes
@@ -1625,12 +1634,13 @@
 ac_cv_prog_ac_ct_CC=gcc
 ac_cv_prog_cc_c89=
 ac_cv_prog_cc_g=yes
 ac_cv_sane_mode_bits=yes
 ac_cv_search_clock_gettime='none required'
 ac_cv_search_getaddrinfo='none required'
+ac_cv_search_getdelim='none required'
 ac_cv_search_initgroups='none required'
 ac_cv_search_memmem='none required'
 ac_cv_search_mkdtemp='none required'
 ac_cv_search_mkstemps='none required'
 ac_cv_search_setenv='none required'
 ac_cv_search_setitimer='none required'
@@ -1656,13 +1666,13 @@
 AR='ar'
 ASCIIDOC=''
 CC='gcc'
 CFLAGS='-g -O2'
 CPP='gcc -E'
 CPPFLAGS=''
-DEFS='-DPACKAGE_NAME=\"git\" -DPACKAGE_TARNAME=\"git\" -DPACKAGE_VERSION=\"2.4.12\" -DPACKAGE_STRING=\"git\ 2.4.12\" -DPACKAGE_BUGREPORT=\"git@vger.kernel.org\" -DPACKAGE_URL=\"\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_ALLOCA=1 -DHAVE_STRUCT_ITIMERVAL=1'
+DEFS='-DPACKAGE_NAME=\"git\" -DPACKAGE_TARNAME=\"git\" -DPACKAGE_VERSION=\"2.5.0\" -DPACKAGE_STRING=\"git\ 2.5.0\" -DPACKAGE_BUGREPORT=\"git@vger.kernel.org\" -DPACKAGE_URL=\"\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_ALLOCA=1 -DHAVE_STRUCT_ITIMERVAL=1'
 DIFF='diff'
 ECHO_C=''
 ECHO_N='-n'
 ECHO_T=''
 EGREP='/bin/grep -E'
 EXEEXT=''
@@ -1671,16 +1681,16 @@
 LIBOBJS=''
 LIBS=''
 LTLIBOBJS=''
 OBJEXT='o'
 PACKAGE_BUGREPORT='git@vger.kernel.org'
 PACKAGE_NAME='git'
-PACKAGE_STRING='git 2.4.12'
+PACKAGE_STRING='git 2.5.0'
 PACKAGE_TARNAME='git'
 PACKAGE_URL=''
-PACKAGE_VERSION='2.4.12'
+PACKAGE_VERSION='2.5.0'
 PATH_SEPARATOR=':'
 SHELL='/bin/bash'
 TAR='tar'
 TCLTK_PATH='wish'
 ac_ct_AR='ar'
 ac_ct_CC='gcc'
@@ -1714,14 +1724,14 @@
 ## confdefs.h. ##
 ## ----------- ##
 
 /* confdefs.h */
 #define PACKAGE_NAME "git"
 #define PACKAGE_TARNAME "git"
-#define PACKAGE_VERSION "2.4.12"
-#define PACKAGE_STRING "git 2.4.12"
+#define PACKAGE_VERSION "2.5.0"
+#define PACKAGE_STRING "git 2.5.0"
 #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 #define PACKAGE_URL ""
 #define STDC_HEADERS 1
 #define HAVE_SYS_TYPES_H 1
 #define HAVE_SYS_STAT_H 1
 #define HAVE_STDLIB_H 1
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/config.mak.autogen /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/config.mak.autogen
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/config.mak.autogen	2017-10-10 13:18:11.286529929 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/config.mak.autogen	2017-10-10 13:50:42.618458414 +0800
@@ -74,10 +74,11 @@
 NO_STRTOUMAX=
 NO_SETENV=
 NO_UNSETENV=
 NO_MKDTEMP=
 NO_MKSTEMPS=
 NO_INITGROUPS=
+HAVE_GETDELIM=YesPlease
 HAVE_BSD_SYSCTL=
 PTHREAD_CFLAGS=-pthread
 PTHREAD_LIBS=-pthread
 NO_PTHREADS=
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/config.mak.uname /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/config.mak.uname
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/config.mak.uname	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/config.mak.uname	2015-07-28 04:34:56.000000000 +0800
@@ -33,12 +33,13 @@
 	NO_MKSTEMPS = YesPlease
 	HAVE_PATHS_H = YesPlease
 	LIBC_CONTAINS_LIBINTL = YesPlease
 	HAVE_DEV_TTY = YesPlease
 	HAVE_CLOCK_GETTIME = YesPlease
 	HAVE_CLOCK_MONOTONIC = YesPlease
+	HAVE_GETDELIM = YesPlease
 endif
 ifeq ($(uname_S),GNU/kFreeBSD)
 	HAVE_ALLOCA_H = YesPlease
 	NO_STRLCPY = YesPlease
 	NO_MKSTEMPS = YesPlease
 	HAVE_PATHS_H = YesPlease
@@ -98,12 +99,15 @@
 		OLD_ICONV = UnfortunatelyYes
 		NO_APPLE_COMMON_CRYPTO = YesPlease
 	endif
 	ifeq ($(shell expr "$(uname_R)" : '[15]\.'),2)
 		NO_STRLCPY = YesPlease
 	endif
+	ifeq ($(shell test "`expr "$(uname_R)" : '\([0-9][0-9]*\)\.'`" -ge 11 && echo 1),1)
+		HAVE_GETDELIM = YesPlease
+	endif
 	NO_MEMMEM = YesPlease
 	USE_ST_TIMESPEC = YesPlease
 	HAVE_DEV_TTY = YesPlease
 	COMPAT_OBJS += compat/precompose_utf8.o
 	BASIC_CFLAGS += -DPRECOMPOSE_UNICODE
 	BASIC_CFLAGS += -DPROTECT_HFS_DEFAULT=1
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/config.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/config.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/config.status /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/config.status
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/config.status	2017-10-10 13:18:11.250529930 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/config.status	2017-10-10 13:50:42.582458415 +0800
@@ -377,13 +377,13 @@
 ## Main body of $CONFIG_STATUS script. ##
 ## ----------------------------------- ##
 # Save the log message, to keep $0 and so on meaningful, and to
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by git $as_me 2.4.12, which was
+This file was extended by git $as_me 2.5.0, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
   CONFIG_HEADERS  = $CONFIG_HEADERS
   CONFIG_LINKS    = $CONFIG_LINKS
   CONFIG_COMMANDS = $CONFIG_COMMANDS
@@ -420,21 +420,21 @@
 $config_commands
 
 Report bugs to <git@vger.kernel.org>."
 
 ac_cs_config=""
 ac_cs_version="\
-git config.status 2.4.12
+git config.status 2.5.0
 configured by ./configure, generated by GNU Autoconf 2.69,
   with options \"$ac_cs_config\"
 
 Copyright (C) 2012 Free Software Foundation, Inc.
 This config.status script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it."
 
-ac_pwd='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12'
+ac_pwd='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0'
 srcdir='.'
 test -n "$AWK" || AWK=awk
 # The default lists apply if the user does not specify any file.
 ac_need_defaults=:
 while test $# != 0
 do
@@ -572,12 +572,13 @@
 NO_STRTOUMAX=
 NO_SETENV=
 NO_UNSETENV=
 NO_MKDTEMP=
 NO_MKSTEMPS=
 NO_INITGROUPS=
+HAVE_GETDELIM=YesPlease
 HAVE_BSD_SYSCTL=
 PTHREAD_CFLAGS=-pthread
 PTHREAD_LIBS=-pthread
 NO_PTHREADS="
 
 
@@ -674,15 +675,15 @@
 S["host_alias"]=""
 S["build_alias"]=""
 S["LIBS"]=""
 S["ECHO_T"]=""
 S["ECHO_N"]="-n"
 S["ECHO_C"]=""
-S["DEFS"]="-DPACKAGE_NAME=\\\"git\\\" -DPACKAGE_TARNAME=\\\"git\\\" -DPACKAGE_VERSION=\\\"2.4.12\\\" -DPACKAGE_STRING=\\\"git\\ 2.4.12\\\" -DPACKAGE_BUGREPORT=\\\"git@vger.kernel"\
-".org\\\" -DPACKAGE_URL=\\\"\\\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STR"\
-"INGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_ALLOCA=1 -DHAVE_STRUCT_ITIMERVAL=1"
+S["DEFS"]="-DPACKAGE_NAME=\\\"git\\\" -DPACKAGE_TARNAME=\\\"git\\\" -DPACKAGE_VERSION=\\\"2.5.0\\\" -DPACKAGE_STRING=\\\"git\\ 2.5.0\\\" -DPACKAGE_BUGREPORT=\\\"git@vger.kernel.o"\
+"rg\\\" -DPACKAGE_URL=\\\"\\\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRIN"\
+"GS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_ALLOCA=1 -DHAVE_STRUCT_ITIMERVAL=1"
 S["mandir"]="${datarootdir}/man"
 S["localedir"]="${datarootdir}/locale"
 S["libdir"]="${exec_prefix}/lib"
 S["psdir"]="${docdir}"
 S["pdfdir"]="${docdir}"
 S["dvidir"]="${docdir}"
@@ -701,14 +702,14 @@
 S["bindir"]="${exec_prefix}/bin"
 S["program_transform_name"]="s,x,x,"
 S["prefix"]="/usr/local"
 S["exec_prefix"]="${prefix}"
 S["PACKAGE_URL"]=""
 S["PACKAGE_BUGREPORT"]="git@vger.kernel.org"
-S["PACKAGE_STRING"]="git 2.4.12"
-S["PACKAGE_VERSION"]="2.4.12"
+S["PACKAGE_STRING"]="git 2.5.0"
+S["PACKAGE_VERSION"]="2.5.0"
 S["PACKAGE_TARNAME"]="git"
 S["PACKAGE_NAME"]="git"
 S["PATH_SEPARATOR"]=":"
 S["SHELL"]="/bin/bash"
 _ACAWK
 cat >>"$ac_tmp/subs1.awk" <<_ACAWK &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/configure /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/configure
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/configure	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/configure	2015-07-28 04:34:57.000000000 +0800
@@ -1,9 +1,9 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.69 for git 2.4.12.
+# Generated by GNU Autoconf 2.69 for git 2.5.0.
 #
 # Report bugs to <git@vger.kernel.org>.
 #
 #
 # Copyright (C) 1992-1996, 1998-2012 Free Software Foundation, Inc.
 #
@@ -577,14 +577,14 @@
 MFLAGS=
 MAKEFLAGS=
 
 # Identity of this package.
 PACKAGE_NAME='git'
 PACKAGE_TARNAME='git'
-PACKAGE_VERSION='2.4.12'
-PACKAGE_STRING='git 2.4.12'
+PACKAGE_VERSION='2.5.0'
+PACKAGE_STRING='git 2.5.0'
 PACKAGE_BUGREPORT='git@vger.kernel.org'
 PACKAGE_URL=''
 
 ac_unique_file="git.c"
 # Factoring default headers for most tests.
 ac_includes_default="\
@@ -1248,13 +1248,13 @@
 # Report the --help message.
 #
 if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures git 2.4.12 to adapt to many kinds of systems.
+\`configure' configures git 2.5.0 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
 To assign environment variables (e.g., CC, CFLAGS...), specify them as
 VAR=VALUE.  See below for descriptions of some of the useful variables.
 
@@ -1309,13 +1309,13 @@
   cat <<\_ACEOF
 _ACEOF
 fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of git 2.4.12:";;
+     short | recursive ) echo "Configuration of git 2.5.0:";;
    esac
   cat <<\_ACEOF
 
 Optional Features:
   --disable-option-checking  ignore unrecognized --enable/--with options
   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
@@ -1448,13 +1448,13 @@
   done
 fi
 
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-git configure 2.4.12
+git configure 2.5.0
 generated by GNU Autoconf 2.69
 
 Copyright (C) 2012 Free Software Foundation, Inc.
 This configure script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it.
 _ACEOF
@@ -1928,13 +1928,13 @@
 
 } # ac_fn_c_check_member
 cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by git $as_me 2.4.12, which was
+It was created by git $as_me 2.5.0, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   $ $0 $@
 
 _ACEOF
 exec 5>>config.log
@@ -7315,12 +7315,82 @@
   NO_INITGROUPS=YesPlease
 fi
 
 
 config_appended_defs="$config_appended_defs${newline}NO_INITGROUPS=${NO_INITGROUPS}"
 #
+# Define HAVE_GETDELIM if you have getdelim in the C library.
+ac_fn_c_check_func "$LINENO" "getdelim" "ac_cv_func_getdelim"
+if test "x$ac_cv_func_getdelim" = xyes; then :
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for library containing getdelim" >&5
+$as_echo_n "checking for library containing getdelim... " >&6; }
+if ${ac_cv_search_getdelim+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_func_search_save_LIBS=$LIBS
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char getdelim ();
+int
+main ()
+{
+return getdelim ();
+  ;
+  return 0;
+}
+_ACEOF
+for ac_lib in '' ; do
+  if test -z "$ac_lib"; then
+    ac_res="none required"
+  else
+    ac_res=-l$ac_lib
+    LIBS="-l$ac_lib  $ac_func_search_save_LIBS"
+  fi
+  if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_search_getdelim=$ac_res
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext
+  if ${ac_cv_search_getdelim+:} false; then :
+  break
+fi
+done
+if ${ac_cv_search_getdelim+:} false; then :
+
+else
+  ac_cv_search_getdelim=no
+fi
+rm conftest.$ac_ext
+LIBS=$ac_func_search_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_getdelim" >&5
+$as_echo "$ac_cv_search_getdelim" >&6; }
+ac_res=$ac_cv_search_getdelim
+if test "$ac_res" != no; then :
+  test "$ac_res" = "none required" || LIBS="$ac_res $LIBS"
+  HAVE_GETDELIM=YesPlease
+else
+  HAVE_GETDELIM=
+fi
+
+
+else
+  HAVE_GETDELIM=
+fi
+
+
+config_appended_defs="$config_appended_defs${newline}HAVE_GETDELIM=${HAVE_GETDELIM}"
+#
 #
 # Define NO_MMAP if you want to avoid mmap.
 #
 # Define NO_ICONV if your libc does not properly support iconv.
 
 
@@ -8082,13 +8152,13 @@
 
 cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # Save the log message, to keep $0 and so on meaningful, and to
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by git $as_me 2.4.12, which was
+This file was extended by git $as_me 2.5.0, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
   CONFIG_HEADERS  = $CONFIG_HEADERS
   CONFIG_LINKS    = $CONFIG_LINKS
   CONFIG_COMMANDS = $CONFIG_COMMANDS
@@ -8139,13 +8209,13 @@
 Report bugs to <git@vger.kernel.org>."
 
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_config="`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`"
 ac_cs_version="\\
-git config.status 2.4.12
+git config.status 2.5.0
 configured by $0, generated by GNU Autoconf 2.69,
   with options \\"\$ac_cs_config\\"
 
 Copyright (C) 2012 Free Software Foundation, Inc.
 This config.status script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it."
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/configure.ac /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/configure.ac
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/configure.ac	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/configure.ac	2015-07-28 04:34:56.000000000 +0800
@@ -1038,12 +1038,18 @@
 # Define NO_INITGROUPS if you don't have initgroups in the C library.
 GIT_CHECK_FUNC(initgroups,
 [NO_INITGROUPS=],
 [NO_INITGROUPS=YesPlease])
 GIT_CONF_SUBST([NO_INITGROUPS])
 #
+# Define HAVE_GETDELIM if you have getdelim in the C library.
+GIT_CHECK_FUNC(getdelim,
+[HAVE_GETDELIM=YesPlease],
+[HAVE_GETDELIM=])
+GIT_CONF_SUBST([HAVE_GETDELIM])
+#
 #
 # Define NO_MMAP if you want to avoid mmap.
 #
 # Define NO_ICONV if your libc does not properly support iconv.
 
 AC_DEFUN([BSD_SYSCTL_SRC], [
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/connect.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/connect.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/connect.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/connect.c	2015-07-28 04:34:56.000000000 +0800
@@ -6,13 +6,12 @@
 #include "run-command.h"
 #include "remote.h"
 #include "connect.h"
 #include "url.h"
 #include "string-list.h"
 #include "sha1-array.h"
-#include "transport.h"
 
 static char *server_capabilities;
 static const char *parse_feature_value(const char *, const char *, int *);
 
 static int check_ref(const char *name, unsigned int flags)
 {
@@ -692,14 +691,12 @@
 		char *target_host = getenv("GIT_OVERRIDE_VIRTUAL_HOST");
 		if (target_host)
 			target_host = xstrdup(target_host);
 		else
 			target_host = xstrdup(hostandport);
 
-		transport_check_allowed("git");
-
 		/* These underlying connection commands die() if they
 		 * cannot connect.
 		 */
 		if (git_use_proxy(hostandport))
 			conn = git_proxy_connect(fd, hostandport);
 		else
@@ -727,13 +724,12 @@
 		conn->in = conn->out = -1;
 		if (protocol == PROTO_SSH) {
 			const char *ssh;
 			int putty, tortoiseplink = 0;
 			char *ssh_host = hostandport;
 			const char *port = NULL;
-			transport_check_allowed("ssh");
 			get_host_and_port(&ssh_host, &port);
 
 			if (!port)
 				port = get_port(ssh_host);
 
 			if (flags & CONNECT_DIAG_URL) {
@@ -782,13 +778,12 @@
 			}
 			argv_array_push(&conn->args, ssh_host);
 		} else {
 			/* remove repo-local variables from the environment */
 			conn->env = local_repo_env;
 			conn->use_shell = 1;
-			transport_check_allowed("file");
 		}
 		argv_array_push(&conn->args, cmd.buf);
 
 		if (start_command(conn))
 			die("unable to fork");
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/connect.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/connect.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/connected.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/connected.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/connected.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/connected.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/connect.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/connect.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/contrib/completion/git-completion.bash /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/contrib/completion/git-completion.bash
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/contrib/completion/git-completion.bash	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/contrib/completion/git-completion.bash	2015-07-28 04:34:56.000000000 +0800
@@ -662,14 +662,14 @@
 		check-ignore)     : plumbing;;
 		check-mailmap)    : plumbing;;
 		check-ref-format) : plumbing;;
 		checkout-index)   : plumbing;;
 		commit-tree)      : plumbing;;
 		count-objects)    : infrequent;;
-		credential-cache) : credentials helper;;
-		credential-store) : credentials helper;;
+		credential)       : credentials;;
+		credential-*)     : credentials helper;;
 		cvsexportcommit)  : export;;
 		cvsimport)        : import;;
 		cvsserver)        : daemon;;
 		daemon)           : daemon;;
 		diff-files)       : plumbing;;
 		diff-index)       : plumbing;;
@@ -732,41 +732,35 @@
 	done
 }
 
 __git_porcelain_commands=
 __git_compute_porcelain_commands ()
 {
-	__git_compute_all_commands
 	test -n "$__git_porcelain_commands" ||
 	__git_porcelain_commands=$(__git_list_porcelain_commands)
 }
 
+# Lists all set config variables starting with the given section prefix,
+# with the prefix removed.
+__git_get_config_variables ()
+{
+	local section="$1" i IFS=$'\n'
+	for i in $(git --git-dir="$(__gitdir)" config --get-regexp "^$section\..*" 2>/dev/null); do
+		i="${i#$section.}"
+		echo "${i/ */}"
+	done
+}
+
 __git_pretty_aliases ()
 {
-	local i IFS=$'\n'
-	for i in $(git --git-dir="$(__gitdir)" config --get-regexp "pretty\..*" 2>/dev/null); do
-		case "$i" in
-		pretty.*)
-			i="${i#pretty.}"
-			echo "${i/ */}"
-			;;
-		esac
-	done
+	__git_get_config_variables "pretty"
 }
 
 __git_aliases ()
 {
-	local i IFS=$'\n'
-	for i in $(git --git-dir="$(__gitdir)" config --get-regexp "alias\..*" 2>/dev/null); do
-		case "$i" in
-		alias.*)
-			i="${i#alias.}"
-			echo "${i/ */}"
-			;;
-		esac
-	done
+	__git_get_config_variables "alias"
 }
 
 # __git_aliased_command requires 1 argument
 __git_aliased_command ()
 {
 	local word cmdline=$(git --git-dir="$(__gitdir)" \
@@ -2120,12 +2114,13 @@
 		http.lowSpeedTime
 		http.maxRequests
 		http.minSessions
 		http.noEPSV
 		http.postBuffer
 		http.proxy
+		http.sslCipherList
 		http.sslCAInfo
 		http.sslCAPath
 		http.sslCert
 		http.sslCertPasswordProtected
 		http.sslKey
 		http.sslVerify
@@ -2257,18 +2252,13 @@
 		__gitcomp_nl "$(__git_remotes)"
 		;;
 	set-head|set-branches)
 		__git_complete_remote_or_refspec
 		;;
 	update)
-		local i c='' IFS=$'\n'
-		for i in $(git --git-dir="$(__gitdir)" config --get-regexp "remotes\..*" 2>/dev/null); do
-			i="${i#remotes.}"
-			c="$c ${i/ */}"
-		done
-		__gitcomp "$c"
+		__gitcomp "$(__git_get_config_variables "remotes")"
 		;;
 	*)
 		;;
 	esac
 }
 
@@ -2289,12 +2279,17 @@
 	esac
 	__gitcomp_nl "$(__git_refs)"
 }
 
 _git_revert ()
 {
+	local dir="$(__gitdir)"
+	if [ -f "$dir"/REVERT_HEAD ]; then
+		__gitcomp "--continue --quit --abort"
+		return
+	fi
 	case "$cur" in
 	--*)
 		__gitcomp "--edit --mainline --no-edit --no-commit --signoff"
 		return
 		;;
 	esac
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/contrib/hooks/multimail/CHANGES /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/contrib/hooks/multimail/CHANGES
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/contrib/hooks/multimail/CHANGES	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/contrib/hooks/multimail/CHANGES	2015-07-28 04:34:56.000000000 +0800
@@ -1,6 +1,59 @@
+Release 1.1.1 (bugfix-only release)
+===================================
+
+* The SMTP mailer was not working with Python 2.4.
+
+Release 1.1.0
+=============
+
+* When a single commit is pushed, omit the reference changed email.
+  Set multimailhook.combineWhenSingleCommit to false to disable this
+  new feature.
+
+* In gitolite environments, the pusher's email address can be used as
+  the From address by creating a specially formatted comment block in
+  gitolite.conf (see multimailhook.from in README).
+
+* Support for SMTP authentication and SSL/TLS encryption was added,
+  see smtpUser, smtpPass, smtpEncryption in README.
+
+* A new option scanCommitForCc was added to allow git-multimail to
+  search the commit message for 'Cc: ...' lines, and add the
+  corresponding emails in Cc.
+
+* If $USER is not set, use the variable $USERNAME. This is needed on
+  Windows platform to recognize the pusher.
+
+* The emailPrefix variable can now be set to an empty string to remove
+  the prefix.
+
+* A short tutorial was added in doc/gitolite.rst to set up
+  git-multimail with gitolite.
+
+* The post-receive file was renamed to post-receive.example. It has
+  always been an example (the standard way to call git-multimail is to
+  call git_multimail.py), but it was unclear to many users.
+
+* A new refchangeShowGraph option was added to make it possible to
+  include both a graph and a log in the summary emails.  The options
+  to control the graph formatting can be set via the new graphOpts
+  option.
+
+* New option --force-send was added to disable new commit detection
+  for update hook. One use-case is to run git_multimail.py after
+  running "git fetch" to send emails about commits that have just been
+  fetched (the detection of new commits was unreliable in this mode).
+
+* The testing infrastructure was considerably improved (continuous
+  integration with travis-ci, automatic check of PEP8 and RST syntax,
+  many improvements to the test scripts).
+
+This version has been tested with Python 2.4 to 2.7, and Git 1.7.1 to
+2.4.
+
 Release 1.0.0
 =============
 
 * Fix encoding of non-ASCII email addresses in email headers.
 
 * Fix backwards-compatibility bugs for older Python 2.x versions.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/contrib/hooks/multimail/git_multimail.py /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/contrib/hooks/multimail/git_multimail.py
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/contrib/hooks/multimail/git_multimail.py	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/contrib/hooks/multimail/git_multimail.py	2015-07-28 04:34:56.000000000 +0800
@@ -1,8 +1,9 @@
 #! /usr/bin/env python2
 
+# Copyright (c) 2015 Matthieu Moy and others
 # Copyright (c) 2012-2014 Michael Haggerty and others
 # Derived from contrib/hooks/post-receive-email, which is
 # Copyright (c) 2007 Andy Parkins
 # and also includes contributions by other authors.
 #
 # This file is part of git-multimail.
@@ -96,12 +97,16 @@
     )
 REF_DELETED_SUBJECT_TEMPLATE = (
     '%(emailprefix)s%(refname_type)s %(short_refname)s deleted'
     ' (was %(oldrev_short)s)'
     )
 
+COMBINED_REFCHANGE_REVISION_SUBJECT_TEMPLATE = (
+    '%(emailprefix)s%(refname_type)s %(short_refname)s updated: %(oneline)s'
+    )
+
 REFCHANGE_HEADER_TEMPLATE = """\
 Date: %(send_date)s
 To: %(recipients)s
 Subject: %(subject)s
 MIME-Version: 1.0
 Content-Type: text/plain; charset=%(charset)s
@@ -227,12 +232,13 @@
 """
 
 
 REVISION_HEADER_TEMPLATE = """\
 Date: %(send_date)s
 To: %(recipients)s
+Cc: %(cc_recipients)s
 Subject: %(emailprefix)s%(num)02d/%(tot)02d: %(oneline)s
 MIME-Version: 1.0
 Content-Type: text/plain; charset=%(charset)s
 Content-Transfer-Encoding: 8bit
 From: %(fromaddr)s
 Reply-To: %(reply_to)s
@@ -255,12 +261,44 @@
 """
 
 
 REVISION_FOOTER_TEMPLATE = FOOTER_TEMPLATE
 
 
+# Combined, meaning refchange+revision email (for single-commit additions)
+COMBINED_HEADER_TEMPLATE = """\
+Date: %(send_date)s
+To: %(recipients)s
+Subject: %(subject)s
+MIME-Version: 1.0
+Content-Type: text/plain; charset=%(charset)s
+Content-Transfer-Encoding: 8bit
+Message-ID: %(msgid)s
+From: %(fromaddr)s
+Reply-To: %(reply_to)s
+X-Git-Host: %(fqdn)s
+X-Git-Repo: %(repo_shortname)s
+X-Git-Refname: %(refname)s
+X-Git-Reftype: %(refname_type)s
+X-Git-Oldrev: %(oldrev)s
+X-Git-Newrev: %(newrev)s
+X-Git-Rev: %(rev)s
+Auto-Submitted: auto-generated
+"""
+
+COMBINED_INTRO_TEMPLATE = """\
+This is an automated email from the git hooks/post-receive script.
+
+%(pusher)s pushed a commit to %(refname_type)s %(short_refname)s
+in repository %(repo_shortname)s.
+
+"""
+
+COMBINED_FOOTER_TEMPLATE = FOOTER_TEMPLATE
+
+
 class CommandError(Exception):
     def __init__(self, cmd, retcode):
         self.cmd = cmd
         self.retcode = retcode
         Exception.__init__(
             self,
@@ -333,12 +371,53 @@
 
     Return as single lines, with newlines stripped off."""
 
     return read_git_output(args, keepends=True, **kw).splitlines(keepends)
 
 
+def git_rev_list_ish(cmd, spec, args=None, **kw):
+    """Common functionality for invoking a 'git rev-list'-like command.
+
+    Parameters:
+      * cmd is the Git command to run, e.g., 'rev-list' or 'log'.
+      * spec is a list of revision arguments to pass to the named
+        command.  If None, this function returns an empty list.
+      * args is a list of extra arguments passed to the named command.
+      * All other keyword arguments (if any) are passed to the
+        underlying read_git_lines() function.
+
+    Return the output of the Git command in the form of a list, one
+    entry per output line.
+    """
+    if spec is None:
+        return []
+    if args is None:
+        args = []
+    args = [cmd, '--stdin'] + args
+    spec_stdin = ''.join(s + '\n' for s in spec)
+    return read_git_lines(args, input=spec_stdin, **kw)
+
+
+def git_rev_list(spec, **kw):
+    """Run 'git rev-list' with the given list of revision arguments.
+
+    See git_rev_list_ish() for parameter and return value
+    documentation.
+    """
+    return git_rev_list_ish('rev-list', spec, **kw)
+
+
+def git_log(spec, **kw):
+    """Run 'git log' with the given list of revision arguments.
+
+    See git_rev_list_ish() for parameter and return value
+    documentation.
+    """
+    return git_rev_list_ish('log', spec, **kw)
+
+
 def header_encode(text, header_name=None):
     """Encode and line-wrap the value of an email header field."""
 
     try:
         if isinstance(text, str):
             text = text.decode(ENCODING, 'replace')
@@ -385,15 +464,15 @@
         assert words[-1] == ''
         return words[:-1]
 
     def get(self, name, default=None):
         try:
             values = self._split(read_git_output(
-                    ['config', '--get', '--null', '%s.%s' % (self.section, name)],
-                    env=self.env, keepends=True,
-                    ))
+                ['config', '--get', '--null', '%s.%s' % (self.section, name)],
+                env=self.env, keepends=True,
+                ))
             assert len(values) == 1
             return values[0]
         except CommandError:
             return default
 
     def get_bool(self, name, default=None):
@@ -446,15 +525,20 @@
     def add(self, name, value):
         read_git_output(
             ['config', '--add', '%s.%s' % (self.section, name), value],
             env=self.env,
             )
 
-    def has_key(self, name):
+    def __contains__(self, name):
         return self.get_all(name, default=None) is not None
 
+    # We don't use this method anymore internally, but keep it here in
+    # case somebody is calling it from their own code:
+    def has_key(self, name):
+        return name in self
+
     def unset_all(self, name):
         try:
             read_git_output(
                 ['config', '--unset-all', '%s.%s' % (self.section, name)],
                 env=self.env,
                 )
@@ -576,23 +660,23 @@
 
     def __init__(self, environment):
         self.environment = environment
         self._values = None
 
     def _compute_values(self):
-        """Return a dictionary {keyword : expansion} for this Change.
+        """Return a dictionary {keyword: expansion} for this Change.
 
         Derived classes overload this method to add more entries to
         the return value.  This method is used internally by
         get_values().  The return value should always be a new
         dictionary."""
 
         return self.environment.get_values()
 
     def get_values(self, **extra_values):
-        """Return a dictionary {keyword : expansion} for this Change.
+        """Return a dictionary {keyword: expansion} for this Change.
 
         Return a dictionary mapping keywords to the values that they
         should be expanded to for this Change (used when interpolating
         template strings).  If any keyword arguments are supplied, add
         those to the return value as well.  The return value is always
         a new dictionary."""
@@ -633,13 +717,13 @@
             (name, value) = line.split(':', 1)
 
             try:
                 value = value % values
             except KeyError, e:
                 if DEBUG:
-                    sys.stderr.write(
+                    self.environment.log_warning(
                         'Warning: unknown variable %r in the following line; line skipped:\n'
                         '    %s\n'
                         % (e.args[0], line,)
                         )
             else:
                 if name.lower() in ADDR_HEADERS:
@@ -708,23 +792,43 @@
             yield line
 
 
 class Revision(Change):
     """A Change consisting of a single git commit."""
 
+    CC_RE = re.compile(r'^\s*C[Cc]:\s*(?P<to>[^#]+@[^\s#]*)\s*(#.*)?$')
+
     def __init__(self, reference_change, rev, num, tot):
         Change.__init__(self, reference_change.environment)
         self.reference_change = reference_change
         self.rev = rev
         self.change_type = self.reference_change.change_type
         self.refname = self.reference_change.refname
         self.num = num
         self.tot = tot
         self.author = read_git_output(['log', '--no-walk', '--format=%aN <%aE>', self.rev.sha1])
         self.recipients = self.environment.get_revision_recipients(self)
 
+        self.cc_recipients = ''
+        if self.environment.get_scancommitforcc():
+            self.cc_recipients = ', '.join(to.strip() for to in self._cc_recipients())
+            if self.cc_recipients:
+                self.environment.log_msg(
+                    'Add %s to CC for %s\n' % (self.cc_recipients, self.rev.sha1))
+
+    def _cc_recipients(self):
+        cc_recipients = []
+        message = read_git_output(['log', '--no-walk', '--format=%b', self.rev.sha1])
+        lines = message.strip().split('\n')
+        for line in lines:
+            m = re.match(self.CC_RE, line)
+            if m:
+                cc_recipients.append(m.group('to'))
+
+        return cc_recipients
+
     def _compute_values(self):
         values = Change._compute_values(self)
 
         oneline = read_git_output(
             ['log', '--format=%s', '--no-walk', self.rev.sha1]
             )
@@ -736,25 +840,27 @@
         values['short_refname'] = self.reference_change.short_refname
         values['refname_type'] = self.reference_change.refname_type
         values['reply_to_msgid'] = self.reference_change.msgid
         values['num'] = self.num
         values['tot'] = self.tot
         values['recipients'] = self.recipients
+        if self.cc_recipients:
+            values['cc_recipients'] = self.cc_recipients
         values['oneline'] = oneline
         values['author'] = self.author
 
         reply_to = self.environment.get_reply_to_commit(self)
         if reply_to:
             values['reply_to'] = reply_to
 
         return values
 
     def generate_email_header(self, **extra_values):
         for line in self.expand_header_lines(
-            REVISION_HEADER_TEMPLATE, **extra_values
-            ):
+                REVISION_HEADER_TEMPLATE, **extra_values
+                ):
             yield line
 
     def generate_email_intro(self):
         for line in self.expand_lines(REVISION_INTRO_TEMPLATE):
             yield line
 
@@ -819,59 +925,65 @@
                 klass = NonAnnotatedTagChange
             elif area == 'heads':
                 # Branch:
                 klass = BranchChange
             elif area == 'remotes':
                 # Tracking branch:
-                sys.stderr.write(
+                environment.log_warning(
                     '*** Push-update of tracking branch %r\n'
                     '***  - incomplete email generated.\n'
-                     % (refname,)
+                    % (refname,)
                     )
                 klass = OtherReferenceChange
             else:
                 # Some other reference namespace:
-                sys.stderr.write(
+                environment.log_warning(
                     '*** Push-update of strange reference %r\n'
                     '***  - incomplete email generated.\n'
-                     % (refname,)
+                    % (refname,)
                     )
                 klass = OtherReferenceChange
         else:
             # Anything else (is there anything else?)
-            sys.stderr.write(
+            environment.log_warning(
                 '*** Unknown type of update to %r (%s)\n'
                 '***  - incomplete email generated.\n'
-                 % (refname, rev.type,)
+                % (refname, rev.type,)
                 )
             klass = OtherReferenceChange
 
         return klass(
             environment,
             refname=refname, short_refname=short_refname,
             old=old, new=new, rev=rev,
             )
 
     def __init__(self, environment, refname, short_refname, old, new, rev):
         Change.__init__(self, environment)
         self.change_type = {
-            (False, True) : 'create',
-            (True, True) : 'update',
-            (True, False) : 'delete',
+            (False, True): 'create',
+            (True, True): 'update',
+            (True, False): 'delete',
             }[bool(old), bool(new)]
         self.refname = refname
         self.short_refname = short_refname
         self.old = old
         self.new = new
         self.rev = rev
         self.msgid = make_msgid()
         self.diffopts = environment.diffopts
+        self.graphopts = environment.graphopts
         self.logopts = environment.logopts
         self.commitlogopts = environment.commitlogopts
+        self.showgraph = environment.refchange_showgraph
         self.showlog = environment.refchange_showlog
 
+        self.header_template = REFCHANGE_HEADER_TEMPLATE
+        self.intro_template = REFCHANGE_INTRO_TEMPLATE
+        self.footer_template = FOOTER_TEMPLATE
+
     def _compute_values(self):
         values = Change._compute_values(self)
 
         values['change_type'] = self.change_type
         values['refname_type'] = self.refname_type
         values['refname'] = self.refname
@@ -891,94 +1003,145 @@
         reply_to = self.environment.get_reply_to_refchange(self)
         if reply_to:
             values['reply_to'] = reply_to
 
         return values
 
+    def send_single_combined_email(self, known_added_sha1s):
+        """Determine if a combined refchange/revision email should be sent
+
+        If there is only a single new (non-merge) commit added by a
+        change, it is useful to combine the ReferenceChange and
+        Revision emails into one.  In such a case, return the single
+        revision; otherwise, return None.
+
+        This method is overridden in BranchChange."""
+
+        return None
+
+    def generate_combined_email(self, push, revision, body_filter=None, extra_header_values={}):
+        """Generate an email describing this change AND specified revision.
+
+        Iterate over the lines (including the header lines) of an
+        email describing this change.  If body_filter is not None,
+        then use it to filter the lines that are intended for the
+        email body.
+
+        The extra_header_values field is received as a dict and not as
+        **kwargs, to allow passing other keyword arguments in the
+        future (e.g. passing extra values to generate_email_intro()
+
+        This method is overridden in BranchChange."""
+
+        raise NotImplementedError
+
     def get_subject(self):
         template = {
-            'create' : REF_CREATED_SUBJECT_TEMPLATE,
-            'update' : REF_UPDATED_SUBJECT_TEMPLATE,
-            'delete' : REF_DELETED_SUBJECT_TEMPLATE,
+            'create': REF_CREATED_SUBJECT_TEMPLATE,
+            'update': REF_UPDATED_SUBJECT_TEMPLATE,
+            'delete': REF_DELETED_SUBJECT_TEMPLATE,
             }[self.change_type]
         return self.expand(template)
 
     def generate_email_header(self, **extra_values):
         if 'subject' not in extra_values:
             extra_values['subject'] = self.get_subject()
 
         for line in self.expand_header_lines(
-            REFCHANGE_HEADER_TEMPLATE, **extra_values
-            ):
+                self.header_template, **extra_values
+                ):
             yield line
 
     def generate_email_intro(self):
-        for line in self.expand_lines(REFCHANGE_INTRO_TEMPLATE):
+        for line in self.expand_lines(self.intro_template):
             yield line
 
     def generate_email_body(self, push):
         """Call the appropriate body-generation routine.
 
         Call one of generate_create_summary() /
         generate_update_summary() / generate_delete_summary()."""
 
         change_summary = {
-            'create' : self.generate_create_summary,
-            'delete' : self.generate_delete_summary,
-            'update' : self.generate_update_summary,
+            'create': self.generate_create_summary,
+            'delete': self.generate_delete_summary,
+            'update': self.generate_update_summary,
             }[self.change_type](push)
         for line in change_summary:
             yield line
 
         for line in self.generate_revision_change_summary(push):
             yield line
 
     def generate_email_footer(self):
-        return self.expand_lines(FOOTER_TEMPLATE)
+        return self.expand_lines(self.footer_template)
+
+    def generate_revision_change_graph(self, push):
+        if self.showgraph:
+            args = ['--graph'] + self.graphopts
+            for newold in ('new', 'old'):
+                has_newold = False
+                spec = push.get_commits_spec(newold, self)
+                for line in git_log(spec, args=args, keepends=True):
+                    if not has_newold:
+                        has_newold = True
+                        yield '\n'
+                        yield 'Graph of %s commits:\n\n' % (
+                            {'new': 'new', 'old': 'discarded'}[newold],)
+                    yield '  ' + line
+                if has_newold:
+                    yield '\n'
 
     def generate_revision_change_log(self, new_commits_list):
         if self.showlog:
             yield '\n'
             yield 'Detailed log of new commits:\n\n'
             for line in read_git_lines(
                     ['log', '--no-walk']
                     + self.logopts
                     + new_commits_list
                     + ['--'],
                     keepends=True,
-                ):
+                    ):
                 yield line
 
+    def generate_new_revision_summary(self, tot, new_commits_list, push):
+        for line in self.expand_lines(NEW_REVISIONS_TEMPLATE, tot=tot):
+            yield line
+        for line in self.generate_revision_change_graph(push):
+            yield line
+        for line in self.generate_revision_change_log(new_commits_list):
+            yield line
+
     def generate_revision_change_summary(self, push):
         """Generate a summary of the revisions added/removed by this change."""
 
         if self.new.commit_sha1 and not self.old.commit_sha1:
             # A new reference was created.  List the new revisions
             # brought by the new reference (i.e., those revisions that
             # were not in the repository before this reference
             # change).
             sha1s = list(push.get_new_commits(self))
             sha1s.reverse()
             tot = len(sha1s)
             new_revisions = [
-                Revision(self, GitObject(sha1), num=i+1, tot=tot)
+                Revision(self, GitObject(sha1), num=i + 1, tot=tot)
                 for (i, sha1) in enumerate(sha1s)
                 ]
 
             if new_revisions:
                 yield self.expand('This %(refname_type)s includes the following new commits:\n')
                 yield '\n'
                 for r in new_revisions:
                     (sha1, subject) = r.rev.get_summary()
                     yield r.expand(
                         BRIEF_SUMMARY_TEMPLATE, action='new', text=subject,
                         )
                 yield '\n'
-                for line in self.expand_lines(NEW_REVISIONS_TEMPLATE, tot=tot):
-                    yield line
-                for line in self.generate_revision_change_log([r.rev.sha1 for r in new_revisions]):
+                for line in self.generate_new_revision_summary(
+                        tot, [r.rev.sha1 for r in new_revisions], push):
                     yield line
             else:
                 for line in self.expand_lines(NO_NEW_REVISIONS_TEMPLATE):
                     yield line
 
         elif self.new.commit_sha1 and self.old.commit_sha1:
@@ -990,22 +1153,22 @@
             # List of the revisions that were added to the branch by
             # this update.  Note this list can include revisions that
             # have already had notification emails; we want such
             # revisions in the summary even though we will not send
             # new notification emails for them.
             adds = list(generate_summaries(
-                    '--topo-order', '--reverse', '%s..%s'
-                    % (self.old.commit_sha1, self.new.commit_sha1,)
-                    ))
+                '--topo-order', '--reverse', '%s..%s'
+                % (self.old.commit_sha1, self.new.commit_sha1,)
+                ))
 
             # List of the revisions that were removed from the branch
             # by this update.  This will be empty except for
             # non-fast-forward updates.
             discards = list(generate_summaries(
-                    '%s..%s' % (self.new.commit_sha1, self.old.commit_sha1,)
-                    ))
+                '%s..%s' % (self.new.commit_sha1, self.old.commit_sha1,)
+                ))
 
             if adds:
                 new_commits_list = push.get_new_commits(self)
             else:
                 new_commits_list = []
             new_commits = CommitSet(new_commits_list)
@@ -1068,57 +1231,60 @@
                         rev_short=sha1, text=subject,
                         )
 
             yield '\n'
 
             if new_commits:
-                for line in self.expand_lines(NEW_REVISIONS_TEMPLATE, tot=len(new_commits)):
-                    yield line
-                for line in self.generate_revision_change_log(new_commits_list):
+                for line in self.generate_new_revision_summary(
+                        len(new_commits), new_commits_list, push):
                     yield line
             else:
                 for line in self.expand_lines(NO_NEW_REVISIONS_TEMPLATE):
                     yield line
+                for line in self.generate_revision_change_graph(push):
+                    yield line
 
             # The diffstat is shown from the old revision to the new
             # revision.  This is to show the truth of what happened in
             # this change.  There's no point showing the stat from the
             # base to the new revision because the base is effectively a
             # random revision at this point - the user will be interested
             # in what this revision changed - including the undoing of
             # previous revisions in the case of non-fast-forward updates.
             yield '\n'
             yield 'Summary of changes:\n'
             for line in read_git_lines(
-                ['diff-tree']
-                + self.diffopts
-                + ['%s..%s' % (self.old.commit_sha1, self.new.commit_sha1,)],
-                keepends=True,
-                ):
+                    ['diff-tree']
+                    + self.diffopts
+                    + ['%s..%s' % (self.old.commit_sha1, self.new.commit_sha1,)],
+                    keepends=True,
+                    ):
                 yield line
 
         elif self.old.commit_sha1 and not self.new.commit_sha1:
             # A reference was deleted.  List the revisions that were
             # removed from the repository by this reference change.
 
             sha1s = list(push.get_discarded_commits(self))
             tot = len(sha1s)
             discarded_revisions = [
-                Revision(self, GitObject(sha1), num=i+1, tot=tot)
+                Revision(self, GitObject(sha1), num=i + 1, tot=tot)
                 for (i, sha1) in enumerate(sha1s)
                 ]
 
             if discarded_revisions:
                 for line in self.expand_lines(DISCARDED_REVISIONS_TEMPLATE):
                     yield line
                 yield '\n'
                 for r in discarded_revisions:
                     (sha1, subject) = r.rev.get_summary()
                     yield r.expand(
                         BRIEF_SUMMARY_TEMPLATE, action='discards', text=subject,
                         )
+                for line in self.generate_revision_change_graph(push):
+                    yield line
             else:
                 for line in self.expand_lines(NO_DISCARDED_REVISIONS_TEMPLATE):
                     yield line
 
         elif not self.old.commit_sha1 and not self.new.commit_sha1:
             for line in self.expand_lines(NON_COMMIT_UPDATE_TEMPLATE):
@@ -1158,12 +1324,156 @@
         ReferenceChange.__init__(
             self, environment,
             refname=refname, short_refname=short_refname,
             old=old, new=new, rev=rev,
             )
         self.recipients = environment.get_refchange_recipients(self)
+        self._single_revision = None
+
+    def send_single_combined_email(self, known_added_sha1s):
+        if not self.environment.combine_when_single_commit:
+            return None
+
+        # In the sadly-all-too-frequent usecase of people pushing only
+        # one of their commits at a time to a repository, users feel
+        # the reference change summary emails are noise rather than
+        # important signal.  This is because, in this particular
+        # usecase, there is a reference change summary email for each
+        # new commit, and all these summaries do is point out that
+        # there is one new commit (which can readily be inferred by
+        # the existence of the individual revision email that is also
+        # sent).  In such cases, our users prefer there to be a combined
+        # reference change summary/new revision email.
+        #
+        # So, if the change is an update and it doesn't discard any
+        # commits, and it adds exactly one non-merge commit (gerrit
+        # forces a workflow where every commit is individually merged
+        # and the git-multimail hook fired off for just this one
+        # change), then we send a combined refchange/revision email.
+        try:
+            # If this change is a reference update that doesn't discard
+            # any commits...
+            if self.change_type != 'update':
+                return None
+
+            if read_git_lines(
+                    ['merge-base', self.old.sha1, self.new.sha1]
+                    ) != [self.old.sha1]:
+                return None
+
+            # Check if this update introduced exactly one non-merge
+            # commit:
+
+            def split_line(line):
+                """Split line into (sha1, [parent,...])."""
+
+                words = line.split()
+                return (words[0], words[1:])
+
+            # Get the new commits introduced by the push as a list of
+            # (sha1, [parent,...])
+            new_commits = [
+                split_line(line)
+                for line in read_git_lines(
+                    [
+                        'log', '-3', '--format=%H %P',
+                        '%s..%s' % (self.old.sha1, self.new.sha1),
+                        ]
+                    )
+                ]
+
+            if not new_commits:
+                return None
+
+            # If the newest commit is a merge, save it for a later check
+            # but otherwise ignore it
+            merge = None
+            tot = len(new_commits)
+            if len(new_commits[0][1]) > 1:
+                merge = new_commits[0][0]
+                del new_commits[0]
+
+            # Our primary check: we can't combine if more than one commit
+            # is introduced.  We also currently only combine if the new
+            # commit is a non-merge commit, though it may make sense to
+            # combine if it is a merge as well.
+            if not (
+                    len(new_commits) == 1
+                    and len(new_commits[0][1]) == 1
+                    and new_commits[0][0] in known_added_sha1s
+                    ):
+                return None
+
+            # We do not want to combine revision and refchange emails if
+            # those go to separate locations.
+            rev = Revision(self, GitObject(new_commits[0][0]), 1, tot)
+            if rev.recipients != self.recipients:
+                return None
+
+            # We ignored the newest commit if it was just a merge of the one
+            # commit being introduced.  But we don't want to ignore that
+            # merge commit it it involved conflict resolutions.  Check that.
+            if merge and merge != read_git_output(['diff-tree', '--cc', merge]):
+                return None
+
+            # We can combine the refchange and one new revision emails
+            # into one.  Return the Revision that a combined email should
+            # be sent about.
+            return rev
+        except CommandError:
+            # Cannot determine number of commits in old..new or new..old;
+            # don't combine reference/revision emails:
+            return None
+
+    def generate_combined_email(self, push, revision, body_filter=None, extra_header_values={}):
+        values = revision.get_values()
+        if extra_header_values:
+            values.update(extra_header_values)
+        if 'subject' not in extra_header_values:
+            values['subject'] = self.expand(COMBINED_REFCHANGE_REVISION_SUBJECT_TEMPLATE, **values)
+
+        self._single_revision = revision
+        self.header_template = COMBINED_HEADER_TEMPLATE
+        self.intro_template = COMBINED_INTRO_TEMPLATE
+        self.footer_template = COMBINED_FOOTER_TEMPLATE
+        for line in self.generate_email(push, body_filter, values):
+            yield line
+
+    def generate_email_body(self, push):
+        '''Call the appropriate body generation routine.
+
+        If this is a combined refchange/revision email, the special logic
+        for handling this combined email comes from this function.  For
+        other cases, we just use the normal handling.'''
+
+        # If self._single_revision isn't set; don't override
+        if not self._single_revision:
+            for line in super(BranchChange, self).generate_email_body(push):
+                yield line
+            return
+
+        # This is a combined refchange/revision email; we first provide
+        # some info from the refchange portion, and then call the revision
+        # generate_email_body function to handle the revision portion.
+        adds = list(generate_summaries(
+            '--topo-order', '--reverse', '%s..%s'
+            % (self.old.commit_sha1, self.new.commit_sha1,)
+            ))
+
+        yield self.expand("The following commit(s) were added to %(refname)s by this push:\n")
+        for (sha1, subject) in adds:
+            yield self.expand(
+                BRIEF_SUMMARY_TEMPLATE, action='new',
+                rev_short=sha1, text=subject,
+                )
+
+        yield self._single_revision.rev.short + " is described below\n"
+        yield '\n'
+
+        for line in self._single_revision.generate_email_body(push):
+            yield line
 
 
 class AnnotatedTagChange(ReferenceChange):
     refname_type = 'annotated tag'
 
     def __init__(self, environment, refname, short_refname, old, new, rev):
@@ -1387,57 +1697,105 @@
                 + '*** Try setting multimailhook.mailer to "smtp"\n'
                 '*** to send emails without using the sendmail command.\n'
                 )
             sys.exit(1)
         try:
             p.stdin.writelines(lines)
-        except:
+        except Exception, e:
             sys.stderr.write(
                 '*** Error while generating commit email\n'
                 '***  - mail sending aborted.\n'
                 )
-            p.terminate()
-            raise
+            try:
+                # subprocess.terminate() is not available in Python 2.4
+                p.terminate()
+            except AttributeError:
+                pass
+            raise e
         else:
             p.stdin.close()
             retcode = p.wait()
             if retcode:
                 raise CommandError(self.command, retcode)
 
 
 class SMTPMailer(Mailer):
     """Send emails using Python's smtplib."""
 
-    def __init__(self, envelopesender, smtpserver):
+    def __init__(self, envelopesender, smtpserver,
+                 smtpservertimeout=10.0, smtpserverdebuglevel=0,
+                 smtpencryption='none',
+                 smtpuser='', smtppass='',
+                 ):
         if not envelopesender:
             sys.stderr.write(
                 'fatal: git_multimail: cannot use SMTPMailer without a sender address.\n'
                 'please set either multimailhook.envelopeSender or user.email\n'
                 )
             sys.exit(1)
+        if smtpencryption == 'ssl' and not (smtpuser and smtppass):
+            raise ConfigurationException(
+                'Cannot use SMTPMailer with security option ssl '
+                'without options username and password.'
+                )
         self.envelopesender = envelopesender
         self.smtpserver = smtpserver
+        self.smtpservertimeout = smtpservertimeout
+        self.smtpserverdebuglevel = smtpserverdebuglevel
+        self.security = smtpencryption
+        self.username = smtpuser
+        self.password = smtppass
         try:
-            self.smtp = smtplib.SMTP(self.smtpserver)
+            def call(klass, server, timeout):
+                try:
+                    return klass(server, timeout=timeout)
+                except TypeError:
+                    # Old Python versions do not have timeout= argument.
+                    return klass(server)
+            if self.security == 'none':
+                self.smtp = call(smtplib.SMTP, self.smtpserver, timeout=self.smtpservertimeout)
+            elif self.security == 'ssl':
+                self.smtp = call(smtplib.SMTP_SSL, self.smtpserver, timeout=self.smtpservertimeout)
+            elif self.security == 'tls':
+                if ':' not in self.smtpserver:
+                    self.smtpserver += ':587'  # default port for TLS
+                self.smtp = call(smtplib.SMTP, self.smtpserver, timeout=self.smtpservertimeout)
+                self.smtp.ehlo()
+                self.smtp.starttls()
+                self.smtp.ehlo()
+            else:
+                sys.stdout.write('*** Error: Control reached an invalid option. ***')
+                sys.exit(1)
+            if self.smtpserverdebuglevel > 0:
+                sys.stdout.write(
+                    "*** Setting debug on for SMTP server connection (%s) ***\n"
+                    % self.smtpserverdebuglevel)
+                self.smtp.set_debuglevel(self.smtpserverdebuglevel)
         except Exception, e:
-            sys.stderr.write('*** Error establishing SMTP connection to %s***\n' % self.smtpserver)
+            sys.stderr.write(
+                '*** Error establishing SMTP connection to %s ***\n'
+                % self.smtpserver)
             sys.stderr.write('*** %s\n' % str(e))
             sys.exit(1)
 
     def __del__(self):
-        self.smtp.quit()
+        if hasattr(self, 'smtp'):
+            self.smtp.quit()
 
     def send(self, lines, to_addrs):
         try:
+            if self.username or self.password:
+                sys.stderr.write("*** Authenticating as %s ***\n" % self.username)
+                self.smtp.login(self.username, self.password)
             msg = ''.join(lines)
             # turn comma-separated list into Python list if needed.
             if isinstance(to_addrs, basestring):
                 to_addrs = [email for (name, email) in getaddresses([to_addrs])]
             self.smtp.sendmail(self.envelopesender, to_addrs, msg)
         except Exception, e:
-            sys.stderr.write('*** Error sending email***\n')
+            sys.stderr.write('*** Error sending email ***\n')
             sys.stderr.write('*** %s\n' % str(e))
             self.smtp.quit()
             sys.exit(1)
 
 
 class OutputMailer(Mailer):
@@ -1546,46 +1904,72 @@
     They should also define the following attributes:
 
         announce_show_shortlog (bool)
 
             True iff announce emails should include a shortlog.
 
+        refchange_showgraph (bool)
+
+            True iff refchanges emails should include a detailed graph.
+
         refchange_showlog (bool)
 
             True iff refchanges emails should include a detailed log.
 
         diffopts (list of strings)
 
             The options that should be passed to 'git diff' for the
             summary email.  The value should be a list of strings
             representing words to be passed to the command.
 
+        graphopts (list of strings)
+
+            Analogous to diffopts, but contains options passed to
+            'git log --graph' when generating the detailed graph for
+            a set of commits (see refchange_showgraph)
+
         logopts (list of strings)
 
             Analogous to diffopts, but contains options passed to
             'git log' when generating the detailed log for a set of
             commits (see refchange_showlog)
 
         commitlogopts (list of strings)
 
             The options that should be passed to 'git log' for each
             commit mail.  The value should be a list of strings
             representing words to be passed to the command.
 
+        quiet (bool)
+            On success do not write to stderr
+
+        stdout (bool)
+            Write email to stdout rather than emailing. Useful for debugging
+
+        combine_when_single_commit (bool)
+
+            True if a combined email should be produced when a single
+            new commit is pushed to a branch, False otherwise.
+
     """
 
     REPO_NAME_RE = re.compile(r'^(?P<name>.+?)(?:\.git)$')
 
     def __init__(self, osenv=None):
         self.osenv = osenv or os.environ
         self.announce_show_shortlog = False
         self.maxcommitemails = 500
         self.diffopts = ['--stat', '--summary', '--find-copies-harder']
+        self.graphopts = ['--oneline', '--decorate']
         self.logopts = []
+        self.refchange_showgraph = False
         self.refchange_showlog = False
         self.commitlogopts = ['-C', '--stat', '-p', '--cc']
+        self.quiet = False
+        self.stdout = False
+        self.combine_when_single_commit = True
 
         self.COMPUTED_KEYS = [
             'administrator',
             'charset',
             'emailprefix',
             'fromaddr',
@@ -1611,12 +1995,20 @@
     def get_pusher(self):
         raise NotImplementedError()
 
     def get_pusher_email(self):
         return None
 
+    def get_fromaddr(self):
+        config = Config('user')
+        fromname = config.get('name', default='')
+        fromemail = config.get('email', default='')
+        if fromemail:
+            return formataddr([fromname, fromemail])
+        return self.get_sender()
+
     def get_administrator(self):
         return 'the administrator of this repository'
 
     def get_emailprefix(self):
         return ''
 
@@ -1628,13 +2020,13 @@
         return os.path.abspath(path)
 
     def get_charset(self):
         return CHARSET
 
     def get_values(self):
-        """Return a dictionary {keyword : expansion} for this Environment.
+        """Return a dictionary {keyword: expansion} for this Environment.
 
         This method is called by Change._compute_values().  The keys
         in the returned dictionary are available to be used in any of
         the templates.  The dictionary is created by calling
         self.get_NAME() for each of the attributes named in
         COMPUTED_KEYS and recording those that do not return None.
@@ -1696,12 +2088,30 @@
         line length, character set, etc.), returning another iterable.
         See FilterLinesEnvironmentMixin and MaxlinesEnvironmentMixin
         for classes implementing this functionality."""
 
         return lines
 
+    def log_msg(self, msg):
+        """Write the string msg on a log file or on stderr.
+
+        Sends the text to stderr by default, override to change the behavior."""
+        sys.stderr.write(msg)
+
+    def log_warning(self, msg):
+        """Write the string msg on a log file or on stderr.
+
+        Sends the text to stderr by default, override to change the behavior."""
+        sys.stderr.write(msg)
+
+    def log_error(self, msg):
+        """Write the string msg on a log file or on stderr.
+
+        Sends the text to stderr by default, override to change the behavior."""
+        sys.stderr.write(msg)
+
 
 class ConfigEnvironmentMixin(Environment):
     """A mixin that sets self.config to its constructor's config argument.
 
     This class's constructor consumes the "config" argument.
 
@@ -1720,53 +2130,64 @@
 
     def __init__(self, config, **kw):
         super(ConfigOptionsEnvironmentMixin, self).__init__(
             config=config, **kw
             )
 
-        self.announce_show_shortlog = config.get_bool(
-            'announceshortlog', default=self.announce_show_shortlog
-            )
-
-        self.refchange_showlog = config.get_bool(
-            'refchangeshowlog', default=self.refchange_showlog
-            )
+        for var, cfg in (
+                ('announce_show_shortlog', 'announceshortlog'),
+                ('refchange_showgraph', 'refchangeShowGraph'),
+                ('refchange_showlog', 'refchangeshowlog'),
+                ('quiet', 'quiet'),
+                ('stdout', 'stdout'),
+                ):
+            val = config.get_bool(cfg)
+            if val is not None:
+                setattr(self, var, val)
 
         maxcommitemails = config.get('maxcommitemails')
         if maxcommitemails is not None:
             try:
                 self.maxcommitemails = int(maxcommitemails)
             except ValueError:
-                sys.stderr.write(
+                self.log_warning(
                     '*** Malformed value for multimailhook.maxCommitEmails: %s\n' % maxcommitemails
                     + '*** Expected a number.  Ignoring.\n'
                     )
 
         diffopts = config.get('diffopts')
         if diffopts is not None:
             self.diffopts = shlex.split(diffopts)
 
+        graphopts = config.get('graphOpts')
+        if graphopts is not None:
+            self.graphopts = shlex.split(graphopts)
+
         logopts = config.get('logopts')
         if logopts is not None:
             self.logopts = shlex.split(logopts)
 
         commitlogopts = config.get('commitlogopts')
         if commitlogopts is not None:
             self.commitlogopts = shlex.split(commitlogopts)
 
         reply_to = config.get('replyTo')
         self.__reply_to_refchange = config.get('replyToRefchange', default=reply_to)
         if (
-            self.__reply_to_refchange is not None
-            and self.__reply_to_refchange.lower() == 'author'
-            ):
+                self.__reply_to_refchange is not None
+                and self.__reply_to_refchange.lower() == 'author'
+                ):
             raise ConfigurationException(
                 '"author" is not an allowed setting for replyToRefchange'
                 )
         self.__reply_to_commit = config.get('replyToCommit', default=reply_to)
 
+        combine = config.get_bool('combineWhenSingleCommit')
+        if combine is not None:
+            self.combine_when_single_commit = combine
+
     def get_administrator(self):
         return (
             self.config.get('administrator')
             or self.get_sender()
             or super(ConfigOptionsEnvironmentMixin, self).get_administrator()
             )
@@ -1776,32 +2197,29 @@
             self.config.get('reponame')
             or super(ConfigOptionsEnvironmentMixin, self).get_repo_shortname()
             )
 
     def get_emailprefix(self):
         emailprefix = self.config.get('emailprefix')
-        if emailprefix and emailprefix.strip():
-            return emailprefix.strip() + ' '
+        if emailprefix is not None:
+            emailprefix = emailprefix.strip()
+            if emailprefix:
+                return emailprefix + ' '
+            else:
+                return ''
         else:
             return '[%s] ' % (self.get_repo_shortname(),)
 
     def get_sender(self):
         return self.config.get('envelopesender')
 
     def get_fromaddr(self):
         fromaddr = self.config.get('from')
         if fromaddr:
             return fromaddr
-        else:
-            config = Config('user')
-            fromname = config.get('name', default='')
-            fromemail = config.get('email', default='')
-            if fromemail:
-                return formataddr([fromname, fromemail])
-            else:
-                return self.get_sender()
+        return super(ConfigOptionsEnvironmentMixin, self).get_fromaddr()
 
     def get_reply_to_refchange(self, refchange):
         if self.__reply_to_refchange is None:
             return super(ConfigOptionsEnvironmentMixin, self).get_reply_to_refchange(refchange)
         elif self.__reply_to_refchange.lower() == 'pusher':
             return self.get_pusher_email()
@@ -1811,20 +2229,23 @@
             return self.__reply_to_refchange
 
     def get_reply_to_commit(self, revision):
         if self.__reply_to_commit is None:
             return super(ConfigOptionsEnvironmentMixin, self).get_reply_to_commit(revision)
         elif self.__reply_to_commit.lower() == 'author':
-            return revision.get_author()
+            return revision.author
         elif self.__reply_to_commit.lower() == 'pusher':
             return self.get_pusher_email()
         elif self.__reply_to_commit.lower() == 'none':
             return None
         else:
             return self.__reply_to_commit
 
+    def get_scancommitforcc(self):
+        return self.config.get('scancommitforcc')
+
 
 class FilterLinesEnvironmentMixin(Environment):
     """Handle encoding and maximum line length of body lines.
 
         emailmaxlinelength (int or None)
 
@@ -1859,15 +2280,15 @@
             lines = limit_linelength(lines, self.__emailmaxlinelength)
 
         return lines
 
 
 class ConfigFilterLinesEnvironmentMixin(
-    ConfigEnvironmentMixin,
-    FilterLinesEnvironmentMixin,
-    ):
+        ConfigEnvironmentMixin,
+        FilterLinesEnvironmentMixin,
+        ):
     """Handle encoding and maximum line length based on config."""
 
     def __init__(self, config, **kw):
         strict_utf8 = config.get_bool('emailstrictutf8', default=None)
         if strict_utf8 is not None:
             kw['strict_utf8'] = strict_utf8
@@ -1893,15 +2314,15 @@
         if self.__emailmaxlines:
             lines = limit_lines(lines, self.__emailmaxlines)
         return lines
 
 
 class ConfigMaxlinesEnvironmentMixin(
-    ConfigEnvironmentMixin,
-    MaxlinesEnvironmentMixin,
-    ):
+        ConfigEnvironmentMixin,
+        MaxlinesEnvironmentMixin,
+        ):
     """Limit the email body to the number of lines specified in config."""
 
     def __init__(self, config, **kw):
         emailmaxlines = int(config.get('emailmaxlines', default='0'))
         super(ConfigMaxlinesEnvironmentMixin, self).__init__(
             config=config,
@@ -1924,15 +2345,15 @@
         Return None if it is unavailable or unwanted."""
 
         return self.__fqdn
 
 
 class ConfigFQDNEnvironmentMixin(
-    ConfigEnvironmentMixin,
-    FQDNEnvironmentMixin,
-    ):
+        ConfigEnvironmentMixin,
+        FQDNEnvironmentMixin,
+        ):
     """Read the FQDN from the config."""
 
     def __init__(self, config, **kw):
         fqdn = config.get('fqdn')
         super(ConfigFQDNEnvironmentMixin, self).__init__(
             config=config,
@@ -1967,28 +2388,29 @@
 
 
 class StaticRecipientsEnvironmentMixin(Environment):
     """Set recipients statically based on constructor parameters."""
 
     def __init__(
-        self,
-        refchange_recipients, announce_recipients, revision_recipients,
-        **kw
-        ):
+            self,
+            refchange_recipients, announce_recipients, revision_recipients, scancommitforcc,
+            **kw
+            ):
         super(StaticRecipientsEnvironmentMixin, self).__init__(**kw)
 
         # The recipients for various types of notification emails, as
         # RFC 2822 email addresses separated by commas (or the empty
         # string if no recipients are configured).  Although there is
         # a mechanism to choose the recipient lists based on on the
         # actual *contents* of the change being reported, we only
         # choose based on the *type* of the change.  Therefore we can
         # compute them once and for all:
         if not (refchange_recipients
                 or announce_recipients
-                or revision_recipients):
+                or revision_recipients
+                or scancommitforcc):
             raise ConfigurationException('No email recipients configured!')
         self.__refchange_recipients = refchange_recipients
         self.__announce_recipients = announce_recipients
         self.__revision_recipients = revision_recipients
 
     def get_refchange_recipients(self, refchange):
@@ -1999,15 +2421,15 @@
 
     def get_revision_recipients(self, revision):
         return self.__revision_recipients
 
 
 class ConfigRecipientsEnvironmentMixin(
-    ConfigEnvironmentMixin,
-    StaticRecipientsEnvironmentMixin
-    ):
+        ConfigEnvironmentMixin,
+        StaticRecipientsEnvironmentMixin
+        ):
     """Determine recipients statically based on config."""
 
     def __init__(self, config, **kw):
         super(ConfigRecipientsEnvironmentMixin, self).__init__(
             config=config,
             refchange_recipients=self._get_recipients(
@@ -2016,12 +2438,13 @@
             announce_recipients=self._get_recipients(
                 config, 'announcelist', 'refchangelist', 'mailinglist',
                 ),
             revision_recipients=self._get_recipients(
                 config, 'commitlist', 'mailinglist',
                 ),
+            scancommitforcc=config.get('scancommitforcc'),
             **kw
             )
 
     def _get_recipients(self, config, *names):
         """Return the recipients for a particular type of message.
 
@@ -2064,26 +2487,26 @@
 
         return 'UNNAMED PROJECT'
 
 
 class GenericEnvironmentMixin(Environment):
     def get_pusher(self):
-        return self.osenv.get('USER', 'unknown user')
+        return self.osenv.get('USER', self.osenv.get('USERNAME', 'unknown user'))
 
 
 class GenericEnvironment(
-    ProjectdescEnvironmentMixin,
-    ConfigMaxlinesEnvironmentMixin,
-    ComputeFQDNEnvironmentMixin,
-    ConfigFilterLinesEnvironmentMixin,
-    ConfigRecipientsEnvironmentMixin,
-    PusherDomainEnvironmentMixin,
-    ConfigOptionsEnvironmentMixin,
-    GenericEnvironmentMixin,
-    Environment,
-    ):
+        ProjectdescEnvironmentMixin,
+        ConfigMaxlinesEnvironmentMixin,
+        ComputeFQDNEnvironmentMixin,
+        ConfigFilterLinesEnvironmentMixin,
+        ConfigRecipientsEnvironmentMixin,
+        PusherDomainEnvironmentMixin,
+        ConfigOptionsEnvironmentMixin,
+        GenericEnvironmentMixin,
+        Environment,
+        ):
     pass
 
 
 class GitoliteEnvironmentMixin(Environment):
     def get_repo_shortname(self):
         # The gitolite environment variable $GL_REPO is a pretty good
@@ -2094,12 +2517,51 @@
             or super(GitoliteEnvironmentMixin, self).get_repo_shortname()
             )
 
     def get_pusher(self):
         return self.osenv.get('GL_USER', 'unknown user')
 
+    def get_fromaddr(self):
+        GL_USER = self.osenv.get('GL_USER')
+        if GL_USER is not None:
+            # Find the path to gitolite.conf.  Note that gitolite v3
+            # did away with the GL_ADMINDIR and GL_CONF environment
+            # variables (they are now hard-coded).
+            GL_ADMINDIR = self.osenv.get(
+                'GL_ADMINDIR',
+                os.path.expanduser(os.path.join('~', '.gitolite')))
+            GL_CONF = self.osenv.get(
+                'GL_CONF',
+                os.path.join(GL_ADMINDIR, 'conf', 'gitolite.conf'))
+            if os.path.isfile(GL_CONF):
+                f = open(GL_CONF, 'rU')
+                try:
+                    in_user_emails_section = False
+                    re_template = r'^\s*#\s*{}\s*$'
+                    re_begin, re_user, re_end = (
+                        re.compile(re_template.format(x))
+                        for x in (
+                            r'BEGIN\s+USER\s+EMAILS',
+                            re.escape(GL_USER) + r'\s+(.*)',
+                            r'END\s+USER\s+EMAILS',
+                            ))
+                    for l in f:
+                        l = l.rstrip('\n')
+                        if not in_user_emails_section:
+                            if re_begin.match(l):
+                                in_user_emails_section = True
+                            continue
+                        if re_end.match(l):
+                            break
+                        m = re_user.match(l)
+                        if m:
+                            return m.group(1)
+                finally:
+                    f.close()
+        return super(GitoliteEnvironmentMixin, self).get_fromaddr()
+
 
 class IncrementalDateTime(object):
     """Simple wrapper to give incremental date/times.
 
     Each call will result in a date/time a second later than the
     previous call.  This can be used to falsify email headers, to
@@ -2113,22 +2575,22 @@
         formatted = formatdate(self.time, True)
         self.time += 1
         return formatted
 
 
 class GitoliteEnvironment(
-    ProjectdescEnvironmentMixin,
-    ConfigMaxlinesEnvironmentMixin,
-    ComputeFQDNEnvironmentMixin,
-    ConfigFilterLinesEnvironmentMixin,
-    ConfigRecipientsEnvironmentMixin,
-    PusherDomainEnvironmentMixin,
-    ConfigOptionsEnvironmentMixin,
-    GitoliteEnvironmentMixin,
-    Environment,
-    ):
+        ProjectdescEnvironmentMixin,
+        ConfigMaxlinesEnvironmentMixin,
+        ComputeFQDNEnvironmentMixin,
+        ConfigFilterLinesEnvironmentMixin,
+        ConfigRecipientsEnvironmentMixin,
+        PusherDomainEnvironmentMixin,
+        ConfigOptionsEnvironmentMixin,
+        GitoliteEnvironmentMixin,
+        Environment,
+        ):
     pass
 
 
 class Push(object):
     """Represent an entire push (i.e., a group of ReferenceChanges).
 
@@ -2146,15 +2608,15 @@
     commits were discarded by a push.  A big part of the job of this
     class is to figure out these things, and to make sure that new
     commits are only detailed once even if they were added to multiple
     references.
 
     The first step is to determine the "other" references--those
-    unaffected by the current push.  They are computed by
-    Push._compute_other_ref_sha1s() by listing all references then
-    removing any affected by this push.
+    unaffected by the current push.  They are computed by listing all
+    references then removing any affected by this push.  The results
+    are stored in Push._other_ref_sha1s.
 
     The commits contained in the repository before this push were
 
         git rev-list other1 other2 other3 ... change1.old change2.old ...
 
     Where "changeN.old" is the old value of one of the references
@@ -2184,13 +2646,13 @@
     change at any time.  It is impossible to eliminate all race
     conditions, but we reduce the window of time during which problems
     can occur by translating reference names to SHA1s as soon as
     possible and working with SHA1s thereafter (because SHA1s are
     immutable)."""
 
-    # A map {(changeclass, changetype) : integer} specifying the order
+    # A map {(changeclass, changetype): integer} specifying the order
     # that reference changes will be processed if multiple reference
     # changes are included in a single push.  The order is significant
     # mostly because new commit notifications are threaded together
     # with the first reference change that includes the commit.  The
     # following order thus causes commits to be grouped with branch
     # changes (as opposed to tag changes) if possible.
@@ -2208,109 +2670,161 @@
             (OtherReferenceChange, 'update'),
             (OtherReferenceChange, 'create'),
             (OtherReferenceChange, 'delete'),
             ])
         )
 
-    def __init__(self, changes):
+    def __init__(self, changes, ignore_other_refs=False):
         self.changes = sorted(changes, key=self._sort_key)
+        self.__other_ref_sha1s = None
+        self.__cached_commits_spec = {}
 
-        # The SHA-1s of commits referred to by references unaffected
-        # by this push:
-        other_ref_sha1s = self._compute_other_ref_sha1s()
-
-        self._old_rev_exclusion_spec = self._compute_rev_exclusion_spec(
-            other_ref_sha1s.union(
-                change.old.sha1
-                for change in self.changes
-                if change.old.type in ['commit', 'tag']
-                )
-            )
-        self._new_rev_exclusion_spec = self._compute_rev_exclusion_spec(
-            other_ref_sha1s.union(
-                change.new.sha1
-                for change in self.changes
-                if change.new.type in ['commit', 'tag']
-                )
-            )
+        if ignore_other_refs:
+            self.__other_ref_sha1s = set()
 
     @classmethod
     def _sort_key(klass, change):
         return (klass.SORT_ORDER[change.__class__, change.change_type], change.refname,)
 
-    def _compute_other_ref_sha1s(self):
-        """Return the GitObjects referred to by references unaffected by this push."""
+    @property
+    def _other_ref_sha1s(self):
+        """The GitObjects referred to by references unaffected by this push.
+        """
+        if self.__other_ref_sha1s is None:
+            # The refnames being changed by this push:
+            updated_refs = set(
+                change.refname
+                for change in self.changes
+                )
+
+            # The SHA-1s of commits referred to by all references in this
+            # repository *except* updated_refs:
+            sha1s = set()
+            fmt = (
+                '%(objectname) %(objecttype) %(refname)\n'
+                '%(*objectname) %(*objecttype) %(refname)'
+                )
+            for line in read_git_lines(
+                    ['for-each-ref', '--format=%s' % (fmt,)]):
+                (sha1, type, name) = line.split(' ', 2)
+                if sha1 and type == 'commit' and name not in updated_refs:
+                    sha1s.add(sha1)
+
+            self.__other_ref_sha1s = sha1s
+
+        return self.__other_ref_sha1s
+
+    def _get_commits_spec_incl(self, new_or_old, reference_change=None):
+        """Get new or old SHA-1 from one or each of the changed refs.
+
+        Return a list of SHA-1 commit identifier strings suitable as
+        arguments to 'git rev-list' (or 'git log' or ...).  The
+        returned identifiers are either the old or new values from one
+        or all of the changed references, depending on the values of
+        new_or_old and reference_change.
+
+        new_or_old is either the string 'new' or the string 'old'.  If
+        'new', the returned SHA-1 identifiers are the new values from
+        each changed reference.  If 'old', the SHA-1 identifiers are
+        the old values from each changed reference.
+
+        If reference_change is specified and not None, only the new or
+        old reference from the specified reference is included in the
+        return value.
+
+        This function returns None if there are no matching revisions
+        (e.g., because a branch was deleted and new_or_old is 'new').
+        """
 
-        # The refnames being changed by this push:
-        updated_refs = set(
-            change.refname
+        if not reference_change:
+            incl_spec = sorted(
+                getattr(change, new_or_old).sha1
+                for change in self.changes
+                if getattr(change, new_or_old)
+                )
+            if not incl_spec:
+                incl_spec = None
+        elif not getattr(reference_change, new_or_old).commit_sha1:
+            incl_spec = None
+        else:
+            incl_spec = [getattr(reference_change, new_or_old).commit_sha1]
+        return incl_spec
+
+    def _get_commits_spec_excl(self, new_or_old):
+        """Get exclusion revisions for determining new or discarded commits.
+
+        Return a list of strings suitable as arguments to 'git
+        rev-list' (or 'git log' or ...) that will exclude all
+        commits that, depending on the value of new_or_old, were
+        either previously in the repository (useful for determining
+        which commits are new to the repository) or currently in the
+        repository (useful for determining which commits were
+        discarded from the repository).
+
+        new_or_old is either the string 'new' or the string 'old'.  If
+        'new', the commits to be excluded are those that were in the
+        repository before the push.  If 'old', the commits to be
+        excluded are those that are currently in the repository.  """
+
+        old_or_new = {'old': 'new', 'new': 'old'}[new_or_old]
+        excl_revs = self._other_ref_sha1s.union(
+            getattr(change, old_or_new).sha1
             for change in self.changes
+            if getattr(change, old_or_new).type in ['commit', 'tag']
             )
+        return ['^' + sha1 for sha1 in sorted(excl_revs)]
 
-        # The SHA-1s of commits referred to by all references in this
-        # repository *except* updated_refs:
-        sha1s = set()
-        fmt = (
-            '%(objectname) %(objecttype) %(refname)\n'
-            '%(*objectname) %(*objecttype) %(refname)'
-            )
-        for line in read_git_lines(['for-each-ref', '--format=%s' % (fmt,)]):
-            (sha1, type, name) = line.split(' ', 2)
-            if sha1 and type == 'commit' and name not in updated_refs:
-                sha1s.add(sha1)
-
-        return sha1s
-
-    def _compute_rev_exclusion_spec(self, sha1s):
-        """Return an exclusion specification for 'git rev-list'.
-
-        git_objects is an iterable over GitObject instances.  Return a
-        string that can be passed to the standard input of 'git
-        rev-list --stdin' to exclude all of the commits referred to by
-        git_objects."""
+    def get_commits_spec(self, new_or_old, reference_change=None):
+        """Get rev-list arguments for added or discarded commits.
 
-        return ''.join(
-            ['^%s\n' % (sha1,) for sha1 in sorted(sha1s)]
-            )
+        Return a list of strings suitable as arguments to 'git
+        rev-list' (or 'git log' or ...) that select those commits
+        that, depending on the value of new_or_old, are either new to
+        the repository or were discarded from the repository.
+
+        new_or_old is either the string 'new' or the string 'old'.  If
+        'new', the returned list is used to select commits that are
+        new to the repository.  If 'old', the returned value is used
+        to select the commits that have been discarded from the
+        repository.
+
+        If reference_change is specified and not None, the new or
+        discarded commits are limited to those that are reachable from
+        the new or old value of the specified reference.
+
+        This function returns None if there are no added (or discarded)
+        revisions.
+        """
+        key = (new_or_old, reference_change)
+        if key not in self.__cached_commits_spec:
+            ret = self._get_commits_spec_incl(new_or_old, reference_change)
+            if ret is not None:
+                ret.extend(self._get_commits_spec_excl(new_or_old))
+            self.__cached_commits_spec[key] = ret
+        return self.__cached_commits_spec[key]
 
     def get_new_commits(self, reference_change=None):
         """Return a list of commits added by this push.
 
         Return a list of the object names of commits that were added
         by the part of this push represented by reference_change.  If
         reference_change is None, then return a list of *all* commits
         added by this push."""
 
-        if not reference_change:
-            new_revs = sorted(
-                change.new.sha1
-                for change in self.changes
-                if change.new
-                )
-        elif not reference_change.new.commit_sha1:
-            return []
-        else:
-            new_revs = [reference_change.new.commit_sha1]
-
-        cmd = ['rev-list', '--stdin'] + new_revs
-        return read_git_lines(cmd, input=self._old_rev_exclusion_spec)
+        spec = self.get_commits_spec('new', reference_change)
+        return git_rev_list(spec)
 
     def get_discarded_commits(self, reference_change):
         """Return a list of commits discarded by this push.
 
         Return a list of the object names of commits that were
         entirely discarded from the repository by the part of this
         push represented by reference_change."""
 
-        if not reference_change.old.commit_sha1:
-            return []
-        else:
-            old_revs = [reference_change.old.commit_sha1]
-
-        cmd = ['rev-list', '--stdin'] + old_revs
-        return read_git_lines(cmd, input=self._new_rev_exclusion_spec)
+        spec = self.get_commits_spec('old', reference_change)
+        return git_rev_list(spec)
 
     def send_emails(self, mailer, body_filter=None):
         """Use send all of the notification emails needed for this push.
 
         Use send all of the notification emails (including reference
         change emails and commit emails) needed for this push.  Send
@@ -2322,54 +2836,71 @@
         # They will be removed from this set as they are processed, to
         # guarantee that one (and only one) email is generated for
         # each new commit.
         unhandled_sha1s = set(self.get_new_commits())
         send_date = IncrementalDateTime()
         for change in self.changes:
+            sha1s = []
+            for sha1 in reversed(list(self.get_new_commits(change))):
+                if sha1 in unhandled_sha1s:
+                    sha1s.append(sha1)
+                    unhandled_sha1s.remove(sha1)
+
             # Check if we've got anyone to send to
             if not change.recipients:
-                sys.stderr.write(
+                change.environment.log_warning(
                     '*** no recipients configured so no email will be sent\n'
                     '*** for %r update %s->%s\n'
                     % (change.refname, change.old.sha1, change.new.sha1,)
                     )
             else:
-                sys.stderr.write('Sending notification emails to: %s\n' % (change.recipients,))
-                extra_values = {'send_date' : send_date.next()}
-                mailer.send(
-                    change.generate_email(self, body_filter, extra_values),
-                    change.recipients,
-                    )
+                if not change.environment.quiet:
+                    change.environment.log_msg(
+                        'Sending notification emails to: %s\n' % (change.recipients,))
+                extra_values = {'send_date': send_date.next()}
 
-            sha1s = []
-            for sha1 in reversed(list(self.get_new_commits(change))):
-                if sha1 in unhandled_sha1s:
-                    sha1s.append(sha1)
-                    unhandled_sha1s.remove(sha1)
+                rev = change.send_single_combined_email(sha1s)
+                if rev:
+                    mailer.send(
+                        change.generate_combined_email(self, rev, body_filter, extra_values),
+                        rev.recipients,
+                        )
+                    # This change is now fully handled; no need to handle
+                    # individual revisions any further.
+                    continue
+                else:
+                    mailer.send(
+                        change.generate_email(self, body_filter, extra_values),
+                        change.recipients,
+                        )
 
             max_emails = change.environment.maxcommitemails
             if max_emails and len(sha1s) > max_emails:
-                sys.stderr.write(
+                change.environment.log_warning(
                     '*** Too many new commits (%d), not sending commit emails.\n' % len(sha1s)
                     + '*** Try setting multimailhook.maxCommitEmails to a greater value\n'
                     + '*** Currently, multimailhook.maxCommitEmails=%d\n' % max_emails
                     )
                 return
 
             for (num, sha1) in enumerate(sha1s):
-                rev = Revision(change, GitObject(sha1), num=num+1, tot=len(sha1s))
+                rev = Revision(change, GitObject(sha1), num=num + 1, tot=len(sha1s))
+                if not rev.recipients and rev.cc_recipients:
+                    change.environment.log_msg('*** Replacing Cc: with To:\n')
+                    rev.recipients = rev.cc_recipients
+                    rev.cc_recipients = None
                 if rev.recipients:
-                    extra_values = {'send_date' : send_date.next()}
+                    extra_values = {'send_date': send_date.next()}
                     mailer.send(
                         rev.generate_email(self, body_filter, extra_values),
                         rev.recipients,
                         )
 
         # Consistency check:
         if unhandled_sha1s:
-            sys.stderr.write(
+            change.environment.log_error(
                 'ERROR: No emails were sent for the following new commits:\n'
                 '    %s\n'
                 % ('\n    '.join(sorted(unhandled_sha1s)),)
                 )
 
 
@@ -2381,51 +2912,60 @@
             ReferenceChange.create(environment, oldrev, newrev, refname)
             )
     push = Push(changes)
     push.send_emails(mailer, body_filter=environment.filter_body)
 
 
-def run_as_update_hook(environment, mailer, refname, oldrev, newrev):
+def run_as_update_hook(environment, mailer, refname, oldrev, newrev, force_send=False):
     changes = [
         ReferenceChange.create(
             environment,
             read_git_output(['rev-parse', '--verify', oldrev]),
             read_git_output(['rev-parse', '--verify', newrev]),
             refname,
             ),
         ]
-    push = Push(changes)
+    push = Push(changes, force_send)
     push.send_emails(mailer, body_filter=environment.filter_body)
 
 
 def choose_mailer(config, environment):
     mailer = config.get('mailer', default='sendmail')
 
     if mailer == 'smtp':
         smtpserver = config.get('smtpserver', default='localhost')
+        smtpservertimeout = float(config.get('smtpservertimeout', default=10.0))
+        smtpserverdebuglevel = int(config.get('smtpserverdebuglevel', default=0))
+        smtpencryption = config.get('smtpencryption', default='none')
+        smtpuser = config.get('smtpuser', default='')
+        smtppass = config.get('smtppass', default='')
         mailer = SMTPMailer(
             envelopesender=(environment.get_sender() or environment.get_fromaddr()),
-            smtpserver=smtpserver,
+            smtpserver=smtpserver, smtpservertimeout=smtpservertimeout,
+            smtpserverdebuglevel=smtpserverdebuglevel,
+            smtpencryption=smtpencryption,
+            smtpuser=smtpuser,
+            smtppass=smtppass,
             )
     elif mailer == 'sendmail':
         command = config.get('sendmailcommand')
         if command:
             command = shlex.split(command)
         mailer = SendMailer(command=command, envelopesender=environment.get_sender())
     else:
-        sys.stderr.write(
+        environment.log_error(
             'fatal: multimailhook.mailer is set to an incorrect value: "%s"\n' % mailer
             + 'please use one of "smtp" or "sendmail".\n'
             )
         sys.exit(1)
     return mailer
 
 
 KNOWN_ENVIRONMENTS = {
-    'generic' : GenericEnvironmentMixin,
-    'gitolite' : GitoliteEnvironmentMixin,
+    'generic': GenericEnvironmentMixin,
+    'gitolite': GitoliteEnvironmentMixin,
     }
 
 
 def choose_environment(config, osenv=None, env=None, recipients=None):
     if not osenv:
         osenv = os.environ
@@ -2436,14 +2976,14 @@
         ComputeFQDNEnvironmentMixin,
         ConfigFilterLinesEnvironmentMixin,
         PusherDomainEnvironmentMixin,
         ConfigOptionsEnvironmentMixin,
         ]
     environment_kw = {
-        'osenv' : osenv,
-        'config' : config,
+        'osenv': osenv,
+        'config': config,
         }
 
     if not env:
         env = config.get('environment')
 
     if not env:
@@ -2456,12 +2996,13 @@
 
     if recipients:
         environment_mixins.insert(0, StaticRecipientsEnvironmentMixin)
         environment_kw['refchange_recipients'] = recipients
         environment_kw['announce_recipients'] = recipients
         environment_kw['revision_recipients'] = recipients
+        environment_kw['scancommitforcc'] = config.get('scancommitforcc')
     else:
         environment_mixins.insert(0, ConfigRecipientsEnvironmentMixin)
 
     environment_klass = type(
         'EffectiveEnvironment',
         tuple(environment_mixins) + (Environment,),
@@ -2496,12 +3037,20 @@
         '--show-env', action='store_true', default=False,
         help=(
             'Write to stderr the values determined for the environment '
             '(intended for debugging purposes).'
             ),
         )
+    parser.add_option(
+        '--force-send', action='store_true', default=False,
+        help=(
+            'Force sending refchange email when using as an update hook. '
+            'This is useful to work around the unreliable new commits '
+            'detection in this mode.'
+            ),
+        )
 
     (options, args) = parser.parse_args(args)
 
     config = Config('multimailhook')
 
     try:
@@ -2510,28 +3059,28 @@
             env=options.environment,
             recipients=options.recipients,
             )
 
         if options.show_env:
             sys.stderr.write('Environment values:\n')
-            for (k,v) in sorted(environment.get_values().items()):
-                sys.stderr.write('    %s : %r\n' % (k,v))
+            for (k, v) in sorted(environment.get_values().items()):
+                sys.stderr.write('    %s : %r\n' % (k, v))
             sys.stderr.write('\n')
 
-        if options.stdout:
+        if options.stdout or environment.stdout:
             mailer = OutputMailer(sys.stdout)
         else:
             mailer = choose_mailer(config, environment)
 
         # Dual mode: if arguments were specified on the command line, run
         # like an update hook; otherwise, run as a post-receive hook.
         if args:
             if len(args) != 3:
                 parser.error('Need zero or three non-option arguments')
             (refname, oldrev, newrev) = args
-            run_as_update_hook(environment, mailer, refname, oldrev, newrev)
+            run_as_update_hook(environment, mailer, refname, oldrev, newrev, options.force_send)
         else:
             run_as_post_receive_hook(environment, mailer)
     except ConfigurationException, e:
         sys.exit(str(e))
 
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/contrib/hooks/multimail/migrate-mailhook-config /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/contrib/hooks/multimail/migrate-mailhook-config
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/contrib/hooks/multimail/migrate-mailhook-config	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/contrib/hooks/multimail/migrate-mailhook-config	2015-07-28 04:34:56.000000000 +0800
@@ -19,12 +19,13 @@
     'announcelist',
     'envelopesender',
     'emailprefix',
     'showrev',
     'emailmaxlines',
     'diffopts',
+    'scancommitforcc',
     ]
 
 NEW_NAMES = [
     'environment',
     'reponame',
     'mailinglist',
@@ -35,12 +36,13 @@
     'envelopesender',
     'administrator',
     'emailprefix',
     'emailmaxlines',
     'diffopts',
     'emaildomain',
+    'scancommitforcc',
     ]
 
 
 INFO = """\
 
 SUCCESS!
@@ -58,35 +60,35 @@
 
 
 def _check_old_config_exists(old):
     """Check that at least one old configuration value is set."""
 
     for name in OLD_NAMES:
-        if old.has_key(name):
+        if name in old:
             return True
 
     return False
 
 
 def _check_new_config_clear(new):
     """Check that none of the new configuration names are set."""
 
     retval = True
     for name in NEW_NAMES:
-        if new.has_key(name):
+        if name in new:
             if retval:
                 sys.stderr.write('INFO: The following configuration values already exist:\n\n')
             sys.stderr.write('    "%s.%s"\n' % (new.section, name))
             retval = False
 
     return retval
 
 
 def erase_values(config, names):
     for name in names:
-        if config.has_key(name):
+        if name in config:
             try:
                 sys.stderr.write('...unsetting "%s.%s"\n' % (config.section, name))
                 config.unset_all(name)
             except CommandError:
                 sys.stderr.write(
                     '\nWARNING: could not unset "%s.%s".  '
@@ -167,25 +169,25 @@
             sys.exit(
                 '\nERROR: Refusing to overwrite existing values.  Use the --overwrite\n'
                 'option to continue anyway.'
                 )
 
     name = 'showrev'
-    if old.has_key(name):
+    if name in old:
         msg = 'git-multimail does not support "%s.%s"' % (old.section, name,)
         if strict:
             sys.exit(
                 'ERROR: %s.\n'
                 'Please unset that value then try again, or run without --strict.'
                 % (msg,)
                 )
         else:
             sys.stderr.write('\nWARNING: %s (ignoring).\n\n' % (msg,))
 
     for name in ['mailinglist', 'announcelist']:
-        if old.has_key(name):
+        if name in old:
             sys.stderr.write(
                 '...copying "%s.%s" to "%s.%s"\n' % (old.section, name, new.section, name)
                 )
             new.set_recipients(name, old.get_recipients(name))
 
     if strict:
@@ -195,21 +197,21 @@
         new.set_recipients('commitlist', '')
         sys.stderr.write(
             '...setting "%s.announceshortlog" to "true"\n' % (new.section,)
             )
         new.set('announceshortlog', 'true')
 
-    for name in ['envelopesender', 'emailmaxlines', 'diffopts']:
-        if old.has_key(name):
+    for name in ['envelopesender', 'emailmaxlines', 'diffopts', 'scancommitforcc']:
+        if name in old:
             sys.stderr.write(
                 '...copying "%s.%s" to "%s.%s"\n' % (old.section, name, new.section, name)
                 )
             new.set(name, old.get(name))
 
     name = 'emailprefix'
-    if old.has_key(name):
+    if name in old:
         sys.stderr.write(
             '...copying "%s.%s" to "%s.%s"\n' % (old.section, name, new.section, name)
             )
         new.set(name, old.get(name))
     elif strict:
         sys.stderr.write(
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/contrib/hooks/multimail: post-receive
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/contrib/hooks/multimail: post-receive.example
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/contrib/hooks/multimail/README /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/contrib/hooks/multimail/README
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/contrib/hooks/multimail/README	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/contrib/hooks/multimail/README	2015-07-28 04:34:56.000000000 +0800
@@ -1,8 +1,11 @@
-			   git-multimail
-			   =============
+git-multimail Version 1.1.1
+===========================
+
+.. image:: https://travis-ci.org/git-multimail/git-multimail.svg?branch=master
+    :target: https://travis-ci.org/git-multimail/git-multimail
 
 git-multimail is a tool for sending notification emails on pushes to a
 Git repository.  It includes a Python module called git_multimail.py,
 which can either be used as a hook script directly or can be imported
 as a Python module into another script.
 
@@ -35,23 +38,23 @@
    modified by the commit.  The commit emails are threaded to the
    corresponding reference change email via "In-Reply-To".  This style
    (similar to the "git format-patch" style used on the Git mailing
    list) makes it easy to scan through the emails, jump to patches
    that need further attention, and write comments about specific
    commits.  Commits are handled in reverse topological order (i.e.,
-   parents shown before children).  For example,
+   parents shown before children).  For example::
 
-   [git] branch master updated
-   + [git] 01/08: doc: fix xref link from api docs to manual pages
-   + [git] 02/08: api-credentials.txt: show the big picture first
-   + [git] 03/08: api-credentials.txt: mention credential.helper explicitly
-   + [git] 04/08: api-credentials.txt: add "see also" section
-   + [git] 05/08: t3510 (cherry-pick-sequence): add missing '&&'
-   + [git] 06/08: Merge branch 'rr/maint-t3510-cascade-fix'
-   + [git] 07/08: Merge branch 'mm/api-credentials-doc'
-   + [git] 08/08: Git 1.7.11-rc2
+     [git] branch master updated
+     + [git] 01/08: doc: fix xref link from api docs to manual pages
+     + [git] 02/08: api-credentials.txt: show the big picture first
+     + [git] 03/08: api-credentials.txt: mention credential.helper explicitly
+     + [git] 04/08: api-credentials.txt: add "see also" section
+     + [git] 05/08: t3510 (cherry-pick-sequence): add missing '&&'
+     + [git] 06/08: Merge branch 'rr/maint-t3510-cascade-fix'
+     + [git] 07/08: Merge branch 'mm/api-credentials-doc'
+     + [git] 08/08: Git 1.7.11-rc2
 
    Each commit appears in exactly one commit email, the first time
    that it is pushed to the repository.  If a commit is later merged
    into another branch, then a one-line summary of the commit is
    included in the reference change email (as usual), but no
    additional commit email is generated.
@@ -71,25 +74,25 @@
 
 * Python 2.x, version 2.4 or later.  No non-standard Python modules
   are required.  git-multimail does *not* currently work with Python
   3.x.
 
   The example scripts invoke Python using the following shebang line
-  (following PEP 394 [1]):
+  (following PEP 394 [1]_)::
 
       #! /usr/bin/env python2
 
   If your system's Python2 interpreter is not in your PATH or is not
-  called "python2", you can change the lines accordingly.  Or you can
+  called ``python2``, you can change the lines accordingly.  Or you can
   invoke the Python interpreter explicitly, for example via a tiny
-  shell script like
+  shell script like::
 
       #! /bin/sh
       /usr/local/bin/python /path/to/git_multimail.py "$@"
 
-* The "git" command must be in your PATH.  git-multimail is known to
+* The ``git`` command must be in your PATH.  git-multimail is known to
   work with Git versions back to 1.7.1.  (Earlier versions have not
   been tested; if you do so, please report your results.)
 
 * To send emails using the default configuration, a standard sendmail
   program must be located at '/usr/sbin/sendmail' or
   '/usr/lib/sendmail' and must be configured correctly to send emails.
@@ -98,24 +101,24 @@
   configure git-multimail to send emails via an SMTP server.
 
 
 Invocation
 ----------
 
-git_multimail.py is designed to be used as a "post-receive" hook in a
+git_multimail.py is designed to be used as a ``post-receive`` hook in a
 Git repository (see githooks(5)).  Link or copy it to
 $GIT_DIR/hooks/post-receive within the repository for which email
 notifications are desired.  Usually it should be installed on the
 central repository for a project, to which all commits are eventually
 pushed.
 
 For use on pre-v1.5.1 Git servers, git_multimail.py can also work as
-an "update" hook, taking its arguments on the command line.  To use
+an ``update`` hook, taking its arguments on the command line.  To use
 this script in this manner, link or copy it to $GIT_DIR/hooks/update.
 Please note that the script is not completely reliable in this mode
-[2].
+[2]_.
 
 Alternatively, git_multimail.py can be imported as a Python module
 into your own Python post-receive script.  This method is a bit more
 work, but allows the behavior of the hook to be customized using
 arbitrary Python code.  For example, you can use a custom environment
 (perhaps inheriting from GenericEnvironment or GitoliteEnvironment) to
@@ -126,45 +129,53 @@
 
 * decide which users should be notified about which commits based on
   the contents of the commits (e.g., for users who want to be notified
   only about changes affecting particular files or subdirectories)
 
 Or you can change how emails are sent by writing your own Mailer
-class.  The "post-receive" script in this directory demonstrates how
+class.  The ``post-receive`` script in this directory demonstrates how
 to use git_multimail.py as a Python module.  (If you make interesting
 changes of this type, please consider sharing them with the
 community.)
 
 
 Configuration
 -------------
 
 By default, git-multimail mostly takes its configuration from the
-following "git config" settings:
+following ``git config`` settings:
 
 multimailhook.environment
 
     This describes the general environment of the repository.
     Currently supported values:
 
-    "generic" -- the username of the pusher is read from $USER and the
-        repository name is derived from the repository's path.
+    * generic
+
+      the username of the pusher is read from $USER or $USERNAME and
+      the repository name is derived from the repository's path.
+
+    * gitolite
 
-    "gitolite" -- the username of the pusher is read from $GL_USER and
-        the repository name from $GL_REPO.
+      the username of the pusher is read from $GL_USER, the repository
+      name is read from $GL_REPO, and the From: header value is
+      optionally read from gitolite.conf (see multimailhook.from).
+
+      For more information about gitolite and git-multimail, read
+      doc/gitolite.rst
 
     If neither of these environments is suitable for your setup, then
     you can implement a Python class that inherits from Environment
     and instantiate it via a script that looks like the example
     post-receive script.
 
     The environment value can be specified on the command line using
     the --environment option.  If it is not specified on the command
     line or by multimailhook.environment, then it defaults to
-    "gitolite" if the environment contains variables $GL_USER and
-    $GL_REPO; otherwise "generic".
+    ``gitolite`` if the environment contains variables $GL_USER and
+    $GL_REPO; otherwise ``generic``.
 
 multimailhook.repoName
 
     A short name of this Git repository, to be used in various places
     in the notification email text.  The default is to use $GL_REPO
     for gitolite repositories, or otherwise to derive this value from
@@ -216,67 +227,115 @@
     tag.  This can be useful if the annotated tags represent releases;
     then the shortlog will be a kind of rough summary of what has
     happened since the last release.  But if your tagging policy is
     not so straightforward, then the shortlog might be confusing
     rather than useful.  Default is false.
 
+multimailhook.refchangeShowGraph
+
+    If this option is set to true, then summary emails about reference
+    changes will additionally include:
+
+    * a graph of the added commits (if any)
+
+    * a graph of the discarded commits (if any)
+
+    The log is generated by running ``git log --graph`` with the options
+    specified in graphOpts.  The default is false.
+
 multimailhook.refchangeShowLog
 
     If this option is set to true, then summary emails about reference
     changes will include a detailed log of the added commits in
     addition to the one line summary.  The log is generated by running
-    "git log" with the options specified in multimailhook.logOpts.
+    ``git log`` with the options specified in multimailhook.logOpts.
     Default is false.
 
 multimailhook.mailer
 
     This option changes the way emails are sent.  Accepted values are:
 
-    - sendmail (the default): use the command /usr/sbin/sendmail or
-      /usr/lib/sendmail (or sendmailCommand, if configured).  This
+    - sendmail (the default): use the command ``/usr/sbin/sendmail`` or
+      ``/usr/lib/sendmail`` (or sendmailCommand, if configured).  This
       mode can be further customized via the following options:
 
-       multimailhook.sendmailCommand
+      * multimailhook.sendmailCommand
 
-           The command used by mailer "sendmail" to send emails.  Shell
-           quoting is allowed in the value of this setting, but remember that
-           Git requires double-quotes to be escaped; e.g.,
+        The command used by mailer ``sendmail`` to send emails.  Shell
+        quoting is allowed in the value of this setting, but remember that
+        Git requires double-quotes to be escaped; e.g.::
 
              git config multimailhook.sendmailcommand '/usr/sbin/sendmail -oi -t -F \"Git Repo\"'
 
-           Default is '/usr/sbin/sendmail -oi -t' or
-           '/usr/lib/sendmail -oi -t' (depending on which file is
-           present and executable).
+        Default is '/usr/sbin/sendmail -oi -t' or
+        '/usr/lib/sendmail -oi -t' (depending on which file is
+        present and executable).
 
-       multimailhook.envelopeSender
+      * multimailhook.envelopeSender
 
-           If set then pass this value to sendmail via the -f option to set
-           the envelope sender address.
+        If set then pass this value to sendmail via the -f option to set
+        the envelope sender address.
 
     - smtp: use Python's smtplib.  This is useful when the sendmail
       command is not available on the system.  This mode can be
       further customized via the following options:
 
-       multimailhook.smtpServer
+      * multimailhook.smtpServer
+
+        The name of the SMTP server to connect to.  The value can
+        also include a colon and a port number; e.g.,
+        ``mail.example.com:25``.  Default is 'localhost' using port 25.
+
+      * multimailhook.smtpUser
+      * multimailhook.smtpPass
+
+        Server username and password. Required if smtpEncryption is 'ssl'.
+        Note that the username and password currently need to be
+        set cleartext in the configuration file, which is not
+        recommended. If you need to use this option, be sure your
+        configuration file is read-only.
+
+      * multimailhook.envelopeSender
+
+        The sender address to be passed to the SMTP server.  If
+        unset, then the value of multimailhook.from is used.
+
+      * multimailhook.smtpServerTimeout
+
+        Timeout in seconds.
 
-           The name of the SMTP server to connect to.  The value can
-           also include a colon and a port number; e.g.,
-           "mail.example.com:25".  Default is 'localhost' using port
-           25.
+      * multimailhook.smtpEncryption
 
-       multimailhook.envelopeSender
+        Set the security type. Allowed values: none, ssl.
+        Default=none.
 
-           The sender address to be passed to the SMTP server.  If
-           unset, then the value of multimailhook.from is used.
+      * multimailhook.smtpServerDebugLevel
+
+        Integer number. Set to greater than 0 to activate debugging.
 
 multimailhook.from
 
-    If set then use this value in the From: field of generated emails.
-    If unset, then use the repository's user configuration (user.name
-    and user.email).  If user.email is also unset, then use
-    multimailhook.envelopeSender.
+    If set, use this value in the From: field of generated emails.  If
+    unset, the value of the From: header is determined as follows:
+
+    1. (gitolite environment only) Parse gitolite.conf, looking for a
+       block of comments that looks like this::
+
+           # BEGIN USER EMAILS
+           # username Firstname Lastname <email@example.com>
+           # END USER EMAILS
+
+       If that block exists, and there is a line between the BEGIN
+       USER EMAILS and END USER EMAILS lines where the first field
+       matches the gitolite username ($GL_USER), use the rest of the
+       line for the From: header.
+
+    2. If the user.email configuration setting is set, use its value
+       (and the value of user.name, if set).
+
+    3. Use the value of multimailhook.envelopeSender.
 
 multimailhook.administrator
 
     The name and/or email address of the administrator of the Git
     repository; used in FOOTER_TEMPLATE.  Default is
     multimailhook.envelopesender if it is set; otherwise a generic
@@ -284,25 +343,26 @@
 
 multimailhook.emailPrefix
 
     All emails have this string prepended to their subjects, to aid
     email filtering (though filtering based on the X-Git-* email
     headers is probably more robust).  Default is the short name of
-    the repository in square brackets; e.g., "[myrepo]".
+    the repository in square brackets; e.g., ``[myrepo]``.  Set this
+    value to the empty string to suppress the email prefix.
 
 multimailhook.emailMaxLines
 
     The maximum number of lines that should be included in the body of
     a generated email.  If not specified, there is no limit.  Lines
     beyond the limit are suppressed and counted, and a final line is
     added indicating the number of suppressed lines.
 
 multimailhook.emailMaxLineLength
 
     The maximum length of a line in the email body.  Lines longer than
-    this limit are truncated to this length with a trailing " [...]"
+    this limit are truncated to this length with a trailing `` [...]``
     added to indicate the missing text.  The default is 500, because
     (a) diffs with longer lines are probably from binary files, for
     which a diff is useless, and (b) even if a text file has such long
     lines, the diffs are probably unreadable anyway.  To disable line
     truncation, set this option to 0.
 
@@ -313,60 +373,68 @@
     summary refchange email is sent.  This can avoid accidental
     mailbombing, for example on an initial push.  To disable commit
     emails limit, set this option to 0.  The default is 500.
 
 multimailhook.emailStrictUTF8
 
-    If this boolean option is set to "true", then the main part of the
+    If this boolean option is set to `true`, then the main part of the
     email body is forced to be valid UTF-8.  Any characters that are
     not valid UTF-8 are converted to the Unicode replacement
-    character, U+FFFD.  The default is "true".
+    character, U+FFFD.  The default is `true`.
 
 multimailhook.diffOpts
 
-    Options passed to "git diff-tree" when generating the summary
-    information for ReferenceChange emails.  Default is "--stat
-    --summary --find-copies-harder".  Add -p to those options to
+    Options passed to ``git diff-tree`` when generating the summary
+    information for ReferenceChange emails.  Default is ``--stat
+    --summary --find-copies-harder``.  Add -p to those options to
     include a unified diff of changes in addition to the usual summary
     output.  Shell quoting is allowed; see multimailhook.logOpts for
     details.
 
+multimailhook.graphOpts
+
+    Options passed to ``git log --graph`` when generating graphs for the
+    reference change summary emails (used only if refchangeShowGraph
+    is true).  The default is '--oneline --decorate'.
+
+    Shell quoting is allowed; see logOpts for details.
+
 multimailhook.logOpts
 
-    Options passed to "git log" to generate additional info for
+    Options passed to ``git log`` to generate additional info for
     reference change emails (used only if refchangeShowLog is set).
-    For example, adding --graph will show the graph of revisions, -p
-    will show the complete diff, etc.  The default is empty.
+    For example, adding -p will show each commit's complete diff.  The
+    default is empty.
 
     Shell quoting is allowed; for example, a log format that contains
-    spaces can be specified using something like:
+    spaces can be specified using something like::
 
       git config multimailhook.logopts '--pretty=format:"%h %aN <%aE>%n%s%n%n%b%n"'
 
     If you want to set this by editing your configuration file
     directly, remember that Git requires double-quotes to be escaped
-    (see git-config(1) for more information):
+    (see git-config(1) for more information)::
 
       [multimailhook]
               logopts = --pretty=format:\"%h %aN <%aE>%n%s%n%n%b%n\"
 
 multimailhook.commitLogOpts
 
-    Options passed to "git log" to generate additional info for
+    Options passed to ``git log`` to generate additional info for
     revision change emails.  For example, adding --ignore-all-spaces
-    will suppress whitespace changes.  The default options are "-C
-    --stat -p --cc".  Shell quoting is allowed; see
+    will suppress whitespace changes.  The default options are ``-C
+    --stat -p --cc``.  Shell quoting is allowed; see
     multimailhook.logOpts for details.
 
 multimailhook.emailDomain
 
     Domain name appended to the username of the person doing the push
-    to convert it into an email address (via "%s@%s" % (username,
-    emaildomain)).  More complicated schemes can be implemented by
-    overriding Environment and overriding its get_pusher_email()
-    method.
+    to convert it into an email address
+    (via ``"%s@%s" % (username, emaildomain)``). More complicated
+    schemes can be implemented by overriding Environment and
+    overriding its get_pusher_email() method.
 
 multimailhook.replyTo
 multimailhook.replyToCommit
 multimailhook.replyToRefchange
 
     Addresses to use in the Reply-To: field for commit emails
@@ -374,32 +442,54 @@
     multimailhook.replyTo is used as default when replyToCommit or
     replyToRefchange is not set.  The value for these variables can be
     either:
 
     - An email address, which will be used directly.
 
-    - The value "pusher", in which case the pusher's address (if
+    - The value `pusher`, in which case the pusher's address (if
       available) will be used.  This is the default for refchange
       emails.
 
-    - The value "author" (meaningful only for replyToCommit), in which
+    - The value `author` (meaningful only for replyToCommit), in which
       case the commit author's address will be used.  This is the
       default for commit emails.
 
-    - The value "none", in which case the Reply-To: field will be
+    - The value `none`, in which case the Reply-To: field will be
       omitted.
 
+multimailhook.quiet
+
+    Do not output the list of email recipients from the hook
+
+multimailhook.stdout
+
+    For debugging, send emails to stdout rather than to the
+    mailer.  Equivalent to the --stdout command line option
+
+multimailhook.scanCommitForCc
+
+    If this option is set to true, than recipients from lines in commit body
+    that starts with ``CC:`` will be added to CC list.
+    Default: false
+
+multimailhook.combineWhenSingleCommit
+
+    If this option is set to true and a single new commit is pushed to
+    a branch, combine the summary and commit email messages into a
+    single email.
+    Default: true
+
 
 Email filtering aids
 --------------------
 
 All emails include extra headers to enable fine tuned filtering and
 give information for debugging.  All emails include the headers
-"X-Git-Host", "X-Git-Repo", "X-Git-Refname", and "X-Git-Reftype".
-ReferenceChange emails also include headers "X-Git-Oldrev" and "X-Git-Newrev";
-Revision emails also include header "X-Git-Rev".
+``X-Git-Host``, ``X-Git-Repo``, ``X-Git-Refname``, and ``X-Git-Reftype``.
+ReferenceChange emails also include headers ``X-Git-Oldrev`` and ``X-Git-Newrev``;
+Revision emails also include header ``X-Git-Rev``.
 
 
 Customizing email contents
 --------------------------
 
 git-multimail mostly generates emails by expanding templates.  The
@@ -417,33 +507,34 @@
 the local environment in which Git is running.  Two types of
 environment are built in:
 
 * GenericEnvironment: a stand-alone Git repository.
 
 * GitoliteEnvironment: a Git repository that is managed by gitolite
-  [3].  For such repositories, the identity of the pusher is read from
-  environment variable $GL_USER, and the name of the repository is
-  read from $GL_REPO (if it is not overridden by
-  multimailhook.reponame).
+  [3]_.  For such repositories, the identity of the pusher is read from
+  environment variable $GL_USER, the name of the repository is read
+  from $GL_REPO (if it is not overridden by multimailhook.reponame),
+  and the From: header value is optionally read from gitolite.conf
+  (see multimailhook.from).
 
 By default, git-multimail assumes GitoliteEnvironment if $GL_USER and
 $GL_REPO are set, and otherwise assumes GenericEnvironment.
 Alternatively, you can choose one of these two environments explicitly
-by setting a "multimailhook.environment" config setting (which can
-have the value "generic" or "gitolite") or by passing an --environment
+by setting a ``multimailhook.environment`` config setting (which can
+have the value `generic` or `gitolite`) or by passing an --environment
 option to the script.
 
 If you need to customize the script in ways that are not supported by
 the existing environments, you can define your own environment class
 class using arbitrary Python code.  To do so, you need to import
 git_multimail.py as a Python module, as demonstrated by the example
 post-receive script.  Then implement your environment class; it should
 usually inherit from one of the existing Environment classes and
 possibly one or more of the EnvironmentMixin classes.  Then set the
-"environment" variable to an instance of your own environment class
-and pass it to run_as_post_receive_hook().
+``environment`` variable to an instance of your own environment class
+and pass it to ``run_as_post_receive_hook()``.
 
 The standard environment classes, GenericEnvironment and
 GitoliteEnvironment, are in fact themselves put together out of a
 number of mixin classes, each of which handles one aspect of the
 customization.  For the finest control over your configuration, you
 can specify exactly which mixin classes your own environment class
@@ -487,15 +578,17 @@
 don't overlook them.
 
 
 Footnotes
 ---------
 
-[1] http://www.python.org/dev/peps/pep-0394/
+.. [1] http://www.python.org/dev/peps/pep-0394/
 
-[2] Because of the way information is passed to update hooks, the
-    script's method of determining whether a commit has already been
-    seen does not work when it is used as an "update" script.  In
-    particular, no notification email will be generated for a new
-    commit that is added to multiple references in the same push.
+.. [2] Because of the way information is passed to update hooks, the
+       script's method of determining whether a commit has already
+       been seen does not work when it is used as an ``update`` script.
+       In particular, no notification email will be generated for a
+       new commit that is added to multiple references in the same
+       push. A workaround is to use --force-send to force sending the
+       emails.
 
-[3] https://github.com/sitaramc/gitolite
+.. [3] https://github.com/sitaramc/gitolite
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/contrib/hooks/multimail/README.Git /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/contrib/hooks/multimail/README.Git
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/contrib/hooks/multimail/README.Git	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/contrib/hooks/multimail/README.Git	2015-07-28 04:34:56.000000000 +0800
@@ -3,13 +3,13 @@
 git-multimail is developed as an independent project at the following
 website:
 
     https://github.com/git-multimail/git-multimail
 
 The version in this directory was obtained from the upstream project
-on 2015-04-27 and consists of the "git-multimail" subdirectory from
+on July 03 2015 and consists of the "git-multimail" subdirectory from
 revision
 
-    8c3aaafa873bf10de8dddf1d202c449b3eff3b42 refs/tags/1.0.2
+    6d6c9eb62a054143322cfaecde3949189c065b46 refs/tags/1.1.1
 
 Please see the README file in this directory for information about how
 to report bugs or contribute to git-multimail.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/contrib/subtree/git-subtree.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/contrib/subtree/git-subtree.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/contrib/subtree/git-subtree.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/contrib/subtree/git-subtree.sh	2015-07-28 04:34:56.000000000 +0800
@@ -23,13 +23,13 @@
  options for 'split'
 annotate=     add a prefix to commit message of new commits
 b,branch=     create a new branch from the split subtree
 ignore-joins  ignore prior --rejoin commits
 onto=         try connecting new tree to an existing one
 rejoin        merge the new branch back into HEAD
- options for 'add', 'merge', 'pull' and 'push'
+ options for 'add', 'merge', and 'pull'
 squash        merge subtree changes as a single commit
 "
 eval "$(echo "$OPTS_SPEC" | git rev-parse --parseopt -- "$@" || echo exit $?)"
 
 PATH=$PATH:$(git --exec-path)
 . git-sh-setup
@@ -48,20 +48,27 @@
 message=
 prefix=
 
 debug()
 {
 	if [ -n "$debug" ]; then
-		echo "$@" >&2
+		printf "%s\n" "$*" >&2
 	fi
 }
 
 say()
 {
 	if [ -z "$quiet" ]; then
-		echo "$@" >&2
+		printf "%s\n" "$*" >&2
+	fi
+}
+
+progress()
+{
+	if [ -z "$quiet" ]; then
+		printf "%s\r" "$*" >&2
 	fi
 }
 
 assert()
 {
 	if "$@"; then
@@ -596,13 +603,13 @@
 	revmax=$(eval "$grl" | wc -l)
 	revcount=0
 	createcount=0
 	eval "$grl" |
 	while read rev parents; do
 		revcount=$(($revcount + 1))
-		say -n "$revcount/$revmax ($createcount)"
+		progress "$revcount/$revmax ($createcount)"
 		debug "Processing commit: $rev"
 		exists=$(cache_get $rev)
 		if [ -n "$exists" ]; then
 			debug "  prior: $exists"
 			continue
 		fi
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/contrib/subtree/git-subtree.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/contrib/subtree/git-subtree.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/contrib/subtree/git-subtree.txt	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/contrib/subtree/git-subtree.txt	2015-07-28 04:34:56.000000000 +0800
@@ -143,13 +143,13 @@
 	Specify <message> as the commit message for the merge commit.
 
 
 OPTIONS FOR add, merge, push, pull
 ----------------------------------
 --squash::
-	This option is only valid for add, merge, push and pull
+	This option is only valid for add, merge, and pull
 	commands.
 +
 Instead of merging the entire history from the subtree project, produce
 only a single commit that contains all the differences you want to
 merge, and then merge that new commit into your project.
 +
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/contrib/subtree/t/t7900-subtree.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/contrib/subtree/t/t7900-subtree.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/contrib/subtree/t/t7900-subtree.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/contrib/subtree/t/t7900-subtree.sh	2015-07-28 04:34:56.000000000 +0800
@@ -174,13 +174,14 @@
         undo
 '
 
 test_expect_success 'merge new subproj history into subdir' '
         git subtree merge --prefix=subdir FETCH_HEAD &&
         git branch pre-split &&
-        check_equal ''"$(last_commit_message)"'' "Merge commit '"'"'"$(git rev-parse sub2)"'"'"' into mainline"
+	check_equal ''"$(last_commit_message)"'' "Merge commit '"'"'"$(git rev-parse sub2)"'"'"' into mainline" &&
+	undo
 '
 
 test_expect_success 'Check that prefix argument is required for split' '
         echo "You must provide the --prefix option." > expected &&
         test_must_fail git subtree split > actual 2>&1 &&
 	test_debug "printf '"'"'expected: '"'"'" &&
@@ -196,13 +197,13 @@
         test_must_fail git subtree split --prefix=non-existent-directory > actual 2>&1 &&
 	test_debug "printf '"'"'expected: '"'"'" &&
         test_debug "cat expected" &&
 	test_debug "printf '"'"'actual: '"'"'" &&
         test_debug "cat actual" &&
         test_cmp expected actual
-#        rm -f expected actual
+#	rm -f expected actual
 '
 
 test_expect_success 'check if --message works for split+rejoin' '
         spl1=''"$(git subtree split --annotate='"'*'"' --prefix subdir --onto FETCH_HEAD --message "Split & rejoin" --rejoin)"'' &&
         git branch spl1 "$spl1" &&
         check_equal ''"$(last_commit_message)"'' "Split & rejoin" &&
@@ -215,18 +216,15 @@
 	git subtree split --annotate='"'*'"' --prefix subdir --onto FETCH_HEAD --branch splitbr1 &&
 	check_equal ''"$(git rev-parse splitbr1)"'' "$spl1"
 '
 
 test_expect_success 'check hash of split' '
 	spl1=$(git subtree split --prefix subdir) &&
-	undo &&
 	git subtree split --prefix subdir --branch splitbr1test &&
-	check_equal ''"$(git rev-parse splitbr1test)"'' "$spl1"
-	git checkout splitbr1test &&
-	new_hash=$(git rev-parse HEAD~2) &&
-	git checkout mainline &&
+	check_equal ''"$(git rev-parse splitbr1test)"'' "$spl1" &&
+	new_hash=$(git rev-parse splitbr1test~2) &&
 	check_equal ''"$new_hash"'' "$subdir_hash"
 '
 
 test_expect_success 'check split with --branch for an existing branch' '
         spl1=''"$(git subtree split --annotate='"'*'"' --prefix subdir --onto FETCH_HEAD --message "Split & rejoin" --rejoin)"'' &&
         undo &&
@@ -266,13 +264,13 @@
 '
 
 # Back to mainline
 cd ..
 
 test_expect_success 'split for sub8' '
-        split2=''"$(git subtree split --annotate='"'*'"' --prefix subdir/ --rejoin)"''
+	split2=''"$(git subtree split --annotate='"'*'"' --prefix subdir/ --rejoin)"'' &&
         git branch split2 "$split2"
 '
 
 test_expect_success 'add main-sub10' '
         create subdir/main-sub10 &&
         git commit -m "main-sub10"
@@ -449,14 +447,14 @@
 	echo "$commit $all"
 }
 
 test_expect_success 'verify one file change per commit' '
         x= &&
         list=''"$(git log --pretty=format:'"'commit: %H'"' | joincommits)"'' &&
-#        test_debug "echo HERE" &&
-#        test_debug "echo ''"$list"''" &&
+#	test_debug "echo HERE" &&
+#	test_debug "echo ''"$list"''" &&
         (git log --pretty=format:'"'commit: %H'"' | joincommits |
         (       while read commit a b; do
 		        test_debug "echo Verifying commit "''"$commit"''
 		        test_debug "echo a: "''"$a"''
 		        test_debug "echo b: "''"$b"''
 		        check_equal "$b" ""
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/convert.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/convert.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/convert.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/convert.c	2015-07-28 04:34:56.000000000 +0800
@@ -353,15 +353,20 @@
 	if (start_command(&child_process))
 		return error("cannot fork to run external filter %s", params->cmd);
 
 	sigchain_push(SIGPIPE, SIG_IGN);
 
 	if (params->src) {
-		write_err = (write_in_full(child_process.in, params->src, params->size) < 0);
+		write_err = (write_in_full(child_process.in,
+					   params->src, params->size) < 0);
+		if (errno == EPIPE)
+			write_err = 0;
 	} else {
 		write_err = copy_fd(params->fd, child_process.in);
+		if (write_err == COPY_WRITE_ERROR && errno == EPIPE)
+			write_err = 0;
 	}
 
 	if (close(child_process.in))
 		write_err = 1;
 	if (write_err)
 		error("cannot feed the input to external filter %s", params->cmd);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/convert.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/convert.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/convert.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/convert.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/copy.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/copy.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/copy.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/copy.c	2015-07-28 04:34:56.000000000 +0800
@@ -4,19 +4,16 @@
 {
 	while (1) {
 		char buffer[8192];
 		ssize_t len = xread(ifd, buffer, sizeof(buffer));
 		if (!len)
 			break;
-		if (len < 0) {
-			return error("copy-fd: read returned %s",
-				     strerror(errno));
-		}
+		if (len < 0)
+			return COPY_READ_ERROR;
 		if (write_in_full(ofd, buffer, len) < 0)
-			return error("copy-fd: write returned %s",
-				     strerror(errno));
+			return COPY_WRITE_ERROR;
 	}
 	return 0;
 }
 
 static int copy_times(const char *dst, const char *src)
 {
@@ -40,12 +37,20 @@
 		return fdi;
 	if ((fdo = open(dst, O_WRONLY | O_CREAT | O_EXCL, mode)) < 0) {
 		close(fdi);
 		return fdo;
 	}
 	status = copy_fd(fdi, fdo);
+	switch (status) {
+	case COPY_READ_ERROR:
+		error("copy-fd: read returned %s", strerror(errno));
+		break;
+	case COPY_WRITE_ERROR:
+		error("copy-fd: write returned %s", strerror(errno));
+		break;
+	}
 	close(fdi);
 	if (close(fdo) != 0)
 		return error("%s: close error: %s", dst, strerror(errno));
 
 	if (!status && adjust_shared_perm(dst))
 		return -1;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/copy.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/copy.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/copy.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/copy.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/credential-cache.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/credential-cache.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/credential-cache--daemon.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/credential-cache--daemon.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/credential-cache--daemon.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/credential-cache--daemon.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/credential-cache.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/credential-cache.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/credential.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/credential.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/credential.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/credential.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/credential-store.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/credential-store.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/credential-store.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/credential-store.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/csum-file.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/csum-file.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/csum-file.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/csum-file.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ctype.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ctype.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ctype.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ctype.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/daemon.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/daemon.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/daemon.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/daemon.c	2015-07-28 04:34:56.000000000 +0800
@@ -1163,21 +1163,12 @@
 	}
 
 	return &c;
 }
 #endif
 
-static void store_pid(const char *path)
-{
-	FILE *f = fopen(path, "w");
-	if (!f)
-		die_errno("cannot open pid file '%s'", path);
-	if (fprintf(f, "%"PRIuMAX"\n", (uintmax_t) getpid()) < 0 || fclose(f) != 0)
-		die_errno("failed to write pid file '%s'", path);
-}
-
 static int serve(struct string_list *listen_addr, int listen_port,
     struct credentials *cred)
 {
 	struct socketlist socklist = { NULL, 0, 0 };
 
 	socksetup(listen_addr, listen_port, &socklist);
@@ -1382,13 +1373,13 @@
 		if (daemonize())
 			die("--detach not supported on this platform");
 	} else
 		sanitize_stdfds();
 
 	if (pid_file)
-		store_pid(pid_file);
+		write_file(pid_file, 1, "%"PRIuMAX"\n", (uintmax_t) getpid());
 
 	/* prepare argv for serving-processes */
 	cld_argv = xmalloc(sizeof (char *) * (argc + 2));
 	cld_argv[0] = argv[0];	/* git-daemon */
 	cld_argv[1] = "--serve";
 	for (i = 1; i < argc; ++i)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/daemon.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/daemon.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/daemon.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/daemon.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/date.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/date.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/date.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/date.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/decorate.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/decorate.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/decorate.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/decorate.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/connect.o.d /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/connect.o.d
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/connect.o.d	2017-10-10 13:18:15.130529788 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/connect.o.d	2017-10-10 13:50:46.494458272 +0800
@@ -1,10 +1,10 @@
 connect.o: connect.c git-compat-util.h compat/bswap.h wildmatch.h cache.h \
  strbuf.h hashmap.h advice.h gettext.h convert.h trace.h string-list.h \
  block-sha1/sha1.h pkt-line.h quote.h refs.h run-command.h argv-array.h \
- remote.h parse-options.h connect.h url.h sha1-array.h transport.h
+ remote.h parse-options.h connect.h url.h sha1-array.h
 
 git-compat-util.h:
 
 compat/bswap.h:
 
 wildmatch.h:
@@ -43,8 +43,6 @@
 
 connect.h:
 
 url.h:
 
 sha1-array.h:
-
-transport.h:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/diffcore-break.o.d /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/diffcore-break.o.d
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/diffcore-break.o.d	2017-10-10 13:18:16.150529751 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/diffcore-break.o.d	2017-10-10 13:50:47.554458233 +0800
@@ -1,10 +1,10 @@
 diffcore-break.o: diffcore-break.c cache.h git-compat-util.h \
  compat/bswap.h wildmatch.h strbuf.h hashmap.h advice.h gettext.h \
  convert.h trace.h string-list.h block-sha1/sha1.h diff.h tree-walk.h \
- pathspec.h diffcore.h
+ pathspec.h object.h diffcore.h
 
 cache.h:
 
 git-compat-util.h:
 
 compat/bswap.h:
@@ -30,7 +30,9 @@
 diff.h:
 
 tree-walk.h:
 
 pathspec.h:
 
+object.h:
+
 diffcore.h:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/diffcore-delta.o.d /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/diffcore-delta.o.d
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/diffcore-delta.o.d	2017-10-10 13:18:16.234529748 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/diffcore-delta.o.d	2017-10-10 13:50:47.638458230 +0800
@@ -1,10 +1,10 @@
 diffcore-delta.o: diffcore-delta.c cache.h git-compat-util.h \
  compat/bswap.h wildmatch.h strbuf.h hashmap.h advice.h gettext.h \
  convert.h trace.h string-list.h block-sha1/sha1.h diff.h tree-walk.h \
- pathspec.h diffcore.h
+ pathspec.h object.h diffcore.h
 
 cache.h:
 
 git-compat-util.h:
 
 compat/bswap.h:
@@ -30,7 +30,9 @@
 diff.h:
 
 tree-walk.h:
 
 pathspec.h:
 
+object.h:
+
 diffcore.h:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/diffcore-order.o.d /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/diffcore-order.o.d
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/diffcore-order.o.d	2017-10-10 13:18:16.310529745 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/diffcore-order.o.d	2017-10-10 13:50:47.714458227 +0800
@@ -1,10 +1,10 @@
 diffcore-order.o: diffcore-order.c cache.h git-compat-util.h \
  compat/bswap.h wildmatch.h strbuf.h hashmap.h advice.h gettext.h \
  convert.h trace.h string-list.h block-sha1/sha1.h diff.h tree-walk.h \
- pathspec.h diffcore.h
+ pathspec.h object.h diffcore.h
 
 cache.h:
 
 git-compat-util.h:
 
 compat/bswap.h:
@@ -30,7 +30,9 @@
 diff.h:
 
 tree-walk.h:
 
 pathspec.h:
 
+object.h:
+
 diffcore.h:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/diffcore-pickaxe.o.d /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/diffcore-pickaxe.o.d
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/diffcore-pickaxe.o.d	2017-10-10 13:18:16.398529742 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/diffcore-pickaxe.o.d	2017-10-10 13:50:47.802458224 +0800
@@ -1,10 +1,10 @@
 diffcore-pickaxe.o: diffcore-pickaxe.c cache.h git-compat-util.h \
  compat/bswap.h wildmatch.h strbuf.h hashmap.h advice.h gettext.h \
  convert.h trace.h string-list.h block-sha1/sha1.h diff.h tree-walk.h \
- pathspec.h diffcore.h xdiff-interface.h xdiff/xdiff.h kwset.h
+ pathspec.h object.h diffcore.h xdiff-interface.h xdiff/xdiff.h kwset.h
 
 cache.h:
 
 git-compat-util.h:
 
 compat/bswap.h:
@@ -30,12 +30,14 @@
 diff.h:
 
 tree-walk.h:
 
 pathspec.h:
 
+object.h:
+
 diffcore.h:
 
 xdiff-interface.h:
 
 xdiff/xdiff.h:
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/diffcore-rename.o.d /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/diffcore-rename.o.d
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/diffcore-rename.o.d	2017-10-10 13:18:16.562529736 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/diffcore-rename.o.d	2017-10-10 13:50:47.970458218 +0800
@@ -1,10 +1,10 @@
 diffcore-rename.o: diffcore-rename.c cache.h git-compat-util.h \
  compat/bswap.h wildmatch.h strbuf.h hashmap.h advice.h gettext.h \
  convert.h trace.h string-list.h block-sha1/sha1.h diff.h tree-walk.h \
- pathspec.h diffcore.h progress.h
+ pathspec.h object.h diffcore.h progress.h
 
 cache.h:
 
 git-compat-util.h:
 
 compat/bswap.h:
@@ -30,9 +30,11 @@
 diff.h:
 
 tree-walk.h:
 
 pathspec.h:
 
+object.h:
+
 diffcore.h:
 
 progress.h:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/diff.o.d /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/diff.o.d
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/diff.o.d	2017-10-10 13:18:18.058529681 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/diff.o.d	2017-10-10 13:50:49.522458161 +0800
@@ -1,12 +1,12 @@
 diff.o: diff.c cache.h git-compat-util.h compat/bswap.h wildmatch.h \
  strbuf.h hashmap.h advice.h gettext.h convert.h trace.h string-list.h \
- block-sha1/sha1.h quote.h diff.h tree-walk.h pathspec.h diffcore.h \
- delta.h xdiff-interface.h xdiff/xdiff.h color.h attr.h run-command.h \
- argv-array.h utf8.h userdiff.h notes-cache.h notes.h sigchain.h \
- submodule.h ll-merge.h
+ block-sha1/sha1.h quote.h diff.h tree-walk.h pathspec.h object.h \
+ diffcore.h delta.h xdiff-interface.h xdiff/xdiff.h color.h attr.h \
+ run-command.h argv-array.h utf8.h userdiff.h notes-cache.h notes.h \
+ sigchain.h submodule.h ll-merge.h
 
 cache.h:
 
 git-compat-util.h:
 
 compat/bswap.h:
@@ -34,12 +34,14 @@
 diff.h:
 
 tree-walk.h:
 
 pathspec.h:
 
+object.h:
+
 diffcore.h:
 
 delta.h:
 
 xdiff-interface.h:
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/dir.o.d /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/dir.o.d
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/dir.o.d	2017-10-10 13:18:18.446529667 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/dir.o.d	2017-10-10 13:50:50.094458140 +0800
@@ -1,9 +1,9 @@
 dir.o: dir.c cache.h git-compat-util.h compat/bswap.h wildmatch.h \
  strbuf.h hashmap.h advice.h gettext.h convert.h trace.h string-list.h \
- block-sha1/sha1.h dir.h refs.h pathspec.h utf8.h
+ block-sha1/sha1.h dir.h refs.h pathspec.h utf8.h varint.h ewah/ewok.h
 
 cache.h:
 
 git-compat-util.h:
 
 compat/bswap.h:
@@ -30,6 +30,10 @@
 
 refs.h:
 
 pathspec.h:
 
 utf8.h:
+
+varint.h:
+
+ewah/ewok.h:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/grep.o.d /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/grep.o.d
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/grep.o.d	2017-10-10 13:18:20.306529599 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/grep.o.d	2017-10-10 13:50:52.018458069 +0800
@@ -1,11 +1,11 @@
 grep.o: grep.c cache.h git-compat-util.h compat/bswap.h wildmatch.h \
  strbuf.h hashmap.h advice.h gettext.h convert.h trace.h string-list.h \
  block-sha1/sha1.h grep.h color.h kwset.h thread-utils.h userdiff.h \
  notes-cache.h notes.h xdiff-interface.h xdiff/xdiff.h diff.h tree-walk.h \
- pathspec.h diffcore.h
+ pathspec.h object.h diffcore.h
 
 cache.h:
 
 git-compat-util.h:
 
 compat/bswap.h:
@@ -49,7 +49,9 @@
 diff.h:
 
 tree-walk.h:
 
 pathspec.h:
 
+object.h:
+
 diffcore.h:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/ll-merge.o.d /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/ll-merge.o.d
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/ll-merge.o.d	2017-10-10 13:18:21.630529550 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/ll-merge.o.d	2017-10-10 13:50:53.346458021 +0800
@@ -1,10 +1,10 @@
 ll-merge.o: ll-merge.c cache.h git-compat-util.h compat/bswap.h \
  wildmatch.h strbuf.h hashmap.h advice.h gettext.h convert.h trace.h \
  string-list.h block-sha1/sha1.h attr.h xdiff-interface.h xdiff/xdiff.h \
- run-command.h argv-array.h ll-merge.h
+ run-command.h argv-array.h ll-merge.h quote.h
 
 cache.h:
 
 git-compat-util.h:
 
 compat/bswap.h:
@@ -35,6 +35,8 @@
 
 run-command.h:
 
 argv-array.h:
 
 ll-merge.h:
+
+quote.h:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/log-tree.o.d /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/log-tree.o.d
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/log-tree.o.d	2017-10-10 13:18:21.926529539 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/log-tree.o.d	2017-10-10 13:50:53.662458009 +0800
@@ -1,10 +1,10 @@
 log-tree.o: log-tree.c cache.h git-compat-util.h compat/bswap.h \
  wildmatch.h strbuf.h hashmap.h advice.h gettext.h convert.h trace.h \
- string-list.h block-sha1/sha1.h diff.h tree-walk.h pathspec.h commit.h \
- object.h tree.h decorate.h gpg-interface.h tag.h graph.h log-tree.h \
+ string-list.h block-sha1/sha1.h diff.h tree-walk.h pathspec.h object.h \
+ commit.h tree.h decorate.h gpg-interface.h tag.h graph.h log-tree.h \
  revision.h parse-options.h grep.h color.h kwset.h thread-utils.h \
  userdiff.h notes-cache.h notes.h reflog-walk.h refs.h sequencer.h \
  line-log.h diffcore.h
 
 cache.h:
 
@@ -33,16 +33,16 @@
 diff.h:
 
 tree-walk.h:
 
 pathspec.h:
 
-commit.h:
-
 object.h:
 
+commit.h:
+
 tree.h:
 
 decorate.h:
 
 gpg-interface.h:
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/patch-ids.o.d /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/patch-ids.o.d
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/patch-ids.o.d	2017-10-10 13:18:25.114529422 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/patch-ids.o.d	2017-10-10 13:50:56.906457890 +0800
@@ -1,10 +1,10 @@
 patch-ids.o: patch-ids.c cache.h git-compat-util.h compat/bswap.h \
  wildmatch.h strbuf.h hashmap.h advice.h gettext.h convert.h trace.h \
- string-list.h block-sha1/sha1.h diff.h tree-walk.h pathspec.h commit.h \
- object.h tree.h decorate.h gpg-interface.h sha1-lookup.h patch-ids.h
+ string-list.h block-sha1/sha1.h diff.h tree-walk.h pathspec.h object.h \
+ commit.h tree.h decorate.h gpg-interface.h sha1-lookup.h patch-ids.h
 
 cache.h:
 
 git-compat-util.h:
 
 compat/bswap.h:
@@ -30,16 +30,16 @@
 diff.h:
 
 tree-walk.h:
 
 pathspec.h:
 
-commit.h:
-
 object.h:
 
+commit.h:
+
 tree.h:
 
 decorate.h:
 
 gpg-interface.h:
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/path.o.d /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/path.o.d
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/path.o.d	2017-10-10 13:18:25.306529415 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/path.o.d	2017-10-10 13:50:57.166457881 +0800
@@ -1,9 +1,9 @@
 path.o: path.c cache.h git-compat-util.h compat/bswap.h wildmatch.h \
  strbuf.h hashmap.h advice.h gettext.h convert.h trace.h string-list.h \
- block-sha1/sha1.h
+ block-sha1/sha1.h dir.h
 
 cache.h:
 
 git-compat-util.h:
 
 compat/bswap.h:
@@ -22,6 +22,8 @@
 
 trace.h:
 
 string-list.h:
 
 block-sha1/sha1.h:
+
+dir.h:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/submodule.o.d /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/submodule.o.d
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/submodule.o.d	2017-10-10 13:18:32.462529153 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/submodule.o.d	2017-10-10 13:51:04.490457612 +0800
@@ -1,10 +1,10 @@
 submodule.o: submodule.c cache.h git-compat-util.h compat/bswap.h \
  wildmatch.h strbuf.h hashmap.h advice.h gettext.h convert.h trace.h \
  string-list.h block-sha1/sha1.h submodule.h dir.h diff.h tree-walk.h \
- pathspec.h commit.h object.h tree.h decorate.h gpg-interface.h \
+ pathspec.h object.h commit.h tree.h decorate.h gpg-interface.h \
  revision.h parse-options.h grep.h color.h kwset.h thread-utils.h \
  userdiff.h notes-cache.h notes.h run-command.h argv-array.h diffcore.h \
  refs.h sha1-array.h blob.h
 
 cache.h:
 
@@ -37,16 +37,16 @@
 diff.h:
 
 tree-walk.h:
 
 pathspec.h:
 
-commit.h:
-
 object.h:
 
+commit.h:
+
 tree.h:
 
 decorate.h:
 
 gpg-interface.h:
 
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend: test-dump-untracked-cache.o.d
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/tree-diff.o.d /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/tree-diff.o.d
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.depend/tree-diff.o.d	2017-10-10 13:18:33.710529107 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.depend/tree-diff.o.d	2017-10-10 13:51:05.750457566 +0800
@@ -1,10 +1,10 @@
 tree-diff.o: tree-diff.c cache.h git-compat-util.h compat/bswap.h \
  wildmatch.h strbuf.h hashmap.h advice.h gettext.h convert.h trace.h \
- string-list.h block-sha1/sha1.h diff.h tree-walk.h pathspec.h diffcore.h \
- tree.h object.h
+ string-list.h block-sha1/sha1.h diff.h tree-walk.h pathspec.h object.h \
+ diffcore.h tree.h
 
 cache.h:
 
 git-compat-util.h:
 
 compat/bswap.h:
@@ -30,11 +30,11 @@
 diff.h:
 
 tree-walk.h:
 
 pathspec.h:
 
+object.h:
+
 diffcore.h:
 
 tree.h:
-
-object.h:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff.c	2015-07-28 04:34:56.000000000 +0800
@@ -475,32 +475,65 @@
 	      ecbdata->blank_at_eof_in_preimage <= ecbdata->lno_in_preimage &&
 	      ecbdata->blank_at_eof_in_postimage <= ecbdata->lno_in_postimage))
 		return 0;
 	return ws_blank_line(line, len, ecbdata->ws_rule);
 }
 
-static void emit_add_line(const char *reset,
-			  struct emit_callback *ecbdata,
-			  const char *line, int len)
-{
-	const char *ws = diff_get_color(ecbdata->color_diff, DIFF_WHITESPACE);
-	const char *set = diff_get_color(ecbdata->color_diff, DIFF_FILE_NEW);
-
-	if (!*ws)
-		emit_line_0(ecbdata->opt, set, reset, '+', line, len);
-	else if (new_blank_line_at_eof(ecbdata, line, len))
+static void emit_line_checked(const char *reset,
+			      struct emit_callback *ecbdata,
+			      const char *line, int len,
+			      enum color_diff color,
+			      unsigned ws_error_highlight,
+			      char sign)
+{
+	const char *set = diff_get_color(ecbdata->color_diff, color);
+	const char *ws = NULL;
+
+	if (ecbdata->opt->ws_error_highlight & ws_error_highlight) {
+		ws = diff_get_color(ecbdata->color_diff, DIFF_WHITESPACE);
+		if (!*ws)
+			ws = NULL;
+	}
+
+	if (!ws)
+		emit_line_0(ecbdata->opt, set, reset, sign, line, len);
+	else if (sign == '+' && new_blank_line_at_eof(ecbdata, line, len))
 		/* Blank line at EOF - paint '+' as well */
-		emit_line_0(ecbdata->opt, ws, reset, '+', line, len);
+		emit_line_0(ecbdata->opt, ws, reset, sign, line, len);
 	else {
 		/* Emit just the prefix, then the rest. */
-		emit_line_0(ecbdata->opt, set, reset, '+', "", 0);
+		emit_line_0(ecbdata->opt, set, reset, sign, "", 0);
 		ws_check_emit(line, len, ecbdata->ws_rule,
 			      ecbdata->opt->file, set, reset, ws);
 	}
 }
 
+static void emit_add_line(const char *reset,
+			  struct emit_callback *ecbdata,
+			  const char *line, int len)
+{
+	emit_line_checked(reset, ecbdata, line, len,
+			  DIFF_FILE_NEW, WSEH_NEW, '+');
+}
+
+static void emit_del_line(const char *reset,
+			  struct emit_callback *ecbdata,
+			  const char *line, int len)
+{
+	emit_line_checked(reset, ecbdata, line, len,
+			  DIFF_FILE_OLD, WSEH_OLD, '-');
+}
+
+static void emit_context_line(const char *reset,
+			      struct emit_callback *ecbdata,
+			      const char *line, int len)
+{
+	emit_line_checked(reset, ecbdata, line, len,
+			  DIFF_CONTEXT, WSEH_CONTEXT, ' ');
+}
+
 static void emit_hunk_header(struct emit_callback *ecbdata,
 			     const char *line, int len)
 {
 	const char *context = diff_get_color(ecbdata->color_diff, DIFF_CONTEXT);
 	const char *frag = diff_get_color(ecbdata->color_diff, DIFF_FRAGINFO);
 	const char *func = diff_get_color(ecbdata->color_diff, DIFF_FUNCINFO);
@@ -600,24 +633,22 @@
 
 static void emit_rewrite_lines(struct emit_callback *ecb,
 			       int prefix, const char *data, int size)
 {
 	const char *endp = NULL;
 	static const char *nneof = " No newline at end of file\n";
-	const char *old = diff_get_color(ecb->color_diff, DIFF_FILE_OLD);
 	const char *reset = diff_get_color(ecb->color_diff, DIFF_RESET);
 
 	while (0 < size) {
 		int len;
 
 		endp = memchr(data, '\n', size);
 		len = endp ? (endp - data + 1) : size;
 		if (prefix != '+') {
 			ecb->lno_in_preimage++;
-			emit_line_0(ecb->opt, old, reset, '-',
-				    data, len);
+			emit_del_line(reset, ecb, data, len);
 		} else {
 			ecb->lno_in_postimage++;
 			emit_add_line(reset, ecb, data, len);
 		}
 		size -= len;
 		data += len;
@@ -999,15 +1030,14 @@
 	memset(&xecfg, 0, sizeof(xecfg));
 	diff_words_fill(&diff_words->minus, &minus, diff_words->word_regex);
 	diff_words_fill(&diff_words->plus, &plus, diff_words->word_regex);
 	xpp.flags = 0;
 	/* as only the hunk header will be parsed, we need a 0-context */
 	xecfg.ctxlen = 0;
-	if (xdi_diff_outf(&minus, &plus, fn_out_diff_words_aux, diff_words,
-			  &xpp, &xecfg))
-		die("unable to generate word diff");
+	xdi_diff_outf(&minus, &plus, fn_out_diff_words_aux, diff_words,
+		      &xpp, &xecfg);
 	free(minus.ptr);
 	free(plus.ptr);
 	if (diff_words->current_plus != diff_words->plus.text.ptr +
 			diff_words->plus.text.size) {
 		if (color_words_output_graph_prefix(diff_words))
 			fputs(line_prefix, diff_words->opt->file);
@@ -1248,23 +1278,33 @@
 			}
 			emit_line(ecbdata->opt, context, reset, line, len);
 		}
 		return;
 	}
 
-	if (line[0] != '+') {
-		const char *color =
-			diff_get_color(ecbdata->color_diff,
-				       line[0] == '-' ? DIFF_FILE_OLD : DIFF_CONTEXT);
-		ecbdata->lno_in_preimage++;
-		if (line[0] == ' ')
-			ecbdata->lno_in_postimage++;
-		emit_line(ecbdata->opt, color, reset, line, len);
-	} else {
+	switch (line[0]) {
+	case '+':
 		ecbdata->lno_in_postimage++;
 		emit_add_line(reset, ecbdata, line + 1, len - 1);
+		break;
+	case '-':
+		ecbdata->lno_in_preimage++;
+		emit_del_line(reset, ecbdata, line + 1, len - 1);
+		break;
+	case ' ':
+		ecbdata->lno_in_postimage++;
+		ecbdata->lno_in_preimage++;
+		emit_context_line(reset, ecbdata, line + 1, len - 1);
+		break;
+	default:
+		/* incomplete line at the end */
+		ecbdata->lno_in_preimage++;
+		emit_line(ecbdata->opt,
+			  diff_get_color(ecbdata->color_diff, DIFF_CONTEXT),
+			  reset, line, len);
+		break;
 	}
 }
 
 static char *pprint_rename(const char *a, const char *b)
 {
 	const char *old = a;
@@ -2398,15 +2438,14 @@
 		else if (skip_prefix(diffopts, "--unified=", &v))
 			xecfg.ctxlen = strtoul(v, NULL, 10);
 		else if (skip_prefix(diffopts, "-u", &v))
 			xecfg.ctxlen = strtoul(v, NULL, 10);
 		if (o->word_diff)
 			init_diff_words_data(&ecbdata, o, one, two);
-		if (xdi_diff_outf(&mf1, &mf2, fn_out_consume, &ecbdata,
-				  &xpp, &xecfg))
-			die("unable to generate diff for %s", one->path);
+		xdi_diff_outf(&mf1, &mf2, fn_out_consume, &ecbdata,
+			      &xpp, &xecfg);
 		if (o->word_diff)
 			free_diff_words_data(&ecbdata);
 		if (textconv_one)
 			free(mf1.ptr);
 		if (textconv_two)
 			free(mf2.ptr);
@@ -2477,15 +2516,14 @@
 
 		memset(&xpp, 0, sizeof(xpp));
 		memset(&xecfg, 0, sizeof(xecfg));
 		xpp.flags = o->xdl_opts;
 		xecfg.ctxlen = o->context;
 		xecfg.interhunkctxlen = o->interhunkcontext;
-		if (xdi_diff_outf(&mf1, &mf2, diffstat_consume, diffstat,
-				  &xpp, &xecfg))
-			die("unable to generate diffstat for %s", one->path);
+		xdi_diff_outf(&mf1, &mf2, diffstat_consume, diffstat,
+			      &xpp, &xecfg);
 	}
 
 	diff_free_filespec_data(one);
 	diff_free_filespec_data(two);
 }
 
@@ -2525,15 +2563,14 @@
 		xdemitconf_t xecfg;
 
 		memset(&xpp, 0, sizeof(xpp));
 		memset(&xecfg, 0, sizeof(xecfg));
 		xecfg.ctxlen = 1; /* at least one context line */
 		xpp.flags = 0;
-		if (xdi_diff_outf(&mf1, &mf2, checkdiff_consume, &data,
-				  &xpp, &xecfg))
-			die("unable to generate checkdiff for %s", one->path);
+		xdi_diff_outf(&mf1, &mf2, checkdiff_consume, &data,
+			      &xpp, &xecfg);
 
 		if (data.ws_rule & WS_BLANK_AT_EOF) {
 			struct emit_callback ecbdata;
 			int blank_at_eof;
 
 			ecbdata.ws_rule = data.ws_rule;
@@ -3224,12 +3261,13 @@
 
 	options->line_termination = '\n';
 	options->break_opt = -1;
 	options->rename_limit = -1;
 	options->dirstat_permille = diff_dirstat_permille_default;
 	options->context = diff_context_default;
+	options->ws_error_highlight = WSEH_NEW;
 	DIFF_OPT_SET(options, RENAME_EMPTY);
 
 	/* pathchange left =NULL by default */
 	options->change = diff_change;
 	options->add_remove = diff_addremove;
 	options->use_color = diff_use_color_default;
@@ -3610,12 +3648,51 @@
 
 static void enable_patch_output(int *fmt) {
 	*fmt &= ~DIFF_FORMAT_NO_OUTPUT;
 	*fmt |= DIFF_FORMAT_PATCH;
 }
 
+static int parse_one_token(const char **arg, const char *token)
+{
+	const char *rest;
+	if (skip_prefix(*arg, token, &rest) && (!*rest || *rest == ',')) {
+		*arg = rest;
+		return 1;
+	}
+	return 0;
+}
+
+static int parse_ws_error_highlight(struct diff_options *opt, const char *arg)
+{
+	const char *orig_arg = arg;
+	unsigned val = 0;
+	while (*arg) {
+		if (parse_one_token(&arg, "none"))
+			val = 0;
+		else if (parse_one_token(&arg, "default"))
+			val = WSEH_NEW;
+		else if (parse_one_token(&arg, "all"))
+			val = WSEH_NEW | WSEH_OLD | WSEH_CONTEXT;
+		else if (parse_one_token(&arg, "new"))
+			val |= WSEH_NEW;
+		else if (parse_one_token(&arg, "old"))
+			val |= WSEH_OLD;
+		else if (parse_one_token(&arg, "context"))
+			val |= WSEH_CONTEXT;
+		else {
+			error("unknown value after ws-error-highlight=%.*s",
+			      (int)(arg - orig_arg), orig_arg);
+			return 0;
+		}
+		if (*arg)
+			arg++;
+	}
+	opt->ws_error_highlight = val;
+	return 1;
+}
+
 int diff_opt_parse(struct diff_options *options, const char **av, int ac)
 {
 	const char *arg = av[0];
 	const char *optarg;
 	int argcount;
 
@@ -3807,12 +3884,14 @@
 		DIFF_OPT_SET(options, OVERRIDE_SUBMODULE_CONFIG);
 		handle_ignore_submodules_arg(options, arg);
 	} else if (!strcmp(arg, "--submodule"))
 		DIFF_OPT_SET(options, SUBMODULE_LOG);
 	else if (skip_prefix(arg, "--submodule=", &arg))
 		return parse_submodule_opt(options, arg);
+	else if (skip_prefix(arg, "--ws-error-highlight=", &arg))
+		return parse_ws_error_highlight(options, arg);
 
 	/* misc options */
 	else if (!strcmp(arg, "-z"))
 		options->line_termination = 0;
 	else if ((argcount = short_opt('l', av, &optarg))) {
 		options->rename_limit = strtoul(optarg, NULL, 10);
@@ -4426,16 +4505,14 @@
 			continue;
 		}
 
 		xpp.flags = 0;
 		xecfg.ctxlen = 3;
 		xecfg.flags = 0;
-		if (xdi_diff_outf(&mf1, &mf2, patch_id_consume, &data,
-				  &xpp, &xecfg))
-			return error("unable to generate patch-id diff for %s",
-				     p->one->path);
+		xdi_diff_outf(&mf1, &mf2, patch_id_consume, &data,
+			      &xpp, &xecfg);
 	}
 
 	git_SHA1_Final(sha1, &ctx);
 	return 0;
 }
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-break.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-break.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-break.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-break.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-delta.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-delta.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-delta.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-delta.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-order.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-order.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-order.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-order.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-pickaxe.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-pickaxe.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-pickaxe.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-pickaxe.c	2015-07-28 04:34:56.000000000 +0800
@@ -59,14 +59,14 @@
 	memset(&xpp, 0, sizeof(xpp));
 	memset(&xecfg, 0, sizeof(xecfg));
 	ecbdata.regexp = regexp;
 	ecbdata.hit = 0;
 	xecfg.ctxlen = o->context;
 	xecfg.interhunkctxlen = o->interhunkcontext;
-	if (xdi_diff_outf(one, two, diffgrep_consume, &ecbdata, &xpp, &xecfg))
-		return 0;
+	xdi_diff_outf(one, two, diffgrep_consume, &ecbdata,
+		      &xpp, &xecfg);
 	return ecbdata.hit;
 }
 
 static unsigned int contains(mmfile_t *mf, regex_t *regexp, kwset_t kws)
 {
 	unsigned int cnt;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-pickaxe.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-pickaxe.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-pickaxe.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-pickaxe.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-rename.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-rename.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diffcore-rename.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diffcore-rename.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff-delta.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff-delta.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff-delta.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff-delta.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff.h	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff.h	2015-07-28 04:34:56.000000000 +0800
@@ -3,12 +3,13 @@
  */
 #ifndef DIFF_H
 #define DIFF_H
 
 #include "tree-walk.h"
 #include "pathspec.h"
+#include "object.h"
 
 struct rev_info;
 struct diff_options;
 struct diff_queue_struct;
 struct strbuf;
 struct diff_filespec;
@@ -134,12 +135,17 @@
 	int needed_rename_limit;
 	int degraded_cc_to_c;
 	int show_rename_progress;
 	int dirstat_permille;
 	int setup;
 	int abbrev;
+/* white-space error highlighting */
+#define WSEH_NEW 1
+#define WSEH_CONTEXT 2
+#define WSEH_OLD 4
+	unsigned ws_error_highlight;
 	const char *prefix;
 	int prefix_length;
 	const char *stat_sep;
 	long xdl_opts;
 
 	int stat_width;
@@ -204,22 +210,22 @@
                                struct diff_options *opt);
 
 struct combine_diff_path {
 	struct combine_diff_path *next;
 	char *path;
 	unsigned int mode;
-	unsigned char sha1[20];
+	struct object_id oid;
 	struct combine_diff_parent {
 		char status;
 		unsigned int mode;
-		unsigned char sha1[20];
+		struct object_id oid;
 	} parent[FLEX_ARRAY];
 };
 #define combine_diff_path_size(n, l) \
-	st_add4(sizeof(struct combine_diff_path), (l), 1, \
-		st_mult(sizeof(struct combine_diff_parent), (n)))
+	(sizeof(struct combine_diff_path) + \
+	 sizeof(struct combine_diff_parent) * (n) + (l) + 1)
 
 extern void show_combined_diff(struct combine_diff_path *elem, int num_parent,
 			      int dense, struct rev_info *);
 
 extern void diff_tree_combined(const unsigned char *sha1, const struct sha1_array *parents, int dense, struct rev_info *rev);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff-lib.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff-lib.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff-lib.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff-lib.c	2015-07-28 04:34:56.000000000 +0800
@@ -122,13 +122,13 @@
 			dpath = xmalloc(combine_diff_path_size(5, path_len));
 			dpath->path = (char *) &(dpath->parent[5]);
 
 			dpath->next = NULL;
 			memcpy(dpath->path, ce->name, path_len);
 			dpath->path[path_len] = '\0';
-			hashclr(dpath->sha1);
+			oidclr(&dpath->oid);
 			memset(&(dpath->parent[0]), 0,
 			       sizeof(struct combine_diff_parent)*5);
 
 			changed = check_removed(ce, &st);
 			if (!changed)
 				wt_mode = ce_mode_from_stat(ce, st.st_mode);
@@ -152,13 +152,13 @@
 				 * stage #3 (theirs) is the second.
 				 */
 				stage = ce_stage(nce);
 				if (2 <= stage) {
 					int mode = nce->ce_mode;
 					num_compare_stages++;
-					hashcpy(dpath->parent[stage-2].sha1, nce->sha1);
+					hashcpy(dpath->parent[stage-2].oid.hash, nce->sha1);
 					dpath->parent[stage-2].mode = ce_mode_from_stat(nce, mode);
 					dpath->parent[stage-2].status =
 						DIFF_STATUS_MODIFIED;
 				}
 
 				/* diff against the proper unmerged stage */
@@ -336,20 +336,20 @@
 		p = xmalloc(combine_diff_path_size(2, pathlen));
 		p->path = (char *) &p->parent[2];
 		p->next = NULL;
 		memcpy(p->path, new->name, pathlen);
 		p->path[pathlen] = 0;
 		p->mode = mode;
-		hashclr(p->sha1);
+		oidclr(&p->oid);
 		memset(p->parent, 0, 2 * sizeof(struct combine_diff_parent));
 		p->parent[0].status = DIFF_STATUS_MODIFIED;
 		p->parent[0].mode = new->ce_mode;
-		hashcpy(p->parent[0].sha1, new->sha1);
+		hashcpy(p->parent[0].oid.hash, new->sha1);
 		p->parent[1].status = DIFF_STATUS_MODIFIED;
 		p->parent[1].mode = old->ce_mode;
-		hashcpy(p->parent[1].sha1, old->sha1);
+		hashcpy(p->parent[1].oid.hash, old->sha1);
 		show_combined_diff(p, 2, revs->dense_combined_merges, revs);
 		free(p);
 		return 0;
 	}
 
 	oldmode = old->ce_mode;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff-lib.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff-lib.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff-lib.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff-lib.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff-no-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff-no-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff-no-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff-no-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/diff.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/diff.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/dir.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/dir.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/dir.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/dir.c	2015-07-28 04:34:56.000000000 +0800
@@ -10,12 +10,14 @@
 #include "cache.h"
 #include "dir.h"
 #include "refs.h"
 #include "wildmatch.h"
 #include "pathspec.h"
 #include "utf8.h"
+#include "varint.h"
+#include "ewah/ewok.h"
 
 struct path_simplify {
 	int len;
 	const char *path;
 };
 
@@ -29,14 +31,28 @@
 	path_none = 0,
 	path_recurse,
 	path_excluded,
 	path_untracked
 };
 
+/*
+ * Support data structure for our opendir/readdir/closedir wrappers
+ */
+struct cached_dir {
+	DIR *fdir;
+	struct untracked_cache_dir *untracked;
+	int nr_files;
+	int nr_dirs;
+
+	struct dirent *de;
+	const char *file;
+	struct untracked_cache_dir *ucd;
+};
+
 static enum path_treatment read_directory_recursive(struct dir_struct *dir,
-	const char *path, int len,
+	const char *path, int len, struct untracked_cache_dir *untracked,
 	int check_only, const struct path_simplify *simplify);
 static int get_dtype(struct dirent *de, const char *path, int len);
 
 /* helper string functions with support for the ignore_case flag */
 int strcmp_icase(const char *a, const char *b)
 {
@@ -505,13 +521,14 @@
 	x->srcpos = srcpos;
 	ALLOC_GROW(el->excludes, el->nr + 1, el->alloc);
 	el->excludes[el->nr++] = x;
 	x->el = el;
 }
 
-static void *read_skip_worktree_file_from_index(const char *path, size_t *size)
+static void *read_skip_worktree_file_from_index(const char *path, size_t *size,
+						struct sha1_stat *sha1_stat)
 {
 	int pos, len;
 	unsigned long sz;
 	enum object_type type;
 	void *data;
 
@@ -524,12 +541,16 @@
 	data = read_sha1_file(active_cache[pos]->sha1, &type, &sz);
 	if (!data || type != OBJ_BLOB) {
 		free(data);
 		return NULL;
 	}
 	*size = xsize_t(sz);
+	if (sha1_stat) {
+		memset(&sha1_stat->stat, 0, sizeof(sha1_stat->stat));
+		hashcpy(sha1_stat->sha1, active_cache[pos]->sha1);
+	}
 	return data;
 }
 
 /*
  * Frees memory within el which was allocated for exclude patterns and
  * the file buffer.  Does not free el itself.
@@ -568,17 +589,99 @@
 		}
 
 	if (last_space)
 		*last_space = '\0';
 }
 
-int add_excludes_from_file_to_list(const char *fname,
-				   const char *base,
-				   int baselen,
-				   struct exclude_list *el,
-				   int check_index)
+/*
+ * Given a subdirectory name and "dir" of the current directory,
+ * search the subdir in "dir" and return it, or create a new one if it
+ * does not exist in "dir".
+ *
+ * If "name" has the trailing slash, it'll be excluded in the search.
+ */
+static struct untracked_cache_dir *lookup_untracked(struct untracked_cache *uc,
+						    struct untracked_cache_dir *dir,
+						    const char *name, int len)
+{
+	int first, last;
+	struct untracked_cache_dir *d;
+	if (!dir)
+		return NULL;
+	if (len && name[len - 1] == '/')
+		len--;
+	first = 0;
+	last = dir->dirs_nr;
+	while (last > first) {
+		int cmp, next = (last + first) >> 1;
+		d = dir->dirs[next];
+		cmp = strncmp(name, d->name, len);
+		if (!cmp && strlen(d->name) > len)
+			cmp = -1;
+		if (!cmp)
+			return d;
+		if (cmp < 0) {
+			last = next;
+			continue;
+		}
+		first = next+1;
+	}
+
+	uc->dir_created++;
+	d = xmalloc(sizeof(*d) + len + 1);
+	memset(d, 0, sizeof(*d));
+	memcpy(d->name, name, len);
+	d->name[len] = '\0';
+
+	ALLOC_GROW(dir->dirs, dir->dirs_nr + 1, dir->dirs_alloc);
+	memmove(dir->dirs + first + 1, dir->dirs + first,
+		(dir->dirs_nr - first) * sizeof(*dir->dirs));
+	dir->dirs_nr++;
+	dir->dirs[first] = d;
+	return d;
+}
+
+static void do_invalidate_gitignore(struct untracked_cache_dir *dir)
+{
+	int i;
+	dir->valid = 0;
+	dir->untracked_nr = 0;
+	for (i = 0; i < dir->dirs_nr; i++)
+		do_invalidate_gitignore(dir->dirs[i]);
+}
+
+static void invalidate_gitignore(struct untracked_cache *uc,
+				 struct untracked_cache_dir *dir)
+{
+	uc->gitignore_invalidated++;
+	do_invalidate_gitignore(dir);
+}
+
+static void invalidate_directory(struct untracked_cache *uc,
+				 struct untracked_cache_dir *dir)
+{
+	int i;
+	uc->dir_invalidated++;
+	dir->valid = 0;
+	dir->untracked_nr = 0;
+	for (i = 0; i < dir->dirs_nr; i++)
+		dir->dirs[i]->recurse = 0;
+}
+
+/*
+ * Given a file with name "fname", read it (either from disk, or from
+ * the index if "check_index" is non-zero), parse it and store the
+ * exclude rules in "el".
+ *
+ * If "ss" is not NULL, compute SHA-1 of the exclude file and fill
+ * stat data from disk (only valid if add_excludes returns zero). If
+ * ss_valid is non-zero, "ss" must contain good value as input.
+ */
+static int add_excludes(const char *fname, const char *base, int baselen,
+			struct exclude_list *el, int check_index,
+			struct sha1_stat *sha1_stat)
 {
 	struct stat st;
 	int fd, i, lineno = 1;
 	size_t size = 0;
 	char *buf, *entry;
 
@@ -586,36 +689,57 @@
 	if (fd < 0 || fstat(fd, &st) < 0) {
 		if (errno != ENOENT)
 			warn_on_inaccessible(fname);
 		if (0 <= fd)
 			close(fd);
 		if (!check_index ||
-		    (buf = read_skip_worktree_file_from_index(fname, &size)) == NULL)
+		    (buf = read_skip_worktree_file_from_index(fname, &size, sha1_stat)) == NULL)
 			return -1;
 		if (size == 0) {
 			free(buf);
 			return 0;
 		}
 		if (buf[size-1] != '\n') {
 			buf = xrealloc(buf, size+1);
 			buf[size++] = '\n';
 		}
 	} else {
 		size = xsize_t(st.st_size);
 		if (size == 0) {
+			if (sha1_stat) {
+				fill_stat_data(&sha1_stat->stat, &st);
+				hashcpy(sha1_stat->sha1, EMPTY_BLOB_SHA1_BIN);
+				sha1_stat->valid = 1;
+			}
 			close(fd);
 			return 0;
 		}
 		buf = xmalloc(size+1);
 		if (read_in_full(fd, buf, size) != size) {
 			free(buf);
 			close(fd);
 			return -1;
 		}
 		buf[size++] = '\n';
 		close(fd);
+		if (sha1_stat) {
+			int pos;
+			if (sha1_stat->valid &&
+			    !match_stat_data_racy(&the_index, &sha1_stat->stat, &st))
+				; /* no content change, ss->sha1 still good */
+			else if (check_index &&
+				 (pos = cache_name_pos(fname, strlen(fname))) >= 0 &&
+				 !ce_stage(active_cache[pos]) &&
+				 ce_uptodate(active_cache[pos]) &&
+				 !would_convert_to_git(fname))
+				hashcpy(sha1_stat->sha1, active_cache[pos]->sha1);
+			else
+				hash_sha1_file(buf, size, "blob", sha1_stat->sha1);
+			fill_stat_data(&sha1_stat->stat, &st);
+			sha1_stat->valid = 1;
+		}
 	}
 
 	el->filebuf = buf;
 
 	if (skip_utf8_bom(&buf, size))
 		size -= buf - el->filebuf;
@@ -633,12 +757,19 @@
 			entry = buf + i + 1;
 		}
 	}
 	return 0;
 }
 
+int add_excludes_from_file_to_list(const char *fname, const char *base,
+				   int baselen, struct exclude_list *el,
+				   int check_index)
+{
+	return add_excludes(fname, base, baselen, el, check_index, NULL);
+}
+
 struct exclude_list *add_exclude_list(struct dir_struct *dir,
 				      int group_type, const char *src)
 {
 	struct exclude_list *el;
 	struct exclude_list_group *group;
 
@@ -650,20 +781,34 @@
 	return el;
 }
 
 /*
  * Used to set up core.excludesfile and .git/info/exclude lists.
  */
-void add_excludes_from_file(struct dir_struct *dir, const char *fname)
+static void add_excludes_from_file_1(struct dir_struct *dir, const char *fname,
+				     struct sha1_stat *sha1_stat)
 {
 	struct exclude_list *el;
+	/*
+	 * catch setup_standard_excludes() that's called before
+	 * dir->untracked is assigned. That function behaves
+	 * differently when dir->untracked is non-NULL.
+	 */
+	if (!dir->untracked)
+		dir->unmanaged_exclude_files++;
 	el = add_exclude_list(dir, EXC_FILE, fname);
-	if (add_excludes_from_file_to_list(fname, "", 0, el, 0) < 0)
+	if (add_excludes(fname, "", 0, el, 0, sha1_stat) < 0)
 		die("cannot use %s as an exclude file", fname);
 }
 
+void add_excludes_from_file(struct dir_struct *dir, const char *fname)
+{
+	dir->unmanaged_exclude_files++; /* see validate_untracked_cache() */
+	add_excludes_from_file_1(dir, fname, NULL);
+}
+
 int match_basename(const char *basename, int basenamelen,
 		   const char *pattern, int prefix, int patternlen,
 		   int flags)
 {
 	if (prefix == patternlen) {
 		if (patternlen == basenamelen &&
@@ -832,12 +977,13 @@
  */
 static void prep_exclude(struct dir_struct *dir, const char *base, int baselen)
 {
 	struct exclude_list_group *group;
 	struct exclude_list *el;
 	struct exclude_stack *stk = NULL;
+	struct untracked_cache_dir *untracked;
 	int current;
 
 	group = &dir->exclude_list_group[EXC_DIRS];
 
 	/*
 	 * Pop the exclude lists from the EXCL_DIRS exclude_list_group
@@ -869,28 +1015,39 @@
 	if (!dir->basebuf.buf)
 		strbuf_init(&dir->basebuf, PATH_MAX);
 
 	/* Read from the parent directories and push them down. */
 	current = stk ? stk->baselen : -1;
 	strbuf_setlen(&dir->basebuf, current < 0 ? 0 : current);
+	if (dir->untracked)
+		untracked = stk ? stk->ucd : dir->untracked->root;
+	else
+		untracked = NULL;
+
 	while (current < baselen) {
 		const char *cp;
+		struct sha1_stat sha1_stat;
 
 		stk = xcalloc(1, sizeof(*stk));
 		if (current < 0) {
 			cp = base;
 			current = 0;
 		} else {
 			cp = strchr(base + current + 1, '/');
 			if (!cp)
 				die("oops in prep_exclude");
 			cp++;
+			untracked =
+				lookup_untracked(dir->untracked, untracked,
+						 base + current,
+						 cp - base - current);
 		}
 		stk->prev = dir->exclude_stack;
 		stk->baselen = cp - base;
 		stk->exclude_ix = group->nr;
+		stk->ucd = untracked;
 		el = add_exclude_list(dir, EXC_DIRS, NULL);
 		strbuf_add(&dir->basebuf, base + current, stk->baselen - current);
 		assert(stk->baselen == dir->basebuf.len);
 
 		/* Abort if the directory is excluded */
 		if (stk->baselen) {
@@ -907,27 +1064,62 @@
 				dir->exclude_stack = stk;
 				return;
 			}
 		}
 
 		/* Try to read per-directory file */
-		if (dir->exclude_per_dir) {
+		hashclr(sha1_stat.sha1);
+		sha1_stat.valid = 0;
+		if (dir->exclude_per_dir &&
+		    /*
+		     * If we know that no files have been added in
+		     * this directory (i.e. valid_cached_dir() has
+		     * been executed and set untracked->valid) ..
+		     */
+		    (!untracked || !untracked->valid ||
+		     /*
+		      * .. and .gitignore does not exist before
+		      * (i.e. null exclude_sha1 and skip_worktree is
+		      * not set). Then we can skip loading .gitignore,
+		      * which would result in ENOENT anyway.
+		      * skip_worktree is taken care in read_directory()
+		      */
+		     !is_null_sha1(untracked->exclude_sha1))) {
 			/*
 			 * dir->basebuf gets reused by the traversal, but we
 			 * need fname to remain unchanged to ensure the src
 			 * member of each struct exclude correctly
 			 * back-references its source file.  Other invocations
 			 * of add_exclude_list provide stable strings, so we
 			 * strbuf_detach() and free() here in the caller.
 			 */
 			struct strbuf sb = STRBUF_INIT;
 			strbuf_addbuf(&sb, &dir->basebuf);
 			strbuf_addstr(&sb, dir->exclude_per_dir);
 			el->src = strbuf_detach(&sb, NULL);
-			add_excludes_from_file_to_list(el->src, el->src,
-						       stk->baselen, el, 1);
+			add_excludes(el->src, el->src, stk->baselen, el, 1,
+				     untracked ? &sha1_stat : NULL);
+		}
+		/*
+		 * NEEDSWORK: when untracked cache is enabled, prep_exclude()
+		 * will first be called in valid_cached_dir() then maybe many
+		 * times more in last_exclude_matching(). When the cache is
+		 * used, last_exclude_matching() will not be called and
+		 * reading .gitignore content will be a waste.
+		 *
+		 * So when it's called by valid_cached_dir() and we can get
+		 * .gitignore SHA-1 from the index (i.e. .gitignore is not
+		 * modified on work tree), we could delay reading the
+		 * .gitignore content until we absolutely need it in
+		 * last_exclude_matching(). Be careful about ignore rule
+		 * order, though, if you do that.
+		 */
+		if (untracked &&
+		    hashcmp(sha1_stat.sha1, untracked->exclude_sha1)) {
+			invalidate_gitignore(dir->untracked, untracked);
+			hashcpy(untracked->exclude_sha1, sha1_stat.sha1);
 		}
 		dir->exclude_stack = stk;
 		current = stk->baselen;
 	}
 	strbuf_setlen(&dir->basebuf, baselen);
 }
@@ -1102,12 +1294,13 @@
  *  (b) if it looks like a git directory, and we don't have
  *      'no_gitlinks' set we treat it as a gitlink, and show it
  *      as a directory.
  *  (c) otherwise, we recurse into it.
  */
 static enum path_treatment treat_directory(struct dir_struct *dir,
+	struct untracked_cache_dir *untracked,
 	const char *dirname, int len, int exclude,
 	const struct path_simplify *simplify)
 {
 	/* The "len-1" is to strip the final '/' */
 	switch (directory_exists_in_index(dirname, len-1)) {
 	case index_directory:
@@ -1129,13 +1322,15 @@
 
 	/* This is the "show_other_directories" case */
 
 	if (!(dir->flags & DIR_HIDE_EMPTY_DIRECTORIES))
 		return exclude ? path_excluded : path_untracked;
 
-	return read_directory_recursive(dir, dirname, len, 1, simplify);
+	untracked = lookup_untracked(dir->untracked, untracked, dirname, len);
+	return read_directory_recursive(dir, dirname, len,
+					untracked, 1, simplify);
 }
 
 /*
  * This is an inexact early pruning of any recursive directory
  * reading - if the path cannot possibly be in the pathspec,
  * return true, and we'll skip it early.
@@ -1245,12 +1440,13 @@
 	if (S_ISLNK(st.st_mode))
 		return DT_LNK;
 	return dtype;
 }
 
 static enum path_treatment treat_one_path(struct dir_struct *dir,
+					  struct untracked_cache_dir *untracked,
 					  struct strbuf *path,
 					  const struct path_simplify *simplify,
 					  int dtype, struct dirent *de)
 {
 	int exclude;
 	int has_path_in_index = !!cache_file_exists(path->buf, path->len, ignore_case);
@@ -1297,37 +1493,189 @@
 
 	switch (dtype) {
 	default:
 		return path_none;
 	case DT_DIR:
 		strbuf_addch(path, '/');
-		return treat_directory(dir, path->buf, path->len, exclude,
+		return treat_directory(dir, untracked, path->buf, path->len, exclude,
 			simplify);
 	case DT_REG:
 	case DT_LNK:
 		return exclude ? path_excluded : path_untracked;
 	}
 }
 
+static enum path_treatment treat_path_fast(struct dir_struct *dir,
+					   struct untracked_cache_dir *untracked,
+					   struct cached_dir *cdir,
+					   struct strbuf *path,
+					   int baselen,
+					   const struct path_simplify *simplify)
+{
+	strbuf_setlen(path, baselen);
+	if (!cdir->ucd) {
+		strbuf_addstr(path, cdir->file);
+		return path_untracked;
+	}
+	strbuf_addstr(path, cdir->ucd->name);
+	/* treat_one_path() does this before it calls treat_directory() */
+	if (path->buf[path->len - 1] != '/')
+		strbuf_addch(path, '/');
+	if (cdir->ucd->check_only)
+		/*
+		 * check_only is set as a result of treat_directory() getting
+		 * to its bottom. Verify again the same set of directories
+		 * with check_only set.
+		 */
+		return read_directory_recursive(dir, path->buf, path->len,
+						cdir->ucd, 1, simplify);
+	/*
+	 * We get path_recurse in the first run when
+	 * directory_exists_in_index() returns index_nonexistent. We
+	 * are sure that new changes in the index does not impact the
+	 * outcome. Return now.
+	 */
+	return path_recurse;
+}
+
 static enum path_treatment treat_path(struct dir_struct *dir,
-				      struct dirent *de,
+				      struct untracked_cache_dir *untracked,
+				      struct cached_dir *cdir,
 				      struct strbuf *path,
 				      int baselen,
 				      const struct path_simplify *simplify)
 {
 	int dtype;
+	struct dirent *de = cdir->de;
 
+	if (!de)
+		return treat_path_fast(dir, untracked, cdir, path,
+				       baselen, simplify);
 	if (is_dot_or_dotdot(de->d_name) || !strcmp(de->d_name, ".git"))
 		return path_none;
 	strbuf_setlen(path, baselen);
 	strbuf_addstr(path, de->d_name);
 	if (simplify_away(path->buf, path->len, simplify))
 		return path_none;
 
 	dtype = DTYPE(de);
-	return treat_one_path(dir, path, simplify, dtype, de);
+	return treat_one_path(dir, untracked, path, simplify, dtype, de);
+}
+
+static void add_untracked(struct untracked_cache_dir *dir, const char *name)
+{
+	if (!dir)
+		return;
+	ALLOC_GROW(dir->untracked, dir->untracked_nr + 1,
+		   dir->untracked_alloc);
+	dir->untracked[dir->untracked_nr++] = xstrdup(name);
+}
+
+static int valid_cached_dir(struct dir_struct *dir,
+			    struct untracked_cache_dir *untracked,
+			    struct strbuf *path,
+			    int check_only)
+{
+	struct stat st;
+
+	if (!untracked)
+		return 0;
+
+	if (stat(path->len ? path->buf : ".", &st)) {
+		invalidate_directory(dir->untracked, untracked);
+		memset(&untracked->stat_data, 0, sizeof(untracked->stat_data));
+		return 0;
+	}
+	if (!untracked->valid ||
+	    match_stat_data_racy(&the_index, &untracked->stat_data, &st)) {
+		if (untracked->valid)
+			invalidate_directory(dir->untracked, untracked);
+		fill_stat_data(&untracked->stat_data, &st);
+		return 0;
+	}
+
+	if (untracked->check_only != !!check_only) {
+		invalidate_directory(dir->untracked, untracked);
+		return 0;
+	}
+
+	/*
+	 * prep_exclude will be called eventually on this directory,
+	 * but it's called much later in last_exclude_matching(). We
+	 * need it now to determine the validity of the cache for this
+	 * path. The next calls will be nearly no-op, the way
+	 * prep_exclude() is designed.
+	 */
+	if (path->len && path->buf[path->len - 1] != '/') {
+		strbuf_addch(path, '/');
+		prep_exclude(dir, path->buf, path->len);
+		strbuf_setlen(path, path->len - 1);
+	} else
+		prep_exclude(dir, path->buf, path->len);
+
+	/* hopefully prep_exclude() haven't invalidated this entry... */
+	return untracked->valid;
+}
+
+static int open_cached_dir(struct cached_dir *cdir,
+			   struct dir_struct *dir,
+			   struct untracked_cache_dir *untracked,
+			   struct strbuf *path,
+			   int check_only)
+{
+	memset(cdir, 0, sizeof(*cdir));
+	cdir->untracked = untracked;
+	if (valid_cached_dir(dir, untracked, path, check_only))
+		return 0;
+	cdir->fdir = opendir(path->len ? path->buf : ".");
+	if (dir->untracked)
+		dir->untracked->dir_opened++;
+	if (!cdir->fdir)
+		return -1;
+	return 0;
+}
+
+static int read_cached_dir(struct cached_dir *cdir)
+{
+	if (cdir->fdir) {
+		cdir->de = readdir(cdir->fdir);
+		if (!cdir->de)
+			return -1;
+		return 0;
+	}
+	while (cdir->nr_dirs < cdir->untracked->dirs_nr) {
+		struct untracked_cache_dir *d = cdir->untracked->dirs[cdir->nr_dirs];
+		if (!d->recurse) {
+			cdir->nr_dirs++;
+			continue;
+		}
+		cdir->ucd = d;
+		cdir->nr_dirs++;
+		return 0;
+	}
+	cdir->ucd = NULL;
+	if (cdir->nr_files < cdir->untracked->untracked_nr) {
+		struct untracked_cache_dir *d = cdir->untracked;
+		cdir->file = d->untracked[cdir->nr_files++];
+		return 0;
+	}
+	return -1;
+}
+
+static void close_cached_dir(struct cached_dir *cdir)
+{
+	if (cdir->fdir)
+		closedir(cdir->fdir);
+	/*
+	 * We have gone through this directory and found no untracked
+	 * entries. Mark it valid.
+	 */
+	if (cdir->untracked) {
+		cdir->untracked->valid = 1;
+		cdir->untracked->recurse = 1;
+	}
 }
 
 /*
  * Read a directory tree. We currently ignore anything but
  * directories, regular files and symlinks. That's because git
  * doesn't handle them at all yet. Maybe that will change some
@@ -1337,44 +1685,54 @@
  * That likely will not change.
  *
  * Returns the most significant path_treatment value encountered in the scan.
  */
 static enum path_treatment read_directory_recursive(struct dir_struct *dir,
 				    const char *base, int baselen,
-				    int check_only,
+				    struct untracked_cache_dir *untracked, int check_only,
 				    const struct path_simplify *simplify)
 {
-	DIR *fdir;
+	struct cached_dir cdir;
 	enum path_treatment state, subdir_state, dir_state = path_none;
-	struct dirent *de;
 	struct strbuf path = STRBUF_INIT;
 
 	strbuf_add(&path, base, baselen);
 
-	fdir = opendir(path.len ? path.buf : ".");
-	if (!fdir)
+	if (open_cached_dir(&cdir, dir, untracked, &path, check_only))
 		goto out;
 
-	while ((de = readdir(fdir)) != NULL) {
+	if (untracked)
+		untracked->check_only = !!check_only;
+
+	while (!read_cached_dir(&cdir)) {
 		/* check how the file or directory should be treated */
-		state = treat_path(dir, de, &path, baselen, simplify);
+		state = treat_path(dir, untracked, &cdir, &path, baselen, simplify);
+
 		if (state > dir_state)
 			dir_state = state;
 
 		/* recurse into subdir if instructed by treat_path */
 		if (state == path_recurse) {
-			subdir_state = read_directory_recursive(dir, path.buf,
-				path.len, check_only, simplify);
+			struct untracked_cache_dir *ud;
+			ud = lookup_untracked(dir->untracked, untracked,
+					      path.buf + baselen,
+					      path.len - baselen);
+			subdir_state =
+				read_directory_recursive(dir, path.buf, path.len,
+							 ud, check_only, simplify);
 			if (subdir_state > dir_state)
 				dir_state = subdir_state;
 		}
 
 		if (check_only) {
 			/* abort early if maximum state has been reached */
-			if (dir_state == path_untracked)
+			if (dir_state == path_untracked) {
+				if (cdir.fdir)
+					add_untracked(untracked, path.buf + baselen);
 				break;
+			}
 			/* skip the dir_add_* part */
 			continue;
 		}
 
 		/* add the path to the appropriate result list */
 		switch (state) {
@@ -1386,21 +1744,24 @@
 				exclude_matches_pathspec(path.buf, path.len,
 					simplify)))
 				dir_add_ignored(dir, path.buf, path.len);
 			break;
 
 		case path_untracked:
-			if (!(dir->flags & DIR_SHOW_IGNORED))
-				dir_add_name(dir, path.buf, path.len);
+			if (dir->flags & DIR_SHOW_IGNORED)
+				break;
+			dir_add_name(dir, path.buf, path.len);
+			if (cdir.fdir)
+				add_untracked(untracked, path.buf + baselen);
 			break;
 
 		default:
 			break;
 		}
 	}
-	closedir(fdir);
+	close_cached_dir(&cdir);
  out:
 	strbuf_release(&path);
 
 	return dir_state;
 }
 
@@ -1464,28 +1825,158 @@
 		strbuf_setlen(&sb, 0);
 		strbuf_add(&sb, path, baselen);
 		if (!is_directory(sb.buf))
 			break;
 		if (simplify_away(sb.buf, sb.len, simplify))
 			break;
-		if (treat_one_path(dir, &sb, simplify,
+		if (treat_one_path(dir, NULL, &sb, simplify,
 				   DT_DIR, NULL) == path_none)
 			break; /* do not recurse into it */
 		if (len <= baselen) {
 			rc = 1;
 			break; /* finished checking */
 		}
 	}
 	strbuf_release(&sb);
 	dir->flags = old_flags;
 	return rc;
 }
 
+static const char *get_ident_string(void)
+{
+	static struct strbuf sb = STRBUF_INIT;
+	struct utsname uts;
+
+	if (sb.len)
+		return sb.buf;
+	if (uname(&uts))
+		die_errno(_("failed to get kernel name and information"));
+	strbuf_addf(&sb, "Location %s, system %s %s %s", get_git_work_tree(),
+		    uts.sysname, uts.release, uts.version);
+	return sb.buf;
+}
+
+static int ident_in_untracked(const struct untracked_cache *uc)
+{
+	const char *end = uc->ident.buf + uc->ident.len;
+	const char *p   = uc->ident.buf;
+
+	for (p = uc->ident.buf; p < end; p += strlen(p) + 1)
+		if (!strcmp(p, get_ident_string()))
+			return 1;
+	return 0;
+}
+
+void add_untracked_ident(struct untracked_cache *uc)
+{
+	if (ident_in_untracked(uc))
+		return;
+	strbuf_addstr(&uc->ident, get_ident_string());
+	/* this strbuf contains a list of strings, save NUL too */
+	strbuf_addch(&uc->ident, 0);
+}
+
+static struct untracked_cache_dir *validate_untracked_cache(struct dir_struct *dir,
+						      int base_len,
+						      const struct pathspec *pathspec)
+{
+	struct untracked_cache_dir *root;
+	int i;
+
+	if (!dir->untracked || getenv("GIT_DISABLE_UNTRACKED_CACHE"))
+		return NULL;
+
+	/*
+	 * We only support $GIT_DIR/info/exclude and core.excludesfile
+	 * as the global ignore rule files. Any other additions
+	 * (e.g. from command line) invalidate the cache. This
+	 * condition also catches running setup_standard_excludes()
+	 * before setting dir->untracked!
+	 */
+	if (dir->unmanaged_exclude_files)
+		return NULL;
+
+	/*
+	 * Optimize for the main use case only: whole-tree git
+	 * status. More work involved in treat_leading_path() if we
+	 * use cache on just a subset of the worktree. pathspec
+	 * support could make the matter even worse.
+	 */
+	if (base_len || (pathspec && pathspec->nr))
+		return NULL;
+
+	/* Different set of flags may produce different results */
+	if (dir->flags != dir->untracked->dir_flags ||
+	    /*
+	     * See treat_directory(), case index_nonexistent. Without
+	     * this flag, we may need to also cache .git file content
+	     * for the resolve_gitlink_ref() call, which we don't.
+	     */
+	    !(dir->flags & DIR_SHOW_OTHER_DIRECTORIES) ||
+	    /* We don't support collecting ignore files */
+	    (dir->flags & (DIR_SHOW_IGNORED | DIR_SHOW_IGNORED_TOO |
+			   DIR_COLLECT_IGNORED)))
+		return NULL;
+
+	/*
+	 * If we use .gitignore in the cache and now you change it to
+	 * .gitexclude, everything will go wrong.
+	 */
+	if (dir->exclude_per_dir != dir->untracked->exclude_per_dir &&
+	    strcmp(dir->exclude_per_dir, dir->untracked->exclude_per_dir))
+		return NULL;
+
+	/*
+	 * EXC_CMDL is not considered in the cache. If people set it,
+	 * skip the cache.
+	 */
+	if (dir->exclude_list_group[EXC_CMDL].nr)
+		return NULL;
+
+	/*
+	 * An optimization in prep_exclude() does not play well with
+	 * CE_SKIP_WORKTREE. It's a rare case anyway, if a single
+	 * entry has that bit set, disable the whole untracked cache.
+	 */
+	for (i = 0; i < active_nr; i++)
+		if (ce_skip_worktree(active_cache[i]))
+			return NULL;
+
+	if (!ident_in_untracked(dir->untracked)) {
+		warning(_("Untracked cache is disabled on this system."));
+		return NULL;
+	}
+
+	if (!dir->untracked->root) {
+		const int len = sizeof(*dir->untracked->root);
+		dir->untracked->root = xmalloc(len);
+		memset(dir->untracked->root, 0, len);
+	}
+
+	/* Validate $GIT_DIR/info/exclude and core.excludesfile */
+	root = dir->untracked->root;
+	if (hashcmp(dir->ss_info_exclude.sha1,
+		    dir->untracked->ss_info_exclude.sha1)) {
+		invalidate_gitignore(dir->untracked, root);
+		dir->untracked->ss_info_exclude = dir->ss_info_exclude;
+	}
+	if (hashcmp(dir->ss_excludes_file.sha1,
+		    dir->untracked->ss_excludes_file.sha1)) {
+		invalidate_gitignore(dir->untracked, root);
+		dir->untracked->ss_excludes_file = dir->ss_excludes_file;
+	}
+
+	/* Make sure this directory is not dropped out at saving phase */
+	root->recurse = 1;
+	return root;
+}
+
 int read_directory(struct dir_struct *dir, const char *path, int len, const struct pathspec *pathspec)
 {
 	struct path_simplify *simplify;
+	struct untracked_cache_dir *untracked;
 
 	/*
 	 * Check out create_simplify()
 	 */
 	if (pathspec)
 		GUARD_PATHSPEC(pathspec,
@@ -1503,17 +1994,45 @@
 	 * exclude patterns are treated like positive ones in
 	 * create_simplify. Usually exclude patterns should be a
 	 * subset of positive ones, which has no impacts on
 	 * create_simplify().
 	 */
 	simplify = create_simplify(pathspec ? pathspec->_raw : NULL);
+	untracked = validate_untracked_cache(dir, len, pathspec);
+	if (!untracked)
+		/*
+		 * make sure untracked cache code path is disabled,
+		 * e.g. prep_exclude()
+		 */
+		dir->untracked = NULL;
 	if (!len || treat_leading_path(dir, path, len, simplify))
-		read_directory_recursive(dir, path, len, 0, simplify);
+		read_directory_recursive(dir, path, len, untracked, 0, simplify);
 	free_simplify(simplify);
 	qsort(dir->entries, dir->nr, sizeof(struct dir_entry *), cmp_name);
 	qsort(dir->ignored, dir->ignored_nr, sizeof(struct dir_entry *), cmp_name);
+	if (dir->untracked) {
+		static struct trace_key trace_untracked_stats = TRACE_KEY_INIT(UNTRACKED_STATS);
+		trace_printf_key(&trace_untracked_stats,
+				 "node creation: %u\n"
+				 "gitignore invalidation: %u\n"
+				 "directory invalidation: %u\n"
+				 "opendir: %u\n",
+				 dir->untracked->dir_created,
+				 dir->untracked->gitignore_invalidated,
+				 dir->untracked->dir_invalidated,
+				 dir->untracked->dir_opened);
+		if (dir->untracked == the_index.untracked &&
+		    (dir->untracked->dir_opened ||
+		     dir->untracked->gitignore_invalidated ||
+		     dir->untracked->dir_invalidated))
+			the_index.cache_changed |= UNTRACKED_CHANGED;
+		if (dir->untracked != the_index.untracked) {
+			free(dir->untracked);
+			dir->untracked = NULL;
+		}
+	}
 	return dir->nr;
 }
 
 int file_exists(const char *f)
 {
 	struct stat sb;
@@ -1673,18 +2192,20 @@
 	dir->exclude_per_dir = ".gitignore";
 
 	/* core.excludefile defaulting to $XDG_HOME/git/ignore */
 	if (!excludes_file)
 		excludes_file = xdg_config_home("ignore");
 	if (excludes_file && !access_or_warn(excludes_file, R_OK, 0))
-		add_excludes_from_file(dir, excludes_file);
+		add_excludes_from_file_1(dir, excludes_file,
+					 dir->untracked ? &dir->ss_excludes_file : NULL);
 
 	/* per repository user preference */
 	path = git_path("info/exclude");
 	if (!access_or_warn(path, R_OK, 0))
-		add_excludes_from_file(dir, path);
+		add_excludes_from_file_1(dir, path,
+					 dir->untracked ? &dir->ss_info_exclude : NULL);
 }
 
 int remove_path(const char *name)
 {
 	char *slash;
 
@@ -1730,6 +2251,407 @@
 		struct exclude_stack *prev = stk->prev;
 		free(stk);
 		stk = prev;
 	}
 	strbuf_release(&dir->basebuf);
 }
+
+struct ondisk_untracked_cache {
+	struct stat_data info_exclude_stat;
+	struct stat_data excludes_file_stat;
+	uint32_t dir_flags;
+	unsigned char info_exclude_sha1[20];
+	unsigned char excludes_file_sha1[20];
+	char exclude_per_dir[FLEX_ARRAY];
+};
+
+#define ouc_size(len) (offsetof(struct ondisk_untracked_cache, exclude_per_dir) + len + 1)
+
+struct write_data {
+	int index;	   /* number of written untracked_cache_dir */
+	struct ewah_bitmap *check_only; /* from untracked_cache_dir */
+	struct ewah_bitmap *valid;	/* from untracked_cache_dir */
+	struct ewah_bitmap *sha1_valid; /* set if exclude_sha1 is not null */
+	struct strbuf out;
+	struct strbuf sb_stat;
+	struct strbuf sb_sha1;
+};
+
+static void stat_data_to_disk(struct stat_data *to, const struct stat_data *from)
+{
+	to->sd_ctime.sec  = htonl(from->sd_ctime.sec);
+	to->sd_ctime.nsec = htonl(from->sd_ctime.nsec);
+	to->sd_mtime.sec  = htonl(from->sd_mtime.sec);
+	to->sd_mtime.nsec = htonl(from->sd_mtime.nsec);
+	to->sd_dev	  = htonl(from->sd_dev);
+	to->sd_ino	  = htonl(from->sd_ino);
+	to->sd_uid	  = htonl(from->sd_uid);
+	to->sd_gid	  = htonl(from->sd_gid);
+	to->sd_size	  = htonl(from->sd_size);
+}
+
+static void write_one_dir(struct untracked_cache_dir *untracked,
+			  struct write_data *wd)
+{
+	struct stat_data stat_data;
+	struct strbuf *out = &wd->out;
+	unsigned char intbuf[16];
+	unsigned int intlen, value;
+	int i = wd->index++;
+
+	/*
+	 * untracked_nr should be reset whenever valid is clear, but
+	 * for safety..
+	 */
+	if (!untracked->valid) {
+		untracked->untracked_nr = 0;
+		untracked->check_only = 0;
+	}
+
+	if (untracked->check_only)
+		ewah_set(wd->check_only, i);
+	if (untracked->valid) {
+		ewah_set(wd->valid, i);
+		stat_data_to_disk(&stat_data, &untracked->stat_data);
+		strbuf_add(&wd->sb_stat, &stat_data, sizeof(stat_data));
+	}
+	if (!is_null_sha1(untracked->exclude_sha1)) {
+		ewah_set(wd->sha1_valid, i);
+		strbuf_add(&wd->sb_sha1, untracked->exclude_sha1, 20);
+	}
+
+	intlen = encode_varint(untracked->untracked_nr, intbuf);
+	strbuf_add(out, intbuf, intlen);
+
+	/* skip non-recurse directories */
+	for (i = 0, value = 0; i < untracked->dirs_nr; i++)
+		if (untracked->dirs[i]->recurse)
+			value++;
+	intlen = encode_varint(value, intbuf);
+	strbuf_add(out, intbuf, intlen);
+
+	strbuf_add(out, untracked->name, strlen(untracked->name) + 1);
+
+	for (i = 0; i < untracked->untracked_nr; i++)
+		strbuf_add(out, untracked->untracked[i],
+			   strlen(untracked->untracked[i]) + 1);
+
+	for (i = 0; i < untracked->dirs_nr; i++)
+		if (untracked->dirs[i]->recurse)
+			write_one_dir(untracked->dirs[i], wd);
+}
+
+void write_untracked_extension(struct strbuf *out, struct untracked_cache *untracked)
+{
+	struct ondisk_untracked_cache *ouc;
+	struct write_data wd;
+	unsigned char varbuf[16];
+	int len = 0, varint_len;
+	if (untracked->exclude_per_dir)
+		len = strlen(untracked->exclude_per_dir);
+	ouc = xmalloc(sizeof(*ouc) + len + 1);
+	stat_data_to_disk(&ouc->info_exclude_stat, &untracked->ss_info_exclude.stat);
+	stat_data_to_disk(&ouc->excludes_file_stat, &untracked->ss_excludes_file.stat);
+	hashcpy(ouc->info_exclude_sha1, untracked->ss_info_exclude.sha1);
+	hashcpy(ouc->excludes_file_sha1, untracked->ss_excludes_file.sha1);
+	ouc->dir_flags = htonl(untracked->dir_flags);
+	memcpy(ouc->exclude_per_dir, untracked->exclude_per_dir, len + 1);
+
+	varint_len = encode_varint(untracked->ident.len, varbuf);
+	strbuf_add(out, varbuf, varint_len);
+	strbuf_add(out, untracked->ident.buf, untracked->ident.len);
+
+	strbuf_add(out, ouc, ouc_size(len));
+	free(ouc);
+	ouc = NULL;
+
+	if (!untracked->root) {
+		varint_len = encode_varint(0, varbuf);
+		strbuf_add(out, varbuf, varint_len);
+		return;
+	}
+
+	wd.index      = 0;
+	wd.check_only = ewah_new();
+	wd.valid      = ewah_new();
+	wd.sha1_valid = ewah_new();
+	strbuf_init(&wd.out, 1024);
+	strbuf_init(&wd.sb_stat, 1024);
+	strbuf_init(&wd.sb_sha1, 1024);
+	write_one_dir(untracked->root, &wd);
+
+	varint_len = encode_varint(wd.index, varbuf);
+	strbuf_add(out, varbuf, varint_len);
+	strbuf_addbuf(out, &wd.out);
+	ewah_serialize_strbuf(wd.valid, out);
+	ewah_serialize_strbuf(wd.check_only, out);
+	ewah_serialize_strbuf(wd.sha1_valid, out);
+	strbuf_addbuf(out, &wd.sb_stat);
+	strbuf_addbuf(out, &wd.sb_sha1);
+	strbuf_addch(out, '\0'); /* safe guard for string lists */
+
+	ewah_free(wd.valid);
+	ewah_free(wd.check_only);
+	ewah_free(wd.sha1_valid);
+	strbuf_release(&wd.out);
+	strbuf_release(&wd.sb_stat);
+	strbuf_release(&wd.sb_sha1);
+}
+
+static void free_untracked(struct untracked_cache_dir *ucd)
+{
+	int i;
+	if (!ucd)
+		return;
+	for (i = 0; i < ucd->dirs_nr; i++)
+		free_untracked(ucd->dirs[i]);
+	for (i = 0; i < ucd->untracked_nr; i++)
+		free(ucd->untracked[i]);
+	free(ucd->untracked);
+	free(ucd->dirs);
+	free(ucd);
+}
+
+void free_untracked_cache(struct untracked_cache *uc)
+{
+	if (uc)
+		free_untracked(uc->root);
+	free(uc);
+}
+
+struct read_data {
+	int index;
+	struct untracked_cache_dir **ucd;
+	struct ewah_bitmap *check_only;
+	struct ewah_bitmap *valid;
+	struct ewah_bitmap *sha1_valid;
+	const unsigned char *data;
+	const unsigned char *end;
+};
+
+static void stat_data_from_disk(struct stat_data *to, const struct stat_data *from)
+{
+	to->sd_ctime.sec  = get_be32(&from->sd_ctime.sec);
+	to->sd_ctime.nsec = get_be32(&from->sd_ctime.nsec);
+	to->sd_mtime.sec  = get_be32(&from->sd_mtime.sec);
+	to->sd_mtime.nsec = get_be32(&from->sd_mtime.nsec);
+	to->sd_dev	  = get_be32(&from->sd_dev);
+	to->sd_ino	  = get_be32(&from->sd_ino);
+	to->sd_uid	  = get_be32(&from->sd_uid);
+	to->sd_gid	  = get_be32(&from->sd_gid);
+	to->sd_size	  = get_be32(&from->sd_size);
+}
+
+static int read_one_dir(struct untracked_cache_dir **untracked_,
+			struct read_data *rd)
+{
+	struct untracked_cache_dir ud, *untracked;
+	const unsigned char *next, *data = rd->data, *end = rd->end;
+	unsigned int value;
+	int i, len;
+
+	memset(&ud, 0, sizeof(ud));
+
+	next = data;
+	value = decode_varint(&next);
+	if (next > end)
+		return -1;
+	ud.recurse	   = 1;
+	ud.untracked_alloc = value;
+	ud.untracked_nr	   = value;
+	if (ud.untracked_nr)
+		ud.untracked = xmalloc(sizeof(*ud.untracked) * ud.untracked_nr);
+	data = next;
+
+	next = data;
+	ud.dirs_alloc = ud.dirs_nr = decode_varint(&next);
+	if (next > end)
+		return -1;
+	ud.dirs = xmalloc(sizeof(*ud.dirs) * ud.dirs_nr);
+	data = next;
+
+	len = strlen((const char *)data);
+	next = data + len + 1;
+	if (next > rd->end)
+		return -1;
+	*untracked_ = untracked = xmalloc(sizeof(*untracked) + len);
+	memcpy(untracked, &ud, sizeof(ud));
+	memcpy(untracked->name, data, len + 1);
+	data = next;
+
+	for (i = 0; i < untracked->untracked_nr; i++) {
+		len = strlen((const char *)data);
+		next = data + len + 1;
+		if (next > rd->end)
+			return -1;
+		untracked->untracked[i] = xstrdup((const char*)data);
+		data = next;
+	}
+
+	rd->ucd[rd->index++] = untracked;
+	rd->data = data;
+
+	for (i = 0; i < untracked->dirs_nr; i++) {
+		len = read_one_dir(untracked->dirs + i, rd);
+		if (len < 0)
+			return -1;
+	}
+	return 0;
+}
+
+static void set_check_only(size_t pos, void *cb)
+{
+	struct read_data *rd = cb;
+	struct untracked_cache_dir *ud = rd->ucd[pos];
+	ud->check_only = 1;
+}
+
+static void read_stat(size_t pos, void *cb)
+{
+	struct read_data *rd = cb;
+	struct untracked_cache_dir *ud = rd->ucd[pos];
+	if (rd->data + sizeof(struct stat_data) > rd->end) {
+		rd->data = rd->end + 1;
+		return;
+	}
+	stat_data_from_disk(&ud->stat_data, (struct stat_data *)rd->data);
+	rd->data += sizeof(struct stat_data);
+	ud->valid = 1;
+}
+
+static void read_sha1(size_t pos, void *cb)
+{
+	struct read_data *rd = cb;
+	struct untracked_cache_dir *ud = rd->ucd[pos];
+	if (rd->data + 20 > rd->end) {
+		rd->data = rd->end + 1;
+		return;
+	}
+	hashcpy(ud->exclude_sha1, rd->data);
+	rd->data += 20;
+}
+
+static void load_sha1_stat(struct sha1_stat *sha1_stat,
+			   const struct stat_data *stat,
+			   const unsigned char *sha1)
+{
+	stat_data_from_disk(&sha1_stat->stat, stat);
+	hashcpy(sha1_stat->sha1, sha1);
+	sha1_stat->valid = 1;
+}
+
+struct untracked_cache *read_untracked_extension(const void *data, unsigned long sz)
+{
+	const struct ondisk_untracked_cache *ouc;
+	struct untracked_cache *uc;
+	struct read_data rd;
+	const unsigned char *next = data, *end = (const unsigned char *)data + sz;
+	const char *ident;
+	int ident_len, len;
+
+	if (sz <= 1 || end[-1] != '\0')
+		return NULL;
+	end--;
+
+	ident_len = decode_varint(&next);
+	if (next + ident_len > end)
+		return NULL;
+	ident = (const char *)next;
+	next += ident_len;
+
+	ouc = (const struct ondisk_untracked_cache *)next;
+	if (next + ouc_size(0) > end)
+		return NULL;
+
+	uc = xcalloc(1, sizeof(*uc));
+	strbuf_init(&uc->ident, ident_len);
+	strbuf_add(&uc->ident, ident, ident_len);
+	load_sha1_stat(&uc->ss_info_exclude, &ouc->info_exclude_stat,
+		       ouc->info_exclude_sha1);
+	load_sha1_stat(&uc->ss_excludes_file, &ouc->excludes_file_stat,
+		       ouc->excludes_file_sha1);
+	uc->dir_flags = get_be32(&ouc->dir_flags);
+	uc->exclude_per_dir = xstrdup(ouc->exclude_per_dir);
+	/* NUL after exclude_per_dir is covered by sizeof(*ouc) */
+	next += ouc_size(strlen(ouc->exclude_per_dir));
+	if (next >= end)
+		goto done2;
+
+	len = decode_varint(&next);
+	if (next > end || len == 0)
+		goto done2;
+
+	rd.valid      = ewah_new();
+	rd.check_only = ewah_new();
+	rd.sha1_valid = ewah_new();
+	rd.data	      = next;
+	rd.end	      = end;
+	rd.index      = 0;
+	rd.ucd        = xmalloc(sizeof(*rd.ucd) * len);
+
+	if (read_one_dir(&uc->root, &rd) || rd.index != len)
+		goto done;
+
+	next = rd.data;
+	len = ewah_read_mmap(rd.valid, next, end - next);
+	if (len < 0)
+		goto done;
+
+	next += len;
+	len = ewah_read_mmap(rd.check_only, next, end - next);
+	if (len < 0)
+		goto done;
+
+	next += len;
+	len = ewah_read_mmap(rd.sha1_valid, next, end - next);
+	if (len < 0)
+		goto done;
+
+	ewah_each_bit(rd.check_only, set_check_only, &rd);
+	rd.data = next + len;
+	ewah_each_bit(rd.valid, read_stat, &rd);
+	ewah_each_bit(rd.sha1_valid, read_sha1, &rd);
+	next = rd.data;
+
+done:
+	free(rd.ucd);
+	ewah_free(rd.valid);
+	ewah_free(rd.check_only);
+	ewah_free(rd.sha1_valid);
+done2:
+	if (next != end) {
+		free_untracked_cache(uc);
+		uc = NULL;
+	}
+	return uc;
+}
+
+void untracked_cache_invalidate_path(struct index_state *istate,
+				     const char *path)
+{
+	const char *sep;
+	struct untracked_cache_dir *d;
+	if (!istate->untracked || !istate->untracked->root)
+		return;
+	sep = strrchr(path, '/');
+	if (sep)
+		d = lookup_untracked(istate->untracked,
+				     istate->untracked->root,
+				     path, sep - path);
+	else
+		d = istate->untracked->root;
+	istate->untracked->dir_invalidated++;
+	d->valid = 0;
+	d->untracked_nr = 0;
+}
+
+void untracked_cache_remove_from_index(struct index_state *istate,
+				       const char *path)
+{
+	untracked_cache_invalidate_path(istate, path);
+}
+
+void untracked_cache_add_to_index(struct index_state *istate,
+				  const char *path)
+{
+	untracked_cache_invalidate_path(istate, path);
+}
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/dir.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/dir.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/dir.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/dir.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/dir.h	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/dir.h	2015-07-28 04:34:56.000000000 +0800
@@ -63,19 +63,87 @@
  * directory is traversed.
  */
 struct exclude_stack {
 	struct exclude_stack *prev; /* the struct exclude_stack for the parent directory */
 	int baselen;
 	int exclude_ix; /* index of exclude_list within EXC_DIRS exclude_list_group */
+	struct untracked_cache_dir *ucd;
 };
 
 struct exclude_list_group {
 	int nr, alloc;
 	struct exclude_list *el;
 };
 
+struct sha1_stat {
+	struct stat_data stat;
+	unsigned char sha1[20];
+	int valid;
+};
+
+/*
+ *  Untracked cache
+ *
+ *  The following inputs are sufficient to determine what files in a
+ *  directory are excluded:
+ *
+ *   - The list of files and directories of the directory in question
+ *   - The $GIT_DIR/index
+ *   - dir_struct flags
+ *   - The content of $GIT_DIR/info/exclude
+ *   - The content of core.excludesfile
+ *   - The content (or the lack) of .gitignore of all parent directories
+ *     from $GIT_WORK_TREE
+ *   - The check_only flag in read_directory_recursive (for
+ *     DIR_HIDE_EMPTY_DIRECTORIES)
+ *
+ *  The first input can be checked using directory mtime. In many
+ *  filesystems, directory mtime (stat_data field) is updated when its
+ *  files or direct subdirs are added or removed.
+ *
+ *  The second one can be hooked from cache_tree_invalidate_path().
+ *  Whenever a file (or a submodule) is added or removed from a
+ *  directory, we invalidate that directory.
+ *
+ *  The remaining inputs are easy, their SHA-1 could be used to verify
+ *  their contents (exclude_sha1[], info_exclude_sha1[] and
+ *  excludes_file_sha1[])
+ */
+struct untracked_cache_dir {
+	struct untracked_cache_dir **dirs;
+	char **untracked;
+	struct stat_data stat_data;
+	unsigned int untracked_alloc, dirs_nr, dirs_alloc;
+	unsigned int untracked_nr;
+	unsigned int check_only : 1;
+	/* all data except 'dirs' in this struct are good */
+	unsigned int valid : 1;
+	unsigned int recurse : 1;
+	/* null SHA-1 means this directory does not have .gitignore */
+	unsigned char exclude_sha1[20];
+	char name[FLEX_ARRAY];
+};
+
+struct untracked_cache {
+	struct sha1_stat ss_info_exclude;
+	struct sha1_stat ss_excludes_file;
+	const char *exclude_per_dir;
+	struct strbuf ident;
+	/*
+	 * dir_struct#flags must match dir_flags or the untracked
+	 * cache is ignored.
+	 */
+	unsigned dir_flags;
+	struct untracked_cache_dir *root;
+	/* Statistics */
+	int dir_created;
+	int gitignore_invalidated;
+	int dir_invalidated;
+	int dir_opened;
+};
+
 struct dir_struct {
 	int nr, alloc;
 	int ignored_nr, ignored_alloc;
 	enum {
 		DIR_SHOW_IGNORED = 1<<0,
 		DIR_SHOW_OTHER_DIRECTORIES = 1<<1,
@@ -117,12 +185,18 @@
 	 * (sub)directory in the traversal. Exclude points to the
 	 * matching exclude struct if the directory is excluded.
 	 */
 	struct exclude_stack *exclude_stack;
 	struct exclude *exclude;
 	struct strbuf basebuf;
+
+	/* Enable untracked file cache if set */
+	struct untracked_cache *untracked;
+	struct sha1_stat ss_info_exclude;
+	struct sha1_stat ss_excludes_file;
+	unsigned unmanaged_exclude_files;
 };
 
 /*
  * The ordering of these constants is significant, with
  * higher-numbered match types signifying "closer" (i.e. more
  * specific) matches which will override lower-numbered match types
@@ -223,7 +297,15 @@
 	int has_trailing_dir = ent->len && ent->name[ent->len - 1] == '/';
 	int len = has_trailing_dir ? ent->len - 1 : ent->len;
 	return match_pathspec(pathspec, ent->name, len, prefix, seen,
 			      has_trailing_dir);
 }
 
+void untracked_cache_invalidate_path(struct index_state *, const char *);
+void untracked_cache_remove_from_index(struct index_state *, const char *);
+void untracked_cache_add_to_index(struct index_state *, const char *);
+
+void free_untracked_cache(struct untracked_cache *);
+struct untracked_cache *read_untracked_extension(const void *data, unsigned long sz);
+void write_untracked_extension(struct strbuf *out, struct untracked_cache *untracked);
+void add_untracked_ident(struct untracked_cache *);
 #endif
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/dir.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/dir.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/cmd-list.perl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/cmd-list.perl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/cmd-list.perl	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/cmd-list.perl	2015-07-28 04:34:56.000000000 +0800
@@ -35,12 +35,16 @@
 	}
 	else {
 		die "Description does not match $name: $description";
 	}
 }
 
+while (<>) {
+	last if /^### command list/;
+}
+
 my %cmds = ();
 for (sort <>) {
 	next if /^#/;
 
 	chomp;
 	my ($name, $cat, $attr) = /^(\S+)\s+(.*?)(?:\s+(.*))?$/;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/config.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/config.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/config.txt	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/config.txt	2015-07-28 04:34:56.000000000 +0800
@@ -450,12 +450,14 @@
 repository that ends in "/.git" is assumed to be not bare (bare =
 false), while all other repositories are assumed to be bare (bare
 = true).
 
 core.worktree::
 	Set the path to the root of the working tree.
+	If GIT_COMMON_DIR environment variable is set, core.worktree
+	is ignored and not used for determining the root of working tree.
 	This can be overridden by the GIT_WORK_TREE environment
 	variable and the '--work-tree' command-line option.
 	The value can be an absolute path or relative to the path to
 	the .git directory, which is either specified by --git-dir
 	or GIT_DIR, or automatically discovered.
 	If --git-dir or GIT_DIR is specified but none of
@@ -619,12 +621,18 @@
 	commented, and removes them after the editor returns
 	(default '#').
 +
 If set to "auto", `git-commit` would select a character that is not
 the beginning character of any line in existing commit messages.
 
+core.packedRefsTimeout::
+	The length of time, in milliseconds, to retry when trying to
+	lock the `packed-refs` file. Value 0 means not to retry at
+	all; -1 means to try indefinitely. Default is 1000 (i.e.,
+	retry for 1 second).
+
 sequence.editor::
 	Text editor used by `git rebase -i` for editing the rebase instruction file.
 	The value is meant to be interpreted by the shell when it is used.
 	It can be overridden by the `GIT_SEQUENCE_EDITOR` environment variable.
 	When not configured the default commit message editor is used instead.
 
@@ -1272,12 +1280,19 @@
 gc.pruneExpire::
 	When 'git gc' is run, it will call 'prune --expire 2.weeks.ago'.
 	Override the grace period with this config variable.  The value
 	"now" may be used to disable this  grace period and always prune
 	unreachable objects immediately.
 
+gc.pruneWorktreesExpire::
+	When 'git gc' is run, it will call
+	'prune --worktrees --expire 3.months.ago'.
+	Override the grace period with this config variable. The value
+	"now" may be used to disable the grace period and prune
+	$GIT_DIR/worktrees immediately.
+
 gc.reflogExpire::
 gc.<pattern>.reflogExpire::
 	'git reflog expire' removes reflog entries older than
 	this time; defaults to 90 days.  With "<pattern>" (e.g.
 	"refs/stash") in the middle the setting applies only to
 	the refs that match the <pattern>.
@@ -1558,12 +1573,25 @@
 	input unless http.saveCookies is set.
 
 http.saveCookies::
 	If set, store cookies received during requests to the file specified by
 	http.cookieFile. Has no effect if http.cookieFile is unset.
 
+http.sslCipherList::
+  A list of SSL ciphers to use when negotiating an SSL connection.
+  The available ciphers depend on whether libcurl was built against
+  NSS or OpenSSL and the particular configuration of the crypto
+  library in use.  Internally this sets the 'CURLOPT_SSL_CIPHER_LIST'
+  option; see the libcurl documentation for more details on the format
+  of this list.
++
+Can be overridden by the 'GIT_SSL_CIPHER_LIST' environment variable.
+To force git to use libcurl's default cipher list and ignore any
+explicit http.sslCipherList option, set 'GIT_SSL_CIPHER_LIST' to the
+empty string.
+
 http.sslVerify::
 	Whether to verify the SSL certificate when fetching or pushing
 	over HTTPS. Can be overridden by the 'GIT_SSL_NO_VERIFY' environment
 	variable.
 
 http.sslCert::
@@ -2528,20 +2556,26 @@
 	String(s) `upload-pack` uses to decide which refs to omit
 	from its initial advertisement.  Use more than one
 	definitions to specify multiple prefix strings. A ref that
 	are under the hierarchies listed on the value of this
 	variable is excluded, and is hidden from `git ls-remote`,
 	`git fetch`, etc.  An attempt to fetch a hidden ref by `git
-	fetch` will fail.  See also `uploadpack.allowtipsha1inwant`.
+	fetch` will fail.  See also `uploadpack.allowTipSHA1InWant`.
 
-uploadpack.allowtipsha1inwant::
+uploadpack.allowTipSHA1InWant::
 	When `uploadpack.hideRefs` is in effect, allow `upload-pack`
 	to accept a fetch request that asks for an object at the tip
 	of a hidden ref (by default, such a request is rejected).
 	see also `uploadpack.hideRefs`.
 
+uploadpack.allowReachableSHA1InWant::
+	Allow `upload-pack` to accept a fetch request that asks for an
+	object that is reachable from any ref tip. However, note that
+	calculating object reachability is computationally expensive.
+	Defaults to `false`.
+
 uploadpack.keepAlive::
 	When `upload-pack` has started `pack-objects`, there may be a
 	quiet period while `pack-objects` prepares the pack. Normally
 	it would output progress information, but if `--quiet` was used
 	for the fetch, `pack-objects` will output nothing at all until
 	the pack data begins. Some clients and networks may consider
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/diff-options.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/diff-options.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/diff-options.txt	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/diff-options.txt	2015-07-28 04:34:56.000000000 +0800
@@ -288,12 +288,22 @@
 	configuration.  By default, trailing whitespaces (including
 	lines that solely consist of whitespaces) and a space character
 	that is immediately followed by a tab character inside the
 	initial indent of the line are considered whitespace errors.
 	Exits with non-zero status if problems are found. Not compatible
 	with --exit-code.
+
+--ws-error-highlight=<kind>::
+	Highlight whitespace errors on lines specified by <kind>
+	in the color specified by `color.diff.whitespace`.  <kind>
+	is a comma separated list of `old`, `new`, `context`.  When
+	this option is not given, only whitespace errors in `new`
+	lines are highlighted.  E.g. `--ws-error-highlight=new,old`
+	highlights whitespace errors on both deleted and added lines.
+	`all` can be used as a short-hand for `old,new,context`.
+
 endif::git-format-patch[]
 
 --full-index::
 	Instead of the first handful of characters, show the full
 	pre- and post-image blob object names on the "index"
 	line when generating patch format output.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/gitattributes.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/gitattributes.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/gitattributes.txt	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/gitattributes.txt	2015-07-28 04:34:56.000000000 +0800
@@ -771,13 +771,13 @@
 To define a custom merge driver `filfre`, add a section to your
 `$GIT_DIR/config` file (or `$HOME/.gitconfig` file) like this:
 
 ----------------------------------------------------------------
 [merge "filfre"]
 	name = feel-free merge driver
-	driver = filfre %O %A %B
+	driver = filfre %O %A %B %L %P
 	recursive = binary
 ----------------------------------------------------------------
 
 The `merge.*.name` variable gives the driver a human-readable
 name.
 
@@ -797,12 +797,15 @@
 The `merge.*.recursive` variable specifies what other merge
 driver to use when the merge driver is called for an internal
 merge between common ancestors, when there are more than one.
 When left unspecified, the driver itself is used for both
 internal merge and the final merge.
 
+The merge driver can learn the pathname in which the merged result
+will be stored via placeholder `%P`.
+
 
 `conflict-marker-size`
 ^^^^^^^^^^^^^^^^^^^^^^
 
 This attribute controls the length of conflict markers left in
 the work tree file during a conflicted merge.  Only setting to
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/git-blame.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/git-blame.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/git-blame.txt	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/git-blame.txt	2015-07-28 04:34:56.000000000 +0800
@@ -73,12 +73,14 @@
 -s::
 	Suppress the author name and timestamp from the output.
 
 -e::
 --show-email::
 	Show the author email instead of author name (Default: off).
+	This can also be controlled via the `blame.showEmail` config
+	option.
 
 -w::
 	Ignore whitespace when comparing the parent's version and
 	the child's to find where the lines came from.
 
 --abbrev=<n>::
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/git-cat-file.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/git-cat-file.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/git-cat-file.txt	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/git-cat-file.txt	2015-07-28 04:34:56.000000000 +0800
@@ -6,14 +6,14 @@
 git-cat-file - Provide content or type and size information for repository objects
 
 
 SYNOPSIS
 --------
 [verse]
-'git cat-file' (-t | -s | -e | -p | <type> | --textconv ) <object>
-'git cat-file' (--batch | --batch-check) < <list-of-objects>
+'git cat-file' (-t [--allow-unknown-type]| -s [--allow-unknown-type]| -e | -p | <type> | --textconv ) <object>
+'git cat-file' (--batch | --batch-check) [--follow-symlinks] < <list-of-objects>
 
 DESCRIPTION
 -----------
 In its first form, the command provides the content or the type of an object in
 the repository. The type is required unless '-t' or '-p' is used to find the
 object type, or '-s' is used to find the object size, or '--textconv' is used
@@ -66,12 +66,71 @@
 --batch-check::
 --batch-check=<format>::
 	Print object information for each object provided on stdin.  May
 	not be combined with any other options or arguments.  See the
 	section `BATCH OUTPUT` below for details.
 
+--allow-unknown-type::
+	Allow -s or -t to query broken/corrupt objects of unknown type.
+
+--follow-symlinks::
+	With --batch or --batch-check, follow symlinks inside the
+	repository when requesting objects with extended SHA-1
+	expressions of the form tree-ish:path-in-tree.  Instead of
+	providing output about the link itself, provide output about
+	the linked-to object.  If a symlink points outside the
+	tree-ish (e.g. a link to /foo or a root-level link to ../foo),
+	the portion of the link which is outside the tree will be
+	printed.
++
+This option does not (currently) work correctly when an object in the
+index is specified (e.g. `:link` instead of `HEAD:link`) rather than
+one in the tree.
++
+This option cannot (currently) be used unless `--batch` or
+`--batch-check` is used.
++
+For example, consider a git repository containing:
++
+--
+	f: a file containing "hello\n"
+	link: a symlink to f
+	dir/link: a symlink to ../f
+	plink: a symlink to ../f
+	alink: a symlink to /etc/passwd
+--
++
+For a regular file `f`, `echo HEAD:f | git cat-file --batch` would print
++
+--
+	ce013625030ba8dba906f756967f9e9ca394464a blob 6
+--
++
+And `echo HEAD:link | git cat-file --batch --follow-symlinks` would
+print the same thing, as would `HEAD:dir/link`, as they both point at
+`HEAD:f`.
++
+Without `--follow-symlinks`, these would print data about the symlink
+itself.  In the case of `HEAD:link`, you would see
++
+--
+	4d1ae35ba2c8ec712fa2a379db44ad639ca277bd blob 1
+--
++
+Both `plink` and `alink` point outside the tree, so they would
+respectively print:
++
+--
+	symlink 4
+	../f
+
+	symlink 11
+	/etc/passwd
+--
+
+
 OUTPUT
 ------
 If '-t' is specified, one of the <type>.
 
 If '-s' is specified, the size of the <object> in bytes.
 
@@ -145,12 +204,53 @@
 the repository, then `cat-file` will ignore any custom format and print:
 
 ------------
 <object> SP missing LF
 ------------
 
+If --follow-symlinks is used, and a symlink in the repository points
+outside the repository, then `cat-file` will ignore any custom format
+and print:
+
+------------
+symlink SP <size> LF
+<symlink> LF
+------------
+
+The symlink will either be absolute (beginning with a /), or relative
+to the tree root.  For instance, if dir/link points to ../../foo, then
+<symlink> will be ../foo.  <size> is the size of the symlink in bytes.
+
+If --follow-symlinks is used, the following error messages will be
+displayed:
+
+------------
+<object> SP missing LF
+------------
+is printed when the initial symlink requested does not exist.
+
+------------
+dangling SP <size> LF
+<object> LF
+------------
+is printed when the initial symlink exists, but something that
+it (transitive-of) points to does not.
+
+------------
+loop SP <size> LF
+<object> LF
+------------
+is printed for symlink loops (or any symlinks that
+require more than 40 link resolutions to resolve).
+
+------------
+notdir SP <size> LF
+<object> LF
+------------
+is printed when, during symlink resolution, a file is used as a
+directory name.
 
 CAVEATS
 -------
 
 Note that the sizes of objects on disk are reported accurately, but care
 should be taken in drawing conclusions about which refs or objects are
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/git-checkout.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/git-checkout.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/git-checkout.txt	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/git-checkout.txt	2015-07-28 04:34:56.000000000 +0800
@@ -226,12 +226,18 @@
 	working tree (and if a <tree-ish> was specified, the index).
 +
 This means that you can use `git checkout -p` to selectively discard
 edits from your current working tree. See the ``Interactive Mode''
 section of linkgit:git-add[1] to learn how to operate the `--patch` mode.
 
+--ignore-other-worktrees::
+	`git checkout` refuses when the wanted ref is already checked
+	out by another worktree. This option makes it check the ref
+	out anyway. In other words, the ref can be held by more than one
+	worktree.
+
 <branch>::
 	Branch to checkout; if it refers to a branch (i.e., a name that,
 	when prepended with "refs/heads/", is a valid ref), then that
 	branch is checked out. Otherwise, if it refers to a valid
 	commit, your HEAD becomes "detached" and you are no longer on
 	any branch (see below for details).
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/git-for-each-ref.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/git-for-each-ref.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/git-for-each-ref.txt	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/git-for-each-ref.txt	2015-07-28 04:34:56.000000000 +0800
@@ -94,12 +94,18 @@
 	`refname` above.  Additionally respects `:track` to show
 	"[ahead N, behind M]" and `:trackshort` to show the terse
 	version: ">" (ahead), "<" (behind), "<>" (ahead and behind),
 	or "=" (in sync).  Has no effect if the ref does not have
 	tracking information associated with it.
 
+push::
+	The name of a local ref which represents the `@{push}` location
+	for the displayed ref. Respects `:short`, `:track`, and
+	`:trackshort` options as `upstream` does. Produces an empty
+	string if no `@{push}` ref is configured.
+
 HEAD::
 	'*' if HEAD matches current ref (the checked out branch), ' '
 	otherwise.
 
 color::
 	Change output color.  Followed by `:<colorname>`, where names
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/git-merge.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/git-merge.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/git-merge.txt	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/git-merge.txt	2015-07-28 04:34:56.000000000 +0800
@@ -101,12 +101,16 @@
 	Specifying more than one commit will create a merge with
 	more than two parents (affectionately called an Octopus merge).
 +
 If no commit is given from the command line, merge the remote-tracking
 branches that the current branch is configured to use as its upstream.
 See also the configuration section of this manual page.
++
+When `FETCH_HEAD` (and no other commit) is specified, the branches
+recorded in the `.git/FETCH_HEAD` file by the previous invocation
+of `git fetch` for merging are merged to the current branch.
 
 
 PRE-MERGE CHECKS
 ----------------
 
 Before applying outside changes, you should get your own work in
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/git-p4.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/git-p4.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/git-p4.txt	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/git-p4.txt	2015-07-28 04:34:56.000000000 +0800
@@ -222,15 +222,26 @@
 	linkgit:git-branch[1] and other commands.  This option instead
 	puts p4 branches in 'refs/heads/p4/'.  Note that future
 	sync operations must specify '--import-local' as well so that
 	they can find the p4 branches in refs/heads.
 
 --max-changes <n>::
-	Limit the number of imported changes to 'n'.  Useful to
-	limit the amount of history when using the '@all' p4 revision
-	specifier.
+	Import at most 'n' changes, rather than the entire range of
+	changes included in the given revision specifier. A typical
+	usage would be use '@all' as the revision specifier, but then
+	to use '--max-changes 1000' to import only the last 1000
+	revisions rather than the entire revision history.
+
+--changes-block-size <n>::
+	The internal block size to use when converting a revision
+	specifier such as '@all' into a list of specific change
+	numbers. Instead of using a single call to 'p4 changes' to
+	find the full list of changes for the conversion, there are a
+	sequence of calls to 'p4 changes -m', each of which requests
+	one block of changes of the given size. The default block size
+	is 500, which should usually be suitable.
 
 --keep-path::
 	The mapping of file names from the p4 depot path to Git, by
 	default, involves removing the entire depot path.  With this
 	option, the full p4 depot path is retained in Git.  For example,
 	path '//depot/main/foo/bar.c', when imported from
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/git-pull.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/git-pull.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/git-pull.txt	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/git-pull.txt	2015-07-28 04:34:56.000000000 +0800
@@ -71,15 +71,12 @@
 It is generally best to get any local changes in working order before
 pulling or stash them away with linkgit:git-stash[1].
 
 OPTIONS
 -------
 
-Options meant for 'git pull' itself and the underlying 'git merge'
-must be given before the options meant for 'git fetch'.
-
 -q::
 --quiet::
 	This is passed to both underlying git-fetch to squelch reporting of
 	during transfer, and underlying git-merge to squelch output during
 	merging.
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/gitrepository-layout.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/gitrepository-layout.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/gitrepository-layout.txt	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/gitrepository-layout.txt	2015-07-28 04:34:56.000000000 +0800
@@ -43,12 +43,15 @@
 `$GIT_ALTERNATE_OBJECT_DIRECTORIES` mechanisms to 'borrow'
 objects from other object stores.  A repository with this kind
 of incomplete object store is not suitable to be published for
 use with dumb transports but otherwise is OK as long as
 `objects/info/alternates` points at the object stores it
 borrows from.
++
+This directory is ignored if $GIT_COMMON_DIR is set and
+"$GIT_COMMON_DIR/objects" will be used instead.
 
 objects/[0-9a-f][0-9a-f]::
 	A newly created object is stored in its own file.
 	The objects are splayed over 256 subdirectories using
 	the first two characters of the sha1 object name to
 	keep the number of directory entries in `objects`
@@ -89,13 +92,14 @@
 	the repository is fetched over HTTP.
 
 refs::
 	References are stored in subdirectories of this
 	directory.  The 'git prune' command knows to preserve
 	objects reachable from refs found in this directory and
-	its subdirectories.
+	its subdirectories. This directory is ignored if $GIT_COMMON_DIR
+	is set and "$GIT_COMMON_DIR/refs" will be used instead.
 
 refs/heads/`name`::
 	records tip-of-the-tree commit objects of branch `name`
 
 refs/tags/`name`::
 	records any object name (not necessarily a commit
@@ -111,13 +115,14 @@
 	maintained by linkgit:git-replace[1]. Such refs can be exchanged
 	between repositories while grafts are not.
 
 packed-refs::
 	records the same information as refs/heads/, refs/tags/,
 	and friends record in a more efficient way.  See
-	linkgit:git-pack-refs[1].
+	linkgit:git-pack-refs[1]. This file is ignored if $GIT_COMMON_DIR
+	is set and "$GIT_COMMON_DIR/packed-refs" will be used instead.
 
 HEAD::
 	A symref (see glossary) to the `refs/heads/` namespace
 	describing the currently active branch.  It does not mean
 	much if the repository is not associated with any working tree
 	(i.e. a 'bare' repository), but a valid Git repository
@@ -130,41 +135,52 @@
 +
 HEAD can also record a specific commit directly, instead of
 being a symref to point at the current branch.  Such a state
 is often called 'detached HEAD.'  See linkgit:git-checkout[1]
 for details.
 
+config::
+	Repository specific configuration file. This file is ignored
+	if $GIT_COMMON_DIR is set and "$GIT_COMMON_DIR/config" will be
+	used instead.
+
 branches::
 	A slightly deprecated way to store shorthands to be used
 	to specify a URL to 'git fetch', 'git pull' and 'git push'.
 	A file can be stored as `branches/<name>` and then
 	'name' can be given to these commands in place of
 	'repository' argument.  See the REMOTES section in
 	linkgit:git-fetch[1] for details.  This mechanism is legacy
-	and not likely to be found in modern repositories.
+	and not likely to be found in modern repositories. This
+	directory is ignored if $GIT_COMMON_DIR is set and
+	"$GIT_COMMON_DIR/branches" will be used instead.
+
 
 hooks::
 	Hooks are customization scripts used by various Git
 	commands.  A handful of sample hooks are installed when
 	'git init' is run, but all of them are disabled by
 	default.  To enable, the `.sample` suffix has to be
 	removed from the filename by renaming.
 	Read linkgit:githooks[5] for more details about
-	each hook.
+	each hook. This directory is ignored if $GIT_COMMON_DIR is set
+	and "$GIT_COMMON_DIR/hooks" will be used instead.
+
 
 index::
 	The current index file for the repository.  It is
 	usually not found in a bare repository.
 
 sharedindex.<SHA-1>::
 	The shared index part, to be referenced by $GIT_DIR/index and
 	other temporary index files. Only valid in split index mode.
 
 info::
 	Additional information about the repository is recorded
-	in this directory.
+	in this directory. This directory is ignored if $GIT_COMMON_DIR
+	is set and "$GIT_COMMON_DIR/index" will be used instead.
 
 info/refs::
 	This file helps dumb transports discover what refs are
 	available in this repository.  If the repository is
 	published for dumb transports, this file should be
 	regenerated by 'git update-server-info' every time a tag
@@ -198,33 +214,71 @@
 
 remotes::
 	Stores shorthands for URL and default refnames for use
 	when interacting with remote repositories via 'git fetch',
 	'git pull' and 'git push' commands.  See the REMOTES section
 	in linkgit:git-fetch[1] for details.  This mechanism is legacy
-	and not likely to be found in modern repositories.
+	and not likely to be found in modern repositories. This
+	directory is ignored if $GIT_COMMON_DIR is set and
+	"$GIT_COMMON_DIR/remotes" will be used instead.
 
 logs::
-	Records of changes made to refs are stored in this
-	directory.  See linkgit:git-update-ref[1]
-	for more information.
+	Records of changes made to refs are stored in this directory.
+	See linkgit:git-update-ref[1] for more information. This
+	directory is ignored if $GIT_COMMON_DIR is set and
+	"$GIT_COMMON_DIR/logs" will be used instead.
 
 logs/refs/heads/`name`::
 	Records all changes made to the branch tip named `name`.
 
 logs/refs/tags/`name`::
 	Records all changes made to the tag named `name`.
 
 shallow::
 	This is similar to `info/grafts` but is internally used
 	and maintained by shallow clone mechanism.  See `--depth`
-	option to linkgit:git-clone[1] and linkgit:git-fetch[1].
+	option to linkgit:git-clone[1] and linkgit:git-fetch[1]. This
+	file is ignored if $GIT_COMMON_DIR is set and
+	"$GIT_COMMON_DIR/shallow" will be used instead.
+
+commondir::
+	If this file exists, $GIT_COMMON_DIR (see linkgit:git[1]) will
+	be set to the path specified in this file if it is not
+	explicitly set. If the specified path is relative, it is
+	relative to $GIT_DIR. The repository with commondir is
+	incomplete without the repository pointed by "commondir".
 
 modules::
 	Contains the git-repositories of the submodules.
 
+worktrees::
+	Contains worktree specific information of linked
+	checkouts. Each subdirectory contains the worktree-related
+	part of a linked checkout. This directory is ignored if
+	$GIT_COMMON_DIR is set and "$GIT_COMMON_DIR/worktrees" will be
+	used instead.
+
+worktrees/<id>/gitdir::
+	A text file containing the absolute path back to the .git file
+	that points to here. This is used to check if the linked
+	repository has been manually removed and there is no need to
+	keep this directory any more. mtime of this file should be
+	updated every time the linked repository is accessed.
+
+worktrees/<id>/locked::
+	If this file exists, the linked repository may be on a
+	portable device and not available. It does not mean that the
+	linked repository is gone and `worktrees/<id>` could be
+	removed. The file's content contains a reason string on why
+	the repository is locked.
+
+worktrees/<id>/link::
+	If this file exists, it is a hard link to the linked .git
+	file. It is used to detect if the linked repository is
+	manually removed.
+
 SEE ALSO
 --------
 linkgit:git-init[1],
 linkgit:git-clone[1],
 linkgit:git-fetch[1],
 linkgit:git-pack-refs[1],
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/git-rev-parse.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/git-rev-parse.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/git-rev-parse.txt	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/git-rev-parse.txt	2015-07-28 04:34:56.000000000 +0800
@@ -213,12 +213,15 @@
 	relative to the current working directory.
 +
 If `$GIT_DIR` is not defined and the current directory
 is not detected to lie in a Git repository or work tree
 print a message to stderr and exit with nonzero status.
 
+--git-common-dir::
+	Show `$GIT_COMMON_DIR` if defined, else `$GIT_DIR`.
+
 --is-inside-git-dir::
 	When the current working directory is below the repository
 	directory print "true", otherwise "false".
 
 --is-inside-work-tree::
 	When the current working directory is inside the work tree of the
@@ -230,12 +233,19 @@
 --resolve-git-dir <path>::
 	Check if <path> is a valid repository or a gitfile that
 	points at a valid repository, and print the location of the
 	repository.  If <path> is a gitfile then the resolved path
 	to the real repository is printed.
 
+--git-path <path>::
+	Resolve "$GIT_DIR/<path>" and takes other path relocation
+	variables such as $GIT_OBJECT_DIRECTORY,
+	$GIT_INDEX_FILE... into account. For example, if
+	$GIT_OBJECT_DIRECTORY is set to /foo/bar then "git rev-parse
+	--git-path objects/abc" returns /foo/bar/abc.
+
 --show-cdup::
 	When the command is invoked from a subdirectory, show the
 	path of the top-level directory relative to the current
 	directory (typically a sequence of "../", or an empty string).
 
 --show-prefix::
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/git-send-email.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/git-send-email.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/git-send-email.txt	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/git-send-email.txt	2015-07-28 04:34:56.000000000 +0800
@@ -380,13 +380,30 @@
 sendemail.aliasesFile::
 	To avoid typing long email addresses, point this to one or more
 	email aliases files.  You must also supply 'sendemail.aliasFileType'.
 
 sendemail.aliasFileType::
 	Format of the file(s) specified in sendemail.aliasesFile. Must be
-	one of 'mutt', 'mailrc', 'pine', 'elm', or 'gnus'.
+	one of 'mutt', 'mailrc', 'pine', 'elm', or 'gnus', or 'sendmail'.
++
+What an alias file in each format looks like can be found in
+the documentation of the email program of the same name. The
+differences and limitations from the standard formats are
+described below:
++
+--
+sendmail;;
+*	Quoted aliases and quoted addresses are not supported: lines that
+	contain a `"` symbol are ignored.
+*	Redirection to a file (`/path/name`) or pipe (`|command`) is not
+	supported.
+*	File inclusion (`:include: /path/name`) is not supported.
+*	Warnings are printed on the standard error output for any
+	explicitly unsupported constructs, and any other lines that are not
+	recognized by the parser.
+--
 
 sendemail.multiEdit::
 	If true (default), a single editor instance will be spawned to edit
 	files you have to edit (patches when '--annotate' is used, and the
 	summary when '--compose' is used). If false, files will be edited one
 	after the other, spawning a new editor each time.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/git-status.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/git-status.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/git-status.txt	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/git-status.txt	2015-07-28 04:34:56.000000000 +0800
@@ -63,13 +63,16 @@
 	- 'all'    - Also shows individual files in untracked directories.
 +
 When `-u` option is not used, untracked files and directories are
 shown (i.e. the same as specifying `normal`), to help you avoid
 forgetting to add newly created files.  Because it takes extra work
 to find untracked files in the filesystem, this mode may take some
-time in a large working tree.  You can use `no` to have `git status`
+time in a large working tree.
+Consider enabling untracked cache and split index if supported (see
+`git update-index --untracked-cache` and `git update-index
+--split-index`), Otherwise you can use `no` to have `git status`
 return more quickly without showing untracked files.
 +
 The default can be changed using the status.showUntrackedFiles
 configuration variable documented in linkgit:git-config[1].
 
 --ignore-submodules[=<when>]::
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/git.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/git.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/git.txt	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/git.txt	2015-07-28 04:34:56.000000000 +0800
@@ -40,48 +40,45 @@
 
 You are reading the documentation for the latest (possibly
 unreleased) version of Git, that is available from the 'master'
 branch of the `git.git` repository.
 Documentation for older releases are available here:
 
-* link:v2.4.12/git.html[documentation for release 2.4.12]
+* link:v2.5.0/git.html[documentation for release 2.5]
+
+* release notes for
+  link:RelNotes/2.5.0.txt[2.5],
+
+* link:v2.4.7/git.html[documentation for release 2.4.7]
 
 * release notes for
-  link:RelNotes/2.4.12.txt[2.4.12],
-  link:RelNotes/2.4.11.txt[2.4.11],
-  link:RelNotes/2.4.10.txt[2.4.10],
-  link:RelNotes/2.4.9.txt[2.4.9],
-  link:RelNotes/2.4.8.txt[2.4.8],
   link:RelNotes/2.4.7.txt[2.4.7],
   link:RelNotes/2.4.6.txt[2.4.6],
   link:RelNotes/2.4.5.txt[2.4.5],
   link:RelNotes/2.4.4.txt[2.4.4],
   link:RelNotes/2.4.3.txt[2.4.3],
   link:RelNotes/2.4.2.txt[2.4.2],
   link:RelNotes/2.4.1.txt[2.4.1],
   link:RelNotes/2.4.0.txt[2.4].
 
-* link:v2.3.10/git.html[documentation for release 2.3.10]
+* link:v2.3.8/git.html[documentation for release 2.3.8]
 
 * release notes for
-  link:RelNotes/2.3.10.txt[2.3.10],
-  link:RelNotes/2.3.9.txt[2.3.9],
   link:RelNotes/2.3.8.txt[2.3.8],
   link:RelNotes/2.3.7.txt[2.3.7],
   link:RelNotes/2.3.6.txt[2.3.6],
   link:RelNotes/2.3.5.txt[2.3.5],
   link:RelNotes/2.3.4.txt[2.3.4],
   link:RelNotes/2.3.3.txt[2.3.3],
   link:RelNotes/2.3.2.txt[2.3.2],
   link:RelNotes/2.3.1.txt[2.3.1],
   link:RelNotes/2.3.0.txt[2.3].
 
-* link:v2.2.3/git.html[documentation for release 2.2.3]
+* link:v2.2.2/git.html[documentation for release 2.2.2]
 
 * release notes for
-  link:RelNotes/2.2.3.txt[2.2.3],
   link:RelNotes/2.2.2.txt[2.2.2],
   link:RelNotes/2.2.1.txt[2.2.1],
   link:RelNotes/2.2.0.txt[2.2].
 
 * link:v2.1.4/git.html[documentation for release 2.1.4]
 
@@ -846,12 +843,21 @@
 	does not cross filesystem boundaries.  This environment variable
 	can be set to true to tell Git not to stop at filesystem
 	boundaries.  Like 'GIT_CEILING_DIRECTORIES', this will not affect
 	an explicit repository directory set via 'GIT_DIR' or on the
 	command line.
 
+'GIT_COMMON_DIR'::
+	If this variable is set to a path, non-worktree files that are
+	normally in $GIT_DIR will be taken from this path
+	instead. Worktree-specific files such as HEAD or index are
+	taken from $GIT_DIR. See linkgit:gitrepository-layout[5] and
+	linkgit:git-worktree[1] for
+	details. This variable has lower precedence than other path
+	variables such as GIT_INDEX_FILE, GIT_OBJECT_DIRECTORY...
+
 Git Commits
 ~~~~~~~~~~~
 'GIT_AUTHOR_NAME'::
 'GIT_AUTHOR_EMAIL'::
 'GIT_AUTHOR_DATE'::
 'GIT_COMMITTER_NAME'::
@@ -1060,39 +1066,12 @@
 	this variable automatically when performing destructive
 	operations like linkgit:git-prune[1]. You should not need to set
 	it yourself unless you want to be paranoid about making sure
 	an operation has touched every ref (e.g., because you are
 	cloning a repository to make a backup).
 
-`GIT_ALLOW_PROTOCOL`::
-	If set, provide a colon-separated list of protocols which are
-	allowed to be used with fetch/push/clone. This is useful to
-	restrict recursive submodule initialization from an untrusted
-	repository. Any protocol not mentioned will be disallowed (i.e.,
-	this is a whitelist, not a blacklist). If the variable is not
-	set at all, all protocols are enabled.  The protocol names
-	currently used by git are:
-
-	  - `file`: any local file-based path (including `file://` URLs,
-	    or local paths)
-
-	  - `git`: the anonymous git protocol over a direct TCP
-	    connection (or proxy, if configured)
-
-	  - `ssh`: git over ssh (including `host:path` syntax,
-	    `git+ssh://`, etc).
-
-	  - `rsync`: git over rsync
-
-	  - `http`: git over http, both "smart http" and "dumb http".
-	    Note that this does _not_ include `https`; if you want both,
-	    you should specify both as `http:https`.
-
-	  - any external helpers are named by their protocol (e.g., use
-	    `hg` to allow the `git-remote-hg` helper)
-
 
 Discussion[[Discussion]]
 ------------------------
 
 More detail on the following is available from the
 link:user-manual.html#git-concepts[Git concepts chapter of the
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/git-update-index.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/git-update-index.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/git-update-index.txt	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/git-update-index.txt	2015-07-28 04:34:56.000000000 +0800
@@ -167,12 +167,26 @@
 	index file contains all index entries stays unchanged. If
 	split-index mode is already enabled and `--split-index` is
 	given again, all changes in $GIT_DIR/index are pushed back to
 	the shared index file. This mode is designed for very large
 	indexes that take a significant amount of time to read or write.
 
+--untracked-cache::
+--no-untracked-cache::
+	Enable or disable untracked cache extension. This could speed
+	up for commands that involve determining untracked files such
+	as `git status`. The underlying operating system and file
+	system must change `st_mtime` field of a directory if files
+	are added or deleted in that directory.
+
+--force-untracked-cache::
+	For safety, `--untracked-cache` performs tests on the working
+	directory to make sure untracked cache can be used. These
+	tests can take a few seconds. `--force-untracked-cache` can be
+	used to skip the tests.
+
 \--::
 	Do not interpret any more arguments as options.
 
 <file>::
 	Files to act on.
 	Note that files beginning with '.' are discarded. This includes
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/gitweb.conf.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/gitweb.conf.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/gitweb.conf.txt	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/gitweb.conf.txt	2015-07-28 04:34:56.000000000 +0800
@@ -484,13 +484,13 @@
 You can setup one single value (single entry/item in this list) at build
 time by setting the `GITWEB_BASE_URL` build-time configuration variable.
 By default it is set to (), i.e. an empty list.  This means that gitweb
 would not try to create project URL (to fetch) from project name.
 
 $projects_list_group_categories::
-	Whether to enables the grouping of projects by category on the project
+	Whether to enable the grouping of projects by category on the project
 	list page. The category of a project is determined by the
 	`$GIT_DIR/category` file or the `gitweb.category` variable in each
 	repository's configuration.  Disabled by default (set to 0).
 
 $project_list_default_category::
 	Default category for projects for which none is specified.  If this is
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation: git-worktree.txt
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/howto/new-command.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/howto/new-command.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/howto/new-command.txt	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/howto/new-command.txt	2015-07-28 04:34:56.000000000 +0800
@@ -92,13 +92,15 @@
 your language, document it in the INSTALL file.
 
 6. There is a file command-list.txt in the distribution main directory
 that categorizes commands by type, so they can be listed in appropriate
 subsections in the documentation's summary command list.  Add an entry
 for yours.  To understand the categories, look at git-commands.txt
-in the main directory.
+in the main directory.  If the new command is part of the typical Git
+workflow and you believe it common enough to be mentioned in 'git help',
+map this command to a common group in the column [common].
 
 7. Give the maintainer one paragraph to include in the RelNotes file
 to describe the new feature; a good place to do so is in the cover
 letter [PATCH 0/n].
 
 That's all there is to it.
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/RelNotes: 2.2.3.txt
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/RelNotes: 2.3.10.txt
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/RelNotes: 2.3.9.txt
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/RelNotes: 2.4.10.txt
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/RelNotes: 2.4.11.txt
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/RelNotes: 2.4.12.txt
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/RelNotes: 2.4.8.txt
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/RelNotes: 2.4.9.txt
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/RelNotes: 2.5.0.txt
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/revisions.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/revisions.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/revisions.txt	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/revisions.txt	2015-07-28 04:34:56.000000000 +0800
@@ -95,12 +95,37 @@
   The suffix '@\{upstream\}' to a branchname (short form '<branchname>@\{u\}')
   refers to the branch that the branch specified by branchname is set to build on
   top of (configured with `branch.<name>.remote` and
   `branch.<name>.merge`).  A missing branchname defaults to the
   current one.
 
+'<branchname>@\{push\}', e.g. 'master@\{push\}', '@\{push\}'::
+  The suffix '@\{push}' reports the branch "where we would push to" if
+  `git push` were run while `branchname` was checked out (or the current
+  'HEAD' if no branchname is specified). Since our push destination is
+  in a remote repository, of course, we report the local tracking branch
+  that corresponds to that branch (i.e., something in 'refs/remotes/').
++
+Here's an example to make it more clear:
++
+------------------------------
+$ git config push.default current
+$ git config remote.pushdefault myfork
+$ git checkout -b mybranch origin/master
+
+$ git rev-parse --symbolic-full-name @{upstream}
+refs/remotes/origin/master
+
+$ git rev-parse --symbolic-full-name @{push}
+refs/remotes/myfork/mybranch
+------------------------------
++
+Note in the example that we set up a triangular workflow, where we pull
+from one location and push to another. In a non-triangular workflow,
+'@\{push}' is the same as '@\{upstream}', and there is no need for it.
+
 '<rev>{caret}', e.g. 'HEAD{caret}, v1.5.1{caret}0'::
   A suffix '{caret}' to a revision parameter means the first parent of
   that commit object.  '{caret}<n>' means the <n>th parent (i.e.
   '<rev>{caret}'
   is equivalent to '<rev>{caret}1').  As a special rule,
   '<rev>{caret}0' means the commit itself and is used when '<rev>' is the
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/technical/api-ref-iteration.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/technical/api-ref-iteration.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/technical/api-ref-iteration.txt	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/technical/api-ref-iteration.txt	2015-07-28 04:34:56.000000000 +0800
@@ -3,13 +3,13 @@
 
 
 Iteration of refs is done by using an iterate function which will call a
 callback function for every ref. The callback function has this
 signature:
 
-	int handle_one_ref(const char *refname, const unsigned char *sha1,
+	int handle_one_ref(const char *refname, const struct object_id *oid,
 			   int flags, void *cb_data);
 
 There are different kinds of iterate functions which all take a
 callback of this type. The callback is then called for each found ref
 until the callback returns nonzero. The returned value is then also
 returned by the iterate function.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/technical/api-remote.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/technical/api-remote.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/technical/api-remote.txt	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/technical/api-remote.txt	2015-07-28 04:34:56.000000000 +0800
@@ -94,16 +94,12 @@
 	The full path for the branch ref.
 
 `remote_name`::
 
 	The name of the remote listed in the configuration.
 
-`remote`::
-
-	The struct remote for that remote.
-
 `merge_name`::
 
 	An array of the "merge" lines in the configuration.
 
 `merge`::
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/technical/http-protocol.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/technical/http-protocol.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/technical/http-protocol.txt	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/technical/http-protocol.txt	2015-07-28 04:34:56.000000000 +0800
@@ -316,13 +316,14 @@
 
 Servers SHOULD support all capabilities defined here.
 
 Clients MUST send at least one "want" command in the request body.
 Clients MUST NOT reference an id in a "want" command which did not
 appear in the response obtained through ref discovery unless the
-server advertises capability `allow-tip-sha1-in-want`.
+server advertises capability `allow-tip-sha1-in-want` or
+`allow-reachable-sha1-in-want`.
 
   compute_request   =  want_list
 		       have_list
 		       request_end
   request_end       =  "0000" / "done"
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/technical/index-format.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/technical/index-format.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/technical/index-format.txt	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/technical/index-format.txt	2015-07-28 04:34:56.000000000 +0800
@@ -230,6 +230,68 @@
     first index entry, the second "1" bit to the second entry and so
     on. Replaced entries may have empty path names to save space.
 
   The remaining index entries after replaced ones will be added to the
   final index. These added entries are also sorted by entry name then
   stage.
+
+== Untracked cache
+
+  Untracked cache saves the untracked file list and necessary data to
+  verify the cache. The signature for this extension is { 'U', 'N',
+  'T', 'R' }.
+
+  The extension starts with
+
+  - A sequence of NUL-terminated strings, preceded by the size of the
+    sequence in variable width encoding. Each string describes the
+    environment where the cache can be used.
+
+  - Stat data of $GIT_DIR/info/exclude. See "Index entry" section from
+    ctime field until "file size".
+
+  - Stat data of core.excludesfile
+
+  - 32-bit dir_flags (see struct dir_struct)
+
+  - 160-bit SHA-1 of $GIT_DIR/info/exclude. Null SHA-1 means the file
+    does not exist.
+
+  - 160-bit SHA-1 of core.excludesfile. Null SHA-1 means the file does
+    not exist.
+
+  - NUL-terminated string of per-dir exclude file name. This usually
+    is ".gitignore".
+
+  - The number of following directory blocks, variable width
+    encoding. If this number is zero, the extension ends here with a
+    following NUL.
+
+  - A number of directory blocks in depth-first-search order, each
+    consists of
+
+    - The number of untracked entries, variable width encoding.
+
+    - The number of sub-directory blocks, variable width encoding.
+
+    - The directory name terminated by NUL.
+
+    - A number of untrached file/dir names terminated by NUL.
+
+The remaining data of each directory block is grouped by type:
+
+  - An ewah bitmap, the n-th bit marks whether the n-th directory has
+    valid untracked cache entries.
+
+  - An ewah bitmap, the n-th bit records "check-only" bit of
+    read_directory_recursive() for the n-th directory.
+
+  - An ewah bitmap, the n-th bit indicates whether SHA-1 and stat data
+    is valid for the n-th directory and exists in the next data.
+
+  - An array of stat data. The n-th data corresponds with the n-th
+    "one" bit in the previous ewah bitmap.
+
+  - An array of SHA-1. The n-th SHA-1 corresponds with the n-th "one" bit
+    in the previous ewah bitmap.
+
+  - One NUL.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/technical/protocol-capabilities.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/technical/protocol-capabilities.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/technical/protocol-capabilities.txt	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/technical/protocol-capabilities.txt	2015-07-28 04:34:56.000000000 +0800
@@ -257,12 +257,19 @@
 ----------------------
 
 If the upload-pack server advertises this capability, fetch-pack may
 send "want" lines with SHA-1s that exist at the server but are not
 advertised by upload-pack.
 
+allow-reachable-sha1-in-want
+----------------------------
+
+If the upload-pack server advertises this capability, fetch-pack may
+send "want" lines with SHA-1s that exist at the server but are not
+advertised by upload-pack.
+
 push-cert=<nonce>
 -----------------
 
 The receive-pack server that advertises this capability is willing
 to accept a signed push certificate, and asks the <nonce> to be
 included in the push certificate.  A send-pack client MUST NOT
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/technical/racy-git.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/technical/racy-git.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Documentation/technical/racy-git.txt	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Documentation/technical/racy-git.txt	2015-07-28 04:34:56.000000000 +0800
@@ -38,19 +38,23 @@
 files) from `st_mode` member, `st_mtime` and `st_ctime`
 timestamps, `st_uid`, `st_gid`, `st_ino`, and `st_size` members.
 With a `USE_STDEV` compile-time option, `st_dev` is also
 compared, but this is not enabled by default because this member
 is not stable on network filesystems.  With `USE_NSEC`
 compile-time option, `st_mtim.tv_nsec` and `st_ctim.tv_nsec`
-members are also compared, but this is not enabled by default
+members are also compared. On Linux, this is not enabled by default
 because in-core timestamps can have finer granularity than
 on-disk timestamps, resulting in meaningless changes when an
 inode is evicted from the inode cache.  See commit 8ce13b0
 of git://git.kernel.org/pub/scm/linux/kernel/git/tglx/history.git
 ([PATCH] Sync in core time granularity with filesystems,
-2005-01-04).
+2005-01-04). This patch is included in kernel 2.6.11 and newer, but
+only fixes the issue for file systems with exactly 1 ns or 1 s
+resolution. Other file systems are still broken in current Linux
+kernels (e.g. CEPH, CIFS, NTFS, UDF), see
+https://lkml.org/lkml/2015/6/9/714
 
 Racy Git
 --------
 
 There is one slight problem with the optimization based on the
 cached stat information.  Consider this sequence:
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/editor.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/editor.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/editor.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/editor.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/entry.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/entry.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/entry.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/entry.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/environment.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/environment.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/environment.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/environment.c	2015-07-28 04:34:56.000000000 +0800
@@ -89,14 +89,15 @@
 char *git_work_tree_cfg;
 static char *work_tree;
 
 static const char *namespace;
 static size_t namespace_len;
 
-static const char *git_dir;
+static const char *git_dir, *git_common_dir;
 static char *git_object_dir, *git_index_file, *git_graft_file;
+int git_db_env, git_index_env, git_graft_env, git_common_dir_env;
 
 /*
  * Repository-local GIT_* environment variables; see cache.h for details.
  */
 const char * const local_repo_env[] = {
 	ALTERNATE_DB_ENVIRONMENT,
@@ -108,12 +109,13 @@
 	GIT_IMPLICIT_WORK_TREE_ENVIRONMENT,
 	GRAFT_ENVIRONMENT,
 	INDEX_ENVIRONMENT,
 	NO_REPLACE_OBJECTS_ENVIRONMENT,
 	GIT_PREFIX_ENVIRONMENT,
 	GIT_SHALLOW_FILE_ENVIRONMENT,
+	GIT_COMMON_DIR_ENVIRONMENT,
 	NULL
 };
 
 static char *expand_namespace(const char *raw_namespace)
 {
 	struct strbuf buf = STRBUF_INIT;
@@ -132,31 +134,46 @@
 	if (check_refname_format(buf.buf, 0))
 		die("bad git namespace path \"%s\"", raw_namespace);
 	strbuf_addch(&buf, '/');
 	return strbuf_detach(&buf, NULL);
 }
 
-static char *git_path_from_env(const char *envvar, const char *path)
+static char *git_path_from_env(const char *envvar, const char *git_dir,
+			       const char *path, int *fromenv)
 {
 	const char *value = getenv(envvar);
-	return value ? xstrdup(value) : git_pathdup("%s", path);
+	if (!value) {
+		char *buf = xmalloc(strlen(git_dir) + strlen(path) + 2);
+		sprintf(buf, "%s/%s", git_dir, path);
+		return buf;
+	}
+	if (fromenv)
+		*fromenv = 1;
+	return xstrdup(value);
 }
 
 static void setup_git_env(void)
 {
+	struct strbuf sb = STRBUF_INIT;
 	const char *gitfile;
 	const char *shallow_file;
 
 	git_dir = getenv(GIT_DIR_ENVIRONMENT);
 	if (!git_dir)
 		git_dir = DEFAULT_GIT_DIR_ENVIRONMENT;
 	gitfile = read_gitfile(git_dir);
 	git_dir = xstrdup(gitfile ? gitfile : git_dir);
-	git_object_dir = git_path_from_env(DB_ENVIRONMENT, "objects");
-	git_index_file = git_path_from_env(INDEX_ENVIRONMENT, "index");
-	git_graft_file = git_path_from_env(GRAFT_ENVIRONMENT, "info/grafts");
+	if (get_common_dir(&sb, git_dir))
+		git_common_dir_env = 1;
+	git_common_dir = strbuf_detach(&sb, NULL);
+	git_object_dir = git_path_from_env(DB_ENVIRONMENT, git_common_dir,
+					   "objects", &git_db_env);
+	git_index_file = git_path_from_env(INDEX_ENVIRONMENT, git_dir,
+					   "index", &git_index_env);
+	git_graft_file = git_path_from_env(GRAFT_ENVIRONMENT, git_common_dir,
+					   "info/grafts", &git_graft_env);
 	if (getenv(NO_REPLACE_OBJECTS_ENVIRONMENT))
 		check_replace_refs = 0;
 	namespace = expand_namespace(getenv(GIT_NAMESPACE_ENVIRONMENT));
 	namespace_len = strlen(namespace);
 	shallow_file = getenv(GIT_SHALLOW_FILE_ENVIRONMENT);
 	if (shallow_file)
@@ -173,12 +190,17 @@
 {
 	if (!git_dir)
 		setup_git_env();
 	return git_dir;
 }
 
+const char *get_git_common_dir(void)
+{
+	return git_common_dir;
+}
+
 const char *get_git_namespace(void)
 {
 	if (!namespace)
 		setup_git_env();
 	return namespace;
 }
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/environment.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/environment.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/environment.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/environment.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/bitmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/bitmap.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/bitmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/bitmap.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/ewah_bitmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/ewah_bitmap.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/ewah_bitmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/ewah_bitmap.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/ewah_io.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/ewah_io.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/ewah_io.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/ewah_io.c	2015-07-28 04:34:56.000000000 +0800
@@ -16,12 +16,13 @@
  * You should have received a copy of the GNU General Public License
  * along with this program; if not, write to the Free Software
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
  */
 #include "git-compat-util.h"
 #include "ewok.h"
+#include "strbuf.h"
 
 int ewah_serialize_native(struct ewah_bitmap *self, int fd)
 {
 	uint32_t write32;
 	size_t to_write = self->buffer_size * 8;
 
@@ -107,12 +108,24 @@
 
 int ewah_serialize(struct ewah_bitmap *self, int fd)
 {
 	return ewah_serialize_to(self, write_helper, (void *)(intptr_t)fd);
 }
 
+static int write_strbuf(void *user_data, const void *data, size_t len)
+{
+	struct strbuf *sb = user_data;
+	strbuf_add(sb, data, len);
+	return len;
+}
+
+int ewah_serialize_strbuf(struct ewah_bitmap *self, struct strbuf *sb)
+{
+	return ewah_serialize_to(self, write_strbuf, sb);
+}
+
 int ewah_read_mmap(struct ewah_bitmap *self, const void *map, size_t len)
 {
 	const uint8_t *ptr = map;
 	size_t i;
 
 	self->bit_size = get_be32(ptr);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/ewah_io.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/ewah_io.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/ewah_io.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/ewah_io.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/ewah_rlw.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/ewah_rlw.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/ewah_rlw.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/ewah_rlw.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/ewok.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/ewok.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ewah/ewok.h	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ewah/ewok.h	2015-07-28 04:34:56.000000000 +0800
@@ -27,12 +27,13 @@
 #	define ewah_realloc xrealloc
 #endif
 #ifndef ewah_calloc
 #	define ewah_calloc xcalloc
 #endif
 
+struct strbuf;
 typedef uint64_t eword_t;
 #define BITS_IN_EWORD (sizeof(eword_t) * 8)
 
 /**
  * Do not use __builtin_popcountll. The GCC implementation
  * is notoriously slow on all platforms.
@@ -95,12 +96,13 @@
 
 int ewah_serialize_to(struct ewah_bitmap *self,
 		      int (*write_fun)(void *out, const void *buf, size_t len),
 		      void *out);
 int ewah_serialize(struct ewah_bitmap *self, int fd);
 int ewah_serialize_native(struct ewah_bitmap *self, int fd);
+int ewah_serialize_strbuf(struct ewah_bitmap *self, struct strbuf *);
 
 int ewah_deserialize(struct ewah_bitmap *self, int fd);
 int ewah_read_mmap(struct ewah_bitmap *self, const void *map, size_t len);
 
 uint32_t ewah_checksum(struct ewah_bitmap *self);
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/exec_cmd.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/exec_cmd.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/exec_cmd.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/exec_cmd.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/fast-import.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/fast-import.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/fast-import.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/fast-import.c	2015-07-28 04:34:56.000000000 +0800
@@ -402,13 +402,13 @@
 }
 
 static void dump_marks_helper(FILE *, uintmax_t, struct mark_set *);
 
 static void write_crash_report(const char *err)
 {
-	char *loc = git_path("fast_import_crash_%"PRIuMAX, (uintmax_t) getpid());
+	const char *loc = git_path("fast_import_crash_%"PRIuMAX, (uintmax_t) getpid());
 	FILE *rpt = fopen(loc, "w");
 	struct branch *b;
 	unsigned long lu;
 	struct recent_command *rc;
 
 	if (!rpt) {
@@ -3110,18 +3110,15 @@
 	fflush(stdout);
 	skip_optional_lf();
 }
 
 static char* make_fast_import_path(const char *path)
 {
-	struct strbuf abs_path = STRBUF_INIT;
-
 	if (!relative_marks_paths || is_absolute_path(path))
 		return xstrdup(path);
-	strbuf_addf(&abs_path, "%s/info/fast-import/%s", get_git_dir(), path);
-	return strbuf_detach(&abs_path, NULL);
+	return xstrdup(git_path("info/fast-import/%s", path));
 }
 
 static void option_import_marks(const char *marks,
 					int from_stream, int ignore_missing)
 {
 	if (import_marks_file) {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/fast-import.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/fast-import.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/fast-import.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/fast-import.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/fetch-pack.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/fetch-pack.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/fetch-pack.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/fetch-pack.c	2015-07-28 04:34:56.000000000 +0800
@@ -40,13 +40,18 @@
  * After sending this many "have"s if we do not get any new ACK , we
  * give up traversing our history.
  */
 #define MAX_IN_VAIN 256
 
 static struct prio_queue rev_list = { compare_commits_by_commit_date };
-static int non_common_revs, multi_ack, use_sideband, allow_tip_sha1_in_want;
+static int non_common_revs, multi_ack, use_sideband;
+/* Allow specifying sha1 if it is a ref tip. */
+#define ALLOW_TIP_SHA1	01
+/* Allow request of a sha1 if it is reachable from a ref (possibly hidden ref). */
+#define ALLOW_REACHABLE_SHA1	02
+static unsigned int allow_unadvertised_object_request;
 
 static void rev_list_push(struct commit *commit, int mark)
 {
 	if (!(commit->object.flags & mark)) {
 		commit->object.flags |= mark;
 
@@ -57,25 +62,32 @@
 
 		if (!(commit->object.flags & COMMON))
 			non_common_revs++;
 	}
 }
 
-static int rev_list_insert_ref(const char *refname, const unsigned char *sha1, int flag, void *cb_data)
+static int rev_list_insert_ref(const char *refname, const unsigned char *sha1)
 {
 	struct object *o = deref_tag(parse_object(sha1), refname, 0);
 
 	if (o && o->type == OBJ_COMMIT)
 		rev_list_push((struct commit *)o, SEEN);
 
 	return 0;
 }
 
-static int clear_marks(const char *refname, const unsigned char *sha1, int flag, void *cb_data)
+static int rev_list_insert_ref_oid(const char *refname, const struct object_id *oid,
+				   int flag, void *cb_data)
 {
-	struct object *o = deref_tag(parse_object(sha1), refname, 0);
+	return rev_list_insert_ref(refname, oid->hash);
+}
+
+static int clear_marks(const char *refname, const struct object_id *oid,
+		       int flag, void *cb_data)
+{
+	struct object *o = deref_tag(parse_object(oid->hash), refname, 0);
 
 	if (o && o->type == OBJ_COMMIT)
 		clear_commit_marks((struct commit *)o,
 				   COMMON | COMMON_REF | SEEN | POPPED);
 	return 0;
 }
@@ -223,13 +235,13 @@
 	} else
 		write_or_die(fd, buf->buf, buf->len);
 }
 
 static void insert_one_alternate_ref(const struct ref *ref, void *unused)
 {
-	rev_list_insert_ref(NULL, ref->old_sha1, 0, NULL);
+	rev_list_insert_ref(NULL, ref->old_sha1);
 }
 
 #define INITIAL_FLUSH 16
 #define PIPESAFE_FLUSH 32
 #define LARGE_FLUSH 1024
 
@@ -260,13 +272,13 @@
 	if (args->stateless_rpc && multi_ack == 1)
 		die("--stateless-rpc requires multi_ack_detailed");
 	if (marked)
 		for_each_ref(clear_marks, NULL);
 	marked = 1;
 
-	for_each_ref(rev_list_insert_ref, NULL);
+	for_each_ref(rev_list_insert_ref_oid, NULL);
 	for_each_alternate_ref(insert_one_alternate_ref, NULL);
 
 	fetching = 0;
 	for ( ; refs ; refs = refs->next) {
 		unsigned char *remote = refs->old_sha1;
 		const char *remote_hex;
@@ -463,13 +475,13 @@
 	/* it is no error to fetch into a completely empty repo */
 	return count ? retval : 0;
 }
 
 static struct commit_list *complete;
 
-static int mark_complete(const char *refname, const unsigned char *sha1, int flag, void *cb_data)
+static int mark_complete(const unsigned char *sha1)
 {
 	struct object *o = parse_object(sha1);
 
 	while (o && o->type == OBJ_TAG) {
 		struct tag *t = (struct tag *) o;
 		if (!t->tagged)
@@ -484,12 +496,18 @@
 			commit_list_insert(commit, &complete);
 		}
 	}
 	return 0;
 }
 
+static int mark_complete_oid(const char *refname, const struct object_id *oid,
+			     int flag, void *cb_data)
+{
+	return mark_complete(oid->hash);
+}
+
 static void mark_recent_complete_commits(struct fetch_pack_args *args,
 					 unsigned long cutoff)
 {
 	while (complete && cutoff <= complete->item->date) {
 		if (args->verbose)
 			fprintf(stderr, "Marking %s as complete\n",
@@ -539,13 +557,14 @@
 		} else {
 			free(ref);
 		}
 	}
 
 	/* Append unmatched requests to the list */
-	if (allow_tip_sha1_in_want) {
+	if ((allow_unadvertised_object_request &
+	    (ALLOW_TIP_SHA1 | ALLOW_REACHABLE_SHA1))) {
 		for (i = 0; i < nr_sought; i++) {
 			unsigned char sha1[20];
 
 			ref = sought[i];
 			if (ref->matched)
 				continue;
@@ -561,13 +580,13 @@
 	}
 	*refs = newlist;
 }
 
 static void mark_alternate_complete(const struct ref *ref, void *unused)
 {
-	mark_complete(NULL, ref->old_sha1, 0, NULL);
+	mark_complete(ref->old_sha1);
 }
 
 static int everything_local(struct fetch_pack_args *args,
 			    struct ref **refs,
 			    struct ref **sought, int nr_sought)
 {
@@ -596,13 +615,13 @@
 			if (!cutoff || cutoff < commit->date)
 				cutoff = commit->date;
 		}
 	}
 
 	if (!args->depth) {
-		for_each_ref(mark_complete, NULL);
+		for_each_ref(mark_complete_oid, NULL);
 		for_each_alternate_ref(mark_alternate_complete, NULL);
 		commit_list_sort_by_date(&complete);
 		if (cutoff)
 			mark_recent_complete_commits(args, cutoff);
 	}
 
@@ -818,13 +837,18 @@
 			fprintf(stderr, "Server supports side-band\n");
 		use_sideband = 1;
 	}
 	if (server_supports("allow-tip-sha1-in-want")) {
 		if (args->verbose)
 			fprintf(stderr, "Server supports allow-tip-sha1-in-want\n");
-		allow_tip_sha1_in_want = 1;
+		allow_unadvertised_object_request |= ALLOW_TIP_SHA1;
+	}
+	if (server_supports("allow-reachable-sha1-in-want")) {
+		if (args->verbose)
+			fprintf(stderr, "Server supports allow-reachable-sha1-in-want\n");
+		allow_unadvertised_object_request |= ALLOW_REACHABLE_SHA1;
 	}
 	if (!server_supports("thin-pack"))
 		args->use_thin_pack = 0;
 	if (!server_supports("no-progress"))
 		args->no_progress = 0;
 	if (!server_supports("include-tag"))
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/fetch-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/fetch-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/fetch-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/fetch-pack.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/fsck.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/fsck.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/fsck.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/fsck.o differ
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0: generate-cmdlist.perl
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12: generate-cmdlist.sh
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/gettext.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/gettext.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/gettext.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/gettext.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-add and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-add differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-am	2017-10-10 13:18:40.846528846 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-am	2017-10-10 13:51:13.142457295 +0800
@@ -378,12 +378,13 @@
 messageid= resolvemsg= resume= scissors= no_inbody_headers=
 git_apply_opt=
 committer_date_is_author_date=
 ignore_date=
 allow_rerere_autoupdate=
 gpg_sign_opt=
+threeway=
 
 if test "$(git config --bool --get am.messageid)" = true
 then
     messageid=t
 fi
 
@@ -839,16 +840,16 @@
 	if test $action = skip
 	then
 		go_next
 		continue
 	fi
 
-	if test -x "$GIT_DIR"/hooks/applypatch-msg
+	hook="$(git rev-parse --git-path hooks/applypatch-msg)"
+	if test -x "$hook"
 	then
-		"$GIT_DIR"/hooks/applypatch-msg "$dotest/final-commit" ||
-		stop_here $this
+		"$hook" "$dotest/final-commit" || stop_here $this
 	fi
 
 	if test -f "$dotest/final-commit"
 	then
 		FIRSTLINE=$(sed 1q "$dotest/final-commit")
 	else
@@ -916,15 +917,16 @@
 			eval_gettextln 'The copy of the patch that failed is found in:
    $dotest/patch'
 		fi
 		stop_here_user_resolve $this
 	fi
 
-	if test -x "$GIT_DIR"/hooks/pre-applypatch
+	hook="$(git rev-parse --git-path hooks/pre-applypatch)"
+	if test -x "$hook"
 	then
-		"$GIT_DIR"/hooks/pre-applypatch || stop_here $this
+		"$hook" || stop_here $this
 	fi
 
 	tree=$(git write-tree) &&
 	commit=$(
 		if test -n "$ignore_date"
 		then
@@ -945,24 +947,23 @@
 	stop_here $this
 
 	if test -f "$dotest/original-commit"; then
 		echo "$(cat "$dotest/original-commit") $commit" >> "$dotest/rewritten"
 	fi
 
-	if test -x "$GIT_DIR"/hooks/post-applypatch
-	then
-		"$GIT_DIR"/hooks/post-applypatch
-	fi
+	hook="$(git rev-parse --git-path hooks/post-applypatch)"
+	test -x "$hook" && "$hook"
 
 	go_next
 done
 
 if test -s "$dotest"/rewritten; then
     git notes copy --for-rewrite=rebase < "$dotest"/rewritten
-    if test -x "$GIT_DIR"/hooks/post-rewrite; then
-	"$GIT_DIR"/hooks/post-rewrite rebase < "$dotest"/rewritten
+    hook="$(git rev-parse --git-path hooks/post-rewrite)"
+    if test -x "$hook"; then
+	"$hook" rebase < "$dotest"/rewritten
     fi
 fi
 
 # If am was called with --rebasing (from git-rebase--am), it's up to
 # the caller to take care of housekeeping.
 if ! test -f "$dotest/rebasing"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-am.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-am.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-am.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-am.sh	2015-07-28 04:34:56.000000000 +0800
@@ -378,12 +378,13 @@
 messageid= resolvemsg= resume= scissors= no_inbody_headers=
 git_apply_opt=
 committer_date_is_author_date=
 ignore_date=
 allow_rerere_autoupdate=
 gpg_sign_opt=
+threeway=
 
 if test "$(git config --bool --get am.messageid)" = true
 then
     messageid=t
 fi
 
@@ -839,16 +840,16 @@
 	if test $action = skip
 	then
 		go_next
 		continue
 	fi
 
-	if test -x "$GIT_DIR"/hooks/applypatch-msg
+	hook="$(git rev-parse --git-path hooks/applypatch-msg)"
+	if test -x "$hook"
 	then
-		"$GIT_DIR"/hooks/applypatch-msg "$dotest/final-commit" ||
-		stop_here $this
+		"$hook" "$dotest/final-commit" || stop_here $this
 	fi
 
 	if test -f "$dotest/final-commit"
 	then
 		FIRSTLINE=$(sed 1q "$dotest/final-commit")
 	else
@@ -916,15 +917,16 @@
 			eval_gettextln 'The copy of the patch that failed is found in:
    $dotest/patch'
 		fi
 		stop_here_user_resolve $this
 	fi
 
-	if test -x "$GIT_DIR"/hooks/pre-applypatch
+	hook="$(git rev-parse --git-path hooks/pre-applypatch)"
+	if test -x "$hook"
 	then
-		"$GIT_DIR"/hooks/pre-applypatch || stop_here $this
+		"$hook" || stop_here $this
 	fi
 
 	tree=$(git write-tree) &&
 	commit=$(
 		if test -n "$ignore_date"
 		then
@@ -945,24 +947,23 @@
 	stop_here $this
 
 	if test -f "$dotest/original-commit"; then
 		echo "$(cat "$dotest/original-commit") $commit" >> "$dotest/rewritten"
 	fi
 
-	if test -x "$GIT_DIR"/hooks/post-applypatch
-	then
-		"$GIT_DIR"/hooks/post-applypatch
-	fi
+	hook="$(git rev-parse --git-path hooks/post-applypatch)"
+	test -x "$hook" && "$hook"
 
 	go_next
 done
 
 if test -s "$dotest"/rewritten; then
     git notes copy --for-rewrite=rebase < "$dotest"/rewritten
-    if test -x "$GIT_DIR"/hooks/post-rewrite; then
-	"$GIT_DIR"/hooks/post-rewrite rebase < "$dotest"/rewritten
+    hook="$(git rev-parse --git-path hooks/post-rewrite)"
+    if test -x "$hook"; then
+	"$hook" rebase < "$dotest"/rewritten
     fi
 fi
 
 # If am was called with --rebasing (from git-rebase--am), it's up to
 # the caller to take care of housekeeping.
 if ! test -f "$dotest/rebasing"
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-annotate and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-annotate differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-apply and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-apply differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-archive and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-archive differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-bisect--helper and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-bisect--helper differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-blame and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-blame differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-branch and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-branch differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-bundle and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-bundle differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git.c	2015-07-28 04:34:56.000000000 +0800
@@ -480,12 +480,13 @@
 	{ "var", cmd_var, RUN_SETUP_GENTLY },
 	{ "verify-commit", cmd_verify_commit, RUN_SETUP },
 	{ "verify-pack", cmd_verify_pack },
 	{ "verify-tag", cmd_verify_tag, RUN_SETUP },
 	{ "version", cmd_version },
 	{ "whatchanged", cmd_whatchanged, RUN_SETUP },
+	{ "worktree", cmd_worktree, RUN_SETUP },
 	{ "write-tree", cmd_write_tree, RUN_SETUP },
 };
 
 static struct cmd_struct *get_builtin(const char *s)
 {
 	int i;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-cat-file and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-cat-file differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/GIT-CFLAGS /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/GIT-CFLAGS
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/GIT-CFLAGS	2017-10-10 13:18:11.362529926 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/GIT-CFLAGS	2017-10-10 13:50:42.686458411 +0800
@@ -1 +1 @@
-gcc: -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER='"block-sha1/sha1.h"'  -DNO_STRLCPY -DSHELL_PATH='"/bin/sh"':
+gcc: -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER='"block-sha1/sha1.h"'  -DNO_STRLCPY -DSHELL_PATH='"/bin/sh"':
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-check-attr and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-check-attr differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-check-ignore and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-check-ignore differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-check-mailmap and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-check-mailmap differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-checkout and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-checkout differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-checkout-index and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-checkout-index differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-check-ref-format and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-check-ref-format differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-cherry and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-cherry differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-cherry-pick and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-cherry-pick differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-clean and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-clean differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-clone and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-clone differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-column and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-column differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-commit and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-commit differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-commit-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-commit-tree differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-compat-util.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-compat-util.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-compat-util.h	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-compat-util.h	2015-07-28 04:34:56.000000000 +0800
@@ -93,20 +93,12 @@
 #define signed_add_overflows(a, b) \
     ((b) > maximum_signed_value_of_type(a) - (a))
 
 #define unsigned_add_overflows(a, b) \
     ((b) > maximum_unsigned_value_of_type(a) - (a))
 
-/*
- * Returns true if the multiplication of "a" and "b" will
- * overflow. The types of "a" and "b" must match and must be unsigned.
- * Note that this macro evaluates "a" twice!
- */
-#define unsigned_mult_overflows(a, b) \
-    ((a) && (b) > maximum_unsigned_value_of_type(a) / (a))
-
 #ifdef __GNUC__
 #define TYPEOF(x) (__typeof__(x))
 #else
 #define TYPEOF(x)
 #endif
 
@@ -192,12 +184,13 @@
 #if defined(__MINGW32__)
 /* pull in Windows compatibility stuff */
 #include "compat/mingw.h"
 #elif defined(_MSC_VER)
 #include "compat/msvc.h"
 #else
+#include <sys/utsname.h>
 #include <sys/wait.h>
 #include <sys/resource.h>
 #include <sys/socket.h>
 #include <sys/ioctl.h>
 #include <termios.h>
 #ifndef NO_SYS_SELECT_H
@@ -703,38 +696,12 @@
 
 extern void release_pack_memory(size_t);
 
 typedef void (*try_to_free_t)(size_t);
 extern try_to_free_t set_try_to_free_routine(try_to_free_t);
 
-static inline size_t st_add(size_t a, size_t b)
-{
-	if (unsigned_add_overflows(a, b))
-		die("size_t overflow: %"PRIuMAX" + %"PRIuMAX,
-		    (uintmax_t)a, (uintmax_t)b);
-	return a + b;
-}
-#define st_add3(a,b,c)   st_add((a),st_add((b),(c)))
-#define st_add4(a,b,c,d) st_add((a),st_add3((b),(c),(d)))
-
-static inline size_t st_mult(size_t a, size_t b)
-{
-	if (unsigned_mult_overflows(a, b))
-		die("size_t overflow: %"PRIuMAX" * %"PRIuMAX,
-		    (uintmax_t)a, (uintmax_t)b);
-	return a * b;
-}
-
-static inline size_t st_sub(size_t a, size_t b)
-{
-	if (a < b)
-		die("size_t underflow: %"PRIuMAX" - %"PRIuMAX,
-		    (uintmax_t)a, (uintmax_t)b);
-	return a - b;
-}
-
 #ifdef HAVE_ALLOCA_H
 # include <alloca.h>
 # define xalloca(size)      (alloca(size))
 # define xalloca_free(p)    do {} while (0)
 #else
 # define xalloca(size)      (xmalloc(size))
@@ -965,7 +932,13 @@
 #endif
 
 #ifndef SHELL_PATH
 # define SHELL_PATH "/bin/sh"
 #endif
 
+#ifndef _POSIX_THREAD_SAFE_FUNCTIONS
+#define flockfile(fh)
+#define funlockfile(fh)
+#define getc_unlocked(fh) getc(fh)
+#endif
+
 #endif
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-config and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-config differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-count-objects and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-count-objects differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-credential and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-credential differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-credential-cache and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-credential-cache differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-credential-cache--daemon and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-credential-cache--daemon differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-credential-store and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-credential-store differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-cvsimport /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-cvsimport
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-cvsimport	2017-10-10 13:18:41.054528838 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-cvsimport	2017-10-10 13:51:13.362457287 +0800
@@ -919,13 +919,13 @@
 		# Tag cannot contain bad chars. (See bad_ref_char in refs.c.)
 		$xtag =~ s/[ ~\^:\\\*\?\[]//g;
 		# Other bad strings for tags:
 		# (See check_refname_component in refs.c.)
 		1 while $xtag =~ s/
 			(?: \.\.        # Tag cannot contain '..'.
-			|   \@{         # Tag cannot contain '@{'.
+			|   \@\{        # Tag cannot contain '@{'.
 			| ^ -           # Tag cannot begin with '-'.
 			|   \.lock $    # Tag cannot end with '.lock'.
 			| ^ \.          # Tag cannot begin...
 			|   \. $        # ...or end with '.'
 			)//xg;
 		# Tag cannot be empty.
@@ -1160,13 +1160,13 @@
 		print "Fetched into the current branch.\n" if $opt_v;
 		system(qw(git read-tree -u -m),
 		       $tip_at_start, $tip_at_end);
 		die "Fast-forward update failed: $?\n" if $?;
 	}
 	else {
-		system(qw(git merge cvsimport HEAD), "$remote/$opt_o");
+		system(qw(git merge -m cvsimport), "$remote/$opt_o");
 		die "Could not merge $opt_o into the current branch.\n" if $?;
 	}
 } else {
 	$orig_branch = "master";
 	print "DONE; creating $orig_branch branch\n" if $opt_v;
 	system("git", "update-ref", "refs/heads/master", "$remote/$opt_o")
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-cvsimport.perl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-cvsimport.perl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-cvsimport.perl	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-cvsimport.perl	2015-07-28 04:34:56.000000000 +0800
@@ -918,13 +918,13 @@
 		# Tag cannot contain bad chars. (See bad_ref_char in refs.c.)
 		$xtag =~ s/[ ~\^:\\\*\?\[]//g;
 		# Other bad strings for tags:
 		# (See check_refname_component in refs.c.)
 		1 while $xtag =~ s/
 			(?: \.\.        # Tag cannot contain '..'.
-			|   \@{         # Tag cannot contain '@{'.
+			|   \@\{        # Tag cannot contain '@{'.
 			| ^ -           # Tag cannot begin with '-'.
 			|   \.lock $    # Tag cannot end with '.lock'.
 			| ^ \.          # Tag cannot begin...
 			|   \. $        # ...or end with '.'
 			)//xg;
 		# Tag cannot be empty.
@@ -1159,13 +1159,13 @@
 		print "Fetched into the current branch.\n" if $opt_v;
 		system(qw(git read-tree -u -m),
 		       $tip_at_start, $tip_at_end);
 		die "Fast-forward update failed: $?\n" if $?;
 	}
 	else {
-		system(qw(git merge cvsimport HEAD), "$remote/$opt_o");
+		system(qw(git merge -m cvsimport), "$remote/$opt_o");
 		die "Could not merge $opt_o into the current branch.\n" if $?;
 	}
 } else {
 	$orig_branch = "master";
 	print "DONE; creating $orig_branch branch\n" if $opt_v;
 	system("git", "update-ref", "refs/heads/master", "$remote/$opt_o")
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-cvsserver /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-cvsserver
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-cvsserver	2017-10-10 13:18:41.062528838 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-cvsserver	2017-10-10 13:51:13.370457287 +0800
@@ -24,13 +24,13 @@
 use Fcntl;
 use File::Temp qw/tempdir tempfile/;
 use File::Path qw/rmtree/;
 use File::Basename;
 use Getopt::Long qw(:config require_order no_ignore_case);
 
-my $VERSION = '2.4.12';
+my $VERSION = '2.5.0';
 
 my $log = GITCVS::log->new();
 my $cfg;
 
 my $DATE_LIST = {
     Jan => "01",
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-daemon and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-daemon differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-describe and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-describe differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-diff and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-diff differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-diff-files and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-diff-files differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-diff-index and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-diff-index differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-diff-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-diff-tree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-fast-export and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-fast-export differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-fast-import and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-fast-import differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-fetch and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-fetch differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-fetch-pack and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-fetch-pack differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-fmt-merge-msg and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-fmt-merge-msg differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-for-each-ref and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-for-each-ref differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-format-patch and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-format-patch differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-fsck and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-fsck differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-fsck-objects and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-fsck-objects differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-gc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-gc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-get-tar-commit-id and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-get-tar-commit-id differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-grep and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-grep differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-gui/git-gui /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-gui/git-gui
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-gui/git-gui	2017-10-10 13:18:57.338528241 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-gui/git-gui	2017-10-10 13:51:29.914456681 +0800
@@ -1,18 +1,18 @@
 #!/bin/sh
 # Tcl ignores the next line -*- tcl -*- \
  if test "z$*" = zversion \
  || test "z$*" = z--version; \
  then \
-	echo 'git-gui version 0.20.0'; \
+	echo 'git-gui version 0.19.0.18.g4498b'; \
 	exit; \
  fi; \
  argv0=$0; \
  exec 'wish' "$argv0" -- "$@"
 
-set appvers {0.20.0}
+set appvers {0.19.0.18.g4498b}
 set copyright [string map [list (c) \u00a9] {
 Copyright (c) 2006-2010 Shawn Pearce, et. al.
 
 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-gui/GIT-VERSION-FILE /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-gui/GIT-VERSION-FILE
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-gui/GIT-VERSION-FILE	2017-10-10 13:18:57.318528242 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-gui/GIT-VERSION-FILE	2017-10-10 13:51:29.898456681 +0800
@@ -1 +1 @@
-GITGUI_VERSION = 0.20.0
+GITGUI_VERSION = 0.19.0.18.g4498b
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-gui/version /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-gui/version
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-gui/version	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-gui/version	2015-07-28 04:34:57.000000000 +0800
@@ -1 +1 @@
-0.20.0
+0.19.0.18.g4498b
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-hash-object and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-hash-object differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-help and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-help differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-http-backend and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-http-backend differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.gitignore /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.gitignore
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/.gitignore	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/.gitignore	2015-07-28 04:34:56.000000000 +0800
@@ -168,12 +168,13 @@
 /git-var
 /git-verify-commit
 /git-verify-pack
 /git-verify-tag
 /git-web--browse
 /git-whatchanged
+/git-worktree
 /git-write-tree
 /git-core-*/?*
 /gitweb/GITWEB-BUILD-OPTIONS
 /gitweb/gitweb.cgi
 /gitweb/static/gitweb.js
 /gitweb/static/gitweb.min.*
@@ -181,12 +182,13 @@
 /test-ctype
 /test-config
 /test-date
 /test-delta
 /test-dump-cache-tree
 /test-dump-split-index
+/test-dump-untracked-cache
 /test-scrap-cache-tree
 /test-genrandom
 /test-hashmap
 /test-index-version
 /test-line-buffer
 /test-match-trees
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-imap-send and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-imap-send differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-index-pack and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-index-pack differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-init and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-init differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-init-db and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-init-db differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-interpret-trailers and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-interpret-trailers differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-log and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-log differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-ls-files and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-ls-files differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-ls-remote and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-ls-remote differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-ls-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-ls-tree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-mailinfo and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-mailinfo differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-mailsplit and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-mailsplit differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-merge and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-merge differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-merge-base and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-merge-base differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-merge-file and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-merge-file differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-merge-index and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-merge-index differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-merge-ours and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-merge-ours differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-merge-recursive and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-merge-recursive differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-merge-subtree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-merge-subtree differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-mergetool /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-mergetool
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-mergetool	2017-10-10 13:18:40.886528844 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-mergetool	2017-10-10 13:51:13.182457294 +0800
@@ -448,14 +448,12 @@
 	exit 0
 fi
 
 printf "Merging:\n"
 printf "%s\n" "$files"
 
-IFS='
-'
 rc=0
 for i in $files
 do
 	printf "\n"
 	if ! merge_file "$i"
 	then
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-mergetool--lib /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-mergetool--lib
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-mergetool--lib	2017-10-10 13:18:41.094528837 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-mergetool--lib	2017-10-10 13:51:13.402457286 +0800
@@ -1,10 +1,13 @@
 # git-mergetool--lib is a shell library for common merge tool functions
 
 : ${MERGE_TOOLS_DIR=$(git --exec-path)/mergetools}
 
+IFS='
+'
+
 mode_ok () {
 	if diff_mode
 	then
 		can_diff
 	elif merge_mode
 	then
@@ -299,12 +302,13 @@
 	See 'git ${TOOL_MODE}tool --tool-help' or 'git help config' for more details.
 	'git ${TOOL_MODE}tool' will now attempt to use one of the following tools:
 	$tools
 	EOF
 
 	# Loop over each candidate and stop when a valid merge tool is found.
+	IFS=' '
 	for tool in $tools
 	do
 		is_available "$tool" && echo "$tool" && return 0
 	done
 
 	echo >&2 "No known ${TOOL_MODE} tool is available."
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-mergetool--lib.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-mergetool--lib.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-mergetool--lib.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-mergetool--lib.sh	2015-07-28 04:34:56.000000000 +0800
@@ -1,10 +1,13 @@
 # git-mergetool--lib is a shell library for common merge tool functions
 
 : ${MERGE_TOOLS_DIR=$(git --exec-path)/mergetools}
 
+IFS='
+'
+
 mode_ok () {
 	if diff_mode
 	then
 		can_diff
 	elif merge_mode
 	then
@@ -299,12 +302,13 @@
 	See 'git ${TOOL_MODE}tool --tool-help' or 'git help config' for more details.
 	'git ${TOOL_MODE}tool' will now attempt to use one of the following tools:
 	$tools
 	EOF
 
 	# Loop over each candidate and stop when a valid merge tool is found.
+	IFS=' '
 	for tool in $tools
 	do
 		is_available "$tool" && echo "$tool" && return 0
 	done
 
 	echo >&2 "No known ${TOOL_MODE} tool is available."
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-mergetool.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-mergetool.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-mergetool.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-mergetool.sh	2015-07-28 04:34:56.000000000 +0800
@@ -448,14 +448,12 @@
 	exit 0
 fi
 
 printf "Merging:\n"
 printf "%s\n" "$files"
 
-IFS='
-'
 rc=0
 for i in $files
 do
 	printf "\n"
 	if ! merge_file "$i"
 	then
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-merge-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-merge-tree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-mktag and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-mktag differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-mktree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-mktree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-mv and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-mv differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-name-rev and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-name-rev differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-notes and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-notes differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-p4 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-p4
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-p4	2017-10-10 13:18:41.090528837 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-p4	2017-10-10 13:51:13.394457286 +0800
@@ -40,12 +40,15 @@
 
 verbose = False
 
 # Only labels/tags matching this will be imported/exported
 defaultLabelRegexp = r'[a-zA-Z0-9_\-.]+$'
 
+# Grab changes in blocks of this many revisions, unless otherwise requested
+defaultBlockSize = 512
+
 def p4_build_cmd(cmd):
     """Build a suitable p4 command line.
 
     This consolidates building and returning a p4 command line into one
     location. It means that hooking into the environment, or other configuration
     can be done more easily.
@@ -246,12 +249,16 @@
 def p4_reopen(type, f):
     p4_system(["reopen", "-t", type, wildcard_encode(f)])
 
 def p4_move(src, dest):
     p4_system(["move", "-k", wildcard_encode(src), wildcard_encode(dest)])
 
+def p4_last_change():
+    results = p4CmdList(["changes", "-m", "1"])
+    return int(results[0]['change'])
+
 def p4_describe(change):
     """Make sure it returns a valid result by checking for
        the presence of field "time".  Return a dict of the
        results."""
 
     ds = p4CmdList(["describe", "-s", str(change)])
@@ -365,13 +372,13 @@
     p4_reopen(p4Type, file)
 
 def getP4OpenedType(file):
     # Returns the perforce file type for the given file.
 
     result = p4_read_pipe(["opened", wildcard_encode(file)])
-    match = re.match(".*\((.+)\)\r?$", result)
+    match = re.match(".*\((.+)\)( \*exclusive\*)?\r?$", result)
     if match:
         return match.group(1)
     else:
         die("Could not determine file type for %s (result: '%s')" % (file, result))
 
 # Return the set of all p4 labels
@@ -499,18 +506,20 @@
         result.update(entry)
     return result;
 
 def p4Where(depotPath):
     if not depotPath.endswith("/"):
         depotPath += "/"
-    depotPath = depotPath + "..."
-    outputList = p4CmdList(["where", depotPath])
+    depotPathLong = depotPath + "..."
+    outputList = p4CmdList(["where", depotPathLong])
     output = None
     for entry in outputList:
         if "depotFile" in entry:
-            if entry["depotFile"] == depotPath:
+            # Search for the base client side depot path, as long as it starts with the branch's P4 path.
+            # The base path always ends with "/...".
+            if entry["depotFile"].find(depotPath) == 0 and entry["depotFile"][-4:] == "/...":
                 output = entry
                 break
         elif "data" in entry:
             data = entry.get("data")
             space = data.find(" ")
             if data[:space] == depotPath:
@@ -737,23 +746,83 @@
         if update:
             system("git update-ref %s %s" % (remoteHead, originHead))
 
 def originP4BranchesExist():
         return gitBranchExists("origin") or gitBranchExists("origin/p4") or gitBranchExists("origin/p4/master")
 
-def p4ChangesForPaths(depotPaths, changeRange):
+
+def p4ParseNumericChangeRange(parts):
+    changeStart = int(parts[0][1:])
+    if parts[1] == '#head':
+        changeEnd = p4_last_change()
+    else:
+        changeEnd = int(parts[1])
+
+    return (changeStart, changeEnd)
+
+def chooseBlockSize(blockSize):
+    if blockSize:
+        return blockSize
+    else:
+        return defaultBlockSize
+
+def p4ChangesForPaths(depotPaths, changeRange, requestedBlockSize):
     assert depotPaths
-    cmd = ['changes']
-    for p in depotPaths:
-        cmd += ["%s...%s" % (p, changeRange)]
-    output = p4_read_pipe_lines(cmd)
 
+    # Parse the change range into start and end. Try to find integer
+    # revision ranges as these can be broken up into blocks to avoid
+    # hitting server-side limits (maxrows, maxscanresults). But if
+    # that doesn't work, fall back to using the raw revision specifier
+    # strings, without using block mode.
+
+    if changeRange is None or changeRange == '':
+        changeStart = 1
+        changeEnd = p4_last_change()
+        block_size = chooseBlockSize(requestedBlockSize)
+    else:
+        parts = changeRange.split(',')
+        assert len(parts) == 2
+        try:
+            (changeStart, changeEnd) = p4ParseNumericChangeRange(parts)
+            block_size = chooseBlockSize(requestedBlockSize)
+        except:
+            changeStart = parts[0][1:]
+            changeEnd = parts[1]
+            if requestedBlockSize:
+                die("cannot use --changes-block-size with non-numeric revisions")
+            block_size = None
+
+    # Accumulate change numbers in a dictionary to avoid duplicates
     changes = {}
-    for line in output:
-        changeNum = int(line.split(" ")[1])
-        changes[changeNum] = True
+
+    for p in depotPaths:
+        # Retrieve changes a block at a time, to prevent running
+        # into a MaxResults/MaxScanRows error from the server.
+
+        while True:
+            cmd = ['changes']
+
+            if block_size:
+                end = min(changeEnd, changeStart + block_size)
+                revisionRange = "%d,%d" % (changeStart, end)
+            else:
+                revisionRange = "%s,%s" % (changeStart, changeEnd)
+
+            cmd += ["%s...@%s" % (p, revisionRange)]
+
+            for line in p4_read_pipe_lines(cmd):
+                changeNum = int(line.split(" ")[1])
+                changes[changeNum] = True
+
+            if not block_size:
+                break
+
+            if end >= changeEnd:
+                break
+
+            changeStart = end + 1
 
     changelist = changes.keys()
     changelist.sort()
     return changelist
 
 def p4PathStartsWith(path, prefix):
@@ -1217,13 +1286,13 @@
 
         # invoke the editor
         if os.environ.has_key("P4EDITOR") and (os.environ.get("P4EDITOR") != ""):
             editor = os.environ.get("P4EDITOR")
         else:
             editor = read_pipe("git var GIT_EDITOR").strip()
-        system([editor, template_file])
+        system(["sh", "-c", ('%s "$@"' % editor), editor, template_file])
 
         # If the file was not saved, prompt to see if this patch should
         # be skipped.  But skip this verification step if configured so.
         if gitConfigBool("git-p4.skipSubmitEditCheck"):
             return True
 
@@ -1624,13 +1693,16 @@
         self.useClientSpec = False
         if gitConfigBool("git-p4.useclientspec"):
             self.useClientSpec = True
         if self.useClientSpec:
             self.clientSpecDirs = getClientSpec()
 
-        if self.useClientSpec:
+        # Check for the existance of P4 branches
+        branchesDetected = (len(p4BranchesInGit().keys()) > 1)
+
+        if self.useClientSpec and not branchesDetected:
             # all files are relative to the client spec
             self.clientPath = getClientRoot()
         else:
             self.clientPath = p4Where(self.depotPath)
 
         if self.clientPath == "":
@@ -1908,13 +1980,16 @@
                 optparse.make_option("--changesfile", dest="changesFile"),
                 optparse.make_option("--silent", dest="silent", action="store_true"),
                 optparse.make_option("--detect-labels", dest="detectLabels", action="store_true"),
                 optparse.make_option("--import-labels", dest="importLabels", action="store_true"),
                 optparse.make_option("--import-local", dest="importIntoRemotes", action="store_false",
                                      help="Import into refs/heads/ , not refs/remotes"),
-                optparse.make_option("--max-changes", dest="maxChanges"),
+                optparse.make_option("--max-changes", dest="maxChanges",
+                                     help="Maximum number of changes to import"),
+                optparse.make_option("--changes-block-size", dest="changes_block_size", type="int",
+                                     help="Internal block size to use when iteratively calling p4 changes"),
                 optparse.make_option("--keep-path", dest="keepRepoPath", action='store_true',
                                      help="Keep entire BRANCH/DIR/SUBDIR prefix during import"),
                 optparse.make_option("--use-client-spec", dest="useClientSpec", action='store_true',
                                      help="Only sync files that are included in the Perforce Client Spec"),
                 optparse.make_option("-/", dest="cloneExclude",
                                      action="append", type="string",
@@ -1937,12 +2012,13 @@
         self.detectLabels = False
         self.importLabels = False
         self.changesFile = ""
         self.syncWithOrigin = True
         self.importIntoRemotes = True
         self.maxChanges = ""
+        self.changes_block_size = None
         self.keepRepoPath = False
         self.depotPaths = None
         self.p4BranchesInGit = []
         self.cloneExclude = []
         self.useClientSpec = False
         self.useClientSpec_from_options = False
@@ -2107,13 +2183,13 @@
             # Invoke print -o to get the real contents.
             #
             # On windows, the newlines will always be mangled by print, so put
             # them back too.  This is not needed to the cygwin windows version,
             # just the native "NT" type.
             #
-            text = p4_read_pipe(['print', '-q', '-o', '-', file['depotFile']])
+            text = p4_read_pipe(['print', '-q', '-o', '-', "%s@%s" % (file['depotFile'], file['change']) ])
             if p4_version_string().find("/NT") >= 0:
                 text = text.replace("\r\n", "\n")
             contents = [ text ]
 
         if type_base == "apple":
             # Apple filetype files will be streamed as a concatenation of
@@ -2583,13 +2659,13 @@
         # command so that we can try to find the branch parent in the git history
         self.gitStream.write("checkpoint\n\n");
         self.gitStream.flush();
         branchPrefix = self.depotPaths[0] + branch + "/"
         range = "@1,%s" % maxChange
         #print "prefix" + branchPrefix
-        changes = p4ChangesForPaths([branchPrefix], range)
+        changes = p4ChangesForPaths([branchPrefix], range, self.changes_block_size)
         if len(changes) <= 0:
             return False
         firstChange = changes[0]
         #print "first change in branch: %s" % firstChange
         sourceBranch = self.knownBranches[branch]
         sourceDepotPath = self.depotPaths[0] + sourceBranch
@@ -2999,13 +3075,13 @@
                                 die("Error: no branch %s; perhaps specify one with --branch." %
                                     self.branch)
 
                 if self.verbose:
                     print "Getting p4 changes for %s...%s" % (', '.join(self.depotPaths),
                                                               self.changeRange)
-                changes = p4ChangesForPaths(self.depotPaths, self.changeRange)
+                changes = p4ChangesForPaths(self.depotPaths, self.changeRange, self.changes_block_size)
 
                 if len(self.maxChanges) > 0:
                     changes = changes[:min(int(self.maxChanges), len(changes))]
 
             if len(changes) == 0:
                 if not self.silent:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-p4.py /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-p4.py
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-p4.py	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-p4.py	2015-07-28 04:34:56.000000000 +0800
@@ -40,12 +40,15 @@
 
 verbose = False
 
 # Only labels/tags matching this will be imported/exported
 defaultLabelRegexp = r'[a-zA-Z0-9_\-.]+$'
 
+# Grab changes in blocks of this many revisions, unless otherwise requested
+defaultBlockSize = 512
+
 def p4_build_cmd(cmd):
     """Build a suitable p4 command line.
 
     This consolidates building and returning a p4 command line into one
     location. It means that hooking into the environment, or other configuration
     can be done more easily.
@@ -246,12 +249,16 @@
 def p4_reopen(type, f):
     p4_system(["reopen", "-t", type, wildcard_encode(f)])
 
 def p4_move(src, dest):
     p4_system(["move", "-k", wildcard_encode(src), wildcard_encode(dest)])
 
+def p4_last_change():
+    results = p4CmdList(["changes", "-m", "1"])
+    return int(results[0]['change'])
+
 def p4_describe(change):
     """Make sure it returns a valid result by checking for
        the presence of field "time".  Return a dict of the
        results."""
 
     ds = p4CmdList(["describe", "-s", str(change)])
@@ -365,13 +372,13 @@
     p4_reopen(p4Type, file)
 
 def getP4OpenedType(file):
     # Returns the perforce file type for the given file.
 
     result = p4_read_pipe(["opened", wildcard_encode(file)])
-    match = re.match(".*\((.+)\)\r?$", result)
+    match = re.match(".*\((.+)\)( \*exclusive\*)?\r?$", result)
     if match:
         return match.group(1)
     else:
         die("Could not determine file type for %s (result: '%s')" % (file, result))
 
 # Return the set of all p4 labels
@@ -499,18 +506,20 @@
         result.update(entry)
     return result;
 
 def p4Where(depotPath):
     if not depotPath.endswith("/"):
         depotPath += "/"
-    depotPath = depotPath + "..."
-    outputList = p4CmdList(["where", depotPath])
+    depotPathLong = depotPath + "..."
+    outputList = p4CmdList(["where", depotPathLong])
     output = None
     for entry in outputList:
         if "depotFile" in entry:
-            if entry["depotFile"] == depotPath:
+            # Search for the base client side depot path, as long as it starts with the branch's P4 path.
+            # The base path always ends with "/...".
+            if entry["depotFile"].find(depotPath) == 0 and entry["depotFile"][-4:] == "/...":
                 output = entry
                 break
         elif "data" in entry:
             data = entry.get("data")
             space = data.find(" ")
             if data[:space] == depotPath:
@@ -737,23 +746,83 @@
         if update:
             system("git update-ref %s %s" % (remoteHead, originHead))
 
 def originP4BranchesExist():
         return gitBranchExists("origin") or gitBranchExists("origin/p4") or gitBranchExists("origin/p4/master")
 
-def p4ChangesForPaths(depotPaths, changeRange):
+
+def p4ParseNumericChangeRange(parts):
+    changeStart = int(parts[0][1:])
+    if parts[1] == '#head':
+        changeEnd = p4_last_change()
+    else:
+        changeEnd = int(parts[1])
+
+    return (changeStart, changeEnd)
+
+def chooseBlockSize(blockSize):
+    if blockSize:
+        return blockSize
+    else:
+        return defaultBlockSize
+
+def p4ChangesForPaths(depotPaths, changeRange, requestedBlockSize):
     assert depotPaths
-    cmd = ['changes']
-    for p in depotPaths:
-        cmd += ["%s...%s" % (p, changeRange)]
-    output = p4_read_pipe_lines(cmd)
 
+    # Parse the change range into start and end. Try to find integer
+    # revision ranges as these can be broken up into blocks to avoid
+    # hitting server-side limits (maxrows, maxscanresults). But if
+    # that doesn't work, fall back to using the raw revision specifier
+    # strings, without using block mode.
+
+    if changeRange is None or changeRange == '':
+        changeStart = 1
+        changeEnd = p4_last_change()
+        block_size = chooseBlockSize(requestedBlockSize)
+    else:
+        parts = changeRange.split(',')
+        assert len(parts) == 2
+        try:
+            (changeStart, changeEnd) = p4ParseNumericChangeRange(parts)
+            block_size = chooseBlockSize(requestedBlockSize)
+        except:
+            changeStart = parts[0][1:]
+            changeEnd = parts[1]
+            if requestedBlockSize:
+                die("cannot use --changes-block-size with non-numeric revisions")
+            block_size = None
+
+    # Accumulate change numbers in a dictionary to avoid duplicates
     changes = {}
-    for line in output:
-        changeNum = int(line.split(" ")[1])
-        changes[changeNum] = True
+
+    for p in depotPaths:
+        # Retrieve changes a block at a time, to prevent running
+        # into a MaxResults/MaxScanRows error from the server.
+
+        while True:
+            cmd = ['changes']
+
+            if block_size:
+                end = min(changeEnd, changeStart + block_size)
+                revisionRange = "%d,%d" % (changeStart, end)
+            else:
+                revisionRange = "%s,%s" % (changeStart, changeEnd)
+
+            cmd += ["%s...@%s" % (p, revisionRange)]
+
+            for line in p4_read_pipe_lines(cmd):
+                changeNum = int(line.split(" ")[1])
+                changes[changeNum] = True
+
+            if not block_size:
+                break
+
+            if end >= changeEnd:
+                break
+
+            changeStart = end + 1
 
     changelist = changes.keys()
     changelist.sort()
     return changelist
 
 def p4PathStartsWith(path, prefix):
@@ -1217,13 +1286,13 @@
 
         # invoke the editor
         if os.environ.has_key("P4EDITOR") and (os.environ.get("P4EDITOR") != ""):
             editor = os.environ.get("P4EDITOR")
         else:
             editor = read_pipe("git var GIT_EDITOR").strip()
-        system([editor, template_file])
+        system(["sh", "-c", ('%s "$@"' % editor), editor, template_file])
 
         # If the file was not saved, prompt to see if this patch should
         # be skipped.  But skip this verification step if configured so.
         if gitConfigBool("git-p4.skipSubmitEditCheck"):
             return True
 
@@ -1624,13 +1693,16 @@
         self.useClientSpec = False
         if gitConfigBool("git-p4.useclientspec"):
             self.useClientSpec = True
         if self.useClientSpec:
             self.clientSpecDirs = getClientSpec()
 
-        if self.useClientSpec:
+        # Check for the existance of P4 branches
+        branchesDetected = (len(p4BranchesInGit().keys()) > 1)
+
+        if self.useClientSpec and not branchesDetected:
             # all files are relative to the client spec
             self.clientPath = getClientRoot()
         else:
             self.clientPath = p4Where(self.depotPath)
 
         if self.clientPath == "":
@@ -1908,13 +1980,16 @@
                 optparse.make_option("--changesfile", dest="changesFile"),
                 optparse.make_option("--silent", dest="silent", action="store_true"),
                 optparse.make_option("--detect-labels", dest="detectLabels", action="store_true"),
                 optparse.make_option("--import-labels", dest="importLabels", action="store_true"),
                 optparse.make_option("--import-local", dest="importIntoRemotes", action="store_false",
                                      help="Import into refs/heads/ , not refs/remotes"),
-                optparse.make_option("--max-changes", dest="maxChanges"),
+                optparse.make_option("--max-changes", dest="maxChanges",
+                                     help="Maximum number of changes to import"),
+                optparse.make_option("--changes-block-size", dest="changes_block_size", type="int",
+                                     help="Internal block size to use when iteratively calling p4 changes"),
                 optparse.make_option("--keep-path", dest="keepRepoPath", action='store_true',
                                      help="Keep entire BRANCH/DIR/SUBDIR prefix during import"),
                 optparse.make_option("--use-client-spec", dest="useClientSpec", action='store_true',
                                      help="Only sync files that are included in the Perforce Client Spec"),
                 optparse.make_option("-/", dest="cloneExclude",
                                      action="append", type="string",
@@ -1937,12 +2012,13 @@
         self.detectLabels = False
         self.importLabels = False
         self.changesFile = ""
         self.syncWithOrigin = True
         self.importIntoRemotes = True
         self.maxChanges = ""
+        self.changes_block_size = None
         self.keepRepoPath = False
         self.depotPaths = None
         self.p4BranchesInGit = []
         self.cloneExclude = []
         self.useClientSpec = False
         self.useClientSpec_from_options = False
@@ -2107,13 +2183,13 @@
             # Invoke print -o to get the real contents.
             #
             # On windows, the newlines will always be mangled by print, so put
             # them back too.  This is not needed to the cygwin windows version,
             # just the native "NT" type.
             #
-            text = p4_read_pipe(['print', '-q', '-o', '-', file['depotFile']])
+            text = p4_read_pipe(['print', '-q', '-o', '-', "%s@%s" % (file['depotFile'], file['change']) ])
             if p4_version_string().find("/NT") >= 0:
                 text = text.replace("\r\n", "\n")
             contents = [ text ]
 
         if type_base == "apple":
             # Apple filetype files will be streamed as a concatenation of
@@ -2583,13 +2659,13 @@
         # command so that we can try to find the branch parent in the git history
         self.gitStream.write("checkpoint\n\n");
         self.gitStream.flush();
         branchPrefix = self.depotPaths[0] + branch + "/"
         range = "@1,%s" % maxChange
         #print "prefix" + branchPrefix
-        changes = p4ChangesForPaths([branchPrefix], range)
+        changes = p4ChangesForPaths([branchPrefix], range, self.changes_block_size)
         if len(changes) <= 0:
             return False
         firstChange = changes[0]
         #print "first change in branch: %s" % firstChange
         sourceBranch = self.knownBranches[branch]
         sourceDepotPath = self.depotPaths[0] + sourceBranch
@@ -2999,13 +3075,13 @@
                                 die("Error: no branch %s; perhaps specify one with --branch." %
                                     self.branch)
 
                 if self.verbose:
                     print "Getting p4 changes for %s...%s" % (', '.join(self.depotPaths),
                                                               self.changeRange)
-                changes = p4ChangesForPaths(self.depotPaths, self.changeRange)
+                changes = p4ChangesForPaths(self.depotPaths, self.changeRange, self.changes_block_size)
 
                 if len(self.maxChanges) > 0:
                     changes = changes[:min(int(self.maxChanges), len(changes))]
 
             if len(changes) == 0:
                 if not self.silent:
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-pack-objects and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-pack-objects differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-pack-redundant and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-pack-redundant differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-pack-refs and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-pack-refs differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-patch-id and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-patch-id differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-prune and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-prune differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-prune-packed and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-prune-packed differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-pull /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-pull
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-pull	2017-10-10 13:18:40.886528844 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-pull	2017-10-10 13:51:13.186457294 +0800
@@ -1,19 +1,59 @@
 #!/bin/sh
 #
 # Copyright (c) 2005 Junio C Hamano
 #
 # Fetch one or more remote refs and merge it/them into the current HEAD.
 
-USAGE='[-n | --no-stat] [--[no-]commit] [--[no-]squash] [--[no-]ff|--ff-only] [--[no-]rebase|--rebase=preserve] [-s strategy]... [<fetch-options>] <repo> <head>...'
-LONG_USAGE='Fetch one or more remote refs and integrate it/them with the current HEAD.'
 SUBDIRECTORY_OK=Yes
-OPTIONS_SPEC=
+OPTIONS_KEEPDASHDASH=
+OPTIONS_STUCKLONG=Yes
+OPTIONS_SPEC="\
+git pull [options] [<repository> [<refspec>...]]
+
+Fetch one or more remote refs and integrate it/them with the current HEAD.
+--
+v,verbose                  be more verbose
+q,quiet                    be more quiet
+progress                   force progress reporting
+
+  Options related to merging
+r,rebase?false|true|preserve incorporate changes by rebasing rather than merging
+n!                         do not show a diffstat at the end of the merge
+stat                       show a diffstat at the end of the merge
+summary                    (synonym to --stat)
+log?n                      add (at most <n>) entries from shortlog to merge commit message
+squash                     create a single commit instead of doing a merge
+commit                     perform a commit if the merge succeeds (default)
+e,edit                       edit message before committing
+ff                         allow fast-forward
+ff-only!                   abort if fast-forward is not possible
+verify-signatures          verify that the named commit has a valid GPG signature
+s,strategy=strategy        merge strategy to use
+X,strategy-option=option   option for selected merge strategy
+S,gpg-sign?key-id          GPG sign commit
+
+  Options related to fetching
+all                        fetch from all remotes
+a,append                   append to .git/FETCH_HEAD instead of overwriting
+upload-pack=path           path to upload pack on remote end
+f,force                    force overwrite of local branch
+t,tags                     fetch all tags and associated objects
+p,prune                    prune remote-tracking branches no longer on remote
+recurse-submodules?on-demand control recursive fetching of submodules
+dry-run                    dry run
+k,keep                     keep downloaded pack
+depth=depth                deepen history of shallow clone
+unshallow                  convert to a complete repository
+update-shallow             accept refs that update .git/shallow
+refmap=refmap              specify fetch refmap
+"
+test $# -gt 0 && args="$*"
 . git-sh-setup
 . git-sh-i18n
-set_reflog_action "pull${1+ $*}"
+set_reflog_action "pull${args+ $args}"
 require_work_tree_exists
 cd_to_toplevel
 
 
 die_conflict () {
     git diff-index --cached --name-status -r --ignore-submodules HEAD --
@@ -41,13 +81,14 @@
 bool_or_string_config () {
 	git config --bool "$1" 2>/dev/null || git config "$1"
 }
 
 strategy_args= diffstat= no_commit= squash= no_ff= ff_only=
 log_arg= verbosity= progress= recurse_submodules= verify_signatures=
-merge_args= edit= rebase_args=
+merge_args= edit= rebase_args= all= append= upload_pack= force= tags= prune=
+keep= depth= unshallow= update_shallow= refmap=
 curr_branch=$(git symbolic-ref -q HEAD)
 curr_branch_short="${curr_branch#refs/heads/}"
 rebase=$(bool_or_string_config branch.$curr_branch_short.rebase)
 if test -z "$rebase"
 then
 	rebase=$(bool_or_string_config pull.rebase)
@@ -83,63 +124,43 @@
 	-n|--no-stat|--no-summary)
 		diffstat=--no-stat ;;
 	--stat|--summary)
 		diffstat=--stat ;;
 	--log|--log=*|--no-log)
 		log_arg="$1" ;;
-	--no-c|--no-co|--no-com|--no-comm|--no-commi|--no-commit)
+	--no-commit)
 		no_commit=--no-commit ;;
-	--c|--co|--com|--comm|--commi|--commit)
+	--commit)
 		no_commit=--commit ;;
 	-e|--edit)
 		edit=--edit ;;
 	--no-edit)
 		edit=--no-edit ;;
-	--sq|--squ|--squa|--squas|--squash)
+	--squash)
 		squash=--squash ;;
-	--no-sq|--no-squ|--no-squa|--no-squas|--no-squash)
+	--no-squash)
 		squash=--no-squash ;;
 	--ff)
 		no_ff=--ff ;;
 	--no-ff)
 		no_ff=--no-ff ;;
 	--ff-only)
 		ff_only=--ff-only ;;
-	-s=*|--s=*|--st=*|--str=*|--stra=*|--strat=*|--strate=*|\
-		--strateg=*|--strategy=*|\
-	-s|--s|--st|--str|--stra|--strat|--strate|--strateg|--strategy)
-		case "$#,$1" in
-		*,*=*)
-			strategy=$(expr "z$1" : 'z-[^=]*=\(.*\)') ;;
-		1,*)
-			usage ;;
-		*)
-			strategy="$2"
-			shift ;;
-		esac
-		strategy_args="${strategy_args}-s $strategy "
-		;;
-	-X*)
-		case "$#,$1" in
-		1,-X)
-			usage ;;
-		*,-X)
-			xx="-X $(git rev-parse --sq-quote "$2")"
-			shift ;;
-		*,*)
-			xx=$(git rev-parse --sq-quote "$1") ;;
-		esac
-		merge_args="$merge_args$xx "
+	-s*|--strategy=*)
+		strategy_args="$strategy_args $1"
 		;;
-	-r=*|--r=*|--re=*|--reb=*|--reba=*|--rebas=*|--rebase=*)
+	-X*|--strategy-option=*)
+		merge_args="$merge_args $(git rev-parse --sq-quote "$1")"
+		;;
+	-r*|--rebase=*)
 		rebase="${1#*=}"
 		;;
-	-r|--r|--re|--reb|--reba|--rebas|--rebase)
+	--rebase)
 		rebase=true
 		;;
-	--no-r|--no-re|--no-reb|--no-reba|--no-rebas|--no-rebase)
+	--no-rebase)
 		rebase=false
 		;;
 	--recurse-submodules)
 		recurse_submodules=--recurse-submodules
 		;;
 	--recurse-submodules=*)
@@ -160,22 +181,47 @@
 	--gpg-sign=*)
 		gpg_sign_args=$(git rev-parse --sq-quote "-S${1#--gpg-sign=}")
 		;;
 	-S*)
 		gpg_sign_args=$(git rev-parse --sq-quote "$1")
 		;;
-	--d|--dr|--dry|--dry-|--dry-r|--dry-ru|--dry-run)
+	--dry-run)
 		dry_run=--dry-run
 		;;
+	--all|--no-all)
+		all=$1 ;;
+	-a|--append|--no-append)
+		append=$1 ;;
+	--upload-pack=*|--no-upload-pack)
+		upload_pack=$1 ;;
+	-f|--force|--no-force)
+		force="$force $1" ;;
+	-t|--tags|--no-tags)
+		tags=$1 ;;
+	-p|--prune|--no-prune)
+		prune=$1 ;;
+	-k|--keep|--no-keep)
+		keep=$1 ;;
+	--depth=*|--no-depth)
+		depth=$1 ;;
+	--unshallow|--no-unshallow)
+		unshallow=$1 ;;
+	--update-shallow|--no-update-shallow)
+		update_shallow=$1 ;;
+	--refmap=*|--no-refmap)
+		refmap=$1 ;;
 	-h|--help-all)
 		usage
 		;;
-	*)
-		# Pass thru anything that may be meant for fetch.
+	--)
+		shift
 		break
 		;;
+	*)
+		usage
+		;;
 	esac
 	shift
 done
 
 case "$rebase" in
 preserve)
@@ -231,13 +277,13 @@
 }
 
 test true = "$rebase" && {
 	if ! git rev-parse -q --verify HEAD >/dev/null
 	then
 		# On an unborn branch
-		if test -f "$GIT_DIR/index"
+		if test -f "$(git rev-parse --git-path index)"
 		then
 			die "$(gettext "updating an unborn branch with changes added to the index")"
 		fi
 	else
 		require_clean_work_tree "pull with rebase" "Please commit or stash them."
 	fi
@@ -245,13 +291,15 @@
 	test -n "$curr_branch" &&
 	. git-parse-remote &&
 	remoteref="$(get_remote_merge_branch "$@" 2>/dev/null)" &&
 	oldremoteref=$(git merge-base --fork-point "$remoteref" $curr_branch 2>/dev/null)
 }
 orig_head=$(git rev-parse -q --verify HEAD)
-git fetch $verbosity $progress $dry_run $recurse_submodules --update-head-ok "$@" || exit 1
+git fetch $verbosity $progress $dry_run $recurse_submodules $all $append \
+$upload_pack $force $tags $prune $keep $depth $unshallow $update_shallow \
+$refmap --update-head-ok "$@" || exit 1
 test -z "$dry_run" || exit 0
 
 curr_head=$(git rev-parse -q --verify HEAD)
 if test -n "$orig_head" && test "$curr_head" != "$orig_head"
 then
 	# The fetch involved updating the current branch.
@@ -314,21 +362,20 @@
 	if test "$oldremoteref" = "$o"
 	then
 		unset oldremoteref
 	fi
 fi
 
-merge_name=$(git fmt-merge-msg $log_arg <"$GIT_DIR/FETCH_HEAD") || exit
 case "$rebase" in
 true)
 	eval="git-rebase $diffstat $strategy_args $merge_args $rebase_args $verbosity"
 	eval="$eval $gpg_sign_args"
 	eval="$eval --onto $merge_head ${oldremoteref:-$merge_head}"
 	;;
 *)
 	eval="git-merge $diffstat $no_commit $verify_signatures $edit $squash $no_ff $ff_only"
 	eval="$eval $log_arg $strategy_args $merge_args $verbosity $progress"
 	eval="$eval $gpg_sign_args"
-	eval="$eval \"\$merge_name\" HEAD $merge_head"
+	eval="$eval FETCH_HEAD"
 	;;
 esac
 eval "exec $eval"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-pull.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-pull.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-pull.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-pull.sh	2015-07-28 04:34:56.000000000 +0800
@@ -1,19 +1,59 @@
 #!/bin/sh
 #
 # Copyright (c) 2005 Junio C Hamano
 #
 # Fetch one or more remote refs and merge it/them into the current HEAD.
 
-USAGE='[-n | --no-stat] [--[no-]commit] [--[no-]squash] [--[no-]ff|--ff-only] [--[no-]rebase|--rebase=preserve] [-s strategy]... [<fetch-options>] <repo> <head>...'
-LONG_USAGE='Fetch one or more remote refs and integrate it/them with the current HEAD.'
 SUBDIRECTORY_OK=Yes
-OPTIONS_SPEC=
+OPTIONS_KEEPDASHDASH=
+OPTIONS_STUCKLONG=Yes
+OPTIONS_SPEC="\
+git pull [options] [<repository> [<refspec>...]]
+
+Fetch one or more remote refs and integrate it/them with the current HEAD.
+--
+v,verbose                  be more verbose
+q,quiet                    be more quiet
+progress                   force progress reporting
+
+  Options related to merging
+r,rebase?false|true|preserve incorporate changes by rebasing rather than merging
+n!                         do not show a diffstat at the end of the merge
+stat                       show a diffstat at the end of the merge
+summary                    (synonym to --stat)
+log?n                      add (at most <n>) entries from shortlog to merge commit message
+squash                     create a single commit instead of doing a merge
+commit                     perform a commit if the merge succeeds (default)
+e,edit                       edit message before committing
+ff                         allow fast-forward
+ff-only!                   abort if fast-forward is not possible
+verify-signatures          verify that the named commit has a valid GPG signature
+s,strategy=strategy        merge strategy to use
+X,strategy-option=option   option for selected merge strategy
+S,gpg-sign?key-id          GPG sign commit
+
+  Options related to fetching
+all                        fetch from all remotes
+a,append                   append to .git/FETCH_HEAD instead of overwriting
+upload-pack=path           path to upload pack on remote end
+f,force                    force overwrite of local branch
+t,tags                     fetch all tags and associated objects
+p,prune                    prune remote-tracking branches no longer on remote
+recurse-submodules?on-demand control recursive fetching of submodules
+dry-run                    dry run
+k,keep                     keep downloaded pack
+depth=depth                deepen history of shallow clone
+unshallow                  convert to a complete repository
+update-shallow             accept refs that update .git/shallow
+refmap=refmap              specify fetch refmap
+"
+test $# -gt 0 && args="$*"
 . git-sh-setup
 . git-sh-i18n
-set_reflog_action "pull${1+ $*}"
+set_reflog_action "pull${args+ $args}"
 require_work_tree_exists
 cd_to_toplevel
 
 
 die_conflict () {
     git diff-index --cached --name-status -r --ignore-submodules HEAD --
@@ -41,13 +81,14 @@
 bool_or_string_config () {
 	git config --bool "$1" 2>/dev/null || git config "$1"
 }
 
 strategy_args= diffstat= no_commit= squash= no_ff= ff_only=
 log_arg= verbosity= progress= recurse_submodules= verify_signatures=
-merge_args= edit= rebase_args=
+merge_args= edit= rebase_args= all= append= upload_pack= force= tags= prune=
+keep= depth= unshallow= update_shallow= refmap=
 curr_branch=$(git symbolic-ref -q HEAD)
 curr_branch_short="${curr_branch#refs/heads/}"
 rebase=$(bool_or_string_config branch.$curr_branch_short.rebase)
 if test -z "$rebase"
 then
 	rebase=$(bool_or_string_config pull.rebase)
@@ -83,63 +124,43 @@
 	-n|--no-stat|--no-summary)
 		diffstat=--no-stat ;;
 	--stat|--summary)
 		diffstat=--stat ;;
 	--log|--log=*|--no-log)
 		log_arg="$1" ;;
-	--no-c|--no-co|--no-com|--no-comm|--no-commi|--no-commit)
+	--no-commit)
 		no_commit=--no-commit ;;
-	--c|--co|--com|--comm|--commi|--commit)
+	--commit)
 		no_commit=--commit ;;
 	-e|--edit)
 		edit=--edit ;;
 	--no-edit)
 		edit=--no-edit ;;
-	--sq|--squ|--squa|--squas|--squash)
+	--squash)
 		squash=--squash ;;
-	--no-sq|--no-squ|--no-squa|--no-squas|--no-squash)
+	--no-squash)
 		squash=--no-squash ;;
 	--ff)
 		no_ff=--ff ;;
 	--no-ff)
 		no_ff=--no-ff ;;
 	--ff-only)
 		ff_only=--ff-only ;;
-	-s=*|--s=*|--st=*|--str=*|--stra=*|--strat=*|--strate=*|\
-		--strateg=*|--strategy=*|\
-	-s|--s|--st|--str|--stra|--strat|--strate|--strateg|--strategy)
-		case "$#,$1" in
-		*,*=*)
-			strategy=$(expr "z$1" : 'z-[^=]*=\(.*\)') ;;
-		1,*)
-			usage ;;
-		*)
-			strategy="$2"
-			shift ;;
-		esac
-		strategy_args="${strategy_args}-s $strategy "
-		;;
-	-X*)
-		case "$#,$1" in
-		1,-X)
-			usage ;;
-		*,-X)
-			xx="-X $(git rev-parse --sq-quote "$2")"
-			shift ;;
-		*,*)
-			xx=$(git rev-parse --sq-quote "$1") ;;
-		esac
-		merge_args="$merge_args$xx "
+	-s*|--strategy=*)
+		strategy_args="$strategy_args $1"
 		;;
-	-r=*|--r=*|--re=*|--reb=*|--reba=*|--rebas=*|--rebase=*)
+	-X*|--strategy-option=*)
+		merge_args="$merge_args $(git rev-parse --sq-quote "$1")"
+		;;
+	-r*|--rebase=*)
 		rebase="${1#*=}"
 		;;
-	-r|--r|--re|--reb|--reba|--rebas|--rebase)
+	--rebase)
 		rebase=true
 		;;
-	--no-r|--no-re|--no-reb|--no-reba|--no-rebas|--no-rebase)
+	--no-rebase)
 		rebase=false
 		;;
 	--recurse-submodules)
 		recurse_submodules=--recurse-submodules
 		;;
 	--recurse-submodules=*)
@@ -160,22 +181,47 @@
 	--gpg-sign=*)
 		gpg_sign_args=$(git rev-parse --sq-quote "-S${1#--gpg-sign=}")
 		;;
 	-S*)
 		gpg_sign_args=$(git rev-parse --sq-quote "$1")
 		;;
-	--d|--dr|--dry|--dry-|--dry-r|--dry-ru|--dry-run)
+	--dry-run)
 		dry_run=--dry-run
 		;;
+	--all|--no-all)
+		all=$1 ;;
+	-a|--append|--no-append)
+		append=$1 ;;
+	--upload-pack=*|--no-upload-pack)
+		upload_pack=$1 ;;
+	-f|--force|--no-force)
+		force="$force $1" ;;
+	-t|--tags|--no-tags)
+		tags=$1 ;;
+	-p|--prune|--no-prune)
+		prune=$1 ;;
+	-k|--keep|--no-keep)
+		keep=$1 ;;
+	--depth=*|--no-depth)
+		depth=$1 ;;
+	--unshallow|--no-unshallow)
+		unshallow=$1 ;;
+	--update-shallow|--no-update-shallow)
+		update_shallow=$1 ;;
+	--refmap=*|--no-refmap)
+		refmap=$1 ;;
 	-h|--help-all)
 		usage
 		;;
-	*)
-		# Pass thru anything that may be meant for fetch.
+	--)
+		shift
 		break
 		;;
+	*)
+		usage
+		;;
 	esac
 	shift
 done
 
 case "$rebase" in
 preserve)
@@ -231,13 +277,13 @@
 }
 
 test true = "$rebase" && {
 	if ! git rev-parse -q --verify HEAD >/dev/null
 	then
 		# On an unborn branch
-		if test -f "$GIT_DIR/index"
+		if test -f "$(git rev-parse --git-path index)"
 		then
 			die "$(gettext "updating an unborn branch with changes added to the index")"
 		fi
 	else
 		require_clean_work_tree "pull with rebase" "Please commit or stash them."
 	fi
@@ -245,13 +291,15 @@
 	test -n "$curr_branch" &&
 	. git-parse-remote &&
 	remoteref="$(get_remote_merge_branch "$@" 2>/dev/null)" &&
 	oldremoteref=$(git merge-base --fork-point "$remoteref" $curr_branch 2>/dev/null)
 }
 orig_head=$(git rev-parse -q --verify HEAD)
-git fetch $verbosity $progress $dry_run $recurse_submodules --update-head-ok "$@" || exit 1
+git fetch $verbosity $progress $dry_run $recurse_submodules $all $append \
+$upload_pack $force $tags $prune $keep $depth $unshallow $update_shallow \
+$refmap --update-head-ok "$@" || exit 1
 test -z "$dry_run" || exit 0
 
 curr_head=$(git rev-parse -q --verify HEAD)
 if test -n "$orig_head" && test "$curr_head" != "$orig_head"
 then
 	# The fetch involved updating the current branch.
@@ -314,21 +362,20 @@
 	if test "$oldremoteref" = "$o"
 	then
 		unset oldremoteref
 	fi
 fi
 
-merge_name=$(git fmt-merge-msg $log_arg <"$GIT_DIR/FETCH_HEAD") || exit
 case "$rebase" in
 true)
 	eval="git-rebase $diffstat $strategy_args $merge_args $rebase_args $verbosity"
 	eval="$eval $gpg_sign_args"
 	eval="$eval --onto $merge_head ${oldremoteref:-$merge_head}"
 	;;
 *)
 	eval="git-merge $diffstat $no_commit $verify_signatures $edit $squash $no_ff $ff_only"
 	eval="$eval $log_arg $strategy_args $merge_args $verbosity $progress"
 	eval="$eval $gpg_sign_args"
-	eval="$eval \"\$merge_name\" HEAD $merge_head"
+	eval="$eval FETCH_HEAD"
 	;;
 esac
 eval "exec $eval"
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-push and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-push differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-read-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-read-tree differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-rebase /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-rebase
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-rebase	2017-10-10 13:18:40.894528844 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-rebase	2017-10-10 13:51:13.202457293 +0800
@@ -199,15 +199,15 @@
 	fi
 	exit $ret
 }
 
 run_pre_rebase_hook () {
 	if test -z "$ok_to_skip_pre_rebase" &&
-	   test -x "$GIT_DIR/hooks/pre-rebase"
+	   test -x "$(git rev-parse --git-path hooks/pre-rebase)"
 	then
-		"$GIT_DIR/hooks/pre-rebase" ${1+"$@"} ||
+		"$(git rev-parse --git-path hooks/pre-rebase)" ${1+"$@"} ||
 		die "$(gettext "The pre-rebase hook refused to rebase.")"
 	fi
 }
 
 test -f "$apply_dir"/applying &&
 	die "$(gettext "It looks like git-am is in progress. Cannot rebase.")"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-rebase--interactive /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-rebase--interactive
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-rebase--interactive	2017-10-10 13:18:41.102528836 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-rebase--interactive	2017-10-10 13:51:13.410457285 +0800
@@ -652,15 +652,15 @@
 	} &&
 	{
 		test -s "$rewritten_list" &&
 		git notes copy --for-rewrite=rebase < "$rewritten_list" ||
 		true # we don't care if this copying failed
 	} &&
-	if test -x "$GIT_DIR"/hooks/post-rewrite &&
-		test -s "$rewritten_list"; then
-		"$GIT_DIR"/hooks/post-rewrite rebase < "$rewritten_list"
+	hook="$(git rev-parse --git-path hooks/post-rewrite)"
+	if test -x "$hook" && test -s "$rewritten_list"; then
+		"$hook" rebase < "$rewritten_list"
 		true # we don't care if this hook failed
 	fi &&
 	warn "Successfully rebased and updated $head_name."
 
 	return 1 # not failure; just to break the do_rest loop
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-rebase--interactive.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-rebase--interactive.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-rebase--interactive.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-rebase--interactive.sh	2015-07-28 04:34:56.000000000 +0800
@@ -652,15 +652,15 @@
 	} &&
 	{
 		test -s "$rewritten_list" &&
 		git notes copy --for-rewrite=rebase < "$rewritten_list" ||
 		true # we don't care if this copying failed
 	} &&
-	if test -x "$GIT_DIR"/hooks/post-rewrite &&
-		test -s "$rewritten_list"; then
-		"$GIT_DIR"/hooks/post-rewrite rebase < "$rewritten_list"
+	hook="$(git rev-parse --git-path hooks/post-rewrite)"
+	if test -x "$hook" && test -s "$rewritten_list"; then
+		"$hook" rebase < "$rewritten_list"
 		true # we don't care if this hook failed
 	fi &&
 	warn "Successfully rebased and updated $head_name."
 
 	return 1 # not failure; just to break the do_rest loop
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-rebase--merge /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-rebase--merge
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-rebase--merge	2017-10-10 13:18:41.106528836 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-rebase--merge	2017-10-10 13:51:13.414457285 +0800
@@ -91,16 +91,14 @@
 
 finish_rb_merge () {
 	move_to_original_branch
 	if test -s "$state_dir"/rewritten
 	then
 		git notes copy --for-rewrite=rebase <"$state_dir"/rewritten
-		if test -x "$GIT_DIR"/hooks/post-rewrite
-		then
-			"$GIT_DIR"/hooks/post-rewrite rebase <"$state_dir"/rewritten
-		fi
+		hook="$(git rev-parse --git-path hooks/post-rewrite)"
+		test -x "$hook" && "$hook" rebase <"$state_dir"/rewritten
 	fi
 	say All done.
 }
 
 # The whole contents of this file is run by dot-sourcing it from
 # inside a shell function.  It used to be that "return"s we see
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-rebase--merge.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-rebase--merge.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-rebase--merge.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-rebase--merge.sh	2015-07-28 04:34:56.000000000 +0800
@@ -91,16 +91,14 @@
 
 finish_rb_merge () {
 	move_to_original_branch
 	if test -s "$state_dir"/rewritten
 	then
 		git notes copy --for-rewrite=rebase <"$state_dir"/rewritten
-		if test -x "$GIT_DIR"/hooks/post-rewrite
-		then
-			"$GIT_DIR"/hooks/post-rewrite rebase <"$state_dir"/rewritten
-		fi
+		hook="$(git rev-parse --git-path hooks/post-rewrite)"
+		test -x "$hook" && "$hook" rebase <"$state_dir"/rewritten
 	fi
 	say All done.
 }
 
 # The whole contents of this file is run by dot-sourcing it from
 # inside a shell function.  It used to be that "return"s we see
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-rebase.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-rebase.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-rebase.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-rebase.sh	2015-07-28 04:34:56.000000000 +0800
@@ -199,15 +199,15 @@
 	fi
 	exit $ret
 }
 
 run_pre_rebase_hook () {
 	if test -z "$ok_to_skip_pre_rebase" &&
-	   test -x "$GIT_DIR/hooks/pre-rebase"
+	   test -x "$(git rev-parse --git-path hooks/pre-rebase)"
 	then
-		"$GIT_DIR/hooks/pre-rebase" ${1+"$@"} ||
+		"$(git rev-parse --git-path hooks/pre-rebase)" ${1+"$@"} ||
 		die "$(gettext "The pre-rebase hook refused to rebase.")"
 	fi
 }
 
 test -f "$apply_dir"/applying &&
 	die "$(gettext "It looks like git-am is in progress. Cannot rebase.")"
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-receive-pack and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-receive-pack differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-reflog and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-reflog differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-remote and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-remote differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-remote-ext and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-remote-ext differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-remote-fd and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-remote-fd differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-remote-testsvn and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-remote-testsvn differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-repack and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-repack differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-replace and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-replace differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-rerere and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-rerere differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-reset and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-reset differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-revert and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-revert differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-rev-list and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-rev-list differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-rev-parse and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-rev-parse differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-rm and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-rm differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/GIT-SCRIPT-DEFINES /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/GIT-SCRIPT-DEFINES
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/GIT-SCRIPT-DEFINES	2017-10-10 13:18:40.842528846 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/GIT-SCRIPT-DEFINES	2017-10-10 13:51:13.138457295 +0800
@@ -1 +1 @@
-/bin/sh:diff:2.4.12: /usr/local/share/locale:YesPlease::: /usr/local/share/gitweb:/usr/bin/perl
+/bin/sh:diff:2.5.0: /usr/local/share/locale:YesPlease::: /usr/local/share/gitweb:/usr/bin/perl
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-send-email /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-send-email
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-send-email	2017-10-10 13:18:41.078528837 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-send-email	2017-10-10 13:51:13.382457286 +0800
@@ -485,12 +485,43 @@
 
 sub split_addrs {
 	return quotewords('\s*,\s*', 1, @_);
 }
 
 my %aliases;
+
+sub parse_sendmail_alias {
+	local $_ = shift;
+	if (/"/) {
+		print STDERR "warning: sendmail alias with quotes is not supported: $_\n";
+	} elsif (/:include:/) {
+		print STDERR "warning: `:include:` not supported: $_\n";
+	} elsif (/[\/|]/) {
+		print STDERR "warning: `/file` or `|pipe` redirection not supported: $_\n";
+	} elsif (/^(\S+?)\s*:\s*(.+)$/) {
+		my ($alias, $addr) = ($1, $2);
+		$aliases{$alias} = [ split_addrs($addr) ];
+	} else {
+		print STDERR "warning: sendmail line is not recognized: $_\n";
+	}
+}
+
+sub parse_sendmail_aliases {
+	my $fh = shift;
+	my $s = '';
+	while (<$fh>) {
+		chomp;
+		next if /^\s*$/ || /^\s*#/;
+		$s .= $_, next if $s =~ s/\\$// || s/^\s+//;
+		parse_sendmail_alias($s) if $s;
+		$s = $_;
+	}
+	$s =~ s/\\$//; # silently tolerate stray '\' on last line
+	parse_sendmail_alias($s) if $s;
+}
+
 my %parse_alias = (
 	# multiline formats can be supported in the future
 	mutt => sub { my $fh = shift; while (<$fh>) {
 		if (/^\s*alias\s+(?:-group\s+\S+\s+)*(\S+)\s+(.*)$/) {
 			my ($alias, $addr) = ($1, $2);
 			$addr =~ s/#.*$//; # mutt allows # comments
@@ -513,13 +544,13 @@
 		      while (<$fh>) {
 			  if (/^(\S+)\s+=\s+[^=]+=\s(\S+)/) {
 			      my ($alias, $addr) = ($1, $2);
 			       $aliases{$alias} = [ split_addrs($addr) ];
 			  }
 		      } },
-
+	sendmail => \&parse_sendmail_aliases,
 	gnus => sub { my $fh = shift; while (<$fh>) {
 		if (/\(define-mail-alias\s+"(\S+?)"\s+"(\S+?)"\)/) {
 			$aliases{$1} = [ $2 ];
 		}}}
 );
 
@@ -1176,13 +1207,13 @@
 		    }
 	       @cc);
 	my $to = join (",\n\t", @recipients);
 	@recipients = unique_email_list(@recipients,@cc,@bcclist);
 	@recipients = (map { extract_valid_address_or_die($_) } @recipients);
 	my $date = format_2822_time($time++);
-	my $gitversion = '2.4.12';
+	my $gitversion = '2.5.0';
 	if ($gitversion =~ m/..GIT_VERSION../) {
 	    $gitversion = Git::version();
 	}
 
 	my $cc = join(",\n\t", unique_email_list(@cc));
 	my $ccline = "";
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-send-email.perl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-send-email.perl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-send-email.perl	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-send-email.perl	2015-07-28 04:34:56.000000000 +0800
@@ -484,12 +484,43 @@
 
 sub split_addrs {
 	return quotewords('\s*,\s*', 1, @_);
 }
 
 my %aliases;
+
+sub parse_sendmail_alias {
+	local $_ = shift;
+	if (/"/) {
+		print STDERR "warning: sendmail alias with quotes is not supported: $_\n";
+	} elsif (/:include:/) {
+		print STDERR "warning: `:include:` not supported: $_\n";
+	} elsif (/[\/|]/) {
+		print STDERR "warning: `/file` or `|pipe` redirection not supported: $_\n";
+	} elsif (/^(\S+?)\s*:\s*(.+)$/) {
+		my ($alias, $addr) = ($1, $2);
+		$aliases{$alias} = [ split_addrs($addr) ];
+	} else {
+		print STDERR "warning: sendmail line is not recognized: $_\n";
+	}
+}
+
+sub parse_sendmail_aliases {
+	my $fh = shift;
+	my $s = '';
+	while (<$fh>) {
+		chomp;
+		next if /^\s*$/ || /^\s*#/;
+		$s .= $_, next if $s =~ s/\\$// || s/^\s+//;
+		parse_sendmail_alias($s) if $s;
+		$s = $_;
+	}
+	$s =~ s/\\$//; # silently tolerate stray '\' on last line
+	parse_sendmail_alias($s) if $s;
+}
+
 my %parse_alias = (
 	# multiline formats can be supported in the future
 	mutt => sub { my $fh = shift; while (<$fh>) {
 		if (/^\s*alias\s+(?:-group\s+\S+\s+)*(\S+)\s+(.*)$/) {
 			my ($alias, $addr) = ($1, $2);
 			$addr =~ s/#.*$//; # mutt allows # comments
@@ -512,13 +543,13 @@
 		      while (<$fh>) {
 			  if (/^(\S+)\s+=\s+[^=]+=\s(\S+)/) {
 			      my ($alias, $addr) = ($1, $2);
 			       $aliases{$alias} = [ split_addrs($addr) ];
 			  }
 		      } },
-
+	sendmail => \&parse_sendmail_aliases,
 	gnus => sub { my $fh = shift; while (<$fh>) {
 		if (/\(define-mail-alias\s+"(\S+?)"\s+"(\S+?)"\)/) {
 			$aliases{$1} = [ $2 ];
 		}}}
 );
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-send-pack and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-send-pack differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-shell and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-shell differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-sh-i18n--envsubst and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-sh-i18n--envsubst differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-shortlog and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-shortlog differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-show and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-show differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-show-branch and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-show-branch differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-show-index and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-show-index differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-show-ref and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-show-ref differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-sh-setup /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-sh-setup
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-sh-setup	2017-10-10 13:18:41.110528836 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-sh-setup	2017-10-10 13:51:13.414457285 +0800
@@ -340,13 +340,13 @@
 		}
 	fi
 	test -n "$GIT_DIR" && GIT_DIR=$(cd "$GIT_DIR" && pwd) || {
 		echo >&2 "Unable to determine absolute path of git directory"
 		exit 1
 	}
-	: ${GIT_OBJECT_DIRECTORY="$GIT_DIR/objects"}
+	: ${GIT_OBJECT_DIRECTORY="$(git rev-parse --git-path objects)"}
 }
 
 if test -z "$NONGIT_OK"
 then
 	git_dir_init
 fi
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-sh-setup.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-sh-setup.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-sh-setup.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-sh-setup.sh	2015-07-28 04:34:56.000000000 +0800
@@ -341,13 +341,13 @@
 		}
 	fi
 	test -n "$GIT_DIR" && GIT_DIR=$(cd "$GIT_DIR" && pwd) || {
 		echo >&2 "Unable to determine absolute path of git directory"
 		exit 1
 	}
-	: ${GIT_OBJECT_DIRECTORY="$GIT_DIR/objects"}
+	: ${GIT_OBJECT_DIRECTORY="$(git rev-parse --git-path objects)"}
 }
 
 if test -z "$NONGIT_OK"
 then
 	git_dir_init
 fi
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-stage and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-stage differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-stash /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-stash
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-stash	2017-10-10 13:18:40.902528844 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-stash	2017-10-10 13:51:13.210457293 +0800
@@ -17,13 +17,13 @@
 . git-sh-setup
 . git-sh-i18n
 require_work_tree
 cd_to_toplevel
 
 TMP="$GIT_DIR/.git-stash.$$"
-TMPindex=${GIT_INDEX_FILE-"$GIT_DIR/index"}.stash.$$
+TMPindex=${GIT_INDEX_FILE-"$(git rev-parse --git-path index)"}.stash.$$
 trap 'rm -f "$TMP-"* "$TMPindex"' 0
 
 ref_stash=refs/stash
 
 if git config --get-colorbool color.interactive; then
        help_color="$(git config --get-color color.interactive.help 'red bold')"
@@ -181,13 +181,13 @@
 	if test -z "$stash_msg"
 	then
 		stash_msg="Created via \"git stash store\"."
 	fi
 
 	# Make sure the reflog for stash is kept.
-	: >>"$GIT_DIR/logs/$ref_stash"
+	: >>"$(git rev-parse --git-path logs/$ref_stash)"
 	git update-ref -m "$stash_msg" $ref_stash $w_commit
 	ret=$?
 	test $ret != 0 && test -z $quiet &&
 	die "$(eval_gettext "Cannot update \$ref_stash with \$w_commit")"
 	return $ret
 }
@@ -259,13 +259,13 @@
 	git update-index -q --refresh
 	if no_changes
 	then
 		say "$(gettext "No local changes to save")"
 		exit 0
 	fi
-	test -f "$GIT_DIR/logs/$ref_stash" ||
+	test -f "$(git rev-parse --git-path logs/$ref_stash)" ||
 		clear_stash || die "$(gettext "Cannot initialize stash")"
 
 	create_stash "$stash_msg" $untracked
 	store_stash -m "$stash_msg" -q $w_commit ||
 	die "$(gettext "Cannot save the current status")"
 	say Saved working directory and index state "$stash_msg"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-stash.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-stash.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-stash.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-stash.sh	2015-07-28 04:34:56.000000000 +0800
@@ -17,13 +17,13 @@
 . git-sh-setup
 . git-sh-i18n
 require_work_tree
 cd_to_toplevel
 
 TMP="$GIT_DIR/.git-stash.$$"
-TMPindex=${GIT_INDEX_FILE-"$GIT_DIR/index"}.stash.$$
+TMPindex=${GIT_INDEX_FILE-"$(git rev-parse --git-path index)"}.stash.$$
 trap 'rm -f "$TMP-"* "$TMPindex"' 0
 
 ref_stash=refs/stash
 
 if git config --get-colorbool color.interactive; then
        help_color="$(git config --get-color color.interactive.help 'red bold')"
@@ -181,13 +181,13 @@
 	if test -z "$stash_msg"
 	then
 		stash_msg="Created via \"git stash store\"."
 	fi
 
 	# Make sure the reflog for stash is kept.
-	: >>"$GIT_DIR/logs/$ref_stash"
+	: >>"$(git rev-parse --git-path logs/$ref_stash)"
 	git update-ref -m "$stash_msg" $ref_stash $w_commit
 	ret=$?
 	test $ret != 0 && test -z $quiet &&
 	die "$(eval_gettext "Cannot update \$ref_stash with \$w_commit")"
 	return $ret
 }
@@ -259,13 +259,13 @@
 	git update-index -q --refresh
 	if no_changes
 	then
 		say "$(gettext "No local changes to save")"
 		exit 0
 	fi
-	test -f "$GIT_DIR/logs/$ref_stash" ||
+	test -f "$(git rev-parse --git-path logs/$ref_stash)" ||
 		clear_stash || die "$(gettext "Cannot initialize stash")"
 
 	create_stash "$stash_msg" $untracked
 	store_stash -m "$stash_msg" -q $w_commit ||
 	die "$(gettext "Cannot save the current status")"
 	say Saved working directory and index state "$stash_msg"
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-status and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-status differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-stripspace and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-stripspace differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-submodule /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-submodule
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-submodule	2017-10-10 13:18:40.906528844 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-submodule	2017-10-10 13:51:13.214457293 +0800
@@ -19,21 +19,12 @@
 . git-sh-i18n
 . git-parse-remote
 require_work_tree
 wt_prefix=$(git rev-parse --show-prefix)
 cd_to_toplevel
 
-# Restrict ourselves to a vanilla subset of protocols; the URLs
-# we get are under control of a remote repository, and we do not
-# want them kicking off arbitrary git-remote-* programs.
-#
-# If the user has already specified a set of allowed protocols,
-# we assume they know what they're doing and use that instead.
-: ${GIT_ALLOW_PROTOCOL=file:git:http:https:ssh}
-export GIT_ALLOW_PROTOCOL
-
 command=
 branch=
 force=
 reference=
 cached=
 recursive=
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-submodule.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-submodule.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-submodule.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-submodule.sh	2015-07-28 04:34:56.000000000 +0800
@@ -19,21 +19,12 @@
 . git-sh-i18n
 . git-parse-remote
 require_work_tree
 wt_prefix=$(git rev-parse --show-prefix)
 cd_to_toplevel
 
-# Restrict ourselves to a vanilla subset of protocols; the URLs
-# we get are under control of a remote repository, and we do not
-# want them kicking off arbitrary git-remote-* programs.
-#
-# If the user has already specified a set of allowed protocols,
-# we assume they know what they're doing and use that instead.
-: ${GIT_ALLOW_PROTOCOL=file:git:http:https:ssh}
-export GIT_ALLOW_PROTOCOL
-
 command=
 branch=
 force=
 reference=
 cached=
 recursive=
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-svn /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-svn
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-svn	2017-10-10 13:18:41.082528837 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-svn	2017-10-10 13:51:13.390457286 +0800
@@ -6,13 +6,13 @@
 use warnings;
 use strict;
 use vars qw/	$AUTHOR $VERSION
 		$sha1 $sha1_short $_revision $_repository
 		$_q $_authors $_authors_prog %users/;
 $AUTHOR = 'Eric Wong <normalperson@yhbt.net>';
-$VERSION = '2.4.12';
+$VERSION = '2.5.0';
 
 use Carp qw/croak/;
 use File::Basename qw/dirname basename/;
 use File::Path qw/mkpath/;
 use File::Spec;
 use Getopt::Long qw/:config gnu_getopt no_ignore_case auto_abbrev/;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-symbolic-ref and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-symbolic-ref differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-tag and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-tag differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-unpack-file and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-unpack-file differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-unpack-objects and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-unpack-objects differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-update-index and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-update-index differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-update-ref and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-update-ref differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-update-server-info and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-update-server-info differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-upload-archive and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-upload-archive differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-upload-pack and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-upload-pack differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/GIT-USER-AGENT /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/GIT-USER-AGENT
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/GIT-USER-AGENT	2017-10-10 13:18:34.914529063 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/GIT-USER-AGENT	2017-10-10 13:51:07.006457520 +0800
@@ -1 +1 @@
-git/2.4.12
+git/2.5.0
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-var and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-var differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-verify-commit and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-verify-commit differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-verify-pack and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-verify-pack differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-verify-tag and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-verify-tag differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/GIT-VERSION-FILE /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/GIT-VERSION-FILE
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/GIT-VERSION-FILE	2017-10-10 13:18:11.322529928 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/GIT-VERSION-FILE	2017-10-10 13:50:42.662458412 +0800
@@ -1 +1 @@
-GIT_VERSION = 2.4.12
+GIT_VERSION = 2.5.0
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/GIT-VERSION-GEN /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/GIT-VERSION-GEN
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/GIT-VERSION-GEN	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/GIT-VERSION-GEN	2015-07-28 04:34:56.000000000 +0800
@@ -1,10 +1,10 @@
 #!/bin/sh
 
 GVF=GIT-VERSION-FILE
-DEF_VER=v2.4.12
+DEF_VER=v2.5.0
 
 LF='
 '
 
 # First see if there is a version file (included in release tarballs),
 # then try git-describe, then default.
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-whatchanged and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-whatchanged differ
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0: git-worktree
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/git-write-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/git-write-tree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/gpg-interface.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/gpg-interface.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/gpg-interface.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/gpg-interface.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/graph.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/graph.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/graph.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/graph.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/grep.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/grep.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/grep.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/grep.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/hashmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/hashmap.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/hashmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/hashmap.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/help.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/help.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/help.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/help.c	2015-07-28 04:34:56.000000000 +0800
@@ -215,23 +215,45 @@
 		putchar('\n');
 		pretty_print_cmdnames(other_cmds, colopts);
 		putchar('\n');
 	}
 }
 
+static int cmd_group_cmp(const void *elem1, const void *elem2)
+{
+	const struct cmdname_help *e1 = elem1;
+	const struct cmdname_help *e2 = elem2;
+
+	if (e1->group < e2->group)
+		return -1;
+	if (e1->group > e2->group)
+		return 1;
+	return strcmp(e1->name, e2->name);
+}
+
 void list_common_cmds_help(void)
 {
 	int i, longest = 0;
+	int current_grp = -1;
 
 	for (i = 0; i < ARRAY_SIZE(common_cmds); i++) {
 		if (longest < strlen(common_cmds[i].name))
 			longest = strlen(common_cmds[i].name);
 	}
 
-	puts(_("The most commonly used git commands are:"));
+	qsort(common_cmds, ARRAY_SIZE(common_cmds),
+		sizeof(common_cmds[0]), cmd_group_cmp);
+
+	puts(_("These are common Git commands used in various situations:"));
+
 	for (i = 0; i < ARRAY_SIZE(common_cmds); i++) {
+		if (common_cmds[i].group != current_grp) {
+			printf("\n%s\n", _(common_cmd_groups[common_cmds[i].group]));
+			current_grp = common_cmds[i].group;
+		}
+
 		printf("   %s   ", common_cmds[i].name);
 		mput_char(' ', longest - strlen(common_cmds[i].name));
 		puts(_(common_cmds[i].help));
 	}
 }
 
@@ -369,13 +391,13 @@
 			     "which does not exist.\n"
 			     "Continuing under the assumption that you meant '%s'"),
 			cmd, assumed);
 		if (autocorrect > 0) {
 			fprintf_ln(stderr, _("in %0.1f seconds automatically..."),
 				(float)autocorrect/10.0);
-			poll(NULL, 0, autocorrect * 100);
+			sleep_millisec(autocorrect * 100);
 		}
 		return assumed;
 	}
 
 	fprintf_ln(stderr, _("git: '%s' is not a git command. See 'git --help'."), cmd);
 
@@ -404,13 +426,13 @@
 
 struct similar_ref_cb {
 	const char *base_ref;
 	struct string_list *similar_refs;
 };
 
-static int append_similar_ref(const char *refname, const unsigned char *sha1,
+static int append_similar_ref(const char *refname, const struct object_id *oid,
 			      int flags, void *cb_data)
 {
 	struct similar_ref_cb *cb = (struct similar_ref_cb *)(cb_data);
 	char *branch = strrchr(refname, '/') + 1;
 	const char *remote;
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/help.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/help.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/help.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/help.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/hex.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/hex.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/hex.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/hex.c	2015-07-28 04:34:56.000000000 +0800
@@ -35,13 +35,13 @@
 	 -1, -1, -1, -1, -1, -1, -1, -1,		/* f8-ff */
 };
 
 int get_sha1_hex(const char *hex, unsigned char *sha1)
 {
 	int i;
-	for (i = 0; i < 20; i++) {
+	for (i = 0; i < GIT_SHA1_RAWSZ; i++) {
 		unsigned int val;
 		/*
 		 * hex[1]=='\0' is caught when val is checked below,
 		 * but if hex[0] is NUL we have to avoid reading
 		 * past the end of the string:
 		 */
@@ -53,23 +53,33 @@
 		*sha1++ = val;
 		hex += 2;
 	}
 	return 0;
 }
 
+int get_oid_hex(const char *hex, struct object_id *oid)
+{
+	return get_sha1_hex(hex, oid->hash);
+}
+
 char *sha1_to_hex(const unsigned char *sha1)
 {
 	static int bufno;
-	static char hexbuffer[4][41];
+	static char hexbuffer[4][GIT_SHA1_HEXSZ + 1];
 	static const char hex[] = "0123456789abcdef";
 	char *buffer = hexbuffer[3 & ++bufno], *buf = buffer;
 	int i;
 
-	for (i = 0; i < 20; i++) {
+	for (i = 0; i < GIT_SHA1_RAWSZ; i++) {
 		unsigned int val = *sha1++;
 		*buf++ = hex[val >> 4];
 		*buf++ = hex[val & 0xf];
 	}
 	*buf = '\0';
 
 	return buffer;
 }
+
+char *oid_to_hex(const struct object_id *oid)
+{
+	return sha1_to_hex(oid->hash);
+}
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/hex.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/hex.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/hex.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/hex.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/http-backend.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/http-backend.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/http-backend.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/http-backend.c	2015-07-28 04:34:56.000000000 +0800
@@ -418,22 +418,22 @@
 		close(0);
 
 	if (finish_command(&cld))
 		exit(1);
 }
 
-static int show_text_ref(const char *name, const unsigned char *sha1,
-	int flag, void *cb_data)
+static int show_text_ref(const char *name, const struct object_id *oid,
+			 int flag, void *cb_data)
 {
 	const char *name_nons = strip_namespace(name);
 	struct strbuf *buf = cb_data;
-	struct object *o = parse_object(sha1);
+	struct object *o = parse_object(oid->hash);
 	if (!o)
 		return 0;
 
-	strbuf_addf(buf, "%s\t%s\n", sha1_to_hex(sha1), name_nons);
+	strbuf_addf(buf, "%s\t%s\n", oid_to_hex(oid), name_nons);
 	if (o->type == OBJ_TAG) {
 		o = deref_tag(o, name, 0);
 		if (!o)
 			return 0;
 		strbuf_addf(buf, "%s\t%s^{}\n", sha1_to_hex(o->sha1),
 			    name_nons);
@@ -470,27 +470,27 @@
 		for_each_namespaced_ref(show_text_ref, &buf);
 		send_strbuf("text/plain", &buf);
 	}
 	strbuf_release(&buf);
 }
 
-static int show_head_ref(const char *refname, const unsigned char *sha1,
-	int flag, void *cb_data)
+static int show_head_ref(const char *refname, const struct object_id *oid,
+			 int flag, void *cb_data)
 {
 	struct strbuf *buf = cb_data;
 
 	if (flag & REF_ISSYMREF) {
-		unsigned char unused[20];
+		struct object_id unused;
 		const char *target = resolve_ref_unsafe(refname,
 							RESOLVE_REF_READING,
-							unused, NULL);
+							unused.hash, NULL);
 		const char *target_nons = strip_namespace(target);
 
 		strbuf_addf(buf, "ref: %s\n", target_nons);
 	} else {
-		strbuf_addf(buf, "%s\n", sha1_to_hex(sha1));
+		strbuf_addf(buf, "%s\n", oid_to_hex(oid));
 	}
 
 	return 0;
 }
 
 static void get_head(char *arg)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/http-backend.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/http-backend.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/http-backend.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/http-backend.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/http.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/http.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/http.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/http.c	2015-07-28 04:34:56.000000000 +0800
@@ -6,13 +6,12 @@
 #include "url.h"
 #include "urlmatch.h"
 #include "credential.h"
 #include "version.h"
 #include "pkt-line.h"
 #include "gettext.h"
-#include "transport.h"
 
 int active_requests;
 int http_is_verbose;
 size_t http_post_buffer = 16 * LARGE_PACKET_MAX;
 
 #if LIBCURL_VERSION_NUM >= 0x070a06
@@ -34,12 +33,13 @@
 
 char curl_errorstr[CURL_ERROR_SIZE];
 
 static int curl_ssl_verify = -1;
 static int curl_ssl_try;
 static const char *ssl_cert;
+static const char *ssl_cipherlist;
 #if LIBCURL_VERSION_NUM >= 0x070903
 static const char *ssl_key;
 #endif
 #if LIBCURL_VERSION_NUM >= 0x070908
 static const char *ssl_capath;
 #endif
@@ -185,12 +185,14 @@
 static int http_options(const char *var, const char *value, void *cb)
 {
 	if (!strcmp("http.sslverify", var)) {
 		curl_ssl_verify = git_config_bool(var, value);
 		return 0;
 	}
+	if (!strcmp("http.sslcipherlist", var))
+		return git_config_string(&ssl_cipherlist, var, value);
 	if (!strcmp("http.sslcert", var))
 		return git_config_string(&ssl_cert, var, value);
 #if LIBCURL_VERSION_NUM >= 0x070903
 	if (!strcmp("http.sslkey", var))
 		return git_config_string(&ssl_key, var, value);
 #endif
@@ -335,13 +337,12 @@
 }
 #endif
 
 static CURL *get_curl_handle(void)
 {
 	CURL *result = curl_easy_init();
-	long allowed_protocols = 0;
 
 	if (!result)
 		die("curl_easy_init failed");
 
 	if (!curl_ssl_verify) {
 		curl_easy_setopt(result, CURLOPT_SSL_VERIFYPEER, 0);
@@ -360,12 +361,19 @@
 	curl_easy_setopt(result, CURLOPT_HTTPAUTH, CURLAUTH_ANY);
 #endif
 
 	if (http_proactive_auth)
 		init_curl_http_auth(result);
 
+	if (getenv("GIT_SSL_CIPHER_LIST"))
+		ssl_cipherlist = getenv("GIT_SSL_CIPHER_LIST");
+
+	if (ssl_cipherlist != NULL && *ssl_cipherlist)
+		curl_easy_setopt(result, CURLOPT_SSL_CIPHER_LIST,
+				ssl_cipherlist);
+
 	if (ssl_cert != NULL)
 		curl_easy_setopt(result, CURLOPT_SSLCERT, ssl_cert);
 	if (has_cert_password())
 		curl_easy_setopt(result, CURLOPT_KEYPASSWD, cert_auth.password);
 #if LIBCURL_VERSION_NUM >= 0x070903
 	if (ssl_key != NULL)
@@ -383,33 +391,17 @@
 				 curl_low_speed_limit);
 		curl_easy_setopt(result, CURLOPT_LOW_SPEED_TIME,
 				 curl_low_speed_time);
 	}
 
 	curl_easy_setopt(result, CURLOPT_FOLLOWLOCATION, 1);
-	curl_easy_setopt(result, CURLOPT_MAXREDIRS, 20);
 #if LIBCURL_VERSION_NUM >= 0x071301
 	curl_easy_setopt(result, CURLOPT_POSTREDIR, CURL_REDIR_POST_ALL);
 #elif LIBCURL_VERSION_NUM >= 0x071101
 	curl_easy_setopt(result, CURLOPT_POST301, 1);
 #endif
-#if LIBCURL_VERSION_NUM >= 0x071304
-	if (is_transport_allowed("http"))
-		allowed_protocols |= CURLPROTO_HTTP;
-	if (is_transport_allowed("https"))
-		allowed_protocols |= CURLPROTO_HTTPS;
-	if (is_transport_allowed("ftp"))
-		allowed_protocols |= CURLPROTO_FTP;
-	if (is_transport_allowed("ftps"))
-		allowed_protocols |= CURLPROTO_FTPS;
-	curl_easy_setopt(result, CURLOPT_REDIR_PROTOCOLS, allowed_protocols);
-#else
-	if (transport_restrict_protocols())
-		warning("protocol restrictions not applied to curl redirects because\n"
-			"your curl version is too old (>= 7.19.4)");
-#endif
 
 	if (getenv("GIT_CURL_VERBOSE"))
 		curl_easy_setopt(result, CURLOPT_VERBOSE, 1);
 
 	curl_easy_setopt(result, CURLOPT_USERAGENT,
 		user_agent ? user_agent : git_user_agent());
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/http-push.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/http-push.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/http-push.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/http-push.c	2015-07-28 04:34:56.000000000 +0800
@@ -1273,13 +1273,15 @@
 	entry->next = *p;
 	*p = entry;
 	return &entry->next;
 }
 
 static struct object_list **process_blob(struct blob *blob,
-					 struct object_list **p)
+					 struct object_list **p,
+					 struct name_path *path,
+					 const char *name)
 {
 	struct object *obj = &blob->object;
 
 	obj->flags |= LOCAL;
 
 	if (obj->flags & (UNINTERESTING | SEEN))
@@ -1287,37 +1289,44 @@
 
 	obj->flags |= SEEN;
 	return add_one_object(obj, p);
 }
 
 static struct object_list **process_tree(struct tree *tree,
-					 struct object_list **p)
+					 struct object_list **p,
+					 struct name_path *path,
+					 const char *name)
 {
 	struct object *obj = &tree->object;
 	struct tree_desc desc;
 	struct name_entry entry;
+	struct name_path me;
 
 	obj->flags |= LOCAL;
 
 	if (obj->flags & (UNINTERESTING | SEEN))
 		return p;
 	if (parse_tree(tree) < 0)
 		die("bad tree object %s", sha1_to_hex(obj->sha1));
 
 	obj->flags |= SEEN;
+	name = xstrdup(name);
 	p = add_one_object(obj, p);
+	me.up = path;
+	me.elem = name;
+	me.elem_len = strlen(name);
 
 	init_tree_desc(&desc, tree->buffer, tree->size);
 
 	while (tree_entry(&desc, &entry))
 		switch (object_type(entry.mode)) {
 		case OBJ_TREE:
-			p = process_tree(lookup_tree(entry.sha1), p);
+			p = process_tree(lookup_tree(entry.sha1), p, &me, name);
 			break;
 		case OBJ_BLOB:
-			p = process_blob(lookup_blob(entry.sha1), p);
+			p = process_blob(lookup_blob(entry.sha1), p, &me, name);
 			break;
 		default:
 			/* Subproject commit - not in this repository */
 			break;
 		}
 
@@ -1330,13 +1339,13 @@
 	int i;
 	struct commit *commit;
 	struct object_list **p = &objects;
 	int count = 0;
 
 	while ((commit = get_revision(revs)) != NULL) {
-		p = process_tree(commit->tree, p);
+		p = process_tree(commit->tree, p, NULL, "");
 		commit->object.flags |= LOCAL;
 		if (!(commit->object.flags & UNINTERESTING))
 			count += add_send_request(&commit->object, lock);
 	}
 
 	for (i = 0; i < revs->pending.nr; i++) {
@@ -1349,17 +1358,17 @@
 		if (obj->type == OBJ_TAG) {
 			obj->flags |= SEEN;
 			p = add_one_object(obj, p);
 			continue;
 		}
 		if (obj->type == OBJ_TREE) {
-			p = process_tree((struct tree *)obj, p);
+			p = process_tree((struct tree *)obj, p, NULL, name);
 			continue;
 		}
 		if (obj->type == OBJ_BLOB) {
-			p = process_blob((struct blob *)obj, p);
+			p = process_blob((struct blob *)obj, p, NULL, name);
 			continue;
 		}
 		die("unknown pending object %s (%s)", sha1_to_hex(obj->sha1), name);
 	}
 
 	while (objects) {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ident.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ident.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ident.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ident.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/imap-send.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/imap-send.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/imap-send.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/imap-send.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/kwset.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/kwset.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/kwset.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/kwset.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/levenshtein.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/levenshtein.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/levenshtein.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/levenshtein.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/libgit.a and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/libgit.a differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/line-log.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/line-log.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/line-log.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/line-log.c	2015-07-28 04:34:56.000000000 +0800
@@ -322,13 +322,13 @@
 	if (count_b >= 0)
 		range_set_append(&d->diff->target, start_b, start_b + count_b);
 
 	return 0;
 }
 
-static int collect_diff(mmfile_t *parent, mmfile_t *target, struct diff_ranges *out)
+static void collect_diff(mmfile_t *parent, mmfile_t *target, struct diff_ranges *out)
 {
 	struct collect_diff_cbdata cbdata = {NULL};
 	xpparam_t xpp;
 	xdemitconf_t xecfg;
 	xdemitcb_t ecb;
 
@@ -337,13 +337,13 @@
 	xecfg.ctxlen = xecfg.interhunkctxlen = 0;
 
 	cbdata.diff = out;
 	xecfg.hunk_func = collect_diff_cb;
 	memset(&ecb, 0, sizeof(ecb));
 	ecb.priv = &cbdata;
-	return xdi_diff(parent, target, &xpp, &xecfg, &ecb);
+	xdi_diff(parent, target, &xpp, &xecfg, &ecb);
 }
 
 /*
  * These are handy for debugging.  Removing them with #if 0 silences
  * the "unused function" warning.
  */
@@ -1027,14 +1027,13 @@
 	} else {
 		file_parent.ptr = "";
 		file_parent.size = 0;
 	}
 
 	diff_ranges_init(&diff);
-	if (collect_diff(&file_parent, &file_target, &diff))
-		die("unable to generate diff for %s", pair->one->path);
+	collect_diff(&file_parent, &file_target, &diff);
 
 	/* NEEDSWORK should apply some heuristics to prevent mismatches */
 	free(rg->path);
 	rg->path = xstrdup(pair->one->path);
 
 	range_set_init(&tmp, 0);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/line-log.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/line-log.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/line-log.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/line-log.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/line-range.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/line-range.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/line-range.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/line-range.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/list-objects.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/list-objects.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/list-objects.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/list-objects.c	2015-07-28 04:34:56.000000000 +0800
@@ -8,31 +8,26 @@
 #include "revision.h"
 #include "list-objects.h"
 
 static void process_blob(struct rev_info *revs,
 			 struct blob *blob,
 			 show_object_fn show,
-			 struct strbuf *path,
+			 struct name_path *path,
 			 const char *name,
 			 void *cb_data)
 {
 	struct object *obj = &blob->object;
-	size_t pathlen;
 
 	if (!revs->blob_objects)
 		return;
 	if (!obj)
 		die("bad blob object");
 	if (obj->flags & (UNINTERESTING | SEEN))
 		return;
 	obj->flags |= SEEN;
-
-	pathlen = path->len;
-	strbuf_addstr(path, name);
-	show(obj, path->buf, cb_data);
-	strbuf_setlen(path, pathlen);
+	show(obj, path, name, cb_data);
 }
 
 /*
  * Processing a gitlink entry currently does nothing, since
  * we do not recurse into the subproject.
  *
@@ -54,29 +49,31 @@
  * the link, and how to do it. Whether it necessarily makes
  * any sense what-so-ever to ever do that is another issue.
  */
 static void process_gitlink(struct rev_info *revs,
 			    const unsigned char *sha1,
 			    show_object_fn show,
-			    struct strbuf *path,
+			    struct name_path *path,
 			    const char *name,
 			    void *cb_data)
 {
 	/* Nothing to do */
 }
 
 static void process_tree(struct rev_info *revs,
 			 struct tree *tree,
 			 show_object_fn show,
+			 struct name_path *path,
 			 struct strbuf *base,
 			 const char *name,
 			 void *cb_data)
 {
 	struct object *obj = &tree->object;
 	struct tree_desc desc;
 	struct name_entry entry;
+	struct name_path me;
 	enum interesting match = revs->diffopt.pathspec.nr == 0 ?
 		all_entries_interesting: entry_not_interesting;
 	int baselen = base->len;
 
 	if (!revs->tree_objects)
 		return;
@@ -86,18 +83,23 @@
 		return;
 	if (parse_tree_gently(tree, revs->ignore_missing_links) < 0) {
 		if (revs->ignore_missing_links)
 			return;
 		die("bad tree object %s", sha1_to_hex(obj->sha1));
 	}
-
 	obj->flags |= SEEN;
-	strbuf_addstr(base, name);
-	show(obj, base->buf, cb_data);
-	if (base->len)
-		strbuf_addch(base, '/');
+	show(obj, path, name, cb_data);
+	me.up = path;
+	me.elem = name;
+	me.elem_len = strlen(name);
+
+	if (!match) {
+		strbuf_addstr(base, name);
+		if (base->len)
+			strbuf_addch(base, '/');
+	}
 
 	init_tree_desc(&desc, tree->buffer, tree->size);
 
 	while (tree_entry(&desc, &entry)) {
 		if (match != all_entries_interesting) {
 			match = tree_entry_interesting(&entry, base, 0,
@@ -108,22 +110,22 @@
 				continue;
 		}
 
 		if (S_ISDIR(entry.mode))
 			process_tree(revs,
 				     lookup_tree(entry.sha1),
-				     show, base, entry.path,
+				     show, &me, base, entry.path,
 				     cb_data);
 		else if (S_ISGITLINK(entry.mode))
 			process_gitlink(revs, entry.sha1,
-					show, base, entry.path,
+					show, &me, entry.path,
 					cb_data);
 		else
 			process_blob(revs,
 				     lookup_blob(entry.sha1),
-				     show, base, entry.path,
+				     show, &me, entry.path,
 				     cb_data);
 	}
 	strbuf_setlen(base, baselen);
 	free_tree_buffer(tree);
 }
 
@@ -208,25 +210,25 @@
 		const char *name = pending->name;
 		const char *path = pending->path;
 		if (obj->flags & (UNINTERESTING | SEEN))
 			continue;
 		if (obj->type == OBJ_TAG) {
 			obj->flags |= SEEN;
-			show_object(obj, name, data);
+			show_object(obj, NULL, name, data);
 			continue;
 		}
 		if (!path)
 			path = "";
 		if (obj->type == OBJ_TREE) {
 			process_tree(revs, (struct tree *)obj, show_object,
-				     &base, path, data);
+				     NULL, &base, path, data);
 			continue;
 		}
 		if (obj->type == OBJ_BLOB) {
 			process_blob(revs, (struct blob *)obj, show_object,
-				     &base, path, data);
+				     NULL, path, data);
 			continue;
 		}
 		die("unknown pending object %s (%s)",
 		    sha1_to_hex(obj->sha1), name);
 	}
 	object_array_clear(&revs->pending);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/list-objects.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/list-objects.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/list-objects.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/list-objects.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/list-objects.h	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/list-objects.h	2015-07-28 04:34:56.000000000 +0800
@@ -1,11 +1,11 @@
 #ifndef LIST_OBJECTS_H
 #define LIST_OBJECTS_H
 
 typedef void (*show_commit_fn)(struct commit *, void *);
-typedef void (*show_object_fn)(struct object *, const char *, void *);
+typedef void (*show_object_fn)(struct object *, const struct name_path *, const char *, void *);
 void traverse_commit_list(struct rev_info *, show_commit_fn, show_object_fn, void *);
 
 typedef void (*show_edge_fn)(struct commit *);
 void mark_edges_uninteresting(struct rev_info *, show_edge_fn);
 
 #endif
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/list-objects.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/list-objects.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ll-merge.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ll-merge.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ll-merge.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ll-merge.c	2015-07-28 04:34:56.000000000 +0800
@@ -6,12 +6,13 @@
 
 #include "cache.h"
 #include "attr.h"
 #include "xdiff-interface.h"
 #include "run-command.h"
 #include "ll-merge.h"
+#include "quote.h"
 
 struct ll_merge_driver;
 
 typedef int (*ll_merge_fn)(const struct ll_merge_driver *,
 			   mmbuffer_t *result,
 			   const char *path,
@@ -85,16 +86,13 @@
 			const struct ll_merge_options *opts,
 			int marker_size)
 {
 	xmparam_t xmp;
 	assert(opts);
 
-	if (orig->size > MAX_XDIFF_SIZE ||
-	    src1->size > MAX_XDIFF_SIZE ||
-	    src2->size > MAX_XDIFF_SIZE ||
-	    buffer_is_binary(orig->ptr, orig->size) ||
+	if (buffer_is_binary(orig->ptr, orig->size) ||
 	    buffer_is_binary(src1->ptr, src1->size) ||
 	    buffer_is_binary(src2->ptr, src2->size)) {
 		return ll_binary_merge(drv_unused, result,
 				       path,
 				       orig, orig_name,
 				       src1, name1,
@@ -166,23 +164,26 @@
 			mmfile_t *src2, const char *name2,
 			const struct ll_merge_options *opts,
 			int marker_size)
 {
 	char temp[4][50];
 	struct strbuf cmd = STRBUF_INIT;
-	struct strbuf_expand_dict_entry dict[5];
+	struct strbuf_expand_dict_entry dict[6];
+	struct strbuf path_sq = STRBUF_INIT;
 	const char *args[] = { NULL, NULL };
 	int status, fd, i;
 	struct stat st;
 	assert(opts);
 
+	sq_quote_buf(&path_sq, path);
 	dict[0].placeholder = "O"; dict[0].value = temp[0];
 	dict[1].placeholder = "A"; dict[1].value = temp[1];
 	dict[2].placeholder = "B"; dict[2].value = temp[2];
 	dict[3].placeholder = "L"; dict[3].value = temp[3];
-	dict[4].placeholder = NULL; dict[4].value = NULL;
+	dict[4].placeholder = "P"; dict[4].value = path_sq.buf;
+	dict[5].placeholder = NULL; dict[5].value = NULL;
 
 	if (fn->cmdline == NULL)
 		die("custom merge driver %s lacks command line.", fn->name);
 
 	result->ptr = NULL;
 	result->size = 0;
@@ -210,12 +211,13 @@
  close_bad:
 	close(fd);
  bad:
 	for (i = 0; i < 3; i++)
 		unlink_or_warn(temp[i]);
 	strbuf_release(&cmd);
+	strbuf_release(&path_sq);
 	return status;
 }
 
 /*
  * merge.default and merge.driver configuration items
  */
@@ -269,12 +271,13 @@
 		 * tokens and is given to the shell:
 		 *
 		 *    %O - temporary file name for the merge base.
 		 *    %A - temporary file name for our version.
 		 *    %B - temporary file name for the other branches' version.
 		 *    %L - conflict marker length
+		 *    %P - the original path (safely quoted for the shell)
 		 *
 		 * The external merge driver should write the results in the
 		 * file named by %A, and signal that it has done with zero exit
 		 * status.
 		 */
 		fn->cmdline = xstrdup(value);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ll-merge.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ll-merge.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ll-merge.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ll-merge.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/lockfile.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/lockfile.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/lockfile.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/lockfile.c	2015-07-28 04:34:56.000000000 +0800
@@ -154,12 +154,73 @@
 		errno = save_errno;
 		return -1;
 	}
 	return lk->fd;
 }
 
+/*
+ * Constants defining the gaps between attempts to lock a file. The
+ * first backoff period is approximately INITIAL_BACKOFF_MS
+ * milliseconds. The longest backoff period is approximately
+ * (BACKOFF_MAX_MULTIPLIER * INITIAL_BACKOFF_MS) milliseconds.
+ */
+#define INITIAL_BACKOFF_MS 1L
+#define BACKOFF_MAX_MULTIPLIER 1000
+
+/*
+ * Try locking path, retrying with quadratic backoff for at least
+ * timeout_ms milliseconds. If timeout_ms is 0, try locking the file
+ * exactly once. If timeout_ms is -1, try indefinitely.
+ */
+static int lock_file_timeout(struct lock_file *lk, const char *path,
+			     int flags, long timeout_ms)
+{
+	int n = 1;
+	int multiplier = 1;
+	long remaining_ms = 0;
+	static int random_initialized = 0;
+
+	if (timeout_ms == 0)
+		return lock_file(lk, path, flags);
+
+	if (!random_initialized) {
+		srand((unsigned int)getpid());
+		random_initialized = 1;
+	}
+
+	if (timeout_ms > 0)
+		remaining_ms = timeout_ms;
+
+	while (1) {
+		long backoff_ms, wait_ms;
+		int fd;
+
+		fd = lock_file(lk, path, flags);
+
+		if (fd >= 0)
+			return fd; /* success */
+		else if (errno != EEXIST)
+			return -1; /* failure other than lock held */
+		else if (timeout_ms > 0 && remaining_ms <= 0)
+			return -1; /* failure due to timeout */
+
+		backoff_ms = multiplier * INITIAL_BACKOFF_MS;
+		/* back off for between 0.75*backoff_ms and 1.25*backoff_ms */
+		wait_ms = (750 + rand() % 500) * backoff_ms / 1000;
+		sleep_millisec(wait_ms);
+		remaining_ms -= wait_ms;
+
+		/* Recursion: (n+1)^2 = n^2 + 2n + 1 */
+		multiplier += 2*n + 1;
+		if (multiplier > BACKOFF_MAX_MULTIPLIER)
+			multiplier = BACKOFF_MAX_MULTIPLIER;
+		else
+			n++;
+	}
+}
+
 void unable_to_lock_message(const char *path, int err, struct strbuf *buf)
 {
 	if (err == EEXIST) {
 		strbuf_addf(buf, "Unable to create '%s.lock': %s.\n\n"
 		    "If no other git process is currently running, this probably means a\n"
 		    "git process crashed in this repository earlier. Make sure no other git\n"
@@ -176,15 +237,16 @@
 
 	unable_to_lock_message(path, err, &buf);
 	die("%s", buf.buf);
 }
 
 /* This should return a meaningful errno on failure */
-int hold_lock_file_for_update(struct lock_file *lk, const char *path, int flags)
+int hold_lock_file_for_update_timeout(struct lock_file *lk, const char *path,
+				      int flags, long timeout_ms)
 {
-	int fd = lock_file(lk, path, flags);
+	int fd = lock_file_timeout(lk, path, flags, timeout_ms);
 	if (fd < 0 && (flags & LOCK_DIE_ON_ERROR))
 		unable_to_lock_die(path, errno);
 	return fd;
 }
 
 int hold_lock_file_for_append(struct lock_file *lk, const char *path, int flags)
@@ -211,13 +273,13 @@
 			return -1;
 		}
 	} else if (copy_fd(orig_fd, fd)) {
 		int save_errno = errno;
 
 		if (flags & LOCK_DIE_ON_ERROR)
-			exit(128);
+			die("failed to prepare '%s' for appending", path);
 		close(orig_fd);
 		rollback_lock_file(lk);
 		errno = save_errno;
 		return -1;
 	} else {
 		close(orig_fd);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/lockfile.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/lockfile.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/lockfile.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/lockfile.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/lockfile.h	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/lockfile.h	2015-07-28 04:34:56.000000000 +0800
@@ -71,14 +71,26 @@
 #define LOCK_DIE_ON_ERROR 1
 #define LOCK_NO_DEREF 2
 
 extern void unable_to_lock_message(const char *path, int err,
 				   struct strbuf *buf);
 extern NORETURN void unable_to_lock_die(const char *path, int err);
-extern int hold_lock_file_for_update(struct lock_file *, const char *path, int);
-extern int hold_lock_file_for_append(struct lock_file *, const char *path, int);
+extern int hold_lock_file_for_update_timeout(
+		struct lock_file *lk, const char *path,
+		int flags, long timeout_ms);
+
+static inline int hold_lock_file_for_update(
+		struct lock_file *lk, const char *path,
+		int flags)
+{
+	return hold_lock_file_for_update_timeout(lk, path, flags, 0);
+}
+
+extern int hold_lock_file_for_append(struct lock_file *lk, const char *path,
+				     int flags);
+
 extern FILE *fdopen_lock_file(struct lock_file *, const char *mode);
 extern char *get_locked_file_path(struct lock_file *);
 extern int commit_lock_file_to(struct lock_file *, const char *path);
 extern int commit_lock_file(struct lock_file *);
 extern int reopen_lock_file(struct lock_file *);
 extern int close_lock_file(struct lock_file *);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/lockfile.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/lockfile.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/log-tree.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/log-tree.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/log-tree.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/log-tree.c	2015-07-28 04:34:56.000000000 +0800
@@ -86,34 +86,35 @@
 
 const struct name_decoration *get_name_decoration(const struct object *obj)
 {
 	return lookup_decoration(&name_decoration, obj);
 }
 
-static int add_ref_decoration(const char *refname, const unsigned char *sha1, int flags, void *cb_data)
+static int add_ref_decoration(const char *refname, const struct object_id *oid,
+			      int flags, void *cb_data)
 {
 	struct object *obj;
 	enum decoration_type type = DECORATION_NONE;
 
 	assert(cb_data == NULL);
 
 	if (starts_with(refname, "refs/replace/")) {
-		unsigned char original_sha1[20];
+		struct object_id original_oid;
 		if (!check_replace_refs)
 			return 0;
-		if (get_sha1_hex(refname + 13, original_sha1)) {
+		if (get_oid_hex(refname + 13, &original_oid)) {
 			warning("invalid replace ref %s", refname);
 			return 0;
 		}
-		obj = parse_object(original_sha1);
+		obj = parse_object(original_oid.hash);
 		if (obj)
 			add_name_decoration(DECORATION_GRAFTED, "replaced", obj);
 		return 0;
 	}
 
-	obj = parse_object(sha1);
+	obj = parse_object(oid->hash);
 	if (!obj)
 		return 0;
 
 	if (starts_with(refname, "refs/heads/"))
 		type = DECORATION_REF_LOCAL;
 	else if (starts_with(refname, "refs/remotes/"))
@@ -136,13 +137,13 @@
 	}
 	return 0;
 }
 
 static int add_graft_decoration(const struct commit_graft *graft, void *cb_data)
 {
-	struct commit *commit = lookup_commit(graft->sha1);
+	struct commit *commit = lookup_commit(graft->oid.hash);
 	if (!commit)
 		return 0;
 	add_name_decoration(DECORATION_GRAFTED, "grafted", &commit->object);
 	return 0;
 }
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/log-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/log-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/log-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/log-tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/mailmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/mailmap.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/mailmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/mailmap.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Makefile /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Makefile
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/Makefile	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/Makefile	2015-07-28 04:34:56.000000000 +0800
@@ -214,16 +214,17 @@
 # "-Wl,-rpath=/path/lib" is used instead.
 #
 # Define NO_NORETURN if using buggy versions of gcc 4.6+ and profile feedback,
 # as the compiler can crash (http://gcc.gnu.org/bugzilla/show_bug.cgi?id=49299)
 #
 # Define USE_NSEC below if you want git to care about sub-second file mtimes
-# and ctimes. Note that you need recent glibc (at least 2.2.4) for this, and
-# it will BREAK YOUR LOCAL DIFFS! show-diff and anything using it will likely
-# randomly break unless your underlying filesystem supports those sub-second
-# times (my ext3 doesn't).
+# and ctimes. Note that you need recent glibc (at least 2.2.4) for this. On
+# Linux, kernel 2.6.11 or newer is required for reliable sub-second file times
+# on file systems with exactly 1 ns or 1 s resolution. If you intend to use Git
+# on other file systems (e.g. CEPH, CIFS, NTFS, UDF), don't enable USE_NSEC. See
+# Documentation/technical/racy-git.txt for details.
 #
 # Define USE_ST_TIMESPEC if your "struct stat" uses "st_ctimespec" instead of
 # "st_ctim"
 #
 # Define NO_NSEC if your "struct stat" does not have "st_ctim.tv_nsec"
 # available.  This automatically turns USE_NSEC off.
@@ -356,12 +357,14 @@
 #
 # and define it to "no" if you need to remove the parentheses () around the
 # constant.  The default is "auto", which means to use parentheses if your
 # compiler is detected to support it.
 #
 # Define HAVE_BSD_SYSCTL if your platform has a BSD-compatible sysctl function.
+#
+# Define HAVE_GETDELIM if your system has the getdelim() function.
 
 GIT-VERSION-FILE: FORCE
 	@$(SHELL_PATH) ./GIT-VERSION-GEN
 -include GIT-VERSION-FILE
 
 # CFLAGS and LDFLAGS are for the users to override from the command line.
@@ -569,12 +572,13 @@
 TEST_PROGRAMS_NEED_X += test-ctype
 TEST_PROGRAMS_NEED_X += test-config
 TEST_PROGRAMS_NEED_X += test-date
 TEST_PROGRAMS_NEED_X += test-delta
 TEST_PROGRAMS_NEED_X += test-dump-cache-tree
 TEST_PROGRAMS_NEED_X += test-dump-split-index
+TEST_PROGRAMS_NEED_X += test-dump-untracked-cache
 TEST_PROGRAMS_NEED_X += test-genrandom
 TEST_PROGRAMS_NEED_X += test-hashmap
 TEST_PROGRAMS_NEED_X += test-index-version
 TEST_PROGRAMS_NEED_X += test-line-buffer
 TEST_PROGRAMS_NEED_X += test-match-trees
 TEST_PROGRAMS_NEED_X += test-mergesort
@@ -903,12 +907,13 @@
 BUILTIN_OBJS += builtin/update-server-info.o
 BUILTIN_OBJS += builtin/upload-archive.o
 BUILTIN_OBJS += builtin/var.o
 BUILTIN_OBJS += builtin/verify-commit.o
 BUILTIN_OBJS += builtin/verify-pack.o
 BUILTIN_OBJS += builtin/verify-tag.o
+BUILTIN_OBJS += builtin/worktree.o
 BUILTIN_OBJS += builtin/write-tree.o
 
 GITLIBS = $(LIB_FILE) $(XDIFF_LIB)
 EXTLIBS =
 
 GIT_USER_AGENT = git/$(GIT_VERSION)
@@ -1434,12 +1439,16 @@
 endif
 
 ifdef HAVE_BSD_SYSCTL
 	BASIC_CFLAGS += -DHAVE_BSD_SYSCTL
 endif
 
+ifdef HAVE_GETDELIM
+	BASIC_CFLAGS += -DHAVE_GETDELIM
+endif
+
 ifeq ($(TCLTK_PATH),)
 NO_TCLTK = NoThanks
 endif
 
 ifeq ($(PERL_PATH),)
 NO_PERL = NoThanks
@@ -1684,16 +1693,16 @@
 $(BUILT_INS): git$X
 	$(QUIET_BUILT_IN)$(RM) $@ && \
 	ln $< $@ 2>/dev/null || \
 	ln -s $< $@ 2>/dev/null || \
 	cp $< $@
 
-common-cmds.h: ./generate-cmdlist.sh command-list.txt
+common-cmds.h: generate-cmdlist.perl command-list.txt
 
 common-cmds.h: $(wildcard Documentation/git-*.txt)
-	$(QUIET_GEN)./generate-cmdlist.sh > $@+ && mv $@+ $@
+	$(QUIET_GEN)$(PERL_PATH) generate-cmdlist.perl command-list.txt > $@+ && mv $@+ $@
 
 SCRIPT_DEFINES = $(SHELL_PATH_SQ):$(DIFF_SQ):$(GIT_VERSION):\
 	$(localedir_SQ):$(NO_CURL):$(USE_GETTEXT_SCHEME):$(SANE_TOOL_PATH_SQ):\
 	$(gitwebdir_SQ):$(PERL_PATH_SQ)
 define cmd_munge_script
 $(RM) $@ $@+ && \
@@ -2446,21 +2455,22 @@
 		git-fsck-objects | git-init-db | \
 		git-remote-* | git-stage | \
 		git-?*--?* ) continue ;; \
 		esac ; \
 		test -f "Documentation/$$v.txt" || \
 		echo "no doc: $$v"; \
-		sed -e '/^#/d' command-list.txt | \
+		sed -e '1,/^### command list/d' -e '/^#/d' command-list.txt | \
 		grep -q "^$$v[ 	]" || \
 		case "$$v" in \
 		git) ;; \
 		*) echo "no link: $$v";; \
 		esac ; \
 	done; \
 	( \
-		sed -e '/^#/d' \
+		sed -e '1,/^### command list/d' \
+		    -e '/^#/d' \
 		    -e 's/[ 	].*//' \
 		    -e 's/^/listed /' command-list.txt; \
 		$(MAKE) -C Documentation print-man1 | \
 		grep '\.txt$$' | \
 		sed -e 's|Documentation/|documented |' \
 		    -e 's/\.txt//'; \
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/match-trees.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/match-trees.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/match-trees.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/match-trees.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/merge-blobs.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/merge-blobs.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/merge-blobs.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/merge-blobs.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/merge.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/merge.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/merge.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/merge.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/merge-recursive.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/merge-recursive.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/merge-recursive.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/merge-recursive.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/mergesort.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/mergesort.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/mergesort.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/mergesort.o differ
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/mergetools: winmerge
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/name-hash.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/name-hash.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/name-hash.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/name-hash.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes.c	2015-07-28 04:34:56.000000000 +0800
@@ -359,20 +359,19 @@
 
 static int non_note_cmp(const struct non_note *a, const struct non_note *b)
 {
 	return strcmp(a->path, b->path);
 }
 
-/* note: takes ownership of path string */
-static void add_non_note(struct notes_tree *t, char *path,
+static void add_non_note(struct notes_tree *t, const char *path,
 		unsigned int mode, const unsigned char *sha1)
 {
 	struct non_note *p = t->prev_non_note, *n;
 	n = (struct non_note *) xmalloc(sizeof(struct non_note));
 	n->next = NULL;
-	n->path = path;
+	n->path = xstrdup(path);
 	n->mode = mode;
 	hashcpy(n->sha1, sha1);
 	t->prev_non_note = n;
 
 	if (!t->first_non_note) {
 		t->first_non_note = n;
@@ -480,23 +479,23 @@
 		 *
 		 * To conclude, it is strongly advised to make sure non-notes
 		 * have at least one non-hex character in the top-level path
 		 * component.
 		 */
 		{
-			struct strbuf non_note_path = STRBUF_INIT;
+			char non_note_path[PATH_MAX];
+			char *p = non_note_path;
 			const char *q = sha1_to_hex(subtree->key_sha1);
 			int i;
 			for (i = 0; i < prefix_len; i++) {
-				strbuf_addch(&non_note_path, *q++);
-				strbuf_addch(&non_note_path, *q++);
-				strbuf_addch(&non_note_path, '/');
+				*p++ = *q++;
+				*p++ = *q++;
+				*p++ = '/';
 			}
-			strbuf_addstr(&non_note_path, entry.path);
-			add_non_note(t, strbuf_detach(&non_note_path, NULL),
-				     entry.mode, entry.sha1);
+			strcpy(p, entry.path);
+			add_non_note(t, non_note_path, entry.mode, entry.sha1);
 		}
 	}
 	free(buf);
 }
 
 /*
@@ -916,13 +915,13 @@
 out:
 	strbuf_release(&buf);
 	string_list_clear(&sort_uniq_list, 0);
 	return ret;
 }
 
-static int string_list_add_one_ref(const char *refname, const unsigned char *sha1,
+static int string_list_add_one_ref(const char *refname, const struct object_id *oid,
 				   int flag, void *cb)
 {
 	struct string_list *refs = cb;
 	if (!unsorted_string_list_has_string(refs, refname))
 		string_list_append(refs, refname);
 	return 0;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes-cache.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes-cache.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes-cache.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes-cache.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes-merge.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes-merge.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes-merge.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes-merge.c	2015-07-28 04:34:56.000000000 +0800
@@ -277,13 +277,13 @@
 				    "notes merge.", git_path("NOTES_MERGE_*"));
 			else
 				die("You have not concluded your notes merge "
 				    "(%s exists).", git_path("NOTES_MERGE_*"));
 		}
 
-		if (safe_create_leading_directories(git_path(
+		if (safe_create_leading_directories_const(git_path(
 				NOTES_MERGE_WORKTREE "/.test")))
 			die_errno("unable to create directory %s",
 				  git_path(NOTES_MERGE_WORKTREE));
 		o->has_worktree = 1;
 	} else if (!file_exists(git_path(NOTES_MERGE_WORKTREE)))
 		/* NOTES_MERGE_WORKTREE should already be established */
@@ -292,14 +292,14 @@
 }
 
 static void write_buf_to_worktree(const unsigned char *obj,
 				  const char *buf, unsigned long size)
 {
 	int fd;
-	char *path = git_path(NOTES_MERGE_WORKTREE "/%s", sha1_to_hex(obj));
-	if (safe_create_leading_directories(path))
+	const char *path = git_path(NOTES_MERGE_WORKTREE "/%s", sha1_to_hex(obj));
+	if (safe_create_leading_directories_const(path))
 		die_errno("unable to create directory for '%s'", path);
 	if (file_exists(path))
 		die("found existing file at '%s'", path);
 
 	fd = open(path, O_WRONLY | O_TRUNC | O_CREAT, 0666);
 	if (fd < 0)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes-merge.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes-merge.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes-merge.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes-merge.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes-utils.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes-utils.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/notes-utils.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/notes-utils.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/object.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/object.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/object.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/object.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-bitmap.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-bitmap.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-bitmap.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-bitmap.c	2015-07-28 04:34:56.000000000 +0800
@@ -419,21 +419,25 @@
 		bitmap_pos = kh_value(eindex->positions, hash_pos);
 	}
 
 	return bitmap_pos + bitmap_git.pack->num_objects;
 }
 
-static void show_object(struct object *object, const char *name, void *data)
+static void show_object(struct object *object, const struct name_path *path,
+			const char *last, void *data)
 {
 	struct bitmap *base = data;
 	int bitmap_pos;
 
 	bitmap_pos = bitmap_position(object->sha1);
 
-	if (bitmap_pos < 0)
+	if (bitmap_pos < 0) {
+		char *name = path_name(path, last);
 		bitmap_pos = ext_index_add_object(object, name);
+		free(name);
+	}
 
 	bitmap_set(base, bitmap_pos);
 }
 
 static void show_commit(struct commit *commit, void *data)
 {
@@ -895,14 +899,15 @@
 struct bitmap_test_data {
 	struct bitmap *base;
 	struct progress *prg;
 	size_t seen;
 };
 
-static void test_show_object(struct object *object, const char *name,
-			     void *data)
+static void test_show_object(struct object *object,
+			     const struct name_path *path,
+			     const char *last, void *data)
 {
 	struct bitmap_test_data *tdata = data;
 	int bitmap_pos;
 
 	bitmap_pos = bitmap_position(object->sha1);
 	if (bitmap_pos < 0)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-bitmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-bitmap.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-bitmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-bitmap.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-bitmap-write.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-bitmap-write.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-bitmap-write.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-bitmap-write.c	2015-07-28 04:34:56.000000000 +0800
@@ -145,13 +145,14 @@
 			"(object %s is missing)", sha1_to_hex(sha1));
 	}
 
 	return entry->in_pack_pos;
 }
 
-static void show_object(struct object *object, const char *name, void *data)
+static void show_object(struct object *object, const struct name_path *path,
+			const char *last, void *data)
 {
 	struct bitmap *base = data;
 	bitmap_set(base, find_object_pos(object->sha1));
 	mark_as_seen(object);
 }
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-bitmap-write.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-bitmap-write.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-bitmap-write.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-bitmap-write.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-check.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-check.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-check.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-check.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-objects.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-objects.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-objects.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-objects.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-revindex.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-revindex.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-revindex.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-revindex.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-write.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-write.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pack-write.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pack-write.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pager.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pager.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pager.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pager.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/parse-options.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/parse-options.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/parse-options-cb.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/parse-options-cb.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/parse-options-cb.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/parse-options-cb.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/parse-options.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/parse-options.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/patch-delta.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/patch-delta.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/patch-delta.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/patch-delta.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/patch-ids.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/patch-ids.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/patch-ids.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/patch-ids.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/path.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/path.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/path.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/path.c	2015-07-28 04:34:56.000000000 +0800
@@ -1,29 +1,34 @@
 /*
  * Utilities for paths and pathnames
  */
 #include "cache.h"
 #include "strbuf.h"
 #include "string-list.h"
+#include "dir.h"
 
 static int get_st_mode_bits(const char *path, int *mode)
 {
 	struct stat st;
 	if (lstat(path, &st) < 0)
 		return -1;
 	*mode = st.st_mode;
 	return 0;
 }
 
 static char bad_path[] = "/bad-path/";
 
-static char *get_pathname(void)
+static struct strbuf *get_pathname(void)
 {
-	static char pathname_array[4][PATH_MAX];
+	static struct strbuf pathname_array[4] = {
+		STRBUF_INIT, STRBUF_INIT, STRBUF_INIT, STRBUF_INIT
+	};
 	static int index;
-	return pathname_array[3 & ++index];
+	struct strbuf *sb = &pathname_array[3 & ++index];
+	strbuf_reset(sb);
+	return sb;
 }
 
 static char *cleanup_path(char *path)
 {
 	/* Clean it up */
 	if (!memcmp(path, "./", 2)) {
@@ -31,12 +36,19 @@
 		while (*path == '/')
 			path++;
 	}
 	return path;
 }
 
+static void strbuf_cleanup_path(struct strbuf *sb)
+{
+	char *path = cleanup_path(sb->buf);
+	if (path > sb->buf)
+		strbuf_remove(sb, 0, path - sb->buf);
+}
+
 char *mksnpath(char *buf, size_t n, const char *fmt, ...)
 {
 	va_list args;
 	unsigned len;
 
 	va_start(args, fmt);
@@ -46,130 +58,198 @@
 		strlcpy(buf, bad_path, n);
 		return buf;
 	}
 	return cleanup_path(buf);
 }
 
-static char *vsnpath(char *buf, size_t n, const char *fmt, va_list args)
+static int dir_prefix(const char *buf, const char *dir)
 {
-	const char *git_dir = get_git_dir();
-	size_t len;
+	int len = strlen(dir);
+	return !strncmp(buf, dir, len) &&
+		(is_dir_sep(buf[len]) || buf[len] == '\0');
+}
+
+/* $buf =~ m|$dir/+$file| but without regex */
+static int is_dir_file(const char *buf, const char *dir, const char *file)
+{
+	int len = strlen(dir);
+	if (strncmp(buf, dir, len) || !is_dir_sep(buf[len]))
+		return 0;
+	while (is_dir_sep(buf[len]))
+		len++;
+	return !strcmp(buf + len, file);
+}
+
+static void replace_dir(struct strbuf *buf, int len, const char *newdir)
+{
+	int newlen = strlen(newdir);
+	int need_sep = (buf->buf[len] && !is_dir_sep(buf->buf[len])) &&
+		!is_dir_sep(newdir[newlen - 1]);
+	if (need_sep)
+		len--;	 /* keep one char, to be replaced with '/'  */
+	strbuf_splice(buf, 0, len, newdir, newlen);
+	if (need_sep)
+		buf->buf[newlen] = '/';
+}
+
+static const char *common_list[] = {
+	"/branches", "/hooks", "/info", "!/logs", "/lost-found",
+	"/objects", "/refs", "/remotes", "/worktrees", "/rr-cache", "/svn",
+	"config", "!gc.pid", "packed-refs", "shallow",
+	NULL
+};
+
+static void update_common_dir(struct strbuf *buf, int git_dir_len)
+{
+	char *base = buf->buf + git_dir_len;
+	const char **p;
+
+	if (is_dir_file(base, "logs", "HEAD") ||
+	    is_dir_file(base, "info", "sparse-checkout"))
+		return;	/* keep this in $GIT_DIR */
+	for (p = common_list; *p; p++) {
+		const char *path = *p;
+		int is_dir = 0;
+		if (*path == '!')
+			path++;
+		if (*path == '/') {
+			path++;
+			is_dir = 1;
+		}
+		if (is_dir && dir_prefix(base, path)) {
+			replace_dir(buf, git_dir_len, get_git_common_dir());
+			return;
+		}
+		if (!is_dir && !strcmp(base, path)) {
+			replace_dir(buf, git_dir_len, get_git_common_dir());
+			return;
+		}
+	}
+}
 
-	len = strlen(git_dir);
-	if (n < len + 1)
-		goto bad;
-	memcpy(buf, git_dir, len);
-	if (len && !is_dir_sep(git_dir[len-1]))
-		buf[len++] = '/';
-	len += vsnprintf(buf + len, n - len, fmt, args);
-	if (len >= n)
-		goto bad;
-	return cleanup_path(buf);
-bad:
-	strlcpy(buf, bad_path, n);
-	return buf;
+void report_linked_checkout_garbage(void)
+{
+	struct strbuf sb = STRBUF_INIT;
+	const char **p;
+	int len;
+
+	if (!git_common_dir_env)
+		return;
+	strbuf_addf(&sb, "%s/", get_git_dir());
+	len = sb.len;
+	for (p = common_list; *p; p++) {
+		const char *path = *p;
+		if (*path == '!')
+			continue;
+		strbuf_setlen(&sb, len);
+		strbuf_addstr(&sb, path);
+		if (file_exists(sb.buf))
+			report_garbage("unused in linked checkout", sb.buf);
+	}
+	strbuf_release(&sb);
+}
+
+static void adjust_git_path(struct strbuf *buf, int git_dir_len)
+{
+	const char *base = buf->buf + git_dir_len;
+	if (git_graft_env && is_dir_file(base, "info", "grafts"))
+		strbuf_splice(buf, 0, buf->len,
+			      get_graft_file(), strlen(get_graft_file()));
+	else if (git_index_env && !strcmp(base, "index"))
+		strbuf_splice(buf, 0, buf->len,
+			      get_index_file(), strlen(get_index_file()));
+	else if (git_db_env && dir_prefix(base, "objects"))
+		replace_dir(buf, git_dir_len + 7, get_object_directory());
+	else if (git_common_dir_env)
+		update_common_dir(buf, git_dir_len);
+}
+
+static void do_git_path(struct strbuf *buf, const char *fmt, va_list args)
+{
+	int gitdir_len;
+	strbuf_addstr(buf, get_git_dir());
+	if (buf->len && !is_dir_sep(buf->buf[buf->len - 1]))
+		strbuf_addch(buf, '/');
+	gitdir_len = buf->len;
+	strbuf_vaddf(buf, fmt, args);
+	adjust_git_path(buf, gitdir_len);
+	strbuf_cleanup_path(buf);
 }
 
-char *git_snpath(char *buf, size_t n, const char *fmt, ...)
+void strbuf_git_path(struct strbuf *sb, const char *fmt, ...)
 {
-	char *ret;
 	va_list args;
 	va_start(args, fmt);
-	ret = vsnpath(buf, n, fmt, args);
+	do_git_path(sb, fmt, args);
 	va_end(args);
-	return ret;
 }
 
-char *git_pathdup(const char *fmt, ...)
+const char *git_path(const char *fmt, ...)
 {
-	char path[PATH_MAX], *ret;
+	struct strbuf *pathname = get_pathname();
 	va_list args;
 	va_start(args, fmt);
-	ret = vsnpath(path, sizeof(path), fmt, args);
+	do_git_path(pathname, fmt, args);
 	va_end(args);
-	return xstrdup(ret);
+	return pathname->buf;
 }
 
-char *mkpathdup(const char *fmt, ...)
+char *git_pathdup(const char *fmt, ...)
 {
-	char *path;
-	struct strbuf sb = STRBUF_INIT;
+	struct strbuf path = STRBUF_INIT;
 	va_list args;
-
 	va_start(args, fmt);
-	strbuf_vaddf(&sb, fmt, args);
+	do_git_path(&path, fmt, args);
 	va_end(args);
-	path = xstrdup(cleanup_path(sb.buf));
-
-	strbuf_release(&sb);
-	return path;
+	return strbuf_detach(&path, NULL);
 }
 
-char *mkpath(const char *fmt, ...)
+char *mkpathdup(const char *fmt, ...)
 {
+	struct strbuf sb = STRBUF_INIT;
 	va_list args;
-	unsigned len;
-	char *pathname = get_pathname();
-
 	va_start(args, fmt);
-	len = vsnprintf(pathname, PATH_MAX, fmt, args);
+	strbuf_vaddf(&sb, fmt, args);
 	va_end(args);
-	if (len >= PATH_MAX)
-		return bad_path;
-	return cleanup_path(pathname);
+	strbuf_cleanup_path(&sb);
+	return strbuf_detach(&sb, NULL);
 }
 
-char *git_path(const char *fmt, ...)
+const char *mkpath(const char *fmt, ...)
 {
-	char *pathname = get_pathname();
 	va_list args;
-	char *ret;
-
+	struct strbuf *pathname = get_pathname();
 	va_start(args, fmt);
-	ret = vsnpath(pathname, PATH_MAX, fmt, args);
+	strbuf_vaddf(pathname, fmt, args);
 	va_end(args);
-	return ret;
+	return cleanup_path(pathname->buf);
 }
 
-char *git_path_submodule(const char *path, const char *fmt, ...)
+const char *git_path_submodule(const char *path, const char *fmt, ...)
 {
-	char *pathname = get_pathname();
-	struct strbuf buf = STRBUF_INIT;
+	struct strbuf *buf = get_pathname();
 	const char *git_dir;
 	va_list args;
-	unsigned len;
 
-	len = strlen(path);
-	if (len > PATH_MAX-100)
-		return bad_path;
-
-	strbuf_addstr(&buf, path);
-	if (len && path[len-1] != '/')
-		strbuf_addch(&buf, '/');
-	strbuf_addstr(&buf, ".git");
+	strbuf_addstr(buf, path);
+	if (buf->len && buf->buf[buf->len - 1] != '/')
+		strbuf_addch(buf, '/');
+	strbuf_addstr(buf, ".git");
 
-	git_dir = read_gitfile(buf.buf);
+	git_dir = read_gitfile(buf->buf);
 	if (git_dir) {
-		strbuf_reset(&buf);
-		strbuf_addstr(&buf, git_dir);
+		strbuf_reset(buf);
+		strbuf_addstr(buf, git_dir);
 	}
-	strbuf_addch(&buf, '/');
-
-	if (buf.len >= PATH_MAX)
-		return bad_path;
-	memcpy(pathname, buf.buf, buf.len + 1);
-
-	strbuf_release(&buf);
-	len = strlen(pathname);
+	strbuf_addch(buf, '/');
 
 	va_start(args, fmt);
-	len += vsnprintf(pathname + len, PATH_MAX - len, fmt, args);
+	strbuf_vaddf(buf, fmt, args);
 	va_end(args);
-	if (len >= PATH_MAX)
-		return bad_path;
-	return cleanup_path(pathname);
+	strbuf_cleanup_path(buf);
+	return buf->buf;
 }
 
 int validate_headref(const char *path)
 {
 	struct stat st;
 	char *buf, buffer[256];
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/path.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/path.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/path.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/path.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pathspec.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pathspec.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pathspec.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pathspec.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/man3/Git.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/man3/Git.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/man3/Git.3pm	2017-10-10 13:18:57.850528223 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/man3/Git.3pm	2017-10-10 13:51:30.338456665 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git 3pm"
-.TH Git 3pm "2017-05-09" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git 3pm "2015-07-28" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git \- Perl interface to the Git version control system
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/man3/Git::I18N.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/man3/Git::I18N.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/man3/Git::I18N.3pm	2017-10-10 13:18:57.802528224 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/man3/Git::I18N.3pm	2017-10-10 13:51:30.310456666 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git::I18N 3pm"
-.TH Git::I18N 3pm "2017-05-09" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git::I18N 3pm "2015-07-28" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git::I18N \- Perl interface to Git's Gettext localizations
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/man3/Git::SVN::Editor.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/man3/Git::SVN::Editor.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/man3/Git::SVN::Editor.3pm	2017-10-10 13:18:57.818528224 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/man3/Git::SVN::Editor.3pm	2017-10-10 13:51:30.346456665 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git::SVN::Editor 3pm"
-.TH Git::SVN::Editor 3pm "2017-05-09" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git::SVN::Editor 3pm "2015-07-28" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git::SVN::Editor \- commit driver for "git svn set\-tree" and dcommit
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/man3/Git::SVN::Fetcher.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/man3/Git::SVN::Fetcher.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/man3/Git::SVN::Fetcher.3pm	2017-10-10 13:18:57.814528224 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/man3/Git::SVN::Fetcher.3pm	2017-10-10 13:51:30.306456666 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git::SVN::Fetcher 3pm"
-.TH Git::SVN::Fetcher 3pm "2017-05-09" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git::SVN::Fetcher 3pm "2015-07-28" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git::SVN::Fetcher \- tree delta consumer for "git svn fetch"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/man3/Git::SVN::Memoize::YAML.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/man3/Git::SVN::Memoize::YAML.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/man3/Git::SVN::Memoize::YAML.3pm	2017-10-10 13:18:57.802528224 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/man3/Git::SVN::Memoize::YAML.3pm	2017-10-10 13:51:30.346456665 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git::SVN::Memoize::YAML 3pm"
-.TH Git::SVN::Memoize::YAML 3pm "2017-05-09" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git::SVN::Memoize::YAML 3pm "2015-07-28" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git::SVN::Memoize::YAML \- store Memoized data in YAML format
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/man3/Git::SVN::Prompt.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/man3/Git::SVN::Prompt.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/man3/Git::SVN::Prompt.3pm	2017-10-10 13:18:57.806528224 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/man3/Git::SVN::Prompt.3pm	2017-10-10 13:51:30.310456666 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git::SVN::Prompt 3pm"
-.TH Git::SVN::Prompt 3pm "2017-05-09" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git::SVN::Prompt 3pm "2015-07-28" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git::SVN::Prompt \- authentication callbacks for git\-svn
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/man3/Git::SVN::Ra.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/man3/Git::SVN::Ra.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/man3/Git::SVN::Ra.3pm	2017-10-10 13:18:57.810528224 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/man3/Git::SVN::Ra.3pm	2017-10-10 13:51:30.302456666 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git::SVN::Ra 3pm"
-.TH Git::SVN::Ra 3pm "2017-05-09" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git::SVN::Ra 3pm "2015-07-28" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git::SVN::Ra \- Subversion remote access functions for git\-svn
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/man3/Git::SVN::Utils.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/man3/Git::SVN::Utils.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/blib/man3/Git::SVN::Utils.3pm	2017-10-10 13:18:57.806528224 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/blib/man3/Git::SVN::Utils.3pm	2017-10-10 13:51:30.342456665 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git::SVN::Utils 3pm"
-.TH Git::SVN::Utils 3pm "2017-05-09" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git::SVN::Utils 3pm "2015-07-28" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git::SVN::Utils \- utility functions used across Git::SVN
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/perl.mak /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/perl.mak
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/perl/perl.mak	2017-10-10 13:18:41.002528840 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/perl/perl.mak	2017-10-10 13:51:13.314457289 +0800
@@ -13,13 +13,13 @@
 
 #     BUILD_REQUIRES => {  }
 #     CONFIGURE_REQUIRES => {  }
 #     INSTALLSITEMAN3DIR => q[$(SITEPREFIX)/share/man/man3]
 #     MAKEFILE => q[perl.mak]
 #     NAME => q[Git]
-#     PM => { Git/SVN/Migration.pm=>q[$(INST_LIBDIR)/Git/SVN/Migration.pm], Git/SVN/Utils.pm=>q[$(INST_LIBDIR)/Git/SVN/Utils.pm], Git/I18N.pm=>q[$(INST_LIBDIR)/Git/I18N.pm], Git/SVN/Memoize/YAML.pm=>q[$(INST_LIBDIR)/Git/SVN/Memoize/YAML.pm], Git/SVN/GlobSpec.pm=>q[$(INST_LIBDIR)/Git/SVN/GlobSpec.pm], Git/SVN/Fetcher.pm=>q[$(INST_LIBDIR)/Git/SVN/Fetcher.pm], Git/SVN/Prompt.pm=>q[$(INST_LIBDIR)/Git/SVN/Prompt.pm], Git/SVN/Ra.pm=>q[$(INST_LIBDIR)/Git/SVN/Ra.pm], Git.pm=>q[$(INST_LIBDIR)/Git.pm], Git/SVN.pm=>q[$(INST_LIBDIR)/Git/SVN.pm], Git/IndexInfo.pm=>q[$(INST_LIBDIR)/Git/IndexInfo.pm], Git/SVN/Editor.pm=>q[$(INST_LIBDIR)/Git/SVN/Editor.pm], Git/SVN/Log.pm=>q[$(INST_LIBDIR)/Git/SVN/Log.pm] }
+#     PM => { Git/SVN/Fetcher.pm=>q[$(INST_LIBDIR)/Git/SVN/Fetcher.pm], Git/SVN/GlobSpec.pm=>q[$(INST_LIBDIR)/Git/SVN/GlobSpec.pm], Git/SVN/Ra.pm=>q[$(INST_LIBDIR)/Git/SVN/Ra.pm], Git/SVN/Prompt.pm=>q[$(INST_LIBDIR)/Git/SVN/Prompt.pm], Git/SVN.pm=>q[$(INST_LIBDIR)/Git/SVN.pm], Git/I18N.pm=>q[$(INST_LIBDIR)/Git/I18N.pm], Git.pm=>q[$(INST_LIBDIR)/Git.pm], Git/SVN/Migration.pm=>q[$(INST_LIBDIR)/Git/SVN/Migration.pm], Git/SVN/Utils.pm=>q[$(INST_LIBDIR)/Git/SVN/Utils.pm], Git/SVN/Editor.pm=>q[$(INST_LIBDIR)/Git/SVN/Editor.pm], Git/IndexInfo.pm=>q[$(INST_LIBDIR)/Git/IndexInfo.pm], Git/SVN/Log.pm=>q[$(INST_LIBDIR)/Git/SVN/Log.pm], Git/SVN/Memoize/YAML.pm=>q[$(INST_LIBDIR)/Git/SVN/Memoize/YAML.pm] }
 #     PM_FILTER => q[$(PERL) -pe "s<\Q++LOCALEDIR++\E></usr/local/share/locale>"]
 #     PREREQ_PM => {  }
 #     TEST_REQUIRES => {  }
 #     VERSION_FROM => q[Git.pm]
 
 # --- MakeMaker post_initialize section:
@@ -204,38 +204,38 @@
 	Git/SVN/Memoize/YAML.pm \
 	Git/SVN/Migration.pm \
 	Git/SVN/Prompt.pm \
 	Git/SVN/Ra.pm \
 	Git/SVN/Utils.pm
 
-PM_TO_BLIB = Git/SVN/Migration.pm \
-	$(INST_LIBDIR)/Git/SVN/Migration.pm \
-	Git/SVN/Utils.pm \
-	$(INST_LIBDIR)/Git/SVN/Utils.pm \
-	Git/I18N.pm \
-	$(INST_LIBDIR)/Git/I18N.pm \
-	Git/SVN/Memoize/YAML.pm \
-	$(INST_LIBDIR)/Git/SVN/Memoize/YAML.pm \
+PM_TO_BLIB = Git/SVN/Fetcher.pm \
+	$(INST_LIBDIR)/Git/SVN/Fetcher.pm \
 	Git/SVN/GlobSpec.pm \
 	$(INST_LIBDIR)/Git/SVN/GlobSpec.pm \
-	Git/SVN/Fetcher.pm \
-	$(INST_LIBDIR)/Git/SVN/Fetcher.pm \
-	Git/SVN/Prompt.pm \
-	$(INST_LIBDIR)/Git/SVN/Prompt.pm \
 	Git/SVN/Ra.pm \
 	$(INST_LIBDIR)/Git/SVN/Ra.pm \
-	Git.pm \
-	$(INST_LIBDIR)/Git.pm \
+	Git/SVN/Prompt.pm \
+	$(INST_LIBDIR)/Git/SVN/Prompt.pm \
 	Git/SVN.pm \
 	$(INST_LIBDIR)/Git/SVN.pm \
-	Git/IndexInfo.pm \
-	$(INST_LIBDIR)/Git/IndexInfo.pm \
+	Git/I18N.pm \
+	$(INST_LIBDIR)/Git/I18N.pm \
+	Git.pm \
+	$(INST_LIBDIR)/Git.pm \
+	Git/SVN/Migration.pm \
+	$(INST_LIBDIR)/Git/SVN/Migration.pm \
+	Git/SVN/Utils.pm \
+	$(INST_LIBDIR)/Git/SVN/Utils.pm \
 	Git/SVN/Editor.pm \
 	$(INST_LIBDIR)/Git/SVN/Editor.pm \
+	Git/IndexInfo.pm \
+	$(INST_LIBDIR)/Git/IndexInfo.pm \
 	Git/SVN/Log.pm \
-	$(INST_LIBDIR)/Git/SVN/Log.pm
+	$(INST_LIBDIR)/Git/SVN/Log.pm \
+	Git/SVN/Memoize/YAML.pm \
+	$(INST_LIBDIR)/Git/SVN/Memoize/YAML.pm
 
 
 # --- MakeMaker platform_constants section:
 MM_Unix_VERSION = 6.66
 PERL_MALLOC_DEF = -DPERL_EXTMALLOC_DEF -Dmalloc=Perl_malloc -Dfree=Perl_mfree -Drealloc=Perl_realloc -Dcalloc=Perl_calloc
 
@@ -454,29 +454,29 @@
 
 POD2MAN_EXE = $(PERLRUN) "-MExtUtils::Command::MM" -e pod2man "--"
 POD2MAN = $(POD2MAN_EXE)
 
 
 manifypods : pure_all  \
-	Git/I18N.pm \
-	Git/SVN/Memoize/YAML.pm \
-	Git/SVN/Utils.pm \
-	Git/SVN/Prompt.pm \
 	Git/SVN/Ra.pm \
 	Git/SVN/Fetcher.pm \
+	Git/SVN/Prompt.pm \
+	Git/I18N.pm \
+	Git.pm \
+	Git/SVN/Utils.pm \
 	Git/SVN/Editor.pm \
-	Git.pm
+	Git/SVN/Memoize/YAML.pm
 	$(NOECHO) $(POD2MAN) --section=$(MAN3EXT) --perm_rw=$(PERM_RW) \
-	  Git/I18N.pm $(INST_MAN3DIR)/Git::I18N.$(MAN3EXT) \
-	  Git/SVN/Memoize/YAML.pm $(INST_MAN3DIR)/Git::SVN::Memoize::YAML.$(MAN3EXT) \
-	  Git/SVN/Utils.pm $(INST_MAN3DIR)/Git::SVN::Utils.$(MAN3EXT) \
-	  Git/SVN/Prompt.pm $(INST_MAN3DIR)/Git::SVN::Prompt.$(MAN3EXT) \
 	  Git/SVN/Ra.pm $(INST_MAN3DIR)/Git::SVN::Ra.$(MAN3EXT) \
 	  Git/SVN/Fetcher.pm $(INST_MAN3DIR)/Git::SVN::Fetcher.$(MAN3EXT) \
+	  Git/SVN/Prompt.pm $(INST_MAN3DIR)/Git::SVN::Prompt.$(MAN3EXT) \
+	  Git/I18N.pm $(INST_MAN3DIR)/Git::I18N.$(MAN3EXT) \
+	  Git.pm $(INST_MAN3DIR)/Git.$(MAN3EXT) \
+	  Git/SVN/Utils.pm $(INST_MAN3DIR)/Git::SVN::Utils.$(MAN3EXT) \
 	  Git/SVN/Editor.pm $(INST_MAN3DIR)/Git::SVN::Editor.$(MAN3EXT) \
-	  Git.pm $(INST_MAN3DIR)/Git.$(MAN3EXT) 
+	  Git/SVN/Memoize/YAML.pm $(INST_MAN3DIR)/Git::SVN::Memoize::YAML.$(MAN3EXT) 
 
 
 
 
 # --- MakeMaker processPL section:
 
@@ -497,28 +497,28 @@
 
 # Delete temporary files but do not touch installed files. We don't delete
 # the Makefile here so a later make realclean still has a makefile to use.
 
 clean :: clean_subdirs
 	- $(RM_F) \
-	  pm_to_blib.ts tmon.out \
-	  pm_to_blib core \
-	  perlmain.c $(BOOTSTRAP) \
-	  core.[0-9][0-9][0-9][0-9] perl \
-	  core.[0-9][0-9][0-9][0-9][0-9] core.[0-9][0-9] \
-	  perl$(EXE_EXT) $(BASEEXT).exp \
-	  $(BASEEXT).x $(MAKE_APERL_FILE) \
-	  blibdirs.ts $(BASEEXT).def \
-	  mon.out core.[0-9][0-9][0-9] \
-	  $(INST_ARCHAUTODIR)/extralibs.ld *$(LIB_EXT) \
-	  core.*perl.*.? $(INST_ARCHAUTODIR)/extralibs.all \
-	  MYMETA.json so_locations \
-	  core.[0-9] *$(OBJ_EXT) \
-	  perl.exe MYMETA.yml \
-	  lib$(BASEEXT).def *perl.core \
-	  $(BASEEXT).bso 
+	  $(INST_ARCHAUTODIR)/extralibs.all *perl.core \
+	  core.[0-9][0-9][0-9][0-9][0-9] pm_to_blib.ts \
+	  core.[0-9][0-9][0-9] perl \
+	  $(INST_ARCHAUTODIR)/extralibs.ld MYMETA.json \
+	  perl$(EXE_EXT) core.[0-9][0-9][0-9][0-9] \
+	  MYMETA.yml lib$(BASEEXT).def \
+	  perl.exe perlmain.c \
+	  $(BOOTSTRAP) core \
+	  $(BASEEXT).def blibdirs.ts \
+	  *$(OBJ_EXT) tmon.out \
+	  $(BASEEXT).x core.[0-9] \
+	  *$(LIB_EXT) core.[0-9][0-9] \
+	  $(BASEEXT).bso core.*perl.*.? \
+	  pm_to_blib mon.out \
+	  so_locations $(BASEEXT).exp \
+	  $(MAKE_APERL_FILE) 
 	- $(RM_RF) \
 	  blib 
 	- $(MV) $(FIRST_MAKEFILE) $(MAKEFILE_OLD) $(DEV_NULL)
 
 
 # --- MakeMaker realclean_subdirs section:
@@ -884,25 +884,25 @@
 
 
 # --- MakeMaker pm_to_blib section:
 
 pm_to_blib : $(FIRST_MAKEFILE) $(TO_INST_PM)
 	$(NOECHO) $(ABSPERLRUN) -MExtUtils::Install -e 'pm_to_blib({@ARGV}, '\''$(INST_LIB)/auto'\'', q[$(PM_FILTER)], '\''$(PERM_DIR)'\'')' -- \
-	  Git/SVN/Migration.pm $(INST_LIBDIR)/Git/SVN/Migration.pm \
-	  Git/SVN/Utils.pm $(INST_LIBDIR)/Git/SVN/Utils.pm \
-	  Git/I18N.pm $(INST_LIBDIR)/Git/I18N.pm \
-	  Git/SVN/Memoize/YAML.pm $(INST_LIBDIR)/Git/SVN/Memoize/YAML.pm \
-	  Git/SVN/GlobSpec.pm $(INST_LIBDIR)/Git/SVN/GlobSpec.pm \
 	  Git/SVN/Fetcher.pm $(INST_LIBDIR)/Git/SVN/Fetcher.pm \
-	  Git/SVN/Prompt.pm $(INST_LIBDIR)/Git/SVN/Prompt.pm \
+	  Git/SVN/GlobSpec.pm $(INST_LIBDIR)/Git/SVN/GlobSpec.pm \
 	  Git/SVN/Ra.pm $(INST_LIBDIR)/Git/SVN/Ra.pm \
-	  Git.pm $(INST_LIBDIR)/Git.pm \
+	  Git/SVN/Prompt.pm $(INST_LIBDIR)/Git/SVN/Prompt.pm \
 	  Git/SVN.pm $(INST_LIBDIR)/Git/SVN.pm \
-	  Git/IndexInfo.pm $(INST_LIBDIR)/Git/IndexInfo.pm \
+	  Git/I18N.pm $(INST_LIBDIR)/Git/I18N.pm \
+	  Git.pm $(INST_LIBDIR)/Git.pm \
+	  Git/SVN/Migration.pm $(INST_LIBDIR)/Git/SVN/Migration.pm \
+	  Git/SVN/Utils.pm $(INST_LIBDIR)/Git/SVN/Utils.pm \
 	  Git/SVN/Editor.pm $(INST_LIBDIR)/Git/SVN/Editor.pm \
-	  Git/SVN/Log.pm $(INST_LIBDIR)/Git/SVN/Log.pm 
+	  Git/IndexInfo.pm $(INST_LIBDIR)/Git/IndexInfo.pm \
+	  Git/SVN/Log.pm $(INST_LIBDIR)/Git/SVN/Log.pm \
+	  Git/SVN/Memoize/YAML.pm $(INST_LIBDIR)/Git/SVN/Memoize/YAML.pm 
 	$(NOECHO) $(TOUCH) pm_to_blib
 
 
 # --- MakeMaker selfdocument section:
 
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pkt-line.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pkt-line.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pkt-line.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pkt-line.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/bg.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/bg.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/bg.po	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/bg.po	2015-07-28 04:34:56.000000000 +0800
@@ -1,10 +1,10 @@
 # Bulgarian translation of git po-file.
-# Copyright (C) 2014 Alexander Shopov <ash@kambanaria.org>.
+# Copyright (C) 2014, 2015 Alexander Shopov <ash@kambanaria.org>.
 # This file is distributed under the same license as the git package.
-# Alexander Shopov <ash@kambanaria.org>, 2014.
+# Alexander Shopov <ash@kambanaria.org>, 2014, 2015.
 #
 # ========================
 # DICTIONARY TO MERGE IN GIT GUI
 # ------------------------
 # range интервал
 # unreachable object недостижим обект
@@ -18,14 +18,14 @@
 # root commit начално подаване
 # fixup вкарвам подаване в предното без следа
 # remote-tracking branch следящ клон
 # git bundle пратка на git
 # bisect двоично търсене
 # am прилагам поредица от кръпки
-# working directory/tree — винаги работно дърво, git следи цялото дърво, а не директории
-# switch to branch прехвърлям се/преминавам към клон
+# working directory/tree — винаги работно дърво, git следи цялото дърво, а не директории, работна директория за cwd
+# switch to branch преминавам към клон
 # sparse entry частично изтеглена директория/път
 # revision range диапазон на версиите
 # cover letter придружаващо писмо
 # reference repository еталонно хранилище
 # grafted repository хранилище с присаждане
 # thin pack съкратен пакет
@@ -53,12 +53,16 @@
 # plumbing команди от системно ниво
 # porcelain команди от потребителско ниво
 # pack [noun] пакетен файл - fixme in glossary
 # mainline базово подаване - при cherry-pick на merge - към коя версия да се изчислява разликата
 # token лексема
 # trailer епилог/завършек на съобщение
+# cwd текуща работна директория
+# untracked cache кеш за неследените файлове
+# broken/corrupt повреден
+# restore възстановявам
 # ----
 # FAILED to parse неуспешен анализ на... -> неразпозната стойност на
 # blob обект BLOB
 # ========================
 # „“…— ●≫ѝ→
 #
@@ -88,53 +92,27 @@
 # msgattrib  --untranslated bg.po > untranslated.po
 # msgattrib  --only-fuzzy bg.po > fuzzy.po
 # msgcat.exe untranslated.po fuzzy.po > new.po
 # grep ^#: new.po | cut -c4- |tr ' ' '\n'| sed -e 's/:[0-9][0-9]*//'  -e 's%.*/%%' -e 's/[.][^.]*$//' | sort -u
 #
 # ========================
-# STRINGS statistics
-# ------------------------
-# 2228t
-#
-# ========================
 # MOST IMPORTANT name asc ordering
 # ------------------------
 # add, blame, branch, checkout, clone, commit, common-cmds, config, diff, fetch, fsck, gc, git-rebase, git-stash, grep, log, mv, parse-options, push, reflog, remote, reset, revert, rm, wt-status
 #
 # ========================
 # IMPORTANT strings, name asc ordering
 # ------------------------
 # apply, archive, check-ignore, clean, date, describe, git-am, git-bisect, git-submodule, hash-object, init-db, ls-tree, merge, merge-base, merge-file, merge-recursive, name-rev, pathspec, show-ref, tag
 #
-# ========================
-# WHOLE STATISTICS strings desc, name asc ordering
-# ------------------------
-# 144 [remote]           47 [push]          26 [revert]         12 [checkout-index]  6 [prune]          2 [verify-tag]
-# 137 [commit]           46 [pack-objects]  24 [mv]             11 [date]            6 [gpg-interface]  2 [update-server-info]
-# 114 [branch]           41 [help]          23 [repack]         11 [column]          6 [check-attr]     2 [run-command]
-# 111 [apply]            39 [init-db]       21 [rm]             10 [urlmatch]        5 [write-tree]     2 [rerere]
-# 101 [notes]            36 [add]           21 [common-cmds]    10 [shortlog]        5 [sha1_name]      2 [read-cache]
-# 100 [wt-status]        35 [reset]         19 [show-branch]    10 [merge-file]      5 [rev-parse]      2 [obstack]
-#  97 [merge]            35 [archive]       19 [read-tree]      10 [merge-base]      4 [wrapper]        2 [advice]
-#  78 [checkout]         34 [config]        19 [bundle]         10 [ls-tree]         4 [prune-packed]   1 [unpack-trees]
-#  77 [log]              32 [clean]         16 [parse-options]  10 [hash-object]     4 [notes-utils]    1 [unpack-objects]
-#  69 [clone]            30 [git-am]        15 [fsck]           10 [for-each-ref]    4 [mktree]         1 [progress]
-#  68 [index-pack]       30 [describe]      14 [show-ref]       10 [cat-file]        4 [check-mailmap]  1 [precompose_utf8]
-#  68 [fetch]            29 [git-stash]     14 [gc]              9 [update-ref]      3 [verify-pack]    1 [object]
-#  64 [tag]              29 [git-bisect]    14 [fast-export]     9 [submodule]       3 [reflog]         1 [git]
-#  64 [grep]             28 [update-index]  13 [diff]            8 [replace]         3 [pack-refs]      1 [diffcore-rename]
-#  56 [sequencer]        28 [blame]         13 [check-ignore]    8 [git-pull]        3 [count-objects]  1 [diffcore-order]
-#  55 [merge-recursive]  27 [ls-files]      12 [pathspec]        8 [fmt-merge-msg]   3 [connected]      1 [attr]
-#  54 [git-submodule]    27 [git-rebase]    12 [name-rev]        7 [symbolic-ref]    3 [bisect--helper]
-#
 msgid ""
 msgstr ""
 "Project-Id-Version: git master\n"
 "Report-Msgid-Bugs-To: Git Mailing List <git@vger.kernel.org>\n"
-"POT-Creation-Date: 2015-04-03 08:13+0800\n"
-"PO-Revision-Date: 2015-04-07 11:21+0300\n"
+"POT-Creation-Date: 2015-07-14 07:19+0800\n"
+"PO-Revision-Date: 2015-07-14 19:05+0300\n"
 "Last-Translator: Alexander Shopov <ash@kambanaria.org>\n"
 "Language-Team: Bulgarian <dict@fsa-bg.org>\n"
 "Language: bg\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
@@ -170,13 +148,13 @@
 "[ПЪТ…]"
 
 #: archive.c:14
 msgid "git archive --remote <repo> [--exec <cmd>] --list"
 msgstr "git archive --remote ХРАНИЛИЩЕ [--exec КОМАНДА] --list"
 
-#: archive.c:342 builtin/add.c:137 builtin/add.c:427 builtin/rm.c:328
+#: archive.c:342 builtin/add.c:137 builtin/add.c:428 builtin/rm.c:327
 #, c-format
 msgid "pathspec '%s' did not match any files"
 msgstr "пътят „%s“ не съвпада с никой файл"
 
 #: archive.c:427
 msgid "fmt"
@@ -193,15 +171,15 @@
 #: archive.c:429
 msgid "prepend prefix to each pathname in the archive"
 msgstr "добавяне на този префикс към всеки път в архива"
 
 #: archive.c:430 builtin/archive.c:88 builtin/blame.c:2516
 #: builtin/blame.c:2517 builtin/config.c:57 builtin/fast-export.c:986
-#: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:101
+#: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:99
 #: builtin/ls-files.c:446 builtin/ls-files.c:449 builtin/notes.c:394
-#: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:151
+#: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:150
 msgid "file"
 msgstr "файл"
 
 #: archive.c:431 builtin/archive.c:89
 msgid "write the archive to this file"
 msgstr "запазване на архива в този файл"
@@ -227,13 +205,13 @@
 msgstr "добро компресиране"
 
 #: archive.c:447
 msgid "list supported archive formats"
 msgstr "извеждане на списъка с поддържаните формати"
 
-#: archive.c:449 builtin/archive.c:90 builtin/clone.c:86
+#: archive.c:449 builtin/archive.c:90 builtin/clone.c:77
 msgid "repo"
 msgstr "хранилище"
 
 #: archive.c:450 builtin/archive.c:91
 msgid "retrieve the archive from remote repository <repo>"
 msgstr "изтегляне на архива от отдалеченото ХРАНИЛИЩЕ"
@@ -243,13 +221,13 @@
 msgstr "команда"
 
 #: archive.c:452 builtin/archive.c:93
 msgid "path to the remote git-upload-archive command"
 msgstr "път към отдалечената команда „git-upload-archive“"
 
-#: attr.c:264
+#: attr.c:265
 msgid ""
 "Negative patterns are ignored in git attributes\n"
 "Use '\\!' for literal leading exclamation."
 msgstr ""
 "Отрицателните шаблони се игнорират в атрибутите на git.\n"
 "Ако ви трябва начална удивителна, ползвайте „\\!“."
@@ -383,14 +361,14 @@
 
 #: bundle.c:139
 msgid "Repository lacks these prerequisite commits:"
 msgstr "В хранилището липсват следните необходими подавания:"
 
 #: bundle.c:163 sequencer.c:650 sequencer.c:1105 builtin/blame.c:2705
-#: builtin/branch.c:659 builtin/commit.c:1045 builtin/log.c:330
-#: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:358
+#: builtin/branch.c:651 builtin/commit.c:1045 builtin/log.c:330
+#: builtin/log.c:825 builtin/log.c:1432 builtin/log.c:1666 builtin/merge.c:358
 #: builtin/shortlog.c:158
 msgid "revision walk setup failed"
 msgstr "неуспешно настройване на обхождането на версиите"
 
 #: bundle.c:185
 #, c-format
@@ -636,36 +614,44 @@
 "Found errors in 'diff.dirstat' config variable:\n"
 "%s"
 msgstr ""
 "Грешки в настройката „diff.dirstat“:\n"
 "%s"
 
-#: diff.c:2956
+#: diff.c:2997
 #, c-format
 msgid "external diff died, stopping at %s"
 msgstr ""
 "външната програма за разлики завърши неуспешно. Спиране на работата при „%s“"
 
-#: diff.c:3351
+#: diff.c:3393
 msgid "--follow requires exactly one pathspec"
 msgstr "Опцията „--follow“ изисква точно един път"
 
-#: diff.c:3514
+#: diff.c:3556
 #, c-format
 msgid ""
 "Failed to parse --dirstat/-X option parameter:\n"
 "%s"
 msgstr ""
 "Неразпознат параметър към опцията „--dirstat/-X“:\n"
 "%s"
 
-#: diff.c:3528
+#: diff.c:3570
 #, c-format
 msgid "Failed to parse --submodule option parameter: '%s'"
 msgstr "Неразпознат параметър към опцията „--submodule“: „%s“"
 
+#: dir.c:1852
+msgid "failed to get kernel name and information"
+msgstr "името и версията на ядрото не бяха получени"
+
+#: dir.c:1945
+msgid "Untracked cache is disabled on this system."
+msgstr "Кеша за неследените файлове е изключен на тази система"
+
 #: gpg-interface.c:129 gpg-interface.c:200
 msgid "could not run gpg."
 msgstr "Програмата „gpg“ не може да бъде стартирана."
 
 #: gpg-interface.c:141
 msgid "gpg did not accept the data"
@@ -706,52 +692,52 @@
 msgstr "налични команди на git от „%s“"
 
 #: help.c:214
 msgid "git commands available from elsewhere on your $PATH"
 msgstr "команди на git от други директории от „$PATH“"
 
-#: help.c:230
-msgid "The most commonly used git commands are:"
-msgstr "Най-често употребяваните команди на git са:"
+#: help.c:246
+msgid "These are common Git commands used in various situations:"
+msgstr "Това са най-често използваните команди на Git:"
 
-#: help.c:289
+#: help.c:311
 #, c-format
 msgid ""
 "'%s' appears to be a git command, but we were not\n"
 "able to execute it. Maybe git-%s is broken?"
 msgstr ""
 "Изглежда, че „%s“ е команда на git, но тя не може да\n"
 "бъде изпълнена. Вероятно пакетът „git-%s“ е повреден."
 
 # FIXME bad message
-#: help.c:346
+#: help.c:368
 msgid "Uh oh. Your system reports no Git commands at all."
 msgstr "Странно, изглежда, че на системата ви няма нито една команда на git."
 
-#: help.c:368
+#: help.c:390
 #, c-format
 msgid ""
 "WARNING: You called a Git command named '%s', which does not exist.\n"
 "Continuing under the assumption that you meant '%s'"
 msgstr ""
 "ПРЕДУПРЕЖДЕНИЕ: Пробвахте да изпълните команда на Git на име „%s“, а такава "
 "не\n"
 "съществува. Изпълнението автоматично продължава, като се счита, че имате "
 "предвид „%s“"
 
-#: help.c:373
+#: help.c:395
 #, c-format
 msgid "in %0.1f seconds automatically..."
 msgstr "след %0.1f секунди…"
 
-#: help.c:380
+#: help.c:402
 #, c-format
 msgid "git: '%s' is not a git command. See 'git --help'."
-msgstr "git: „%s“ не е команда на git. Вижте изхода от „git --help“."
+msgstr "git: „%s“ не е команда на git. Погледнете изхода от „git --help“."
 
-#: help.c:384 help.c:444
+#: help.c:406 help.c:466
 msgid ""
 "\n"
 "Did you mean this?"
 msgid_plural ""
 "\n"
 "Did you mean one of these?"
@@ -759,31 +745,31 @@
 "\n"
 "Команда с подобно име е:"
 msgstr[1] ""
 "\n"
 "Команди с подобно име са:"
 
-#: help.c:440
+#: help.c:462
 #, c-format
 msgid "%s: %s - %s"
 msgstr "%s: %s — %s"
 
-#: lockfile.c:283
+#: lockfile.c:345
 msgid "BUG: reopen a lockfile that is still open"
 msgstr "ГРЕШКА В GIT: преотваряне на файл-ключалка"
 
-#: lockfile.c:285
+#: lockfile.c:347
 msgid "BUG: reopen a lockfile that has been committed"
 msgstr "ГРЕШКА В GIT: преотваряне на файл-ключалка, който е подаден"
 
 #: merge.c:41
 msgid "failed to read the cache"
 msgstr "кешът не може да бъде прочетен"
 
-#: merge.c:94 builtin/checkout.c:374 builtin/checkout.c:580
-#: builtin/clone.c:662
+#: merge.c:94 builtin/checkout.c:376 builtin/checkout.c:587
+#: builtin/clone.c:647
 msgid "unable to write new index file"
 msgstr "неуспешно записване на новия индекс"
 
 #: merge-recursive.c:189
 #, c-format
 msgid "(bad commit)\n"
@@ -795,257 +781,257 @@
 msgstr "неуспешно изпълнение на „addinfo_cache“ за пътя „%s“"
 
 #: merge-recursive.c:270
 msgid "error building trees"
 msgstr "грешка при изграждане на дърветата"
 
-#: merge-recursive.c:688
+#: merge-recursive.c:687
 #, c-format
 msgid "failed to create path '%s'%s"
 msgstr "грешка при създаването на пътя „%s“%s"
 
-#: merge-recursive.c:699
+#: merge-recursive.c:698
 #, c-format
 msgid "Removing %s to make room for subdirectory\n"
 msgstr "Изтриване на „%s“, за да се освободи място за поддиректория\n"
 
 # FIXME better message
-#: merge-recursive.c:713 merge-recursive.c:734
+#: merge-recursive.c:712 merge-recursive.c:733
 msgid ": perhaps a D/F conflict?"
 msgstr ": възможно е да има конфликт директория/файл."
 
-#: merge-recursive.c:724
+#: merge-recursive.c:723
 #, c-format
 msgid "refusing to lose untracked file at '%s'"
 msgstr ""
 "преустановяване на действието, за да не се изтрие неследеният файл „%s“"
 
-#: merge-recursive.c:764
+#: merge-recursive.c:763
 #, c-format
 msgid "cannot read object %s '%s'"
 msgstr "обектът „%s“ (%s) не може да бъде прочетен"
 
-#: merge-recursive.c:766
+#: merge-recursive.c:765
 #, c-format
 msgid "blob expected for %s '%s'"
 msgstr "обектът „%s“ (%s) се очакваше да е BLOB, а не е"
 
-#: merge-recursive.c:789 builtin/clone.c:321
+#: merge-recursive.c:788 builtin/clone.c:306
 #, c-format
 msgid "failed to open '%s'"
 msgstr "директорията „%s“ не може да бъде отворена"
 
-#: merge-recursive.c:797
+#: merge-recursive.c:796
 #, c-format
 msgid "failed to symlink '%s'"
 msgstr "неуспешно създаване на символната връзка „%s“"
 
-#: merge-recursive.c:800
+#: merge-recursive.c:799
 #, c-format
 msgid "do not know what to do with %06o %s '%s'"
 msgstr ""
 "не е ясно какво да се прави с обекта „%2$s“ (%3$s) с права за достъп „%1$06o“"
 
-#: merge-recursive.c:938
+#: merge-recursive.c:937
 msgid "Failed to execute internal merge"
 msgstr "Неуспешно вътрешно сливане"
 
-#: merge-recursive.c:942
+#: merge-recursive.c:941
 #, c-format
 msgid "Unable to add %s to database"
 msgstr "„%s“ не може да се добави в базата с данни"
 
-#: merge-recursive.c:958
+#: merge-recursive.c:957
 msgid "unsupported object type in the tree"
 msgstr "в дървото има неподдържан вид обект"
 
-#: merge-recursive.c:1033 merge-recursive.c:1047
+#: merge-recursive.c:1032 merge-recursive.c:1046
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree."
 msgstr ""
 "КОНФЛИКТ (%s/изтриване): „%s“ е изтрит в %s, а „%s“ в %s. Версия %s на „%s“ "
 "е оставена в дървото."
 
-#: merge-recursive.c:1039 merge-recursive.c:1052
+#: merge-recursive.c:1038 merge-recursive.c:1051
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree at %s."
 msgstr ""
 "КОНФЛИКТ (%s/изтриване): „%s“ е изтрит в %s, а „%s“ в %s. Версия %s на „%s“ "
 "е оставена в дървото: %s."
 
-#: merge-recursive.c:1093
+#: merge-recursive.c:1092
 msgid "rename"
 msgstr "преименуване"
 
-#: merge-recursive.c:1093
+#: merge-recursive.c:1092
 msgid "renamed"
 msgstr "преименуван"
 
-#: merge-recursive.c:1149
+#: merge-recursive.c:1148
 #, c-format
 msgid "%s is a directory in %s adding as %s instead"
 msgstr "„%s“ е директория в „%s“, затова се добавя като „%s“"
 
-#: merge-recursive.c:1171
+#: merge-recursive.c:1170
 #, c-format
 msgid ""
 "CONFLICT (rename/rename): Rename \"%s\"->\"%s\" in branch \"%s\" rename \"%s"
 "\"->\"%s\" in \"%s\"%s"
 msgstr ""
 "КОНФЛИКТ (преименуване/преименуване): „%s“ е преименуван на „%s“ в клон "
 "„%s“, а „%s“ е преименуван на „%s“ в „%s“/%s."
 
-#: merge-recursive.c:1176
+#: merge-recursive.c:1175
 msgid " (left unresolved)"
 msgstr " (некоригиран конфликт)"
 
-#: merge-recursive.c:1230
+#: merge-recursive.c:1229
 #, c-format
 msgid "CONFLICT (rename/rename): Rename %s->%s in %s. Rename %s->%s in %s"
 msgstr ""
 "КОНФЛИКТ (преименуване/преименуване): „%s“ е преименуван на „%s“ в клон "
 "„%s“, а „%s“ е преименуван на „%s“ в „%s“"
 
-#: merge-recursive.c:1260
+#: merge-recursive.c:1259
 #, c-format
 msgid "Renaming %s to %s and %s to %s instead"
 msgstr "Преименуване на „%s“ на „%s“, а „%s“ на „%s“"
 
-#: merge-recursive.c:1459
+#: merge-recursive.c:1458
 #, c-format
 msgid "CONFLICT (rename/add): Rename %s->%s in %s. %s added in %s"
 msgstr ""
 "КОНФЛИКТ (преименуване/добавяне): „%s“ е преименуван на „%s“ в клон „%s“, а "
 "„%s“ е добавен в „%s“"
 
-#: merge-recursive.c:1469
+#: merge-recursive.c:1468
 #, c-format
 msgid "Adding merged %s"
 msgstr "Добавяне на слетия „%s“"
 
-#: merge-recursive.c:1474 merge-recursive.c:1672
+#: merge-recursive.c:1473 merge-recursive.c:1671
 #, c-format
 msgid "Adding as %s instead"
 msgstr "Добавяне като „%s“"
 
-#: merge-recursive.c:1525
+#: merge-recursive.c:1524
 #, c-format
 msgid "cannot read object %s"
 msgstr "обектът „%s“ не може да се прочете"
 
-#: merge-recursive.c:1528
+#: merge-recursive.c:1527
 #, c-format
 msgid "object %s is not a blob"
 msgstr "обектът „%s“ не е BLOB"
 
-#: merge-recursive.c:1576
+#: merge-recursive.c:1575
 msgid "modify"
 msgstr "промяна"
 
-#: merge-recursive.c:1576
+#: merge-recursive.c:1575
 msgid "modified"
 msgstr "променен"
 
-#: merge-recursive.c:1586
+#: merge-recursive.c:1585
 msgid "content"
 msgstr "съдържание"
 
-#: merge-recursive.c:1593
+#: merge-recursive.c:1592
 msgid "add/add"
 msgstr "добавяне/добавяне"
 
-#: merge-recursive.c:1627
+#: merge-recursive.c:1626
 #, c-format
 msgid "Skipped %s (merged same as existing)"
 msgstr "Прескачане на „%s“ (слетият резултат е идентичен със сегашния)"
 
-#: merge-recursive.c:1641
+#: merge-recursive.c:1640
 #, c-format
 msgid "Auto-merging %s"
 msgstr "Автоматично сливане на „%s“"
 
-#: merge-recursive.c:1645 git-submodule.sh:1150
+#: merge-recursive.c:1644 git-submodule.sh:1150
 msgid "submodule"
 msgstr "ПОДМОДУЛ"
 
-#: merge-recursive.c:1646
+#: merge-recursive.c:1645
 #, c-format
 msgid "CONFLICT (%s): Merge conflict in %s"
 msgstr "КОНФЛИКТ (%s): Конфликт при сливане на „%s“"
 
-#: merge-recursive.c:1732
+#: merge-recursive.c:1731
 #, c-format
 msgid "Removing %s"
 msgstr "Изтриване на „%s“"
 
-#: merge-recursive.c:1757
+#: merge-recursive.c:1756
 msgid "file/directory"
 msgstr "файл/директория"
 
-#: merge-recursive.c:1763
+#: merge-recursive.c:1762
 msgid "directory/file"
 msgstr "директория/файл"
 
-#: merge-recursive.c:1768
+#: merge-recursive.c:1767
 #, c-format
 msgid "CONFLICT (%s): There is a directory with name %s in %s. Adding %s as %s"
 msgstr ""
 "КОНФЛИКТ (%s): Съществува директория на име „%s“ в „%s“. Добавяне на „%s“ "
 "като „%s“"
 
-#: merge-recursive.c:1778
+#: merge-recursive.c:1777
 #, c-format
 msgid "Adding %s"
 msgstr "Добавяне на „%s“"
 
-#: merge-recursive.c:1795
+#: merge-recursive.c:1794
 msgid "Fatal merge failure, shouldn't happen."
 msgstr "Фатална грешка при сливане, а такава не трябва да възниква!"
 
-#: merge-recursive.c:1814
+#: merge-recursive.c:1813
 msgid "Already up-to-date!"
 msgstr "Вече е обновено!"
 
-#: merge-recursive.c:1823
+#: merge-recursive.c:1822
 #, c-format
 msgid "merging of trees %s and %s failed"
 msgstr "неуспешно сливане на дърветата „%s“ и „%s“"
 
 # FIXME message
-#: merge-recursive.c:1853
+#: merge-recursive.c:1852
 #, c-format
 msgid "Unprocessed path??? %s"
 msgstr ""
 "Пътят „%s“ не е обработен, това е грешка в Git, докладвайте я на "
 "разработчиците, като пратите е-писмо на адрес: „git@vger.kernel.org“."
 
-#: merge-recursive.c:1901
+#: merge-recursive.c:1900
 msgid "Merging:"
 msgstr "Сливане:"
 
-#: merge-recursive.c:1914
+#: merge-recursive.c:1913
 #, c-format
 msgid "found %u common ancestor:"
 msgid_plural "found %u common ancestors:"
 msgstr[0] "открит е %u общ предшественик:"
 msgstr[1] "открити са %u общи предшественици:"
 
-#: merge-recursive.c:1951
+#: merge-recursive.c:1950
 msgid "merge returned no commit"
 msgstr "сливането не върна подаване"
 
-#: merge-recursive.c:2008
+#: merge-recursive.c:2007
 #, c-format
 msgid "Could not parse object '%s'"
 msgstr "Неуспешен анализ на обекта „%s“"
 
-#: merge-recursive.c:2019 builtin/merge.c:667
+#: merge-recursive.c:2018 builtin/merge.c:645
 msgid "Unable to write index."
 msgstr "Индексът не може да бъде прочетен"
 
 #: notes-utils.c:41
 msgid "Cannot commit uninitialized/unreferenced notes tree"
 msgstr ""
@@ -1066,13 +1052,13 @@
 #. environment variable, the second %s is its value
 #: notes-utils.c:119
 #, c-format
 msgid "Bad %s value: '%s'"
 msgstr "Зададена е лоша стойност на променливата „%s“: „%s“"
 
-#: object.c:241
+#: object.c:242
 #, c-format
 msgid "unable to parse object: %s"
 msgstr "обектът „%s“ не може да бъде анализиран"
 
 #: parse-options.c:546
 msgid "..."
@@ -1164,94 +1150,138 @@
 "Това често се случва, ако сте забравили да добавите „:/“ или „.“."
 
 #: pretty.c:968
 msgid "unable to parse --pretty format"
 msgstr "аргументът към опцията „--pretty“ не може да се анализира"
 
-#: progress.c:225
+#: progress.c:236
 msgid "done"
 msgstr "действието завърши"
 
-#: read-cache.c:1275
+#: read-cache.c:1295
 #, c-format
 msgid ""
 "index.version set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "Зададена е неправилна стойност на настройката „index.version“.\n"
 "Ще се ползва версия %i"
 
-#: read-cache.c:1285
+#: read-cache.c:1305
 #, c-format
 msgid ""
 "GIT_INDEX_VERSION set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "Зададена е неправилна стойност на променливата на средата "
 "„GIT_INDEX_VERSION“.\n"
 "Ще се ползва версия %i"
 
-#: remote.c:782
+#: remote.c:792
 #, c-format
 msgid "Cannot fetch both %s and %s to %s"
 msgstr "Невъзможно е да се доставят едновременно и „%s“, и „%s“ към „%s“"
 
-#: remote.c:786
+#: remote.c:796
 #, c-format
 msgid "%s usually tracks %s, not %s"
 msgstr "„%s“ обикновено следи „%s“, а не „%s“"
 
-#: remote.c:790
+#: remote.c:800
 #, c-format
 msgid "%s tracks both %s and %s"
 msgstr "„%s“ следи както „%s“, така и „%s“"
 
-#: remote.c:798
+#: remote.c:808
 msgid "Internal error"
 msgstr "Вътрешна грешка"
 
-#: remote.c:1980
+#: remote.c:1723 remote.c:1766
+msgid "HEAD does not point to a branch"
+msgstr "Указателят „HEAD“ не сочи към клон"
+
+#: remote.c:1732
+#, c-format
+msgid "no such branch: '%s'"
+msgstr "няма клон на име „%s“"
+
+#: remote.c:1735
+#, c-format
+msgid "no upstream configured for branch '%s'"
+msgstr "не е зададен клон-източник за клона „%s“"
+
+#: remote.c:1741
+#, c-format
+msgid "upstream branch '%s' not stored as a remote-tracking branch"
+msgstr "клонът-източник „%s“ не е съхранен като следящ клон"
+
+#: remote.c:1756
+#, c-format
+msgid "push destination '%s' on remote '%s' has no local tracking branch"
+msgstr ""
+"липсва локален следящ клон за местоположението за изтласкване „%s“ в "
+"хранилището „%s“"
+
+#: remote.c:1771
+#, c-format
+msgid "branch '%s' has no remote for pushing"
+msgstr "няма информация клонът „%s“ да следи някой друг"
+
+#: remote.c:1782
+#, c-format
+msgid "push refspecs for '%s' do not include '%s'"
+msgstr "указателят за изтласкване на „%s“ не включва „%s“"
+
+#: remote.c:1795
+msgid "push has no destination (push.default is 'nothing')"
+msgstr "указателят за изтласкване не включва цел („push.default“ е „nothing“)"
+
+#: remote.c:1817
+msgid "cannot resolve 'simple' push to a single destination"
+msgstr "простото (simple) изтласкване не съответства на една цел"
+
+#: remote.c:2124
 #, c-format
 msgid "Your branch is based on '%s', but the upstream is gone.\n"
 msgstr "Този клон следи „%s“, но следеният клон е изтрит.\n"
 
-#: remote.c:1984
+#: remote.c:2128
 msgid "  (use \"git branch --unset-upstream\" to fixup)\n"
 msgstr "  (за да коригирате това, използвайте „git branch --unset-upstream“)\n"
 
-#: remote.c:1987
+#: remote.c:2131
 #, c-format
 msgid "Your branch is up-to-date with '%s'.\n"
 msgstr "Клонът е актуализиран към „%s“.\n"
 
-#: remote.c:1991
+#: remote.c:2135
 #, c-format
 msgid "Your branch is ahead of '%s' by %d commit.\n"
 msgid_plural "Your branch is ahead of '%s' by %d commits.\n"
 msgstr[0] "Клонът ви е с %2$d подаване пред „%1$s“.\n"
 msgstr[1] "Клонът ви е с %2$d подавания пред „%1$s“.\n"
 
-#: remote.c:1997
+#: remote.c:2141
 msgid "  (use \"git push\" to publish your local commits)\n"
 msgstr "  (публикувайте локалните си промени чрез „git push“)\n"
 
-#: remote.c:2000
+#: remote.c:2144
 #, c-format
 msgid "Your branch is behind '%s' by %d commit, and can be fast-forwarded.\n"
 msgid_plural ""
 "Your branch is behind '%s' by %d commits, and can be fast-forwarded.\n"
 msgstr[0] ""
-"Клонът ви е с %2$d подаване след „%1$s“ и може да бъде тривиално слят.\n"
+"Клонът ви е с %2$d подаване зад „%1$s“ и може да бъде тривиално слят.\n"
 msgstr[1] ""
-"Клонът ви е с %2$d подавания след „%1$s“ и може да бъде тривиално слят.\n"
+"Клонът ви е с %2$d подавания зад „%1$s“ и може да бъде тривиално слят.\n"
 
-#: remote.c:2008
+#: remote.c:2152
 msgid "  (use \"git pull\" to update your local branch)\n"
 msgstr "  (обновете локалния си клон чрез „git pull“)\n"
 
-#: remote.c:2011
+#: remote.c:2155
 #, c-format
 msgid ""
 "Your branch and '%s' have diverged,\n"
 "and have %d and %d different commit each, respectively.\n"
 msgid_plural ""
 "Your branch and '%s' have diverged,\n"
@@ -1260,17 +1290,17 @@
 "Текущият клон се е отделил от „%s“,\n"
 "двата имат съответно по %d и %d несъвпадащи подавания.\n"
 msgstr[1] ""
 "Текущият клон се е отделил от „%s“,\n"
 "двата имат съответно по %d и %d несъвпадащи подавания.\n"
 
-#: remote.c:2021
+#: remote.c:2165
 msgid "  (use \"git pull\" to merge the remote branch into yours)\n"
 msgstr "  (слейте отдалечения клон в локалния чрез „git pull“)\n"
 
-#: revision.c:2348
+#: revision.c:2366
 msgid "--first-parent is incompatible with --bisect"
 msgstr "опциите „--first-parent“ и „--bisect“ са несъвместими"
 
 #: run-command.c:83
 msgid "open /dev/null failed"
 msgstr "неуспешно отваряне на „/dev/null“"
@@ -1281,28 +1311,28 @@
 msgstr "неуспешно изпълнение на dup2(%d,%d)"
 
 #: send-pack.c:272
 msgid "failed to sign the push certificate"
 msgstr "сертификатът за изтласкване не може да бъде подписан"
 
-#: send-pack.c:356
+#: send-pack.c:378
 msgid "the receiving end does not support --signed push"
 msgstr "отсрещната страна не поддържа изтласкване с опцията „--signed“"
 
-#: send-pack.c:366
+#: send-pack.c:389
 msgid "the receiving end does not support --atomic push"
 msgstr "получаващата страна не поддържа изтласкване с опцията „--atomic“"
 
-#: sequencer.c:172 builtin/merge.c:782 builtin/merge.c:893 builtin/merge.c:995
-#: builtin/merge.c:1005
+#: sequencer.c:172 builtin/merge.c:760 builtin/merge.c:871 builtin/merge.c:973
+#: builtin/merge.c:983
 #, c-format
 msgid "Could not open '%s' for writing"
 msgstr "„%s“ не може да бъде отворен за запис"
 
-#: sequencer.c:174 builtin/merge.c:344 builtin/merge.c:785 builtin/merge.c:997
-#: builtin/merge.c:1010
+#: sequencer.c:174 builtin/merge.c:344 builtin/merge.c:763 builtin/merge.c:975
+#: builtin/merge.c:988
 #, c-format
 msgid "Could not write to '%s'"
 msgstr "„%s“ не може да бъде записан"
 
 # FIXME git add <path…> for consistence
 #: sequencer.c:195
@@ -1502,13 +1532,13 @@
 #: sequencer.c:886
 msgid "cannot abort from a branch yet to be born"
 msgstr ""
 "действието не може да бъде преустановено, когато сте на клон, който тепърва "
 "предстои да бъде създаден"
 
-#: sequencer.c:908 builtin/apply.c:4288
+#: sequencer.c:908 builtin/apply.c:4291
 #, c-format
 msgid "cannot open %s: %s"
 msgstr "файлът „%s“ не може да бъде отворен: %s"
 
 #: sequencer.c:911
 #, c-format
@@ -1546,13 +1576,18 @@
 msgstr "Първоначалното подаване не може да бъде отменено"
 
 #: sequencer.c:1124
 msgid "Can't cherry-pick into empty head"
 msgstr "При празен връх не могат да се отбират подавания"
 
-#: sha1_name.c:440
+#: setup.c:243
+#, c-format
+msgid "failed to read %s"
+msgstr "файлът „%s“ не може да бъде прочетен"
+
+#: sha1_name.c:453
 msgid ""
 "Git normally never creates a ref that ends with 40 hex characters\n"
 "because it will be ignored when you just specify 40-hex. These refs\n"
 "may be created by mistake. For example,\n"
 "\n"
 "  git checkout -b $br $(git rev-parse ...)\n"
@@ -1570,31 +1605,12 @@
 "където стойността на променливата на средата BRANCH е празна, при което се\n"
 "създава подобен указател. Прегледайте тези указатели и ги изтрийте. Можете "
 "да\n"
 "спрете това съобщение като изпълните командата:\n"
 "„git config advice.objectNameWarning false“"
 
-#: sha1_name.c:1068
-msgid "HEAD does not point to a branch"
-msgstr "Указателят „HEAD“ не сочи към клон"
-
-#: sha1_name.c:1071
-#, c-format
-msgid "No such branch: '%s'"
-msgstr "Не съществува клон на име „%s“"
-
-#: sha1_name.c:1073
-#, c-format
-msgid "No upstream configured for branch '%s'"
-msgstr "Не е зададен клон-източник за клона „%s“"
-
-#: sha1_name.c:1077
-#, c-format
-msgid "Upstream branch '%s' not stored as a remote-tracking branch"
-msgstr "Клонът-източник „%s“ не е съхранен като следящ клон"
-
 #: submodule.c:64 submodule.c:98
 msgid "Cannot change unmerged .gitmodules, resolve merge conflicts first"
 msgstr ""
 "Неслетите файлове „.gitmodules“ не могат да бъдат променяни. Първо "
 "коригирайте конфликтите"
 
@@ -1614,18 +1630,13 @@
 msgstr "Записът „%s“ във файла „.gitmodules“ не може да бъде изтрит"
 
 #: submodule.c:120
 msgid "staging updated .gitmodules failed"
 msgstr "неуспешно добавяне на променения файл „.gitmodules“ в индекса"
 
-#: submodule.c:1109 builtin/init-db.c:371
-#, c-format
-msgid "Could not create git link %s"
-msgstr "Връзката в Git „%s“ не може да бъде създадена"
-
-#: submodule.c:1120
+#: submodule.c:1115
 #, c-format
 msgid "Could not set core.worktree in %s"
 msgstr "Настройката „core.worktree“ не може да се зададе в „%s“"
 
 #: trailer.c:491 trailer.c:495 trailer.c:499 trailer.c:553 trailer.c:557
 #: trailer.c:561
@@ -1649,13 +1660,13 @@
 msgstr "входният файл „%s“ не може да бъде прочетен"
 
 #: trailer.c:704
 msgid "could not read from stdin"
 msgstr "от стандартния вход не може да се чете"
 
-#: unpack-trees.c:202
+#: unpack-trees.c:203
 msgid "Checking out files"
 msgstr "Изтегляне на файлове"
 
 #: urlmatch.c:120
 msgid "invalid URL scheme name or missing '://' suffix"
 msgstr "неправилна схема за адрес или суфиксът „://“ липсва"
@@ -1705,12 +1716,28 @@
 msgstr "такъв потребител не съществува"
 
 #: wrapper.c:564
 msgid "unable to get current working directory"
 msgstr "текущата работна директория е недостъпна"
 
+#: wrapper.c:575
+#, c-format
+msgid "could not open %s for writing"
+msgstr "„%s“ не може да бъде отворен за запис"
+
+# FIXME - must be the same as Could not write to '%s' above
+#: wrapper.c:587
+#, c-format
+msgid "could not write to %s"
+msgstr "„%s“ не може да бъде записан"
+
+#: wrapper.c:593
+#, c-format
+msgid "could not close %s"
+msgstr "„%s“ не може да се затвори"
+
 #: wt-status.c:150
 msgid "Unmerged paths:"
 msgstr "Неслети пътища:"
 
 #: wt-status.c:177 wt-status.c:204
 #, c-format
@@ -1735,17 +1762,17 @@
 
 #: wt-status.c:187
 msgid "  (use \"git rm <file>...\" to mark resolution)"
 msgstr ""
 "  (използвайте „git rm ФАЙЛ…“, за да укажете разрешаването на конфликта)"
 
-#: wt-status.c:198 wt-status.c:878
+#: wt-status.c:198 wt-status.c:881
 msgid "Changes to be committed:"
 msgstr "Промени, които ще бъдат подадени:"
 
-#: wt-status.c:216 wt-status.c:887
+#: wt-status.c:216 wt-status.c:890
 msgid "Changes not staged for commit:"
 msgstr "Промени, които не са в индекса за подаване:"
 
 #: wt-status.c:220
 msgid "  (use \"git add <file>...\" to update what will be committed)"
 msgstr ""
@@ -1854,306 +1881,306 @@
 
 #: wt-status.c:391
 #, c-format
 msgid "bug: unhandled diff status %c"
 msgstr "грешка: състоянието на промяната „%c“ не може да бъде обработено"
 
-#: wt-status.c:753
+#: wt-status.c:755
 msgid "Submodules changed but not updated:"
 msgstr "Подмодулите са променени, но не са обновени:"
 
-#: wt-status.c:755
+#: wt-status.c:757
 msgid "Submodule changes to be committed:"
 msgstr "Промени в подмодулите за подаване:"
 
-#: wt-status.c:835
+#: wt-status.c:838
 msgid ""
 "Do not touch the line above.\n"
 "Everything below will be removed."
 msgstr ""
 "Не променяйте горния ред.\n"
 "Всичко отдолу ще бъде изтрито."
 
-#: wt-status.c:946
+#: wt-status.c:949
 msgid "You have unmerged paths."
 msgstr "Някои пътища не са слети."
 
-#: wt-status.c:949
+#: wt-status.c:952
 msgid "  (fix conflicts and run \"git commit\")"
 msgstr "  (коригирайте конфликтите и изпълнете „git commit“)"
 
-#: wt-status.c:952
+#: wt-status.c:955
 msgid "All conflicts fixed but you are still merging."
 msgstr "Всички конфликти са решени, но продължавате сливането."
 
-#: wt-status.c:955
+#: wt-status.c:958
 msgid "  (use \"git commit\" to conclude merge)"
 msgstr "  (използвайте „git commit“, за да завършите сливането)"
 
-#: wt-status.c:965
+#: wt-status.c:968
 msgid "You are in the middle of an am session."
 msgstr "В момента прилагате поредица от кръпки чрез „git am“."
 
-#: wt-status.c:968
+#: wt-status.c:971
 msgid "The current patch is empty."
 msgstr "Текущата кръпка е празна."
 
-#: wt-status.c:972
+#: wt-status.c:975
 msgid "  (fix conflicts and then run \"git am --continue\")"
 msgstr "  (коригирайте конфликтите и изпълнете „git am --continue“)"
 
-#: wt-status.c:974
+#: wt-status.c:977
 msgid "  (use \"git am --skip\" to skip this patch)"
 msgstr "  (използвайте „git am --skip“, за да пропуснете тази кръпка)"
 
-#: wt-status.c:976
+#: wt-status.c:979
 msgid "  (use \"git am --abort\" to restore the original branch)"
 msgstr ""
 "  (използвайте „git am --abort“, за да възстановите първоначалния клон)"
 
-#: wt-status.c:1036 wt-status.c:1053
+#: wt-status.c:1039 wt-status.c:1056
 #, c-format
 msgid "You are currently rebasing branch '%s' on '%s'."
 msgstr "В момента пребазирате клона „%s“ върху „%s“."
 
-#: wt-status.c:1041 wt-status.c:1058
+#: wt-status.c:1044 wt-status.c:1061
 msgid "You are currently rebasing."
 msgstr "В момента пребазирате."
 
-#: wt-status.c:1044
+#: wt-status.c:1047
 msgid "  (fix conflicts and then run \"git rebase --continue\")"
 msgstr "  (коригирайте конфликтите и използвайте „git rebase --continue“)"
 
-#: wt-status.c:1046
+#: wt-status.c:1049
 msgid "  (use \"git rebase --skip\" to skip this patch)"
 msgstr "  (използвайте „git rebase --skip“, за да пропуснете тази кръпка)"
 
-#: wt-status.c:1048
+#: wt-status.c:1051
 msgid "  (use \"git rebase --abort\" to check out the original branch)"
 msgstr ""
 "  (използвайте „git rebase --abort“, за да възстановите първоначалния клон)"
 
-#: wt-status.c:1061
+#: wt-status.c:1064
 msgid "  (all conflicts fixed: run \"git rebase --continue\")"
 msgstr "  (всички конфликти са коригирани: изпълнете „git rebase --continue“)"
 
-#: wt-status.c:1065
+#: wt-status.c:1068
 #, c-format
 msgid ""
 "You are currently splitting a commit while rebasing branch '%s' on '%s'."
 msgstr "В момента разделяте подаване докато пребазирате клона „%s“ върху „%s“."
 
-#: wt-status.c:1070
+#: wt-status.c:1073
 msgid "You are currently splitting a commit during a rebase."
 msgstr "В момента разделяте подаване докато пребазирате."
 
-#: wt-status.c:1073
+#: wt-status.c:1076
 msgid "  (Once your working directory is clean, run \"git rebase --continue\")"
 msgstr ""
 "  (След като работното ви дърво стане чисто, използвайте „git rebase --"
 "continue“)"
 
-#: wt-status.c:1077
+#: wt-status.c:1080
 #, c-format
 msgid "You are currently editing a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "В момента редактирате подаване докато пребазирате клона „%s“ върху „%s“."
 
-#: wt-status.c:1082
+#: wt-status.c:1085
 msgid "You are currently editing a commit during a rebase."
 msgstr "В момента редактирате подаване докато пребазирате."
 
-#: wt-status.c:1085
+#: wt-status.c:1088
 msgid "  (use \"git commit --amend\" to amend the current commit)"
 msgstr ""
 "  (използвайте „git commit --amend“, за да редактирате текущото подаване)"
 
-#: wt-status.c:1087
+#: wt-status.c:1090
 msgid ""
 "  (use \"git rebase --continue\" once you are satisfied with your changes)"
 msgstr ""
 "  (използвайте „git rebase --continue“, след като завършите промените си)"
 
-#: wt-status.c:1097
+#: wt-status.c:1100
 #, c-format
 msgid "You are currently cherry-picking commit %s."
 msgstr "В момента отбирате подаването „%s“."
 
-#: wt-status.c:1102
+#: wt-status.c:1105
 msgid "  (fix conflicts and run \"git cherry-pick --continue\")"
 msgstr "  (коригирайте конфликтите и изпълнете „git cherry-pick --continue“)"
 
-#: wt-status.c:1105
+#: wt-status.c:1108
 msgid "  (all conflicts fixed: run \"git cherry-pick --continue\")"
 msgstr ""
 "  (всички конфликти са коригирани, изпълнете „git cherry-pick --continue“)"
 
-#: wt-status.c:1107
+#: wt-status.c:1110
 msgid "  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)"
 msgstr ""
 "  (използвайте „git cherry-pick --abort“, за да отмените всички действия с "
 "отбиране)"
 
-#: wt-status.c:1116
+#: wt-status.c:1119
 #, c-format
 msgid "You are currently reverting commit %s."
 msgstr "В момента отменяте подаване „%s“."
 
-#: wt-status.c:1121
+#: wt-status.c:1124
 msgid "  (fix conflicts and run \"git revert --continue\")"
 msgstr "  (коригирайте конфликтите и изпълнете „git revert --continue“)"
 
-#: wt-status.c:1124
+#: wt-status.c:1127
 msgid "  (all conflicts fixed: run \"git revert --continue\")"
 msgstr "  (всички конфликти са коригирани, изпълнете „git revert --continue“)"
 
-#: wt-status.c:1126
+#: wt-status.c:1129
 msgid "  (use \"git revert --abort\" to cancel the revert operation)"
 msgstr ""
 "  (използвайте „git revert --abort“, за да преустановите отмяната на "
 "подаване)"
 
-#: wt-status.c:1137
+#: wt-status.c:1140
 #, c-format
 msgid "You are currently bisecting, started from branch '%s'."
 msgstr "В момента търсите двоично, като сте стартирали от клон „%s“."
 
-#: wt-status.c:1141
+#: wt-status.c:1144
 msgid "You are currently bisecting."
 msgstr "В момента търсите двоично."
 
-#: wt-status.c:1144
+#: wt-status.c:1147
 msgid "  (use \"git bisect reset\" to get back to the original branch)"
 msgstr ""
 "  (използвайте „git bisect reset“, за да се върнете към първоначалното "
 "състояние и клон)"
 
-#: wt-status.c:1321
+#: wt-status.c:1324
 msgid "On branch "
 msgstr "На клон "
 
-#: wt-status.c:1328
+#: wt-status.c:1331
 msgid "rebase in progress; onto "
 msgstr "извършвате пребазиране върху "
 
-#: wt-status.c:1333
+#: wt-status.c:1336
 msgid "HEAD detached at "
 msgstr "Указателят „HEAD“ не е свързан и е при "
 
-#: wt-status.c:1335
+#: wt-status.c:1338
 msgid "HEAD detached from "
 msgstr "Указателят „HEAD“ не е свързан и е отделѐн от "
 
-#: wt-status.c:1338
+#: wt-status.c:1341
 msgid "Not currently on any branch."
 msgstr "Извън всички клони."
 
-#: wt-status.c:1355
+#: wt-status.c:1358
 msgid "Initial commit"
 msgstr "Първоначално подаване"
 
-#: wt-status.c:1369
+#: wt-status.c:1372
 msgid "Untracked files"
 msgstr "Неследени файлове"
 
-#: wt-status.c:1371
+#: wt-status.c:1374
 msgid "Ignored files"
 msgstr "Игнорирани файлове"
 
-#: wt-status.c:1375
+#: wt-status.c:1378
 #, c-format
 msgid ""
 "It took %.2f seconds to enumerate untracked files. 'status -uno'\n"
 "may speed it up, but you have to be careful not to forget to add\n"
 "new files yourself (see 'git help status')."
 msgstr ""
 "Бяха необходими %.2f секунди за изброяването на неследените файлове.\n"
 "Добавянето на опцията „-uno“ към командата „git status“, ще ускори\n"
 "изпълнението, но не трябва да забравяте ръчно да добавяте новите файлове.\n"
 "За повече подробности погледнете „git status help“."
 
-#: wt-status.c:1381
+#: wt-status.c:1384
 #, c-format
 msgid "Untracked files not listed%s"
 msgstr "Неследените файлове не са изведени%s"
 
-#: wt-status.c:1383
+#: wt-status.c:1386
 msgid " (use -u option to show untracked files)"
 msgstr " (използвайте опцията „-u“, за да изведете неследените файлове)"
 
-#: wt-status.c:1389
+#: wt-status.c:1392
 msgid "No changes"
 msgstr "Няма промени"
 
-#: wt-status.c:1394
+#: wt-status.c:1397
 #, c-format
 msgid "no changes added to commit (use \"git add\" and/or \"git commit -a\")\n"
 msgstr ""
 "към индекса за подаване не са добавени промени (използвайте „git add“ и/или "
 "„git commit -a“)\n"
 
-#: wt-status.c:1397
+#: wt-status.c:1400
 #, c-format
 msgid "no changes added to commit\n"
 msgstr "към индекса за подаване не са добавени промени\n"
 
-#: wt-status.c:1400
+#: wt-status.c:1403
 #, c-format
 msgid ""
 "nothing added to commit but untracked files present (use \"git add\" to "
 "track)\n"
 msgstr ""
 "към индекса за подаване не са добавени промени, но има нови файлове "
 "(използвайте „git add“, за да започне тяхното следене)\n"
 
-#: wt-status.c:1403
+#: wt-status.c:1406
 #, c-format
 msgid "nothing added to commit but untracked files present\n"
 msgstr "към индекса за подаване не са добавени промени, но има нови файлове\n"
 
-#: wt-status.c:1406
+#: wt-status.c:1409
 #, c-format
 msgid "nothing to commit (create/copy files and use \"git add\" to track)\n"
 msgstr ""
 "липсват каквито и да е промени (създайте или копирайте файлове и използвайте "
 "„git add“, за да започне тяхното следене)\n"
 
-#: wt-status.c:1409 wt-status.c:1414
+#: wt-status.c:1412 wt-status.c:1417
 #, c-format
 msgid "nothing to commit\n"
 msgstr "липсват каквито и да е промени\n"
 
-#: wt-status.c:1412
+#: wt-status.c:1415
 #, c-format
 msgid "nothing to commit (use -u to show untracked files)\n"
 msgstr ""
 "липсват каквито и да е промени (използвайте опцията „-u“, за да се изведат и "
 "неследените файлове)\n"
 
-#: wt-status.c:1416
+#: wt-status.c:1419
 #, c-format
 msgid "nothing to commit, working directory clean\n"
 msgstr "липсват каквито и да е промени, работното дърво е чисто\n"
 
-#: wt-status.c:1525
+#: wt-status.c:1528
 msgid "HEAD (no branch)"
 msgstr "HEAD (извън клон)"
 
-#: wt-status.c:1531
+#: wt-status.c:1534
 msgid "Initial commit on "
 msgstr "Първоначално подаване на клон"
 
-#: wt-status.c:1563
+#: wt-status.c:1561
 msgid "gone"
 msgstr "изтрит"
 
-#: wt-status.c:1565 wt-status.c:1573
+#: wt-status.c:1563 wt-status.c:1571
 msgid "behind "
 msgstr "назад с "
 
-#: compat/precompose_utf8.c:55 builtin/clone.c:360
+#: compat/precompose_utf8.c:55 builtin/clone.c:345
 #, c-format
 msgid "failed to unlink '%s'"
 msgstr "неуспешно изтриване на „%s“"
 
 #: builtin/add.c:22
 msgid "git add [<options>] [--] <pathspec>..."
@@ -2174,138 +2201,142 @@
 msgstr "изтриване на „%s“\n"
 
 #: builtin/add.c:134
 msgid "Unstaged changes after refreshing the index:"
 msgstr "Промени, които и след обновяването на индекса не са добавени към него:"
 
-#: builtin/add.c:194 builtin/rev-parse.c:785
+#: builtin/add.c:194 builtin/rev-parse.c:796
 msgid "Could not read the index"
 msgstr "Индексът не може да бъде прочетен"
 
 #: builtin/add.c:205
 #, c-format
 msgid "Could not open '%s' for writing."
 msgstr "Файлът „%s“ не може да бъде отворен за запис."
 
 #: builtin/add.c:209
 msgid "Could not write patch"
 msgstr "Кръпката не може да бъде записана"
 
-#: builtin/add.c:214
+#: builtin/add.c:212
+msgid "editing patch failed"
+msgstr "неуспешно редактиране на кръпка"
+
+#: builtin/add.c:215
 #, c-format
 msgid "Could not stat '%s'"
 msgstr "Не може да се получи информация чрез „stat“ за файла „%s“"
 
-#: builtin/add.c:216
+#: builtin/add.c:217
 msgid "Empty patch. Aborted."
 msgstr "Празна кръпка, преустановяване на действието."
 
-#: builtin/add.c:221
+#: builtin/add.c:222
 #, c-format
 msgid "Could not apply '%s'"
 msgstr "Кръпката „%s“ не може да бъде приложена"
 
-#: builtin/add.c:231
+#: builtin/add.c:232
 msgid "The following paths are ignored by one of your .gitignore files:\n"
 msgstr ""
 "Следните пътища ще бъдат игнорирани според някой от файловете „.gitignore“:\n"
 
-#: builtin/add.c:248 builtin/clean.c:876 builtin/fetch.c:107 builtin/mv.c:110
-#: builtin/prune-packed.c:55 builtin/push.c:508 builtin/remote.c:1372
-#: builtin/rm.c:269
+#: builtin/add.c:249 builtin/clean.c:874 builtin/fetch.c:107 builtin/mv.c:110
+#: builtin/prune-packed.c:55 builtin/push.c:508 builtin/remote.c:1369
+#: builtin/rm.c:268
 msgid "dry run"
 msgstr "пробно изпълнeние"
 
-#: builtin/add.c:249 builtin/apply.c:4577 builtin/check-ignore.c:19
-#: builtin/commit.c:1322 builtin/count-objects.c:63 builtin/fsck.c:608
+#: builtin/add.c:250 builtin/apply.c:4580 builtin/check-ignore.c:19
+#: builtin/commit.c:1322 builtin/count-objects.c:63 builtin/fsck.c:616
 #: builtin/log.c:1617 builtin/mv.c:109 builtin/read-tree.c:114
 msgid "be verbose"
 msgstr "повече подробности"
 
-#: builtin/add.c:251
+#: builtin/add.c:252
 msgid "interactive picking"
 msgstr "интерактивно отбиране на промени"
 
-#: builtin/add.c:252 builtin/checkout.c:1126 builtin/reset.c:286
+#: builtin/add.c:253 builtin/checkout.c:1221 builtin/reset.c:286
 msgid "select hunks interactively"
 msgstr "интерактивен избор на парчета код"
 
-#: builtin/add.c:253
+#: builtin/add.c:254
 msgid "edit current diff and apply"
 msgstr "редактиране на текущата разлика и прилагане"
 
-#: builtin/add.c:254
+#: builtin/add.c:255
 msgid "allow adding otherwise ignored files"
 msgstr "добавяне и на иначе игнорираните файлове"
 
-#: builtin/add.c:255
+#: builtin/add.c:256
 msgid "update tracked files"
 msgstr "обновяване на следените файлове"
 
-#: builtin/add.c:256
+#: builtin/add.c:257
 msgid "record only the fact that the path will be added later"
 msgstr "отбелязване само на факта, че пътят ще бъде добавен по-късно"
 
-#: builtin/add.c:257
+#: builtin/add.c:258
 msgid "add changes from all tracked and untracked files"
 msgstr "добавяне на всички промени в следените и неследените файлове"
 
-#: builtin/add.c:260
+#: builtin/add.c:261
 msgid "ignore paths removed in the working tree (same as --no-all)"
 msgstr ""
 "игнориране на пътищата, които са изтрити от работното дърво (същото като „--"
 "no-all“)"
 
-#: builtin/add.c:262
+#: builtin/add.c:263
 msgid "don't add, only refresh the index"
 msgstr "без добавяне на нови файлове, само обновяване на индекса"
 
-#: builtin/add.c:263
+#: builtin/add.c:264
 msgid "just skip files which cannot be added because of errors"
 msgstr ""
 "прескачане на файловете, които не могат да бъдат добавени поради грешки"
 
-#: builtin/add.c:264
+#: builtin/add.c:265
 msgid "check if - even missing - files are ignored in dry run"
 msgstr ""
 "проверка, че при пробно изпълнение всички файлове, дори и изтритите, се "
 "игнорират"
 
-#: builtin/add.c:286
+#: builtin/add.c:287
 #, c-format
 msgid "Use -f if you really want to add them.\n"
 msgstr "Използвайте опцията „-f“, за да ги добавите наистина.\n"
 
-#: builtin/add.c:293
+#: builtin/add.c:294
 msgid "adding files failed"
 msgstr "неуспешно добавяне на файлове"
 
-#: builtin/add.c:329
+#: builtin/add.c:330
 msgid "-A and -u are mutually incompatible"
 msgstr "опциите „-A“ и „-u“ са несъвместими"
 
-#: builtin/add.c:336
+#: builtin/add.c:337
 msgid "Option --ignore-missing can only be used together with --dry-run"
 msgstr "Опцията „--ignore-missing“ е съвместима само с „--dry-run“"
 
-#: builtin/add.c:357
+#: builtin/add.c:358
 #, c-format
 msgid "Nothing specified, nothing added.\n"
 msgstr "Нищо не е зададено и нищо не е добавено.\n"
 
-#: builtin/add.c:358
+#: builtin/add.c:359
 #, c-format
 msgid "Maybe you wanted to say 'git add .'?\n"
 msgstr "Вероятно искахте да използвате „git add .“?\n"
 
-#: builtin/add.c:363 builtin/check-ignore.c:172 builtin/clean.c:920
-#: builtin/commit.c:335 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:299
+#: builtin/add.c:364 builtin/check-ignore.c:172 builtin/clean.c:918
+#: builtin/commit.c:335 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:298
 msgid "index file corrupt"
 msgstr "файлът с индекса е повреден"
 
-#: builtin/add.c:446 builtin/apply.c:4675 builtin/mv.c:279 builtin/rm.c:431
+#: builtin/add.c:447 builtin/apply.c:4678 builtin/mv.c:279 builtin/rm.c:430
 msgid "Unable to write new index file"
 msgstr "Новият индекс не може да бъде записан"
 
 #: builtin/apply.c:59
 msgid "git apply [<options>] [<patch>...]"
 msgstr "git apply [ОПЦИЯ…] [КРЪПКА…]"
@@ -2385,434 +2416,434 @@
 "След съкращаването на %d-та част от компонентите на пътя, в заглавната част "
 "на „git diff“ липсва информация за име на файл (ред: %d)"
 msgstr[1] ""
 "След съкращаването на първите %d части от компонентите на пътя, в заглавната "
 "част на „git diff“ липсва информация за име на файл (ред: %d)"
 
-#: builtin/apply.c:1656
+#: builtin/apply.c:1659
 msgid "new file depends on old contents"
 msgstr "новият файл зависи от старото съдържание на файла"
 
-#: builtin/apply.c:1658
+#: builtin/apply.c:1661
 msgid "deleted file still has contents"
 msgstr "изтритият файл не е празен"
 
-#: builtin/apply.c:1684
+#: builtin/apply.c:1687
 #, c-format
 msgid "corrupt patch at line %d"
 msgstr "грешка в кръпката на ред %d"
 
-#: builtin/apply.c:1720
+#: builtin/apply.c:1723
 #, c-format
 msgid "new file %s depends on old contents"
 msgstr "новият файл „%s“ зависи от старото съдържание на файла"
 
-#: builtin/apply.c:1722
+#: builtin/apply.c:1725
 #, c-format
 msgid "deleted file %s still has contents"
 msgstr "изтритият файл „%s“ не е празен"
 
 # FIXME - double **??
-#: builtin/apply.c:1725
+#: builtin/apply.c:1728
 #, c-format
 msgid "** warning: file %s becomes empty but is not deleted"
 msgstr "●● предупреждение: файлът „%s“ вече е празен, но не е изтрит"
 
-#: builtin/apply.c:1871
+#: builtin/apply.c:1874
 #, c-format
 msgid "corrupt binary patch at line %d: %.*s"
 msgstr "грешка в двоичната кръпка на ред %d: %.*s"
 
-#: builtin/apply.c:1900
+#: builtin/apply.c:1903
 #, c-format
 msgid "unrecognized binary patch at line %d"
 msgstr "неразпозната двоичната кръпка на ред %d"
 
-#: builtin/apply.c:2051
+#: builtin/apply.c:2054
 #, c-format
 msgid "patch with only garbage at line %d"
 msgstr "кръпката е с изцяло повредени данни на ред %d"
 
-#: builtin/apply.c:2141
+#: builtin/apply.c:2144
 #, c-format
 msgid "unable to read symlink %s"
 msgstr "символната връзка „%s“ не може да бъде прочетена"
 
-#: builtin/apply.c:2145
+#: builtin/apply.c:2148
 #, c-format
 msgid "unable to open or read %s"
 msgstr "файлът „%s“ не може да бъде отворен или прочетен"
 
-#: builtin/apply.c:2778
+#: builtin/apply.c:2781
 #, c-format
 msgid "invalid start of line: '%c'"
 msgstr "неправилно начало на ред: „%c“"
 
-#: builtin/apply.c:2897
+#: builtin/apply.c:2900
 #, c-format
 msgid "Hunk #%d succeeded at %d (offset %d line)."
 msgid_plural "Hunk #%d succeeded at %d (offset %d lines)."
 msgstr[0] ""
 "%d-то парче код бе успешно приложено на ред %d (отместване от %d ред)."
 msgstr[1] ""
 "%d-то парче код бе успешно приложено на ред %d (отместване от %d реда)."
 
-#: builtin/apply.c:2909
+#: builtin/apply.c:2912
 #, c-format
 msgid "Context reduced to (%ld/%ld) to apply fragment at %d"
 msgstr ""
 "Контекстът е намален на (%ld/%ld) за прилагането на парчето код на ред %d"
 
-#: builtin/apply.c:2915
+#: builtin/apply.c:2918
 #, c-format
 msgid ""
 "while searching for:\n"
 "%.*s"
 msgstr ""
 "при търсене за:\n"
 "%.*s"
 
-#: builtin/apply.c:2935
+#: builtin/apply.c:2938
 #, c-format
 msgid "missing binary patch data for '%s'"
 msgstr "липсват данните за двоичната кръпка за „%s“"
 
-#: builtin/apply.c:3036
+#: builtin/apply.c:3039
 #, c-format
 msgid "binary patch does not apply to '%s'"
 msgstr "двоичната кръпка не може да бъде приложена върху „%s“"
 
-#: builtin/apply.c:3042
+#: builtin/apply.c:3045
 #, c-format
 msgid "binary patch to '%s' creates incorrect result (expecting %s, got %s)"
 msgstr ""
 "двоичната кръпка за „%s“ води до неправилни резултати (очакваше се SHA1: "
 "„%s“, а бе получено: „%s“)"
 
-#: builtin/apply.c:3063
+#: builtin/apply.c:3066
 #, c-format
 msgid "patch failed: %s:%ld"
 msgstr "неуспешно прилагане на кръпка: „%s:%ld“"
 
-#: builtin/apply.c:3187
+#: builtin/apply.c:3190
 #, c-format
 msgid "cannot checkout %s"
 msgstr "„%s“ не може да се изтегли"
 
-#: builtin/apply.c:3232 builtin/apply.c:3243 builtin/apply.c:3288
+#: builtin/apply.c:3235 builtin/apply.c:3246 builtin/apply.c:3291
 #, c-format
 msgid "read of %s failed"
 msgstr "неуспешно прочитане на „%s“"
 
-#: builtin/apply.c:3240
+#: builtin/apply.c:3243
 #, c-format
 msgid "reading from '%s' beyond a symbolic link"
 msgstr "изчитане на „%s“ след проследяване на символна връзка"
 
-#: builtin/apply.c:3268 builtin/apply.c:3490
+#: builtin/apply.c:3271 builtin/apply.c:3493
 #, c-format
 msgid "path %s has been renamed/deleted"
 msgstr "обектът с път „%s“ е преименуван или изтрит"
 
-#: builtin/apply.c:3349 builtin/apply.c:3504
+#: builtin/apply.c:3352 builtin/apply.c:3507
 #, c-format
 msgid "%s: does not exist in index"
 msgstr "„%s“ не съществува в индекса"
 
-#: builtin/apply.c:3353 builtin/apply.c:3496 builtin/apply.c:3518
+#: builtin/apply.c:3356 builtin/apply.c:3499 builtin/apply.c:3521
 #, c-format
 msgid "%s: %s"
 msgstr "„%s“: %s"
 
-#: builtin/apply.c:3358 builtin/apply.c:3512
+#: builtin/apply.c:3361 builtin/apply.c:3515
 #, c-format
 msgid "%s: does not match index"
 msgstr "„%s“ не съответства на индекса"
 
-#: builtin/apply.c:3460
+#: builtin/apply.c:3463
 msgid "removal patch leaves file contents"
 msgstr "изтриващата кръпка оставя файла непразен"
 
-#: builtin/apply.c:3529
+#: builtin/apply.c:3532
 #, c-format
 msgid "%s: wrong type"
 msgstr "„%s“: неправилен вид"
 
-#: builtin/apply.c:3531
+#: builtin/apply.c:3534
 #, c-format
 msgid "%s has type %o, expected %o"
 msgstr "„%s“ е от вид „%o“, а се очакваше „%o“"
 
-#: builtin/apply.c:3690 builtin/apply.c:3692
+#: builtin/apply.c:3693 builtin/apply.c:3695
 #, c-format
 msgid "invalid path '%s'"
 msgstr "неправилен път: „%s“"
 
-#: builtin/apply.c:3747
+#: builtin/apply.c:3750
 #, c-format
 msgid "%s: already exists in index"
 msgstr "„%s“: вече съществува в индекса"
 
-#: builtin/apply.c:3750
+#: builtin/apply.c:3753
 #, c-format
 msgid "%s: already exists in working directory"
-msgstr "„%s“: вече съществува в работната директория"
+msgstr "„%s“: вече съществува в работното дърво"
 
-#: builtin/apply.c:3770
+#: builtin/apply.c:3773
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o)"
 msgstr "новите права за достъп (%o) на „%s“ не съвпадат със старите (%o)"
 
-#: builtin/apply.c:3775
+#: builtin/apply.c:3778
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o) of %s"
 msgstr ""
 "новите права за достъп (%o) на „%s“ не съвпадат със старите (%o) на „%s“"
 
-#: builtin/apply.c:3795
+#: builtin/apply.c:3798
 #, c-format
 msgid "affected file '%s' is beyond a symbolic link"
 msgstr "засегнатият файл „%s“ е след символна връзка"
 
-#: builtin/apply.c:3799
+#: builtin/apply.c:3802
 #, c-format
 msgid "%s: patch does not apply"
 msgstr "Кръпката „%s“ не може да бъде приложена"
 
-#: builtin/apply.c:3813
+#: builtin/apply.c:3816
 #, c-format
 msgid "Checking patch %s..."
 msgstr "Проверяване на кръпката „%s“…"
 
-#: builtin/apply.c:3906 builtin/checkout.c:231 builtin/reset.c:135
+#: builtin/apply.c:3909 builtin/checkout.c:233 builtin/reset.c:135
 #, c-format
 msgid "make_cache_entry failed for path '%s'"
 msgstr "неуспешно създаване на запис в кеша чрез „make_cache_entry“ за „%s“"
 
-#: builtin/apply.c:4049
+#: builtin/apply.c:4052
 #, c-format
 msgid "unable to remove %s from index"
 msgstr "„%s“ не може да се извади от индекса"
 
-#: builtin/apply.c:4078
+#: builtin/apply.c:4081
 #, c-format
 msgid "corrupt patch for submodule %s"
 msgstr "повредена кръпка за модула „%s“"
 
-#: builtin/apply.c:4082
+#: builtin/apply.c:4085
 #, c-format
 msgid "unable to stat newly created file '%s'"
 msgstr ""
 "не може да се получи информация чрез „stat“ за новосъздадения файл „%s“"
 
-#: builtin/apply.c:4087
+#: builtin/apply.c:4090
 #, c-format
 msgid "unable to create backing store for newly created file %s"
 msgstr ""
 "не може да се за създаде мястото за съхранение на новосъздадения файл „%s“"
 
-#: builtin/apply.c:4090 builtin/apply.c:4198
+#: builtin/apply.c:4093 builtin/apply.c:4201
 #, c-format
 msgid "unable to add cache entry for %s"
 msgstr "не може да се добави запис в кеша за „%s“"
 
-#: builtin/apply.c:4123
+#: builtin/apply.c:4126
 #, c-format
 msgid "closing file '%s'"
 msgstr "затваряне на файла „%s“"
 
-#: builtin/apply.c:4172
+#: builtin/apply.c:4175
 #, c-format
 msgid "unable to write file '%s' mode %o"
 msgstr "файлът „%s“ не може да се запише с режим на достъп „%o“"
 
-#: builtin/apply.c:4259
+#: builtin/apply.c:4262
 #, c-format
 msgid "Applied patch %s cleanly."
 msgstr "Кръпката „%s“ бе приложена чисто."
 
-#: builtin/apply.c:4267
+#: builtin/apply.c:4270
 msgid "internal error"
 msgstr "вътрешна грешка"
 
-#: builtin/apply.c:4270
+#: builtin/apply.c:4273
 #, c-format
 msgid "Applying patch %%s with %d reject..."
 msgid_plural "Applying patch %%s with %d rejects..."
 msgstr[0] "Прилагане на кръпката „%%s“ с %d отхвърлено парче…"
 msgstr[1] "Прилагане на кръпката „%%s“ с %d отхвърлени парчета…"
 
-#: builtin/apply.c:4280
+#: builtin/apply.c:4283
 #, c-format
 msgid "truncating .rej filename to %.*s.rej"
 msgstr "съкращаване на името на файла с отхвърлените парчета на „ %.*s.rej“"
 
-#: builtin/apply.c:4301
+#: builtin/apply.c:4304
 #, c-format
 msgid "Hunk #%d applied cleanly."
 msgstr "%d-то парче бе успешно приложено."
 
-#: builtin/apply.c:4304
+#: builtin/apply.c:4307
 #, c-format
 msgid "Rejected hunk #%d."
 msgstr "%d-то парче бе отхвърлено."
 
-#: builtin/apply.c:4394
+#: builtin/apply.c:4397
 msgid "unrecognized input"
 msgstr "непознат вход"
 
-#: builtin/apply.c:4405
+#: builtin/apply.c:4408
 msgid "unable to read index file"
 msgstr "индексът не може да бъде записан"
 
-#: builtin/apply.c:4522 builtin/apply.c:4525 builtin/clone.c:92
+#: builtin/apply.c:4525 builtin/apply.c:4528 builtin/clone.c:85
 #: builtin/fetch.c:92
 msgid "path"
 msgstr "път"
 
-#: builtin/apply.c:4523
+#: builtin/apply.c:4526
 msgid "don't apply changes matching the given path"
 msgstr "без прилагане на промените напасващи на дадения път"
 
-#: builtin/apply.c:4526
+#: builtin/apply.c:4529
 msgid "apply changes matching the given path"
 msgstr "прилагане на промените напасващи на дадения път"
 
-#: builtin/apply.c:4528
+#: builtin/apply.c:4531
 msgid "num"
 msgstr "БРОЙ"
 
-#: builtin/apply.c:4529
+#: builtin/apply.c:4532
 msgid "remove <num> leading slashes from traditional diff paths"
 msgstr "премахване на този БРОЙ водещи елементи от пътищата в разликата"
 
-#: builtin/apply.c:4532
+#: builtin/apply.c:4535
 msgid "ignore additions made by the patch"
 msgstr "игнориране на редовете добавени от тази кръпка"
 
-#: builtin/apply.c:4534
+#: builtin/apply.c:4537
 msgid "instead of applying the patch, output diffstat for the input"
 msgstr "извеждане на статистика на промените без прилагане на кръпката"
 
-#: builtin/apply.c:4538
+#: builtin/apply.c:4541
 msgid "show number of added and deleted lines in decimal notation"
 msgstr "извеждане на броя на добавените и изтритите редове"
 
-#: builtin/apply.c:4540
+#: builtin/apply.c:4543
 msgid "instead of applying the patch, output a summary for the input"
 msgstr "извеждане на статистика на входните данни без прилагане на кръпката"
 
-#: builtin/apply.c:4542
+#: builtin/apply.c:4545
 msgid "instead of applying the patch, see if the patch is applicable"
 msgstr "проверка дали кръпката може да се приложи, без действително прилагане"
 
-#: builtin/apply.c:4544
+#: builtin/apply.c:4547
 msgid "make sure the patch is applicable to the current index"
 msgstr "проверка дали кръпката може да бъде приложена към текущия индекс"
 
-#: builtin/apply.c:4546
+#: builtin/apply.c:4549
 msgid "apply a patch without touching the working tree"
 msgstr "прилагане на кръпката без промяна на работното дърво"
 
-#: builtin/apply.c:4548
+#: builtin/apply.c:4551
 msgid "accept a patch that touches outside the working area"
 msgstr "прилагане на кръпка, която променя и файлове извън работното дърво"
 
-#: builtin/apply.c:4550
+#: builtin/apply.c:4553
 msgid "also apply the patch (use with --stat/--summary/--check)"
 msgstr ""
 "кръпката да бъде приложена. Опцията се комбинира с „--check“/„--stat“/„--"
 "summary“"
 
-#: builtin/apply.c:4552
+#: builtin/apply.c:4555
 msgid "attempt three-way merge if a patch does not apply"
 msgstr "пробване с тройно сливане, ако кръпката не може да се приложи директно"
 
-#: builtin/apply.c:4554
+#: builtin/apply.c:4557
 msgid "build a temporary index based on embedded index information"
 msgstr ""
 "създаване на временен индекс на база на включената информация за индекса"
 
-#: builtin/apply.c:4556 builtin/checkout-index.c:198 builtin/ls-files.c:412
+#: builtin/apply.c:4559 builtin/checkout-index.c:198 builtin/ls-files.c:412
 msgid "paths are separated with NUL character"
 msgstr "разделяне на пътищата с нулевия знак „NUL“"
 
-#: builtin/apply.c:4559
+#: builtin/apply.c:4562
 msgid "ensure at least <n> lines of context match"
 msgstr "да се осигури контекст от поне такъв БРОЙ съвпадащи редове"
 
-#: builtin/apply.c:4560
+#: builtin/apply.c:4563
 msgid "action"
 msgstr "действие"
 
-#: builtin/apply.c:4561
+#: builtin/apply.c:4564
 msgid "detect new or modified lines that have whitespace errors"
 msgstr "засичане на нови или променени редове с грешки в знаците за интервали"
 
-#: builtin/apply.c:4564 builtin/apply.c:4567
+#: builtin/apply.c:4567 builtin/apply.c:4570
 msgid "ignore changes in whitespace when finding context"
 msgstr ""
 "игнориране на промените в знаците за интервали при откриване на контекста"
 
-#: builtin/apply.c:4570
+#: builtin/apply.c:4573
 msgid "apply the patch in reverse"
 msgstr "прилагане на кръпката в обратна посока"
 
-#: builtin/apply.c:4572
+#: builtin/apply.c:4575
 msgid "don't expect at least one line of context"
 msgstr "без изискване на дори и един ред контекст"
 
-#: builtin/apply.c:4574
+#: builtin/apply.c:4577
 msgid "leave the rejected hunks in corresponding *.rej files"
 msgstr "оставяне на отхвърлените парчета във файлове с разширение „.rej“"
 
-#: builtin/apply.c:4576
+#: builtin/apply.c:4579
 msgid "allow overlapping hunks"
 msgstr "позволяване на застъпващи се парчета"
 
-#: builtin/apply.c:4579
+#: builtin/apply.c:4582
 msgid "tolerate incorrectly detected missing new-line at the end of file"
 msgstr "пренебрегване на неправилно липсващ знак за нов ред в края на файл"
 
-#: builtin/apply.c:4582
+#: builtin/apply.c:4585
 msgid "do not trust the line counts in the hunk headers"
 msgstr "без доверяване на номерата на редовете в заглавните части на парчетата"
 
-#: builtin/apply.c:4584
+#: builtin/apply.c:4587
 msgid "root"
 msgstr "НАЧАЛНА_ДИРЕКТОРИЯ"
 
-#: builtin/apply.c:4585
+#: builtin/apply.c:4588
 msgid "prepend <root> to all filenames"
 msgstr "добавяне на тази НАЧАЛНА_ДИРЕКТОРИЯ към имената на всички файлове"
 
-#: builtin/apply.c:4607
+#: builtin/apply.c:4610
 msgid "--3way outside a repository"
 msgstr "като „--3way“, но извън хранилище"
 
-#: builtin/apply.c:4615
+#: builtin/apply.c:4618
 msgid "--index outside a repository"
 msgstr "като „--index“, но извън хранилище"
 
-#: builtin/apply.c:4618
+#: builtin/apply.c:4621
 msgid "--cached outside a repository"
 msgstr "като „--cached“, но извън хранилище"
 
-#: builtin/apply.c:4637
+#: builtin/apply.c:4640
 #, c-format
 msgid "can't open patch '%s'"
 msgstr "кръпката „%s“ не може да бъде отворена"
 
-#: builtin/apply.c:4651
+#: builtin/apply.c:4654
 #, c-format
 msgid "squelched %d whitespace error"
 msgid_plural "squelched %d whitespace errors"
 msgstr[0] "пренебрегната е %d грешка в знаците за интервали"
 msgstr[1] "пренебрегнати са %d грешки в знаците за интервали"
 
-#: builtin/apply.c:4657 builtin/apply.c:4667
+#: builtin/apply.c:4660 builtin/apply.c:4670
 #, c-format
 msgid "%d line adds whitespace errors."
 msgid_plural "%d lines add whitespace errors."
 msgstr[0] "%d ред добавя грешки в знаците за интервали."
 msgstr[1] "%d реда добавят грешки в знаците за интервали."
 
@@ -2861,17 +2892,17 @@
 
 #: builtin/bisect--helper.c:19
 msgid "update BISECT_HEAD instead of checking out the current commit"
 msgstr ""
 "обновяване на указателя „BISECT_HEAD“ вместо да се използва текущото подаване"
 
-#: builtin/blame.c:30
-msgid "git blame [<options>] [<rev-opts>] [<rev>] [--] file"
+#: builtin/blame.c:31
+msgid "git blame [<options>] [<rev-opts>] [<rev>] [--] <file>"
 msgstr "git blame [ОПЦИЯ…] [ОПЦИЯ_ЗА_ВЕРСИЯТА…] [ВЕРСИЯ] [--] ФАЙЛ"
 
-#: builtin/blame.c:35
+#: builtin/blame.c:36
 msgid "<rev-opts> are documented in git-rev-list(1)"
 msgstr "ОПЦИИте_ЗА_ВЕРСИЯТА са документирани в ръководството git-rev-list(1)"
 
 #: builtin/blame.c:2500
 msgid "Show blame entries as we find them, incrementally"
 msgstr "Извеждане на анотациите с намирането им, последователно"
@@ -3006,475 +3037,492 @@
 msgstr "git branch [ОПЦИЯ…] [-r] (-d | -D) ИМЕ_НА_КЛОН…"
 
 #: builtin/branch.c:27
 msgid "git branch [<options>] (-m | -M) [<old-branch>] <new-branch>"
 msgstr "git branch [ОПЦИЯ…] (-m | -M) [СТАР_КЛОН] НОВ_КЛОН"
 
-#: builtin/branch.c:152
+#: builtin/branch.c:150
 #, c-format
 msgid ""
 "deleting branch '%s' that has been merged to\n"
 "         '%s', but not yet merged to HEAD."
 msgstr ""
 "изтриване на клона „%s“, който е слят към „%s“,\n"
 "         но още не е слят към върха „HEAD“."
 
-#: builtin/branch.c:156
+#: builtin/branch.c:154
 #, c-format
 msgid ""
 "not deleting branch '%s' that is not yet merged to\n"
 "         '%s', even though it is merged to HEAD."
 msgstr ""
 "отказване на изтриване на клона „%s“, който не е слят към\n"
 "         „%s“, но е слят към върха „HEAD“."
 
-#: builtin/branch.c:170
+#: builtin/branch.c:168
 #, c-format
 msgid "Couldn't look up commit object for '%s'"
 msgstr "Обектът-подаване за „%s“ не може да бъде открит"
 
-#: builtin/branch.c:174
+#: builtin/branch.c:172
 #, c-format
 msgid ""
 "The branch '%s' is not fully merged.\n"
 "If you are sure you want to delete it, run 'git branch -D %s'."
 msgstr ""
 "Клонът „%s“ не е слят напълно. Ако сте сигурни, че искате\n"
 "да го изтриете, изпълнете „git branch -D %s“."
 
-#: builtin/branch.c:187
+#: builtin/branch.c:185
 msgid "Update of config-file failed"
 msgstr "Неуспешно обновяване на конфигурационния файл"
 
-#: builtin/branch.c:215
+#: builtin/branch.c:213
 msgid "cannot use -a with -d"
 msgstr "Опцията „-a“ е несъвместима с опцията „-d“"
 
-#: builtin/branch.c:221
+#: builtin/branch.c:219
 msgid "Couldn't look up commit object for HEAD"
 msgstr "Обектът-подаване, сочен от указателя „HEAD“, не може да бъде открит"
 
-#: builtin/branch.c:229
+#: builtin/branch.c:227
 #, c-format
 msgid "Cannot delete the branch '%s' which you are currently on."
 msgstr "Не можете да изтриете клона „%s“, защото в момента е текущ."
 
-#: builtin/branch.c:245
+#: builtin/branch.c:243
 #, c-format
-msgid "remote branch '%s' not found."
-msgstr "отдалеченият клон „%s“ не може да бъде открит."
+msgid "remote-tracking branch '%s' not found."
+msgstr "следящият клон „%s“ не може да бъде открит."
 
-#: builtin/branch.c:246
+#: builtin/branch.c:244
 #, c-format
 msgid "branch '%s' not found."
 msgstr "клонът „%s“ не може да бъде открит."
 
-#: builtin/branch.c:260
+#: builtin/branch.c:258
 #, c-format
-msgid "Error deleting remote branch '%s'"
-msgstr "Грешка при изтриването на отдалечения клон „%s“"
+msgid "Error deleting remote-tracking branch '%s'"
+msgstr "Грешка при изтриването на следящия клон „%s“"
 
-#: builtin/branch.c:261
+#: builtin/branch.c:259
 #, c-format
 msgid "Error deleting branch '%s'"
 msgstr "Грешка при изтриването на клона „%s“"
 
-#: builtin/branch.c:268
+#: builtin/branch.c:266
 #, c-format
-msgid "Deleted remote branch %s (was %s).\n"
-msgstr "Изтрит отдалечен клон „%s“ (той сочеше към „%s“).\n"
+msgid "Deleted remote-tracking branch %s (was %s).\n"
+msgstr "Изтрит следящ клон „%s“ (той сочеше към „%s“).\n"
 
-#: builtin/branch.c:269
+#: builtin/branch.c:267
 #, c-format
 msgid "Deleted branch %s (was %s).\n"
 msgstr "Изтрит клон „%s“ (той сочеше към „%s“).\n"
 
-#: builtin/branch.c:370
+#: builtin/branch.c:368
 #, c-format
 msgid "branch '%s' does not point at a commit"
 msgstr "клонът „%s“ не сочи към подаване"
 
-#: builtin/branch.c:459
+#: builtin/branch.c:451
 #, c-format
 msgid "[%s: gone]"
 msgstr "[%s: изтрит]"
 
-#: builtin/branch.c:464
+#: builtin/branch.c:456
 #, c-format
 msgid "[%s]"
 msgstr "[%s]"
 
-#: builtin/branch.c:469
+#: builtin/branch.c:461
 #, c-format
 msgid "[%s: behind %d]"
 msgstr "[%s: назад с %d]"
 
-#: builtin/branch.c:471
+#: builtin/branch.c:463
 #, c-format
 msgid "[behind %d]"
 msgstr "[назад с %d]"
 
-#: builtin/branch.c:475
+#: builtin/branch.c:467
 #, c-format
 msgid "[%s: ahead %d]"
 msgstr "[%s: напред с %d]"
 
-#: builtin/branch.c:477
+#: builtin/branch.c:469
 #, c-format
 msgid "[ahead %d]"
 msgstr "[напред с %d]"
 
-#: builtin/branch.c:480
+#: builtin/branch.c:472
 #, c-format
 msgid "[%s: ahead %d, behind %d]"
 msgstr "[%s: напред с %d, назад с %d]"
 
-#: builtin/branch.c:483
+#: builtin/branch.c:475
 #, c-format
 msgid "[ahead %d, behind %d]"
 msgstr "[напред с %d, назад с %d]"
 
 # FIXME ** how many??
-#: builtin/branch.c:496
+#: builtin/branch.c:488
 msgid " **** invalid ref ****"
 msgstr " ●●●● неправилен указател ●●●●"
 
-#: builtin/branch.c:587
+#: builtin/branch.c:579
 #, c-format
 msgid "(no branch, rebasing %s)"
 msgstr "(извън клон, пребазиране на „%s“)"
 
-#: builtin/branch.c:590
+#: builtin/branch.c:582
 #, c-format
 msgid "(no branch, bisect started on %s)"
 msgstr "(извън клон, двоично търсене от „%s“)"
 
-#: builtin/branch.c:596
+#: builtin/branch.c:588
 #, c-format
 msgid "(HEAD detached at %s)"
 msgstr "(Указателят „HEAD“ не е свързан и е при „%s“)"
 
-#: builtin/branch.c:599
+#: builtin/branch.c:591
 #, c-format
 msgid "(HEAD detached from %s)"
 msgstr "Указателят „HEAD“ не е свързан и е отделѐн от „%s“"
 
-#: builtin/branch.c:603
+#: builtin/branch.c:595
 msgid "(no branch)"
 msgstr "(извън клон)"
 
-#: builtin/branch.c:650
+#: builtin/branch.c:642
 #, c-format
 msgid "object '%s' does not point to a commit"
 msgstr "обектът „%s“ не сочи към подаване"
 
-#: builtin/branch.c:698
+#: builtin/branch.c:690
 msgid "some refs could not be read"
 msgstr "някои указатели не могат да бъдат прочетени"
 
-#: builtin/branch.c:711
+#: builtin/branch.c:703
 msgid "cannot rename the current branch while not on any."
 msgstr ""
 "не можете да преименувате текущия клон, защото сте извън който и да е клон"
 
-#: builtin/branch.c:721
+#: builtin/branch.c:713
 #, c-format
 msgid "Invalid branch name: '%s'"
 msgstr "Неправилно име на клон: „%s“"
 
-#: builtin/branch.c:736
+#: builtin/branch.c:728
 msgid "Branch rename failed"
 msgstr "Неуспешно преименуване на клон"
 
-#: builtin/branch.c:740
+#: builtin/branch.c:732
 #, c-format
 msgid "Renamed a misnamed branch '%s' away"
 msgstr "На клона с неправилно име „%s“ е дадено служебно име"
 
-#: builtin/branch.c:744
+#: builtin/branch.c:736
 #, c-format
 msgid "Branch renamed to %s, but HEAD is not updated!"
 msgstr "Клонът е преименуван на „%s“, но указателят „HEAD“ не е обновен"
 
-#: builtin/branch.c:751
+#: builtin/branch.c:743
 msgid "Branch is renamed, but update of config-file failed"
 msgstr "Клонът е преименуван, но конфигурационният файл не е обновен"
 
-#: builtin/branch.c:766
+#: builtin/branch.c:758
 #, c-format
 msgid "malformed object name %s"
 msgstr "неправилно име на обект „%s“"
 
-#: builtin/branch.c:790
+#: builtin/branch.c:780
 #, c-format
 msgid "could not write branch description template: %s"
 msgstr "шаблонът за описание на клон не бе записан: „%s“"
 
-#: builtin/branch.c:820
+#: builtin/branch.c:810
 msgid "Generic options"
 msgstr "Общи настройки"
 
-#: builtin/branch.c:822
+#: builtin/branch.c:812
 msgid "show hash and subject, give twice for upstream branch"
 msgstr ""
 "извеждане на хеша и темата. Повтарянето на опцията прибавя отдалечените клони"
 
-#: builtin/branch.c:823
+#: builtin/branch.c:813
 msgid "suppress informational messages"
 msgstr "без информационни съобщения"
 
-#: builtin/branch.c:824
+#: builtin/branch.c:814
 msgid "set up tracking mode (see git-pull(1))"
 msgstr "задаване на режима на следене (виж git-pull(1))"
 
-#: builtin/branch.c:826
+#: builtin/branch.c:816
 msgid "change upstream info"
 msgstr "смяна на следения клон"
 
-#: builtin/branch.c:830
+#: builtin/branch.c:820
 msgid "use colored output"
 msgstr "цветен изход"
 
-#: builtin/branch.c:831
+#: builtin/branch.c:821
 msgid "act on remote-tracking branches"
 msgstr "действие върху следящите клони"
 
-#: builtin/branch.c:834 builtin/branch.c:840 builtin/branch.c:861
-#: builtin/branch.c:867 builtin/commit.c:1582 builtin/commit.c:1583
-#: builtin/commit.c:1584 builtin/commit.c:1585 builtin/tag.c:616
+#: builtin/branch.c:824 builtin/branch.c:830 builtin/branch.c:851
+#: builtin/branch.c:857 builtin/commit.c:1581 builtin/commit.c:1582
+#: builtin/commit.c:1583 builtin/commit.c:1584 builtin/tag.c:616
 #: builtin/tag.c:622
 msgid "commit"
 msgstr "подаване"
 
-#: builtin/branch.c:835 builtin/branch.c:841
+#: builtin/branch.c:825 builtin/branch.c:831
 msgid "print only branches that contain the commit"
 msgstr "извеждане само на клоните, които съдържат това подаване"
 
-#: builtin/branch.c:847
+#: builtin/branch.c:837
 msgid "Specific git-branch actions:"
 msgstr "Специални действия на „git-branch“:"
 
-#: builtin/branch.c:848
+#: builtin/branch.c:838
 msgid "list both remote-tracking and local branches"
 msgstr "извеждане както на следящите, така и на локалните клони"
 
-#: builtin/branch.c:850
+#: builtin/branch.c:840
 msgid "delete fully merged branch"
 msgstr "изтриване на клони, които са напълно слети"
 
-#: builtin/branch.c:851
+#: builtin/branch.c:841
 msgid "delete branch (even if not merged)"
 msgstr "изтриване и на клони, които не са напълно слети"
 
-#: builtin/branch.c:852
+#: builtin/branch.c:842
 msgid "move/rename a branch and its reflog"
 msgstr ""
 "преместване/преименуване на клон и принадлежащият му журнал на указателите"
 
-#: builtin/branch.c:853
+#: builtin/branch.c:843
 msgid "move/rename a branch, even if target exists"
 msgstr "преместване/преименуване на клон, дори ако има вече клон с такова име"
 
-#: builtin/branch.c:854
+#: builtin/branch.c:844
 msgid "list branch names"
 msgstr "извеждане на имената на клоните"
 
-#: builtin/branch.c:855
+#: builtin/branch.c:845
 msgid "create the branch's reflog"
 msgstr "създаване на журнала на указателите на клона"
 
-#: builtin/branch.c:857
+#: builtin/branch.c:847
 msgid "edit the description for the branch"
 msgstr "редактиране на описанието на клона"
 
-#: builtin/branch.c:858
+#: builtin/branch.c:848
 msgid "force creation, move/rename, deletion"
 msgstr "принудително създаване, преместване, преименуване, изтриване"
 
-#: builtin/branch.c:861
+#: builtin/branch.c:851
 msgid "print only not merged branches"
 msgstr "извеждане само на неслетите клони"
 
-#: builtin/branch.c:867
+#: builtin/branch.c:857
 msgid "print only merged branches"
 msgstr "извеждане само на слетите клони"
 
-#: builtin/branch.c:871
+#: builtin/branch.c:861
 msgid "list branches in columns"
 msgstr "извеждане по колони"
 
-#: builtin/branch.c:884
+#: builtin/branch.c:874
 msgid "Failed to resolve HEAD as a valid ref."
 msgstr "Не може да се открие към какво сочи указателят „HEAD“"
 
-#: builtin/branch.c:888 builtin/clone.c:637
+#: builtin/branch.c:878 builtin/clone.c:622
 msgid "HEAD not found below refs/heads!"
 msgstr "В директорията „refs/heads“ липсва файл „HEAD“"
 
-#: builtin/branch.c:910
+#: builtin/branch.c:900
 msgid "--column and --verbose are incompatible"
 msgstr "Опциите „--column“ и „--verbose“ са несъвместими"
 
-#: builtin/branch.c:921 builtin/branch.c:960
+#: builtin/branch.c:911 builtin/branch.c:950
 msgid "branch name required"
 msgstr "Необходимо е име на клон"
 
-#: builtin/branch.c:936
+#: builtin/branch.c:926
 msgid "Cannot give description to detached HEAD"
 msgstr "Не може да зададете описание на „HEAD“ извън клон"
 
-#: builtin/branch.c:941
+#: builtin/branch.c:931
 msgid "cannot edit description of more than one branch"
 msgstr "Не може да редактирате описанието на повече от един клон едновременно"
 
-#: builtin/branch.c:948
+#: builtin/branch.c:938
 #, c-format
 msgid "No commit on branch '%s' yet."
 msgstr "В клона „%s“ все още няма подавания."
 
-#: builtin/branch.c:951
+#: builtin/branch.c:941
 #, c-format
 msgid "No branch named '%s'."
 msgstr "Липсва клон на име „%s“."
 
-#: builtin/branch.c:966
+#: builtin/branch.c:956
 msgid "too many branches for a rename operation"
 msgstr "Прекалено много клони за преименуване"
 
-#: builtin/branch.c:971
+#: builtin/branch.c:961
 msgid "too many branches to set new upstream"
 msgstr "Прекалено много клони за задаване на следене"
 
-#: builtin/branch.c:975
+#: builtin/branch.c:965
 #, c-format
 msgid ""
 "could not set upstream of HEAD to %s when it does not point to any branch."
 msgstr ""
 "Следеното от „HEAD“ не може да се зададе да е „%s“, защото то не сочи към "
 "никой клон."
 
-#: builtin/branch.c:978 builtin/branch.c:1000 builtin/branch.c:1021
+#: builtin/branch.c:968 builtin/branch.c:990 builtin/branch.c:1011
 #, c-format
 msgid "no such branch '%s'"
 msgstr "Няма клон на име „%s“."
 
-#: builtin/branch.c:982
+#: builtin/branch.c:972
 #, c-format
 msgid "branch '%s' does not exist"
 msgstr "Не съществува клон на име „%s“."
 
-#: builtin/branch.c:994
+#: builtin/branch.c:984
 msgid "too many branches to unset upstream"
 msgstr "Прекалено много клони за махане на следене"
 
-#: builtin/branch.c:998
+#: builtin/branch.c:988
 msgid "could not unset upstream of HEAD when it does not point to any branch."
 msgstr ""
 "Следеното от „HEAD“ не може да махне, защото то не сочи към никой клон."
 
-#: builtin/branch.c:1004
+#: builtin/branch.c:994
 #, c-format
 msgid "Branch '%s' has no upstream information"
 msgstr "Няма информация клонът „%s“ да следи някой друг"
 
-#: builtin/branch.c:1018
+#: builtin/branch.c:1008
 msgid "it does not make sense to create 'HEAD' manually"
 msgstr "Няма никакъв смисъл ръчно да създавате „HEAD“."
 
-#: builtin/branch.c:1024
+#: builtin/branch.c:1014
 msgid "-a and -r options to 'git branch' do not make sense with a branch name"
 msgstr "Опциите „-a“ и „-r“ на „git branch“ са несъвместими с име на клон"
 
-#: builtin/branch.c:1027
+#: builtin/branch.c:1017
 #, c-format
 msgid ""
 "The --set-upstream flag is deprecated and will be removed. Consider using --"
 "track or --set-upstream-to\n"
 msgstr ""
 "Опцията „--set-upstream“ вече е остаряла и предстои да бъде махната. "
 "Използвайте „--track“ или „--set-upstream-to“\n"
 
-#: builtin/branch.c:1044
+#: builtin/branch.c:1034
 #, c-format
 msgid ""
 "\n"
 "If you wanted to make '%s' track '%s', do this:\n"
 "\n"
 msgstr ""
 "\n"
 "За да накарате „%s“ да следи „%s“, изпълнете следната команда:\n"
 "\n"
 
-#: builtin/branch.c:1045
+#: builtin/branch.c:1035
 #, c-format
 msgid "    git branch -d %s\n"
 msgstr "    git branch -d %s\n"
 
-#: builtin/branch.c:1046
+#: builtin/branch.c:1036
 #, c-format
 msgid "    git branch --set-upstream-to %s\n"
 msgstr "    git branch --set-upstream-to %s\n"
 
-#: builtin/bundle.c:47
+#: builtin/bundle.c:51
 #, c-format
 msgid "%s is okay\n"
 msgstr "Пратката „%s“ е наред\n"
 
-#: builtin/bundle.c:56
+#: builtin/bundle.c:64
 msgid "Need a repository to create a bundle."
 msgstr "За създаването на пратка е необходимо хранилище."
 
-#: builtin/bundle.c:60
+#: builtin/bundle.c:68
 msgid "Need a repository to unbundle."
 msgstr "За приемането на пратка е необходимо хранилище."
 
-#: builtin/cat-file.c:326
-msgid "git cat-file (-t | -s | -e | -p | <type> | --textconv) <object>"
-msgstr "git cat-file (-t | -s | -e | -p | ВИД | --textconv) ОБЕКТ"
-
-#: builtin/cat-file.c:327
-msgid "git cat-file (--batch | --batch-check) < <list-of-objects>"
-msgstr "git cat-file (--batch | --batch-check) < СПИСЪК_С_ОБЕКТИ"
+#: builtin/cat-file.c:369
+msgid ""
+"git cat-file (-t [--allow-unknown-type]|-s [--allow-unknown-type]|-e|-p|"
+"<type>|--textconv) <object>"
+msgstr ""
+"git cat-file (-t [--allow-unknown-type] | -s [--allow-unknown-type] | -e | -"
+"p | ВИД | --textconv) ОБЕКТ"
 
-#: builtin/cat-file.c:364
+#: builtin/cat-file.c:370
+msgid ""
+"git cat-file (--batch | --batch-check) [--follow-symlinks] < <list-of-"
+"objects>"
+msgstr ""
+"git cat-file (--batch | --batch-check) [--follow-symlinks] < СПИСЪК_С_ОБЕКТИ"
+
+#: builtin/cat-file.c:407
 msgid "<type> can be one of: blob, tree, commit, tag"
 msgstr ""
 "ВИДът може да е: „blob“ (обект BLOB), „tree“ (дърво), „commit“ (подаване), "
 "„tag“ (етикет)"
 
-#: builtin/cat-file.c:365
+#: builtin/cat-file.c:408
 msgid "show object type"
 msgstr "извеждане на вида на обект"
 
-#: builtin/cat-file.c:366
+#: builtin/cat-file.c:409
 msgid "show object size"
 msgstr "извеждане на размера на обект"
 
-#: builtin/cat-file.c:368
+#: builtin/cat-file.c:411
 msgid "exit with zero when there's no error"
 msgstr "изход с 0, когато няма грешка"
 
-#: builtin/cat-file.c:369
+#: builtin/cat-file.c:412
 msgid "pretty-print object's content"
 msgstr "форматирано извеждане на съдържанието на обекта"
 
-#: builtin/cat-file.c:371
+#: builtin/cat-file.c:414
 msgid "for blob objects, run textconv on object's content"
 msgstr ""
 "да се стартира програмата зададена в настройката „textconv“ за преобразуване "
 "на съдържанието на обекта"
 
-#: builtin/cat-file.c:373
+#: builtin/cat-file.c:416
+msgid "allow -s and -t to work with broken/corrupt objects"
+msgstr "позволяване на опциите „-s“ и „-t“ да работят с повредени обекти"
+
+#: builtin/cat-file.c:418
 msgid "show info and content of objects fed from the standard input"
 msgstr ""
 "извеждане на информация и съдържание на обектите подадени на стандартния вход"
 
-#: builtin/cat-file.c:376
+#: builtin/cat-file.c:421
 msgid "show info about objects fed from the standard input"
 msgstr "извеждане на информация за обектите подадени на стандартния вход"
 
+#: builtin/cat-file.c:424
+msgid "follow in-tree symlinks (used with --batch or --batch-check)"
+msgstr ""
+"следване на символните връзки сочещи в дървото (ползва се с „--batch“ или „--"
+"batch-check“)"
+
 #: builtin/check-attr.c:11
 msgid "git check-attr [-a | --all | <attr>...] [--] <pathname>..."
 msgstr "git check-attr [-a | --all | АТРИБУТ…] [--] ПЪТ…"
 
 #: builtin/check-attr.c:12
 msgid "git check-attr --stdin [-z] [-a | --all | <attr>...] < <list-of-paths>"
@@ -3485,21 +3533,21 @@
 msgstr "извеждане на всички атрибути, зададени върху файл"
 
 #: builtin/check-attr.c:20
 msgid "use .gitattributes only from the index"
 msgstr "използване на файла „.gitattributes“ само от индекса"
 
-#: builtin/check-attr.c:21 builtin/check-ignore.c:22 builtin/hash-object.c:98
+#: builtin/check-attr.c:21 builtin/check-ignore.c:22 builtin/hash-object.c:96
 msgid "read file names from stdin"
 msgstr "изчитане на имената на файловете от стандартния вход"
 
 #: builtin/check-attr.c:23 builtin/check-ignore.c:24
 msgid "terminate input and output records by a NUL character"
 msgstr "разделяне на входните и изходните записи с нулевия знак „NUL“"
 
-#: builtin/check-ignore.c:18 builtin/checkout.c:1107 builtin/gc.c:274
+#: builtin/check-ignore.c:18 builtin/checkout.c:1202 builtin/gc.c:279
 msgid "suppress progress reporting"
 msgstr "без показване на напредъка"
 
 #: builtin/check-ignore.c:26
 msgid "show non-matching input paths"
 msgstr "извеждане на несъвпадащите пътища"
@@ -3593,123 +3641,122 @@
 msgstr "при създаването на нови файлове да се добавя префикса НИЗ"
 
 #: builtin/checkout-index.c:208
 msgid "copy out the files from named stage"
 msgstr "копиране на файловете от това състояние на сливане"
 
-#: builtin/checkout.c:25
+#: builtin/checkout.c:24
 msgid "git checkout [<options>] <branch>"
 msgstr "git checkout [ОПЦИЯ…] КЛОН"
 
-#: builtin/checkout.c:26
+#: builtin/checkout.c:25
 msgid "git checkout [<options>] [<branch>] -- <file>..."
 msgstr "git checkout [ОПЦИЯ…] [КЛОН] -- ФАЙЛ…"
 
-#: builtin/checkout.c:132 builtin/checkout.c:165
+#: builtin/checkout.c:134 builtin/checkout.c:167
 #, c-format
 msgid "path '%s' does not have our version"
 msgstr "вашата версия липсва в пътя „%s“"
 
-#: builtin/checkout.c:134 builtin/checkout.c:167
+#: builtin/checkout.c:136 builtin/checkout.c:169
 #, c-format
 msgid "path '%s' does not have their version"
 msgstr "чуждата версия липсва в пътя „%s“"
 
 # FIXME SAME AS [1]
-#: builtin/checkout.c:150
+#: builtin/checkout.c:152
 #, c-format
 msgid "path '%s' does not have all necessary versions"
 msgstr "някоя от необходимите версии липсва в пътя „%s“"
 
 # FIXME SAME AS [1]
-#: builtin/checkout.c:194
+#: builtin/checkout.c:196
 #, c-format
 msgid "path '%s' does not have necessary versions"
 msgstr "някоя от необходимите версии липсва в пътя „%s“"
 
-#: builtin/checkout.c:211
+#: builtin/checkout.c:213
 #, c-format
 msgid "path '%s': cannot merge"
 msgstr "пътят „%s“ не може да бъде слян"
 
-#: builtin/checkout.c:228
+#: builtin/checkout.c:230
 #, c-format
 msgid "Unable to add merge result for '%s'"
 msgstr "Резултатът за „%s“ не може да бъде слян"
 
-#: builtin/checkout.c:249 builtin/checkout.c:252 builtin/checkout.c:255
-#: builtin/checkout.c:258
+#: builtin/checkout.c:251 builtin/checkout.c:254 builtin/checkout.c:257
+#: builtin/checkout.c:260
 #, c-format
 msgid "'%s' cannot be used with updating paths"
 msgstr "Опцията „%s“ е несъвместима с обновяването на пътища"
 
-#: builtin/checkout.c:261 builtin/checkout.c:264
+#: builtin/checkout.c:263 builtin/checkout.c:266
 #, c-format
 msgid "'%s' cannot be used with %s"
 msgstr "Опцията „%s“ е несъвместима с „%s“"
 
-#: builtin/checkout.c:267
+#: builtin/checkout.c:269
 #, c-format
 msgid "Cannot update paths and switch to branch '%s' at the same time."
 msgstr ""
-"Невъзможно е едновременно да обновявате пътища и да се прехвърлите към клона "
-"„%s“."
+"Невъзможно е едновременно да обновявате пътища и да преминете към клона „%s“."
 
-#: builtin/checkout.c:278 builtin/checkout.c:467
+#: builtin/checkout.c:280 builtin/checkout.c:474
 msgid "corrupt index file"
 msgstr "повреден файл на индекса"
 
-#: builtin/checkout.c:338 builtin/checkout.c:345
+#: builtin/checkout.c:340 builtin/checkout.c:347
 #, c-format
 msgid "path '%s' is unmerged"
 msgstr "пътят „%s“ не е слят"
 
-#: builtin/checkout.c:489
+#: builtin/checkout.c:496
 msgid "you need to resolve your current index first"
 msgstr "първо трябва да коригирате индекса си"
 
-#: builtin/checkout.c:615
+#: builtin/checkout.c:627
 #, c-format
 msgid "Can not do reflog for '%s'\n"
 msgstr "Журналът на указателите за „%s“ не може да бъде създаден\n"
 
-#: builtin/checkout.c:653
+#: builtin/checkout.c:663
 msgid "HEAD is now at"
 msgstr "Указателят „HEAD“ в момента сочи към"
 
-#: builtin/checkout.c:660
+#: builtin/checkout.c:670
 #, c-format
 msgid "Reset branch '%s'\n"
 msgstr "Зануляване на клона „%s“\n"
 
-#: builtin/checkout.c:663
+#: builtin/checkout.c:673
 #, c-format
 msgid "Already on '%s'\n"
 msgstr "Вече сте на „%s“\n"
 
-#: builtin/checkout.c:667
+#: builtin/checkout.c:677
 #, c-format
 msgid "Switched to and reset branch '%s'\n"
 msgstr "Преминаване към клона „%s“ и зануляване на промените\n"
 
-#: builtin/checkout.c:669 builtin/checkout.c:1050
+#: builtin/checkout.c:679 builtin/checkout.c:1134
 #, c-format
 msgid "Switched to a new branch '%s'\n"
 msgstr "Преминахте към новия клон „%s“\n"
 
-#: builtin/checkout.c:671
+#: builtin/checkout.c:681
 #, c-format
 msgid "Switched to branch '%s'\n"
 msgstr "Преминахте към клона „%s“\n"
 
-#: builtin/checkout.c:723
+#: builtin/checkout.c:733
 #, c-format
 msgid " ... and %d more.\n"
 msgstr "… и още %d.\n"
 
-#: builtin/checkout.c:729
+#: builtin/checkout.c:739
 #, c-format
 msgid ""
 "Warning: you are leaving %d commit behind, not connected to\n"
 "any of your branches:\n"
 "\n"
 "%s\n"
@@ -3725,178 +3772,200 @@
 msgstr[1] ""
 "ПРЕДУПРЕЖДЕНИЕ: изоставяте %d подавания, които не са свързани към никой "
 "клон:\n"
 "\n"
 "%s\n"
 
-#: builtin/checkout.c:747
+#: builtin/checkout.c:758
 #, c-format
 msgid ""
+"If you want to keep it by creating a new branch, this may be a good time\n"
+"to do so with:\n"
+"\n"
+" git branch <new-branch-name> %s\n"
+"\n"
+msgid_plural ""
 "If you want to keep them by creating a new branch, this may be a good time\n"
 "to do so with:\n"
 "\n"
 " git branch <new-branch-name> %s\n"
 "\n"
-msgstr ""
+msgstr[0] ""
+"Ако все пак искате да запазите тази промяна чрез създаване на клон,\n"
+"сега е най-подходящият за това чрез командата:\n"
+"\n"
+" git branch ИМЕ_НА_НОВИЯ_КЛОН %s\n"
+"\n"
+msgstr[1] ""
 "Ако все пак искате да запазите тези промени чрез създаване на клон,\n"
 "сега е най-подходящият за това чрез командата:\n"
 "\n"
 " git branch ИМЕ_НА_НОВИЯ_КЛОН %s\n"
 "\n"
 
-#: builtin/checkout.c:777
+#: builtin/checkout.c:794
 msgid "internal error in revision walk"
 msgstr "вътрешна грешка при обхождането на версиите"
 
-#: builtin/checkout.c:781
+#: builtin/checkout.c:798
 msgid "Previous HEAD position was"
 msgstr "Преди това „HEAD“ сочеше към"
 
-#: builtin/checkout.c:808 builtin/checkout.c:1045
+#: builtin/checkout.c:825 builtin/checkout.c:1129
 msgid "You are on a branch yet to be born"
 msgstr "В момента сте на клон, който предстои да бъде създаден"
 
-#: builtin/checkout.c:952
+#: builtin/checkout.c:931
+#, c-format
+msgid "'%s' is already checked out at '%s'"
+msgstr "„%s“ вече е изтеглен в „%s“"
+
+#: builtin/checkout.c:1036
 #, c-format
 msgid "only one reference expected, %d given."
 msgstr "очакваше се един указател, а сте подали %d."
 
-#: builtin/checkout.c:991
+#: builtin/checkout.c:1075
 #, c-format
 msgid "invalid reference: %s"
 msgstr "неправилен указател: %s"
 
-#: builtin/checkout.c:1020
+#: builtin/checkout.c:1104
 #, c-format
 msgid "reference is not a tree: %s"
 msgstr "указателят не сочи към обект-дърво: %s"
 
-#: builtin/checkout.c:1059
+#: builtin/checkout.c:1143
 msgid "paths cannot be used with switching branches"
 msgstr "задаването на път е несъвместимо с преминаването от един клон към друг"
 
-#: builtin/checkout.c:1062 builtin/checkout.c:1066
+#: builtin/checkout.c:1146 builtin/checkout.c:1150
 #, c-format
 msgid "'%s' cannot be used with switching branches"
 msgstr "опцията „%s“ е несъвместима с преминаването от един клон към друг"
 
-#: builtin/checkout.c:1070 builtin/checkout.c:1073 builtin/checkout.c:1078
-#: builtin/checkout.c:1081
+#: builtin/checkout.c:1154 builtin/checkout.c:1157 builtin/checkout.c:1162
+#: builtin/checkout.c:1165
 #, c-format
 msgid "'%s' cannot be used with '%s'"
 msgstr "опцията „%s“ е несъвместима с „%s“"
 
-#: builtin/checkout.c:1086
+#: builtin/checkout.c:1170
 #, c-format
 msgid "Cannot switch branch to a non-commit '%s'"
 msgstr ""
 "За да преминете към клон, подайте указател, който сочи към подаване. „%s“ не "
 "е такъв"
 
-#: builtin/checkout.c:1108 builtin/checkout.c:1110 builtin/clone.c:90
-#: builtin/remote.c:159 builtin/remote.c:161
+#: builtin/checkout.c:1203 builtin/checkout.c:1205 builtin/clone.c:83
+#: builtin/remote.c:159 builtin/remote.c:161 builtin/worktree.c:282
+#: builtin/worktree.c:284
 msgid "branch"
 msgstr "клон"
 
-#: builtin/checkout.c:1109
+#: builtin/checkout.c:1204
 msgid "create and checkout a new branch"
 msgstr "създаване и преминаване към нов клон"
 
-#: builtin/checkout.c:1111
+#: builtin/checkout.c:1206
 msgid "create/reset and checkout a branch"
 msgstr "създаване/зануляване на клон и преминаване към него"
 
-#: builtin/checkout.c:1112
+#: builtin/checkout.c:1207
 msgid "create reflog for new branch"
 msgstr "създаване на журнал на указателите за нов клон"
 
-#: builtin/checkout.c:1113
+#: builtin/checkout.c:1208
 msgid "detach the HEAD at named commit"
 msgstr "отделяне на указателя „HEAD“ към указаното подаване"
 
-#: builtin/checkout.c:1114
+#: builtin/checkout.c:1209
 msgid "set upstream info for new branch"
 msgstr "задаване на кой клон бива следен при създаването на новия клон"
 
-#: builtin/checkout.c:1116
+#: builtin/checkout.c:1211
 msgid "new-branch"
 msgstr "НОВ_КЛОН"
 
-#: builtin/checkout.c:1116
+#: builtin/checkout.c:1211
 msgid "new unparented branch"
 msgstr "нов клон без родител"
 
-#: builtin/checkout.c:1117
+#: builtin/checkout.c:1212
 msgid "checkout our version for unmerged files"
 msgstr "изтегляне на вашата версия на неслетите файлове"
 
-#: builtin/checkout.c:1119
+#: builtin/checkout.c:1214
 msgid "checkout their version for unmerged files"
 msgstr "изтегляне на чуждата версия на неслетите файлове"
 
-#: builtin/checkout.c:1121
+#: builtin/checkout.c:1216
 msgid "force checkout (throw away local modifications)"
 msgstr "принудително изтегляне (вашите промени ще бъдат занулени)"
 
-#: builtin/checkout.c:1122
+#: builtin/checkout.c:1217
 msgid "perform a 3-way merge with the new branch"
 msgstr "извършване на тройно сливане с новия клон"
 
-#: builtin/checkout.c:1123 builtin/merge.c:227
+#: builtin/checkout.c:1218 builtin/merge.c:227
 msgid "update ignored files (default)"
 msgstr "обновяване на игнорираните файлове (стандартно)"
 
-#: builtin/checkout.c:1124 builtin/log.c:1239 parse-options.h:245
+#: builtin/checkout.c:1219 builtin/log.c:1239 parse-options.h:244
 msgid "style"
 msgstr "стил"
 
-#: builtin/checkout.c:1125
+#: builtin/checkout.c:1220
 msgid "conflict style (merge or diff3)"
 msgstr "действие при конфликт (сливане или тройна разлика)"
 
-#: builtin/checkout.c:1128
+#: builtin/checkout.c:1223
 msgid "do not limit pathspecs to sparse entries only"
 msgstr "без ограничаване на изброените пътища само до частично изтеглените"
 
-#: builtin/checkout.c:1130
+#: builtin/checkout.c:1225
 msgid "second guess 'git checkout <no-such-branch>'"
 msgstr ""
 "опит за отгатване на име на клон след неуспешен опит с „git checkout "
 "НЕСЪЩЕСТВУВАЩ_КЛОН“"
 
-#: builtin/checkout.c:1153
+#: builtin/checkout.c:1227
+msgid "do not check if another worktree is holding the given ref"
+msgstr "без проверка дали друго работно дърво държи указателя"
+
+#: builtin/checkout.c:1252
 msgid "-b, -B and --orphan are mutually exclusive"
 msgstr "Опциите „-b“, „-B“ и „--orphan“ са несъвместими една с друга"
 
-#: builtin/checkout.c:1170
+#: builtin/checkout.c:1269
 msgid "--track needs a branch name"
 msgstr "опцията „--track“ изисква име на клон"
 
-#: builtin/checkout.c:1175
+#: builtin/checkout.c:1274
 msgid "Missing branch name; try -b"
 msgstr "Липсва име на клон, използвайте опцията „-b“"
 
-#: builtin/checkout.c:1212
+#: builtin/checkout.c:1310
 msgid "invalid path specification"
 msgstr "указан е неправилен път"
 
-#: builtin/checkout.c:1219
+#: builtin/checkout.c:1317
 #, c-format
 msgid ""
 "Cannot update paths and switch to branch '%s' at the same time.\n"
 "Did you intend to checkout '%s' which can not be resolved as commit?"
 msgstr ""
 "Не можете едновременно да обновявате пътища и да преминете към клона „%s“.\n"
 "Дали не искате да изтеглите „%s“, който не сочи към подаване?"
 
-#: builtin/checkout.c:1224
+#: builtin/checkout.c:1322
 #, c-format
 msgid "git checkout: --detach does not take a path argument '%s'"
 msgstr "git checkout: опцията „--detach“ не приема аргумент-път „%s“"
 
-#: builtin/checkout.c:1228
+#: builtin/checkout.c:1326
 msgid ""
 "git checkout: --ours/--theirs, --force and --merge are incompatible when\n"
 "checking out of the index."
 msgstr ""
 "git checkout: опциите „--ours“/„--theirs“, „--force“ и „--merge“\n"
 "са несъвместими с изтегляне от индекса."
@@ -3961,44 +4030,44 @@
 "ПРЕФИКС    — избор на единствен обект по този уникален префикс\n"
 "-…         — отмяна на избора на обекти\n"
 "*          — избиране на всички обекти\n"
 "           — (празно) завършване на избирането"
 
 # FIXME WTF does this mean
-#: builtin/clean.c:517
+#: builtin/clean.c:515
 #, c-format
 msgid "Huh (%s)?"
 msgstr "Неправилен избор (%s). Изберете отново."
 
 # FIXME - should we use >> or sth else
-#: builtin/clean.c:659
+#: builtin/clean.c:657
 #, c-format
 msgid "Input ignore patterns>> "
 msgstr "Шаблони за игнорирани елементи≫ "
 
-#: builtin/clean.c:696
+#: builtin/clean.c:694
 #, c-format
 msgid "WARNING: Cannot find items matched by: %s"
 msgstr "ПРЕДУПРЕЖДЕНИЕ: Никой обект не напасва на „%s“"
 
-#: builtin/clean.c:717
+#: builtin/clean.c:715
 msgid "Select items to delete"
 msgstr "Избиране на обекти за изтриване"
 
 #. TRANSLATORS: Make sure to keep [y/N] as is
-#: builtin/clean.c:758
+#: builtin/clean.c:756
 #, c-format
 msgid "Remove %s [y/N]? "
 msgstr "Да се изтрие ли „%s“? „y“ —  да, „N“ — НЕ"
 
 # FIXME improve message
-#: builtin/clean.c:783
+#: builtin/clean.c:781
 msgid "Bye."
 msgstr "Изход."
 
-#: builtin/clean.c:791
+#: builtin/clean.c:789
 msgid ""
 "clean               - start cleaning\n"
 "filter by pattern   - exclude items from deletion\n"
 "select by numbers   - select items to be deleted by numbers\n"
 "ask each            - confirm each deletion (like \"rm -i\")\n"
 "quit                - stop cleaning\n"
@@ -4011,367 +4080,368 @@
 "ask each            — потвърждаване на всяко изтриване (подобно на „rm -i“)\n"
 "quit                — край на изчистването\n"
 "help                — този край\n"
 "?                   — подсказка за шаблоните"
 
 # FIXME how many ***
-#: builtin/clean.c:818
+#: builtin/clean.c:816
 msgid "*** Commands ***"
 msgstr "●●● Команди ●●●"
 
 # FIXME improve message
-#: builtin/clean.c:819
+#: builtin/clean.c:817
 msgid "What now"
 msgstr "Избор на следващо действие"
 
-#: builtin/clean.c:827
+#: builtin/clean.c:825
 msgid "Would remove the following item:"
 msgid_plural "Would remove the following items:"
 msgstr[0] "Следният обект ще бъде изтрит:"
 msgstr[1] "Следните обекти ще бъдат изтрити:"
 
-#: builtin/clean.c:844
+#: builtin/clean.c:842
 msgid "No more files to clean, exiting."
 msgstr "Файловете за изчистване свършиха. Изход от програмата."
 
-#: builtin/clean.c:875
+#: builtin/clean.c:873
 msgid "do not print names of files removed"
 msgstr "без извеждане на имената на файловете, които ще бъдат изтрити"
 
-#: builtin/clean.c:877
+#: builtin/clean.c:875
 msgid "force"
 msgstr "принудително изтриване"
 
-#: builtin/clean.c:878
+#: builtin/clean.c:876
 msgid "interactive cleaning"
 msgstr "интерактивно изтриване"
 
-#: builtin/clean.c:880
+#: builtin/clean.c:878
 msgid "remove whole directories"
 msgstr "изтриване на цели директории"
 
-#: builtin/clean.c:881 builtin/describe.c:407 builtin/grep.c:714
-#: builtin/ls-files.c:443 builtin/name-rev.c:311 builtin/show-ref.c:185
+#: builtin/clean.c:879 builtin/describe.c:407 builtin/grep.c:714
+#: builtin/ls-files.c:443 builtin/name-rev.c:311 builtin/show-ref.c:187
 msgid "pattern"
 msgstr "шаблон"
 
-#: builtin/clean.c:882
+#: builtin/clean.c:880
 msgid "add <pattern> to ignore rules"
 msgstr "добавяне на ШАБЛОН от файлове, които да не се трият"
 
-#: builtin/clean.c:883
+#: builtin/clean.c:881
 msgid "remove ignored files, too"
 msgstr "изтриване и на игнорираните файлове"
 
-#: builtin/clean.c:885
+#: builtin/clean.c:883
 msgid "remove only ignored files"
 msgstr "изтриване само на игнорирани файлове"
 
-#: builtin/clean.c:903
+#: builtin/clean.c:901
 msgid "-x and -X cannot be used together"
 msgstr "опциите „-x“ и „-X“ са несъвместими"
 
-#: builtin/clean.c:907
+#: builtin/clean.c:905
 msgid ""
 "clean.requireForce set to true and neither -i, -n, nor -f given; refusing to "
 "clean"
 msgstr ""
 "Настройката „clean.requireForce“ е зададена като истина, което изисква някоя "
 "от опциите „-i“, „-n“ или „-f“. Няма да се извърши изчистване"
 
-#: builtin/clean.c:910
+#: builtin/clean.c:908
 msgid ""
 "clean.requireForce defaults to true and neither -i, -n, nor -f given; "
 "refusing to clean"
 msgstr ""
 "Настройката „clean.requireForce“ не е зададена, но стандартно е истина, "
 "което изисква някоя от опциите „-i“, „-n“ или „-f“. Няма да се извърши "
 "изчистване"
 
 #: builtin/clone.c:37
 msgid "git clone [<options>] [--] <repo> [<dir>]"
 msgstr "git clone [ОПЦИЯ…] [--] ХРАНИЛИЩЕ [ДИРЕКТОРИЯ]"
 
-#: builtin/clone.c:66 builtin/fetch.c:111 builtin/merge.c:224
+#: builtin/clone.c:57 builtin/fetch.c:111 builtin/merge.c:224
 #: builtin/push.c:523
 msgid "force progress reporting"
 msgstr "извеждане на напредъка"
 
-#: builtin/clone.c:68
+#: builtin/clone.c:59
 msgid "don't create a checkout"
 msgstr "без създаване на работно дърво"
 
-#: builtin/clone.c:69 builtin/clone.c:71 builtin/init-db.c:496
+#: builtin/clone.c:60 builtin/clone.c:62 builtin/init-db.c:503
 msgid "create a bare repository"
 msgstr "създаване на голо хранилище"
 
-#: builtin/clone.c:73
+#: builtin/clone.c:64
 msgid "create a mirror repository (implies bare)"
 msgstr ""
 "създаване на хранилище-огледало (включва опцията „--bare“ за голо хранилище)"
 
-#: builtin/clone.c:75
+#: builtin/clone.c:66
 msgid "to clone from a local repository"
 msgstr "клониране от локално хранилище"
 
-#: builtin/clone.c:77
+#: builtin/clone.c:68
 msgid "don't use local hardlinks, always copy"
 msgstr "без твърди връзки, файловете винаги да се копират"
 
-#: builtin/clone.c:79
+#: builtin/clone.c:70
 msgid "setup as shared repository"
 msgstr "настройване за споделено хранилище"
 
-#: builtin/clone.c:81 builtin/clone.c:83
+#: builtin/clone.c:72 builtin/clone.c:74
 msgid "initialize submodules in the clone"
 msgstr "инициализиране на подмодулите при това клониране"
 
-#: builtin/clone.c:84 builtin/init-db.c:493
+#: builtin/clone.c:75 builtin/init-db.c:500
 msgid "template-directory"
 msgstr "директория с шаблони"
 
-#: builtin/clone.c:85 builtin/init-db.c:494
+#: builtin/clone.c:76 builtin/init-db.c:501
 msgid "directory from which templates will be used"
 msgstr "директория, която съдържа шаблоните, които да се ползват"
 
-#: builtin/clone.c:87
+#: builtin/clone.c:78
 msgid "reference repository"
 msgstr "еталонно хранилище"
 
-#: builtin/clone.c:88 builtin/column.c:26 builtin/merge-file.c:44
+#: builtin/clone.c:80
+msgid "use --reference only while cloning"
+msgstr "опцията „--reference“ може да се използва само при клониране"
+
+#: builtin/clone.c:81 builtin/column.c:26 builtin/merge-file.c:44
 msgid "name"
 msgstr "ИМЕ"
 
-#: builtin/clone.c:89
+#: builtin/clone.c:82
 msgid "use <name> instead of 'origin' to track upstream"
 msgstr "използване на това ИМЕ вместо „origin“ при проследяване на клони"
 
-#: builtin/clone.c:91
+#: builtin/clone.c:84
 msgid "checkout <branch> instead of the remote's HEAD"
 msgstr "изтегляне на този КЛОН, а не соченият от отдалечения указател „HEAD“"
 
-#: builtin/clone.c:93
+#: builtin/clone.c:86
 msgid "path to git-upload-pack on the remote"
 msgstr "път към командата „git-upload-pack“ на отдалеченото хранилище"
 
-#: builtin/clone.c:94 builtin/fetch.c:112 builtin/grep.c:659
+#: builtin/clone.c:87 builtin/fetch.c:112 builtin/grep.c:659
 msgid "depth"
 msgstr "ДЪЛБОЧИНА"
 
-#: builtin/clone.c:95
+#: builtin/clone.c:88
 msgid "create a shallow clone of that depth"
 msgstr "плитко клониране до тази ДЪЛБОЧИНА"
 
-#: builtin/clone.c:97
+#: builtin/clone.c:90
 msgid "clone only one branch, HEAD or --branch"
 msgstr ""
 "клониране само на един клон — или сочения от отдалечения „HEAD“, или изрично "
 "зададения с „--branch“"
 
-#: builtin/clone.c:99
-msgid "use --reference only while cloning"
-msgstr "опцията „--reference“ може да се използва само при клониране"
-
-#: builtin/clone.c:100 builtin/init-db.c:502
+#: builtin/clone.c:91 builtin/init-db.c:509
 msgid "gitdir"
 msgstr "СЛУЖЕБНА_ДИРЕКТОРИЯ"
 
-#: builtin/clone.c:101 builtin/init-db.c:503
+#: builtin/clone.c:92 builtin/init-db.c:510
 msgid "separate git dir from working tree"
 msgstr "отделна СЛУЖЕБНА_ДИРЕКТОРИЯ за git извън работното дърво"
 
-#: builtin/clone.c:102
+#: builtin/clone.c:93
 msgid "key=value"
 msgstr "КЛЮЧ=СТОЙНОСТ"
 
-#: builtin/clone.c:103
+#: builtin/clone.c:94
 msgid "set config inside the new repository"
 msgstr "задаване на настройките на новото хранилище"
 
-#: builtin/clone.c:256
+#: builtin/clone.c:240
 #, c-format
 msgid "reference repository '%s' is not a local repository."
 msgstr "еталонното хранилище „%s“ не е локално"
 
-#: builtin/clone.c:260
+#: builtin/clone.c:244
 #, c-format
 msgid "reference repository '%s' is shallow"
 msgstr "еталонното хранилище „%s“ е плитко"
 
-#: builtin/clone.c:263
+#: builtin/clone.c:247
 #, c-format
 msgid "reference repository '%s' is grafted"
 msgstr "еталонното хранилище „%s“ е с присаждане"
 
-#: builtin/clone.c:325
+#: builtin/clone.c:310
 #, c-format
 msgid "failed to create directory '%s'"
 msgstr "директорията „%s“ не може да бъде създадена"
 
-#: builtin/clone.c:327 builtin/diff.c:84
+#: builtin/clone.c:312 builtin/diff.c:84
 #, c-format
 msgid "failed to stat '%s'"
 msgstr "не може да бъде получена информация чрез „stat“ за „%s“"
 
-#: builtin/clone.c:329
+#: builtin/clone.c:314
 #, c-format
 msgid "%s exists and is not a directory"
 msgstr "„%s“ съществува и не е директория"
 
-#: builtin/clone.c:343
+#: builtin/clone.c:328
 #, c-format
 msgid "failed to stat %s\n"
 msgstr "не може да бъде получена информация чрез „stat“ за „%s“\n"
 
-#: builtin/clone.c:365
+#: builtin/clone.c:350
 #, c-format
 msgid "failed to create link '%s'"
 msgstr "връзката „%s“ не може да бъде създадена"
 
-#: builtin/clone.c:369
+#: builtin/clone.c:354
 #, c-format
 msgid "failed to copy file to '%s'"
 msgstr "файлът не може да бъде копиран като „%s“"
 
-#: builtin/clone.c:392 builtin/clone.c:566
+#: builtin/clone.c:377 builtin/clone.c:551
 #, c-format
 msgid "done.\n"
 msgstr "действието завърши.\n"
 
-#: builtin/clone.c:404
+#: builtin/clone.c:389
 msgid ""
 "Clone succeeded, but checkout failed.\n"
 "You can inspect what was checked out with 'git status'\n"
 "and retry the checkout with 'git checkout -f HEAD'\n"
 msgstr ""
 "Клонирането бе успешно за разлика от подготовката на работното дърво\n"
 "за определен клон. Все пак можете да проверите кои файлове и от кой\n"
 "клон в момента са изтеглени с командата „git status“. Можете да\n"
 "завършите изтеглянето на клона с командата „git checkout -f HEAD“.\n"
 
-#: builtin/clone.c:481
+#: builtin/clone.c:466
 #, c-format
 msgid "Could not find remote branch %s to clone."
 msgstr ""
 "Клонът „%s“ от отдалеченото хранилище, което клонирате,\n"
 "и който следва да бъде изтеглен, не съществува."
 
 # FIXME translator note that the space at end is necesssary
-#: builtin/clone.c:561
+#: builtin/clone.c:546
 #, c-format
 msgid "Checking connectivity... "
 msgstr "Проверка на връзката… "
 
-#: builtin/clone.c:564
+#: builtin/clone.c:549
 msgid "remote did not send all necessary objects"
 msgstr "отдалеченото хранилище не изпрати всички необходими обекти."
 
-#: builtin/clone.c:628
+#: builtin/clone.c:613
 msgid "remote HEAD refers to nonexistent ref, unable to checkout.\n"
 msgstr ""
 "указателят „HEAD“ от отдалеченото хранилище сочи към нещо,\n"
 "което не съществува. Не може да се изтегли определен клон.\n"
 
-#: builtin/clone.c:659
+#: builtin/clone.c:644
 msgid "unable to checkout working tree"
 msgstr "работното дърво не може да бъде подготвено"
 
-#: builtin/clone.c:746
+#: builtin/clone.c:731
 msgid "cannot repack to clean up"
 msgstr "не може да се извърши пакетиране за изчистване на файловете"
 
-#: builtin/clone.c:748
+#: builtin/clone.c:733
 msgid "cannot unlink temporary alternates file"
 msgstr "временният файл за алтернативни обекти не може да бъде изтрит"
 
-#: builtin/clone.c:778
+#: builtin/clone.c:763
 msgid "Too many arguments."
 msgstr "Прекалено много аргументи."
 
-#: builtin/clone.c:782
+#: builtin/clone.c:767
 msgid "You must specify a repository to clone."
 msgstr "Трябва да укажете кое хранилище искате да клонирате."
 
-#: builtin/clone.c:793
+#: builtin/clone.c:778
 #, c-format
 msgid "--bare and --origin %s options are incompatible."
 msgstr "опциите „--bare“ и „--origin %s“ са несъвместими."
 
-#: builtin/clone.c:796
+#: builtin/clone.c:781
 msgid "--bare and --separate-git-dir are incompatible."
 msgstr "опциите „--bare“ и „--separate-git-dir“ са несъвместими."
 
-#: builtin/clone.c:809
+#: builtin/clone.c:794
 #, c-format
 msgid "repository '%s' does not exist"
 msgstr "не съществува хранилище „%s“"
 
-#: builtin/clone.c:815 builtin/fetch.c:1156
+#: builtin/clone.c:800 builtin/fetch.c:1160
 #, c-format
 msgid "depth %s is not a positive number"
 msgstr "дълбочината трябва да е положително цяло число, а не „%s“"
 
-#: builtin/clone.c:825
+#: builtin/clone.c:810
 #, c-format
 msgid "destination path '%s' already exists and is not an empty directory."
 msgstr "целевият път „%s“ съществува и не е празна директория."
 
-#: builtin/clone.c:835
+#: builtin/clone.c:820
 #, c-format
 msgid "working tree '%s' already exists."
 msgstr "в „%s“ вече съществува работно дърво."
 
-#: builtin/clone.c:850 builtin/clone.c:861
+#: builtin/clone.c:835 builtin/clone.c:846 builtin/worktree.c:193
+#: builtin/worktree.c:220
 #, c-format
 msgid "could not create leading directories of '%s'"
 msgstr "родителските директории на „%s“ не могат да бъдат създадени"
 
-#: builtin/clone.c:853
+#: builtin/clone.c:838
 #, c-format
 msgid "could not create work tree dir '%s'"
 msgstr "работното дърво в „%s“ не може да бъде създадено."
 
-#: builtin/clone.c:871
+#: builtin/clone.c:856
 #, c-format
 msgid "Cloning into bare repository '%s'...\n"
 msgstr "Клониране и създаване на голо хранилище в „%s“…\n"
 
-#: builtin/clone.c:873
+#: builtin/clone.c:858
 #, c-format
 msgid "Cloning into '%s'...\n"
 msgstr "Клониране и създаване на хранилище в „%s“…\n"
 
-#: builtin/clone.c:898
+#: builtin/clone.c:883
 msgid "--dissociate given, but there is no --reference"
 msgstr "Опцията „--dissociate“ е несъвместима с „--reference“"
 
-#: builtin/clone.c:913
+#: builtin/clone.c:900
 msgid "--depth is ignored in local clones; use file:// instead."
 msgstr ""
 "При локално клониране опцията „--depth“ се игнорира. Ползвайте схемата "
 "„file://“."
 
-#: builtin/clone.c:916
+#: builtin/clone.c:903
 msgid "source repository is shallow, ignoring --local"
 msgstr "клонираното хранилище е плитко, затова опцията „--local“ се игнорира"
 
-#: builtin/clone.c:921
+#: builtin/clone.c:908
 msgid "--local is ignored"
 msgstr "опцията „--local“ се игнорира"
 
-#: builtin/clone.c:925
+#: builtin/clone.c:912
 #, c-format
 msgid "Don't know how to clone %s"
 msgstr "Не се поддържа клониране на връзки от вида „%s“ "
 
-#: builtin/clone.c:976 builtin/clone.c:984
+#: builtin/clone.c:961 builtin/clone.c:969
 #, c-format
 msgid "Remote branch %s not found in upstream %s"
 msgstr "Отдалеченият клон „%s“ липсва в клонираното хранилище „%s“"
 
-#: builtin/clone.c:987
+#: builtin/clone.c:972
 msgid "You appear to have cloned an empty repository."
 msgstr "Изглежда клонирахте празно хранилище."
 
 #: builtin/column.c:9
 msgid "git column [<options>]"
 msgstr "git column [ОПЦИЯ…]"
@@ -4607,13 +4677,13 @@
 msgstr "съобщението за сливане MERGE_MSG не може да бъде прочетено"
 
 #: builtin/commit.c:734
 msgid "could not read SQUASH_MSG"
 msgstr "съобщението за смачкване SQUASH_MSG не може да бъде прочетено"
 
-#: builtin/commit.c:738
+#: builtin/commit.c:738 builtin/merge.c:1079
 #, c-format
 msgid "could not read '%s'"
 msgstr "файлът „%s“ не може да бъде прочетен"
 
 #: builtin/commit.c:785
 msgid "could not write commit template"
@@ -4782,49 +4852,49 @@
 msgstr "Несъществуващ режим на изчистване „%s“"
 
 #: builtin/commit.c:1214
 msgid "Paths with -a does not make sense."
 msgstr "Опцията „-a“ е несъвместима със задаването на пътища."
 
-#: builtin/commit.c:1324 builtin/commit.c:1604
+#: builtin/commit.c:1324 builtin/commit.c:1603
 msgid "show status concisely"
 msgstr "кратка информация за състоянието"
 
-#: builtin/commit.c:1326 builtin/commit.c:1606
+#: builtin/commit.c:1326 builtin/commit.c:1605
 msgid "show branch information"
 msgstr "информация за клоните"
 
-#: builtin/commit.c:1328 builtin/commit.c:1608 builtin/push.c:509
+#: builtin/commit.c:1328 builtin/commit.c:1607 builtin/push.c:509
 msgid "machine-readable output"
 msgstr "формат на изхода за четене от програма"
 
-#: builtin/commit.c:1331 builtin/commit.c:1610
+#: builtin/commit.c:1331 builtin/commit.c:1609
 msgid "show status in long format (default)"
 msgstr "подробна информация за състоянието (стандартно)"
 
-#: builtin/commit.c:1334 builtin/commit.c:1613
+#: builtin/commit.c:1334 builtin/commit.c:1612
 msgid "terminate entries with NUL"
 msgstr "разделяне на елементите с нулевия знак „NUL“"
 
-#: builtin/commit.c:1336 builtin/commit.c:1616 builtin/fast-export.c:980
+#: builtin/commit.c:1336 builtin/commit.c:1615 builtin/fast-export.c:980
 #: builtin/fast-export.c:983 builtin/tag.c:603
 msgid "mode"
 msgstr "режим"
 
-#: builtin/commit.c:1337 builtin/commit.c:1616
+#: builtin/commit.c:1337 builtin/commit.c:1615
 msgid "show untracked files, optional modes: all, normal, no. (Default: all)"
 msgstr ""
 "извеждане на неследените файлове. Възможните режими са „all“ (подробна\n"
 "информация), „normal“ (кратка информация), „no“ (без неследените файлове).\n"
 "Стандартният режим е: „all“."
 
 #: builtin/commit.c:1340
 msgid "show ignored files"
 msgstr "извеждане на игнорираните файлове"
 
-#: builtin/commit.c:1341 parse-options.h:153
+#: builtin/commit.c:1341 parse-options.h:152
 msgid "when"
 msgstr "кога"
 
 #: builtin/commit.c:1342
 msgid ""
 "ignore changes to submodules, optional when: all, dirty, untracked. "
@@ -4835,215 +4905,215 @@
 "„all“ (всички), „dirty“ (тези с неподадени промени), „untracked“ (неследени)"
 
 #: builtin/commit.c:1344
 msgid "list untracked files in columns"
 msgstr "извеждане на неследените файлове в колони"
 
-#: builtin/commit.c:1431
+#: builtin/commit.c:1430
 msgid "couldn't look up newly created commit"
 msgstr "току що създаденото подаване не може да бъде открито"
 
-#: builtin/commit.c:1433
+#: builtin/commit.c:1432
 msgid "could not parse newly created commit"
 msgstr "току що създаденото подаване не може да бъде анализирано"
 
-#: builtin/commit.c:1478
+#: builtin/commit.c:1477
 msgid "detached HEAD"
 msgstr "несвързан връх „HEAD“"
 
-#: builtin/commit.c:1481
+#: builtin/commit.c:1480
 msgid " (root-commit)"
 msgstr " (начално подаване)"
 
-#: builtin/commit.c:1574
+#: builtin/commit.c:1573
 msgid "suppress summary after successful commit"
 msgstr "без информация след успешно подаване"
 
-#: builtin/commit.c:1575
+#: builtin/commit.c:1574
 msgid "show diff in commit message template"
 msgstr "добавяне на разликата към шаблона за съобщението при подаване"
 
-#: builtin/commit.c:1577
+#: builtin/commit.c:1576
 msgid "Commit message options"
 msgstr "Опции за съобщението при подаване"
 
-#: builtin/commit.c:1578 builtin/tag.c:601
+#: builtin/commit.c:1577 builtin/tag.c:601
 msgid "read message from file"
 msgstr "взимане на съобщението от файл"
 
-#: builtin/commit.c:1579
+#: builtin/commit.c:1578
 msgid "author"
 msgstr "автор"
 
-#: builtin/commit.c:1579
+#: builtin/commit.c:1578
 msgid "override author for commit"
 msgstr "задаване на автор за подаването"
 
-#: builtin/commit.c:1580 builtin/gc.c:275
+#: builtin/commit.c:1579 builtin/gc.c:280
 msgid "date"
 msgstr "дата"
 
-#: builtin/commit.c:1580
+#: builtin/commit.c:1579
 msgid "override date for commit"
 msgstr "задаване на дата за подаването"
 
-#: builtin/commit.c:1581 builtin/merge.c:218 builtin/notes.c:391
+#: builtin/commit.c:1580 builtin/merge.c:218 builtin/notes.c:391
 #: builtin/notes.c:554 builtin/tag.c:599
 msgid "message"
 msgstr "съобщение"
 
-#: builtin/commit.c:1581
+#: builtin/commit.c:1580
 msgid "commit message"
 msgstr "съобщение при подаване"
 
-#: builtin/commit.c:1582
+#: builtin/commit.c:1581
 msgid "reuse and edit message from specified commit"
 msgstr "преизползване и редактиране на съобщението от указаното подаване"
 
-#: builtin/commit.c:1583
+#: builtin/commit.c:1582
 msgid "reuse message from specified commit"
 msgstr "преизползване на съобщението от указаното подаване"
 
-#: builtin/commit.c:1584
+#: builtin/commit.c:1583
 msgid "use autosquash formatted message to fixup specified commit"
 msgstr ""
 "използване на автоматичното съобщение при смачкване за вкарване на "
 "указаното\n"
 "подаване в предното без следа"
 
-#: builtin/commit.c:1585
+#: builtin/commit.c:1584
 msgid "use autosquash formatted message to squash specified commit"
 msgstr ""
 "използване на автоматичното съобщение при смачкване за смачкване на "
 "указаното\n"
 "подаване в предното"
 
-#: builtin/commit.c:1586
+#: builtin/commit.c:1585
 msgid "the commit is authored by me now (used with -C/-c/--amend)"
 msgstr ""
 "смяна на автора да съвпада с подаващия (използва се с „-C“/„-c“/„--amend“)"
 
-#: builtin/commit.c:1587 builtin/log.c:1191 builtin/revert.c:86
+#: builtin/commit.c:1586 builtin/log.c:1191 builtin/revert.c:86
 msgid "add Signed-off-by:"
 msgstr "добавяне на поле за подпис — „Signed-off-by:“"
 
-#: builtin/commit.c:1588
+#: builtin/commit.c:1587
 msgid "use specified template file"
 msgstr "използване на указания шаблонен файл"
 
-#: builtin/commit.c:1589
+#: builtin/commit.c:1588
 msgid "force edit of commit"
 msgstr "редактиране на подаване"
 
-#: builtin/commit.c:1590
+#: builtin/commit.c:1589
 msgid "default"
 msgstr "стандартно"
 
-#: builtin/commit.c:1590 builtin/tag.c:604
+#: builtin/commit.c:1589 builtin/tag.c:604
 msgid "how to strip spaces and #comments from message"
 msgstr "кои празни знаци и #коментари да се махат от съобщенията"
 
-#: builtin/commit.c:1591
+#: builtin/commit.c:1590
 msgid "include status in commit message template"
 msgstr "вмъкване на състоянието в шаблона за съобщението при подаване"
 
-#: builtin/commit.c:1592 builtin/merge.c:225 builtin/revert.c:92
+#: builtin/commit.c:1591 builtin/merge.c:225 builtin/revert.c:92
 #: builtin/tag.c:605
 msgid "key-id"
 msgstr "ИДЕНТИФИКАТОР_НА_КЛЮЧ"
 
-#: builtin/commit.c:1593 builtin/merge.c:226 builtin/revert.c:93
+#: builtin/commit.c:1592 builtin/merge.c:226 builtin/revert.c:93
 msgid "GPG sign commit"
 msgstr "подписване на подаването с GPG"
 
-#: builtin/commit.c:1596
+#: builtin/commit.c:1595
 msgid "Commit contents options"
 msgstr "Опции за избор на файлове при подаване"
 
-#: builtin/commit.c:1597
+#: builtin/commit.c:1596
 msgid "commit all changed files"
 msgstr "подаване на всички променени файлове"
 
-#: builtin/commit.c:1598
+#: builtin/commit.c:1597
 msgid "add specified files to index for commit"
 msgstr "добавяне на указаните файлове към индекса за подаване"
 
-#: builtin/commit.c:1599
+#: builtin/commit.c:1598
 msgid "interactively add files"
 msgstr "интерактивно добавяне на файлове"
 
-#: builtin/commit.c:1600
+#: builtin/commit.c:1599
 msgid "interactively add changes"
 msgstr "интерактивно добавяне на промени"
 
-#: builtin/commit.c:1601
+#: builtin/commit.c:1600
 msgid "commit only specified files"
 msgstr "подаване само на указаните файлове"
 
-#: builtin/commit.c:1602
+#: builtin/commit.c:1601
 msgid "bypass pre-commit hook"
 msgstr "без изпълнение на куката преди подаване (pre-commit)"
 
-#: builtin/commit.c:1603
+#: builtin/commit.c:1602
 msgid "show what would be committed"
 msgstr "отпечатване на това, което би било подадено"
 
-#: builtin/commit.c:1614
+#: builtin/commit.c:1613
 msgid "amend previous commit"
 msgstr "поправяне на предишното подаване"
 
-#: builtin/commit.c:1615
+#: builtin/commit.c:1614
 msgid "bypass post-rewrite hook"
 msgstr "без изпълнение на куката след презаписване (post-rewrite)"
 
-#: builtin/commit.c:1620
+#: builtin/commit.c:1619
 msgid "ok to record an empty change"
 msgstr "позволяване на празни подавания"
 
-#: builtin/commit.c:1622
+#: builtin/commit.c:1621
 msgid "ok to record a change with an empty message"
 msgstr "позволяване на подавания с празни съобщения"
 
-#: builtin/commit.c:1651
+#: builtin/commit.c:1650
 msgid "could not parse HEAD commit"
 msgstr "върховото подаване „HEAD“ не може да бъде прочетено"
 
-#: builtin/commit.c:1690 builtin/merge.c:519
+#: builtin/commit.c:1689 builtin/merge.c:1076
 #, c-format
 msgid "could not open '%s' for reading"
 msgstr "файлът не може да бъде прочетен: „%s“"
 
-#: builtin/commit.c:1697
+#: builtin/commit.c:1696
 #, c-format
 msgid "Corrupt MERGE_HEAD file (%s)"
 msgstr "Повреден файл за върха за сливането „MERGE_HEAD“ (%s)"
 
-#: builtin/commit.c:1704
+#: builtin/commit.c:1703
 msgid "could not read MERGE_MODE"
 msgstr "режимът на сливане „MERGE_MODE“ не може да бъде прочетен"
 
-#: builtin/commit.c:1723
+#: builtin/commit.c:1722
 #, c-format
 msgid "could not read commit message: %s"
 msgstr "съобщението за подаване не може да бъде прочетено: %s"
 
-#: builtin/commit.c:1734
+#: builtin/commit.c:1733
 #, c-format
 msgid "Aborting commit; you did not edit the message.\n"
 msgstr "Неизвършване на подаване поради нередактирано съобщение.\n"
 
-#: builtin/commit.c:1739
+#: builtin/commit.c:1738
 #, c-format
 msgid "Aborting commit due to empty commit message.\n"
 msgstr "Неизвършване на подаване поради празно съобщение.\n"
 
-#: builtin/commit.c:1754 builtin/merge.c:851 builtin/merge.c:876
+#: builtin/commit.c:1753 builtin/merge.c:829 builtin/merge.c:854
 msgid "failed to write commit object"
 msgstr "обектът за подаването не може да бъде записан"
 
-#: builtin/commit.c:1787
+#: builtin/commit.c:1786
 msgid ""
 "Repository has been updated, but unable to write\n"
 "new_index file. Check that disk is not full and quota is\n"
 "not exceeded, and then \"git reset HEAD\" to recover."
 msgstr ""
 "Хранилището е обновено, но новият файл за индекс „new_index“\n"
@@ -5185,24 +5255,24 @@
 msgstr "неразпозната стойност на стандартния цвят"
 
 #: builtin/config.c:457
 #, c-format
 msgid ""
 "# This is Git's per-user configuration file.\n"
-"[core]\n"
+"[user]\n"
 "# Please adapt and uncomment the following lines:\n"
-"#\tuser = %s\n"
+"#\tname = %s\n"
 "#\temail = %s\n"
 msgstr ""
 "# Това е потребителският ви конфигурационен файл за Git.\n"
-"[core]\n"
+"[user]\n"
 "# Проверете и разкоментирайте следните два реда:\n"
-"#\tuser = %s\n"
+"#\tname = %s\n"
 "#\temail = %s\n"
 
-#: builtin/config.c:589
+#: builtin/config.c:587
 #, c-format
 msgid "cannot create configuration file %s"
 msgstr "конфигурационният файл „%s“ не може да бъде създаден"
 
 #: builtin/count-objects.c:55
 msgid "git count-objects [-v] [-H | --human-readable]"
@@ -5530,382 +5600,383 @@
 msgstr "карта с указатели"
 
 #: builtin/fetch.c:125
 msgid "specify fetch refmap"
 msgstr "указване на картата с указатели за доставяне"
 
-#: builtin/fetch.c:375
+#: builtin/fetch.c:377
 msgid "Couldn't find remote ref HEAD"
 msgstr "Указателят „HEAD“ в отдалеченото хранилище не може да бъде открит"
 
-#: builtin/fetch.c:455
+#: builtin/fetch.c:457
 #, c-format
 msgid "object %s not found"
 msgstr "обектът „%s“ липсва"
 
-#: builtin/fetch.c:460
+#: builtin/fetch.c:462
 msgid "[up to date]"
 msgstr "[актуализиран]"
 
-#: builtin/fetch.c:474
+#: builtin/fetch.c:476
 #, c-format
 msgid "! %-*s %-*s -> %s  (can't fetch in current branch)"
 msgstr "! %-*s %-*s → %s  (в текущия клон не може да се доставя)"
 
-#: builtin/fetch.c:475 builtin/fetch.c:561
+#: builtin/fetch.c:477 builtin/fetch.c:563
 msgid "[rejected]"
 msgstr "[отхвърлен]"
 
-#: builtin/fetch.c:486
+#: builtin/fetch.c:488
 msgid "[tag update]"
 msgstr "[обновяване на етикетите]"
 
-#: builtin/fetch.c:488 builtin/fetch.c:523 builtin/fetch.c:541
+#: builtin/fetch.c:490 builtin/fetch.c:525 builtin/fetch.c:543
 msgid "  (unable to update local ref)"
 msgstr "  (локалните указатели не могат да бъдат обновени)"
 
-#: builtin/fetch.c:506
+#: builtin/fetch.c:508
 msgid "[new tag]"
 msgstr "[нов етикет]"
 
-#: builtin/fetch.c:509
+#: builtin/fetch.c:511
 msgid "[new branch]"
 msgstr "[нов клон]"
 
-#: builtin/fetch.c:512
+#: builtin/fetch.c:514
 msgid "[new ref]"
 msgstr "[нов указател]"
 
-#: builtin/fetch.c:557
+#: builtin/fetch.c:559
 msgid "unable to update local ref"
 msgstr "локален указател не може да бъде обновен"
 
-#: builtin/fetch.c:557
+#: builtin/fetch.c:559
 msgid "forced update"
 msgstr "принудително обновяване"
 
-#: builtin/fetch.c:563
+#: builtin/fetch.c:565
 msgid "(non-fast-forward)"
 msgstr "(сливането не е тривиално)"
 
-#: builtin/fetch.c:596 builtin/fetch.c:829
+#: builtin/fetch.c:599 builtin/fetch.c:832
 #, c-format
 msgid "cannot open %s: %s\n"
 msgstr "файлът „%s“ не може да бъде отворен: %s\n"
 
-#: builtin/fetch.c:605
+#: builtin/fetch.c:608
 #, c-format
 msgid "%s did not send all necessary objects\n"
 msgstr "хранилището „%s“ не изпрати всички необходими обекти\n"
 
-#: builtin/fetch.c:623
+#: builtin/fetch.c:626
 #, c-format
 msgid "reject %s because shallow roots are not allowed to be updated"
 msgstr ""
 "отхвърляне на върха „%s“, защото плитките хранилища не могат да бъдат "
 "обновявани"
 
-#: builtin/fetch.c:711 builtin/fetch.c:794
+#: builtin/fetch.c:714 builtin/fetch.c:797
 #, c-format
 msgid "From %.*s\n"
 msgstr "От %.*s\n"
 
 # FIXME - is the space necessary
-#: builtin/fetch.c:722
+#: builtin/fetch.c:725
 #, c-format
 msgid ""
 "some local refs could not be updated; try running\n"
 " 'git remote prune %s' to remove any old, conflicting branches"
 msgstr ""
 "някои локални указатели не могат да бъдат обновени. Изпълнете командата\n"
 "„git remote prune %s“, за да премахнете остарелите клони, които\n"
 "предизвикват конфликта"
 
-#: builtin/fetch.c:774
+#: builtin/fetch.c:777
 #, c-format
 msgid "   (%s will become dangling)"
 msgstr "   (обектът „%s“ ще се окаже извън клон)"
 
-#: builtin/fetch.c:775
+#: builtin/fetch.c:778
 #, c-format
 msgid "   (%s has become dangling)"
 msgstr "   (обектът „%s“ вече е извън клон)"
 
-#: builtin/fetch.c:799
+#: builtin/fetch.c:802
 msgid "[deleted]"
 msgstr "[изтрит]"
 
-#: builtin/fetch.c:800 builtin/remote.c:1060
+#: builtin/fetch.c:803 builtin/remote.c:1057
 msgid "(none)"
 msgstr "(нищо)"
 
-#: builtin/fetch.c:819
+#: builtin/fetch.c:822
 #, c-format
 msgid "Refusing to fetch into current branch %s of non-bare repository"
 msgstr "Не може да изтегляте в текущия клон „%s“ на хранилище, което не е голо"
 
-#: builtin/fetch.c:838
+#: builtin/fetch.c:841
 #, c-format
 msgid "Option \"%s\" value \"%s\" is not valid for %s"
 msgstr "Стойността „%2$s“ за опцията „%1$s“ не е съвместима с „%3$s“"
 
-#: builtin/fetch.c:841
+#: builtin/fetch.c:844
 #, c-format
 msgid "Option \"%s\" is ignored for %s\n"
 msgstr "Опцията „%s“ се игнорира при „%s“\n"
 
-#: builtin/fetch.c:897
+#: builtin/fetch.c:900
 #, c-format
 msgid "Don't know how to fetch from %s"
 msgstr "Не се поддържа доставяне от „%s“"
 
-#: builtin/fetch.c:1059
+#: builtin/fetch.c:1063
 #, c-format
 msgid "Fetching %s\n"
 msgstr "Доставяне на „%s“\n"
 
-#: builtin/fetch.c:1061 builtin/remote.c:90
+#: builtin/fetch.c:1065 builtin/remote.c:90
 #, c-format
 msgid "Could not fetch %s"
 msgstr "„%s“ не може да се достави"
 
-#: builtin/fetch.c:1079
+#: builtin/fetch.c:1083
 msgid ""
 "No remote repository specified.  Please, specify either a URL or a\n"
 "remote name from which new revisions should be fetched."
 msgstr ""
 "Не сте указали отдалечено хранилище. Задайте или адрес, или име\n"
 "на отдалечено хранилище, откъдето да се доставят новите версии."
 
-#: builtin/fetch.c:1102
+#: builtin/fetch.c:1106
 msgid "You need to specify a tag name."
 msgstr "Трябва да укажете име на етикет."
 
-#: builtin/fetch.c:1144
+#: builtin/fetch.c:1148
 msgid "--depth and --unshallow cannot be used together"
 msgstr "опциите „--depth“ и „--unshallow“ са несъвместими"
 
-#: builtin/fetch.c:1146
+#: builtin/fetch.c:1150
 msgid "--unshallow on a complete repository does not make sense"
 msgstr "не можете да използвате опцията „--unshallow“ върху пълно хранилище"
 
-#: builtin/fetch.c:1169
+#: builtin/fetch.c:1173
 msgid "fetch --all does not take a repository argument"
 msgstr "към „git fetch --all“ не можете да добавите аргумент — хранилище"
 
-#: builtin/fetch.c:1171
+#: builtin/fetch.c:1175
 msgid "fetch --all does not make sense with refspecs"
 msgstr ""
 "към „git fetch --all“ не можете да добавите аргумент — указател на версия"
 
-#: builtin/fetch.c:1182
+#: builtin/fetch.c:1186
 #, c-format
 msgid "No such remote or remote group: %s"
 msgstr "Няма нито отдалечено хранилище, нито група от хранилища на име „%s“"
 
-#: builtin/fetch.c:1190
+#: builtin/fetch.c:1194
 msgid "Fetching a group and specifying refspecs does not make sense"
 msgstr "Указването на група и указването на версия са несъвместими"
 
 #: builtin/fmt-merge-msg.c:13
 msgid ""
 "git fmt-merge-msg [-m <message>] [--log[=<n>] | --no-log] [--file <file>]"
 msgstr ""
 "git fmt-merge-msg [-m СЪОБЩЕНИЕ] [--log[=БРОЙ] | --no-log] [--file ФАЙЛ]"
 
-#: builtin/fmt-merge-msg.c:662 builtin/fmt-merge-msg.c:665 builtin/grep.c:698
+#: builtin/fmt-merge-msg.c:668 builtin/fmt-merge-msg.c:671 builtin/grep.c:698
 #: builtin/merge.c:198 builtin/repack.c:178 builtin/repack.c:182
-#: builtin/show-branch.c:657 builtin/show-ref.c:178 builtin/tag.c:590
-#: parse-options.h:132 parse-options.h:239
+#: builtin/show-branch.c:664 builtin/show-ref.c:180 builtin/tag.c:590
+#: parse-options.h:131 parse-options.h:238
 msgid "n"
 msgstr "БРОЙ"
 
-#: builtin/fmt-merge-msg.c:663
+#: builtin/fmt-merge-msg.c:669
 msgid "populate log with at most <n> entries from shortlog"
 msgstr ""
 "вмъкване на журнал състоящ се от не повече от БРОЙ записа от съкратения "
 "журнал"
 
-#: builtin/fmt-merge-msg.c:666
+#: builtin/fmt-merge-msg.c:672
 msgid "alias for --log (deprecated)"
 msgstr "синоним на „--log“ (остаряло)"
 
-#: builtin/fmt-merge-msg.c:669
+#: builtin/fmt-merge-msg.c:675
 msgid "text"
 msgstr "ТЕКСТ"
 
-#: builtin/fmt-merge-msg.c:670
+#: builtin/fmt-merge-msg.c:676
 msgid "use <text> as start of message"
 msgstr "за начало на съобщението да се ползва ТЕКСТ"
 
-#: builtin/fmt-merge-msg.c:671
+#: builtin/fmt-merge-msg.c:677
 msgid "file to read from"
 msgstr "файл, от който да се чете"
 
-#: builtin/for-each-ref.c:675
+#: builtin/for-each-ref.c:687
 msgid "unable to parse format"
 msgstr "форматът не може да бъде анализиран"
 
-#: builtin/for-each-ref.c:1063
+#: builtin/for-each-ref.c:1083
 msgid "git for-each-ref [<options>] [<pattern>]"
 msgstr "git for-each-ref [ОПЦИЯ…] [ШАБЛОН]"
 
-#: builtin/for-each-ref.c:1078
+#: builtin/for-each-ref.c:1098
 msgid "quote placeholders suitably for shells"
 msgstr "цитиране подходящо за командни интерпретатори на обвивката"
 
-#: builtin/for-each-ref.c:1080
+#: builtin/for-each-ref.c:1100
 msgid "quote placeholders suitably for perl"
 msgstr "цитиране подходящо за perl"
 
-#: builtin/for-each-ref.c:1082
+#: builtin/for-each-ref.c:1102
 msgid "quote placeholders suitably for python"
 msgstr "цитиране подходящо за python"
 
-#: builtin/for-each-ref.c:1084
+#: builtin/for-each-ref.c:1104
 msgid "quote placeholders suitably for Tcl"
 msgstr "цитиране подходящо за tcl"
 
-#: builtin/for-each-ref.c:1087
+#: builtin/for-each-ref.c:1107
 msgid "show only <n> matched refs"
 msgstr "извеждане само на този БРОЙ напаснати указатели"
 
-#: builtin/for-each-ref.c:1088 builtin/replace.c:438
+#: builtin/for-each-ref.c:1108 builtin/replace.c:438
 msgid "format"
 msgstr "ФОРМАТ"
 
-#: builtin/for-each-ref.c:1088
+#: builtin/for-each-ref.c:1108
 msgid "format to use for the output"
 msgstr "ФОРМАТ за изхода"
 
-#: builtin/for-each-ref.c:1089
+#: builtin/for-each-ref.c:1109
 msgid "key"
 msgstr "ключ"
 
-#: builtin/for-each-ref.c:1090
+#: builtin/for-each-ref.c:1110
 msgid "field name to sort on"
 msgstr "име на полето, по което да е подредбата"
 
 #: builtin/fsck.c:147 builtin/prune.c:137
 msgid "Checking connectivity"
 msgstr "Проверка на връзката"
 
-#: builtin/fsck.c:540
+#: builtin/fsck.c:548
 msgid "Checking object directories"
 msgstr "Проверка на директориите с обекти"
 
-#: builtin/fsck.c:603
+#: builtin/fsck.c:611
 msgid "git fsck [<options>] [<object>...]"
 msgstr "git fsck [ОПЦИЯ…] [ОБЕКТ…]"
 
-#: builtin/fsck.c:609
+#: builtin/fsck.c:617
 msgid "show unreachable objects"
 msgstr "показване на недостижимите обекти"
 
-#: builtin/fsck.c:610
+#: builtin/fsck.c:618
 msgid "show dangling objects"
 msgstr "показване на обектите извън клоните"
 
-#: builtin/fsck.c:611
+#: builtin/fsck.c:619
 msgid "report tags"
 msgstr "показване на етикетите"
 
-#: builtin/fsck.c:612
+#: builtin/fsck.c:620
 msgid "report root nodes"
 msgstr "показване на кореновите възли"
 
-#: builtin/fsck.c:613
+#: builtin/fsck.c:621
 msgid "make index objects head nodes"
 msgstr "задаване на обекти от индекса да са коренови"
 
 # FIXME bad message
-#: builtin/fsck.c:614
+#: builtin/fsck.c:622
 msgid "make reflogs head nodes (default)"
 msgstr "проследяване на указателите от журнала като глави (стандартно)"
 
-#: builtin/fsck.c:615
+#: builtin/fsck.c:623
 msgid "also consider packs and alternate objects"
 msgstr "допълнително да се проверяват пакетите и алтернативните обекти"
 
-#: builtin/fsck.c:616
+#: builtin/fsck.c:624
 msgid "enable more strict checking"
 msgstr "по-строги проверки"
 
-#: builtin/fsck.c:618
+#: builtin/fsck.c:626
 msgid "write dangling objects in .git/lost-found"
 msgstr "запазване на обектите извън клоните в директорията „.git/lost-found“"
 
-#: builtin/fsck.c:619 builtin/prune.c:108
+#: builtin/fsck.c:627 builtin/prune.c:107
 msgid "show progress"
 msgstr "показване на напредъка"
 
-#: builtin/fsck.c:669
+#: builtin/fsck.c:677
 msgid "Checking objects"
 msgstr "Проверка на обектите"
 
 # FIXME plural with ...
 #: builtin/gc.c:24
 msgid "git gc [<options>]"
 msgstr "git gc [ОПЦИЯ…]"
 
-#: builtin/gc.c:79
+#: builtin/gc.c:67
 #, c-format
-msgid "Invalid gc.pruneexpire: '%s'"
-msgstr "Неправилна стойност за настройката „gc.pruneexpire“: %s"
+msgid "Invalid %s: '%s'"
+msgstr "Неправилен %s: „%s“"
 
-#: builtin/gc.c:107
+#: builtin/gc.c:112
 #, c-format
 msgid "insanely long object directory %.*s"
 msgstr "прекалено дълга директория с обекти „%.*s“"
 
-#: builtin/gc.c:276
+#: builtin/gc.c:281
 msgid "prune unreferenced objects"
 msgstr "окастряне на обектите, към които нищо не сочи"
 
-#: builtin/gc.c:278
+#: builtin/gc.c:283
 msgid "be more thorough (increased runtime)"
 msgstr "изчерпателно търсене на боклука (за сметка на повече време работа)"
 
-#: builtin/gc.c:279
+#: builtin/gc.c:284
 msgid "enable auto-gc mode"
 msgstr "включване на автоматичното събиране на боклука (auto-gc)"
 
-#: builtin/gc.c:280
+#: builtin/gc.c:285
 msgid "force running gc even if there may be another gc running"
 msgstr ""
 "изрично стартиране на събирането на боклука, дори и ако вече работи друго "
 "събиране"
 
-#: builtin/gc.c:321
+#: builtin/gc.c:327
 #, c-format
 msgid "Auto packing the repository in background for optimum performance.\n"
 msgstr ""
 "Автоматично пакетиране на заден фон на хранилището за по-добра "
 "производителност.\n"
 
-#: builtin/gc.c:323
+#: builtin/gc.c:329
 #, c-format
 msgid "Auto packing the repository for optimum performance.\n"
 msgstr "Автоматично пакетиране на хранилището за по-добра производителност.\n"
 
-#: builtin/gc.c:324
+#: builtin/gc.c:330
 #, c-format
 msgid "See \"git help gc\" for manual housekeeping.\n"
 msgstr ""
-"Вижте ръководството за повече информация как да изпълните „git help gc“.\n"
+"Погледнете ръководството за повече информация как да изпълните „git help "
+"gc“.\n"
 
-#: builtin/gc.c:342
+#: builtin/gc.c:348
 #, c-format
 msgid ""
 "gc is already running on machine '%s' pid %<PRIuMAX> (use --force if not)"
 msgstr ""
 "събирането на боклука вече е стартирано на машината „%s“ с идентификатор на\n"
 "процеса: %<PRIuMAX> (ако сте сигурни, че това не е вярно, това използвайте\n"
 "опцията „--force“)"
 
-#: builtin/gc.c:364
+#: builtin/gc.c:376
 msgid ""
 "There are too many unreachable loose objects; run 'git prune' to remove them."
 msgstr ""
 "Има прекалено много недостижими, непакетирани обекти.\n"
 "Използвайте „git prune“, за да ги окастрите."
 
@@ -6115,13 +6186,13 @@
 #: builtin/grep.c:740
 msgid "allow calling of grep(1) (ignored by this build)"
 msgstr ""
 "позволяване на стартирането на grep(1) (текущият компилат пренебрегва тази "
 "опция)"
 
-#: builtin/grep.c:741 builtin/show-ref.c:187
+#: builtin/grep.c:741 builtin/show-ref.c:189
 msgid "show usage"
 msgstr "извеждане на начина на употреба на командата"
 
 #: builtin/grep.c:808
 msgid "no pattern given."
 msgstr "липсва шаблон."
@@ -6147,53 +6218,53 @@
 "файлове."
 
 #: builtin/grep.c:908
 msgid "both --cached and trees are given."
 msgstr "опцията „--cached“ е несъвместима със задаване на дърво."
 
-#: builtin/hash-object.c:82
+#: builtin/hash-object.c:80
 msgid ""
 "git hash-object [-t <type>] [-w] [--path=<file> | --no-filters] [--stdin] "
 "[--] <file>..."
 msgstr ""
 "git hash-object [-t ВИД] [-w] [--path=ФАЙЛ | --no-filters] [--stdin] [--] "
 "ФАЙЛ…"
 
 # FIXME - list of paths or path...
-#: builtin/hash-object.c:83
+#: builtin/hash-object.c:81
 msgid "git hash-object  --stdin-paths < <list-of-paths>"
 msgstr "git hash-object  --stdin-paths < ПЪТ…"
 
-#: builtin/hash-object.c:94 builtin/tag.c:612
+#: builtin/hash-object.c:92 builtin/tag.c:612
 msgid "type"
 msgstr "ВИД"
 
-#: builtin/hash-object.c:94
+#: builtin/hash-object.c:92
 msgid "object type"
 msgstr "вид на обекта"
 
-#: builtin/hash-object.c:95
+#: builtin/hash-object.c:93
 msgid "write the object into the object database"
 msgstr "записване на обекта в базата от данни за обектите"
 
-#: builtin/hash-object.c:97
+#: builtin/hash-object.c:95
 msgid "read the object from stdin"
 msgstr "изчитане на обекта от стандартния вход"
 
-#: builtin/hash-object.c:99
+#: builtin/hash-object.c:97
 msgid "store file as is without filters"
 msgstr "запазване на файла както е — без филтри"
 
-#: builtin/hash-object.c:100
+#: builtin/hash-object.c:98
 msgid ""
 "just hash any random garbage to create corrupt objects for debugging Git"
 msgstr ""
 "създаване и хеширане на произволни данни за повредени обекти за трасиране на "
 "Git"
 
-#: builtin/hash-object.c:101
+#: builtin/hash-object.c:99
 msgid "process file as it were from this path"
 msgstr "обработване на файла все едно е с този път"
 
 #: builtin/help.c:41
 msgid "print all available commands"
 msgstr "показване на всички налични команди"
@@ -6318,314 +6389,314 @@
 #: builtin/help.c:501
 #, c-format
 msgid "`git %s' is aliased to `%s'"
 msgstr "„git %s“ е синоним на „%s“"
 
 # FIXME merge with next?
-#: builtin/index-pack.c:150
+#: builtin/index-pack.c:151
 #, c-format
 msgid "unable to open %s"
 msgstr "обектът „%s“ не може да бъде отворен"
 
-#: builtin/index-pack.c:200
+#: builtin/index-pack.c:201
 #, c-format
 msgid "object type mismatch at %s"
 msgstr "неправилен вид на обекта „%s“"
 
-#: builtin/index-pack.c:220
+#: builtin/index-pack.c:221
 #, c-format
 msgid "did not receive expected object %s"
 msgstr "очакваният обект „%s“ не бе получен"
 
-#: builtin/index-pack.c:223
+#: builtin/index-pack.c:224
 #, c-format
 msgid "object %s: expected type %s, found %s"
 msgstr "неправилен вид на обекта „%s“: очакваше се „%s“, а бе получен „%s“"
 
-#: builtin/index-pack.c:265
+#: builtin/index-pack.c:266
 #, c-format
 msgid "cannot fill %d byte"
 msgid_plural "cannot fill %d bytes"
 msgstr[0] "не може да се запълни %d байт"
 msgstr[1] "не може да се запълнят %d байта"
 
-#: builtin/index-pack.c:275
+#: builtin/index-pack.c:276
 msgid "early EOF"
 msgstr "неочакван край на файл"
 
-#: builtin/index-pack.c:276
+#: builtin/index-pack.c:277
 msgid "read error on input"
 msgstr "грешка при четене на входните данни"
 
-#: builtin/index-pack.c:288
+#: builtin/index-pack.c:289
 msgid "used more bytes than were available"
 msgstr "използвани са повече от наличните байтове"
 
-#: builtin/index-pack.c:295
+#: builtin/index-pack.c:296
 msgid "pack too large for current definition of off_t"
 msgstr "пакетният файл е прекалено голям за текущата стойност на типа „off_t“"
 
-#: builtin/index-pack.c:311
+#: builtin/index-pack.c:312
 #, c-format
 msgid "unable to create '%s'"
 msgstr "пакетният файл „%s“ не може да бъде създаден"
 
-#: builtin/index-pack.c:316
+#: builtin/index-pack.c:317
 #, c-format
 msgid "cannot open packfile '%s'"
 msgstr "пакетният файл „%s“ не може да бъде отворен"
 
-#: builtin/index-pack.c:330
+#: builtin/index-pack.c:331
 msgid "pack signature mismatch"
 msgstr "несъответствие в подписа към пакетния файл"
 
-#: builtin/index-pack.c:332
+#: builtin/index-pack.c:333
 #, c-format
 msgid "pack version %<PRIu32> unsupported"
 msgstr "не се поддържа пакетиране вeрсия „%<PRIu32>“"
 
-#: builtin/index-pack.c:350
+#: builtin/index-pack.c:351
 #, c-format
 msgid "pack has bad object at offset %lu: %s"
 msgstr "повреден обект в пакетния файл при отместване %lu: %s"
 
-#: builtin/index-pack.c:471
+#: builtin/index-pack.c:472
 #, c-format
 msgid "inflate returned %d"
 msgstr "декомпресирането с „inflate“ върна %d"
 
-#: builtin/index-pack.c:520
+#: builtin/index-pack.c:521
 msgid "offset value overflow for delta base object"
 msgstr "стойността на отместването за обекта-разлика води до препълване"
 
-#: builtin/index-pack.c:528
+#: builtin/index-pack.c:529
 msgid "delta base offset is out of bound"
 msgstr "стойността на отместването за обекта-разлика е извън диапазона"
 
-#: builtin/index-pack.c:536
+#: builtin/index-pack.c:537
 #, c-format
 msgid "unknown object type %d"
 msgstr "непознат вид обект %d"
 
-#: builtin/index-pack.c:567
+#: builtin/index-pack.c:568
 msgid "cannot pread pack file"
 msgstr "пакетният файл не може да бъде прочетен"
 
-#: builtin/index-pack.c:569
+#: builtin/index-pack.c:570
 #, c-format
 msgid "premature end of pack file, %lu byte missing"
 msgid_plural "premature end of pack file, %lu bytes missing"
 msgstr[0] "неочакван край на файл, липсва %lu байт"
 msgstr[1] "неочакван край на файл, липсват %lu байта"
 
-#: builtin/index-pack.c:595
+#: builtin/index-pack.c:596
 msgid "serious inflate inconsistency"
 msgstr "сериозна грешка при декомпресиране с „inflate“"
 
-#: builtin/index-pack.c:686 builtin/index-pack.c:692 builtin/index-pack.c:715
-#: builtin/index-pack.c:749 builtin/index-pack.c:758
+#: builtin/index-pack.c:742 builtin/index-pack.c:748 builtin/index-pack.c:771
+#: builtin/index-pack.c:805 builtin/index-pack.c:814
 #, c-format
 msgid "SHA1 COLLISION FOUND WITH %s !"
 msgstr ""
 "СЪВПАДЕНИЕ НА СТОЙНОСТИТЕ ЗА СУМИТЕ ЗА SHA1: „%s“ НА ДВА РАЗЛИЧНИ ОБЕКТА!"
 
 # FIXME merge with next?
-#: builtin/index-pack.c:689 builtin/pack-objects.c:162
+#: builtin/index-pack.c:745 builtin/pack-objects.c:162
 #: builtin/pack-objects.c:254
 #, c-format
 msgid "unable to read %s"
 msgstr "обектът „%s“ не може да бъде прочетен"
 
-#: builtin/index-pack.c:755
+#: builtin/index-pack.c:811
 #, c-format
 msgid "cannot read existing object %s"
 msgstr "съществуващият обект „%s“ не може да бъде прочетен"
 
-#: builtin/index-pack.c:769
+#: builtin/index-pack.c:825
 #, c-format
 msgid "invalid blob object %s"
 msgstr "неправилен обект BLOB „%s“"
 
 # FIXME perhaps invalid object
-#: builtin/index-pack.c:783
+#: builtin/index-pack.c:839
 #, c-format
 msgid "invalid %s"
 msgstr "неправилен обект „%s“"
 
-#: builtin/index-pack.c:787
+#: builtin/index-pack.c:843
 msgid "Error in object"
 msgstr "Грешка в обекта"
 
-#: builtin/index-pack.c:789
+#: builtin/index-pack.c:845
 #, c-format
 msgid "Not all child objects of %s are reachable"
 msgstr "Някои обекти, наследници на „%s“, не могат да бъдат достигнати"
 
-#: builtin/index-pack.c:861 builtin/index-pack.c:890
+#: builtin/index-pack.c:917 builtin/index-pack.c:948
 msgid "failed to apply delta"
 msgstr "разликата не може да бъде приложена"
 
-#: builtin/index-pack.c:1055
+#: builtin/index-pack.c:1118
 msgid "Receiving objects"
 msgstr "Получаване на обекти"
 
-#: builtin/index-pack.c:1055
+#: builtin/index-pack.c:1118
 msgid "Indexing objects"
 msgstr "Индексиране на обекти"
 
-#: builtin/index-pack.c:1081
+#: builtin/index-pack.c:1150
 msgid "pack is corrupted (SHA1 mismatch)"
 msgstr "пакетният файл е повреден (нееднакви суми по SHA1)"
 
-#: builtin/index-pack.c:1086
+#: builtin/index-pack.c:1155
 msgid "cannot fstat packfile"
 msgstr "не може да се получи информация за пакетния файл с „fstat“"
 
-#: builtin/index-pack.c:1089
+#: builtin/index-pack.c:1158
 msgid "pack has junk at the end"
 msgstr "в края на пакетния файл има повредени данни"
 
 # FIXME WTF message
-#: builtin/index-pack.c:1100
+#: builtin/index-pack.c:1169
 msgid "confusion beyond insanity in parse_pack_objects()"
 msgstr ""
 "фатална грешка във функцията „parse_pack_objects“. Това е грешка в Git, "
 "докладвайте я на разработчиците, като пратите е-писмо на адрес: „git@vger."
 "kernel.org“."
 
-#: builtin/index-pack.c:1123
+#: builtin/index-pack.c:1194
 msgid "Resolving deltas"
 msgstr "Откриване на съответните разлики"
 
-#: builtin/index-pack.c:1133
+#: builtin/index-pack.c:1205
 #, c-format
 msgid "unable to create thread: %s"
 msgstr "не може да се създаде нишка: %s"
 
 # FIXME WTF message
-#: builtin/index-pack.c:1175
+#: builtin/index-pack.c:1247
 msgid "confusion beyond insanity"
 msgstr ""
 "фатална грешка във функцията „conclude_pack“. Това е грешка в Git, "
 "докладвайте я на разработчиците, като пратите е-писмо на адрес: „git@vger."
 "kernel.org“."
 
-#: builtin/index-pack.c:1181
+#: builtin/index-pack.c:1253
 #, c-format
 msgid "completed with %d local objects"
 msgstr "действието завърши с %d локални обекта"
 
-#: builtin/index-pack.c:1191
+#: builtin/index-pack.c:1263
 #, c-format
 msgid "Unexpected tail checksum for %s (disk corruption?)"
 msgstr ""
 "Неочаквана последваща сума за грешки за „%s“ (причината може да е грешка в "
 "диска)"
 
-#: builtin/index-pack.c:1195
+#: builtin/index-pack.c:1267
 #, c-format
 msgid "pack has %d unresolved delta"
 msgid_plural "pack has %d unresolved deltas"
 msgstr[0] "в пакета има %d ненапасваща разлика"
 msgstr[1] "в пакета има %d ненапасващи разлики"
 
-#: builtin/index-pack.c:1219
+#: builtin/index-pack.c:1291
 #, c-format
 msgid "unable to deflate appended object (%d)"
 msgstr "добавеният обект не може да се компресира с „deflate“: %d"
 
-#: builtin/index-pack.c:1298
+#: builtin/index-pack.c:1367
 #, c-format
 msgid "local object %s is corrupt"
 msgstr "локалният обект „%s“ е повреден"
 
-#: builtin/index-pack.c:1322
+#: builtin/index-pack.c:1391
 msgid "error while closing pack file"
 msgstr "грешка при затварянето на пакетния файл"
 
-#: builtin/index-pack.c:1335
+#: builtin/index-pack.c:1404
 #, c-format
 msgid "cannot write keep file '%s'"
 msgstr ""
 "грешка при записването на файла „%s“, осигуряващ запазване на директория"
 
-#: builtin/index-pack.c:1343
+#: builtin/index-pack.c:1412
 #, c-format
 msgid "cannot close written keep file '%s'"
 msgstr ""
 "грешка при затварянето на записания файл „%s“, осигуряващ запазване на "
 "директория"
 
-#: builtin/index-pack.c:1356
+#: builtin/index-pack.c:1425
 msgid "cannot store pack file"
 msgstr "пакетният файл не може да бъде запазен"
 
-#: builtin/index-pack.c:1367
+#: builtin/index-pack.c:1436
 msgid "cannot store index file"
 msgstr "файлът за индекса не може да бъде съхранен"
 
-#: builtin/index-pack.c:1400
+#: builtin/index-pack.c:1469
 #, c-format
 msgid "bad pack.indexversion=%<PRIu32>"
 msgstr "зададена е неправилна версия пакетиране: „pack.indexversion=%<PRIu32>“"
 
-#: builtin/index-pack.c:1406
+#: builtin/index-pack.c:1475
 #, c-format
 msgid "invalid number of threads specified (%d)"
 msgstr "зададен е неправилен брой нишки: %d"
 
-#: builtin/index-pack.c:1410 builtin/index-pack.c:1589
+#: builtin/index-pack.c:1479 builtin/index-pack.c:1658
 #, c-format
 msgid "no threads support, ignoring %s"
 msgstr "липсва поддръжка за нишки. „%s“ ще се пренебрегне"
 
-#: builtin/index-pack.c:1468
+#: builtin/index-pack.c:1537
 #, c-format
 msgid "Cannot open existing pack file '%s'"
 msgstr "Съществуващият пакетен файл „%s“ не може да бъде отворен"
 
-#: builtin/index-pack.c:1470
+#: builtin/index-pack.c:1539
 #, c-format
 msgid "Cannot open existing pack idx file for '%s'"
 msgstr "Съществуващият индекс за пакетния файл „%s“ не може да бъде отворен"
 
-#: builtin/index-pack.c:1517
+#: builtin/index-pack.c:1586
 #, c-format
 msgid "non delta: %d object"
 msgid_plural "non delta: %d objects"
 msgstr[0] "%d обект не е разлика"
 msgstr[1] "%d обекта не са разлика"
 
-#: builtin/index-pack.c:1524
+#: builtin/index-pack.c:1593
 #, c-format
 msgid "chain length = %d: %lu object"
 msgid_plural "chain length = %d: %lu objects"
 msgstr[0] "дължината на веригата е %d: %lu обект"
 msgstr[1] "дължината на веригата е %d: %lu обекта"
 
 # FIXME it is not the cwd it is the previous cwd
-#: builtin/index-pack.c:1553
+#: builtin/index-pack.c:1622
 msgid "Cannot come back to cwd"
 msgstr "Процесът не може да се върне към предишната работна директория"
 
-#: builtin/index-pack.c:1601 builtin/index-pack.c:1604
-#: builtin/index-pack.c:1616 builtin/index-pack.c:1620
+#: builtin/index-pack.c:1670 builtin/index-pack.c:1673
+#: builtin/index-pack.c:1685 builtin/index-pack.c:1689
 #, c-format
 msgid "bad %s"
 msgstr "неправилна стойност „%s“"
 
-#: builtin/index-pack.c:1634
+#: builtin/index-pack.c:1703
 msgid "--fix-thin cannot be used without --stdin"
 msgstr "опцията „--fix-thin“ изисква „--stdin“"
 
-#: builtin/index-pack.c:1638 builtin/index-pack.c:1647
+#: builtin/index-pack.c:1707 builtin/index-pack.c:1716
 #, c-format
 msgid "packfile name '%s' does not end with '.pack'"
 msgstr "името на пакетния файл „%s“ не завършва на „.pack“"
 
-#: builtin/index-pack.c:1655
+#: builtin/index-pack.c:1724
 msgid "--verify with no packfile name given"
 msgstr "опцията „--verify“ изисква име на пакетен файл"
 
 #: builtin/init-db.c:35
 #, c-format
 msgid "Could not make %s writable by group"
@@ -6692,94 +6763,94 @@
 #: builtin/init-db.c:157
 #, c-format
 msgid "not copying templates of a wrong format version %d from '%s'"
 msgstr ""
 "шаблоните с неправилен номер на формата %d няма да бъдат копирани от „%s“"
 
-#: builtin/init-db.c:197
+#: builtin/init-db.c:211
 #, c-format
 msgid "insane git directory %s"
 msgstr "твърде дълго име на директория на Git: „%s“"
 
-#: builtin/init-db.c:331 builtin/init-db.c:334
+#: builtin/init-db.c:343 builtin/init-db.c:346
 #, c-format
 msgid "%s already exists"
 msgstr "Директорията „%s“ вече съществува"
 
-#: builtin/init-db.c:363
+#: builtin/init-db.c:374
 #, c-format
 msgid "unable to handle file type %d"
 msgstr "файлове от вид %d не се поддържат"
 
-#: builtin/init-db.c:366
+#: builtin/init-db.c:377
 #, c-format
 msgid "unable to move %s to %s"
 msgstr "„%s“ не може да се премести в „%s“"
 
 #. TRANSLATORS: The first '%s' is either "Reinitialized
 #. existing" or "Initialized empty", the second " shared" or
 #. "", and the last '%s%s' is the verbatim directory name.
-#: builtin/init-db.c:426
+#: builtin/init-db.c:433
 #, c-format
 msgid "%s%s Git repository in %s%s\n"
 msgstr "%s%s хранилище на Git в „%s%s“\n"
 
-#: builtin/init-db.c:427
+#: builtin/init-db.c:434
 msgid "Reinitialized existing"
 msgstr "Наново инициализирано, съществуващо"
 
-#: builtin/init-db.c:427
+#: builtin/init-db.c:434
 msgid "Initialized empty"
 msgstr "Инициализирано празно"
 
-#: builtin/init-db.c:428
+#: builtin/init-db.c:435
 msgid " shared"
 msgstr ", споделено"
 
-#: builtin/init-db.c:475
+#: builtin/init-db.c:482
 msgid ""
 "git init [-q | --quiet] [--bare] [--template=<template-directory>] [--"
 "shared[=<permissions>]] [<directory>]"
 msgstr ""
 "git init [-q | --quiet] [--bare] [--template=ДИРЕКТОРИЯ_С_ШАБЛОНИ] [--"
 "shared[=ПРАВА]] [ДИРЕКТОРИЯ]"
 
-#: builtin/init-db.c:498
+#: builtin/init-db.c:505
 msgid "permissions"
 msgstr "права"
 
-#: builtin/init-db.c:499
+#: builtin/init-db.c:506
 msgid "specify that the git repository is to be shared amongst several users"
 msgstr ""
 "указване, че хранилището на Git ще бъде споделено от повече от един "
 "потребител"
 
-#: builtin/init-db.c:501 builtin/prune-packed.c:57 builtin/repack.c:171
+#: builtin/init-db.c:508 builtin/prune-packed.c:57 builtin/repack.c:171
 msgid "be quiet"
 msgstr "без извеждане на информация"
 
-#: builtin/init-db.c:533 builtin/init-db.c:538
+#: builtin/init-db.c:540 builtin/init-db.c:545
 #, c-format
 msgid "cannot mkdir %s"
 msgstr "директорията „%s“ не може да бъде създадена"
 
-#: builtin/init-db.c:542
+#: builtin/init-db.c:549
 #, c-format
 msgid "cannot chdir to %s"
 msgstr "не може да се влезе в директорията „%s“"
 
-#: builtin/init-db.c:563
+#: builtin/init-db.c:570
 #, c-format
 msgid ""
 "%s (or --work-tree=<directory>) not allowed without specifying %s (or --git-"
 "dir=<directory>)"
 msgstr ""
 "%s (или --work-tree=ДИРЕКТОРИЯ) изисква указването на %s (или --git-"
 "dir=ДИРЕКТОРИЯ)"
 
-#: builtin/init-db.c:591
+#: builtin/init-db.c:598
 #, c-format
 msgid "Cannot access work tree '%s'"
 msgstr "Работното дърво в „%s“ е недостъпно"
 
 #: builtin/interpret-trailers.c:15
 msgid ""
@@ -6799,13 +6870,13 @@
 
 #: builtin/interpret-trailers.c:27
 msgid "trailer(s) to add"
 msgstr "епилог(зи) за добавяне"
 
 #: builtin/log.c:41
-msgid "git log [<options>] [<revision range>] [[--] <path>...]"
+msgid "git log [<options>] [<revision-range>] [[--] <path>...]"
 msgstr "git log [ОПЦИЯ…] [ДИАПАЗОН_НА_ВЕРСИИТЕ] [[--] ПЪТ…]"
 
 #: builtin/log.c:42
 msgid "git show [<options>] <object>..."
 msgstr "git show [ОПЦИЯ…] ОБЕКТ…"
 
@@ -6872,13 +6943,13 @@
 msgstr "Файлът-кръпка „%s“ не може да бъде отворен"
 
 #: builtin/log.c:803
 msgid "Need exactly one range."
 msgstr "Трябва да зададете точно един диапазон."
 
-#: builtin/log.c:811
+#: builtin/log.c:813
 msgid "Not a range."
 msgstr "Не е диапазон."
 
 #: builtin/log.c:919
 msgid "Cover letter needs email format"
 msgstr "Придружаващото писмо трябва да е форматирано като е-писмо"
@@ -7082,21 +7153,21 @@
 msgstr "Изходните файлове не могат да бъдат създадени"
 
 #: builtin/log.c:1583
 msgid "git cherry [-v] [<upstream> [<head> [<limit>]]]"
 msgstr "git cherry [-v] [ОТДАЛЕЧЕН_КЛОН [ВРЪХ [ПРЕДЕЛ]]]"
 
-#: builtin/log.c:1638
+#: builtin/log.c:1637
 #, c-format
 msgid ""
 "Could not find a tracked remote branch, please specify <upstream> manually.\n"
 msgstr ""
 "Следеният отдалечен клон не бе открит, затова изрично задайте "
 "ОТДАЛЕЧЕН_КЛОН.\n"
 
-#: builtin/log.c:1651 builtin/log.c:1653 builtin/log.c:1665
+#: builtin/log.c:1648 builtin/log.c:1650 builtin/log.c:1662
 #, c-format
 msgid "Unknown commit %s"
 msgstr "Непознато подаване „%s“"
 
 #: builtin/ls-files.c:358
 msgid "git ls-files [<options>] [<file>...]"
@@ -7371,48 +7442,48 @@
 
 #: builtin/merge.c:447
 #, c-format
 msgid "'%s' does not point to a commit"
 msgstr "„%s“ не сочи към подаване"
 
-#: builtin/merge.c:559
+#: builtin/merge.c:537
 #, c-format
 msgid "Bad branch.%s.mergeoptions string: %s"
 msgstr "Неправилен низ за настройката „branch.%s.mergeoptions“: „%s“"
 
-#: builtin/merge.c:654
+#: builtin/merge.c:632
 msgid "git write-tree failed to write a tree"
 msgstr "Командата „git write-tree“ не успя да запише обект-дърво"
 
-#: builtin/merge.c:678
+#: builtin/merge.c:656
 msgid "Not handling anything other than two heads merge."
 msgstr "Поддържа се само сливане на точно две истории."
 
-#: builtin/merge.c:692
+#: builtin/merge.c:670
 #, c-format
 msgid "Unknown option for merge-recursive: -X%s"
 msgstr "Непозната опция за рекурсивното сливане „merge-recursive“: „-X%s“"
 
-#: builtin/merge.c:705
+#: builtin/merge.c:683
 #, c-format
 msgid "unable to write %s"
 msgstr "„%s“ не може да бъде записан"
 
-#: builtin/merge.c:794
+#: builtin/merge.c:772
 #, c-format
 msgid "Could not read from '%s'"
 msgstr "От „%s“ не може да се чете"
 
-#: builtin/merge.c:803
+#: builtin/merge.c:781
 #, c-format
 msgid "Not committing merge; use 'git commit' to complete the merge.\n"
 msgstr ""
 "Сливането няма да бъде подадено. За завършването му и подаването му "
 "използвайте командата „git commit“.\n"
 
-#: builtin/merge.c:809
+#: builtin/merge.c:787
 #, c-format
 msgid ""
 "Please enter a commit message to explain why this merge is necessary,\n"
 "especially if it merges an updated upstream into a topic branch.\n"
 "\n"
 "Lines starting with '%c' will be ignored, and an empty message aborts\n"
@@ -7421,180 +7492,185 @@
 "В съобщението при подаване добавете информация за причината за\n"
 "сливането, особено ако сливате обновен отдалечен клон в тематичен клон.\n"
 "\n"
 "Редовете, които започват с „%c“ ще бъдат пропуснати, а празно съобщение\n"
 "преустановява подаването.\n"
 
-#: builtin/merge.c:833
+#: builtin/merge.c:811
 msgid "Empty commit message."
 msgstr "Празно съобщение при подаване."
 
 # FIXME - WTF is wonderful.
-#: builtin/merge.c:845
+#: builtin/merge.c:823
 #, c-format
 msgid "Wonderful.\n"
 msgstr "Първият етап на тривиалното сливане завърши.\n"
 
-#: builtin/merge.c:900
+#: builtin/merge.c:878
 #, c-format
 msgid "Automatic merge failed; fix conflicts and then commit the result.\n"
 msgstr "Неуспешно сливане — коригирайте конфликтите и подайте резултата.\n"
 
-#: builtin/merge.c:916
+#: builtin/merge.c:894
 #, c-format
 msgid "'%s' is not a commit"
 msgstr "„%s“ не е подаване"
 
-#: builtin/merge.c:957
+#: builtin/merge.c:935
 msgid "No current branch."
 msgstr "Няма текущ клон."
 
-#: builtin/merge.c:959
+#: builtin/merge.c:937
 msgid "No remote for the current branch."
 msgstr "Текущият клон не следи никой."
 
-#: builtin/merge.c:961
+#: builtin/merge.c:939
 msgid "No default upstream defined for the current branch."
 msgstr "Текущият клон не следи никой клон."
 
-#: builtin/merge.c:966
+#: builtin/merge.c:944
 #, c-format
 msgid "No remote-tracking branch for %s from %s"
 msgstr "Никой клон не следи клона „%s“ от хранилището „%s“"
 
-#: builtin/merge.c:1122
+#: builtin/merge.c:1081
+#, c-format
+msgid "could not close '%s'"
+msgstr "„%s“ не може да се затвори"
+
+#: builtin/merge.c:1208
 msgid "There is no merge to abort (MERGE_HEAD missing)."
 msgstr ""
 "Не може да преустановите сливане, защото в момента не се извършва такова "
 "(липсва указател „MERGE_HEAD“)."
 
-#: builtin/merge.c:1138
+#: builtin/merge.c:1224
 msgid ""
 "You have not concluded your merge (MERGE_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 "Не сте завършили сливане. (Указателят „MERGE_HEAD“ съществува).\n"
 "Подайте промените си, преди да започнете ново сливане."
 
-#: builtin/merge.c:1141 git-pull.sh:34
+#: builtin/merge.c:1227 git-pull.sh:74
 msgid "You have not concluded your merge (MERGE_HEAD exists)."
 msgstr "Не сте завършили сливане. (Указателят „MERGE_HEAD“ съществува)."
 
-#: builtin/merge.c:1145
+#: builtin/merge.c:1231
 msgid ""
 "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 "Не сте завършили отбиране на подаване (указателят „CHERRY_PICK_HEAD“\n"
 "съществува). Подайте промените си, преди да започнете ново сливане."
 
-#: builtin/merge.c:1148
+#: builtin/merge.c:1234
 msgid "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists)."
 msgstr ""
 "Не сте завършили отбиране на подаване (указателят „CHERRY_PICK_HEAD“\n"
 "съществува)."
 
-#: builtin/merge.c:1157
+#: builtin/merge.c:1243
 msgid "You cannot combine --squash with --no-ff."
 msgstr "Опцията „--squash“ е несъвместима с „--no-ff“."
 
-#: builtin/merge.c:1166
+#: builtin/merge.c:1251
 msgid "No commit specified and merge.defaultToUpstream not set."
 msgstr ""
 "Не е указано подаване и настройката „merge.defaultToUpstream“ не е зададена."
 
-#: builtin/merge.c:1198
-msgid "Can merge only exactly one commit into empty head"
-msgstr "Можете да слеете точно едно подаване във връх без история"
-
-#: builtin/merge.c:1201
+#: builtin/merge.c:1268
 msgid "Squash commit into empty head not supported yet"
 msgstr "Подаване със смачкване във връх без история все още не се поддържа"
 
-#: builtin/merge.c:1203
+#: builtin/merge.c:1270
 msgid "Non-fast-forward commit does not make sense into an empty head"
 msgstr ""
 "Понеже върхът е без история, всички сливания са тривиални, не може да се "
 "извърши нетривиално сливане изисквано от опцията „--no-ff“"
 
-#: builtin/merge.c:1208
+#: builtin/merge.c:1276
 #, c-format
 msgid "%s - not something we can merge"
 msgstr "„%s“ — не е нещо, което може да се слее"
 
-#: builtin/merge.c:1259
+#: builtin/merge.c:1278
+msgid "Can merge only exactly one commit into empty head"
+msgstr "Можете да слеете точно едно подаване във връх без история"
+
+#: builtin/merge.c:1333
 #, c-format
 msgid "Commit %s has an untrusted GPG signature, allegedly by %s."
 msgstr ""
 "Подаването „%s“ е с недоверен подпис от GPG, който твърди, че е на „%s“."
 
-#: builtin/merge.c:1262
+#: builtin/merge.c:1336
 #, c-format
 msgid "Commit %s has a bad GPG signature allegedly by %s."
 msgstr ""
 "Подаването „%s“ е с неправилен подпис от GPG, който твърди, че е на „%s“."
 
-#: builtin/merge.c:1265
+#: builtin/merge.c:1339
 #, c-format
 msgid "Commit %s does not have a GPG signature."
 msgstr "Подаването „%s“ е без подпис от GPG."
 
-#: builtin/merge.c:1268
+#: builtin/merge.c:1342
 #, c-format
 msgid "Commit %s has a good GPG signature by %s\n"
 msgstr "Подаването „%s“ е с коректен подпис от GPG на „%s“.\n"
 
-#: builtin/merge.c:1349
+#: builtin/merge.c:1423
 #, c-format
 msgid "Updating %s..%s\n"
 msgstr "Обновяване „%s..%s“\n"
 
-#: builtin/merge.c:1388
+#: builtin/merge.c:1462
 #, c-format
 msgid "Trying really trivial in-index merge...\n"
 msgstr "Проба с най-тривиалното сливане в рамките на индекса…\n"
 
 # FIXME WTF message
-#: builtin/merge.c:1395
+#: builtin/merge.c:1469
 #, c-format
 msgid "Nope.\n"
 msgstr "Неуспешно сливане.\n"
 
-#: builtin/merge.c:1427
+#: builtin/merge.c:1501
 msgid "Not possible to fast-forward, aborting."
 msgstr ""
 "Не може да се извърши тривиално сливане, преустановяване на действието."
 
-#: builtin/merge.c:1450 builtin/merge.c:1529
+#: builtin/merge.c:1524 builtin/merge.c:1603
 #, c-format
 msgid "Rewinding the tree to pristine...\n"
 msgstr "Привеждане на дървото към първоначалното…\n"
 
-#: builtin/merge.c:1454
+#: builtin/merge.c:1528
 #, c-format
 msgid "Trying merge strategy %s...\n"
 msgstr "Пробване със стратегията за сливане „%s“…\n"
 
-#: builtin/merge.c:1520
+#: builtin/merge.c:1594
 #, c-format
 msgid "No merge strategy handled the merge.\n"
 msgstr "Никоя стратегия за сливане не може да извърши сливането.\n"
 
-#: builtin/merge.c:1522
+#: builtin/merge.c:1596
 #, c-format
 msgid "Merge with strategy %s failed.\n"
 msgstr "Неуспешно сливане със стратегия „%s“.\n"
 
-#: builtin/merge.c:1531
+#: builtin/merge.c:1605
 #, c-format
 msgid "Using the %s to prepare resolving by hand.\n"
 msgstr ""
 "Ползва се стратегията „%s“, която ще подготви дървото за коригиране на "
 "ръка.\n"
 
-#: builtin/merge.c:1543
+#: builtin/merge.c:1617
 #, c-format
 msgid "Automatic merge went well; stopped before committing as requested\n"
 msgstr ""
 "Автоматичното сливане завърши успешно. Самото подаване не е извършено, "
 "защото бе зададена опцията „--no-commit“.\n"
 
@@ -7783,13 +7859,13 @@
 
 #: builtin/mv.c:253
 #, c-format
 msgid "Renaming %s to %s\n"
 msgstr "Преименуване на „%s“ на „%s“\n"
 
-#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:359
+#: builtin/mv.c:256 builtin/remote.c:725 builtin/repack.c:361
 #, c-format
 msgid "renaming '%s' failed"
 msgstr "неуспешно преименуване на „%s“"
 
 #: builtin/name-rev.c:255
 msgid "git name-rev [<options>] <commit>..."
@@ -8170,13 +8246,13 @@
 msgstr "УКАЗАТЕЛ_ЗА_БЕЛЕЖКА"
 
 #: builtin/notes.c:954
 msgid "use notes from <notes-ref>"
 msgstr "да се използва бележката сочена от този УКАЗАТЕЛ_ЗА_БЕЛЕЖКА"
 
-#: builtin/notes.c:989 builtin/remote.c:1621
+#: builtin/notes.c:989 builtin/remote.c:1618
 #, c-format
 msgid "Unknown subcommand: %s"
 msgstr "Непозната подкоманда: %s"
 
 #: builtin/pack-objects.c:28
 msgid "git pack-objects --stdout [options...] [< ref-list | < object-list]"
@@ -8196,193 +8272,193 @@
 msgstr "грешка при декомпресиране с „deflate“ (%d)"
 
 #: builtin/pack-objects.c:771
 msgid "Writing objects"
 msgstr "Записване на обектите"
 
-#: builtin/pack-objects.c:1013
+#: builtin/pack-objects.c:1011
 msgid "disabling bitmap writing, as some objects are not being packed"
 msgstr ""
 "изключване на записването на битовата маска, защото някои обекти няма да се "
 "пакетират"
 
-#: builtin/pack-objects.c:2173
+#: builtin/pack-objects.c:2171
 msgid "Compressing objects"
 msgstr "Компресиране на обектите"
 
-#: builtin/pack-objects.c:2570
+#: builtin/pack-objects.c:2568
 #, c-format
 msgid "unsupported index version %s"
 msgstr "неподдържана версия на индекса „%s“"
 
-#: builtin/pack-objects.c:2574
+#: builtin/pack-objects.c:2572
 #, c-format
 msgid "bad index version '%s'"
 msgstr "неправилна версия на индекса „%s“"
 
-#: builtin/pack-objects.c:2597
+#: builtin/pack-objects.c:2595
 #, c-format
 msgid "option %s does not accept negative form"
 msgstr "опцията „%s“ не притежава отрицателна версия"
 
-#: builtin/pack-objects.c:2601
+#: builtin/pack-objects.c:2599
 #, c-format
 msgid "unable to parse value '%s' for option %s"
 msgstr "неразпозната стойност „%s“ за опцията „%s“"
 
-#: builtin/pack-objects.c:2621
+#: builtin/pack-objects.c:2619
 msgid "do not show progress meter"
 msgstr "без извеждане на напредъка"
 
-#: builtin/pack-objects.c:2623
+#: builtin/pack-objects.c:2621
 msgid "show progress meter"
 msgstr "извеждане на напредъка"
 
-#: builtin/pack-objects.c:2625
+#: builtin/pack-objects.c:2623
 msgid "show progress meter during object writing phase"
 msgstr "извеждане на напредъка във фазата на запазване на обектите"
 
-#: builtin/pack-objects.c:2628
+#: builtin/pack-objects.c:2626
 msgid "similar to --all-progress when progress meter is shown"
 msgstr ""
 "същото действие като опцията „--all-progress“ при извеждането на напредъка"
 
-#: builtin/pack-objects.c:2629
+#: builtin/pack-objects.c:2627
 msgid "version[,offset]"
 msgstr "ВЕРСИЯ[,ОТМЕСТВАНЕ]"
 
-#: builtin/pack-objects.c:2630
+#: builtin/pack-objects.c:2628
 msgid "write the pack index file in the specified idx format version"
 msgstr ""
 "запазване на индекса на пакетните файлове във форма̀та с указаната версия"
 
-#: builtin/pack-objects.c:2633
+#: builtin/pack-objects.c:2631
 msgid "maximum size of each output pack file"
 msgstr "максимален размер на всеки пакетен файл"
 
-#: builtin/pack-objects.c:2635
+#: builtin/pack-objects.c:2633
 msgid "ignore borrowed objects from alternate object store"
 msgstr "игнориране на обектите заети от други хранилища на обекти"
 
-#: builtin/pack-objects.c:2637
+#: builtin/pack-objects.c:2635
 msgid "ignore packed objects"
 msgstr "игнориране на пакетираните обекти"
 
-#: builtin/pack-objects.c:2639
+#: builtin/pack-objects.c:2637
 msgid "limit pack window by objects"
 msgstr "ограничаване на прозореца за пакетиране по брой обекти"
 
-#: builtin/pack-objects.c:2641
+#: builtin/pack-objects.c:2639
 msgid "limit pack window by memory in addition to object limit"
 msgstr ""
 "ограничаване на прозореца за пакетиране и по памет освен по брой обекти"
 
-#: builtin/pack-objects.c:2643
+#: builtin/pack-objects.c:2641
 msgid "maximum length of delta chain allowed in the resulting pack"
 msgstr ""
 "максимална дължина на веригата от разлики, която е позволена в пакетния файл"
 
-#: builtin/pack-objects.c:2645
+#: builtin/pack-objects.c:2643
 msgid "reuse existing deltas"
 msgstr "преизползване на съществуващите разлики"
 
-#: builtin/pack-objects.c:2647
+#: builtin/pack-objects.c:2645
 msgid "reuse existing objects"
 msgstr "преизползване на съществуващите обекти"
 
-#: builtin/pack-objects.c:2649
+#: builtin/pack-objects.c:2647
 msgid "use OFS_DELTA objects"
 msgstr "използване на обекти „OFS_DELTA“"
 
-#: builtin/pack-objects.c:2651
+#: builtin/pack-objects.c:2649
 msgid "use threads when searching for best delta matches"
 msgstr ""
 "стартиране на нишки за претърсване на най-добрите съвпадения на разликите"
 
-#: builtin/pack-objects.c:2653
+#: builtin/pack-objects.c:2651
 msgid "do not create an empty pack output"
 msgstr "без създаване на празен пакетен файл"
 
-#: builtin/pack-objects.c:2655
+#: builtin/pack-objects.c:2653
 msgid "read revision arguments from standard input"
 msgstr "изчитане на версиите от стандартния вход"
 
-#: builtin/pack-objects.c:2657
+#: builtin/pack-objects.c:2655
 msgid "limit the objects to those that are not yet packed"
 msgstr "ограничаване до все още непакетираните обекти"
 
-#: builtin/pack-objects.c:2660
+#: builtin/pack-objects.c:2658
 msgid "include objects reachable from any reference"
 msgstr ""
 "включване на всички обекти, които могат да се достигнат от произволен "
 "указател"
 
-#: builtin/pack-objects.c:2663
+#: builtin/pack-objects.c:2661
 msgid "include objects referred by reflog entries"
 msgstr "включване и на обектите сочени от записите в журнала на указателите"
 
-#: builtin/pack-objects.c:2666
+#: builtin/pack-objects.c:2664
 msgid "include objects referred to by the index"
 msgstr "включване и на обектите сочени от индекса"
 
-#: builtin/pack-objects.c:2669
+#: builtin/pack-objects.c:2667
 msgid "output pack to stdout"
 msgstr "извеждане на пакета на стандартния изход"
 
-#: builtin/pack-objects.c:2671
+#: builtin/pack-objects.c:2669
 msgid "include tag objects that refer to objects to be packed"
 msgstr ""
 "включване и на обектите-етикети, които сочат към обектите, които ще бъдат "
 "пакетирани"
 
-#: builtin/pack-objects.c:2673
+#: builtin/pack-objects.c:2671
 msgid "keep unreachable objects"
 msgstr "запазване на недостижимите обекти"
 
-#: builtin/pack-objects.c:2674 parse-options.h:140
+#: builtin/pack-objects.c:2672 parse-options.h:139
 msgid "time"
 msgstr "ВРЕМЕ"
 
-#: builtin/pack-objects.c:2675
+#: builtin/pack-objects.c:2673
 msgid "unpack unreachable objects newer than <time>"
 msgstr "разпакетиране на недостижимите обекти, които са по-нови от това ВРЕМЕ"
 
-#: builtin/pack-objects.c:2678
+#: builtin/pack-objects.c:2676
 msgid "create thin packs"
 msgstr "създаване на съкратени пакети"
 
-#: builtin/pack-objects.c:2680
+#: builtin/pack-objects.c:2678
 msgid "create packs suitable for shallow fetches"
 msgstr "пакетиране подходящо за плитко доставяне"
 
-#: builtin/pack-objects.c:2682
+#: builtin/pack-objects.c:2680
 msgid "ignore packs that have companion .keep file"
 msgstr "игнориране на пакетите, които са придружени от файл „.keep“"
 
-#: builtin/pack-objects.c:2684
+#: builtin/pack-objects.c:2682
 msgid "pack compression level"
 msgstr "ниво на компресиране при пакетиране"
 
-#: builtin/pack-objects.c:2686
+#: builtin/pack-objects.c:2684
 msgid "do not hide commits by grafts"
 msgstr ""
 "извеждане на всички родители — дори и тези, които нормално са скрити при "
 "присажданията"
 
-#: builtin/pack-objects.c:2688
+#: builtin/pack-objects.c:2686
 msgid "use a bitmap index if available to speed up counting objects"
 msgstr ""
 "използване на съществуващи индекси на база битови маски за ускоряване на "
 "преброяването на обектите"
 
-#: builtin/pack-objects.c:2690
+#: builtin/pack-objects.c:2688
 msgid "write a bitmap index together with the pack index"
 msgstr ""
 "запазване и на индекс на база побитова маска, заедно с индекса за пакета"
 
-#: builtin/pack-objects.c:2781
+#: builtin/pack-objects.c:2779
 msgid "Counting objects"
 msgstr "Преброяване на обектите"
 
 #: builtin/pack-refs.c:6
 msgid "git pack-refs [<options>]"
 msgstr "git pack-refs [ОПЦИЯ…]"
@@ -8400,25 +8476,25 @@
 msgstr "git prune-packed [-n | --dry-run] [-q | --quiet]"
 
 #: builtin/prune-packed.c:40
 msgid "Removing duplicate objects"
 msgstr "Изтриване на повтарящите се обекти"
 
-#: builtin/prune.c:12
+#: builtin/prune.c:11
 msgid "git prune [-n] [-v] [--expire <time>] [--] [<head>...]"
 msgstr "git prune [-n] [-v] [--expire ВРЕМЕ] [--] [ВРЪХ…]"
 
-#: builtin/prune.c:106
+#: builtin/prune.c:105 builtin/worktree.c:112
 msgid "do not remove, show only"
 msgstr "само извеждане без действително окастряне"
 
-#: builtin/prune.c:107
+#: builtin/prune.c:106 builtin/worktree.c:113
 msgid "report pruned objects"
 msgstr "информация за окастрените обекти"
 
-#: builtin/prune.c:110
+#: builtin/prune.c:109 builtin/worktree.c:115
 msgid "expire objects older than <time>"
 msgstr "окастряне на обектите по-стари от това ВРЕМЕ"
 
 #: builtin/push.c:14
 msgid "git push [<options>] [<repository> [<refspec>...]]"
 msgstr "git push [ОПЦИЯ…] [ХРАНИЛИЩЕ [УКАЗАТЕЛ_НА_ВЕРСИЯ…]]"
@@ -8434,14 +8510,14 @@
 #: builtin/push.c:139
 msgid ""
 "\n"
 "To choose either option permanently, see push.default in 'git help config'."
 msgstr ""
 "\n"
-"За да включите тази опция за постоянно, вижте документацията за настройката "
-"„push.default“ в „git help config“."
+"За да включите тази опция за постоянно, погледнете документацията за "
+"настройката „push.default“ в „git help config“."
 
 #: builtin/push.c:142
 #, c-format
 msgid ""
 "The upstream branch of your current branch does not match\n"
 "the name of your current branch.  To push to the upstream branch\n"
@@ -8593,13 +8669,13 @@
 "(e.g. 'git pull ...') before pushing again.\n"
 "See the 'Note about fast-forwards' in 'git push --help' for details."
 msgstr ""
 "Обновяването е отхвърлено, защото върхът на изтласквания клон е преди върха\n"
 "на отдалечения клон. Проверете клона и внесете отдалечените промени (напр.\n"
 "с командата „git pull…“), преди отново да изтласкате промените. За повече\n"
-"информация вижте раздела „Note about fast-forwards“ в страницата от\n"
+"информация погледнете раздела „Note about fast-forwards“ в страницата от\n"
 "ръководството „git push --help“."
 
 #: builtin/push.c:291
 msgid ""
 "Updates were rejected because the remote contains work that you do\n"
 "not have locally. This is usually caused by another repository pushing\n"
@@ -8611,15 +8687,15 @@
 "съдържа\n"
 "промени, които липсват в локалното хранилище. Най-честата причина за това "
 "е,\n"
 "че някой друг е изтласквал към същия клон. Първо внесете отдалечените "
 "промени\n"
 "(напр. с командата „git pull…“), преди отново да изтласкате промените.\n"
-"За повече информация вижте раздела „Note about fast-forwards“ в страницата "
-"от\n"
-"ръководството „git push --help“."
+"За повече информация погледнете раздела „Note about fast-forwards“ в "
+"страницата\n"
+"от ръководството „git push --help“."
 
 #: builtin/push.c:298
 msgid "Updates were rejected because the tag already exists in the remote."
 msgstr ""
 "Изтласкването е отхвърлено, защото в отдалеченото хранилище съществува "
 "етикет,\n"
@@ -8845,18 +8921,18 @@
 
 #: builtin/read-tree.c:139
 msgid "debug unpack-trees"
 msgstr "изчистване на грешки в командата „unpack-trees“"
 
 # FIXME
-#: builtin/reflog.c:429
+#: builtin/reflog.c:430
 #, c-format
 msgid "%s' for '%s' is not a valid timestamp"
 msgstr "„%s“ не е правилна стойност за време за „%s“"
 
-#: builtin/reflog.c:546 builtin/reflog.c:551
+#: builtin/reflog.c:547 builtin/reflog.c:552
 #, c-format
 msgid "'%s' is not a valid timestamp"
 msgstr "„%s“ не е правилна стойност за време"
 
 #: builtin/remote.c:12
 msgid "git remote [-v | --verbose]"
@@ -8993,18 +9069,18 @@
 #: builtin/remote.c:177
 msgid "specifying branches to track makes sense only with fetch mirrors"
 msgstr ""
 "указването на следени клони е смислено само за отдалечени хранилища, от "
 "които се доставя"
 
-#: builtin/remote.c:187 builtin/remote.c:643
+#: builtin/remote.c:187 builtin/remote.c:640
 #, c-format
 msgid "remote %s already exists."
 msgstr "вече съществува отдалечено хранилище с име „%s“."
 
-#: builtin/remote.c:191 builtin/remote.c:647
+#: builtin/remote.c:191 builtin/remote.c:644
 #, c-format
 msgid "'%s' is not a valid remote name"
 msgstr "„%s“ е неправилно име за отдалечено хранилище"
 
 #: builtin/remote.c:235
 #, c-format
@@ -9021,70 +9097,70 @@
 msgstr "(съвпадащи)"
 
 #: builtin/remote.c:448
 msgid "(delete)"
 msgstr "(за изтриване)"
 
-#: builtin/remote.c:592 builtin/remote.c:598 builtin/remote.c:604
+#: builtin/remote.c:589 builtin/remote.c:595 builtin/remote.c:601
 #, c-format
 msgid "Could not append '%s' to '%s'"
 msgstr "„%s“ не може да се добави към „%s“"
 
-#: builtin/remote.c:636 builtin/remote.c:795 builtin/remote.c:895
+#: builtin/remote.c:633 builtin/remote.c:792 builtin/remote.c:892
 #, c-format
 msgid "No such remote: %s"
 msgstr "Такова отдалечено хранилище няма: %s"
 
-#: builtin/remote.c:653
+#: builtin/remote.c:650
 #, c-format
 msgid "Could not rename config section '%s' to '%s'"
 msgstr "Разделът „%s“ в настройките не може да бъде преименуван на „%s“"
 
-#: builtin/remote.c:659 builtin/remote.c:847
+#: builtin/remote.c:656 builtin/remote.c:844
 #, c-format
 msgid "Could not remove config section '%s'"
 msgstr "Разделът „%s“ в настройките не може да бъде изтрит"
 
 # FIXME tabulator
-#: builtin/remote.c:674
+#: builtin/remote.c:671
 #, c-format
 msgid ""
 "Not updating non-default fetch refspec\n"
 "\t%s\n"
 "\tPlease update the configuration manually if necessary."
 msgstr ""
 "Нестандартните указатели за доставяне няма да бъдат обновени\n"
 "    %s\n"
 "  Променете настройките ръчно, ако е необходимо."
 
-#: builtin/remote.c:680
+#: builtin/remote.c:677
 #, c-format
 msgid "Could not append '%s'"
 msgstr "Разделът „%s“ не може да бъде добавен в настройките"
 
-#: builtin/remote.c:691
+#: builtin/remote.c:688
 #, c-format
 msgid "Could not set '%s'"
 msgstr "Разделът „%s“ не може да бъде зададен в настройките"
 
-#: builtin/remote.c:713
+#: builtin/remote.c:710
 #, c-format
 msgid "deleting '%s' failed"
 msgstr "неуспешно изтриване на „%s“"
 
-#: builtin/remote.c:747
+#: builtin/remote.c:744
 #, c-format
 msgid "creating '%s' failed"
 msgstr "неуспешно създаване на „%s“"
 
-#: builtin/remote.c:766
+#: builtin/remote.c:763
 #, c-format
 msgid "Could not remove branch %s"
 msgstr "Клонът „%s“ не може да бъде изтрит"
 
-#: builtin/remote.c:833
+#: builtin/remote.c:830
 msgid ""
 "Note: A branch outside the refs/remotes/ hierarchy was not removed;\n"
 "to delete it, use:"
 msgid_plural ""
 "Note: Some branches outside the refs/remotes/ hierarchy were not removed;\n"
 "to delete them, use:"
@@ -9092,279 +9168,279 @@
 "Бележка: Клон извън йерархията „refs/remotes/“ не бе изтрит.\n"
 "Изтрийте го чрез командата:"
 msgstr[1] ""
 "Бележка: Няколко клона извън йерархията „refs/remotes/“ не бяха изтрити.\n"
 "Изтрийте ги чрез командата:"
 
-#: builtin/remote.c:948
+#: builtin/remote.c:945
 #, c-format
 msgid " new (next fetch will store in remotes/%s)"
 msgstr " нов (следващото доставяне ще го разположи в „remotes/%s“)"
 
-#: builtin/remote.c:951
+#: builtin/remote.c:948
 msgid " tracked"
 msgstr " следен"
 
-#: builtin/remote.c:953
+#: builtin/remote.c:950
 msgid " stale (use 'git remote prune' to remove)"
 msgstr " стар (изтрийте чрез „git remote prune“)"
 
 # FIXME
-#: builtin/remote.c:955
+#: builtin/remote.c:952
 msgid " ???"
 msgstr " неясно състояние"
 
 # CHECK
-#: builtin/remote.c:996
+#: builtin/remote.c:993
 #, c-format
 msgid "invalid branch.%s.merge; cannot rebase onto > 1 branch"
 msgstr ""
 "неправилен клон за сливане „%s“. Невъзможно е да пребазирате върху повече от "
 "1 клон"
 
-#: builtin/remote.c:1003
+#: builtin/remote.c:1000
 #, c-format
 msgid "rebases onto remote %s"
 msgstr "пребазиране върху отдалечения клон „%s“"
 
-#: builtin/remote.c:1006
+#: builtin/remote.c:1003
 #, c-format
 msgid " merges with remote %s"
 msgstr " сливане с отдалечения клон „%s“"
 
-#: builtin/remote.c:1007
+#: builtin/remote.c:1004
 msgid "    and with remote"
 msgstr "    и с отдалечения клон"
 
-#: builtin/remote.c:1009
+#: builtin/remote.c:1006
 #, c-format
 msgid "merges with remote %s"
 msgstr "сливане с отдалечения клон „%s“"
 
-#: builtin/remote.c:1010
+#: builtin/remote.c:1007
 msgid "   and with remote"
 msgstr "   и с отдалечения клон"
 
-#: builtin/remote.c:1056
+#: builtin/remote.c:1053
 msgid "create"
 msgstr "създаден"
 
-#: builtin/remote.c:1059
+#: builtin/remote.c:1056
 msgid "delete"
 msgstr "изтрит"
 
-#: builtin/remote.c:1063
+#: builtin/remote.c:1060
 msgid "up to date"
 msgstr "актуален"
 
-#: builtin/remote.c:1066
+#: builtin/remote.c:1063
 msgid "fast-forwardable"
 msgstr "може да се слее тривиално"
 
-#: builtin/remote.c:1069
+#: builtin/remote.c:1066
 msgid "local out of date"
 msgstr "локалният е изостанал"
 
-#: builtin/remote.c:1076
+#: builtin/remote.c:1073
 #, c-format
 msgid "    %-*s forces to %-*s (%s)"
 msgstr "    %-*s принудително изтласква към %-*s (%s)"
 
-#: builtin/remote.c:1079
+#: builtin/remote.c:1076
 #, c-format
 msgid "    %-*s pushes to %-*s (%s)"
 msgstr "    %-*s изтласква към %-*s (%s)"
 
-#: builtin/remote.c:1083
+#: builtin/remote.c:1080
 #, c-format
 msgid "    %-*s forces to %s"
 msgstr "    %-*s принудително изтласква към %s"
 
-#: builtin/remote.c:1086
+#: builtin/remote.c:1083
 #, c-format
 msgid "    %-*s pushes to %s"
 msgstr "    %-*s изтласква към %s"
 
-#: builtin/remote.c:1154
+#: builtin/remote.c:1151
 msgid "do not query remotes"
 msgstr "без заявки към отдалечените хранилища"
 
-#: builtin/remote.c:1181
+#: builtin/remote.c:1178
 #, c-format
 msgid "* remote %s"
 msgstr "● отдалечено хранилище „%s“"
 
-#: builtin/remote.c:1182
+#: builtin/remote.c:1179
 #, c-format
 msgid "  Fetch URL: %s"
 msgstr "  Адрес за доставяне: %s"
 
-#: builtin/remote.c:1183 builtin/remote.c:1334
+#: builtin/remote.c:1180 builtin/remote.c:1331
 msgid "(no URL)"
 msgstr "(без адрес)"
 
 # FIXME spaces betwen Push and URL
-#: builtin/remote.c:1192 builtin/remote.c:1194
+#: builtin/remote.c:1189 builtin/remote.c:1191
 #, c-format
 msgid "  Push  URL: %s"
 msgstr "  Адрес за изтласкване: %s"
 
-#: builtin/remote.c:1196 builtin/remote.c:1198 builtin/remote.c:1200
+#: builtin/remote.c:1193 builtin/remote.c:1195 builtin/remote.c:1197
 #, c-format
 msgid "  HEAD branch: %s"
 msgstr "  клон сочен от HEAD: %s"
 
-#: builtin/remote.c:1202
+#: builtin/remote.c:1199
 #, c-format
 msgid ""
 "  HEAD branch (remote HEAD is ambiguous, may be one of the following):\n"
 msgstr ""
 "  клонът сочен от HEAD (клонът указан във файла HEAD от отдалеченото "
 "хранилище е\n"
 "  нееднозначен и е някой от следните):\n"
 
-#: builtin/remote.c:1214
+#: builtin/remote.c:1211
 #, c-format
 msgid "  Remote branch:%s"
 msgid_plural "  Remote branches:%s"
 msgstr[0] "  Отдалечен клон:%s"
 msgstr[1] "  Отдалечени клони:%s"
 
-#: builtin/remote.c:1217 builtin/remote.c:1244
+#: builtin/remote.c:1214 builtin/remote.c:1241
 msgid " (status not queried)"
 msgstr " (състоянието не бе проверено)"
 
-#: builtin/remote.c:1226
+#: builtin/remote.c:1223
 msgid "  Local branch configured for 'git pull':"
 msgid_plural "  Local branches configured for 'git pull':"
 msgstr[0] "  Локален клон настроен за издърпване чрез „git pull“:"
 msgstr[1] "  Локални клони настроени за издърпване чрез „git pull“:"
 
-#: builtin/remote.c:1234
+#: builtin/remote.c:1231
 msgid "  Local refs will be mirrored by 'git push'"
 msgstr "  Локалните указатели ще бъдат пренесени чрез „ push“"
 
-#: builtin/remote.c:1241
+#: builtin/remote.c:1238
 #, c-format
 msgid "  Local ref configured for 'git push'%s:"
 msgid_plural "  Local refs configured for 'git push'%s:"
 msgstr[0] "  Локалният указател, настроен за „git push“%s:"
 msgstr[1] "  Локалните указатели, настроени за „git push“%s:"
 
-#: builtin/remote.c:1262
+#: builtin/remote.c:1259
 msgid "set refs/remotes/<name>/HEAD according to remote"
 msgstr "задаване на refs/remotes/ИМЕ/HEAD според отдалеченото хранилище"
 
-#: builtin/remote.c:1264
+#: builtin/remote.c:1261
 msgid "delete refs/remotes/<name>/HEAD"
 msgstr "изтриване на refs/remotes/ИМЕ/HEAD"
 
-#: builtin/remote.c:1279
+#: builtin/remote.c:1276
 msgid "Cannot determine remote HEAD"
 msgstr "Не може да се установи отдалеченият връх"
 
-#: builtin/remote.c:1281
+#: builtin/remote.c:1278
 msgid "Multiple remote HEAD branches. Please choose one explicitly with:"
 msgstr ""
 "Множество клони с върхове. Изберете изрично някой от тях чрез командата:"
 
-#: builtin/remote.c:1291
+#: builtin/remote.c:1288
 #, c-format
 msgid "Could not delete %s"
 msgstr "„%s“ не може да бъде изтрит"
 
-#: builtin/remote.c:1299
+#: builtin/remote.c:1296
 #, c-format
 msgid "Not a valid ref: %s"
 msgstr "Неправилен указател: %s"
 
-#: builtin/remote.c:1301
+#: builtin/remote.c:1298
 #, c-format
 msgid "Could not setup %s"
 msgstr "„%s“ не може да се настрои"
 
-#: builtin/remote.c:1319
+#: builtin/remote.c:1316
 #, c-format
 msgid " %s will become dangling!"
 msgstr "„%s“ ще се превърне в обект извън клоните!"
 
-#: builtin/remote.c:1320
+#: builtin/remote.c:1317
 #, c-format
 msgid " %s has become dangling!"
 msgstr "„%s“ се превърна в обект извън клоните!"
 
-#: builtin/remote.c:1330
+#: builtin/remote.c:1327
 #, c-format
 msgid "Pruning %s"
 msgstr "Окастряне на „%s“"
 
-#: builtin/remote.c:1331
+#: builtin/remote.c:1328
 #, c-format
 msgid "URL: %s"
 msgstr "адрес: %s"
 
-#: builtin/remote.c:1354
+#: builtin/remote.c:1351
 #, c-format
 msgid " * [would prune] %s"
 msgstr " ● [ще бъде окастрено] %s"
 
-#: builtin/remote.c:1357
+#: builtin/remote.c:1354
 #, c-format
 msgid " * [pruned] %s"
 msgstr " ● [окастрено] %s"
 
-#: builtin/remote.c:1402
+#: builtin/remote.c:1399
 msgid "prune remotes after fetching"
 msgstr "окастряне на огледалата на отдалечените хранилища след доставяне"
 
-#: builtin/remote.c:1468 builtin/remote.c:1542
+#: builtin/remote.c:1465 builtin/remote.c:1539
 #, c-format
 msgid "No such remote '%s'"
 msgstr "Няма отдалечено хранилище на име „%s“"
 
-#: builtin/remote.c:1488
+#: builtin/remote.c:1485
 msgid "add branch"
 msgstr "добавяне на клон"
 
-#: builtin/remote.c:1495
+#: builtin/remote.c:1492
 msgid "no remote specified"
 msgstr "не е указано отдалечено хранилище"
 
-#: builtin/remote.c:1517
+#: builtin/remote.c:1514
 msgid "manipulate push URLs"
 msgstr "промяна на адресите за изтласкване"
 
-#: builtin/remote.c:1519
+#: builtin/remote.c:1516
 msgid "add URL"
 msgstr "добавяне на адреси"
 
-#: builtin/remote.c:1521
+#: builtin/remote.c:1518
 msgid "delete URLs"
 msgstr "изтриване на адреси"
 
 # FIXME message - incompatible
-#: builtin/remote.c:1528
+#: builtin/remote.c:1525
 msgid "--add --delete doesn't make sense"
 msgstr "опциите „--add“ и „--delete“ са несъвместими"
 
-#: builtin/remote.c:1568
+#: builtin/remote.c:1565
 #, c-format
 msgid "Invalid old URL pattern: %s"
 msgstr "Неправилен (стар) формат за адрес: %s"
 
-#: builtin/remote.c:1576
+#: builtin/remote.c:1573
 #, c-format
 msgid "No such URL found: %s"
 msgstr "Такъв адрес не е открит: %s"
 
 # FIXME CHECK MEANING
-#: builtin/remote.c:1578
+#: builtin/remote.c:1575
 msgid "Will not delete all non-push URLs"
 msgstr "Никой от адресите, които не са за изтласкване, няма да се изтрие"
 
-#: builtin/remote.c:1592
+#: builtin/remote.c:1589
 msgid "be verbose; must be placed before a subcommand"
 msgstr "повече подробности. Поставя се пред подкоманда"
 
 #: builtin/repack.c:17
 msgid "git repack [<options>]"
 msgstr "git repack [ОПЦИЯ…]"
@@ -9439,13 +9515,13 @@
 msgstr "максимален размер на всеки пакет"
 
 #: builtin/repack.c:187
 msgid "repack objects in packs marked with .keep"
 msgstr "препакетиране на обектите в пакети белязани с „.keep“"
 
-#: builtin/repack.c:375
+#: builtin/repack.c:377
 #, c-format
 msgid "removing '%s' failed"
 msgstr "неуспешно изтриване на „%s“"
 
 #: builtin/replace.c:19
 msgid "git replace [-f] <object> <replacement>"
@@ -9823,13 +9899,13 @@
 "\n"
 "(use 'rm -rf' if you really want to remove it including all of its history)"
 msgstr ""
 "\n"
 "(ако искате да ги изтриете заедно с цялата им история, използвайте „rm -rf“)"
 
-#: builtin/rm.c:231
+#: builtin/rm.c:230
 msgid ""
 "the following file has staged content different from both the\n"
 "file and the HEAD:"
 msgid_plural ""
 "the following files have staged content different from both the\n"
 "file and the HEAD:"
@@ -9839,75 +9915,75 @@
 "различно от съответстващото на HEAD:"
 msgstr[1] ""
 "следните файлове са със съдържание в индекса различно от текущото им "
 "съдържание и\n"
 "различно от съответстващото на HEAD:"
 
-#: builtin/rm.c:236
+#: builtin/rm.c:235
 msgid ""
 "\n"
 "(use -f to force removal)"
 msgstr ""
 "\n"
 "(за принудително изтриване използвайте опцията „-f“)"
 
-#: builtin/rm.c:240
+#: builtin/rm.c:239
 msgid "the following file has changes staged in the index:"
 msgid_plural "the following files have changes staged in the index:"
 msgstr[0] "следният файл е с променено съдържание в индекса:"
 msgstr[1] "следните файлове са с променено съдържание в индекса:"
 
-#: builtin/rm.c:244 builtin/rm.c:255
+#: builtin/rm.c:243 builtin/rm.c:254
 msgid ""
 "\n"
 "(use --cached to keep the file, or -f to force removal)"
 msgstr ""
 "\n"
 "(за запазване на файла използвайте опцията „--cached“, а за принудително\n"
 "изтриване — „-f“)"
 
-#: builtin/rm.c:252
+#: builtin/rm.c:251
 msgid "the following file has local modifications:"
 msgid_plural "the following files have local modifications:"
 msgstr[0] "следният файл е с променено съдържание"
 msgstr[1] "следните файлове са с променено съдържание"
 
-#: builtin/rm.c:270
+#: builtin/rm.c:269
 msgid "do not list removed files"
 msgstr "да не се извеждат изтритите файлове"
 
-#: builtin/rm.c:271
+#: builtin/rm.c:270
 msgid "only remove from the index"
 msgstr "изтриване само от индекса"
 
-#: builtin/rm.c:272
+#: builtin/rm.c:271
 msgid "override the up-to-date check"
 msgstr "въпреки проверката за актуалността на съдържанието"
 
-#: builtin/rm.c:273
+#: builtin/rm.c:272
 msgid "allow recursive removal"
 msgstr "рекурсивно изтриване"
 
-#: builtin/rm.c:275
+#: builtin/rm.c:274
 msgid "exit with a zero status even if nothing matched"
 msgstr ""
 "изходният код да е 0, дори ако никой файл нe e напаснал с шаблона за "
 "изтриване"
 
-#: builtin/rm.c:318
+#: builtin/rm.c:317
 msgid "Please, stage your changes to .gitmodules or stash them to proceed"
 msgstr ""
 "За да продължите, или вкарайте промените по файла „.gitmodules“ в индекса,\n"
 "или ги скатайте"
 
-#: builtin/rm.c:336
+#: builtin/rm.c:335
 #, c-format
 msgid "not removing '%s' recursively without -r"
 msgstr "без използването на опцията „-r“ „%s“ няма да се изтрие рекурсивно"
 
-#: builtin/rm.c:375
+#: builtin/rm.c:374
 #, c-format
 msgid "git rm: unable to remove %s"
 msgstr "git rm: „%s“ не може да се изтрие"
 
 #: builtin/shortlog.c:13
 msgid "git shortlog [<options>] [<revision-range>] [[--] [<path>...]]"
@@ -9954,75 +10030,75 @@
 "    [--no-name | --sha1-name] [--topics] [(РЕВИЗИЯ | УКАЗАТЕЛ)…]"
 
 #: builtin/show-branch.c:13
 msgid "git show-branch (-g | --reflog)[=<n>[,<base>]] [--list] [<ref>]"
 msgstr "git show-branch (-g | --reflog)[=БРОЙ[,БАЗА]] [--list] [УКАЗАТЕЛ]"
 
-#: builtin/show-branch.c:652
+#: builtin/show-branch.c:659
 msgid "show remote-tracking and local branches"
 msgstr "извеждане на следящите и локалните клони"
 
-#: builtin/show-branch.c:654
+#: builtin/show-branch.c:661
 msgid "show remote-tracking branches"
 msgstr "извеждане на следящите клони"
 
-#: builtin/show-branch.c:656
+#: builtin/show-branch.c:663
 msgid "color '*!+-' corresponding to the branch"
 msgstr "оцветяване на „*!+-“ според клоните"
 
-#: builtin/show-branch.c:658
+#: builtin/show-branch.c:665
 msgid "show <n> more commits after the common ancestor"
 msgstr "извеждане на такъв БРОЙ подавания от общия предшественик"
 
-#: builtin/show-branch.c:660
+#: builtin/show-branch.c:667
 msgid "synonym to more=-1"
 msgstr "синоним на „more=-1“"
 
-#: builtin/show-branch.c:661
+#: builtin/show-branch.c:668
 msgid "suppress naming strings"
 msgstr "без низове за имената на клоните"
 
-#: builtin/show-branch.c:663
+#: builtin/show-branch.c:670
 msgid "include the current branch"
 msgstr "включване и на текущия клон"
 
-#: builtin/show-branch.c:665
+#: builtin/show-branch.c:672
 msgid "name commits with their object names"
 msgstr "именуване на подаванията с имената им на обекти"
 
-#: builtin/show-branch.c:667
+#: builtin/show-branch.c:674
 msgid "show possible merge bases"
 msgstr "извеждане на възможните бази за сливания"
 
-#: builtin/show-branch.c:669
+#: builtin/show-branch.c:676
 msgid "show refs unreachable from any other ref"
 msgstr "извеждане на недостижимите указатели"
 
-#: builtin/show-branch.c:671
+#: builtin/show-branch.c:678
 msgid "show commits in topological order"
 msgstr "извеждане на подаванията в топологическа подредба"
 
-#: builtin/show-branch.c:674
+#: builtin/show-branch.c:681
 msgid "show only commits not on the first branch"
 msgstr "извеждане само на подаванията, които не са от първия клон"
 
-#: builtin/show-branch.c:676
+#: builtin/show-branch.c:683
 msgid "show merges reachable from only one tip"
 msgstr "извеждане на сливанията, които могат да се достигнат само от един връх"
 
-#: builtin/show-branch.c:678
+#: builtin/show-branch.c:685
 msgid "topologically sort, maintaining date order where possible"
 msgstr ""
 "топологическа подредба, при запазване на подредбата по дата, доколкото е\n"
 "възможно"
 
-#: builtin/show-branch.c:681
+#: builtin/show-branch.c:688
 msgid "<n>[,<base>]"
 msgstr "БРОЙ[,БАЗА]"
 
-#: builtin/show-branch.c:682
+#: builtin/show-branch.c:689
 msgid "show <n> most recent ref-log entries starting at base"
 msgstr "показване на най-много БРОЙ журнални записа с начало съответната БАЗА"
 
 # FIXME * -> ...
 #: builtin/show-ref.c:10
 msgid ""
@@ -10034,43 +10110,43 @@
 
 # FIXME pattern & ref-list must be in <>
 #: builtin/show-ref.c:11
 msgid "git show-ref --exclude-existing[=pattern] < ref-list"
 msgstr "git show-ref --exclude-existing[=ШАБЛОН] < СПИСЪК_С_УКАЗАТЕЛИ"
 
-#: builtin/show-ref.c:168
+#: builtin/show-ref.c:170
 msgid "only show tags (can be combined with heads)"
 msgstr "извеждане на етикетите (може да се комбинира с върховете)"
 
-#: builtin/show-ref.c:169
+#: builtin/show-ref.c:171
 msgid "only show heads (can be combined with tags)"
 msgstr "извеждане на върховете (може да се комбинира с етикетите)"
 
-#: builtin/show-ref.c:170
+#: builtin/show-ref.c:172
 msgid "stricter reference checking, requires exact ref path"
 msgstr "строга проверка на указателите, изисква се указател с пълен път"
 
-#: builtin/show-ref.c:173 builtin/show-ref.c:175
+#: builtin/show-ref.c:175 builtin/show-ref.c:177
 msgid "show the HEAD reference, even if it would be filtered out"
 msgstr "задължително извеждане и на указателя HEAD"
 
-#: builtin/show-ref.c:177
+#: builtin/show-ref.c:179
 msgid "dereference tags into object IDs"
 msgstr "да се извеждат идентификаторите на обектите-етикети"
 
-#: builtin/show-ref.c:179
+#: builtin/show-ref.c:181
 msgid "only show SHA1 hash using <n> digits"
 msgstr "извеждане само на този БРОЙ цифри от всяка сума по SHA1"
 
-#: builtin/show-ref.c:183
+#: builtin/show-ref.c:185
 msgid "do not print results to stdout (useful with --verify)"
 msgstr ""
 "без извеждане на резултатите на стандартния вход (полезно с опцията „--"
 "verify“)"
 
-#: builtin/show-ref.c:185
+#: builtin/show-ref.c:187
 msgid "show refs from stdin that aren't in local repository"
 msgstr ""
 "извеждане на указателите приети от стандартния вход, които липсват в "
 "локалното хранилище"
 
 #: builtin/symbolic-ref.c:7
@@ -10330,137 +10406,216 @@
 msgstr "Обновен етикет „%s“ (бе „%s“)\n"
 
 #: builtin/unpack-objects.c:489
 msgid "Unpacking objects"
 msgstr "Разпакетиране на обектите"
 
-#: builtin/update-index.c:403
+#: builtin/update-index.c:70
+#, c-format
+msgid "failed to create directory %s"
+msgstr "директорията „%s“ не може да бъде създадена"
+
+#: builtin/update-index.c:76
+#, c-format
+msgid "failed to stat %s"
+msgstr "не може да бъде получена информация чрез „stat“ за „%s“"
+
+#: builtin/update-index.c:86
+#, c-format
+msgid "failed to create file %s"
+msgstr "файлът „%s“ не може да бъде създаден"
+
+#: builtin/update-index.c:94
+#, c-format
+msgid "failed to delete file %s"
+msgstr "файлът „%s“ не може да бъде изтрит"
+
+#: builtin/update-index.c:101 builtin/update-index.c:203
+#, c-format
+msgid "failed to delete directory %s"
+msgstr "директорията „%s“ не може да бъде изтрита"
+
+#: builtin/update-index.c:124
+#, c-format
+msgid "Testing "
+msgstr "Проба"
+
+#: builtin/update-index.c:136
+msgid "directory stat info does not change after adding a new file"
+msgstr ""
+"информацията получена чрез „stat“ за директорията не се променя след "
+"добавянето на нов файл"
+
+#: builtin/update-index.c:149
+msgid "directory stat info does not change after adding a new directory"
+msgstr ""
+"информацията получена чрез „stat“ за директорията не се променя след "
+"добавянето на нова директория"
+
+#: builtin/update-index.c:162
+msgid "directory stat info changes after updating a file"
+msgstr ""
+"информацията получена чрез „stat“ за директорията се променя след "
+"обновяването на нов файл"
+
+#: builtin/update-index.c:173
+msgid "directory stat info changes after adding a file inside subdirectory"
+msgstr ""
+"информацията получена чрез „stat“ за директорията се променя след добавянето "
+"на файл в поддиректория"
+
+#: builtin/update-index.c:184
+msgid "directory stat info does not change after deleting a file"
+msgstr ""
+"информацията получена чрез „stat“ за директорията не се променя след "
+"изтриването на файл"
+
+#: builtin/update-index.c:197
+msgid "directory stat info does not change after deleting a directory"
+msgstr ""
+"информацията получена чрез „stat“ за директорията не се променя след "
+"изтриването на директория"
+
+#: builtin/update-index.c:204
+msgid " OK"
+msgstr " Добре"
+
+#: builtin/update-index.c:564
 msgid "git update-index [<options>] [--] [<file>...]"
 msgstr "git update-index [ОПЦИЯ…] [--] [ФАЙЛ…]"
 
-#: builtin/update-index.c:757
+#: builtin/update-index.c:918
 msgid "continue refresh even when index needs update"
 msgstr ""
 "продължаване с обновяването, дори когато индексът трябва да бъде обновен"
 
-#: builtin/update-index.c:760
+#: builtin/update-index.c:921
 msgid "refresh: ignore submodules"
 msgstr "подмодулите да се игнорират при обновяването"
 
-#: builtin/update-index.c:763
+#: builtin/update-index.c:924
 msgid "do not ignore new files"
 msgstr "новите файлове да не се игнорират"
 
-#: builtin/update-index.c:765
+#: builtin/update-index.c:926
 msgid "let files replace directories and vice-versa"
 msgstr "файлове да могат да заменят директории и обратно"
 
-#: builtin/update-index.c:767
+#: builtin/update-index.c:928
 msgid "notice files missing from worktree"
 msgstr "предупреждаване при липсващи в работното дърво файлове"
 
-#: builtin/update-index.c:769
+#: builtin/update-index.c:930
 msgid "refresh even if index contains unmerged entries"
 msgstr "обновяване дори и индексът да съдържа неслети обекти"
 
-#: builtin/update-index.c:772
+#: builtin/update-index.c:933
 msgid "refresh stat information"
 msgstr "обновяване на информацията от функцията „stat“"
 
-#: builtin/update-index.c:776
+#: builtin/update-index.c:937
 msgid "like --refresh, but ignore assume-unchanged setting"
 msgstr ""
 "като опцията „--refresh“, но да се проверят и обектите, които са били приети "
 "за непроменени"
 
-#: builtin/update-index.c:780
+#: builtin/update-index.c:941
 msgid "<mode>,<object>,<path>"
 msgstr "РЕЖИМ,ОБЕКТ,ПЪТ"
 
-#: builtin/update-index.c:781
+#: builtin/update-index.c:942
 msgid "add the specified entry to the index"
 msgstr "добавяне на изброените обекти към индекса"
 
-#: builtin/update-index.c:785
+#: builtin/update-index.c:946
 msgid "(+/-)x"
 msgstr "(+/-)x"
 
-#: builtin/update-index.c:786
+#: builtin/update-index.c:947
 msgid "override the executable bit of the listed files"
 msgstr "изрично задаване на стойността на флага дали файлът е изпълним"
 
-#: builtin/update-index.c:790
+#: builtin/update-index.c:951
 msgid "mark files as \"not changing\""
 msgstr "задаване на флаг, че файлът не се променя"
 
-#: builtin/update-index.c:793
+#: builtin/update-index.c:954
 msgid "clear assumed-unchanged bit"
 msgstr "изчистване на флага, че файлът не се променя"
 
-#: builtin/update-index.c:796
+#: builtin/update-index.c:957
 msgid "mark files as \"index-only\""
 msgstr "задаване на флаг, че файловете са само за индекса"
 
-#: builtin/update-index.c:799
+#: builtin/update-index.c:960
 msgid "clear skip-worktree bit"
 msgstr "изчистване на флага,  че файловете са само за индекса"
 
-#: builtin/update-index.c:802
+#: builtin/update-index.c:963
 msgid "add to index only; do not add content to object database"
 msgstr "добавяне само към индекса без добавяне към базата от данни за обектите"
 
-#: builtin/update-index.c:804
+#: builtin/update-index.c:965
 msgid "remove named paths even if present in worktree"
 msgstr "изтриване на указаните пътища, дори и да съществуват в работното дърво"
 
-#: builtin/update-index.c:806
+#: builtin/update-index.c:967
 msgid "with --stdin: input lines are terminated by null bytes"
 msgstr ""
 "при комбиниране с опцията „--stdin“ — входните редове са разделени с нулевия "
 "байт"
 
-#: builtin/update-index.c:808
+#: builtin/update-index.c:969
 msgid "read list of paths to be updated from standard input"
 msgstr "изчитане на списъка с пътища за обновяване от стандартния вход"
 
-#: builtin/update-index.c:812
+#: builtin/update-index.c:973
 msgid "add entries from standard input to the index"
 msgstr "добавяне на елементите от стандартния вход към индекса"
 
-#: builtin/update-index.c:816
+#: builtin/update-index.c:977
 msgid "repopulate stages #2 and #3 for the listed paths"
 msgstr ""
 "възстановяване на състоянието преди сливане или нужда от обновяване за "
 "изброените пътища"
 
-#: builtin/update-index.c:820
+#: builtin/update-index.c:981
 msgid "only update entries that differ from HEAD"
 msgstr "добавяне само на съдържанието, което се различава от това в „HEAD“"
 
-#: builtin/update-index.c:824
+#: builtin/update-index.c:985
 msgid "ignore files missing from worktree"
 msgstr "игнориране на файловете, които липсват в работното дърво"
 
-#: builtin/update-index.c:827
+#: builtin/update-index.c:988
 msgid "report actions to standard output"
 msgstr "извеждане на действията на стандартния изход"
 
-#: builtin/update-index.c:829
+#: builtin/update-index.c:990
 msgid "(for porcelains) forget saved unresolved conflicts"
 msgstr ""
 "забравяне на записаната информация за неразрешени конфликти — за командите "
 "от потребителско ниво"
 
-#: builtin/update-index.c:833
+#: builtin/update-index.c:994
 msgid "write index in this format"
 msgstr "записване на индекса в този формат"
 
-#: builtin/update-index.c:835
+#: builtin/update-index.c:996
 msgid "enable or disable split index"
 msgstr "включване или изключване на разделянето на индекса"
 
+#: builtin/update-index.c:998
+msgid "enable/disable untracked cache"
+msgstr "включване/изключване на кеша за неследените файлове"
+
+#: builtin/update-index.c:1000
+msgid "enable untracked cache without testing the filesystem"
+msgstr ""
+"включване на кеша за неследените файлове без проверка на файловата система"
+
 #: builtin/update-ref.c:9
 msgid "git update-ref [<options>] -d <refname> [<old-val>]"
 msgstr "git update-ref [ОПЦИЯ…] -d ИМЕ_НА_УКАЗАТЕЛ [СТАРА_СТОЙНОСТ]"
 
 # FIXME spaces - not needed in original
 #: builtin/update-ref.c:10
@@ -10522,12 +10677,92 @@
 msgstr "git verify-tag [-v | --verbose] ЕТИКЕТ…"
 
 #: builtin/verify-tag.c:73
 msgid "print tag contents"
 msgstr "извеждане на съдържанието на ЕТИКЕТи"
 
+#: builtin/worktree.c:11
+msgid "git worktree add [<options>] <path> <branch>"
+msgstr "git worktree add [ОПЦИЯ…] ПЪТ КЛОН"
+
+#: builtin/worktree.c:12
+msgid "git worktree prune [<options>]"
+msgstr "git worktree prune [ОПЦИЯ…]"
+
+#: builtin/worktree.c:27
+#, c-format
+msgid "Removing worktrees/%s: not a valid directory"
+msgstr "Изтриване на „worktrees/%s“: не е правилна поддиректория"
+
+#: builtin/worktree.c:33
+#, c-format
+msgid "Removing worktrees/%s: gitdir file does not exist"
+msgstr "Изтриване на „worktrees/%s“: файлът „gitdir“ не съществува"
+
+#: builtin/worktree.c:38
+#, c-format
+msgid "Removing worktrees/%s: unable to read gitdir file (%s)"
+msgstr ""
+"Изтриване на „worktrees/%s“: файлът „gitdir“ (%s) не може да бъде прочетен"
+
+#: builtin/worktree.c:49
+#, c-format
+msgid "Removing worktrees/%s: invalid gitdir file"
+msgstr "Изтриване на „worktrees/%s“: неправилен файл „gitdir“"
+
+#: builtin/worktree.c:65
+#, c-format
+msgid "Removing worktrees/%s: gitdir file points to non-existent location"
+msgstr ""
+"Изтриване на „worktrees/%s“: файлът „gitdir“ сочи несъществуващо "
+"местоположение"
+
+#: builtin/worktree.c:100
+#, c-format
+msgid "failed to remove: %s"
+msgstr "„%s“ не може да се изтрие"
+
+#: builtin/worktree.c:186
+#, c-format
+msgid "'%s' already exists"
+msgstr "„%s“ вече съществува"
+
+#: builtin/worktree.c:207
+#, c-format
+msgid "could not create directory of '%s'"
+msgstr "директорията „%s“ не може да бъде създадена"
+
+#: builtin/worktree.c:241
+msgid "unable to resolve HEAD"
+msgstr "соченото от указателя „HEAD“ не може да бъде открито"
+
+#: builtin/worktree.c:249
+#, c-format
+msgid "Enter %s (identifier %s)"
+msgstr "Въведете %s (идентификатор %s)"
+
+#: builtin/worktree.c:281
+msgid "checkout <branch> even if already checked out in other worktree"
+msgstr "Изтегляне КЛОНа, дори и да е изтеглен в друго работно дърво"
+
+#: builtin/worktree.c:283
+msgid "create a new branch"
+msgstr "създаване на нов клон"
+
+#: builtin/worktree.c:285
+msgid "create or reset a branch"
+msgstr "създаване или зануляване на клони"
+
+#: builtin/worktree.c:286
+msgid "detach HEAD at named commit"
+msgstr "отделяне на указателя „HEAD“ към указаното подаване"
+
+#: builtin/worktree.c:292
+msgid "-b and -B are mutually exclusive"
+msgstr "опциите „-b“ и „-B“ са несъвместими"
+
 #: builtin/write-tree.c:13
 msgid "git write-tree [--missing-ok] [--prefix=<prefix>/]"
 msgstr "git write-tree [--missing-ok] [--prefix=ПРЕФИКС/]"
 
 #: builtin/write-tree.c:26
 msgid "<prefix>/"
@@ -10554,116 +10789,137 @@
 "„git help -a“ извежда наличните подкоманди, а „git help -g“ извежда "
 "наличните\n"
 "ръководства. За помощ за специфична КОМАНДА ползвайте „git help КОМАНДА“, а "
 "за\n"
 "някое определено ПОНЯТИЕ използвайте „git help ПОНЯТИЕ“."
 
-#: common-cmds.h:8
+#: common-cmds.h:10
+msgid "start a working area (see also: git help tutorial)"
+msgstr "създаване на работно дърво (погледнете: „git help tutorial“)"
+
+#: common-cmds.h:11
+msgid "work on the current change (see also: git help everyday)"
+msgstr "работа по текущата промяна (погледнете: „git help everyday“)"
+
+#: common-cmds.h:12
+msgid "examine the history and state (see also: git help revisions)"
+msgstr "преглед на историята и състоянието (погледнете: „git help revisions“)"
+
+#: common-cmds.h:13
+msgid "grow, mark and tweak your common history"
+msgstr "увеличаване, отбелязване и промяна на общата история"
+
+#: common-cmds.h:14
+msgid "collaborate (see also: git help workflows)"
+msgstr "съвместна работа (погледнете: „git help workflows“)"
+
+#: common-cmds.h:18
 msgid "Add file contents to the index"
 msgstr "Добавяне на съдържанието на файла към индекса"
 
-#: common-cmds.h:9
+#: common-cmds.h:19
 msgid "Find by binary search the change that introduced a bug"
 msgstr "Двоично търсене на промяната, която е причинила грешка"
 
 # FIXME - should be similar to tag
-#: common-cmds.h:10
+#: common-cmds.h:20
 msgid "List, create, or delete branches"
 msgstr "Извеждане, създаване, изтриване на клони"
 
-#: common-cmds.h:11
-msgid "Checkout a branch or paths to the working tree"
-msgstr "Изтегляне на цял клон или файлове/директории в работното дърво"
+#: common-cmds.h:21
+msgid "Switch branches or restore working tree files"
+msgstr ""
+"Преминаване към друг клон или възстановяване на файловете в работното дърво"
 
-#: common-cmds.h:12
+#: common-cmds.h:22
 msgid "Clone a repository into a new directory"
 msgstr "Клониране на хранилище в нова директория"
 
-#: common-cmds.h:13
+#: common-cmds.h:23
 msgid "Record changes to the repository"
 msgstr "Подаване на промени в хранилището"
 
-#: common-cmds.h:14
+#: common-cmds.h:24
 msgid "Show changes between commits, commit and working tree, etc"
 msgstr "Извеждане на разликите между подаванията, версиите, работното дърво"
 
-#: common-cmds.h:15
+#: common-cmds.h:25
 msgid "Download objects and refs from another repository"
 msgstr "Изтегляне на обекти и указатели от друго хранилище"
 
-#: common-cmds.h:16
+#: common-cmds.h:26
 msgid "Print lines matching a pattern"
 msgstr "Извеждане на редовете напасващи на шаблон"
 
-#: common-cmds.h:17
+#: common-cmds.h:27
 msgid "Create an empty Git repository or reinitialize an existing one"
 msgstr "Създаване на празно хранилище на Git или зануляване на съществуващо"
 
-#: common-cmds.h:18
+#: common-cmds.h:28
 msgid "Show commit logs"
 msgstr "Извеждане на журнала с подаванията"
 
-#: common-cmds.h:19
+#: common-cmds.h:29
 msgid "Join two or more development histories together"
 msgstr "Сливане на две или повече поредици/истории от промени"
 
-#: common-cmds.h:20
+#: common-cmds.h:30
 msgid "Move or rename a file, a directory, or a symlink"
 msgstr "Преместване или преименуване на файл, директория или символна връзка"
 
-#: common-cmds.h:21
+#: common-cmds.h:31
 msgid "Fetch from and integrate with another repository or a local branch"
 msgstr "Доставяне и интегрирането на промените от друго хранилище или клон"
 
-#: common-cmds.h:22
+#: common-cmds.h:32
 msgid "Update remote refs along with associated objects"
 msgstr "Обновяване на отдалечените указатели и свързаните с тях обекти"
 
-#: common-cmds.h:23
+#: common-cmds.h:33
 msgid "Forward-port local commits to the updated upstream head"
 msgstr "Пребазиране на промени към нова основа"
 
-#: common-cmds.h:24
+#: common-cmds.h:34
 msgid "Reset current HEAD to the specified state"
 msgstr "Привеждане на указателя „HEAD“ към зададеното състояние"
 
-#: common-cmds.h:25
+#: common-cmds.h:35
 msgid "Remove files from the working tree and from the index"
 msgstr "Изтриване на файлове от работното дърво и индекса"
 
-#: common-cmds.h:26
+#: common-cmds.h:36
 msgid "Show various types of objects"
 msgstr "Извеждане на различните видове обекти в Git"
 
-#: common-cmds.h:27
+#: common-cmds.h:37
 msgid "Show the working tree status"
 msgstr "Извеждане на състоянието на работното дърво"
 
 # FIXME - should be similar to branch
-#: common-cmds.h:28
+#: common-cmds.h:38
 msgid "Create, list, delete or verify a tag object signed with GPG"
 msgstr "Извеждане, създаване, изтриване, проверка на етикети подписани с GPG"
 
-#: parse-options.h:143
+#: parse-options.h:142
 msgid "expiry-date"
 msgstr "период на валидност/запазване"
 
-#: parse-options.h:158
+#: parse-options.h:157
 msgid "no-op (backward compatibility)"
 msgstr "нулева операция (за съвместимост с предишни версии)"
 
-#: parse-options.h:232
+#: parse-options.h:231
 msgid "be more verbose"
 msgstr "повече подробности"
 
-#: parse-options.h:234
+#: parse-options.h:233
 msgid "be more quiet"
 msgstr "по-малко подробности"
 
 # FIXME SHA-1 -> SHA1
-#: parse-options.h:240
+#: parse-options.h:239
 msgid "use <n> digits to display SHA-1s"
 msgstr "да се показват такъв БРОЙ цифри от сумите по SHA1"
 
 #: rerere.h:27
 msgid "update the index with reused conflict resolution if possible"
 msgstr ""
@@ -10671,24 +10927,24 @@
 "индекса"
 
 #: git-am.sh:53
 msgid "You need to set your committer info first"
 msgstr "Първо трябва да зададете информация за себе си"
 
-#: git-am.sh:98
+#: git-am.sh:100
 msgid ""
 "You seem to have moved HEAD since the last 'am' failure.\n"
 "Not rewinding to ORIG_HEAD"
 msgstr ""
 "Изглежда указателят „HEAD“ е променен и не сочи към същия обект както по "
 "времето\n"
 "на последното неуспешно изпълнение на „git am“. Указателят се задава да сочи "
 "към\n"
 "„ORIG_HEAD“"
 
-#: git-am.sh:108
+#: git-am.sh:110
 #, sh-format
 msgid ""
 "When you have resolved this problem, run \"$cmdline --continue\".\n"
 "If you prefer to skip this patch, run \"$cmdline --skip\" instead.\n"
 "To restore the original branch and stop patching, run \"$cmdline --abort\"."
 msgstr ""
@@ -10696,175 +10952,175 @@
 "continue“.\n"
 "За да прескочите тази кръпка, изпълнете командата „$cmdline --skip“.\n"
 "За да възстановите първоначалното състояние и да преустановите прилагането "
 "на \n"
 "кръпки, изпълнете командата „$cmdline --abort“."
 
-#: git-am.sh:124
+#: git-am.sh:126
 msgid "Cannot fall back to three-way merge."
 msgstr "Не може да се премине към тройно сливане."
 
-#: git-am.sh:140
+#: git-am.sh:142
 msgid "Repository lacks necessary blobs to fall back on 3-way merge."
 msgstr ""
 "В хранилището липсват необходимите обекти BLOB, за да се премине към тройно "
 "сливане."
 
-#: git-am.sh:142
+#: git-am.sh:144
 msgid "Using index info to reconstruct a base tree..."
 msgstr "Базовото дърво се реконструира от информацията в индекса…"
 
-#: git-am.sh:157
+#: git-am.sh:159
 msgid ""
 "Did you hand edit your patch?\n"
 "It does not apply to blobs recorded in its index."
 msgstr ""
 "Кръпката не може да се приложи към обектите BLOB в индекса.\n"
 "Да не би да сте я редактирали на ръка?"
 
-#: git-am.sh:166
+#: git-am.sh:168
 msgid "Falling back to patching base and 3-way merge..."
 msgstr "Преминаване към прилагане на кръпка към базата и тройно сливане…"
 
-#: git-am.sh:182
+#: git-am.sh:185
 msgid "Failed to merge in the changes."
 msgstr "Неуспешно сливане на промените."
 
-#: git-am.sh:277
+#: git-am.sh:280
 msgid "Only one StGIT patch series can be applied at once"
 msgstr ""
 "Само една серия кръпки от „StGIT“ може да бъде прилагана в даден момент"
 
-#: git-am.sh:364
+#: git-am.sh:367
 #, sh-format
 msgid "Patch format $patch_format is not supported."
 msgstr "Неподдържан формат на кръпки: „$patch_format“."
 
-#: git-am.sh:366
+#: git-am.sh:369
 msgid "Patch format detection failed."
 msgstr "Форматът на кръпката не може да бъде определен."
 
-#: git-am.sh:398
+#: git-am.sh:407
 msgid ""
 "The -b/--binary option has been a no-op for long time, and\n"
 "it will be removed. Please do not use it anymore."
 msgstr ""
 "Опциите „-b“/„--binary“ отдавна не правят нищо и\n"
 "ще бъдат премахнати в бъдеще. Не ги ползвайте."
 
-#: git-am.sh:496
+#: git-am.sh:507
 #, sh-format
 msgid "previous rebase directory $dotest still exists but mbox given."
 msgstr ""
 "предишната директория за пребазиране „$dotest“ все още съществува, а е "
 "зададен файл „mbox“."
 
 # FIXME better message
-#: git-am.sh:501
+#: git-am.sh:512
 msgid "Please make up your mind. --skip or --abort?"
 msgstr "Опциите „--skip“ и „--abort“ са несъвместими."
 
-#: git-am.sh:537
+#: git-am.sh:560
 #, sh-format
 msgid ""
 "Stray $dotest directory found.\n"
 "Use \"git am --abort\" to remove it."
 msgstr ""
 "Открита е излишна директория „$dotest“.\n"
 "Можете да я изтриете с командата „git am --abort“."
 
-#: git-am.sh:545
+#: git-am.sh:568
 msgid "Resolve operation not in progress, we are not resuming."
 msgstr "В момента не тече операция по коригиране и няма как да се продължи."
 
-#: git-am.sh:612
+#: git-am.sh:635
 #, sh-format
 msgid "Dirty index: cannot apply patches (dirty: $files)"
 msgstr ""
 "Индексът не е чист: кръпките не могат да бъдат приложени (замърсени са: "
 "$files)"
 
 # FIXME spaces
-#: git-am.sh:722
+#: git-am.sh:747
 #, sh-format
 msgid ""
 "Patch is empty.  Was it split wrong?\n"
 "If you would prefer to skip this patch, instead run \"$cmdline --skip\".\n"
 "To restore the original branch and stop patching run \"$cmdline --abort\"."
 msgstr ""
 "Кръпката е празна. Честа причина за това е неправилно разделяне на кръпки.\n"
 "За да прескочите тази кръпка, изпълнете командата „$cmdline --skip“.\n"
 "За да възстановите първоначалното състояние и да преустановите прилагането "
 "на \n"
 "кръпки, изпълнете командата „$cmdline --abort“."
 
-#: git-am.sh:749
+#: git-am.sh:774
 msgid "Patch does not have a valid e-mail address."
 msgstr "Кръпката не съдържа валиден адрес за е-поща."
 
-#: git-am.sh:796
+#: git-am.sh:821
 msgid "cannot be interactive without stdin connected to a terminal."
 msgstr ""
 "За интерактивно изпълнение е необходимо стандартният\n"
 "изход да е свързан с терминал, а в момента не е."
 
-#: git-am.sh:800
+#: git-am.sh:825
 msgid "Commit Body is:"
 msgstr "Тялото на кръпката за прилагане е:"
 
 #. TRANSLATORS: Make sure to include [y], [n], [e], [v] and [a]
 #. in your translation. The program will only accept English
 #. input at this point.
-#: git-am.sh:807
+#: git-am.sh:832
 msgid "Apply? [y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all "
 msgstr ""
 "Прилагане? „y“ — да/„n“ — не/„e“ — редактиране/„v“ — преглед/„a“ — приемане "
 "на всичко"
 
-#: git-am.sh:843
+#: git-am.sh:868
 #, sh-format
 msgid "Applying: $FIRSTLINE"
 msgstr "Прилагане: $FIRSTLINE"
 
-#: git-am.sh:864
+#: git-am.sh:889
 msgid ""
 "No changes - did you forget to use 'git add'?\n"
 "If there is nothing left to stage, chances are that something else\n"
 "already introduced the same changes; you might want to skip this patch."
 msgstr ""
 "Без промени — възможно е да не сте изпълнили „git add“.\n"
 "Ако няма друга промяна за включване в индекса, най-вероятно някоя друга\n"
 "кръпка е довела до същите промени и в такъв случай просто пропуснете тази."
 
-#: git-am.sh:872
+#: git-am.sh:897
 msgid ""
 "You still have unmerged paths in your index\n"
 "did you forget to use 'git add'?"
 msgstr ""
 "Индексът все още съдържа неслети промени — възможно е да не сте изпълнили "
 "„git add“."
 
-#: git-am.sh:888
+#: git-am.sh:913
 msgid "No changes -- Patch already applied."
 msgstr "Без промени — кръпката вече е приложена."
 
-#: git-am.sh:898
+#: git-am.sh:923
 #, sh-format
 msgid "Patch failed at $msgnum $FIRSTLINE"
 msgstr "Неуспешно прилагане на кръпката „$msgnum“: „$FIRSTLINE“"
 
-#: git-am.sh:901
+#: git-am.sh:926
 #, sh-format
 msgid ""
 "The copy of the patch that failed is found in:\n"
 "   $dotest/patch"
 msgstr ""
 "Дубликат на проблемната кръпка се намира в:\n"
 "   $dotest/patch"
 
-#: git-am.sh:919
+#: git-am.sh:945
 msgid "applying to an empty history"
 msgstr "прилагане върху празна история"
 
 #: git-bisect.sh:48
 msgid "You need to start by \"git bisect start\""
 msgstr "Започнете като изпълните командата „git bisect start“"
@@ -11028,57 +11284,57 @@
 "функцията „bisect_state $state“ завърши с код за грешка $res"
 
 #: git-bisect.sh:485
 msgid "bisect run success"
 msgstr "успешно двоично търсене"
 
-#: git-pull.sh:21
+#: git-pull.sh:61
 msgid ""
 "Pull is not possible because you have unmerged files.\n"
 "Please, fix them up in the work tree, and then use 'git add/rm <file>'\n"
 "as appropriate to mark resolution and make a commit."
 msgstr ""
 "Невъзможно е да издърпвате в момента, защото някои файлове не са слети. "
 "Трябва\n"
 "да ги прегледате, коригирате, ако е необходимо и да ги добавите или извадите "
 "от\n"
 "индекса с командата „git add/rm ФАЙЛ“, след което трябва да подадете "
 "промените."
 
-#: git-pull.sh:25
+#: git-pull.sh:65
 msgid "Pull is not possible because you have unmerged files."
 msgstr ""
 "Невъзможно е да издърпвате в момента, защото някои файлове не са слети."
 
-#: git-pull.sh:31
+#: git-pull.sh:71
 msgid ""
 "You have not concluded your merge (MERGE_HEAD exists).\n"
 "Please, commit your changes before you can merge."
 msgstr ""
 "Не сте завършили сливане. (Указателят „MERGE_HEAD“ съществува).\n"
 "Подайте промените си, преди да започнете ново сливане."
 
-#: git-pull.sh:245
+#: git-pull.sh:285
 msgid "updating an unborn branch with changes added to the index"
 msgstr "обновяване на все още несъздаден клон с промените от индекса"
 
-#: git-pull.sh:269
+#: git-pull.sh:311
 #, sh-format
 msgid ""
 "Warning: fetch updated the current branch head.\n"
 "Warning: fast-forwarding your working tree from\n"
 "Warning: commit $orig_head."
 msgstr ""
 "ПРЕДУПРЕЖДЕНИЕ: доставянето обнови върха на текущия клон. Работното ви\n"
 "ПРЕДУПРЕЖДЕНИЕ: копие бе тривиално слято от подаване „$orig_head“."
 
-#: git-pull.sh:294
+#: git-pull.sh:336
 msgid "Cannot merge multiple branches into empty head"
 msgstr "Не може да сливате множество клони в празен върхов указател"
 
-#: git-pull.sh:298
+#: git-pull.sh:340
 msgid "Cannot rebase onto multiple branches"
 msgstr "Не може да пребазирате върху повече от един клон"
 
 #: git-rebase.sh:57
 msgid ""
 "When you have resolved this problem, run \"git rebase --continue\".\n"
@@ -11283,102 +11539,107 @@
 #. translation of "error: " takes in your language. E.g. in
 #. English this is:
 #.
 #. $ git stash save --blah-blah 2>&1 | head -n 2
 #. error: unknown option for 'stash save': --blah-blah
 #. To provide a message, use git stash save -- '--blah-blah'
-#: git-stash.sh:238
+#: git-stash.sh:241
 #, sh-format
 msgid ""
 "error: unknown option for 'stash save': $option\n"
 "       To provide a message, use git stash save -- '$option'"
 msgstr ""
 "грешка: командата „git stash save“ не поддържа опция „$option“\n"
 "        За да зададете съобщение, изпълнете „git stash save -- '$option'“"
 
-#: git-stash.sh:259
+#: git-stash.sh:262
 msgid "No local changes to save"
 msgstr "Няма никакви локални промени за скатаване"
 
-#: git-stash.sh:263
+#: git-stash.sh:266
 msgid "Cannot initialize stash"
 msgstr "Скатаването не може да стартира"
 
-#: git-stash.sh:267
+#: git-stash.sh:270
 msgid "Cannot save the current status"
 msgstr "Текущото състояние не може да бъде запазено"
 
-#: git-stash.sh:285
+#: git-stash.sh:288
 msgid "Cannot remove worktree changes"
 msgstr "Промените в работното дърво не могат да бъдат занулени"
 
-#: git-stash.sh:384
+#: git-stash.sh:389
+#, sh-format
+msgid "unknown option: $opt"
+msgstr "непозната опция: $opt"
+
+#: git-stash.sh:399
 msgid "No stash found."
 msgstr "Не е открито нищо скатано."
 
-#: git-stash.sh:391
+#: git-stash.sh:406
 #, sh-format
 msgid "Too many revisions specified: $REV"
 msgstr "Указани са прекалено много версии: „$REV“"
 
-#: git-stash.sh:397
+#: git-stash.sh:412
 #, sh-format
 msgid "$reference is not a valid reference"
 msgstr "Указателят „$reference“ е грешен"
 
-#: git-stash.sh:425
+#: git-stash.sh:440
 #, sh-format
 msgid "'$args' is not a stash-like commit"
 msgstr "„$args“ не е подаване, приличащо на нещо скатано"
 
-#: git-stash.sh:436
+#: git-stash.sh:451
 #, sh-format
 msgid "'$args' is not a stash reference"
 msgstr "„$args“ не е указател към нещо скатано"
 
-#: git-stash.sh:444
+#: git-stash.sh:459
 msgid "unable to refresh index"
 msgstr "индексът не може да бъде обновен"
 
-#: git-stash.sh:448
+#: git-stash.sh:463
 msgid "Cannot apply a stash in the middle of a merge"
 msgstr "По време на сливане не може да приложите нещо скатано"
 
-#: git-stash.sh:456
+#: git-stash.sh:471
 msgid "Conflicts in index. Try without --index."
 msgstr ""
 "В индекса има конфликти. Пробвайте да изпълните командата без опцията „--"
 "index“."
 
-#: git-stash.sh:458
+#: git-stash.sh:473
 msgid "Could not save index tree"
 msgstr "Дървото сочено от индекса не може да бъде запазено"
 
-#: git-stash.sh:492
+#: git-stash.sh:507
 msgid "Cannot unstage modified files"
 msgstr "Променените файлове не могат да бъдат извадени от индекса"
 
-#: git-stash.sh:507
+#: git-stash.sh:522
 msgid "Index was not unstashed."
 msgstr "Индексът не е скатан."
 
-#: git-stash.sh:530
+#: git-stash.sh:545
 #, sh-format
 msgid "Dropped ${REV} ($s)"
 msgstr "Изтрито е скатаното „${REV}“ ($s)"
 
-#: git-stash.sh:531
+#: git-stash.sh:546
 #, sh-format
 msgid "${REV}: Could not drop stash entry"
 msgstr "Скатаното „${REV}“ не може да бъде изтрито"
 
-#: git-stash.sh:539
+#: git-stash.sh:554
 msgid "No branch name specified"
 msgstr "Не е указано име на клон"
 
-#: git-stash.sh:611
+#: git-stash.sh:626
 msgid "(To restore them type \"git stash apply\")"
 msgstr "(За да ги възстановите, изпълнете командата „git stash apply“)"
 
 #: git-submodule.sh:95
 #, sh-format
 msgid "cannot strip one component off url '$remoteurl'"
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale/bg/LC_MESSAGES/git.mo and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale/bg/LC_MESSAGES/git.mo differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale/ca/LC_MESSAGES/git.mo and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale/ca/LC_MESSAGES/git.mo differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale/de/LC_MESSAGES/git.mo and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale/de/LC_MESSAGES/git.mo differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale/fr/LC_MESSAGES/git.mo and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale/fr/LC_MESSAGES/git.mo differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale/ru/LC_MESSAGES/git.mo and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale/ru/LC_MESSAGES/git.mo differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale/sv/LC_MESSAGES/git.mo and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale/sv/LC_MESSAGES/git.mo differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale/vi/LC_MESSAGES/git.mo and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale/vi/LC_MESSAGES/git.mo differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/build/locale/zh_CN/LC_MESSAGES/git.mo and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/build/locale/zh_CN/LC_MESSAGES/git.mo differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/ca.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/ca.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/ca.po	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/ca.po	2015-07-28 04:34:56.000000000 +0800
@@ -4,22 +4,22 @@
 # Alex Henrie <alexhenrie24@gmail.com>, 2014.
 #
 msgid ""
 msgstr ""
 "Project-Id-Version: Git\n"
 "Report-Msgid-Bugs-To: Git Mailing List <git@vger.kernel.org>\n"
-"POT-Creation-Date: 2015-04-03 08:13+0800\n"
-"PO-Revision-Date: 2015-04-07 12:26-0700\n"
+"POT-Creation-Date: 2015-07-14 07:19+0800\n"
+"PO-Revision-Date: 2015-07-20 11:54-0600\n"
 "Last-Translator: Alex Henrie <alexhenrie24@gmail.com>\n"
 "Language-Team: Catalan\n"
 "Language: ca\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
 "Plural-Forms: nplurals=2; plural=(n != 1);\n"
-"X-Generator: Poedit 1.7.5\n"
+"X-Generator: Poedit 1.8.2\n"
 
 #: advice.c:55
 #, c-format
 msgid "hint: %.*s\n"
 msgstr "pista: %.*s\n"
 
@@ -48,13 +48,13 @@
 "[<camí>...]"
 
 #: archive.c:14
 msgid "git archive --remote <repo> [--exec <cmd>] --list"
 msgstr "git archive --remote <dipòsit> [--exec <ordre>] --list"
 
-#: archive.c:342 builtin/add.c:137 builtin/add.c:427 builtin/rm.c:328
+#: archive.c:342 builtin/add.c:137 builtin/add.c:428 builtin/rm.c:327
 #, c-format
 msgid "pathspec '%s' did not match any files"
 msgstr "L'especificació de camí '%s' no ha coincidit amb cap fitxer"
 
 #: archive.c:427
 msgid "fmt"
@@ -71,15 +71,15 @@
 #: archive.c:429
 msgid "prepend prefix to each pathname in the archive"
 msgstr "anteposa el prefix a cada nom de camí en l'arxiu"
 
 #: archive.c:430 builtin/archive.c:88 builtin/blame.c:2516
 #: builtin/blame.c:2517 builtin/config.c:57 builtin/fast-export.c:986
-#: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:101
+#: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:99
 #: builtin/ls-files.c:446 builtin/ls-files.c:449 builtin/notes.c:394
-#: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:151
+#: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:150
 msgid "file"
 msgstr "fitxer"
 
 #: archive.c:431 builtin/archive.c:89
 msgid "write the archive to this file"
 msgstr "escriu l'arxiu a aquest fitxer"
@@ -105,13 +105,13 @@
 msgstr "comprimeix millor"
 
 #: archive.c:447
 msgid "list supported archive formats"
 msgstr "allista els formats d'arxiu admesos"
 
-#: archive.c:449 builtin/archive.c:90 builtin/clone.c:86
+#: archive.c:449 builtin/archive.c:90 builtin/clone.c:77
 msgid "repo"
 msgstr "dipòsit"
 
 #: archive.c:450 builtin/archive.c:91
 msgid "retrieve the archive from remote repository <repo>"
 msgstr "recupera l'arxiu del dipòsit remot <dipòsit>"
@@ -121,13 +121,13 @@
 msgstr "ordre"
 
 #: archive.c:452 builtin/archive.c:93
 msgid "path to the remote git-upload-archive command"
 msgstr "camí a l'ordre git-upload-archive remot"
 
-#: attr.c:264
+#: attr.c:265
 msgid ""
 "Negative patterns are ignored in git attributes\n"
 "Use '\\!' for literal leading exclamation."
 msgstr ""
 "Els patrons negatius s'ignoren en els atributs de git\n"
 "Useu '\\!' per exclamació capdavantera literal."
@@ -268,14 +268,14 @@
 
 #: bundle.c:139
 msgid "Repository lacks these prerequisite commits:"
 msgstr "Al dipòsit li manquen aquestes comissions prerequisits:"
 
 #: bundle.c:163 sequencer.c:650 sequencer.c:1105 builtin/blame.c:2705
-#: builtin/branch.c:659 builtin/commit.c:1045 builtin/log.c:330
-#: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:358
+#: builtin/branch.c:651 builtin/commit.c:1045 builtin/log.c:330
+#: builtin/log.c:825 builtin/log.c:1432 builtin/log.c:1666 builtin/merge.c:358
 #: builtin/shortlog.c:158
 msgid "revision walk setup failed"
 msgstr "la configuració del passeig per revisions ha fallat"
 
 #: bundle.c:185
 #, c-format
@@ -515,35 +515,43 @@
 "Found errors in 'diff.dirstat' config variable:\n"
 "%s"
 msgstr ""
 "Errors trobats en la variable de configuració 'diff.dirstat':\n"
 "%s"
 
-#: diff.c:2956
+#: diff.c:2997
 #, c-format
 msgid "external diff died, stopping at %s"
 msgstr "El diff external s'ha mort, aturant a %s"
 
-#: diff.c:3351
+#: diff.c:3393
 msgid "--follow requires exactly one pathspec"
 msgstr "--follow requereix exactament una especificació de camí"
 
-#: diff.c:3514
+#: diff.c:3556
 #, c-format
 msgid ""
 "Failed to parse --dirstat/-X option parameter:\n"
 "%s"
 msgstr ""
 "S'ha fallat en analitzar el paràmetre d'opció de --dirstat/-X:\n"
 "%s"
 
-#: diff.c:3528
+#: diff.c:3570
 #, c-format
 msgid "Failed to parse --submodule option parameter: '%s'"
 msgstr "S'ha fallat en analitzar el paràmetre d'opció de --submodule: %s"
 
+#: dir.c:1852
+msgid "failed to get kernel name and information"
+msgstr "s'ha fallat en obtenir el nombre i la informació del nucli"
+
+#: dir.c:1945
+msgid "Untracked cache is disabled on this system."
+msgstr "La memòria cau no seguida està deshabilitada en aquest sistema."
+
 #: gpg-interface.c:129 gpg-interface.c:200
 msgid "could not run gpg."
 msgstr "no s'ha pogut executar el gpg."
 
 #: gpg-interface.c:141
 msgid "gpg did not accept the data"
@@ -584,49 +592,49 @@
 msgstr "ordres de git disponibles en '%s'"
 
 #: help.c:214
 msgid "git commands available from elsewhere on your $PATH"
 msgstr "ordres de git disponibles d'altres llocs en el vostre $PATH"
 
-#: help.c:230
-msgid "The most commonly used git commands are:"
-msgstr "Les ordres de git més freqüentment usades són:"
+#: help.c:246
+msgid "These are common Git commands used in various situations:"
+msgstr "Aquests són ordres del Git comunament usats en diverses situacions:"
 
-#: help.c:289
+#: help.c:311
 #, c-format
 msgid ""
 "'%s' appears to be a git command, but we were not\n"
 "able to execute it. Maybe git-%s is broken?"
 msgstr ""
 "'%s' sembla una ordre git, però no hem pogut\n"
 "executar-la. Pot ser que git-%s estigui estropejat?"
 
-#: help.c:346
+#: help.c:368
 msgid "Uh oh. Your system reports no Git commands at all."
 msgstr "Ai. El vostre sistema no informa de cap ordre de Git."
 
-#: help.c:368
+#: help.c:390
 #, c-format
 msgid ""
 "WARNING: You called a Git command named '%s', which does not exist.\n"
 "Continuing under the assumption that you meant '%s'"
 msgstr ""
 "AVÍS: Heu invocat una ordre de Git amb nom '%s', la qual no existeix.\n"
 "Continuant sota l'assumpció que volíeu dir '%s'"
 
-#: help.c:373
+#: help.c:395
 #, c-format
 msgid "in %0.1f seconds automatically..."
 msgstr "en %0.1f segons automàticament..."
 
-#: help.c:380
+#: help.c:402
 #, c-format
 msgid "git: '%s' is not a git command. See 'git --help'."
 msgstr "git: '%s' no és una ordre de git. Vegeu 'git --help'."
 
-#: help.c:384 help.c:444
+#: help.c:406 help.c:466
 msgid ""
 "\n"
 "Did you mean this?"
 msgid_plural ""
 "\n"
 "Did you mean one of these?"
@@ -634,31 +642,31 @@
 "\n"
 "Volíeu dir això?"
 msgstr[1] ""
 "\n"
 "Volíeu dir un d'aquests?"
 
-#: help.c:440
+#: help.c:462
 #, c-format
 msgid "%s: %s - %s"
 msgstr "%s: %s - %s"
 
-#: lockfile.c:283
+#: lockfile.c:345
 msgid "BUG: reopen a lockfile that is still open"
 msgstr "BUG: reobrir un fitxer de bloqueig que encara està obert"
 
-#: lockfile.c:285
+#: lockfile.c:347
 msgid "BUG: reopen a lockfile that has been committed"
 msgstr "BUG: reobrir un fitxer de bloqueig que s'ha comès"
 
 #: merge.c:41
 msgid "failed to read the cache"
 msgstr "s'ha fallat en llegir la memòria cau"
 
-#: merge.c:94 builtin/checkout.c:374 builtin/checkout.c:580
-#: builtin/clone.c:662
+#: merge.c:94 builtin/checkout.c:376 builtin/checkout.c:587
+#: builtin/clone.c:647
 msgid "unable to write new index file"
 msgstr "no s'ha pogut escriure un fitxer d'índex nou"
 
 #: merge-recursive.c:189
 #, c-format
 msgid "(bad commit)\n"
@@ -670,249 +678,249 @@
 msgstr "addinfo_cache ha fallat per al camí '%s'"
 
 #: merge-recursive.c:270
 msgid "error building trees"
 msgstr "error en construir arbres"
 
-#: merge-recursive.c:688
+#: merge-recursive.c:687
 #, c-format
 msgid "failed to create path '%s'%s"
 msgstr "s'ha fallat en crear el camí '%s' %s"
 
-#: merge-recursive.c:699
+#: merge-recursive.c:698
 #, c-format
 msgid "Removing %s to make room for subdirectory\n"
 msgstr "Eliminant %s per a fer espai per al subdirectori\n"
 
-#: merge-recursive.c:713 merge-recursive.c:734
+#: merge-recursive.c:712 merge-recursive.c:733
 msgid ": perhaps a D/F conflict?"
 msgstr ": potser un conflicte D/F?"
 
-#: merge-recursive.c:724
+#: merge-recursive.c:723
 #, c-format
 msgid "refusing to lose untracked file at '%s'"
 msgstr "refusant perdre el fitxer no seguit a '%s'"
 
-#: merge-recursive.c:764
+#: merge-recursive.c:763
 #, c-format
 msgid "cannot read object %s '%s'"
 msgstr "no es pot llegir l'objecte %s '%s'"
 
-#: merge-recursive.c:766
+#: merge-recursive.c:765
 #, c-format
 msgid "blob expected for %s '%s'"
 msgstr "blob esperat per a %s '%s'"
 
-#: merge-recursive.c:789 builtin/clone.c:321
+#: merge-recursive.c:788 builtin/clone.c:306
 #, c-format
 msgid "failed to open '%s'"
 msgstr "s'ha fallat en obrir '%s'"
 
-#: merge-recursive.c:797
+#: merge-recursive.c:796
 #, c-format
 msgid "failed to symlink '%s'"
 msgstr "s'ha fallat en fer l'enllaç simbòlic '%s'"
 
-#: merge-recursive.c:800
+#: merge-recursive.c:799
 #, c-format
 msgid "do not know what to do with %06o %s '%s'"
 msgstr "no es sap què fer amb %06o %s '%s'"
 
-#: merge-recursive.c:938
+#: merge-recursive.c:937
 msgid "Failed to execute internal merge"
 msgstr "S'ha fallat en executar la fusió interna"
 
-#: merge-recursive.c:942
+#: merge-recursive.c:941
 #, c-format
 msgid "Unable to add %s to database"
 msgstr "no s'ha pogut afegir %s a la base de dades"
 
-#: merge-recursive.c:958
+#: merge-recursive.c:957
 msgid "unsupported object type in the tree"
 msgstr "tipus d'objecte no compatible en l'arbre"
 
-#: merge-recursive.c:1033 merge-recursive.c:1047
+#: merge-recursive.c:1032 merge-recursive.c:1046
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree."
 msgstr ""
 "CONFLICTE: (%s/supressió): %s suprimit en %s i %s en %s. La versió %s de %s "
 "s'ha deixat en l'arbre."
 
-#: merge-recursive.c:1039 merge-recursive.c:1052
+#: merge-recursive.c:1038 merge-recursive.c:1051
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree at %s."
 msgstr ""
 "CONFLICTE: (%s/supressió): %s suprimit en %s i %s en %s. La versió %s de %s "
 "s'ha deixat en l'arbre a %s."
 
-#: merge-recursive.c:1093
+#: merge-recursive.c:1092
 msgid "rename"
 msgstr "canvia de nom"
 
-#: merge-recursive.c:1093
+#: merge-recursive.c:1092
 msgid "renamed"
 msgstr "canviat de nom"
 
-#: merge-recursive.c:1149
+#: merge-recursive.c:1148
 #, c-format
 msgid "%s is a directory in %s adding as %s instead"
 msgstr "%s és un directori en %s; afegint com a %s en lloc"
 
-#: merge-recursive.c:1171
+#: merge-recursive.c:1170
 #, c-format
 msgid ""
 "CONFLICT (rename/rename): Rename \"%s\"->\"%s\" in branch \"%s\" rename \"%s"
 "\"->\"%s\" in \"%s\"%s"
 msgstr ""
 "CONFLICTE (canvi de nom/canvi de nom): Canvi de nom \"%s\"->\"%s\" en la "
 "branca \"%s\" canvi de nom \"%s\"->\"%s\" en \"%s\"%s"
 
-#: merge-recursive.c:1176
+#: merge-recursive.c:1175
 msgid " (left unresolved)"
 msgstr " (deixat sense resolució)"
 
-#: merge-recursive.c:1230
+#: merge-recursive.c:1229
 #, c-format
 msgid "CONFLICT (rename/rename): Rename %s->%s in %s. Rename %s->%s in %s"
 msgstr ""
 "CONFLICTE (canvi de nom/canvi de nom): Canvi de nom %s->%s en %s. Canvi de "
 "nom %s->%s en %s"
 
-#: merge-recursive.c:1260
+#: merge-recursive.c:1259
 #, c-format
 msgid "Renaming %s to %s and %s to %s instead"
 msgstr "Canviant el nom de %s a %s i %s a %s en lloc d'això"
 
-#: merge-recursive.c:1459
+#: merge-recursive.c:1458
 #, c-format
 msgid "CONFLICT (rename/add): Rename %s->%s in %s. %s added in %s"
 msgstr ""
 "CONFLICTE (supressió/afegiment): Canvi de nom %s->%s en %s. %s afegit en %s"
 
-#: merge-recursive.c:1469
+#: merge-recursive.c:1468
 #, c-format
 msgid "Adding merged %s"
 msgstr "Afegint %s fusionat"
 
-#: merge-recursive.c:1474 merge-recursive.c:1672
+#: merge-recursive.c:1473 merge-recursive.c:1671
 #, c-format
 msgid "Adding as %s instead"
 msgstr "Afegint com a %s en lloc d'això"
 
-#: merge-recursive.c:1525
+#: merge-recursive.c:1524
 #, c-format
 msgid "cannot read object %s"
 msgstr "no es pot llegir l'objecte %s"
 
-#: merge-recursive.c:1528
+#: merge-recursive.c:1527
 #, c-format
 msgid "object %s is not a blob"
 msgstr "L'objecte %s no és un blob"
 
-#: merge-recursive.c:1576
+#: merge-recursive.c:1575
 msgid "modify"
 msgstr "modifica"
 
-#: merge-recursive.c:1576
+#: merge-recursive.c:1575
 msgid "modified"
 msgstr "modificat"
 
-#: merge-recursive.c:1586
+#: merge-recursive.c:1585
 msgid "content"
 msgstr "contingut"
 
-#: merge-recursive.c:1593
+#: merge-recursive.c:1592
 msgid "add/add"
 msgstr "afegiment/afegiment"
 
-#: merge-recursive.c:1627
+#: merge-recursive.c:1626
 #, c-format
 msgid "Skipped %s (merged same as existing)"
 msgstr "%s saltat (el fusionat és igual a l'existent)"
 
-#: merge-recursive.c:1641
+#: merge-recursive.c:1640
 #, c-format
 msgid "Auto-merging %s"
 msgstr "Autofusionant %s"
 
-#: merge-recursive.c:1645 git-submodule.sh:1150
+#: merge-recursive.c:1644 git-submodule.sh:1150
 msgid "submodule"
 msgstr "submòdul"
 
-#: merge-recursive.c:1646
+#: merge-recursive.c:1645
 #, c-format
 msgid "CONFLICT (%s): Merge conflict in %s"
 msgstr "CONFLICTE (%s): Conflicte de fusió en %s"
 
-#: merge-recursive.c:1732
+#: merge-recursive.c:1731
 #, c-format
 msgid "Removing %s"
 msgstr "Eliminant %s"
 
-#: merge-recursive.c:1757
+#: merge-recursive.c:1756
 msgid "file/directory"
 msgstr "fitxer/directori"
 
-#: merge-recursive.c:1763
+#: merge-recursive.c:1762
 msgid "directory/file"
 msgstr "directori/fitxer"
 
-#: merge-recursive.c:1768
+#: merge-recursive.c:1767
 #, c-format
 msgid "CONFLICT (%s): There is a directory with name %s in %s. Adding %s as %s"
 msgstr ""
 "CONFLICTE (%s): Hi ha un directori amb nom %s en %s. Afegint %s com a %s"
 
-#: merge-recursive.c:1778
+#: merge-recursive.c:1777
 #, c-format
 msgid "Adding %s"
 msgstr "Afegint %s"
 
-#: merge-recursive.c:1795
+#: merge-recursive.c:1794
 msgid "Fatal merge failure, shouldn't happen."
 msgstr "Fallat de fusió fatal; això no ha de passar."
 
-#: merge-recursive.c:1814
+#: merge-recursive.c:1813
 msgid "Already up-to-date!"
 msgstr "Ja al dia!"
 
-#: merge-recursive.c:1823
+#: merge-recursive.c:1822
 #, c-format
 msgid "merging of trees %s and %s failed"
 msgstr "la fusió dels arbres %s i %s ha fallat"
 
-#: merge-recursive.c:1853
+#: merge-recursive.c:1852
 #, c-format
 msgid "Unprocessed path??? %s"
 msgstr "Camí no processat??? %s"
 
-#: merge-recursive.c:1901
+#: merge-recursive.c:1900
 msgid "Merging:"
 msgstr "Fusionant:"
 
-#: merge-recursive.c:1914
+#: merge-recursive.c:1913
 #, c-format
 msgid "found %u common ancestor:"
 msgid_plural "found %u common ancestors:"
 msgstr[0] "s'ha trobat %u avantpassat:"
 msgstr[1] "s'han trobat %u avantpassats:"
 
-#: merge-recursive.c:1951
+#: merge-recursive.c:1950
 msgid "merge returned no commit"
 msgstr "la fusió no ha retornat cap comissió"
 
-#: merge-recursive.c:2008
+#: merge-recursive.c:2007
 #, c-format
 msgid "Could not parse object '%s'"
 msgstr "No s'ha pogut analitzar l'objecte '%s'"
 
-#: merge-recursive.c:2019 builtin/merge.c:667
+#: merge-recursive.c:2018 builtin/merge.c:645
 msgid "Unable to write index."
 msgstr "No s'ha pogut escriure l'índex."
 
 #: notes-utils.c:41
 msgid "Cannot commit uninitialized/unreferenced notes tree"
 msgstr "No es pot cometre un arbre de notes no inicialitzat / no referenciat"
@@ -931,13 +939,13 @@
 #. environment variable, the second %s is its value
 #: notes-utils.c:119
 #, c-format
 msgid "Bad %s value: '%s'"
 msgstr "Valor dolent de %s: '%s'"
 
-#: object.c:241
+#: object.c:242
 #, c-format
 msgid "unable to parse object: %s"
 msgstr "no s'ha pogut analitzar l'objecte: %s"
 
 #: parse-options.c:546
 msgid "..."
@@ -1032,95 +1040,138 @@
 "Potser heu oblidat afegir o ':/' o '.' ?"
 
 #: pretty.c:968
 msgid "unable to parse --pretty format"
 msgstr "no s'ha pogut analitzar el format --pretty"
 
-#: progress.c:225
+#: progress.c:236
 msgid "done"
 msgstr "fet"
 
-#: read-cache.c:1275
+#: read-cache.c:1295
 #, c-format
 msgid ""
 "index.version set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "index.version establert, però el valor no és vàlid.\n"
 "Usant la versió %i"
 
-#: read-cache.c:1285
+#: read-cache.c:1305
 #, c-format
 msgid ""
 "GIT_INDEX_VERSION set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "GIT_INDEX_VERSION establert, però el valor no és vàlid.\n"
 "Usant la versió %i"
 
-#: remote.c:782
+#: remote.c:792
 #, c-format
 msgid "Cannot fetch both %s and %s to %s"
 msgstr "No es pot obtenir ambdós %s i %s a %s"
 
-#: remote.c:786
+#: remote.c:796
 #, c-format
 msgid "%s usually tracks %s, not %s"
 msgstr "%s generalment segueix %s, no %s"
 
-#: remote.c:790
+#: remote.c:800
 #, c-format
 msgid "%s tracks both %s and %s"
 msgstr "%s segueix ambdós %s i %s"
 
-#: remote.c:798
+#: remote.c:808
 msgid "Internal error"
 msgstr "Error intern"
 
-#: remote.c:1980
+#: remote.c:1723 remote.c:1766
+msgid "HEAD does not point to a branch"
+msgstr "HEAD no assenyala cap branca"
+
+#: remote.c:1732
+#, c-format
+msgid "no such branch: '%s'"
+msgstr "no hi ha tal branca: '%s'"
+
+#: remote.c:1735
+#, c-format
+msgid "no upstream configured for branch '%s'"
+msgstr "cap font configurada per a la branca '%s'"
+
+#: remote.c:1741
+#, c-format
+msgid "upstream branch '%s' not stored as a remote-tracking branch"
+msgstr "La branca font '%s' no s'emmagatzema com a branca amb seguiment remot"
+
+#: remote.c:1756
+#, c-format
+msgid "push destination '%s' on remote '%s' has no local tracking branch"
+msgstr ""
+"el destí de pujada '%s' en el remot '%s' no té cap branca seguidora local"
+
+#: remote.c:1771
+#, c-format
+msgid "branch '%s' has no remote for pushing"
+msgstr "la branca '%s' no té cap remot al qual pujar"
+
+#: remote.c:1782
+#, c-format
+msgid "push refspecs for '%s' do not include '%s'"
+msgstr "les especificacions de referència de '%s' no inclouen '%s'"
+
+#: remote.c:1795
+msgid "push has no destination (push.default is 'nothing')"
+msgstr "push no té destí (push.default és 'nothing')"
+
+#: remote.c:1817
+msgid "cannot resolve 'simple' push to a single destination"
+msgstr "no es pot resoldre una pujada 'simple' a un sol destí"
+
+#: remote.c:2124
 #, c-format
 msgid "Your branch is based on '%s', but the upstream is gone.\n"
 msgstr "La vostra branca està basada en '%s', però la font no hi és.\n"
 
-#: remote.c:1984
+#: remote.c:2128
 msgid "  (use \"git branch --unset-upstream\" to fixup)\n"
 msgstr "  (useu \"git branch --unset-upstream\" per a arreglar)\n"
 
-#: remote.c:1987
+#: remote.c:2131
 #, c-format
 msgid "Your branch is up-to-date with '%s'.\n"
 msgstr "La vostra branca està al dia amb '%s'.\n"
 
-#: remote.c:1991
+#: remote.c:2135
 #, c-format
 msgid "Your branch is ahead of '%s' by %d commit.\n"
 msgid_plural "Your branch is ahead of '%s' by %d commits.\n"
 msgstr[0] "La vostra branca està davant de '%s' per %d comissió.\n"
 msgstr[1] "La vostra branca està davant de '%s' per %d comissions.\n"
 
-#: remote.c:1997
+#: remote.c:2141
 msgid "  (use \"git push\" to publish your local commits)\n"
 msgstr "  (useu \"git push\" per a publicar les vostres comissions locals)\n"
 
-#: remote.c:2000
+#: remote.c:2144
 #, c-format
 msgid "Your branch is behind '%s' by %d commit, and can be fast-forwarded.\n"
 msgid_plural ""
 "Your branch is behind '%s' by %d commits, and can be fast-forwarded.\n"
 msgstr[0] ""
 "La vostra branca està darrere de '%s' per %d comissió, i pot avançar-se "
 "ràpidament.\n"
 msgstr[1] ""
 "La vostra branca està darrere de '%s' per %d comissions, i pot avançar-se "
 "ràpidament.\n"
 
-#: remote.c:2008
+#: remote.c:2152
 msgid "  (use \"git pull\" to update your local branch)\n"
 msgstr " (useu \"git pull\" per a actualitzar la vostra branca local)\n"
 
-#: remote.c:2011
+#: remote.c:2155
 #, c-format
 msgid ""
 "Your branch and '%s' have diverged,\n"
 "and have %d and %d different commit each, respectively.\n"
 msgid_plural ""
 "Your branch and '%s' have diverged,\n"
@@ -1129,17 +1180,17 @@
 "La vostra branca i '%s' s'han divergit,\n"
 "i tenen %d i %d comissió distinta cada una, respectivament.\n"
 msgstr[1] ""
 "La vostra branca i '%s' s'han divergit,\n"
 "i tenen %d i %d comissions distintes cada una, respectivament.\n"
 
-#: remote.c:2021
+#: remote.c:2165
 msgid "  (use \"git pull\" to merge the remote branch into yours)\n"
 msgstr "  (useu \"git pull\" per a fusionar la branca remota a la vostra)\n"
 
-#: revision.c:2348
+#: revision.c:2366
 msgid "--first-parent is incompatible with --bisect"
 msgstr "--first-parent és incompatible amb --bisect"
 
 #: run-command.c:83
 msgid "open /dev/null failed"
 msgstr "s'ha fallat en obrir /dev/null"
@@ -1150,28 +1201,28 @@
 msgstr "dup2(%d,%d) ha fallat"
 
 #: send-pack.c:272
 msgid "failed to sign the push certificate"
 msgstr "s'ha fallat en firmar el certificat de pujada"
 
-#: send-pack.c:356
+#: send-pack.c:378
 msgid "the receiving end does not support --signed push"
 msgstr "el destí receptor no admet pujar --signed"
 
-#: send-pack.c:366
+#: send-pack.c:389
 msgid "the receiving end does not support --atomic push"
 msgstr "el destí receptor no admet pujar --atomic"
 
-#: sequencer.c:172 builtin/merge.c:782 builtin/merge.c:893 builtin/merge.c:995
-#: builtin/merge.c:1005
+#: sequencer.c:172 builtin/merge.c:760 builtin/merge.c:871 builtin/merge.c:973
+#: builtin/merge.c:983
 #, c-format
 msgid "Could not open '%s' for writing"
 msgstr "No s'ha pogut obrir '%s' per a escriptura"
 
-#: sequencer.c:174 builtin/merge.c:344 builtin/merge.c:785 builtin/merge.c:997
-#: builtin/merge.c:1010
+#: sequencer.c:174 builtin/merge.c:344 builtin/merge.c:763 builtin/merge.c:975
+#: builtin/merge.c:988
 #, c-format
 msgid "Could not write to '%s'"
 msgstr "No s'ha pogut escriure al '%s'"
 
 #: sequencer.c:195
 msgid ""
@@ -1364,13 +1415,13 @@
 msgstr "no es pot resoldre HEAD"
 
 #: sequencer.c:886
 msgid "cannot abort from a branch yet to be born"
 msgstr "no es pot avortar des d'una branca que encara ha de nàixer"
 
-#: sequencer.c:908 builtin/apply.c:4288
+#: sequencer.c:908 builtin/apply.c:4291
 #, c-format
 msgid "cannot open %s: %s"
 msgstr "no es pot obrir %s: %s"
 
 #: sequencer.c:911
 #, c-format
@@ -1407,13 +1458,18 @@
 msgstr "No es pot revertir com a comissió inicial"
 
 #: sequencer.c:1124
 msgid "Can't cherry-pick into empty head"
 msgstr "No es pot recollir cireres en un cap buit"
 
-#: sha1_name.c:440
+#: setup.c:243
+#, c-format
+msgid "failed to read %s"
+msgstr "s'ha fallat en llegir %s"
+
+#: sha1_name.c:453
 msgid ""
 "Git normally never creates a ref that ends with 40 hex characters\n"
 "because it will be ignored when you just specify 40-hex. These refs\n"
 "may be created by mistake. For example,\n"
 "\n"
 "  git checkout -b $br $(git rev-parse ...)\n"
@@ -1431,32 +1487,12 @@
 "\n"
 "on \"$br\" és d'alguna manera buit i una referència de 40 caràcters\n"
 "hexadecimals. Si us plau, examineu aquests referències i potser\n"
 "suprimiu-les. Desactiveu aquest missatge executant\n"
 "\"git config advice.objectNameWarning false\""
 
-#: sha1_name.c:1068
-msgid "HEAD does not point to a branch"
-msgstr "HEAD no assenyala cap branca"
-
-#: sha1_name.c:1071
-#, c-format
-msgid "No such branch: '%s'"
-msgstr "No hi ha tal branca: '%s'"
-
-#: sha1_name.c:1073
-#, c-format
-msgid "No upstream configured for branch '%s'"
-msgstr "Cap font configurada per a la branca '%s'"
-
-#: sha1_name.c:1077
-#, c-format
-msgid "Upstream branch '%s' not stored as a remote-tracking branch"
-msgstr ""
-"La branca font '%s' no s'emmagatzema com a branca que segueixi al remot"
-
 #: submodule.c:64 submodule.c:98
 msgid "Cannot change unmerged .gitmodules, resolve merge conflicts first"
 msgstr ""
 "No es pot canviar un .gitmodules no fusionat, primer resoldreu els "
 "conflictes de fusió"
 
@@ -1476,18 +1512,13 @@
 msgstr "No s'ha pogut eliminar l'entrada de .gitmodules per a %s"
 
 #: submodule.c:120
 msgid "staging updated .gitmodules failed"
 msgstr "L'allistament del .gitmodules actualitzat ha fallat"
 
-#: submodule.c:1109 builtin/init-db.c:371
-#, c-format
-msgid "Could not create git link %s"
-msgstr "No s'ha pogut crear l'enllaç de git %s"
-
-#: submodule.c:1120
+#: submodule.c:1115
 #, c-format
 msgid "Could not set core.worktree in %s"
 msgstr "No s'ha pogut establir core.worktree en %s"
 
 #: trailer.c:491 trailer.c:495 trailer.c:499 trailer.c:553 trailer.c:557
 #: trailer.c:561
@@ -1511,13 +1542,13 @@
 msgstr "no s'ha pogut llegir el fitxer d'entrada '%s'"
 
 #: trailer.c:704
 msgid "could not read from stdin"
 msgstr "No s'ha pogut llegir des d'stdin"
 
-#: unpack-trees.c:202
+#: unpack-trees.c:203
 msgid "Checking out files"
 msgstr "Agafant fitxers"
 
 #: urlmatch.c:120
 msgid "invalid URL scheme name or missing '://' suffix"
 msgstr "l'esquema d'URL no és vàlida o li manca el sufix '://'"
@@ -1567,12 +1598,27 @@
 msgstr "no hi ha tal usuari"
 
 #: wrapper.c:564
 msgid "unable to get current working directory"
 msgstr "no s'ha pogut obtenir el directori de treball actual"
 
+#: wrapper.c:575
+#, c-format
+msgid "could not open %s for writing"
+msgstr "no s'ha pogut obrir '%s' per a escriptura"
+
+#: wrapper.c:587
+#, c-format
+msgid "could not write to %s"
+msgstr "no s'ha pogut escriure a %s"
+
+#: wrapper.c:593
+#, c-format
+msgid "could not close %s"
+msgstr "no s'ha pogut tancar %s"
+
 #: wt-status.c:150
 msgid "Unmerged paths:"
 msgstr "Camins sense fusionar:"
 
 #: wt-status.c:177 wt-status.c:204
 #, c-format
@@ -1594,17 +1640,17 @@
 "resolució)"
 
 #: wt-status.c:187
 msgid "  (use \"git rm <file>...\" to mark resolution)"
 msgstr "  (useu \"git rm <fitxer>...\" per a senyalar resolució)"
 
-#: wt-status.c:198 wt-status.c:878
+#: wt-status.c:198 wt-status.c:881
 msgid "Changes to be committed:"
 msgstr "Canvis a cometre:"
 
-#: wt-status.c:216 wt-status.c:887
+#: wt-status.c:216 wt-status.c:890
 msgid "Changes not staged for commit:"
 msgstr "Canvis no allistats per a cometre:"
 
 #: wt-status.c:220
 msgid "  (use \"git add <file>...\" to update what will be committed)"
 msgstr "  (useu \"git add <fitxer>...\" per a actualitzar què es cometrà)"
@@ -1709,302 +1755,302 @@
 
 #: wt-status.c:391
 #, c-format
 msgid "bug: unhandled diff status %c"
 msgstr "bug: estat de diferència no gestionat %c"
 
-#: wt-status.c:753
+#: wt-status.c:755
 msgid "Submodules changed but not updated:"
 msgstr "Submòduls canviats però no actualitzats:"
 
-#: wt-status.c:755
+#: wt-status.c:757
 msgid "Submodule changes to be committed:"
 msgstr "Canvis de submòdul a cometre:"
 
-#: wt-status.c:835
+#: wt-status.c:838
 msgid ""
 "Do not touch the line above.\n"
 "Everything below will be removed."
 msgstr ""
 "No toqueu la línia de sobre.\n"
 "Tot el que hi ha a sota s'eliminarà."
 
-#: wt-status.c:946
+#: wt-status.c:949
 msgid "You have unmerged paths."
 msgstr "Teniu camins sense fusionar."
 
-#: wt-status.c:949
+#: wt-status.c:952
 msgid "  (fix conflicts and run \"git commit\")"
 msgstr "  (arregleu els conflictes i executeu \"git commit\")"
 
-#: wt-status.c:952
+#: wt-status.c:955
 msgid "All conflicts fixed but you are still merging."
 msgstr "Tots els conflictes estan arreglats però encara esteu fusionant."
 
-#: wt-status.c:955
+#: wt-status.c:958
 msgid "  (use \"git commit\" to conclude merge)"
 msgstr "  (useu \"git commit\" per a concloure la fusió)"
 
-#: wt-status.c:965
+#: wt-status.c:968
 msgid "You are in the middle of an am session."
 msgstr "Esteu enmig d'una sessió am."
 
-#: wt-status.c:968
+#: wt-status.c:971
 msgid "The current patch is empty."
 msgstr "El pedaç actual està buit."
 
-#: wt-status.c:972
+#: wt-status.c:975
 msgid "  (fix conflicts and then run \"git am --continue\")"
 msgstr "  (arregleu els conflictes i després executeu \"git am --continue\")"
 
-#: wt-status.c:974
+#: wt-status.c:977
 msgid "  (use \"git am --skip\" to skip this patch)"
 msgstr "  (useu \"git am --skip\" per a ometre aquest pedaç)"
 
-#: wt-status.c:976
+#: wt-status.c:979
 msgid "  (use \"git am --abort\" to restore the original branch)"
 msgstr "  (useu \"git am --abort\" per a restaurar la branca original)"
 
-#: wt-status.c:1036 wt-status.c:1053
+#: wt-status.c:1039 wt-status.c:1056
 #, c-format
 msgid "You are currently rebasing branch '%s' on '%s'."
 msgstr "Actualment esteu rebasant la branca '%s' en '%s'."
 
-#: wt-status.c:1041 wt-status.c:1058
+#: wt-status.c:1044 wt-status.c:1061
 msgid "You are currently rebasing."
 msgstr "Actualment esteu rebasant."
 
-#: wt-status.c:1044
+#: wt-status.c:1047
 msgid "  (fix conflicts and then run \"git rebase --continue\")"
 msgstr ""
 "  (arregleu els conflictes i després executeu \"git rebase --continue\")"
 
-#: wt-status.c:1046
+#: wt-status.c:1049
 msgid "  (use \"git rebase --skip\" to skip this patch)"
 msgstr "  (useu \"git rebase --skip\" per a saltar aquest pedaç)"
 
-#: wt-status.c:1048
+#: wt-status.c:1051
 msgid "  (use \"git rebase --abort\" to check out the original branch)"
 msgstr "  (useu \"git rebase --abort\" per a agafar la branca original)"
 
-#: wt-status.c:1061
+#: wt-status.c:1064
 msgid "  (all conflicts fixed: run \"git rebase --continue\")"
 msgstr "  (tots els conflictes arreglats: executeu \"git rebase --continue\")"
 
-#: wt-status.c:1065
+#: wt-status.c:1068
 #, c-format
 msgid ""
 "You are currently splitting a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "Actualment esteu dividint una comissió mentre rebaseu la branca '%s' en '%s'."
 
-#: wt-status.c:1070
+#: wt-status.c:1073
 msgid "You are currently splitting a commit during a rebase."
 msgstr "Actualment esteu dividint una comissió durant una rebase."
 
-#: wt-status.c:1073
+#: wt-status.c:1076
 msgid "  (Once your working directory is clean, run \"git rebase --continue\")"
 msgstr ""
 "  (Una vegada que el vostre directori de treball sigui net, executeu \"git "
 "rebase --continue\")"
 
-#: wt-status.c:1077
+#: wt-status.c:1080
 #, c-format
 msgid "You are currently editing a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "Actualment esteu editant una comissió mentre rebaseu la branca '%s' en '%s'."
 
-#: wt-status.c:1082
+#: wt-status.c:1085
 msgid "You are currently editing a commit during a rebase."
 msgstr "Actualment esteu editant una comissió durant una rebase."
 
-#: wt-status.c:1085
+#: wt-status.c:1088
 msgid "  (use \"git commit --amend\" to amend the current commit)"
 msgstr "  (useu \"git commit --amend\" per a esmenar la comissió actual)"
 
-#: wt-status.c:1087
+#: wt-status.c:1090
 msgid ""
 "  (use \"git rebase --continue\" once you are satisfied with your changes)"
 msgstr ""
 "  (useu \"git rebase --continue\" una vegada que esteu satisfet amb els "
 "vostres canvis)"
 
-#: wt-status.c:1097
+#: wt-status.c:1100
 #, c-format
 msgid "You are currently cherry-picking commit %s."
 msgstr "Actualment esteu recollint com a cirera la comissió %s."
 
-#: wt-status.c:1102
+#: wt-status.c:1105
 msgid "  (fix conflicts and run \"git cherry-pick --continue\")"
 msgstr "  (arregleu els conflictes i executeu \"git cherry-pick --continue\")"
 
-#: wt-status.c:1105
+#: wt-status.c:1108
 msgid "  (all conflicts fixed: run \"git cherry-pick --continue\")"
 msgstr ""
 "  (tots els conflictes arreglats: executeu \"git cherry-pick --continue\")"
 
-#: wt-status.c:1107
+#: wt-status.c:1110
 msgid "  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)"
 msgstr ""
 "  (useu \"git cherry-pick --abort\" per a cancel·lar l'operació de recull de "
 "cireres)"
 
-#: wt-status.c:1116
+#: wt-status.c:1119
 #, c-format
 msgid "You are currently reverting commit %s."
 msgstr "Actualment esteu revertint la comissió %s."
 
-#: wt-status.c:1121
+#: wt-status.c:1124
 msgid "  (fix conflicts and run \"git revert --continue\")"
 msgstr "  (arregleu els conflictes i executeu \"git revert --continue\")"
 
-#: wt-status.c:1124
+#: wt-status.c:1127
 msgid "  (all conflicts fixed: run \"git revert --continue\")"
 msgstr ""
 "  (tots els conflictes estan arreglats: executeu \"git revert --continue\")"
 
-#: wt-status.c:1126
+#: wt-status.c:1129
 msgid "  (use \"git revert --abort\" to cancel the revert operation)"
 msgstr ""
 "  (useu \"git revert --abort\" per a cancel·lar l'operació de reversió)"
 
-#: wt-status.c:1137
+#: wt-status.c:1140
 #, c-format
 msgid "You are currently bisecting, started from branch '%s'."
 msgstr "Actualment esteu bisecant, heu començat des de la branca '%s'."
 
-#: wt-status.c:1141
+#: wt-status.c:1144
 msgid "You are currently bisecting."
 msgstr "Actualment esteu bisecant."
 
-#: wt-status.c:1144
+#: wt-status.c:1147
 msgid "  (use \"git bisect reset\" to get back to the original branch)"
 msgstr "  (useu \"git bisect reset\" per a tornar a la branca original)"
 
-#: wt-status.c:1321
+#: wt-status.c:1324
 msgid "On branch "
 msgstr "En la branca "
 
-#: wt-status.c:1328
+#: wt-status.c:1331
 msgid "rebase in progress; onto "
 msgstr "rebase en progrés; en "
 
-#: wt-status.c:1333
+#: wt-status.c:1336
 msgid "HEAD detached at "
 msgstr "HEAD separat a "
 
-#: wt-status.c:1335
+#: wt-status.c:1338
 msgid "HEAD detached from "
 msgstr "HEAD separat de "
 
-#: wt-status.c:1338
+#: wt-status.c:1341
 msgid "Not currently on any branch."
 msgstr "Actualment no en cap branca."
 
-#: wt-status.c:1355
+#: wt-status.c:1358
 msgid "Initial commit"
 msgstr "Comissió inicial"
 
-#: wt-status.c:1369
+#: wt-status.c:1372
 msgid "Untracked files"
 msgstr "Fitxers no seguits"
 
-#: wt-status.c:1371
+#: wt-status.c:1374
 msgid "Ignored files"
 msgstr "Fitxers ignorats"
 
-#: wt-status.c:1375
+#: wt-status.c:1378
 #, c-format
 msgid ""
 "It took %.2f seconds to enumerate untracked files. 'status -uno'\n"
 "may speed it up, but you have to be careful not to forget to add\n"
 "new files yourself (see 'git help status')."
 msgstr ""
 "S'ha trigat %.2f segons a enumerar fitxers no seguits.\n"
 "'status -uno' pot accelerar-ho, però heu d'anar amb compte de no\n"
 "oblidar-vos d'afegir fitxers nous per vós mateix (vegeu\n"
 "'git help status')."
 
-#: wt-status.c:1381
+#: wt-status.c:1384
 #, c-format
 msgid "Untracked files not listed%s"
 msgstr "Els fitxers no seguits no estan llistats%s"
 
-#: wt-status.c:1383
+#: wt-status.c:1386
 msgid " (use -u option to show untracked files)"
 msgstr " (useu l'opció -u per a mostrar els fitxers no seguits)"
 
-#: wt-status.c:1389
+#: wt-status.c:1392
 msgid "No changes"
 msgstr "Sense canvis"
 
-#: wt-status.c:1394
+#: wt-status.c:1397
 #, c-format
 msgid "no changes added to commit (use \"git add\" and/or \"git commit -a\")\n"
 msgstr ""
 "no hi ha canvis afegits a cometre (useu \"git add\" o \"git commit -a\")\n"
 
-#: wt-status.c:1397
+#: wt-status.c:1400
 #, c-format
 msgid "no changes added to commit\n"
 msgstr "no hi ha canvis afegits a cometre\n"
 
-#: wt-status.c:1400
+#: wt-status.c:1403
 #, c-format
 msgid ""
 "nothing added to commit but untracked files present (use \"git add\" to "
 "track)\n"
 msgstr ""
 "no hi ha res afegit a cometre però fitxers no seguits estan presents (useu "
 "\"git add\" per a seguir-los)\n"
 
-#: wt-status.c:1403
+#: wt-status.c:1406
 #, c-format
 msgid "nothing added to commit but untracked files present\n"
 msgstr "no hi ha res afegit a cometre però fitxers no seguits estan presents\n"
 
-#: wt-status.c:1406
+#: wt-status.c:1409
 #, c-format
 msgid "nothing to commit (create/copy files and use \"git add\" to track)\n"
 msgstr ""
 "no hi ha res a cometre (creeu/copieu fitxers i useu \"git add\" per a seguir-"
 "los)\n"
 
-#: wt-status.c:1409 wt-status.c:1414
+#: wt-status.c:1412 wt-status.c:1417
 #, c-format
 msgid "nothing to commit\n"
 msgstr "no hi ha res a cometre\n"
 
-#: wt-status.c:1412
+#: wt-status.c:1415
 #, c-format
 msgid "nothing to commit (use -u to show untracked files)\n"
 msgstr ""
 "no hi ha res a cometre (useu -u per a mostrar els fitxers no seguits)\n"
 
-#: wt-status.c:1416
+#: wt-status.c:1419
 #, c-format
 msgid "nothing to commit, working directory clean\n"
 msgstr "no hi ha res a cometre, directori de treball net\n"
 
-#: wt-status.c:1525
+#: wt-status.c:1528
 msgid "HEAD (no branch)"
 msgstr "HEAD (sense branca)"
 
-#: wt-status.c:1531
+#: wt-status.c:1534
 msgid "Initial commit on "
 msgstr "Comissió inicial en "
 
-#: wt-status.c:1563
+#: wt-status.c:1561
 msgid "gone"
 msgstr "no hi és"
 
-#: wt-status.c:1565 wt-status.c:1573
+#: wt-status.c:1563 wt-status.c:1571
 msgid "behind "
 msgstr "darrere "
 
-#: compat/precompose_utf8.c:55 builtin/clone.c:360
+#: compat/precompose_utf8.c:55 builtin/clone.c:345
 #, c-format
 msgid "failed to unlink '%s'"
 msgstr "s'ha fallat en desenllaçar '%s'"
 
 #: builtin/add.c:22
 msgid "git add [<options>] [--] <pathspec>..."
@@ -2025,135 +2071,139 @@
 msgstr "elimina '%s'\n"
 
 #: builtin/add.c:134
 msgid "Unstaged changes after refreshing the index:"
 msgstr "Canvis no allistats després d'actualitzar l'índex:"
 
-#: builtin/add.c:194 builtin/rev-parse.c:785
+#: builtin/add.c:194 builtin/rev-parse.c:796
 msgid "Could not read the index"
 msgstr "No s'ha pogut llegir l'índex"
 
 #: builtin/add.c:205
 #, c-format
 msgid "Could not open '%s' for writing."
 msgstr "No s'ha pogut obrir '%s' per a escriptura."
 
 #: builtin/add.c:209
 msgid "Could not write patch"
 msgstr "No s'ha pogut escriure el pedaç"
 
-#: builtin/add.c:214
+#: builtin/add.c:212
+msgid "editing patch failed"
+msgstr "l'edició del pedaç ha fallat"
+
+#: builtin/add.c:215
 #, c-format
 msgid "Could not stat '%s'"
 msgstr "No s'ha pogut fer stat a '%s'"
 
-#: builtin/add.c:216
+#: builtin/add.c:217
 msgid "Empty patch. Aborted."
 msgstr "El pedaç és buit. Avortat."
 
-#: builtin/add.c:221
+#: builtin/add.c:222
 #, c-format
 msgid "Could not apply '%s'"
 msgstr "No s'ha pogut aplicar '%s'"
 
-#: builtin/add.c:231
+#: builtin/add.c:232
 msgid "The following paths are ignored by one of your .gitignore files:\n"
 msgstr ""
 "Els camins següents s'ignoren per un dels vostres fitxers .gitignore:\n"
 
-#: builtin/add.c:248 builtin/clean.c:876 builtin/fetch.c:107 builtin/mv.c:110
-#: builtin/prune-packed.c:55 builtin/push.c:508 builtin/remote.c:1372
-#: builtin/rm.c:269
+#: builtin/add.c:249 builtin/clean.c:874 builtin/fetch.c:107 builtin/mv.c:110
+#: builtin/prune-packed.c:55 builtin/push.c:508 builtin/remote.c:1369
+#: builtin/rm.c:268
 msgid "dry run"
 msgstr "marxa en sec"
 
-#: builtin/add.c:249 builtin/apply.c:4577 builtin/check-ignore.c:19
-#: builtin/commit.c:1322 builtin/count-objects.c:63 builtin/fsck.c:608
+#: builtin/add.c:250 builtin/apply.c:4580 builtin/check-ignore.c:19
+#: builtin/commit.c:1322 builtin/count-objects.c:63 builtin/fsck.c:616
 #: builtin/log.c:1617 builtin/mv.c:109 builtin/read-tree.c:114
 msgid "be verbose"
 msgstr "sigues detallat"
 
-#: builtin/add.c:251
+#: builtin/add.c:252
 msgid "interactive picking"
 msgstr "recull interactiu"
 
-#: builtin/add.c:252 builtin/checkout.c:1126 builtin/reset.c:286
+#: builtin/add.c:253 builtin/checkout.c:1221 builtin/reset.c:286
 msgid "select hunks interactively"
 msgstr "selecciona els trossos interactivament"
 
-#: builtin/add.c:253
+#: builtin/add.c:254
 msgid "edit current diff and apply"
 msgstr "edita la diferència actual i aplica-la"
 
-#: builtin/add.c:254
+#: builtin/add.c:255
 msgid "allow adding otherwise ignored files"
 msgstr "permet afegir fitxers que d'altra manera s'ignoren"
 
-#: builtin/add.c:255
+#: builtin/add.c:256
 msgid "update tracked files"
 msgstr "actualitza els fitxers seguits"
 
-#: builtin/add.c:256
+#: builtin/add.c:257
 msgid "record only the fact that the path will be added later"
 msgstr "registra només el fet que el camí s'afegirà més tard"
 
-#: builtin/add.c:257
+#: builtin/add.c:258
 msgid "add changes from all tracked and untracked files"
 msgstr "afegeix els canvis de tots els fitxers seguits i no seguits"
 
-#: builtin/add.c:260
+#: builtin/add.c:261
 msgid "ignore paths removed in the working tree (same as --no-all)"
 msgstr ""
 "ignora els camins eliminats en l'arbre de treball (el mateix que --no-all)"
 
-#: builtin/add.c:262
+#: builtin/add.c:263
 msgid "don't add, only refresh the index"
 msgstr "no afegeixis, només actualitza l'índex"
 
-#: builtin/add.c:263
+#: builtin/add.c:264
 msgid "just skip files which cannot be added because of errors"
 msgstr "només omet els fitxers que no es poden afegir a causa d'errors"
 
-#: builtin/add.c:264
+#: builtin/add.c:265
 msgid "check if - even missing - files are ignored in dry run"
 msgstr ""
 "comproveu si els fitxers - fins i tot els absents - s'ignoren en marxa en sec"
 
-#: builtin/add.c:286
+#: builtin/add.c:287
 #, c-format
 msgid "Use -f if you really want to add them.\n"
 msgstr "Useu -f si realment els voleu afegir.\n"
 
-#: builtin/add.c:293
+#: builtin/add.c:294
 msgid "adding files failed"
 msgstr "l'afegiment de fitxers ha fallat"
 
-#: builtin/add.c:329
+#: builtin/add.c:330
 msgid "-A and -u are mutually incompatible"
 msgstr "-A i -u són mutualment incompatibles"
 
-#: builtin/add.c:336
+#: builtin/add.c:337
 msgid "Option --ignore-missing can only be used together with --dry-run"
 msgstr "L'opció --ignore-missing només es pot usar junt amb --dry-run"
 
-#: builtin/add.c:357
+#: builtin/add.c:358
 #, c-format
 msgid "Nothing specified, nothing added.\n"
 msgstr "Res especificat, res afegit.\n"
 
-#: builtin/add.c:358
+#: builtin/add.c:359
 #, c-format
 msgid "Maybe you wanted to say 'git add .'?\n"
 msgstr "Potser volíeu dir 'git add .'?\n"
 
-#: builtin/add.c:363 builtin/check-ignore.c:172 builtin/clean.c:920
-#: builtin/commit.c:335 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:299
+#: builtin/add.c:364 builtin/check-ignore.c:172 builtin/clean.c:918
+#: builtin/commit.c:335 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:298
 msgid "index file corrupt"
 msgstr "fitxer d'índex malmès"
 
-#: builtin/add.c:446 builtin/apply.c:4675 builtin/mv.c:279 builtin/rm.c:431
+#: builtin/add.c:447 builtin/apply.c:4678 builtin/mv.c:279 builtin/rm.c:430
 msgid "Unable to write new index file"
 msgstr "no s'ha pogut escriure un fitxer d'índex nou"
 
 #: builtin/apply.c:59
 msgid "git apply [<options>] [<patch>...]"
 msgstr "git apply [<opcions>] [<pedaç>...]"
@@ -2228,428 +2278,428 @@
 "a la capçalera de git diff li manca informació de nom de fitxer en eliminar "
 "%d component de nom de camí inicial (línia %d)"
 msgstr[1] ""
 "a la capçalera de git diff li manca informació de nom de fitxer en eliminar "
 "%d components de nom de camí inicial (línia %d)"
 
-#: builtin/apply.c:1656
+#: builtin/apply.c:1659
 msgid "new file depends on old contents"
 msgstr "el fitxer nou depèn dels continguts antics"
 
-#: builtin/apply.c:1658
+#: builtin/apply.c:1661
 msgid "deleted file still has contents"
 msgstr "el fitxer suprimit encara té continguts"
 
-#: builtin/apply.c:1684
+#: builtin/apply.c:1687
 #, c-format
 msgid "corrupt patch at line %d"
 msgstr "el pedaç és malmès a la línia %d"
 
-#: builtin/apply.c:1720
+#: builtin/apply.c:1723
 #, c-format
 msgid "new file %s depends on old contents"
 msgstr "el fitxer nou %s depèn dels continguts antics"
 
-#: builtin/apply.c:1722
+#: builtin/apply.c:1725
 #, c-format
 msgid "deleted file %s still has contents"
 msgstr "el fitxer suprimit %s encara té continguts"
 
-#: builtin/apply.c:1725
+#: builtin/apply.c:1728
 #, c-format
 msgid "** warning: file %s becomes empty but is not deleted"
 msgstr "** avís: el fitxer %s queda buit però no es suprimeix"
 
-#: builtin/apply.c:1871
+#: builtin/apply.c:1874
 #, c-format
 msgid "corrupt binary patch at line %d: %.*s"
 msgstr "pedaç binari malmès a la línia %d: %.*s"
 
-#: builtin/apply.c:1900
+#: builtin/apply.c:1903
 #, c-format
 msgid "unrecognized binary patch at line %d"
 msgstr "pedaç binari no reconegut a la línia %d"
 
-#: builtin/apply.c:2051
+#: builtin/apply.c:2054
 #, c-format
 msgid "patch with only garbage at line %d"
 msgstr "pedaç amb només escombraries a la línia %d"
 
-#: builtin/apply.c:2141
+#: builtin/apply.c:2144
 #, c-format
 msgid "unable to read symlink %s"
 msgstr "no s'ha pogut llegir l'enllaç simbòlic %s"
 
-#: builtin/apply.c:2145
+#: builtin/apply.c:2148
 #, c-format
 msgid "unable to open or read %s"
 msgstr "no s'ha pogut obrir o llegir %s"
 
-#: builtin/apply.c:2778
+#: builtin/apply.c:2781
 #, c-format
 msgid "invalid start of line: '%c'"
 msgstr "inici de línia no vàlid: '%c'"
 
-#: builtin/apply.c:2897
+#: builtin/apply.c:2900
 #, c-format
 msgid "Hunk #%d succeeded at %d (offset %d line)."
 msgid_plural "Hunk #%d succeeded at %d (offset %d lines)."
 msgstr[0] "El tros #%d ha tingut éxit a %d (desplaçament %d línia)."
 msgstr[1] "El tros #%d ha tingut éxit a %d (desplaçament %d línies)."
 
-#: builtin/apply.c:2909
+#: builtin/apply.c:2912
 #, c-format
 msgid "Context reduced to (%ld/%ld) to apply fragment at %d"
 msgstr "El context s'ha reduït a (%ld/%ld) per a aplicar el fragment a %d"
 
-#: builtin/apply.c:2915
+#: builtin/apply.c:2918
 #, c-format
 msgid ""
 "while searching for:\n"
 "%.*s"
 msgstr ""
 "tot cercant:\n"
 "%.*s"
 
-#: builtin/apply.c:2935
+#: builtin/apply.c:2938
 #, c-format
 msgid "missing binary patch data for '%s'"
 msgstr "manquen les dades de pedaç binari de '%s'"
 
-#: builtin/apply.c:3036
+#: builtin/apply.c:3039
 #, c-format
 msgid "binary patch does not apply to '%s'"
 msgstr "el pedaç binari no s'aplica a '%s'"
 
-#: builtin/apply.c:3042
+#: builtin/apply.c:3045
 #, c-format
 msgid "binary patch to '%s' creates incorrect result (expecting %s, got %s)"
 msgstr ""
 "el pedaç binari a '%s' crea un resultat incorrecte (esperant %s, %s rebut)"
 
-#: builtin/apply.c:3063
+#: builtin/apply.c:3066
 #, c-format
 msgid "patch failed: %s:%ld"
 msgstr "el pedaç ha fallat: %s:%ld"
 
-#: builtin/apply.c:3187
+#: builtin/apply.c:3190
 #, c-format
 msgid "cannot checkout %s"
 msgstr "no es pot agafar %s"
 
-#: builtin/apply.c:3232 builtin/apply.c:3243 builtin/apply.c:3288
+#: builtin/apply.c:3235 builtin/apply.c:3246 builtin/apply.c:3291
 #, c-format
 msgid "read of %s failed"
 msgstr "la lectura de %s ha fallat"
 
-#: builtin/apply.c:3240
+#: builtin/apply.c:3243
 #, c-format
 msgid "reading from '%s' beyond a symbolic link"
 msgstr "llegint de '%s' més enllà d'un enllaç simbòlic"
 
-#: builtin/apply.c:3268 builtin/apply.c:3490
+#: builtin/apply.c:3271 builtin/apply.c:3493
 #, c-format
 msgid "path %s has been renamed/deleted"
 msgstr "el camí %s s'ha canviat de nom / s'ha suprimit"
 
-#: builtin/apply.c:3349 builtin/apply.c:3504
+#: builtin/apply.c:3352 builtin/apply.c:3507
 #, c-format
 msgid "%s: does not exist in index"
 msgstr "%s: no existeix en l'índex"
 
-#: builtin/apply.c:3353 builtin/apply.c:3496 builtin/apply.c:3518
+#: builtin/apply.c:3356 builtin/apply.c:3499 builtin/apply.c:3521
 #, c-format
 msgid "%s: %s"
 msgstr "%s: %s"
 
-#: builtin/apply.c:3358 builtin/apply.c:3512
+#: builtin/apply.c:3361 builtin/apply.c:3515
 #, c-format
 msgid "%s: does not match index"
 msgstr "%s: no coincideix amb l'índex"
 
-#: builtin/apply.c:3460
+#: builtin/apply.c:3463
 msgid "removal patch leaves file contents"
 msgstr "el pedaç de supressió deixa els continguts dels fitxers"
 
-#: builtin/apply.c:3529
+#: builtin/apply.c:3532
 #, c-format
 msgid "%s: wrong type"
 msgstr "%s: tipus erroni"
 
-#: builtin/apply.c:3531
+#: builtin/apply.c:3534
 #, c-format
 msgid "%s has type %o, expected %o"
 msgstr "%s és del tipus %o, s'esperava %o"
 
-#: builtin/apply.c:3690 builtin/apply.c:3692
+#: builtin/apply.c:3693 builtin/apply.c:3695
 #, c-format
 msgid "invalid path '%s'"
 msgstr "camí no vàlid: %s"
 
-#: builtin/apply.c:3747
+#: builtin/apply.c:3750
 #, c-format
 msgid "%s: already exists in index"
 msgstr "%s: ja existeix en l'índex"
 
-#: builtin/apply.c:3750
+#: builtin/apply.c:3753
 #, c-format
 msgid "%s: already exists in working directory"
 msgstr "%s: ja existeix en el directori de treball"
 
-#: builtin/apply.c:3770
+#: builtin/apply.c:3773
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o)"
 msgstr "el mode nou (%o) de %s no coincideix amb el mode antic (%o)"
 
-#: builtin/apply.c:3775
+#: builtin/apply.c:3778
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o) of %s"
 msgstr "el mode nou (%o) de %s no coincideix amb el mode antic (%o) de %s"
 
-#: builtin/apply.c:3795
+#: builtin/apply.c:3798
 #, c-format
 msgid "affected file '%s' is beyond a symbolic link"
 msgstr "el fitxer afectat '%s' és més enllà d'un enllaç simbòlic"
 
-#: builtin/apply.c:3799
+#: builtin/apply.c:3802
 #, c-format
 msgid "%s: patch does not apply"
 msgstr "%s: el pedaç no aplica"
 
-#: builtin/apply.c:3813
+#: builtin/apply.c:3816
 #, c-format
 msgid "Checking patch %s..."
 msgstr "Comprovant el pedaç %s..."
 
-#: builtin/apply.c:3906 builtin/checkout.c:231 builtin/reset.c:135
+#: builtin/apply.c:3909 builtin/checkout.c:233 builtin/reset.c:135
 #, c-format
 msgid "make_cache_entry failed for path '%s'"
 msgstr "make_cache_entry ha fallat per al camí '%s'"
 
-#: builtin/apply.c:4049
+#: builtin/apply.c:4052
 #, c-format
 msgid "unable to remove %s from index"
 msgstr "no s'ha pogut eliminar %s de l'índex"
 
-#: builtin/apply.c:4078
+#: builtin/apply.c:4081
 #, c-format
 msgid "corrupt patch for submodule %s"
 msgstr "pedaç corrupte per al submòdul %s"
 
-#: builtin/apply.c:4082
+#: builtin/apply.c:4085
 #, c-format
 msgid "unable to stat newly created file '%s'"
 msgstr "no s'ha pogut fer stat al fitxer novament creat '%s'"
 
-#: builtin/apply.c:4087
+#: builtin/apply.c:4090
 #, c-format
 msgid "unable to create backing store for newly created file %s"
 msgstr ""
 "no s'ha pogut crear un magatzem de recolzament per al fitxer novament creat "
 "%s"
 
-#: builtin/apply.c:4090 builtin/apply.c:4198
+#: builtin/apply.c:4093 builtin/apply.c:4201
 #, c-format
 msgid "unable to add cache entry for %s"
 msgstr "no s'ha pogut afegir una entrada de cau per a %s"
 
-#: builtin/apply.c:4123
+#: builtin/apply.c:4126
 #, c-format
 msgid "closing file '%s'"
 msgstr "tancant el fitxer '%s'"
 
-#: builtin/apply.c:4172
+#: builtin/apply.c:4175
 #, c-format
 msgid "unable to write file '%s' mode %o"
 msgstr "no s'ha pogut escriure el fitxer '%s' mode %o"
 
-#: builtin/apply.c:4259
+#: builtin/apply.c:4262
 #, c-format
 msgid "Applied patch %s cleanly."
 msgstr "El pedaç %s s'ha aplicat netament."
 
-#: builtin/apply.c:4267
+#: builtin/apply.c:4270
 msgid "internal error"
 msgstr "error intern"
 
-#: builtin/apply.c:4270
+#: builtin/apply.c:4273
 #, c-format
 msgid "Applying patch %%s with %d reject..."
 msgid_plural "Applying patch %%s with %d rejects..."
 msgstr[0] "Aplicant el pedaç %%s amb %d rebuig"
 msgstr[1] "Aplicant el pedaç %%s amb %d rebuitjos"
 
-#: builtin/apply.c:4280
+#: builtin/apply.c:4283
 #, c-format
 msgid "truncating .rej filename to %.*s.rej"
 msgstr "truncant el nom del fitxer .rej a %.*s.rej"
 
-#: builtin/apply.c:4301
+#: builtin/apply.c:4304
 #, c-format
 msgid "Hunk #%d applied cleanly."
 msgstr "El tros #%d s'ha aplicat netament."
 
-#: builtin/apply.c:4304
+#: builtin/apply.c:4307
 #, c-format
 msgid "Rejected hunk #%d."
 msgstr "S'ha rebutjat el tros #%d."
 
-#: builtin/apply.c:4394
+#: builtin/apply.c:4397
 msgid "unrecognized input"
 msgstr "entrada no reconeguda"
 
-#: builtin/apply.c:4405
+#: builtin/apply.c:4408
 msgid "unable to read index file"
 msgstr "no es pot llegir el fitxer d'índex"
 
-#: builtin/apply.c:4522 builtin/apply.c:4525 builtin/clone.c:92
+#: builtin/apply.c:4525 builtin/apply.c:4528 builtin/clone.c:85
 #: builtin/fetch.c:92
 msgid "path"
 msgstr "camí"
 
-#: builtin/apply.c:4523
+#: builtin/apply.c:4526
 msgid "don't apply changes matching the given path"
 msgstr "no apliquis els canvis que coincideixin amb el camí donat"
 
-#: builtin/apply.c:4526
+#: builtin/apply.c:4529
 msgid "apply changes matching the given path"
 msgstr "aplica els canvis que coincideixin amb el camí donat"
 
-#: builtin/apply.c:4528
+#: builtin/apply.c:4531
 msgid "num"
 msgstr "número"
 
-#: builtin/apply.c:4529
+#: builtin/apply.c:4532
 msgid "remove <num> leading slashes from traditional diff paths"
 msgstr ""
 "elimina <nombre> barres obliqües inicials dels camins de diferència "
 "tradicionals"
 
-#: builtin/apply.c:4532
+#: builtin/apply.c:4535
 msgid "ignore additions made by the patch"
 msgstr "ignora afegiments fets pel pedaç"
 
-#: builtin/apply.c:4534
+#: builtin/apply.c:4537
 msgid "instead of applying the patch, output diffstat for the input"
 msgstr ""
 "en lloc d'aplicar el pedaç, emet les estadístiques de diferència de l'entrada"
 
-#: builtin/apply.c:4538
+#: builtin/apply.c:4541
 msgid "show number of added and deleted lines in decimal notation"
 msgstr "mostra el nombre de línies afegides i suprimides en notació decimal"
 
-#: builtin/apply.c:4540
+#: builtin/apply.c:4543
 msgid "instead of applying the patch, output a summary for the input"
 msgstr "en lloc d'aplicar el pedaç, emet un resum de l'entrada"
 
-#: builtin/apply.c:4542
+#: builtin/apply.c:4545
 msgid "instead of applying the patch, see if the patch is applicable"
 msgstr "en lloc d'aplicar el pedaç, veges si el pedaç és aplicable"
 
-#: builtin/apply.c:4544
+#: builtin/apply.c:4547
 msgid "make sure the patch is applicable to the current index"
 msgstr "assegura que el pedaç sigui aplicable a l'índex actual"
 
-#: builtin/apply.c:4546
+#: builtin/apply.c:4549
 msgid "apply a patch without touching the working tree"
 msgstr "aplica un pedaç sense tocar l'arbre de treball"
 
-#: builtin/apply.c:4548
+#: builtin/apply.c:4551
 msgid "accept a patch that touches outside the working area"
 msgstr "accepta un pedaç que toqui fora de l'àrea de treball"
 
-#: builtin/apply.c:4550
+#: builtin/apply.c:4553
 msgid "also apply the patch (use with --stat/--summary/--check)"
 msgstr "aplica el pedaç també (useu amb --stat/--summary/--check)"
 
-#: builtin/apply.c:4552
+#: builtin/apply.c:4555
 msgid "attempt three-way merge if a patch does not apply"
 msgstr "intenta una fusió de tres vies si el pedaç no s'aplica"
 
-#: builtin/apply.c:4554
+#: builtin/apply.c:4557
 msgid "build a temporary index based on embedded index information"
 msgstr "construeix un índex temporal basat en la informació d'índex incrustada"
 
-#: builtin/apply.c:4556 builtin/checkout-index.c:198 builtin/ls-files.c:412
+#: builtin/apply.c:4559 builtin/checkout-index.c:198 builtin/ls-files.c:412
 msgid "paths are separated with NUL character"
 msgstr "els camins es separen amb el caràcter NUL"
 
-#: builtin/apply.c:4559
+#: builtin/apply.c:4562
 msgid "ensure at least <n> lines of context match"
 msgstr "assegura't que almenys <n> línies de context coincideixin"
 
-#: builtin/apply.c:4560
+#: builtin/apply.c:4563
 msgid "action"
 msgstr "acció"
 
-#: builtin/apply.c:4561
+#: builtin/apply.c:4564
 msgid "detect new or modified lines that have whitespace errors"
 msgstr ""
 "detecta les línies noves o modificades que tinguin errors d'espai en blanc"
 
-#: builtin/apply.c:4564 builtin/apply.c:4567
+#: builtin/apply.c:4567 builtin/apply.c:4570
 msgid "ignore changes in whitespace when finding context"
 msgstr "ignora els canvis d'espai en blanc en cercar context"
 
-#: builtin/apply.c:4570
+#: builtin/apply.c:4573
 msgid "apply the patch in reverse"
 msgstr "aplica el pedaç al revés"
 
-#: builtin/apply.c:4572
+#: builtin/apply.c:4575
 msgid "don't expect at least one line of context"
 msgstr "no esperis almenys una línia de context"
 
-#: builtin/apply.c:4574
+#: builtin/apply.c:4577
 msgid "leave the rejected hunks in corresponding *.rej files"
 msgstr "deixa els trossos rebutjats en fitxers *.reg coresspondents"
 
-#: builtin/apply.c:4576
+#: builtin/apply.c:4579
 msgid "allow overlapping hunks"
 msgstr "permet trossos encavalcants"
 
-#: builtin/apply.c:4579
+#: builtin/apply.c:4582
 msgid "tolerate incorrectly detected missing new-line at the end of file"
 msgstr "tolera una línia nova incorrectament detectada al final del fitxer"
 
-#: builtin/apply.c:4582
+#: builtin/apply.c:4585
 msgid "do not trust the line counts in the hunk headers"
 msgstr "no confiïs en els recomptes de línia en les capçaleres dels trossos"
 
-#: builtin/apply.c:4584
+#: builtin/apply.c:4587
 msgid "root"
 msgstr "arrel"
 
-#: builtin/apply.c:4585
+#: builtin/apply.c:4588
 msgid "prepend <root> to all filenames"
 msgstr "anteposa <arrel> a tots els noms de fitxer"
 
-#: builtin/apply.c:4607
+#: builtin/apply.c:4610
 msgid "--3way outside a repository"
 msgstr "--3way fora d'un dipòsit"
 
-#: builtin/apply.c:4615
+#: builtin/apply.c:4618
 msgid "--index outside a repository"
 msgstr "--index fora d'un dipòsit"
 
-#: builtin/apply.c:4618
+#: builtin/apply.c:4621
 msgid "--cached outside a repository"
 msgstr "--cached fora d'un dipòsit"
 
-#: builtin/apply.c:4637
+#: builtin/apply.c:4640
 #, c-format
 msgid "can't open patch '%s'"
 msgstr "no es pot obrir el pedaç '%s'"
 
-#: builtin/apply.c:4651
+#: builtin/apply.c:4654
 #, c-format
 msgid "squelched %d whitespace error"
 msgid_plural "squelched %d whitespace errors"
 msgstr[0] "%d error d'espai en blanc omès"
 msgstr[1] "%d errors d'espai en blanc omesos"
 
-#: builtin/apply.c:4657 builtin/apply.c:4667
+#: builtin/apply.c:4660 builtin/apply.c:4670
 #, c-format
 msgid "%d line adds whitespace errors."
 msgid_plural "%d lines add whitespace errors."
 msgstr[0] "%d línia afegeix errors d'espai en blanc."
 msgstr[1] "%d línies afegeixen errors d'espai en blanc."
 
@@ -2697,17 +2747,17 @@
 msgstr "realitza 'git bisect next'"
 
 #: builtin/bisect--helper.c:19
 msgid "update BISECT_HEAD instead of checking out the current commit"
 msgstr "actualitza BISECT_HEAD en lloc d'agafar la comissió actual"
 
-#: builtin/blame.c:30
-msgid "git blame [<options>] [<rev-opts>] [<rev>] [--] file"
+#: builtin/blame.c:31
+msgid "git blame [<options>] [<rev-opts>] [<rev>] [--] <file>"
 msgstr "git blame [<opcions>] [<opcions-de-revisió>] [<revisió>] [--] fitxer"
 
-#: builtin/blame.c:35
+#: builtin/blame.c:36
 msgid "<rev-opts> are documented in git-rev-list(1)"
 msgstr "es documenten les <opcions-de-revisió> en git-rev-list(1)"
 
 #: builtin/blame.c:2500
 msgid "Show blame entries as we find them, incrementally"
 msgstr "Mostra les entrades de culpa mentre les trobem, incrementalment"
@@ -2829,471 +2879,488 @@
 msgstr "git branch [<opcions>] [-r] (-d | -D) <nom-de-branca>..."
 
 #: builtin/branch.c:27
 msgid "git branch [<options>] (-m | -M) [<old-branch>] <new-branch>"
 msgstr "git branch [<opcions>] (-m | -M) [<branca-antiga>] <branca-nova>"
 
-#: builtin/branch.c:152
+#: builtin/branch.c:150
 #, c-format
 msgid ""
 "deleting branch '%s' that has been merged to\n"
 "         '%s', but not yet merged to HEAD."
 msgstr ""
 "suprimint la branca '%s' que s'ha fusionat a\n"
 "         '%s', però encara no s'ha fusionat\n"
 "         a HEAD."
 
-#: builtin/branch.c:156
+#: builtin/branch.c:154
 #, c-format
 msgid ""
 "not deleting branch '%s' that is not yet merged to\n"
 "         '%s', even though it is merged to HEAD."
 msgstr ""
 "no suprimint la branca '%s' que encara no s'ha\n"
 "         fusionat a '%s', encara que està\n"
 "         fusionada a HEAD."
 
-#: builtin/branch.c:170
+#: builtin/branch.c:168
 #, c-format
 msgid "Couldn't look up commit object for '%s'"
 msgstr "No s'ha pogut trobar l'objecte de comissió de '%s'"
 
-#: builtin/branch.c:174
+#: builtin/branch.c:172
 #, c-format
 msgid ""
 "The branch '%s' is not fully merged.\n"
 "If you are sure you want to delete it, run 'git branch -D %s'."
 msgstr ""
 "La branca '%s' no està totalment fusionada.\n"
 "Si esteu segur que la voleu suprimir, executeu 'git branch -D %s'."
 
-#: builtin/branch.c:187
+#: builtin/branch.c:185
 msgid "Update of config-file failed"
 msgstr "L'actualització del fitxer de configuració ha fallat"
 
-#: builtin/branch.c:215
+#: builtin/branch.c:213
 msgid "cannot use -a with -d"
 msgstr "no es pot usar -a amb -d"
 
-#: builtin/branch.c:221
+#: builtin/branch.c:219
 msgid "Couldn't look up commit object for HEAD"
 msgstr "No s'ha pogut trobar l'objecte de comissió de HEAD"
 
-#: builtin/branch.c:229
+#: builtin/branch.c:227
 #, c-format
 msgid "Cannot delete the branch '%s' which you are currently on."
 msgstr "No es pot suprimir la branca '%s', en la qual sou actualment."
 
-#: builtin/branch.c:245
+#: builtin/branch.c:243
 #, c-format
-msgid "remote branch '%s' not found."
-msgstr "no s'ha trobat la branca remota '%s'."
+msgid "remote-tracking branch '%s' not found."
+msgstr "no s'ha trobat la branca amb seguiment remot '%s'."
 
-#: builtin/branch.c:246
+#: builtin/branch.c:244
 #, c-format
 msgid "branch '%s' not found."
 msgstr "no s'ha trobat la branca '%s'."
 
-#: builtin/branch.c:260
+#: builtin/branch.c:258
 #, c-format
-msgid "Error deleting remote branch '%s'"
-msgstr "Error en suprimir la branca remota '%s'"
+msgid "Error deleting remote-tracking branch '%s'"
+msgstr "Error en suprimir la branca amb seguiment remot '%s'"
 
-#: builtin/branch.c:261
+#: builtin/branch.c:259
 #, c-format
 msgid "Error deleting branch '%s'"
 msgstr "Error en suprimir la branca '%s'"
 
-#: builtin/branch.c:268
+#: builtin/branch.c:266
 #, c-format
-msgid "Deleted remote branch %s (was %s).\n"
-msgstr "S'ha suprimit la branca remota %s (ha estat %s).\n"
+msgid "Deleted remote-tracking branch %s (was %s).\n"
+msgstr "S'ha suprimit la branca amb seguiment remot %s (era %s).\n"
 
-#: builtin/branch.c:269
+#: builtin/branch.c:267
 #, c-format
 msgid "Deleted branch %s (was %s).\n"
-msgstr "S'ha suprimit la branca %s (ha estat %s).\n"
+msgstr "S'ha suprimit la branca %s (era %s).\n"
 
-#: builtin/branch.c:370
+#: builtin/branch.c:368
 #, c-format
 msgid "branch '%s' does not point at a commit"
 msgstr "la branca '%s' no assenyala cap comissió"
 
-#: builtin/branch.c:459
+#: builtin/branch.c:451
 #, c-format
 msgid "[%s: gone]"
 msgstr "[%s: no hi és]"
 
-#: builtin/branch.c:464
+#: builtin/branch.c:456
 #, c-format
 msgid "[%s]"
 msgstr "[%s]"
 
-#: builtin/branch.c:469
+#: builtin/branch.c:461
 #, c-format
 msgid "[%s: behind %d]"
 msgstr "[%s: darrere per %d]"
 
-#: builtin/branch.c:471
+#: builtin/branch.c:463
 #, c-format
 msgid "[behind %d]"
 msgstr "[darrere de %d]"
 
-#: builtin/branch.c:475
+#: builtin/branch.c:467
 #, c-format
 msgid "[%s: ahead %d]"
 msgstr "[%s: davant per %d]"
 
-#: builtin/branch.c:477
+#: builtin/branch.c:469
 #, c-format
 msgid "[ahead %d]"
 msgstr "[davant de %d]"
 
-#: builtin/branch.c:480
+#: builtin/branch.c:472
 #, c-format
 msgid "[%s: ahead %d, behind %d]"
 msgstr "[%s: davant per %d, darrere per %d]"
 
-#: builtin/branch.c:483
+#: builtin/branch.c:475
 #, c-format
 msgid "[ahead %d, behind %d]"
 msgstr "[davant %d, darrere %d]"
 
-#: builtin/branch.c:496
+#: builtin/branch.c:488
 msgid " **** invalid ref ****"
 msgstr " **** referència no vàlida ****"
 
-#: builtin/branch.c:587
+#: builtin/branch.c:579
 #, c-format
 msgid "(no branch, rebasing %s)"
 msgstr "(cap branca, rebasant %s)"
 
-#: builtin/branch.c:590
+#: builtin/branch.c:582
 #, c-format
 msgid "(no branch, bisect started on %s)"
 msgstr "(cap branca, bisecció començada en %s)"
 
-#: builtin/branch.c:596
+#: builtin/branch.c:588
 #, c-format
 msgid "(HEAD detached at %s)"
 msgstr "(HEAD separat a %s)"
 
-#: builtin/branch.c:599
+#: builtin/branch.c:591
 #, c-format
 msgid "(HEAD detached from %s)"
 msgstr "(HEAD separat de %s)"
 
-#: builtin/branch.c:603
+#: builtin/branch.c:595
 msgid "(no branch)"
 msgstr "(cap branca)"
 
-#: builtin/branch.c:650
+#: builtin/branch.c:642
 #, c-format
 msgid "object '%s' does not point to a commit"
 msgstr "l'objecte '%s' no assenyala cap comissió"
 
-#: builtin/branch.c:698
+#: builtin/branch.c:690
 msgid "some refs could not be read"
 msgstr "no s'han pogut llegir algunes referències"
 
-#: builtin/branch.c:711
+#: builtin/branch.c:703
 msgid "cannot rename the current branch while not on any."
 msgstr "no es pot canviar el nom de la branca actual mentre no s'és a cap."
 
-#: builtin/branch.c:721
+#: builtin/branch.c:713
 #, c-format
 msgid "Invalid branch name: '%s'"
 msgstr "Nom de branca no vàlid: '%s'"
 
-#: builtin/branch.c:736
+#: builtin/branch.c:728
 msgid "Branch rename failed"
 msgstr "El canvi de nom de branca ha fallat"
 
-#: builtin/branch.c:740
+#: builtin/branch.c:732
 #, c-format
 msgid "Renamed a misnamed branch '%s' away"
 msgstr "S'ha canviat el nom de la branca malanomenada '%s'"
 
-#: builtin/branch.c:744
+#: builtin/branch.c:736
 #, c-format
 msgid "Branch renamed to %s, but HEAD is not updated!"
 msgstr "S'ha canviat el nom de la branca a %s, però HEAD no està actualitzat!"
 
-#: builtin/branch.c:751
+#: builtin/branch.c:743
 msgid "Branch is renamed, but update of config-file failed"
 msgstr ""
 "La branca està canviada de nom, però l'actualització del fitxer de "
 "configuració ha fallat"
 
-#: builtin/branch.c:766
+#: builtin/branch.c:758
 #, c-format
 msgid "malformed object name %s"
 msgstr "nom d'objecte %s mal format"
 
-#: builtin/branch.c:790
+#: builtin/branch.c:780
 #, c-format
 msgid "could not write branch description template: %s"
 msgstr "no s'ha pogut escriure la plantilla de descripció de branca: %s"
 
-#: builtin/branch.c:820
+#: builtin/branch.c:810
 msgid "Generic options"
 msgstr "Opcions genèriques"
 
-#: builtin/branch.c:822
+#: builtin/branch.c:812
 msgid "show hash and subject, give twice for upstream branch"
 msgstr "mostra el hash i el tema, doneu dues vegades per la branca font"
 
-#: builtin/branch.c:823
+#: builtin/branch.c:813
 msgid "suppress informational messages"
 msgstr "omet els missatges informatius"
 
-#: builtin/branch.c:824
+#: builtin/branch.c:814
 msgid "set up tracking mode (see git-pull(1))"
 msgstr "configura el mode de seguiment (vegeu git-pull(1))"
 
-#: builtin/branch.c:826
+#: builtin/branch.c:816
 msgid "change upstream info"
 msgstr "canvia la informació de font"
 
-#: builtin/branch.c:830
+#: builtin/branch.c:820
 msgid "use colored output"
 msgstr "usa sortida colorada"
 
-#: builtin/branch.c:831
+#: builtin/branch.c:821
 msgid "act on remote-tracking branches"
 msgstr "actua en branques amb seguiment remot"
 
-#: builtin/branch.c:834 builtin/branch.c:840 builtin/branch.c:861
-#: builtin/branch.c:867 builtin/commit.c:1582 builtin/commit.c:1583
-#: builtin/commit.c:1584 builtin/commit.c:1585 builtin/tag.c:616
+#: builtin/branch.c:824 builtin/branch.c:830 builtin/branch.c:851
+#: builtin/branch.c:857 builtin/commit.c:1581 builtin/commit.c:1582
+#: builtin/commit.c:1583 builtin/commit.c:1584 builtin/tag.c:616
 #: builtin/tag.c:622
 msgid "commit"
 msgstr "comissió"
 
-#: builtin/branch.c:835 builtin/branch.c:841
+#: builtin/branch.c:825 builtin/branch.c:831
 msgid "print only branches that contain the commit"
 msgstr "imprimeix només les branques que continguin la comissió"
 
-#: builtin/branch.c:847
+#: builtin/branch.c:837
 msgid "Specific git-branch actions:"
 msgstr "Accions de git-branch específiques:"
 
-#: builtin/branch.c:848
+#: builtin/branch.c:838
 msgid "list both remote-tracking and local branches"
 msgstr "llista les branques amb seguiment remot i les locals"
 
-#: builtin/branch.c:850
+#: builtin/branch.c:840
 msgid "delete fully merged branch"
 msgstr "suprimeix la branca si és completament fusionada"
 
-#: builtin/branch.c:851
+#: builtin/branch.c:841
 msgid "delete branch (even if not merged)"
 msgstr "suprimeix la branca (encara que no estigui fusionada)"
 
-#: builtin/branch.c:852
+#: builtin/branch.c:842
 msgid "move/rename a branch and its reflog"
 msgstr "mou/canvia de nom una branca i el seu registre de referència"
 
-#: builtin/branch.c:853
+#: builtin/branch.c:843
 msgid "move/rename a branch, even if target exists"
 msgstr "mou/canvia de nom una branca, encara que el destí existeixi"
 
-#: builtin/branch.c:854
+#: builtin/branch.c:844
 msgid "list branch names"
 msgstr "llista els noms de branca"
 
-#: builtin/branch.c:855
+#: builtin/branch.c:845
 msgid "create the branch's reflog"
 msgstr "crea el registre de referència de la branca"
 
-#: builtin/branch.c:857
+#: builtin/branch.c:847
 msgid "edit the description for the branch"
 msgstr "edita la descripció de la branca"
 
-#: builtin/branch.c:858
+#: builtin/branch.c:848
 msgid "force creation, move/rename, deletion"
 msgstr "força creació, moviment/canvi de nom, supressió"
 
-#: builtin/branch.c:861
+#: builtin/branch.c:851
 msgid "print only not merged branches"
 msgstr "imprimeix només les branques sense fusionar"
 
-#: builtin/branch.c:867
+#: builtin/branch.c:857
 msgid "print only merged branches"
 msgstr "imprimeix només les branques fusionades"
 
-#: builtin/branch.c:871
+#: builtin/branch.c:861
 msgid "list branches in columns"
 msgstr "llista les branques en columnes"
 
-#: builtin/branch.c:884
+#: builtin/branch.c:874
 msgid "Failed to resolve HEAD as a valid ref."
 msgstr "S'ha fallat en resoldre HEAD com a referència vàlida."
 
-#: builtin/branch.c:888 builtin/clone.c:637
+#: builtin/branch.c:878 builtin/clone.c:622
 msgid "HEAD not found below refs/heads!"
 msgstr "HEAD no trobat sota refs/heads!"
 
-#: builtin/branch.c:910
+#: builtin/branch.c:900
 msgid "--column and --verbose are incompatible"
 msgstr "--column i --verbose són incompatibles"
 
-#: builtin/branch.c:921 builtin/branch.c:960
+#: builtin/branch.c:911 builtin/branch.c:950
 msgid "branch name required"
 msgstr "cal el nom de branca"
 
-#: builtin/branch.c:936
+#: builtin/branch.c:926
 msgid "Cannot give description to detached HEAD"
 msgstr "No es pot donar descripció a un HEAD separat"
 
-#: builtin/branch.c:941
+#: builtin/branch.c:931
 msgid "cannot edit description of more than one branch"
 msgstr "no es pot editar la descripció de més d'una branca"
 
-#: builtin/branch.c:948
+#: builtin/branch.c:938
 #, c-format
 msgid "No commit on branch '%s' yet."
 msgstr "Encara no hi ha comissió en la branca '%s'."
 
-#: builtin/branch.c:951
+#: builtin/branch.c:941
 #, c-format
 msgid "No branch named '%s'."
 msgstr "No hi ha branca amb nom '%s'."
 
-#: builtin/branch.c:966
+#: builtin/branch.c:956
 msgid "too many branches for a rename operation"
 msgstr "hi ha massa branques per a una operació de canvi de nom"
 
-#: builtin/branch.c:971
+#: builtin/branch.c:961
 msgid "too many branches to set new upstream"
 msgstr "hi ha massa branques per a establir una nova font"
 
-#: builtin/branch.c:975
+#: builtin/branch.c:965
 #, c-format
 msgid ""
 "could not set upstream of HEAD to %s when it does not point to any branch."
 msgstr ""
 "no s'ha pogut establir la font de HEAD com a %s quan no assenyala cap branca."
 
-#: builtin/branch.c:978 builtin/branch.c:1000 builtin/branch.c:1021
+#: builtin/branch.c:968 builtin/branch.c:990 builtin/branch.c:1011
 #, c-format
 msgid "no such branch '%s'"
 msgstr "no hi ha tal branca '%s'"
 
-#: builtin/branch.c:982
+#: builtin/branch.c:972
 #, c-format
 msgid "branch '%s' does not exist"
 msgstr "la branca '%s' no existeix"
 
-#: builtin/branch.c:994
+#: builtin/branch.c:984
 msgid "too many branches to unset upstream"
 msgstr "hi ha massa branques per a desestablir la font"
 
-#: builtin/branch.c:998
+#: builtin/branch.c:988
 msgid "could not unset upstream of HEAD when it does not point to any branch."
 msgstr ""
 "no s'ha pogut desestablir la font de HEAD perquè no assenyala cap branca."
 
-#: builtin/branch.c:1004
+#: builtin/branch.c:994
 #, c-format
 msgid "Branch '%s' has no upstream information"
 msgstr "La branca '%s' no té informació de font"
 
-#: builtin/branch.c:1018
+#: builtin/branch.c:1008
 msgid "it does not make sense to create 'HEAD' manually"
 msgstr "no té sentit crear 'HEAD' manualment"
 
-#: builtin/branch.c:1024
+#: builtin/branch.c:1014
 msgid "-a and -r options to 'git branch' do not make sense with a branch name"
 msgstr ""
 "les opcions -a i -r a 'git branch' no tenen sentit amb un nom de branca"
 
-#: builtin/branch.c:1027
+#: builtin/branch.c:1017
 #, c-format
 msgid ""
 "The --set-upstream flag is deprecated and will be removed. Consider using --"
 "track or --set-upstream-to\n"
 msgstr ""
 "La bandera --set-upstream està desaprovada i s'eliminarà. Considereu usar --"
 "track o --set-upstream-to\n"
 
-#: builtin/branch.c:1044
+#: builtin/branch.c:1034
 #, c-format
 msgid ""
 "\n"
 "If you wanted to make '%s' track '%s', do this:\n"
 "\n"
 msgstr ""
 "\n"
 "Si volíeu fer '%s' seguir '%s', feu això:\n"
 "\n"
 
-#: builtin/branch.c:1045
+#: builtin/branch.c:1035
 #, c-format
 msgid "    git branch -d %s\n"
 msgstr "    git branch -d %s\n"
 
-#: builtin/branch.c:1046
+#: builtin/branch.c:1036
 #, c-format
 msgid "    git branch --set-upstream-to %s\n"
 msgstr "    git branch --set-upstream-to %s\n"
 
-#: builtin/bundle.c:47
+#: builtin/bundle.c:51
 #, c-format
 msgid "%s is okay\n"
 msgstr "%s està bé\n"
 
-#: builtin/bundle.c:56
+#: builtin/bundle.c:64
 msgid "Need a repository to create a bundle."
 msgstr "Cal un dipòsit per a fer un farcell."
 
-#: builtin/bundle.c:60
+#: builtin/bundle.c:68
 msgid "Need a repository to unbundle."
 msgstr "Cal un dipòsit per a desfer un farcell."
 
-#: builtin/cat-file.c:326
-msgid "git cat-file (-t | -s | -e | -p | <type> | --textconv) <object>"
-msgstr "git cat-file (-t | -s | -e | -p | <tipus> | --textconv) <objecte>"
-
-#: builtin/cat-file.c:327
-msgid "git cat-file (--batch | --batch-check) < <list-of-objects>"
-msgstr "git cat-file (--batch | --batch-check) < <llista-d'objectes>"
+#: builtin/cat-file.c:369
+msgid ""
+"git cat-file (-t [--allow-unknown-type]|-s [--allow-unknown-type]|-e|-p|"
+"<type>|--textconv) <object>"
+msgstr ""
+"git cat-file (-t [--allow-unknown-type]|-s [--allow-unknown-type]|-e|-p|"
+"<tipus>|--textconv) <objecte>"
+
+#: builtin/cat-file.c:370
+msgid ""
+"git cat-file (--batch | --batch-check) [--follow-symlinks] < <list-of-"
+"objects>"
+msgstr ""
+"git cat-file (--batch | --batch-check) [--follow-symlinks] < <llista-"
+"d'objectes>"
 
-#: builtin/cat-file.c:364
+#: builtin/cat-file.c:407
 msgid "<type> can be one of: blob, tree, commit, tag"
 msgstr "<tipus> pot ser un de: blob, tree, commit, tag"
 
-#: builtin/cat-file.c:365
+#: builtin/cat-file.c:408
 msgid "show object type"
 msgstr "mostra el tipus de l'objecte"
 
-#: builtin/cat-file.c:366
+#: builtin/cat-file.c:409
 msgid "show object size"
 msgstr "mostra la mida de l'objecte"
 
-#: builtin/cat-file.c:368
+#: builtin/cat-file.c:411
 msgid "exit with zero when there's no error"
 msgstr "surt amb zero quan no hi ha error"
 
-#: builtin/cat-file.c:369
+#: builtin/cat-file.c:412
 msgid "pretty-print object's content"
 msgstr "imprimeix bellament el contingut de l'objecte"
 
-#: builtin/cat-file.c:371
+#: builtin/cat-file.c:414
 msgid "for blob objects, run textconv on object's content"
 msgstr "en els objectes de blob, executa textconv en el contingut de l'objecte"
 
-#: builtin/cat-file.c:373
+#: builtin/cat-file.c:416
+msgid "allow -s and -t to work with broken/corrupt objects"
+msgstr "permet que -s i -t funcionin amb objectes trencats/corruptes"
+
+#: builtin/cat-file.c:418
 msgid "show info and content of objects fed from the standard input"
 msgstr ""
 "mostra la informació i contingut dels objectes rebuts de l'entrada estàndard"
 
-#: builtin/cat-file.c:376
+#: builtin/cat-file.c:421
 msgid "show info about objects fed from the standard input"
 msgstr "mostra informació sobre els objectes rebuts de l'entrada estàndard"
 
+#: builtin/cat-file.c:424
+msgid "follow in-tree symlinks (used with --batch or --batch-check)"
+msgstr ""
+"segueix els enllaços simbòlics en l'arbre (s'usa amb --batch o --batch-check)"
+
 #: builtin/check-attr.c:11
 msgid "git check-attr [-a | --all | <attr>...] [--] <pathname>..."
 msgstr "git check-attr [-a | --all | <atribut>...] [--] <nom-de-camí>..."
 
 #: builtin/check-attr.c:12
 msgid "git check-attr --stdin [-z] [-a | --all | <attr>...] < <list-of-paths>"
@@ -3305,21 +3372,21 @@
 msgstr "informa de tots els atributs establerts en el fitxer"
 
 #: builtin/check-attr.c:20
 msgid "use .gitattributes only from the index"
 msgstr "usa .gitattributes només des de l'índex"
 
-#: builtin/check-attr.c:21 builtin/check-ignore.c:22 builtin/hash-object.c:98
+#: builtin/check-attr.c:21 builtin/check-ignore.c:22 builtin/hash-object.c:96
 msgid "read file names from stdin"
 msgstr "llegeix els noms de fitxer d'stdin"
 
 #: builtin/check-attr.c:23 builtin/check-ignore.c:24
 msgid "terminate input and output records by a NUL character"
 msgstr "acaba els registres d'entrada i de sortida amb un caràcter NUL"
 
-#: builtin/check-ignore.c:18 builtin/checkout.c:1107 builtin/gc.c:274
+#: builtin/check-ignore.c:18 builtin/checkout.c:1202 builtin/gc.c:279
 msgid "suppress progress reporting"
 msgstr "omet el reportatge de progrés"
 
 #: builtin/check-ignore.c:26
 msgid "show non-matching input paths"
 msgstr "mostra els camins d'entrada que no coincideixin"
@@ -3410,120 +3477,120 @@
 msgstr "en crear fitxers, anteposa <cadena>"
 
 #: builtin/checkout-index.c:208
 msgid "copy out the files from named stage"
 msgstr "copia els fitxers des de l'etapa anomenada"
 
-#: builtin/checkout.c:25
+#: builtin/checkout.c:24
 msgid "git checkout [<options>] <branch>"
 msgstr "git checkout [<opcions>] <branca>"
 
-#: builtin/checkout.c:26
+#: builtin/checkout.c:25
 msgid "git checkout [<options>] [<branch>] -- <file>..."
 msgstr "git checkout [<opcions>] [<branca>] -- <fitxer>..."
 
-#: builtin/checkout.c:132 builtin/checkout.c:165
+#: builtin/checkout.c:134 builtin/checkout.c:167
 #, c-format
 msgid "path '%s' does not have our version"
 msgstr "el camí '%s' no té la versió nostra"
 
-#: builtin/checkout.c:134 builtin/checkout.c:167
+#: builtin/checkout.c:136 builtin/checkout.c:169
 #, c-format
 msgid "path '%s' does not have their version"
 msgstr "el camí '%s' no té la versió seva"
 
-#: builtin/checkout.c:150
+#: builtin/checkout.c:152
 #, c-format
 msgid "path '%s' does not have all necessary versions"
 msgstr "el camí '%s' no té totes les versions necessàries"
 
-#: builtin/checkout.c:194
+#: builtin/checkout.c:196
 #, c-format
 msgid "path '%s' does not have necessary versions"
 msgstr "el camí '%s' no té les versions necessàries"
 
-#: builtin/checkout.c:211
+#: builtin/checkout.c:213
 #, c-format
 msgid "path '%s': cannot merge"
 msgstr "camí '%s': no es pot fusionar"
 
-#: builtin/checkout.c:228
+#: builtin/checkout.c:230
 #, c-format
 msgid "Unable to add merge result for '%s'"
 msgstr "no s'ha pogut afegir el resultat de fusió per a '%s'"
 
-#: builtin/checkout.c:249 builtin/checkout.c:252 builtin/checkout.c:255
-#: builtin/checkout.c:258
+#: builtin/checkout.c:251 builtin/checkout.c:254 builtin/checkout.c:257
+#: builtin/checkout.c:260
 #, c-format
 msgid "'%s' cannot be used with updating paths"
 msgstr "'%s' no es pot usar amb actualització de camins"
 
-#: builtin/checkout.c:261 builtin/checkout.c:264
+#: builtin/checkout.c:263 builtin/checkout.c:266
 #, c-format
 msgid "'%s' cannot be used with %s"
 msgstr "'%s' no es pot usar amb %s"
 
-#: builtin/checkout.c:267
+#: builtin/checkout.c:269
 #, c-format
 msgid "Cannot update paths and switch to branch '%s' at the same time."
 msgstr ""
 "No es pot actualitzar els camins i canviar a la branca '%s' a la vegada."
 
-#: builtin/checkout.c:278 builtin/checkout.c:467
+#: builtin/checkout.c:280 builtin/checkout.c:474
 msgid "corrupt index file"
 msgstr "fitxer d'índex corrupte"
 
-#: builtin/checkout.c:338 builtin/checkout.c:345
+#: builtin/checkout.c:340 builtin/checkout.c:347
 #, c-format
 msgid "path '%s' is unmerged"
 msgstr "el camí '%s' està sense fusionar"
 
-#: builtin/checkout.c:489
+#: builtin/checkout.c:496
 msgid "you need to resolve your current index first"
 msgstr "heu de resoldre el vostre índex actual primer"
 
-#: builtin/checkout.c:615
+#: builtin/checkout.c:627
 #, c-format
 msgid "Can not do reflog for '%s'\n"
 msgstr "No es pot fer reflog per a '%s'\n"
 
-#: builtin/checkout.c:653
+#: builtin/checkout.c:663
 msgid "HEAD is now at"
 msgstr "HEAD ara és a"
 
-#: builtin/checkout.c:660
+#: builtin/checkout.c:670
 #, c-format
 msgid "Reset branch '%s'\n"
 msgstr "Restableix la branca '%s'\n"
 
-#: builtin/checkout.c:663
+#: builtin/checkout.c:673
 #, c-format
 msgid "Already on '%s'\n"
 msgstr "Ja en '%s'\n"
 
-#: builtin/checkout.c:667
+#: builtin/checkout.c:677
 #, c-format
 msgid "Switched to and reset branch '%s'\n"
 msgstr "S'ha agafat i restablert la branca '%s'\n"
 
-#: builtin/checkout.c:669 builtin/checkout.c:1050
+#: builtin/checkout.c:679 builtin/checkout.c:1134
 #, c-format
 msgid "Switched to a new branch '%s'\n"
 msgstr "S'ha agafat la branca nova '%s'\n"
 
-#: builtin/checkout.c:671
+#: builtin/checkout.c:681
 #, c-format
 msgid "Switched to branch '%s'\n"
 msgstr "S'ha agafat la branca '%s'\n"
 
-#: builtin/checkout.c:723
+#: builtin/checkout.c:733
 #, c-format
 msgid " ... and %d more.\n"
 msgstr " ... i %d més.\n"
 
-#: builtin/checkout.c:729
+#: builtin/checkout.c:739
 #, c-format
 msgid ""
 "Warning: you are leaving %d commit behind, not connected to\n"
 "any of your branches:\n"
 "\n"
 "%s\n"
@@ -3540,174 +3607,196 @@
 msgstr[1] ""
 "Avís: esteu deixant enrere %d comissions, no connectades a\n"
 "cap de les vostres branques:\n"
 "\n"
 "%s\n"
 
-#: builtin/checkout.c:747
+#: builtin/checkout.c:758
 #, c-format
 msgid ""
+"If you want to keep it by creating a new branch, this may be a good time\n"
+"to do so with:\n"
+"\n"
+" git branch <new-branch-name> %s\n"
+"\n"
+msgid_plural ""
 "If you want to keep them by creating a new branch, this may be a good time\n"
 "to do so with:\n"
 "\n"
 " git branch <new-branch-name> %s\n"
 "\n"
-msgstr ""
-"Si les voleu retenir creant una branca nova, ara pot ser un bon moment per\n"
-"a fer-ho amb:\n"
+msgstr[0] ""
+"Si la voleu retenir creant una branca nova, ara pot ser un bon moment\n"
+"per a fer-ho amb:\n"
+"\n"
+" git branch <nom-de-branca-nova> %s\n"
+"\n"
+msgstr[1] ""
+"Si les voleu retenir creant una branca nova, ara pot ser un bon moment\n"
+"per a fer-ho amb:\n"
 "\n"
 " git branch <nom-de-branca-nova> %s\n"
 "\n"
 
-#: builtin/checkout.c:777
+#: builtin/checkout.c:794
 msgid "internal error in revision walk"
 msgstr "error intern en el passeig per revisions"
 
-#: builtin/checkout.c:781
+#: builtin/checkout.c:798
 msgid "Previous HEAD position was"
 msgstr "La posició de HEAD anterior era"
 
-#: builtin/checkout.c:808 builtin/checkout.c:1045
+#: builtin/checkout.c:825 builtin/checkout.c:1129
 msgid "You are on a branch yet to be born"
 msgstr "Sou en una branca que encara ha de nàixer"
 
-#: builtin/checkout.c:952
+#: builtin/checkout.c:931
+#, c-format
+msgid "'%s' is already checked out at '%s'"
+msgstr "'%s' ja s'ha agafat a '%s'"
+
+#: builtin/checkout.c:1036
 #, c-format
 msgid "only one reference expected, %d given."
 msgstr "només una referència esperada, %d donades."
 
-#: builtin/checkout.c:991
+#: builtin/checkout.c:1075
 #, c-format
 msgid "invalid reference: %s"
 msgstr "referència no vàlida: %s"
 
-#: builtin/checkout.c:1020
+#: builtin/checkout.c:1104
 #, c-format
 msgid "reference is not a tree: %s"
 msgstr "la referència no és un arbre: %s"
 
-#: builtin/checkout.c:1059
+#: builtin/checkout.c:1143
 msgid "paths cannot be used with switching branches"
 msgstr "els camins no es poden usar amb canvi de branca"
 
-#: builtin/checkout.c:1062 builtin/checkout.c:1066
+#: builtin/checkout.c:1146 builtin/checkout.c:1150
 #, c-format
 msgid "'%s' cannot be used with switching branches"
 msgstr "'%s' no es pot usar amb canvi de branca"
 
-#: builtin/checkout.c:1070 builtin/checkout.c:1073 builtin/checkout.c:1078
-#: builtin/checkout.c:1081
+#: builtin/checkout.c:1154 builtin/checkout.c:1157 builtin/checkout.c:1162
+#: builtin/checkout.c:1165
 #, c-format
 msgid "'%s' cannot be used with '%s'"
 msgstr "'%s' no es pot usar amb '%s'"
 
-#: builtin/checkout.c:1086
+#: builtin/checkout.c:1170
 #, c-format
 msgid "Cannot switch branch to a non-commit '%s'"
 msgstr "No es pot canviar la branca a una no comissió '%s'"
 
-#: builtin/checkout.c:1108 builtin/checkout.c:1110 builtin/clone.c:90
-#: builtin/remote.c:159 builtin/remote.c:161
+#: builtin/checkout.c:1203 builtin/checkout.c:1205 builtin/clone.c:83
+#: builtin/remote.c:159 builtin/remote.c:161 builtin/worktree.c:282
+#: builtin/worktree.c:284
 msgid "branch"
 msgstr "branca"
 
-#: builtin/checkout.c:1109
+#: builtin/checkout.c:1204
 msgid "create and checkout a new branch"
 msgstr "crea i agafa una branca nova"
 
-#: builtin/checkout.c:1111
+#: builtin/checkout.c:1206
 msgid "create/reset and checkout a branch"
 msgstr "crea/restableix i agafa una branca"
 
-#: builtin/checkout.c:1112
+#: builtin/checkout.c:1207
 msgid "create reflog for new branch"
 msgstr "crea un registre de referència per a la branca nova"
 
-#: builtin/checkout.c:1113
+#: builtin/checkout.c:1208
 msgid "detach the HEAD at named commit"
 msgstr "separa el HEAD a la comissió anomenada"
 
-#: builtin/checkout.c:1114
+#: builtin/checkout.c:1209
 msgid "set upstream info for new branch"
 msgstr "estableix la informació de font de la branca nova"
 
-#: builtin/checkout.c:1116
+#: builtin/checkout.c:1211
 msgid "new-branch"
 msgstr "branca-nova"
 
-#: builtin/checkout.c:1116
+#: builtin/checkout.c:1211
 msgid "new unparented branch"
 msgstr "branca nova sense mare"
 
-#: builtin/checkout.c:1117
+#: builtin/checkout.c:1212
 msgid "checkout our version for unmerged files"
 msgstr "agafa la versió nostra dels fitxers sense fusionar"
 
-#: builtin/checkout.c:1119
+#: builtin/checkout.c:1214
 msgid "checkout their version for unmerged files"
 msgstr "agafa la versió seva dels fitxers sense fusionar"
 
-#: builtin/checkout.c:1121
+#: builtin/checkout.c:1216
 msgid "force checkout (throw away local modifications)"
 msgstr "agafa a la força (descarta qualsevulles modificacions locals)"
 
-#: builtin/checkout.c:1122
+#: builtin/checkout.c:1217
 msgid "perform a 3-way merge with the new branch"
 msgstr "realitza una fusió de 3 vies amb la branca nova"
 
-#: builtin/checkout.c:1123 builtin/merge.c:227
+#: builtin/checkout.c:1218 builtin/merge.c:227
 msgid "update ignored files (default)"
 msgstr "actualitza els fitxers ignorats (per defecte)"
 
-#: builtin/checkout.c:1124 builtin/log.c:1239 parse-options.h:245
+#: builtin/checkout.c:1219 builtin/log.c:1239 parse-options.h:244
 msgid "style"
 msgstr "estil"
 
-#: builtin/checkout.c:1125
+#: builtin/checkout.c:1220
 msgid "conflict style (merge or diff3)"
 msgstr "estil de conflicte (fusió o diff3)"
 
-#: builtin/checkout.c:1128
+#: builtin/checkout.c:1223
 msgid "do not limit pathspecs to sparse entries only"
 msgstr "no limitis les especificacions de camí només a entrades escasses"
 
-#: builtin/checkout.c:1130
+#: builtin/checkout.c:1225
 msgid "second guess 'git checkout <no-such-branch>'"
 msgstr "dubta 'git checkout <cap-branca-així>'"
 
-#: builtin/checkout.c:1153
+#: builtin/checkout.c:1227
+msgid "do not check if another worktree is holding the given ref"
+msgstr "no comprovis si altre arbre de treball té la referència donada"
+
+#: builtin/checkout.c:1252
 msgid "-b, -B and --orphan are mutually exclusive"
 msgstr "-b, -B i --orphan són mutualment exclusius"
 
-#: builtin/checkout.c:1170
+#: builtin/checkout.c:1269
 msgid "--track needs a branch name"
 msgstr "--track necessita un nom de branca"
 
-#: builtin/checkout.c:1175
+#: builtin/checkout.c:1274
 msgid "Missing branch name; try -b"
 msgstr "Manca el nom de branca; proveu -b"
 
-#: builtin/checkout.c:1212
+#: builtin/checkout.c:1310
 msgid "invalid path specification"
 msgstr "especificació de camí no vàlida"
 
-#: builtin/checkout.c:1219
+#: builtin/checkout.c:1317
 #, c-format
 msgid ""
 "Cannot update paths and switch to branch '%s' at the same time.\n"
 "Did you intend to checkout '%s' which can not be resolved as commit?"
 msgstr ""
 "No es poden actualitzar els camins i canviar a la branca '%s' a la vegada.\n"
 "Volíeu agafar '%s', la qual no es pot resoldre com a comissió?"
 
-#: builtin/checkout.c:1224
+#: builtin/checkout.c:1322
 #, c-format
 msgid "git checkout: --detach does not take a path argument '%s'"
 msgstr "git checkout: --detach no accepta un paràmetre de camí '%s'"
 
-#: builtin/checkout.c:1228
+#: builtin/checkout.c:1326
 msgid ""
 "git checkout: --ours/--theirs, --force and --merge are incompatible when\n"
 "checking out of the index."
 msgstr ""
 "git checkout: --ours/--theirs, --force i --merge són incompatibles en\n"
 "agafar de l'índex."
@@ -3772,42 +3861,42 @@
 "2-3,6-9    - selecciona múltiples rangs\n"
 "foo        - selecciona un ítem basat en un prefix únic\n"
 "-...       - desselecciona els ítems seleccionats\n"
 "*          - tria tots els ítems\n"
 "           - (buit) finalitza la selecció"
 
-#: builtin/clean.c:517
+#: builtin/clean.c:515
 #, c-format
 msgid "Huh (%s)?"
 msgstr "Perdó (%s)?"
 
-#: builtin/clean.c:659
+#: builtin/clean.c:657
 #, c-format
 msgid "Input ignore patterns>> "
 msgstr "Introduïu els patrons a ignorar>> "
 
-#: builtin/clean.c:696
+#: builtin/clean.c:694
 #, c-format
 msgid "WARNING: Cannot find items matched by: %s"
 msgstr "AVÍS: No es pot trobar ítems que coincideixin amb: %s"
 
-#: builtin/clean.c:717
+#: builtin/clean.c:715
 msgid "Select items to delete"
 msgstr "Selecciona els ítems a suprimir"
 
 #. TRANSLATORS: Make sure to keep [y/N] as is
-#: builtin/clean.c:758
+#: builtin/clean.c:756
 #, c-format
 msgid "Remove %s [y/N]? "
 msgstr "Voleu eliminar %s [y/N]? "
 
-#: builtin/clean.c:783
+#: builtin/clean.c:781
 msgid "Bye."
 msgstr "Adéu."
 
-#: builtin/clean.c:791
+#: builtin/clean.c:789
 msgid ""
 "clean               - start cleaning\n"
 "filter by pattern   - exclude items from deletion\n"
 "select by numbers   - select items to be deleted by numbers\n"
 "ask each            - confirm each deletion (like \"rm -i\")\n"
 "quit                - stop cleaning\n"
@@ -3819,356 +3908,357 @@
 "select by numbers   - selecciona ítems a suprimir per números\n"
 "ask each            - confirma cada supressió (com \"rm -i\")\n"
 "quit                - deixa de netejar\n"
 "help                - aquesta pantalla\n"
 "?                   - ajuda de selecció de l'avís"
 
-#: builtin/clean.c:818
+#: builtin/clean.c:816
 msgid "*** Commands ***"
 msgstr "*** Ordres ***"
 
-#: builtin/clean.c:819
+#: builtin/clean.c:817
 msgid "What now"
 msgstr "Què ara"
 
-#: builtin/clean.c:827
+#: builtin/clean.c:825
 msgid "Would remove the following item:"
 msgid_plural "Would remove the following items:"
 msgstr[0] "Eliminaria l'ítem següent:"
 msgstr[1] "Eliminaria els ítems següents:"
 
-#: builtin/clean.c:844
+#: builtin/clean.c:842
 msgid "No more files to clean, exiting."
 msgstr "No hi ha més fitxers a netejar; sortint."
 
-#: builtin/clean.c:875
+#: builtin/clean.c:873
 msgid "do not print names of files removed"
 msgstr "no imprimeixis els noms dels fitxers eliminats"
 
-#: builtin/clean.c:877
+#: builtin/clean.c:875
 msgid "force"
 msgstr "força"
 
-#: builtin/clean.c:878
+#: builtin/clean.c:876
 msgid "interactive cleaning"
 msgstr "neteja interactiva"
 
-#: builtin/clean.c:880
+#: builtin/clean.c:878
 msgid "remove whole directories"
 msgstr "elimina directoris sencers"
 
-#: builtin/clean.c:881 builtin/describe.c:407 builtin/grep.c:714
-#: builtin/ls-files.c:443 builtin/name-rev.c:311 builtin/show-ref.c:185
+#: builtin/clean.c:879 builtin/describe.c:407 builtin/grep.c:714
+#: builtin/ls-files.c:443 builtin/name-rev.c:311 builtin/show-ref.c:187
 msgid "pattern"
 msgstr "patró"
 
-#: builtin/clean.c:882
+#: builtin/clean.c:880
 msgid "add <pattern> to ignore rules"
 msgstr "afegiu <patró> per a ignorar les regles"
 
-#: builtin/clean.c:883
+#: builtin/clean.c:881
 msgid "remove ignored files, too"
 msgstr "elimina els fitxers ignorats, també"
 
-#: builtin/clean.c:885
+#: builtin/clean.c:883
 msgid "remove only ignored files"
 msgstr "elimina només els fitxers ignorats"
 
-#: builtin/clean.c:903
+#: builtin/clean.c:901
 msgid "-x and -X cannot be used together"
 msgstr "-x i -X no es poden usar junts"
 
-#: builtin/clean.c:907
+#: builtin/clean.c:905
 msgid ""
 "clean.requireForce set to true and neither -i, -n, nor -f given; refusing to "
 "clean"
 msgstr ""
 "clean.requireForce està establerta a veritat i ni -i, -n ni -f s'ha donat; "
 "refusant netejar"
 
-#: builtin/clean.c:910
+#: builtin/clean.c:908
 msgid ""
 "clean.requireForce defaults to true and neither -i, -n, nor -f given; "
 "refusing to clean"
 msgstr ""
 "clean.requireForce és per defecte veritat i ni -i, -n ni -f s'ha donat; "
 "refusant netejar"
 
 #: builtin/clone.c:37
 msgid "git clone [<options>] [--] <repo> [<dir>]"
 msgstr "git clone [<opcions>] [--] <dipòsit> [<directori>]"
 
-#: builtin/clone.c:66 builtin/fetch.c:111 builtin/merge.c:224
+#: builtin/clone.c:57 builtin/fetch.c:111 builtin/merge.c:224
 #: builtin/push.c:523
 msgid "force progress reporting"
 msgstr "força l'informe de progrés"
 
-#: builtin/clone.c:68
+#: builtin/clone.c:59
 msgid "don't create a checkout"
 msgstr "no facis cap agafada"
 
-#: builtin/clone.c:69 builtin/clone.c:71 builtin/init-db.c:496
+#: builtin/clone.c:60 builtin/clone.c:62 builtin/init-db.c:503
 msgid "create a bare repository"
 msgstr "crea un dipòsit nu"
 
-#: builtin/clone.c:73
+#: builtin/clone.c:64
 msgid "create a mirror repository (implies bare)"
 msgstr "crea un dipòsit reflectit (implica bare)"
 
-#: builtin/clone.c:75
+#: builtin/clone.c:66
 msgid "to clone from a local repository"
 msgstr "per a clonar des d'un dipòsit local"
 
-#: builtin/clone.c:77
+#: builtin/clone.c:68
 msgid "don't use local hardlinks, always copy"
 msgstr "no usis enllaços durs locals, sempre copia"
 
-#: builtin/clone.c:79
+#: builtin/clone.c:70
 msgid "setup as shared repository"
 msgstr "configura com a dipòsit compartit"
 
-#: builtin/clone.c:81 builtin/clone.c:83
+#: builtin/clone.c:72 builtin/clone.c:74
 msgid "initialize submodules in the clone"
 msgstr "initialitza els submòduls en el clon"
 
-#: builtin/clone.c:84 builtin/init-db.c:493
+#: builtin/clone.c:75 builtin/init-db.c:500
 msgid "template-directory"
 msgstr "directori-de-plantilla"
 
-#: builtin/clone.c:85 builtin/init-db.c:494
+#: builtin/clone.c:76 builtin/init-db.c:501
 msgid "directory from which templates will be used"
 msgstr "directori del qual les plantilles s'usaran"
 
-#: builtin/clone.c:87
+#: builtin/clone.c:78
 msgid "reference repository"
 msgstr "dipòsit de referència"
 
-#: builtin/clone.c:88 builtin/column.c:26 builtin/merge-file.c:44
+#: builtin/clone.c:80
+msgid "use --reference only while cloning"
+msgstr "usa --reference només en clonar"
+
+#: builtin/clone.c:81 builtin/column.c:26 builtin/merge-file.c:44
 msgid "name"
 msgstr "nom"
 
-#: builtin/clone.c:89
+#: builtin/clone.c:82
 msgid "use <name> instead of 'origin' to track upstream"
 msgstr "usa <nom> en lloc de 'origin' per a seguir la font"
 
-#: builtin/clone.c:91
+#: builtin/clone.c:84
 msgid "checkout <branch> instead of the remote's HEAD"
 msgstr "agafa <branca> en lloc del HEAD del remot"
 
-#: builtin/clone.c:93
+#: builtin/clone.c:86
 msgid "path to git-upload-pack on the remote"
 msgstr "camí a git-upload-pack en el remot"
 
-#: builtin/clone.c:94 builtin/fetch.c:112 builtin/grep.c:659
+#: builtin/clone.c:87 builtin/fetch.c:112 builtin/grep.c:659
 msgid "depth"
 msgstr "profunditat"
 
-#: builtin/clone.c:95
+#: builtin/clone.c:88
 msgid "create a shallow clone of that depth"
 msgstr "crea un clon superficial de tal profunditat"
 
-#: builtin/clone.c:97
+#: builtin/clone.c:90
 msgid "clone only one branch, HEAD or --branch"
 msgstr "clona només una branca, HEAD o --branch"
 
-#: builtin/clone.c:99
-msgid "use --reference only while cloning"
-msgstr "usa --reference només en clonar"
-
-#: builtin/clone.c:100 builtin/init-db.c:502
+#: builtin/clone.c:91 builtin/init-db.c:509
 msgid "gitdir"
 msgstr "directori de git"
 
-#: builtin/clone.c:101 builtin/init-db.c:503
+#: builtin/clone.c:92 builtin/init-db.c:510
 msgid "separate git dir from working tree"
 msgstr "separa el directori de git de l'arbre de treball"
 
-#: builtin/clone.c:102
+#: builtin/clone.c:93
 msgid "key=value"
 msgstr "calu=valor"
 
-#: builtin/clone.c:103
+#: builtin/clone.c:94
 msgid "set config inside the new repository"
 msgstr "estableix la configuració dins del dipòsit nou"
 
-#: builtin/clone.c:256
+#: builtin/clone.c:240
 #, c-format
 msgid "reference repository '%s' is not a local repository."
 msgstr "el dipòsit de referència '%s' no és un dipòsit local."
 
-#: builtin/clone.c:260
+#: builtin/clone.c:244
 #, c-format
 msgid "reference repository '%s' is shallow"
 msgstr "el dipòsit de referència '%s' és superficial"
 
-#: builtin/clone.c:263
+#: builtin/clone.c:247
 #, c-format
 msgid "reference repository '%s' is grafted"
 msgstr "el dipòsit de referència '%s' és empeltat"
 
-#: builtin/clone.c:325
+#: builtin/clone.c:310
 #, c-format
 msgid "failed to create directory '%s'"
 msgstr "s'ha fallat en crear el directori '%s'"
 
-#: builtin/clone.c:327 builtin/diff.c:84
+#: builtin/clone.c:312 builtin/diff.c:84
 #, c-format
 msgid "failed to stat '%s'"
 msgstr "s'ha fallat en fer stat a '%s'"
 
-#: builtin/clone.c:329
+#: builtin/clone.c:314
 #, c-format
 msgid "%s exists and is not a directory"
 msgstr "%s existeix i no és un directori"
 
-#: builtin/clone.c:343
+#: builtin/clone.c:328
 #, c-format
 msgid "failed to stat %s\n"
 msgstr "s'ha fallat en fer stat a '%s'\n"
 
-#: builtin/clone.c:365
+#: builtin/clone.c:350
 #, c-format
 msgid "failed to create link '%s'"
 msgstr "s'ha fallat en crear l'enllaç '%s'"
 
-#: builtin/clone.c:369
+#: builtin/clone.c:354
 #, c-format
 msgid "failed to copy file to '%s'"
 msgstr "s'ha fallat en copiar el fitxer a '%s'"
 
-#: builtin/clone.c:392 builtin/clone.c:566
+#: builtin/clone.c:377 builtin/clone.c:551
 #, c-format
 msgid "done.\n"
 msgstr "fet.\n"
 
-#: builtin/clone.c:404
+#: builtin/clone.c:389
 msgid ""
 "Clone succeeded, but checkout failed.\n"
 "You can inspect what was checked out with 'git status'\n"
 "and retry the checkout with 'git checkout -f HEAD'\n"
 msgstr ""
 "La clonació ha tingut èxit, però l'agafada ha fallat.\n"
 "Podeu inspeccionar què s'ha agafat amb 'git status' i\n"
 "tornar a intentar l'agafada amb 'git checkout -f HEAD'\n"
 
-#: builtin/clone.c:481
+#: builtin/clone.c:466
 #, c-format
 msgid "Could not find remote branch %s to clone."
 msgstr "No s'ha pogut trobar la branca remota %s per a clonar."
 
-#: builtin/clone.c:561
+#: builtin/clone.c:546
 #, c-format
 msgid "Checking connectivity... "
 msgstr "Provant connectivitat... "
 
-#: builtin/clone.c:564
+#: builtin/clone.c:549
 msgid "remote did not send all necessary objects"
 msgstr "el remot no ha enviat tots els objectes necessaris"
 
-#: builtin/clone.c:628
+#: builtin/clone.c:613
 msgid "remote HEAD refers to nonexistent ref, unable to checkout.\n"
 msgstr ""
 "el HEAD remot es refereix a una referència que no existeix; no s'ha pogut "
 "agafar.\n"
 
-#: builtin/clone.c:659
+#: builtin/clone.c:644
 msgid "unable to checkout working tree"
 msgstr "no s'ha pogut agafar l'arbre de treball"
 
-#: builtin/clone.c:746
+#: builtin/clone.c:731
 msgid "cannot repack to clean up"
 msgstr "no es pot reempaquetar per a netejar"
 
-#: builtin/clone.c:748
+#: builtin/clone.c:733
 msgid "cannot unlink temporary alternates file"
 msgstr "no es pot desenllaçar el fitxer d'alternatives temporal"
 
-#: builtin/clone.c:778
+#: builtin/clone.c:763
 msgid "Too many arguments."
 msgstr "Hi ha massa paràmetres."
 
-#: builtin/clone.c:782
+#: builtin/clone.c:767
 msgid "You must specify a repository to clone."
 msgstr "Heu d'especificar un dipòsit per a clonar."
 
-#: builtin/clone.c:793
+#: builtin/clone.c:778
 #, c-format
 msgid "--bare and --origin %s options are incompatible."
 msgstr "les opcions --bare i --origin %s són incompatibles."
 
-#: builtin/clone.c:796
+#: builtin/clone.c:781
 msgid "--bare and --separate-git-dir are incompatible."
 msgstr "--bare i --separate-git-dir són incompatibles."
 
-#: builtin/clone.c:809
+#: builtin/clone.c:794
 #, c-format
 msgid "repository '%s' does not exist"
 msgstr "el dipòsit '%s' no existeix"
 
-#: builtin/clone.c:815 builtin/fetch.c:1156
+#: builtin/clone.c:800 builtin/fetch.c:1160
 #, c-format
 msgid "depth %s is not a positive number"
 msgstr "la profunditat %s no és nombre positiu"
 
-#: builtin/clone.c:825
+#: builtin/clone.c:810
 #, c-format
 msgid "destination path '%s' already exists and is not an empty directory."
 msgstr "el camí destí '%s' ja existeix i no és un directori buit."
 
-#: builtin/clone.c:835
+#: builtin/clone.c:820
 #, c-format
 msgid "working tree '%s' already exists."
 msgstr "l'arbre de treball '%s' ja existeix."
 
-#: builtin/clone.c:850 builtin/clone.c:861
+#: builtin/clone.c:835 builtin/clone.c:846 builtin/worktree.c:193
+#: builtin/worktree.c:220
 #, c-format
 msgid "could not create leading directories of '%s'"
 msgstr "no s'ha pogut crear els directoris inicials de '%s'"
 
-#: builtin/clone.c:853
+#: builtin/clone.c:838
 #, c-format
 msgid "could not create work tree dir '%s'"
 msgstr "no s'ha pogut crear el directori d'arbre de treball '%s'"
 
-#: builtin/clone.c:871
+#: builtin/clone.c:856
 #, c-format
 msgid "Cloning into bare repository '%s'...\n"
 msgstr "Clonant al dipòsit nu '%s'...\n"
 
-#: builtin/clone.c:873
+#: builtin/clone.c:858
 #, c-format
 msgid "Cloning into '%s'...\n"
 msgstr "Clonant a '%s'...\n"
 
-#: builtin/clone.c:898
+#: builtin/clone.c:883
 msgid "--dissociate given, but there is no --reference"
 msgstr "s'ha donat --dissociate, però no hi ha --reference"
 
-#: builtin/clone.c:913
+#: builtin/clone.c:900
 msgid "--depth is ignored in local clones; use file:// instead."
 msgstr "--depth s'ignora en els clons locals; useu file:// en lloc d'això."
 
-#: builtin/clone.c:916
+#: builtin/clone.c:903
 msgid "source repository is shallow, ignoring --local"
 msgstr "el dipòsit font és superficial, ignorant --local"
 
-#: builtin/clone.c:921
+#: builtin/clone.c:908
 msgid "--local is ignored"
 msgstr "--local s'ignora"
 
-#: builtin/clone.c:925
+#: builtin/clone.c:912
 #, c-format
 msgid "Don't know how to clone %s"
 msgstr "No es sap com clonar %s"
 
-#: builtin/clone.c:976 builtin/clone.c:984
+#: builtin/clone.c:961 builtin/clone.c:969
 #, c-format
 msgid "Remote branch %s not found in upstream %s"
 msgstr "La branca remota %s no es troba en la font %s"
 
-#: builtin/clone.c:987
+#: builtin/clone.c:972
 msgid "You appear to have cloned an empty repository."
 msgstr "Sembla que heu clonat un dipòsit buit."
 
 #: builtin/column.c:9
 msgid "git column [<options>]"
 msgstr "git column [<opcions>]"
@@ -4402,13 +4492,13 @@
 msgstr "no s'ha pogut llegir MERGE_MSG"
 
 #: builtin/commit.c:734
 msgid "could not read SQUASH_MSG"
 msgstr "no s'ha pogur llegir SQUASH_MSG"
 
-#: builtin/commit.c:738
+#: builtin/commit.c:738 builtin/merge.c:1079
 #, c-format
 msgid "could not read '%s'"
 msgstr "no s'ha pogut llegir '%s'"
 
 #: builtin/commit.c:785
 msgid "could not write commit template"
@@ -4564,48 +4654,48 @@
 msgstr "Mode de neteja no vàlid %s"
 
 #: builtin/commit.c:1214
 msgid "Paths with -a does not make sense."
 msgstr "-a no té sentit amb camins."
 
-#: builtin/commit.c:1324 builtin/commit.c:1604
+#: builtin/commit.c:1324 builtin/commit.c:1603
 msgid "show status concisely"
 msgstr "mostra l'estat concisament"
 
-#: builtin/commit.c:1326 builtin/commit.c:1606
+#: builtin/commit.c:1326 builtin/commit.c:1605
 msgid "show branch information"
 msgstr "mostra la informació de branca"
 
-#: builtin/commit.c:1328 builtin/commit.c:1608 builtin/push.c:509
+#: builtin/commit.c:1328 builtin/commit.c:1607 builtin/push.c:509
 msgid "machine-readable output"
 msgstr "sortida llegible per màquina"
 
-#: builtin/commit.c:1331 builtin/commit.c:1610
+#: builtin/commit.c:1331 builtin/commit.c:1609
 msgid "show status in long format (default)"
 msgstr "mostra l'estat en format llarg (per defecte)"
 
-#: builtin/commit.c:1334 builtin/commit.c:1613
+#: builtin/commit.c:1334 builtin/commit.c:1612
 msgid "terminate entries with NUL"
 msgstr "acaba les entrades amb NUL"
 
-#: builtin/commit.c:1336 builtin/commit.c:1616 builtin/fast-export.c:980
+#: builtin/commit.c:1336 builtin/commit.c:1615 builtin/fast-export.c:980
 #: builtin/fast-export.c:983 builtin/tag.c:603
 msgid "mode"
 msgstr "mode"
 
-#: builtin/commit.c:1337 builtin/commit.c:1616
+#: builtin/commit.c:1337 builtin/commit.c:1615
 msgid "show untracked files, optional modes: all, normal, no. (Default: all)"
 msgstr ""
 "mostra els fitxers no seguits, modes opcional: all, normal, no. (Per "
 "defecte: all)"
 
 #: builtin/commit.c:1340
 msgid "show ignored files"
 msgstr "mostra els fitxers ignorats"
 
-#: builtin/commit.c:1341 parse-options.h:153
+#: builtin/commit.c:1341 parse-options.h:152
 msgid "when"
 msgstr "quan"
 
 #: builtin/commit.c:1342
 msgid ""
 "ignore changes to submodules, optional when: all, dirty, untracked. "
@@ -4615,212 +4705,212 @@
 "defecte: all)"
 
 #: builtin/commit.c:1344
 msgid "list untracked files in columns"
 msgstr "mostra els fitxers no seguits en columnes"
 
-#: builtin/commit.c:1431
+#: builtin/commit.c:1430
 msgid "couldn't look up newly created commit"
 msgstr "no s'ha pogut trobar la comissió novament creada"
 
-#: builtin/commit.c:1433
+#: builtin/commit.c:1432
 msgid "could not parse newly created commit"
 msgstr "no s'ha pogut analitzar la comissió novament creada"
 
-#: builtin/commit.c:1478
+#: builtin/commit.c:1477
 msgid "detached HEAD"
 msgstr "HEAD separat"
 
-#: builtin/commit.c:1481
+#: builtin/commit.c:1480
 msgid " (root-commit)"
 msgstr " (comissió d'arrel)"
 
-#: builtin/commit.c:1574
+#: builtin/commit.c:1573
 msgid "suppress summary after successful commit"
 msgstr "omet el resum després d'una comissió reeixida"
 
-#: builtin/commit.c:1575
+#: builtin/commit.c:1574
 msgid "show diff in commit message template"
 msgstr "mostra la diferència en la plantilla de missatge de comissió"
 
-#: builtin/commit.c:1577
+#: builtin/commit.c:1576
 msgid "Commit message options"
 msgstr "Opcions de missatge de comissió"
 
-#: builtin/commit.c:1578 builtin/tag.c:601
+#: builtin/commit.c:1577 builtin/tag.c:601
 msgid "read message from file"
 msgstr "llegiu el missatge des d'un fitxer"
 
-#: builtin/commit.c:1579
+#: builtin/commit.c:1578
 msgid "author"
 msgstr "autor"
 
-#: builtin/commit.c:1579
+#: builtin/commit.c:1578
 msgid "override author for commit"
 msgstr "autor corregit de la comissió"
 
-#: builtin/commit.c:1580 builtin/gc.c:275
+#: builtin/commit.c:1579 builtin/gc.c:280
 msgid "date"
 msgstr "data"
 
-#: builtin/commit.c:1580
+#: builtin/commit.c:1579
 msgid "override date for commit"
 msgstr "data corregida de la comissió"
 
-#: builtin/commit.c:1581 builtin/merge.c:218 builtin/notes.c:391
+#: builtin/commit.c:1580 builtin/merge.c:218 builtin/notes.c:391
 #: builtin/notes.c:554 builtin/tag.c:599
 msgid "message"
 msgstr "missatge"
 
-#: builtin/commit.c:1581
+#: builtin/commit.c:1580
 msgid "commit message"
 msgstr "missatge de comissió"
 
-#: builtin/commit.c:1582
+#: builtin/commit.c:1581
 msgid "reuse and edit message from specified commit"
 msgstr "reusa i edita el missatge de la comissió especificada"
 
-#: builtin/commit.c:1583
+#: builtin/commit.c:1582
 msgid "reuse message from specified commit"
 msgstr "reusa el missatge de la comissió especificada"
 
-#: builtin/commit.c:1584
+#: builtin/commit.c:1583
 msgid "use autosquash formatted message to fixup specified commit"
 msgstr ""
 "usa el missatge formatat d'aixafada automàtica per a arreglar la comissió "
 "especificada"
 
-#: builtin/commit.c:1585
+#: builtin/commit.c:1584
 msgid "use autosquash formatted message to squash specified commit"
 msgstr ""
 "usa el missatge formatat d'aixafada automàtica per a aixafar la comissió "
 "especificada"
 
-#: builtin/commit.c:1586
+#: builtin/commit.c:1585
 msgid "the commit is authored by me now (used with -C/-c/--amend)"
-msgstr "l'autor de la comissió ja sóc jo (usat amb -C/-c/--amend)"
+msgstr "l'autor de la comissió ja sóc jo (s'usa amb -C/-c/--amend)"
 
-#: builtin/commit.c:1587 builtin/log.c:1191 builtin/revert.c:86
+#: builtin/commit.c:1586 builtin/log.c:1191 builtin/revert.c:86
 msgid "add Signed-off-by:"
 msgstr "afegeix Signed-off-by:"
 
-#: builtin/commit.c:1588
+#: builtin/commit.c:1587
 msgid "use specified template file"
 msgstr "usa el fitxer de plantilla especificat"
 
-#: builtin/commit.c:1589
+#: builtin/commit.c:1588
 msgid "force edit of commit"
 msgstr "força l'edició de la comissió"
 
-#: builtin/commit.c:1590
+#: builtin/commit.c:1589
 msgid "default"
 msgstr "per defecte"
 
-#: builtin/commit.c:1590 builtin/tag.c:604
+#: builtin/commit.c:1589 builtin/tag.c:604
 msgid "how to strip spaces and #comments from message"
 msgstr "com despullar els espais i #comentaris del missatge"
 
-#: builtin/commit.c:1591
+#: builtin/commit.c:1590
 msgid "include status in commit message template"
 msgstr "inclou l'estat en la plantilla de missatge de comissió"
 
-#: builtin/commit.c:1592 builtin/merge.c:225 builtin/revert.c:92
+#: builtin/commit.c:1591 builtin/merge.c:225 builtin/revert.c:92
 #: builtin/tag.c:605
 msgid "key-id"
 msgstr "ID de clau"
 
-#: builtin/commit.c:1593 builtin/merge.c:226 builtin/revert.c:93
+#: builtin/commit.c:1592 builtin/merge.c:226 builtin/revert.c:93
 msgid "GPG sign commit"
 msgstr "firma la comissió amb GPG"
 
-#: builtin/commit.c:1596
+#: builtin/commit.c:1595
 msgid "Commit contents options"
 msgstr "Opcions dels continguts de les comissions"
 
-#: builtin/commit.c:1597
+#: builtin/commit.c:1596
 msgid "commit all changed files"
 msgstr "comet tots els fitxers canviats"
 
-#: builtin/commit.c:1598
+#: builtin/commit.c:1597
 msgid "add specified files to index for commit"
 msgstr "afegeix els fitxers especificats a l'índex per a cometre"
 
-#: builtin/commit.c:1599
+#: builtin/commit.c:1598
 msgid "interactively add files"
 msgstr "afegeix els fitxers interactivament"
 
-#: builtin/commit.c:1600
+#: builtin/commit.c:1599
 msgid "interactively add changes"
 msgstr "afegeix els canvis interactivament"
 
-#: builtin/commit.c:1601
+#: builtin/commit.c:1600
 msgid "commit only specified files"
 msgstr "comet només els fitxers especificats"
 
-#: builtin/commit.c:1602
+#: builtin/commit.c:1601
 msgid "bypass pre-commit hook"
 msgstr "evita el ganxo de precomissió"
 
-#: builtin/commit.c:1603
+#: builtin/commit.c:1602
 msgid "show what would be committed"
 msgstr "mostra què es cometria"
 
-#: builtin/commit.c:1614
+#: builtin/commit.c:1613
 msgid "amend previous commit"
 msgstr "esmena la comissió anterior"
 
-#: builtin/commit.c:1615
+#: builtin/commit.c:1614
 msgid "bypass post-rewrite hook"
 msgstr "evita el ganxo de postreescriure"
 
-#: builtin/commit.c:1620
+#: builtin/commit.c:1619
 msgid "ok to record an empty change"
 msgstr "està bé registrar un canvi buit"
 
-#: builtin/commit.c:1622
+#: builtin/commit.c:1621
 msgid "ok to record a change with an empty message"
 msgstr "està bé registrar un canvi amb missatge buit"
 
-#: builtin/commit.c:1651
+#: builtin/commit.c:1650
 msgid "could not parse HEAD commit"
 msgstr "no s'ha pogut analitzar la comissió HEAD"
 
-#: builtin/commit.c:1690 builtin/merge.c:519
+#: builtin/commit.c:1689 builtin/merge.c:1076
 #, c-format
 msgid "could not open '%s' for reading"
 msgstr "no s'ha pogut obrir '%s' per a lectura"
 
-#: builtin/commit.c:1697
+#: builtin/commit.c:1696
 #, c-format
 msgid "Corrupt MERGE_HEAD file (%s)"
 msgstr "Fitxer MERGE_HEAD corrupte (%s)"
 
-#: builtin/commit.c:1704
+#: builtin/commit.c:1703
 msgid "could not read MERGE_MODE"
 msgstr "no s'ha pogut llegir MERGE_MODE"
 
-#: builtin/commit.c:1723
+#: builtin/commit.c:1722
 #, c-format
 msgid "could not read commit message: %s"
 msgstr "no s'ha pogut llegir el missatge de comissió: %s"
 
-#: builtin/commit.c:1734
+#: builtin/commit.c:1733
 #, c-format
 msgid "Aborting commit; you did not edit the message.\n"
 msgstr "Avortant la comissió; no heu editat el missatge.\n"
 
-#: builtin/commit.c:1739
+#: builtin/commit.c:1738
 #, c-format
 msgid "Aborting commit due to empty commit message.\n"
 msgstr "Avortant la comissió a causa d'un missatge de comissió buit.\n"
 
-#: builtin/commit.c:1754 builtin/merge.c:851 builtin/merge.c:876
+#: builtin/commit.c:1753 builtin/merge.c:829 builtin/merge.c:854
 msgid "failed to write commit object"
 msgstr "s'ha fallat en escriure l'objecte de comissió"
 
-#: builtin/commit.c:1787
+#: builtin/commit.c:1786
 msgid ""
 "Repository has been updated, but unable to write\n"
 "new_index file. Check that disk is not full and quota is\n"
 "not exceeded, and then \"git reset HEAD\" to recover."
 msgstr ""
 "S'ha actualitzat el dipòsit, però no es pot escriure el\n"
@@ -4958,24 +5048,24 @@
 msgstr "no s'ha pogut analitzar el valor de color per defecte"
 
 #: builtin/config.c:457
 #, c-format
 msgid ""
 "# This is Git's per-user configuration file.\n"
-"[core]\n"
+"[user]\n"
 "# Please adapt and uncomment the following lines:\n"
-"#\tuser = %s\n"
+"#\tname = %s\n"
 "#\temail = %s\n"
 msgstr ""
 "# Això és el fitxer de configuració del Git de l'usuari.\n"
-"[core]\n"
+"[user]\n"
 "# Si us plau, adapteu i descomenteu les línies següents:\n"
-"#\tuser = %s\n"
+"#\tname = %s\n"
 "#\temail = %s\n"
 
-#: builtin/config.c:589
+#: builtin/config.c:587
 #, c-format
 msgid "cannot create configuration file %s"
 msgstr "no es pot crear el fitxer de configuració '%s'"
 
 #: builtin/count-objects.c:55
 msgid "git count-objects [-v] [-H | --human-readable]"
@@ -5299,370 +5389,370 @@
 msgstr "mapa de referències"
 
 #: builtin/fetch.c:125
 msgid "specify fetch refmap"
 msgstr "mostra el mapa de referències d'obteniment"
 
-#: builtin/fetch.c:375
+#: builtin/fetch.c:377
 msgid "Couldn't find remote ref HEAD"
 msgstr "No s'ha pogut trobar la referència HEAD remota"
 
-#: builtin/fetch.c:455
+#: builtin/fetch.c:457
 #, c-format
 msgid "object %s not found"
 msgstr "objecte %s no trobat"
 
-#: builtin/fetch.c:460
+#: builtin/fetch.c:462
 msgid "[up to date]"
 msgstr "[al dia]"
 
-#: builtin/fetch.c:474
+#: builtin/fetch.c:476
 #, c-format
 msgid "! %-*s %-*s -> %s  (can't fetch in current branch)"
 msgstr "! %-*s %-*s -> %s  (no es pot obtenir en la branca actual)"
 
-#: builtin/fetch.c:475 builtin/fetch.c:561
+#: builtin/fetch.c:477 builtin/fetch.c:563
 msgid "[rejected]"
 msgstr "[rebutjat]"
 
-#: builtin/fetch.c:486
+#: builtin/fetch.c:488
 msgid "[tag update]"
 msgstr "[actualització d'etiqueta]"
 
-#: builtin/fetch.c:488 builtin/fetch.c:523 builtin/fetch.c:541
+#: builtin/fetch.c:490 builtin/fetch.c:525 builtin/fetch.c:543
 msgid "  (unable to update local ref)"
 msgstr "  (no s'ha pogut actualitzar la referència local)"
 
-#: builtin/fetch.c:506
+#: builtin/fetch.c:508
 msgid "[new tag]"
 msgstr "[etiqueta nova]"
 
-#: builtin/fetch.c:509
+#: builtin/fetch.c:511
 msgid "[new branch]"
 msgstr "[branca nova]"
 
-#: builtin/fetch.c:512
+#: builtin/fetch.c:514
 msgid "[new ref]"
 msgstr "[referència nova]"
 
-#: builtin/fetch.c:557
+#: builtin/fetch.c:559
 msgid "unable to update local ref"
 msgstr "no s'ha pogut actualitzar la referència local"
 
-#: builtin/fetch.c:557
+#: builtin/fetch.c:559
 msgid "forced update"
 msgstr "actualització forçada"
 
-#: builtin/fetch.c:563
+#: builtin/fetch.c:565
 msgid "(non-fast-forward)"
 msgstr "(sense avanç ràpid)"
 
-#: builtin/fetch.c:596 builtin/fetch.c:829
+#: builtin/fetch.c:599 builtin/fetch.c:832
 #, c-format
 msgid "cannot open %s: %s\n"
 msgstr "no es pot obrir %s: %s\n"
 
-#: builtin/fetch.c:605
+#: builtin/fetch.c:608
 #, c-format
 msgid "%s did not send all necessary objects\n"
 msgstr "%s no ha enviat tots els objectes necessaris\n"
 
-#: builtin/fetch.c:623
+#: builtin/fetch.c:626
 #, c-format
 msgid "reject %s because shallow roots are not allowed to be updated"
 msgstr ""
 "rebutja %s perquè no es permet que les arrels superficials s'actualitzin"
 
-#: builtin/fetch.c:711 builtin/fetch.c:794
+#: builtin/fetch.c:714 builtin/fetch.c:797
 #, c-format
 msgid "From %.*s\n"
 msgstr "De %.*s\n"
 
-#: builtin/fetch.c:722
+#: builtin/fetch.c:725
 #, c-format
 msgid ""
 "some local refs could not be updated; try running\n"
 " 'git remote prune %s' to remove any old, conflicting branches"
 msgstr ""
 "algunes referències locals no s'han pogut actualitzar;\n"
 " intenteu executar 'git remote prune %s' per a eliminar\n"
 " qualsevulla branca antiga o conflictiva"
 
-#: builtin/fetch.c:774
+#: builtin/fetch.c:777
 #, c-format
 msgid "   (%s will become dangling)"
 msgstr "   (%s es tornarà penjant)"
 
-#: builtin/fetch.c:775
+#: builtin/fetch.c:778
 #, c-format
 msgid "   (%s has become dangling)"
 msgstr "   (%s s'ha tornat penjant)"
 
-#: builtin/fetch.c:799
+#: builtin/fetch.c:802
 msgid "[deleted]"
 msgstr "[suprimit]"
 
-#: builtin/fetch.c:800 builtin/remote.c:1060
+#: builtin/fetch.c:803 builtin/remote.c:1057
 msgid "(none)"
 msgstr "(cap)"
 
-#: builtin/fetch.c:819
+#: builtin/fetch.c:822
 #, c-format
 msgid "Refusing to fetch into current branch %s of non-bare repository"
 msgstr "Refusant obtenir en la branca actual %s d'un dipòsit no nu"
 
-#: builtin/fetch.c:838
+#: builtin/fetch.c:841
 #, c-format
 msgid "Option \"%s\" value \"%s\" is not valid for %s"
 msgstr "L'opció \"%s\" amb valor \"%s\" no és vàlida per a %s"
 
-#: builtin/fetch.c:841
+#: builtin/fetch.c:844
 #, c-format
 msgid "Option \"%s\" is ignored for %s\n"
 msgstr "S'ignora l'opció \"%s\" per a %s\n"
 
-#: builtin/fetch.c:897
+#: builtin/fetch.c:900
 #, c-format
 msgid "Don't know how to fetch from %s"
 msgstr "No es sap com obtenir de %s"
 
-#: builtin/fetch.c:1059
+#: builtin/fetch.c:1063
 #, c-format
 msgid "Fetching %s\n"
 msgstr "Obtenint %s\n"
 
-#: builtin/fetch.c:1061 builtin/remote.c:90
+#: builtin/fetch.c:1065 builtin/remote.c:90
 #, c-format
 msgid "Could not fetch %s"
 msgstr "No s'ha pogut obtenir %s"
 
-#: builtin/fetch.c:1079
+#: builtin/fetch.c:1083
 msgid ""
 "No remote repository specified.  Please, specify either a URL or a\n"
 "remote name from which new revisions should be fetched."
 msgstr ""
 "Cap dipòsit remot especificat. Si us plau, especifiqueu o un URL o\n"
 "un nom remot del qual es deuen obtenir les revisions noves."
 
-#: builtin/fetch.c:1102
+#: builtin/fetch.c:1106
 msgid "You need to specify a tag name."
 msgstr "Necessiteu especificar un nom d'etiqueta."
 
-#: builtin/fetch.c:1144
+#: builtin/fetch.c:1148
 msgid "--depth and --unshallow cannot be used together"
 msgstr "--depth i --unshallow no es poden usar junts"
 
-#: builtin/fetch.c:1146
+#: builtin/fetch.c:1150
 msgid "--unshallow on a complete repository does not make sense"
 msgstr "--unshallow en un dipòsit complet no té sentit"
 
-#: builtin/fetch.c:1169
+#: builtin/fetch.c:1173
 msgid "fetch --all does not take a repository argument"
 msgstr "fetch --all no accepta un paràmetre de dipòsit"
 
-#: builtin/fetch.c:1171
+#: builtin/fetch.c:1175
 msgid "fetch --all does not make sense with refspecs"
 msgstr "fetch --all no té sentit amb especificacions de referència"
 
-#: builtin/fetch.c:1182
+#: builtin/fetch.c:1186
 #, c-format
 msgid "No such remote or remote group: %s"
 msgstr "No hi ha tal remot ni tal grup remot: %s"
 
-#: builtin/fetch.c:1190
+#: builtin/fetch.c:1194
 msgid "Fetching a group and specifying refspecs does not make sense"
 msgstr "Obtenir un grup i especificar referències no té sentit"
 
 #: builtin/fmt-merge-msg.c:13
 msgid ""
 "git fmt-merge-msg [-m <message>] [--log[=<n>] | --no-log] [--file <file>]"
 msgstr ""
 "git fmt-merge-msg [-m <missatge>] [--log[=<n>] | --no-log] [--file <fitxer>]"
 
-#: builtin/fmt-merge-msg.c:662 builtin/fmt-merge-msg.c:665 builtin/grep.c:698
+#: builtin/fmt-merge-msg.c:668 builtin/fmt-merge-msg.c:671 builtin/grep.c:698
 #: builtin/merge.c:198 builtin/repack.c:178 builtin/repack.c:182
-#: builtin/show-branch.c:657 builtin/show-ref.c:178 builtin/tag.c:590
-#: parse-options.h:132 parse-options.h:239
+#: builtin/show-branch.c:664 builtin/show-ref.c:180 builtin/tag.c:590
+#: parse-options.h:131 parse-options.h:238
 msgid "n"
 msgstr "n"
 
-#: builtin/fmt-merge-msg.c:663
+#: builtin/fmt-merge-msg.c:669
 msgid "populate log with at most <n> entries from shortlog"
 msgstr "emplena el registre amb <n> entrades del registre curt com a màxim"
 
-#: builtin/fmt-merge-msg.c:666
+#: builtin/fmt-merge-msg.c:672
 msgid "alias for --log (deprecated)"
 msgstr "àlies per --log (desaprovat)"
 
-#: builtin/fmt-merge-msg.c:669
+#: builtin/fmt-merge-msg.c:675
 msgid "text"
 msgstr "text"
 
-#: builtin/fmt-merge-msg.c:670
+#: builtin/fmt-merge-msg.c:676
 msgid "use <text> as start of message"
 msgstr "usa <text> com a inici de missatge"
 
-#: builtin/fmt-merge-msg.c:671
+#: builtin/fmt-merge-msg.c:677
 msgid "file to read from"
 msgstr "fitxer del qual llegir"
 
-#: builtin/for-each-ref.c:675
+#: builtin/for-each-ref.c:687
 msgid "unable to parse format"
 msgstr "no s'ha pogut analitzar el format"
 
-#: builtin/for-each-ref.c:1063
+#: builtin/for-each-ref.c:1083
 msgid "git for-each-ref [<options>] [<pattern>]"
 msgstr "git for-each-ref [<opcions>] [<patró>]"
 
-#: builtin/for-each-ref.c:1078
+#: builtin/for-each-ref.c:1098
 msgid "quote placeholders suitably for shells"
 msgstr ""
 "posa els marcadors de posició entre cometes adequades per als terminals"
 
-#: builtin/for-each-ref.c:1080
+#: builtin/for-each-ref.c:1100
 msgid "quote placeholders suitably for perl"
 msgstr "posa els marcadors de posició entre cometes adequades per a perl"
 
-#: builtin/for-each-ref.c:1082
+#: builtin/for-each-ref.c:1102
 msgid "quote placeholders suitably for python"
 msgstr "posa els marcadors de posició entre cometes adequades per a python"
 
-#: builtin/for-each-ref.c:1084
+#: builtin/for-each-ref.c:1104
 msgid "quote placeholders suitably for Tcl"
 msgstr "posa els marcadors de posició entre cometes adequades per a Tcl"
 
-#: builtin/for-each-ref.c:1087
+#: builtin/for-each-ref.c:1107
 msgid "show only <n> matched refs"
 msgstr "mostra només <n> referències coincidents"
 
-#: builtin/for-each-ref.c:1088 builtin/replace.c:438
+#: builtin/for-each-ref.c:1108 builtin/replace.c:438
 msgid "format"
 msgstr "format"
 
-#: builtin/for-each-ref.c:1088
+#: builtin/for-each-ref.c:1108
 msgid "format to use for the output"
 msgstr "format a usar en la sortida"
 
-#: builtin/for-each-ref.c:1089
+#: builtin/for-each-ref.c:1109
 msgid "key"
 msgstr "clau"
 
-#: builtin/for-each-ref.c:1090
+#: builtin/for-each-ref.c:1110
 msgid "field name to sort on"
 msgstr "nom de camp en el qual ordenar"
 
 #: builtin/fsck.c:147 builtin/prune.c:137
 msgid "Checking connectivity"
 msgstr "Comprovant connectivitat"
 
-#: builtin/fsck.c:540
+#: builtin/fsck.c:548
 msgid "Checking object directories"
 msgstr "Comprovant els directoris d'objecte"
 
-#: builtin/fsck.c:603
+#: builtin/fsck.c:611
 msgid "git fsck [<options>] [<object>...]"
 msgstr "git fsck [<opcions>] [<objecte>...]"
 
-#: builtin/fsck.c:609
+#: builtin/fsck.c:617
 msgid "show unreachable objects"
 msgstr "mostra els objectes inabastables"
 
-#: builtin/fsck.c:610
+#: builtin/fsck.c:618
 msgid "show dangling objects"
 msgstr "mostra els objectes penjants"
 
-#: builtin/fsck.c:611
+#: builtin/fsck.c:619
 msgid "report tags"
 msgstr "informa de les etiquetes"
 
-#: builtin/fsck.c:612
+#: builtin/fsck.c:620
 msgid "report root nodes"
 msgstr "informa dels nodes d'arrel"
 
-#: builtin/fsck.c:613
+#: builtin/fsck.c:621
 msgid "make index objects head nodes"
 msgstr "fes els objectes d'índex nodes de cap"
 
-#: builtin/fsck.c:614
+#: builtin/fsck.c:622
 msgid "make reflogs head nodes (default)"
 msgstr "fes que els registres de referències siguin nodes de cap (per defecte)"
 
-#: builtin/fsck.c:615
+#: builtin/fsck.c:623
 msgid "also consider packs and alternate objects"
 msgstr "també considera els paquets i els objectes alternatius"
 
-#: builtin/fsck.c:616
+#: builtin/fsck.c:624
 msgid "enable more strict checking"
 msgstr "habilita la comprovació més estricta"
 
-#: builtin/fsck.c:618
+#: builtin/fsck.c:626
 msgid "write dangling objects in .git/lost-found"
 msgstr "escriu objectes penjants a .git/lost-found"
 
-#: builtin/fsck.c:619 builtin/prune.c:108
+#: builtin/fsck.c:627 builtin/prune.c:107
 msgid "show progress"
 msgstr "mostra el progrés"
 
-#: builtin/fsck.c:669
+#: builtin/fsck.c:677
 msgid "Checking objects"
 msgstr "Comprovant els objectes"
 
 #: builtin/gc.c:24
 msgid "git gc [<options>]"
 msgstr "git gc [<opcions>]"
 
-#: builtin/gc.c:79
+#: builtin/gc.c:67
 #, c-format
-msgid "Invalid gc.pruneexpire: '%s'"
-msgstr "gc.pruneexpire no vàlid: %s"
+msgid "Invalid %s: '%s'"
+msgstr "%s no vàlid: %s"
 
-#: builtin/gc.c:107
+#: builtin/gc.c:112
 #, c-format
 msgid "insanely long object directory %.*s"
 msgstr "directori d'objectes increïblement llarg %.*s"
 
-#: builtin/gc.c:276
+#: builtin/gc.c:281
 msgid "prune unreferenced objects"
 msgstr "poda objectes sense referència"
 
-#: builtin/gc.c:278
+#: builtin/gc.c:283
 msgid "be more thorough (increased runtime)"
 msgstr "sigues més exhaustiu (el temps d'execució augmenta)"
 
-#: builtin/gc.c:279
+#: builtin/gc.c:284
 msgid "enable auto-gc mode"
 msgstr "habilita el mode de recollida d'escombraries automàtica"
 
-#: builtin/gc.c:280
+#: builtin/gc.c:285
 msgid "force running gc even if there may be another gc running"
 msgstr "força l'execució de gc encara que hi pugui haver un altre gc executant"
 
-#: builtin/gc.c:321
+#: builtin/gc.c:327
 #, c-format
 msgid "Auto packing the repository in background for optimum performance.\n"
 msgstr ""
 "Empaquetant automàticament el dipòsit en el fons per rendiment òptim.\n"
 
-#: builtin/gc.c:323
+#: builtin/gc.c:329
 #, c-format
 msgid "Auto packing the repository for optimum performance.\n"
 msgstr "Empaquetant automàticament el dipòsit per rendiment òptim.\n"
 
-#: builtin/gc.c:324
+#: builtin/gc.c:330
 #, c-format
 msgid "See \"git help gc\" for manual housekeeping.\n"
 msgstr "Vegeu \"git help gc\" per neteja manual.\n"
 
-#: builtin/gc.c:342
+#: builtin/gc.c:348
 #, c-format
 msgid ""
 "gc is already running on machine '%s' pid %<PRIuMAX> (use --force if not)"
 msgstr ""
 "gc ja està executant en la màquina '%s' pid %<PRIuMAX> (useu --force si no)"
 
-#: builtin/gc.c:364
+#: builtin/gc.c:376
 msgid ""
 "There are too many unreachable loose objects; run 'git prune' to remove them."
 msgstr ""
 "Hi ha massa objectes solts inabastables; executeu 'git prune' per a eliminar-"
 "los."
 
@@ -5864,13 +5954,13 @@
 msgstr "mostra els fitxers coincidents en el paginador"
 
 #: builtin/grep.c:740
 msgid "allow calling of grep(1) (ignored by this build)"
 msgstr "permet la invocació de grep(1) (ignorat per aquesta compilació)"
 
-#: builtin/grep.c:741 builtin/show-ref.c:187
+#: builtin/grep.c:741 builtin/show-ref.c:189
 msgid "show usage"
 msgstr "mostra l'ús"
 
 #: builtin/grep.c:808
 msgid "no pattern given."
 msgstr "cap patró donat."
@@ -5892,52 +5982,52 @@
 msgstr "--[no-]exclude-standard no es pot usar per als continguts seguits."
 
 #: builtin/grep.c:908
 msgid "both --cached and trees are given."
 msgstr "s'han donat ambdós --caches i arbres."
 
-#: builtin/hash-object.c:82
+#: builtin/hash-object.c:80
 msgid ""
 "git hash-object [-t <type>] [-w] [--path=<file> | --no-filters] [--stdin] "
 "[--] <file>..."
 msgstr ""
 "git hash-object [-t <tipus>] [-w] [--path=<fitxer> | --no-filters] [--stdin] "
 "[--] <fitxer>..."
 
-#: builtin/hash-object.c:83
+#: builtin/hash-object.c:81
 msgid "git hash-object  --stdin-paths < <list-of-paths>"
 msgstr "git hash-object  --stdin-paths < <llista-de-camins>"
 
-#: builtin/hash-object.c:94 builtin/tag.c:612
+#: builtin/hash-object.c:92 builtin/tag.c:612
 msgid "type"
 msgstr "tipus"
 
-#: builtin/hash-object.c:94
+#: builtin/hash-object.c:92
 msgid "object type"
 msgstr "tipus d'objecte"
 
-#: builtin/hash-object.c:95
+#: builtin/hash-object.c:93
 msgid "write the object into the object database"
 msgstr "escriu l'objecte a la base de dades d'objectes"
 
-#: builtin/hash-object.c:97
+#: builtin/hash-object.c:95
 msgid "read the object from stdin"
 msgstr "llegiu l'objecte des d'stdin"
 
-#: builtin/hash-object.c:99
+#: builtin/hash-object.c:97
 msgid "store file as is without filters"
 msgstr "emmagatzema el fitxer tal com és sense filtres"
 
-#: builtin/hash-object.c:100
+#: builtin/hash-object.c:98
 msgid ""
 "just hash any random garbage to create corrupt objects for debugging Git"
 msgstr ""
 "només suma qualsevulla brossa aleatòria per a crear objectes corruptes per a "
 "depurar al Git"
 
-#: builtin/hash-object.c:101
+#: builtin/hash-object.c:99
 msgid "process file as it were from this path"
 msgstr "processa el fitxer com si fos d'aquest camí"
 
 #: builtin/help.c:41
 msgid "print all available commands"
 msgstr "imprimeix totes les ordres disponibles"
@@ -6059,297 +6149,297 @@
 
 #: builtin/help.c:501
 #, c-format
 msgid "`git %s' is aliased to `%s'"
 msgstr "`git %s' és un àlies de `%s'"
 
-#: builtin/index-pack.c:150
+#: builtin/index-pack.c:151
 #, c-format
 msgid "unable to open %s"
 msgstr "no s'ha pogut obrir %s"
 
-#: builtin/index-pack.c:200
+#: builtin/index-pack.c:201
 #, c-format
 msgid "object type mismatch at %s"
 msgstr "hi ha una discordança de tipus d'objecte a %s"
 
-#: builtin/index-pack.c:220
+#: builtin/index-pack.c:221
 #, c-format
 msgid "did not receive expected object %s"
 msgstr "no s'ha rebut l'objecte esperat %s"
 
-#: builtin/index-pack.c:223
+#: builtin/index-pack.c:224
 #, c-format
 msgid "object %s: expected type %s, found %s"
 msgstr "objecte %s: tipus %s esperat, %s trobat"
 
-#: builtin/index-pack.c:265
+#: builtin/index-pack.c:266
 #, c-format
 msgid "cannot fill %d byte"
 msgid_plural "cannot fill %d bytes"
 msgstr[0] "no es pot omplir %d octet"
 msgstr[1] "no es pot omplir %d octets"
 
-#: builtin/index-pack.c:275
+#: builtin/index-pack.c:276
 msgid "early EOF"
 msgstr "EOF prematur"
 
-#: builtin/index-pack.c:276
+#: builtin/index-pack.c:277
 msgid "read error on input"
 msgstr "error de lectura d'entrada"
 
-#: builtin/index-pack.c:288
+#: builtin/index-pack.c:289
 msgid "used more bytes than were available"
-msgstr "s'han usat més octets dels que hi havia disponibles"
+msgstr "s'han usat més octets que hi havia disponibles"
 
-#: builtin/index-pack.c:295
+#: builtin/index-pack.c:296
 msgid "pack too large for current definition of off_t"
 msgstr "paquet massa gran per a la definició actual d'off_t"
 
-#: builtin/index-pack.c:311
+#: builtin/index-pack.c:312
 #, c-format
 msgid "unable to create '%s'"
 msgstr "no es pot crear '%s'"
 
-#: builtin/index-pack.c:316
+#: builtin/index-pack.c:317
 #, c-format
 msgid "cannot open packfile '%s'"
 msgstr "no es pot obrir el fitxer de paquet '%s'"
 
-#: builtin/index-pack.c:330
+#: builtin/index-pack.c:331
 msgid "pack signature mismatch"
 msgstr "hi ha una discordança de firma de paquet"
 
-#: builtin/index-pack.c:332
+#: builtin/index-pack.c:333
 #, c-format
 msgid "pack version %<PRIu32> unsupported"
 msgstr "la versió de paquet %<PRIu32> no és compatible"
 
-#: builtin/index-pack.c:350
+#: builtin/index-pack.c:351
 #, c-format
 msgid "pack has bad object at offset %lu: %s"
 msgstr "el paquet té un objecte dolent a la posició %lu: %s"
 
-#: builtin/index-pack.c:471
+#: builtin/index-pack.c:472
 #, c-format
 msgid "inflate returned %d"
 msgstr "la inflació ha retornat %d"
 
-#: builtin/index-pack.c:520
+#: builtin/index-pack.c:521
 msgid "offset value overflow for delta base object"
 msgstr "desbordament de valor de desplaçament per a l'objecte base de delta"
 
-#: builtin/index-pack.c:528
+#: builtin/index-pack.c:529
 msgid "delta base offset is out of bound"
 msgstr "el desplaçament de base de delta està fora de límits"
 
-#: builtin/index-pack.c:536
+#: builtin/index-pack.c:537
 #, c-format
 msgid "unknown object type %d"
 msgstr "tipus d'objecte desconegut %d"
 
-#: builtin/index-pack.c:567
+#: builtin/index-pack.c:568
 msgid "cannot pread pack file"
 msgstr "no es pot fer pread en el fitxer de paquet"
 
-#: builtin/index-pack.c:569
+#: builtin/index-pack.c:570
 #, c-format
 msgid "premature end of pack file, %lu byte missing"
 msgid_plural "premature end of pack file, %lu bytes missing"
 msgstr[0] "final prematur de fitxer de paquet, manca %lu octet"
 msgstr[1] "final prematur de fitxer de paquet, manquen %lu octets"
 
-#: builtin/index-pack.c:595
+#: builtin/index-pack.c:596
 msgid "serious inflate inconsistency"
 msgstr "hi ha una inconsistència seriosa d'inflació"
 
-#: builtin/index-pack.c:686 builtin/index-pack.c:692 builtin/index-pack.c:715
-#: builtin/index-pack.c:749 builtin/index-pack.c:758
+#: builtin/index-pack.c:742 builtin/index-pack.c:748 builtin/index-pack.c:771
+#: builtin/index-pack.c:805 builtin/index-pack.c:814
 #, c-format
 msgid "SHA1 COLLISION FOUND WITH %s !"
 msgstr "S'HA TROBAT UNA COL·LISIÓ SHA1 AMB %s !"
 
-#: builtin/index-pack.c:689 builtin/pack-objects.c:162
+#: builtin/index-pack.c:745 builtin/pack-objects.c:162
 #: builtin/pack-objects.c:254
 #, c-format
 msgid "unable to read %s"
 msgstr "no s'ha pogut llegir %s"
 
-#: builtin/index-pack.c:755
+#: builtin/index-pack.c:811
 #, c-format
 msgid "cannot read existing object %s"
 msgstr "no es pot llegir l'objecte existent %s"
 
-#: builtin/index-pack.c:769
+#: builtin/index-pack.c:825
 #, c-format
 msgid "invalid blob object %s"
 msgstr "objecte de blob no vàlid %s"
 
-#: builtin/index-pack.c:783
+#: builtin/index-pack.c:839
 #, c-format
 msgid "invalid %s"
 msgstr "%s no vàlid"
 
-#: builtin/index-pack.c:787
+#: builtin/index-pack.c:843
 msgid "Error in object"
 msgstr "Error en objecte"
 
-#: builtin/index-pack.c:789
+#: builtin/index-pack.c:845
 #, c-format
 msgid "Not all child objects of %s are reachable"
 msgstr "No tots els objectes fills de %s són abastables"
 
-#: builtin/index-pack.c:861 builtin/index-pack.c:890
+#: builtin/index-pack.c:917 builtin/index-pack.c:948
 msgid "failed to apply delta"
 msgstr "s'ha fallat en aplicar la delta"
 
-#: builtin/index-pack.c:1055
+#: builtin/index-pack.c:1118
 msgid "Receiving objects"
 msgstr "Rebent objectes"
 
-#: builtin/index-pack.c:1055
+#: builtin/index-pack.c:1118
 msgid "Indexing objects"
 msgstr "Indexant objectes"
 
-#: builtin/index-pack.c:1081
+#: builtin/index-pack.c:1150
 msgid "pack is corrupted (SHA1 mismatch)"
 msgstr "el paquet és corromput (discordança SHA1)"
 
-#: builtin/index-pack.c:1086
+#: builtin/index-pack.c:1155
 msgid "cannot fstat packfile"
 msgstr "no es pot fer fstat en el fitxer de paquet"
 
-#: builtin/index-pack.c:1089
+#: builtin/index-pack.c:1158
 msgid "pack has junk at the end"
 msgstr "el paquet té brossa al seu final"
 
-#: builtin/index-pack.c:1100
+#: builtin/index-pack.c:1169
 msgid "confusion beyond insanity in parse_pack_objects()"
 msgstr "confusió més enllà de la insanitat en parse_pack_objects()"
 
-#: builtin/index-pack.c:1123
+#: builtin/index-pack.c:1194
 msgid "Resolving deltas"
 msgstr "Resolent les deltes"
 
-#: builtin/index-pack.c:1133
+#: builtin/index-pack.c:1205
 #, c-format
 msgid "unable to create thread: %s"
 msgstr "no s'ha pogut crear fil: %s"
 
-#: builtin/index-pack.c:1175
+#: builtin/index-pack.c:1247
 msgid "confusion beyond insanity"
 msgstr "confusió més enllà de la insanitat"
 
-#: builtin/index-pack.c:1181
+#: builtin/index-pack.c:1253
 #, c-format
 msgid "completed with %d local objects"
 msgstr "s'ha completat amb %d objectes locals"
 
-#: builtin/index-pack.c:1191
+#: builtin/index-pack.c:1263
 #, c-format
 msgid "Unexpected tail checksum for %s (disk corruption?)"
 msgstr "Suma de verificació final no esperada per a %s (corrupció de disc?)"
 
-#: builtin/index-pack.c:1195
+#: builtin/index-pack.c:1267
 #, c-format
 msgid "pack has %d unresolved delta"
 msgid_plural "pack has %d unresolved deltas"
 msgstr[0] "El paquet té %d delta no resolta"
 msgstr[1] "El paquet té %d deltes no resoltes"
 
-#: builtin/index-pack.c:1219
+#: builtin/index-pack.c:1291
 #, c-format
 msgid "unable to deflate appended object (%d)"
 msgstr "no s'ha pogut desinflar l'objecte annexat (%d)"
 
-#: builtin/index-pack.c:1298
+#: builtin/index-pack.c:1367
 #, c-format
 msgid "local object %s is corrupt"
 msgstr "l'objecte local %s és corrupte"
 
-#: builtin/index-pack.c:1322
+#: builtin/index-pack.c:1391
 msgid "error while closing pack file"
 msgstr "error en tancar el fitxer de paquet"
 
-#: builtin/index-pack.c:1335
+#: builtin/index-pack.c:1404
 #, c-format
 msgid "cannot write keep file '%s'"
 msgstr "no es pot escriure el fitxer a retenir '%s'"
 
-#: builtin/index-pack.c:1343
+#: builtin/index-pack.c:1412
 #, c-format
 msgid "cannot close written keep file '%s'"
 msgstr "no es pot tancar el fitxer escrit a retenir '%s'"
 
-#: builtin/index-pack.c:1356
+#: builtin/index-pack.c:1425
 msgid "cannot store pack file"
 msgstr "no es pot emmagatzemar el fitxer de paquet"
 
-#: builtin/index-pack.c:1367
+#: builtin/index-pack.c:1436
 msgid "cannot store index file"
 msgstr "no es pot emmagatzemar el fitxer d'índex"
 
-#: builtin/index-pack.c:1400
+#: builtin/index-pack.c:1469
 #, c-format
 msgid "bad pack.indexversion=%<PRIu32>"
 msgstr "pack.indexversion=%<PRIu32> dolent"
 
-#: builtin/index-pack.c:1406
+#: builtin/index-pack.c:1475
 #, c-format
 msgid "invalid number of threads specified (%d)"
 msgstr "s'ha especificat un nombre de fils no vàlid (%d)"
 
-#: builtin/index-pack.c:1410 builtin/index-pack.c:1589
+#: builtin/index-pack.c:1479 builtin/index-pack.c:1658
 #, c-format
 msgid "no threads support, ignoring %s"
 msgstr "no hi ha suport de fils, ignorant %s"
 
-#: builtin/index-pack.c:1468
+#: builtin/index-pack.c:1537
 #, c-format
 msgid "Cannot open existing pack file '%s'"
 msgstr "No es pot obrir el fitxer de paquet existent '%s'"
 
-#: builtin/index-pack.c:1470
+#: builtin/index-pack.c:1539
 #, c-format
 msgid "Cannot open existing pack idx file for '%s'"
 msgstr "No es pot obrir el fitxer d'índex de paquets existent de '%s'"
 
-#: builtin/index-pack.c:1517
+#: builtin/index-pack.c:1586
 #, c-format
 msgid "non delta: %d object"
 msgid_plural "non delta: %d objects"
 msgstr[0] "sense delta: %d objecte"
 msgstr[1] "sense delta: %d objectes"
 
-#: builtin/index-pack.c:1524
+#: builtin/index-pack.c:1593
 #, c-format
 msgid "chain length = %d: %lu object"
 msgid_plural "chain length = %d: %lu objects"
 msgstr[0] "longitud de cadena = %d: %lu objecte"
 msgstr[1] "longitud de cadena = %d: %lu objectes"
 
-#: builtin/index-pack.c:1553
+#: builtin/index-pack.c:1622
 msgid "Cannot come back to cwd"
 msgstr "No es pot tornar al directori de treball actual"
 
-#: builtin/index-pack.c:1601 builtin/index-pack.c:1604
-#: builtin/index-pack.c:1616 builtin/index-pack.c:1620
+#: builtin/index-pack.c:1670 builtin/index-pack.c:1673
+#: builtin/index-pack.c:1685 builtin/index-pack.c:1689
 #, c-format
 msgid "bad %s"
 msgstr "%s dolent"
 
-#: builtin/index-pack.c:1634
+#: builtin/index-pack.c:1703
 msgid "--fix-thin cannot be used without --stdin"
 msgstr "--fix-thin no es pot usar sense --stdin"
 
-#: builtin/index-pack.c:1638 builtin/index-pack.c:1647
+#: builtin/index-pack.c:1707 builtin/index-pack.c:1716
 #, c-format
 msgid "packfile name '%s' does not end with '.pack'"
 msgstr "el nom de fitxer de paquet '%s' no acaba amb '.pack'"
 
-#: builtin/index-pack.c:1655
+#: builtin/index-pack.c:1724
 msgid "--verify with no packfile name given"
 msgstr "s'ha donat --verify sense nom de fitxer de paquet"
 
 #: builtin/init-db.c:35
 #, c-format
 msgid "Could not make %s writable by group"
@@ -6412,92 +6502,92 @@
 
 #: builtin/init-db.c:157
 #, c-format
 msgid "not copying templates of a wrong format version %d from '%s'"
 msgstr "no copiant plantilles d'una versió de format errònia %d de '%s'"
 
-#: builtin/init-db.c:197
+#: builtin/init-db.c:211
 #, c-format
 msgid "insane git directory %s"
 msgstr "directori de git boig %s"
 
-#: builtin/init-db.c:331 builtin/init-db.c:334
+#: builtin/init-db.c:343 builtin/init-db.c:346
 #, c-format
 msgid "%s already exists"
 msgstr "%s ja existeix"
 
-#: builtin/init-db.c:363
+#: builtin/init-db.c:374
 #, c-format
 msgid "unable to handle file type %d"
 msgstr "no s'ha pogut gestionar el tipus de fitxer %d"
 
-#: builtin/init-db.c:366
+#: builtin/init-db.c:377
 #, c-format
 msgid "unable to move %s to %s"
 msgstr "no s'ha pogut moure %s a %s"
 
 #. TRANSLATORS: The first '%s' is either "Reinitialized
 #. existing" or "Initialized empty", the second " shared" or
 #. "", and the last '%s%s' is the verbatim directory name.
-#: builtin/init-db.c:426
+#: builtin/init-db.c:433
 #, c-format
 msgid "%s%s Git repository in %s%s\n"
 msgstr "%s dipòsit de Git%s a %s%s\n"
 
-#: builtin/init-db.c:427
+#: builtin/init-db.c:434
 msgid "Reinitialized existing"
 msgstr "S'ha reinicialitzat un existent"
 
-#: builtin/init-db.c:427
+#: builtin/init-db.c:434
 msgid "Initialized empty"
 msgstr "S'ha inicialitzat un buit"
 
-#: builtin/init-db.c:428
+#: builtin/init-db.c:435
 msgid " shared"
 msgstr " compartit"
 
-#: builtin/init-db.c:475
+#: builtin/init-db.c:482
 msgid ""
 "git init [-q | --quiet] [--bare] [--template=<template-directory>] [--"
 "shared[=<permissions>]] [<directory>]"
 msgstr ""
 "git init [-q | --quiet] [--bare] [--template=<directori-de-plantilla>] [--"
 "shared[=<permisos>]] [<directori>]"
 
-#: builtin/init-db.c:498
+#: builtin/init-db.c:505
 msgid "permissions"
 msgstr "permisos"
 
-#: builtin/init-db.c:499
+#: builtin/init-db.c:506
 msgid "specify that the git repository is to be shared amongst several users"
 msgstr "especifica que el dipòsit de git es compartirà entre diversos usuaris"
 
-#: builtin/init-db.c:501 builtin/prune-packed.c:57 builtin/repack.c:171
+#: builtin/init-db.c:508 builtin/prune-packed.c:57 builtin/repack.c:171
 msgid "be quiet"
 msgstr "calla"
 
-#: builtin/init-db.c:533 builtin/init-db.c:538
+#: builtin/init-db.c:540 builtin/init-db.c:545
 #, c-format
 msgid "cannot mkdir %s"
 msgstr "no es pot mkdir %s"
 
-#: builtin/init-db.c:542
+#: builtin/init-db.c:549
 #, c-format
 msgid "cannot chdir to %s"
 msgstr "no es pot chdir a %s"
 
-#: builtin/init-db.c:563
+#: builtin/init-db.c:570
 #, c-format
 msgid ""
 "%s (or --work-tree=<directory>) not allowed without specifying %s (or --git-"
 "dir=<directory>)"
 msgstr ""
 "no es permet %s (o --work-tree=<directori>) sense especificar %s (o --git-"
 "dir=<directori>)"
 
-#: builtin/init-db.c:591
+#: builtin/init-db.c:598
 #, c-format
 msgid "Cannot access work tree '%s'"
 msgstr "No es pot accedir a l'arbre de treball '%s'"
 
 #: builtin/interpret-trailers.c:15
 msgid ""
@@ -6517,14 +6607,14 @@
 
 #: builtin/interpret-trailers.c:27
 msgid "trailer(s) to add"
 msgstr "remolcs a afegir"
 
 #: builtin/log.c:41
-msgid "git log [<options>] [<revision range>] [[--] <path>...]"
-msgstr "git log [<opcions>] [<rang de revisions>] [[--] <camí>...]"
+msgid "git log [<options>] [<revision-range>] [[--] <path>...]"
+msgstr "git log [<opcions>] [<rang-de-revisions>] [[--] <camí>...]"
 
 #: builtin/log.c:42
 msgid "git show [<options>] <object>..."
 msgstr "git show [<opcions>] <objecte>..."
 
 #: builtin/log.c:81
@@ -6586,13 +6676,13 @@
 msgstr "No es pot obrir el fitxer de pedaç %s"
 
 #: builtin/log.c:803
 msgid "Need exactly one range."
 msgstr "Cal exactament un rang."
 
-#: builtin/log.c:811
+#: builtin/log.c:813
 msgid "Not a range."
 msgstr "No és un rang."
 
 #: builtin/log.c:919
 msgid "Cover letter needs email format"
 msgstr "La carta de presentació necessita el format de correu electrònic"
@@ -6788,21 +6878,21 @@
 msgstr "S'ha fallat en crear els fitxers de sortida"
 
 #: builtin/log.c:1583
 msgid "git cherry [-v] [<upstream> [<head> [<limit>]]]"
 msgstr "git cherry [-v] [<font> [<cap> [<límit>]]]"
 
-#: builtin/log.c:1638
+#: builtin/log.c:1637
 #, c-format
 msgid ""
 "Could not find a tracked remote branch, please specify <upstream> manually.\n"
 msgstr ""
 "No s'ha pogut trobar una branca remota seguida. Si us plau, especifiqueu "
 "<font> manualment.\n"
 
-#: builtin/log.c:1651 builtin/log.c:1653 builtin/log.c:1665
+#: builtin/log.c:1648 builtin/log.c:1650 builtin/log.c:1662
 #, c-format
 msgid "Unknown commit %s"
 msgstr "Comissió desconeguda %s"
 
 #: builtin/ls-files.c:358
 msgid "git ls-files [<options>] [<file>...]"
@@ -7073,46 +7163,46 @@
 
 #: builtin/merge.c:447
 #, c-format
 msgid "'%s' does not point to a commit"
 msgstr "'%s' no assenyala una comissió"
 
-#: builtin/merge.c:559
+#: builtin/merge.c:537
 #, c-format
 msgid "Bad branch.%s.mergeoptions string: %s"
 msgstr "Cadena branch.%s.mergeoptions dolenta: %s"
 
-#: builtin/merge.c:654
+#: builtin/merge.c:632
 msgid "git write-tree failed to write a tree"
 msgstr "git write-tree ha fallat en escriure un arbre"
 
-#: builtin/merge.c:678
+#: builtin/merge.c:656
 msgid "Not handling anything other than two heads merge."
 msgstr "No gestionant res a part de la fusió de dos caps."
 
-#: builtin/merge.c:692
+#: builtin/merge.c:670
 #, c-format
 msgid "Unknown option for merge-recursive: -X%s"
 msgstr "Opció desconeguda de merge-recursive: -X%s"
 
-#: builtin/merge.c:705
+#: builtin/merge.c:683
 #, c-format
 msgid "unable to write %s"
 msgstr "no s'ha pogut escriure %s"
 
-#: builtin/merge.c:794
+#: builtin/merge.c:772
 #, c-format
 msgid "Could not read from '%s'"
 msgstr "No s'ha pogut llegir de '%s'"
 
-#: builtin/merge.c:803
+#: builtin/merge.c:781
 #, c-format
 msgid "Not committing merge; use 'git commit' to complete the merge.\n"
 msgstr "No cometent la fusió; useu 'git commit' per a completar la fusió.\n"
 
-#: builtin/merge.c:809
+#: builtin/merge.c:787
 #, c-format
 msgid ""
 "Please enter a commit message to explain why this merge is necessary,\n"
 "especially if it merges an updated upstream into a topic branch.\n"
 "\n"
 "Lines starting with '%c' will be ignored, and an empty message aborts\n"
@@ -7122,171 +7212,176 @@
 "aquesta fusió és necessària, especialment si fusiona una font\n"
 "actualitzada a una branca temàtica.\n"
 "\n"
 "S'ignoraran les línies que comencin amb '%c', i un missatge buit\n"
 "avorta la comissió.\n"
 
-#: builtin/merge.c:833
+#: builtin/merge.c:811
 msgid "Empty commit message."
 msgstr "Missatge de comissió buit."
 
-#: builtin/merge.c:845
+#: builtin/merge.c:823
 #, c-format
 msgid "Wonderful.\n"
 msgstr "Meravellós.\n"
 
-#: builtin/merge.c:900
+#: builtin/merge.c:878
 #, c-format
 msgid "Automatic merge failed; fix conflicts and then commit the result.\n"
 msgstr ""
 "La fusió automàtica ha fallat; arregleu els conflictes i després cometeu el "
 "resultat.\n"
 
-#: builtin/merge.c:916
+#: builtin/merge.c:894
 #, c-format
 msgid "'%s' is not a commit"
 msgstr "'%s' no és una comissió"
 
-#: builtin/merge.c:957
+#: builtin/merge.c:935
 msgid "No current branch."
 msgstr "Cap branca actual."
 
-#: builtin/merge.c:959
+#: builtin/merge.c:937
 msgid "No remote for the current branch."
 msgstr "No hi ha cap remot per a la branca actual."
 
-#: builtin/merge.c:961
+#: builtin/merge.c:939
 msgid "No default upstream defined for the current branch."
 msgstr "No hi ha cap font per defecte definida per a la branca actual."
 
-#: builtin/merge.c:966
+#: builtin/merge.c:944
 #, c-format
 msgid "No remote-tracking branch for %s from %s"
-msgstr "No hi ha cap branca de seguiment remot per a %s de %s"
+msgstr "No hi ha cap branca amb seguiment remot per a %s de %s"
 
-#: builtin/merge.c:1122
+#: builtin/merge.c:1081
+#, c-format
+msgid "could not close '%s'"
+msgstr "no s'ha pogut tancar '%s'"
+
+#: builtin/merge.c:1208
 msgid "There is no merge to abort (MERGE_HEAD missing)."
 msgstr "No hi ha fusió a avortar (manca MERGE_HEAD)."
 
-#: builtin/merge.c:1138
+#: builtin/merge.c:1224
 msgid ""
 "You have not concluded your merge (MERGE_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 "No heu completat la vostra fusió (MERGE_HEAD existeix).\n"
 "Si us plau, cometeu els vostres canvis abans de fusionar."
 
-#: builtin/merge.c:1141 git-pull.sh:34
+#: builtin/merge.c:1227 git-pull.sh:74
 msgid "You have not concluded your merge (MERGE_HEAD exists)."
 msgstr "No heu completat la vostra fusió (MERGE_HEAD existeix)."
 
-#: builtin/merge.c:1145
+#: builtin/merge.c:1231
 msgid ""
 "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 "No heu completat el vostre recull de cireres (CHERRY_PICK_HEAD existeix).\n"
 "Si us plau, cometeu els vostres canvis abans de fusionar."
 
-#: builtin/merge.c:1148
+#: builtin/merge.c:1234
 msgid "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists)."
 msgstr ""
 "No heu completat el vostre recull de cireres (CHERRY_PICK_HEAD existeix)."
 
-#: builtin/merge.c:1157
+#: builtin/merge.c:1243
 msgid "You cannot combine --squash with --no-ff."
 msgstr "No podeu combinar --squash amb --no-ff."
 
-#: builtin/merge.c:1166
+#: builtin/merge.c:1251
 msgid "No commit specified and merge.defaultToUpstream not set."
 msgstr ""
 "No hi ha una comissió especificada i merge.defaultToUpstream no està "
 "establert."
 
-#: builtin/merge.c:1198
-msgid "Can merge only exactly one commit into empty head"
-msgstr "Es pot fusionar només exactament una comissió a un cap buit"
-
-#: builtin/merge.c:1201
+#: builtin/merge.c:1268
 msgid "Squash commit into empty head not supported yet"
 msgstr "Aixafar una comissió a un cap buit encara no es permet"
 
-#: builtin/merge.c:1203
+#: builtin/merge.c:1270
 msgid "Non-fast-forward commit does not make sense into an empty head"
 msgstr "Una comissió no d'avanç ràpid no té sentit a un cap buit"
 
-#: builtin/merge.c:1208
+#: builtin/merge.c:1276
 #, c-format
 msgid "%s - not something we can merge"
 msgstr "%s - no és una cosa que puguem fusionar"
 
-#: builtin/merge.c:1259
+#: builtin/merge.c:1278
+msgid "Can merge only exactly one commit into empty head"
+msgstr "Es pot fusionar només exactament una comissió a un cap buit"
+
+#: builtin/merge.c:1333
 #, c-format
 msgid "Commit %s has an untrusted GPG signature, allegedly by %s."
 msgstr "La comissió %s té una firma GPG no fiable, suposadament de %s."
 
-#: builtin/merge.c:1262
+#: builtin/merge.c:1336
 #, c-format
 msgid "Commit %s has a bad GPG signature allegedly by %s."
 msgstr "La comissió %s té una firma GPG dolenta suposadament de %s."
 
-#: builtin/merge.c:1265
+#: builtin/merge.c:1339
 #, c-format
 msgid "Commit %s does not have a GPG signature."
 msgstr "La comissió %s no té firma GPG."
 
-#: builtin/merge.c:1268
+#: builtin/merge.c:1342
 #, c-format
 msgid "Commit %s has a good GPG signature by %s\n"
 msgstr "La comissió %s té una firma GPG bona de %s\n"
 
-#: builtin/merge.c:1349
+#: builtin/merge.c:1423
 #, c-format
 msgid "Updating %s..%s\n"
 msgstr "Actualitzant %s..%s\n"
 
-#: builtin/merge.c:1388
+#: builtin/merge.c:1462
 #, c-format
 msgid "Trying really trivial in-index merge...\n"
 msgstr "Intentant una fusió molt trivial en l'índex...\n"
 
-#: builtin/merge.c:1395
+#: builtin/merge.c:1469
 #, c-format
 msgid "Nope.\n"
 msgstr "No.\n"
 
-#: builtin/merge.c:1427
+#: builtin/merge.c:1501
 msgid "Not possible to fast-forward, aborting."
 msgstr "No és possible avançar ràpidament, avortant."
 
-#: builtin/merge.c:1450 builtin/merge.c:1529
+#: builtin/merge.c:1524 builtin/merge.c:1603
 #, c-format
 msgid "Rewinding the tree to pristine...\n"
 msgstr "Rebobinant l'arbre a la pristina...\n"
 
-#: builtin/merge.c:1454
+#: builtin/merge.c:1528
 #, c-format
 msgid "Trying merge strategy %s...\n"
 msgstr "Intentant l'estratègia de fusió %s...\n"
 
-#: builtin/merge.c:1520
+#: builtin/merge.c:1594
 #, c-format
 msgid "No merge strategy handled the merge.\n"
 msgstr "Cap estratègia de fusió ha gestionat la fusió.\n"
 
-#: builtin/merge.c:1522
+#: builtin/merge.c:1596
 #, c-format
 msgid "Merge with strategy %s failed.\n"
 msgstr "L'estratègia de fusió %s ha fallat.\n"
 
-#: builtin/merge.c:1531
+#: builtin/merge.c:1605
 #, c-format
 msgid "Using the %s to prepare resolving by hand.\n"
 msgstr "Usant el %s per a preparar la resolució a mà.\n"
 
-#: builtin/merge.c:1543
+#: builtin/merge.c:1617
 #, c-format
 msgid "Automatic merge went well; stopped before committing as requested\n"
 msgstr ""
 "La fusió automàtica ha sortit bé; s'ha aturat abans de cometre tal i com "
 "s'havia demanat\n"
 
@@ -7473,13 +7568,13 @@
 
 #: builtin/mv.c:253
 #, c-format
 msgid "Renaming %s to %s\n"
 msgstr "Canviant el nom de %s a %s\n"
 
-#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:359
+#: builtin/mv.c:256 builtin/remote.c:725 builtin/repack.c:361
 #, c-format
 msgid "renaming '%s' failed"
 msgstr "el canvi del nom de '%s' ha fallat"
 
 #: builtin/name-rev.c:255
 msgid "git name-rev [<options>] <commit>..."
@@ -7851,13 +7946,13 @@
 msgstr "referència de notes"
 
 #: builtin/notes.c:954
 msgid "use notes from <notes-ref>"
 msgstr "usa les notes de <referència-de-notes>"
 
-#: builtin/notes.c:989 builtin/remote.c:1621
+#: builtin/notes.c:989 builtin/remote.c:1618
 #, c-format
 msgid "Unknown subcommand: %s"
 msgstr "Subordre desconegut: %s"
 
 #: builtin/pack-objects.c:28
 msgid "git pack-objects --stdout [options...] [< ref-list | < object-list]"
@@ -7877,188 +7972,188 @@
 msgstr "error de deflació (%d)"
 
 #: builtin/pack-objects.c:771
 msgid "Writing objects"
 msgstr "Escrivint els objectes"
 
-#: builtin/pack-objects.c:1013
+#: builtin/pack-objects.c:1011
 msgid "disabling bitmap writing, as some objects are not being packed"
 msgstr ""
 "inhabilitant l'escriptura de mapes de bits, perquè alguns objectes no "
 "s'estan empaquetant"
 
-#: builtin/pack-objects.c:2173
+#: builtin/pack-objects.c:2171
 msgid "Compressing objects"
 msgstr "Comprimint objectes"
 
-#: builtin/pack-objects.c:2570
+#: builtin/pack-objects.c:2568
 #, c-format
 msgid "unsupported index version %s"
 msgstr "versió d'índex no compatible %s"
 
-#: builtin/pack-objects.c:2574
+#: builtin/pack-objects.c:2572
 #, c-format
 msgid "bad index version '%s'"
 msgstr "versió d'índex dolenta '%s'"
 
-#: builtin/pack-objects.c:2597
+#: builtin/pack-objects.c:2595
 #, c-format
 msgid "option %s does not accept negative form"
 msgstr "l'opció %s no accepta la forma negativa"
 
-#: builtin/pack-objects.c:2601
+#: builtin/pack-objects.c:2599
 #, c-format
 msgid "unable to parse value '%s' for option %s"
 msgstr "no s'ha pogut analitzar el valor '%s' per a l'opció %s"
 
-#: builtin/pack-objects.c:2621
+#: builtin/pack-objects.c:2619
 msgid "do not show progress meter"
 msgstr "no mostris l'indicador de progrés"
 
-#: builtin/pack-objects.c:2623
+#: builtin/pack-objects.c:2621
 msgid "show progress meter"
 msgstr "mostra l'indicador de progrés"
 
-#: builtin/pack-objects.c:2625
+#: builtin/pack-objects.c:2623
 msgid "show progress meter during object writing phase"
 msgstr "mostra l'indicador de progrés durant la fase d'escriptura d'objectes"
 
-#: builtin/pack-objects.c:2628
+#: builtin/pack-objects.c:2626
 msgid "similar to --all-progress when progress meter is shown"
 msgstr "similar a --all-progress quan l'indicador de progrés es mostra"
 
-#: builtin/pack-objects.c:2629
+#: builtin/pack-objects.c:2627
 msgid "version[,offset]"
 msgstr "versió[,desplaçament]"
 
-#: builtin/pack-objects.c:2630
+#: builtin/pack-objects.c:2628
 msgid "write the pack index file in the specified idx format version"
 msgstr ""
 "escriu el fitxer d'índex de paquet en la versió de format d'índex "
 "especificada"
 
-#: builtin/pack-objects.c:2633
+#: builtin/pack-objects.c:2631
 msgid "maximum size of each output pack file"
 msgstr "mida màxima de cada fitxer de paquet de sortida"
 
-#: builtin/pack-objects.c:2635
+#: builtin/pack-objects.c:2633
 msgid "ignore borrowed objects from alternate object store"
 msgstr ""
 "ignora els objectes prestats d'un emmagatzemament d'objectes alternatiu"
 
-#: builtin/pack-objects.c:2637
+#: builtin/pack-objects.c:2635
 msgid "ignore packed objects"
 msgstr "ignora els objectes empaquetats"
 
-#: builtin/pack-objects.c:2639
+#: builtin/pack-objects.c:2637
 msgid "limit pack window by objects"
 msgstr "limita la finestra d'empaquetament per objectes"
 
-#: builtin/pack-objects.c:2641
+#: builtin/pack-objects.c:2639
 msgid "limit pack window by memory in addition to object limit"
 msgstr ""
 "limita la finestra d'empaquetament per memòria a més del límit d'objectes"
 
-#: builtin/pack-objects.c:2643
+#: builtin/pack-objects.c:2641
 msgid "maximum length of delta chain allowed in the resulting pack"
 msgstr "longitud màxima de la cadena de deltes permesa en el paquet resultant"
 
-#: builtin/pack-objects.c:2645
+#: builtin/pack-objects.c:2643
 msgid "reuse existing deltas"
 msgstr "reusa les deltes existents"
 
-#: builtin/pack-objects.c:2647
+#: builtin/pack-objects.c:2645
 msgid "reuse existing objects"
 msgstr "reusa els objectes existents"
 
-#: builtin/pack-objects.c:2649
+#: builtin/pack-objects.c:2647
 msgid "use OFS_DELTA objects"
 msgstr "usa objectes OFS_DELTA"
 
-#: builtin/pack-objects.c:2651
+#: builtin/pack-objects.c:2649
 msgid "use threads when searching for best delta matches"
 msgstr "usa fils en cercar les millores coincidències de delta"
 
-#: builtin/pack-objects.c:2653
+#: builtin/pack-objects.c:2651
 msgid "do not create an empty pack output"
 msgstr "no creïs una emissió de paquet buida"
 
-#: builtin/pack-objects.c:2655
+#: builtin/pack-objects.c:2653
 msgid "read revision arguments from standard input"
 msgstr "llegeix els paràmetres de revisió des de l'entrada estàndard"
 
-#: builtin/pack-objects.c:2657
+#: builtin/pack-objects.c:2655
 msgid "limit the objects to those that are not yet packed"
 msgstr "limita els objectes als que encara no s'hagin empaquetat"
 
-#: builtin/pack-objects.c:2660
+#: builtin/pack-objects.c:2658
 msgid "include objects reachable from any reference"
 msgstr "inclou els objectes abastables de qualsevulla referència"
 
-#: builtin/pack-objects.c:2663
+#: builtin/pack-objects.c:2661
 msgid "include objects referred by reflog entries"
 msgstr ""
 "inclou els objectes als quals facin referència les entrades del registre de "
 "referències"
 
-#: builtin/pack-objects.c:2666
+#: builtin/pack-objects.c:2664
 msgid "include objects referred to by the index"
 msgstr "inclou els objectes als quals faci referència l'índex"
 
-#: builtin/pack-objects.c:2669
+#: builtin/pack-objects.c:2667
 msgid "output pack to stdout"
 msgstr "emet el paquet a stdout"
 
-#: builtin/pack-objects.c:2671
+#: builtin/pack-objects.c:2669
 msgid "include tag objects that refer to objects to be packed"
 msgstr ""
 "inclou els objectes d'etiqueta que facin referència als objectes a empaquetar"
 
-#: builtin/pack-objects.c:2673
+#: builtin/pack-objects.c:2671
 msgid "keep unreachable objects"
 msgstr "retén els objectes inabastables"
 
-#: builtin/pack-objects.c:2674 parse-options.h:140
+#: builtin/pack-objects.c:2672 parse-options.h:139
 msgid "time"
 msgstr "hora"
 
-#: builtin/pack-objects.c:2675
+#: builtin/pack-objects.c:2673
 msgid "unpack unreachable objects newer than <time>"
 msgstr "desempaqueta els objectes inabastables més nous que <hora>"
 
-#: builtin/pack-objects.c:2678
+#: builtin/pack-objects.c:2676
 msgid "create thin packs"
 msgstr "crea paquets prims"
 
-#: builtin/pack-objects.c:2680
+#: builtin/pack-objects.c:2678
 msgid "create packs suitable for shallow fetches"
 msgstr "crea paquets adequats per als obteniments superficials"
 
-#: builtin/pack-objects.c:2682
+#: builtin/pack-objects.c:2680
 msgid "ignore packs that have companion .keep file"
 msgstr "ignora els paquets que tinguin un fitxer .keep corresponent"
 
-#: builtin/pack-objects.c:2684
+#: builtin/pack-objects.c:2682
 msgid "pack compression level"
 msgstr "nivell de compressió de paquet"
 
-#: builtin/pack-objects.c:2686
+#: builtin/pack-objects.c:2684
 msgid "do not hide commits by grafts"
 msgstr "no amaguis les comissions per empelt"
 
-#: builtin/pack-objects.c:2688
+#: builtin/pack-objects.c:2686
 msgid "use a bitmap index if available to speed up counting objects"
 msgstr ""
 "usa un índex de mapa de bits, si està disponible, per a accelerar el "
 "recompte d'objectes"
 
-#: builtin/pack-objects.c:2690
+#: builtin/pack-objects.c:2688
 msgid "write a bitmap index together with the pack index"
 msgstr "escriu un índex de mapa de bits junt amb l'índex de paquet"
 
-#: builtin/pack-objects.c:2781
+#: builtin/pack-objects.c:2779
 msgid "Counting objects"
 msgstr "Comptant els objectes"
 
 #: builtin/pack-refs.c:6
 msgid "git pack-refs [<options>]"
 msgstr "git pack-refs [<opcions>]"
@@ -8076,25 +8171,25 @@
 msgstr "git prune-packed [-n | --dry-run] [-q | --quiet]"
 
 #: builtin/prune-packed.c:40
 msgid "Removing duplicate objects"
 msgstr "Eliminant objectes duplicats"
 
-#: builtin/prune.c:12
+#: builtin/prune.c:11
 msgid "git prune [-n] [-v] [--expire <time>] [--] [<head>...]"
 msgstr "git prune [-n] [-v] [--expire <hora>] [--] [<cap>...]"
 
-#: builtin/prune.c:106
+#: builtin/prune.c:105 builtin/worktree.c:112
 msgid "do not remove, show only"
 msgstr "no eliminis, només mostra"
 
-#: builtin/prune.c:107
+#: builtin/prune.c:106 builtin/worktree.c:113
 msgid "report pruned objects"
 msgstr "informa d'objectes podats"
 
-#: builtin/prune.c:110
+#: builtin/prune.c:109 builtin/worktree.c:115
 msgid "expire objects older than <time>"
 msgstr "fes caducar els objectes més vells que <hora>"
 
 #: builtin/push.c:14
 msgid "git push [<options>] [<repository> [<refspec>...]]"
 msgstr "git push [<opcions>] [<dipòsit> [<especificació-de-referència>...]]"
@@ -8499,18 +8594,18 @@
 msgstr "salta l'aplicació del filtre d'agafament escàs"
 
 #: builtin/read-tree.c:139
 msgid "debug unpack-trees"
 msgstr "depura unpack-trees"
 
-#: builtin/reflog.c:429
+#: builtin/reflog.c:430
 #, c-format
 msgid "%s' for '%s' is not a valid timestamp"
 msgstr "%s' per a '%s' no és una marca de temps vàlida"
 
-#: builtin/reflog.c:546 builtin/reflog.c:551
+#: builtin/reflog.c:547 builtin/reflog.c:552
 #, c-format
 msgid "'%s' is not a valid timestamp"
 msgstr "'%s' no és una marca de temps vàlida"
 
 #: builtin/remote.c:12
 msgid "git remote [-v | --verbose]"
@@ -8642,18 +8737,18 @@
 
 #: builtin/remote.c:177
 msgid "specifying branches to track makes sense only with fetch mirrors"
 msgstr ""
 "especificar les branques a seguir té sentit només amb miralls d'obteniment"
 
-#: builtin/remote.c:187 builtin/remote.c:643
+#: builtin/remote.c:187 builtin/remote.c:640
 #, c-format
 msgid "remote %s already exists."
 msgstr "el remot %s ja existeix."
 
-#: builtin/remote.c:191 builtin/remote.c:647
+#: builtin/remote.c:191 builtin/remote.c:644
 #, c-format
 msgid "'%s' is not a valid remote name"
 msgstr "'%s' no és un nom de remot vàlid"
 
 #: builtin/remote.c:235
 #, c-format
@@ -8672,69 +8767,69 @@
 msgstr "(coincident)"
 
 #: builtin/remote.c:448
 msgid "(delete)"
 msgstr "(suprimir)"
 
-#: builtin/remote.c:592 builtin/remote.c:598 builtin/remote.c:604
+#: builtin/remote.c:589 builtin/remote.c:595 builtin/remote.c:601
 #, c-format
 msgid "Could not append '%s' to '%s'"
 msgstr "No s'ha pogut annexar '%s' a '%s'"
 
-#: builtin/remote.c:636 builtin/remote.c:795 builtin/remote.c:895
+#: builtin/remote.c:633 builtin/remote.c:792 builtin/remote.c:892
 #, c-format
 msgid "No such remote: %s"
 msgstr "No hi ha tal remot: %s"
 
-#: builtin/remote.c:653
+#: builtin/remote.c:650
 #, c-format
 msgid "Could not rename config section '%s' to '%s'"
 msgstr "No s'ha pogut canviar el nom de la secció de configuració '%s' a '%s'"
 
-#: builtin/remote.c:659 builtin/remote.c:847
+#: builtin/remote.c:656 builtin/remote.c:844
 #, c-format
 msgid "Could not remove config section '%s'"
 msgstr "No s'ha pogut eliminar la secció de configuració '%s'"
 
-#: builtin/remote.c:674
+#: builtin/remote.c:671
 #, c-format
 msgid ""
 "Not updating non-default fetch refspec\n"
 "\t%s\n"
 "\tPlease update the configuration manually if necessary."
 msgstr ""
 "No actualitzant l'especificació de referències d'obteniment no per defecte\n"
 "\t%s\n"
 "\tSi us plau, actualitzeu la configuració manualment si és necessari."
 
-#: builtin/remote.c:680
+#: builtin/remote.c:677
 #, c-format
 msgid "Could not append '%s'"
 msgstr "No s'ha pogut annexar '%s'"
 
-#: builtin/remote.c:691
+#: builtin/remote.c:688
 #, c-format
 msgid "Could not set '%s'"
 msgstr "No s'ha pogut establir '%s'"
 
-#: builtin/remote.c:713
+#: builtin/remote.c:710
 #, c-format
 msgid "deleting '%s' failed"
 msgstr "la supressió de '%s' ha fallat"
 
-#: builtin/remote.c:747
+#: builtin/remote.c:744
 #, c-format
 msgid "creating '%s' failed"
 msgstr "la creació de '%s' ha fallat"
 
-#: builtin/remote.c:766
+#: builtin/remote.c:763
 #, c-format
 msgid "Could not remove branch %s"
 msgstr "No s'ha pogut eliminar la branca %s"
 
-#: builtin/remote.c:833
+#: builtin/remote.c:830
 msgid ""
 "Note: A branch outside the refs/remotes/ hierarchy was not removed;\n"
 "to delete it, use:"
 msgid_plural ""
 "Note: Some branches outside the refs/remotes/ hierarchy were not removed;\n"
 "to delete them, use:"
@@ -8743,271 +8838,271 @@
 "per a suprimir-la, useu:"
 msgstr[1] ""
 "Nota: Algunes branques fora de la jerarquia refs/remotes/ no s'han "
 "eliminat;\n"
 "per a suprimir-les, useu:"
 
-#: builtin/remote.c:948
+#: builtin/remote.c:945
 #, c-format
 msgid " new (next fetch will store in remotes/%s)"
 msgstr " nou (el pròxim obteniment emmagatzemarà a remotes/%s)"
 
-#: builtin/remote.c:951
+#: builtin/remote.c:948
 msgid " tracked"
 msgstr " seguit"
 
-#: builtin/remote.c:953
+#: builtin/remote.c:950
 msgid " stale (use 'git remote prune' to remove)"
 msgstr " ranci (useu 'git remote prune' per a eliminar)"
 
-#: builtin/remote.c:955
+#: builtin/remote.c:952
 msgid " ???"
 msgstr " ???"
 
-#: builtin/remote.c:996
+#: builtin/remote.c:993
 #, c-format
 msgid "invalid branch.%s.merge; cannot rebase onto > 1 branch"
 msgstr "branch.%s.merge no vàlid; no es pot rebasar sobre > 1 branca"
 
-#: builtin/remote.c:1003
+#: builtin/remote.c:1000
 #, c-format
 msgid "rebases onto remote %s"
 msgstr "es rebasa sobre el remot %s"
 
-#: builtin/remote.c:1006
+#: builtin/remote.c:1003
 #, c-format
 msgid " merges with remote %s"
 msgstr "es fusiona amb el remot %s"
 
-#: builtin/remote.c:1007
+#: builtin/remote.c:1004
 msgid "    and with remote"
 msgstr "    i amb el remot"
 
-#: builtin/remote.c:1009
+#: builtin/remote.c:1006
 #, c-format
 msgid "merges with remote %s"
 msgstr "es fusiona amb el remot %s"
 
-#: builtin/remote.c:1010
+#: builtin/remote.c:1007
 msgid "   and with remote"
 msgstr "   i amb el remot"
 
-#: builtin/remote.c:1056
+#: builtin/remote.c:1053
 msgid "create"
 msgstr "crea"
 
-#: builtin/remote.c:1059
+#: builtin/remote.c:1056
 msgid "delete"
 msgstr "suprimeix"
 
-#: builtin/remote.c:1063
+#: builtin/remote.c:1060
 msgid "up to date"
 msgstr "al dia"
 
-#: builtin/remote.c:1066
+#: builtin/remote.c:1063
 msgid "fast-forwardable"
 msgstr "avanç ràpid possible"
 
-#: builtin/remote.c:1069
+#: builtin/remote.c:1066
 msgid "local out of date"
 msgstr "local no actualitzat"
 
-#: builtin/remote.c:1076
+#: builtin/remote.c:1073
 #, c-format
 msgid "    %-*s forces to %-*s (%s)"
 msgstr "    %-*s força a %-*s (%s)"
 
-#: builtin/remote.c:1079
+#: builtin/remote.c:1076
 #, c-format
 msgid "    %-*s pushes to %-*s (%s)"
 msgstr "    %-*s puja a %-*s (%s)"
 
-#: builtin/remote.c:1083
+#: builtin/remote.c:1080
 #, c-format
 msgid "    %-*s forces to %s"
 msgstr "    %-*s força a %s"
 
-#: builtin/remote.c:1086
+#: builtin/remote.c:1083
 #, c-format
 msgid "    %-*s pushes to %s"
 msgstr "    %-*s puja a %s"
 
-#: builtin/remote.c:1154
+#: builtin/remote.c:1151
 msgid "do not query remotes"
 msgstr "no consultis els remots"
 
-#: builtin/remote.c:1181
+#: builtin/remote.c:1178
 #, c-format
 msgid "* remote %s"
 msgstr "* remot %s"
 
-#: builtin/remote.c:1182
+#: builtin/remote.c:1179
 #, c-format
 msgid "  Fetch URL: %s"
 msgstr "  URL d'obteniment: %s"
 
-#: builtin/remote.c:1183 builtin/remote.c:1334
+#: builtin/remote.c:1180 builtin/remote.c:1331
 msgid "(no URL)"
 msgstr "(sense URL)"
 
-#: builtin/remote.c:1192 builtin/remote.c:1194
+#: builtin/remote.c:1189 builtin/remote.c:1191
 #, c-format
 msgid "  Push  URL: %s"
 msgstr "  URL de pujada: %s"
 
-#: builtin/remote.c:1196 builtin/remote.c:1198 builtin/remote.c:1200
+#: builtin/remote.c:1193 builtin/remote.c:1195 builtin/remote.c:1197
 #, c-format
 msgid "  HEAD branch: %s"
 msgstr "  Branca de HEAD: %s"
 
-#: builtin/remote.c:1202
+#: builtin/remote.c:1199
 #, c-format
 msgid ""
 "  HEAD branch (remote HEAD is ambiguous, may be one of the following):\n"
 msgstr ""
 "  Branca de HEAD (el HEAD remot és ambigu, pot ser un dels següents):\n"
 
-#: builtin/remote.c:1214
+#: builtin/remote.c:1211
 #, c-format
 msgid "  Remote branch:%s"
 msgid_plural "  Remote branches:%s"
 msgstr[0] "  Branca remota:%s"
 msgstr[1] "  Branques remotes:%s"
 
-#: builtin/remote.c:1217 builtin/remote.c:1244
+#: builtin/remote.c:1214 builtin/remote.c:1241
 msgid " (status not queried)"
 msgstr " (estat no consultat)"
 
-#: builtin/remote.c:1226
+#: builtin/remote.c:1223
 msgid "  Local branch configured for 'git pull':"
 msgid_plural "  Local branches configured for 'git pull':"
 msgstr[0] "  Branca local configurada per a 'git pull':"
 msgstr[1] "  Branques locals configurades per a 'git pull':"
 
-#: builtin/remote.c:1234
+#: builtin/remote.c:1231
 msgid "  Local refs will be mirrored by 'git push'"
 msgstr "  'git push' reflectirà les referències locals"
 
-#: builtin/remote.c:1241
+#: builtin/remote.c:1238
 #, c-format
 msgid "  Local ref configured for 'git push'%s:"
 msgid_plural "  Local refs configured for 'git push'%s:"
 msgstr[0] "  Referència local configurada per a 'git push'%s:"
 msgstr[1] "  Referències locals configurades per a 'git push'%s:"
 
-#: builtin/remote.c:1262
+#: builtin/remote.c:1259
 msgid "set refs/remotes/<name>/HEAD according to remote"
 msgstr "estableix refs/remotes/<name>/HEAD segons el remot"
 
-#: builtin/remote.c:1264
+#: builtin/remote.c:1261
 msgid "delete refs/remotes/<name>/HEAD"
 msgstr "suprimeix refs/remotes/<name>/HEAD"
 
-#: builtin/remote.c:1279
+#: builtin/remote.c:1276
 msgid "Cannot determine remote HEAD"
 msgstr "No es pot determinar el HEAD remot"
 
-#: builtin/remote.c:1281
+#: builtin/remote.c:1278
 msgid "Multiple remote HEAD branches. Please choose one explicitly with:"
 msgstr ""
 "Múltiples branques de HEAD remotes. Si us plau, trieu-ne una explícitament "
 "amb:"
 
-#: builtin/remote.c:1291
+#: builtin/remote.c:1288
 #, c-format
 msgid "Could not delete %s"
 msgstr "No s'ha pogut suprimir %s"
 
-#: builtin/remote.c:1299
+#: builtin/remote.c:1296
 #, c-format
 msgid "Not a valid ref: %s"
 msgstr "No és una referència vàlida: %s"
 
-#: builtin/remote.c:1301
+#: builtin/remote.c:1298
 #, c-format
 msgid "Could not setup %s"
 msgstr "No s'ha pogut configurar %s"
 
-#: builtin/remote.c:1319
+#: builtin/remote.c:1316
 #, c-format
 msgid " %s will become dangling!"
 msgstr " %s es tornarà penjant!"
 
-#: builtin/remote.c:1320
+#: builtin/remote.c:1317
 #, c-format
 msgid " %s has become dangling!"
 msgstr " %s s'ha tornat penjant!"
 
-#: builtin/remote.c:1330
+#: builtin/remote.c:1327
 #, c-format
 msgid "Pruning %s"
 msgstr "Podant %s"
 
-#: builtin/remote.c:1331
+#: builtin/remote.c:1328
 #, c-format
 msgid "URL: %s"
 msgstr "URL: %s"
 
-#: builtin/remote.c:1354
+#: builtin/remote.c:1351
 #, c-format
 msgid " * [would prune] %s"
 msgstr " * [podaria] %s"
 
-#: builtin/remote.c:1357
+#: builtin/remote.c:1354
 #, c-format
 msgid " * [pruned] %s"
 msgstr " * [podat] %s"
 
-#: builtin/remote.c:1402
+#: builtin/remote.c:1399
 msgid "prune remotes after fetching"
 msgstr "poda els remots després d'obtenir-los"
 
-#: builtin/remote.c:1468 builtin/remote.c:1542
+#: builtin/remote.c:1465 builtin/remote.c:1539
 #, c-format
 msgid "No such remote '%s'"
 msgstr "No hi ha tal remot '%s'"
 
-#: builtin/remote.c:1488
+#: builtin/remote.c:1485
 msgid "add branch"
 msgstr "afegeix branca"
 
-#: builtin/remote.c:1495
+#: builtin/remote.c:1492
 msgid "no remote specified"
 msgstr "cap remot especificat"
 
-#: builtin/remote.c:1517
+#: builtin/remote.c:1514
 msgid "manipulate push URLs"
 msgstr "manipula els URL de pujada"
 
-#: builtin/remote.c:1519
+#: builtin/remote.c:1516
 msgid "add URL"
 msgstr "afegeix URL"
 
-#: builtin/remote.c:1521
+#: builtin/remote.c:1518
 msgid "delete URLs"
 msgstr "suprimeix URLs"
 
-#: builtin/remote.c:1528
+#: builtin/remote.c:1525
 msgid "--add --delete doesn't make sense"
 msgstr "--add --delete no té sentit"
 
-#: builtin/remote.c:1568
+#: builtin/remote.c:1565
 #, c-format
 msgid "Invalid old URL pattern: %s"
 msgstr "Patró d'URL antic no vàlid: %s"
 
-#: builtin/remote.c:1576
+#: builtin/remote.c:1573
 #, c-format
 msgid "No such URL found: %s"
 msgstr "No s'ha trobat tal URL: %s"
 
-#: builtin/remote.c:1578
+#: builtin/remote.c:1575
 msgid "Will not delete all non-push URLs"
 msgstr "No se suprimiran tots els URL no de pujada"
 
-#: builtin/remote.c:1592
+#: builtin/remote.c:1589
 msgid "be verbose; must be placed before a subcommand"
 msgstr "sigues detallat; s'ha de col·locar abans d'una subordre"
 
 #: builtin/repack.c:17
 msgid "git repack [<options>]"
 msgstr "git repack [<opcions>]"
@@ -9075,13 +9170,13 @@
 msgstr "mida màxima de cada fitxer de paquet"
 
 #: builtin/repack.c:187
 msgid "repack objects in packs marked with .keep"
 msgstr "reempaqueta els objectes en paquets marcats amb .keep"
 
-#: builtin/repack.c:375
+#: builtin/repack.c:377
 #, c-format
 msgid "removing '%s' failed"
 msgstr "la supressió de '%s' ha fallat"
 
 #: builtin/replace.c:19
 msgid "git replace [-f] <object> <replacement>"
@@ -9453,13 +9548,13 @@
 "\n"
 "(use 'rm -rf' if you really want to remove it including all of its history)"
 msgstr ""
 "\n"
 "(useu 'rm -rf' si realment voleu eliminar-lo, inclòs tota la seva història)"
 
-#: builtin/rm.c:231
+#: builtin/rm.c:230
 msgid ""
 "the following file has staged content different from both the\n"
 "file and the HEAD:"
 msgid_plural ""
 "the following files have staged content different from both the\n"
 "file and the HEAD:"
@@ -9467,72 +9562,72 @@
 "el fitxer següent té contingut allistat diferent d'ambdós el\n"
 "fitxer i el HEAD:"
 msgstr[1] ""
 "els fitxers següents tenen contingut allistat diferent d'ambdós\n"
 "el fitxer i el HEAD:"
 
-#: builtin/rm.c:236
+#: builtin/rm.c:235
 msgid ""
 "\n"
 "(use -f to force removal)"
 msgstr ""
 "\n"
 "(useu -f per a forçar la supressió)"
 
-#: builtin/rm.c:240
+#: builtin/rm.c:239
 msgid "the following file has changes staged in the index:"
 msgid_plural "the following files have changes staged in the index:"
 msgstr[0] "el fitxer següent té canvis allistats en l'índex:"
 msgstr[1] "els fitxers següents tenen canvis allistats en l'índex:"
 
-#: builtin/rm.c:244 builtin/rm.c:255
+#: builtin/rm.c:243 builtin/rm.c:254
 msgid ""
 "\n"
 "(use --cached to keep the file, or -f to force removal)"
 msgstr ""
 "\n"
 "(useu --cached per a desar el fitxer, o -f per a forçar la supressió)"
 
-#: builtin/rm.c:252
+#: builtin/rm.c:251
 msgid "the following file has local modifications:"
 msgid_plural "the following files have local modifications:"
 msgstr[0] "el fitxer següent té modificacions locals:"
 msgstr[1] "els fitxers següents tenen modificacions locals:"
 
-#: builtin/rm.c:270
+#: builtin/rm.c:269
 msgid "do not list removed files"
 msgstr "no llistis els fitxers eliminats"
 
-#: builtin/rm.c:271
+#: builtin/rm.c:270
 msgid "only remove from the index"
 msgstr "només elimina de l'índex"
 
-#: builtin/rm.c:272
+#: builtin/rm.c:271
 msgid "override the up-to-date check"
 msgstr "passa per alt la comprovació d'actualitat"
 
-#: builtin/rm.c:273
+#: builtin/rm.c:272
 msgid "allow recursive removal"
 msgstr "permet la supressió recursiva"
 
-#: builtin/rm.c:275
+#: builtin/rm.c:274
 msgid "exit with a zero status even if nothing matched"
 msgstr "surt amb estat zero encara que res hagi coincidit"
 
-#: builtin/rm.c:318
+#: builtin/rm.c:317
 msgid "Please, stage your changes to .gitmodules or stash them to proceed"
 msgstr ""
 "Si us plau, allisteu els vostres canvis a .gitmodules o emmagatzemeu-los per "
 "a procedir"
 
-#: builtin/rm.c:336
+#: builtin/rm.c:335
 #, c-format
 msgid "not removing '%s' recursively without -r"
 msgstr "no eliminant '%s' recursivament sense -r"
 
-#: builtin/rm.c:375
+#: builtin/rm.c:374
 #, c-format
 msgid "git rm: unable to remove %s"
 msgstr "git rm: no s'ha pogut eliminar %s"
 
 #: builtin/shortlog.c:13
 msgid "git shortlog [<options>] [<revision-range>] [[--] [<path>...]]"
@@ -9577,73 +9672,73 @@
 "\t\t       [--no-name | --sha1-name] [--topics] [(<revisió> | <glob>)...]"
 
 #: builtin/show-branch.c:13
 msgid "git show-branch (-g | --reflog)[=<n>[,<base>]] [--list] [<ref>]"
 msgstr "git show-branch (-g | --reflog)[=<n>[,<base>]] [--list] [<referència>]"
 
-#: builtin/show-branch.c:652
+#: builtin/show-branch.c:659
 msgid "show remote-tracking and local branches"
 msgstr "mostra les branques amb seguiment remot i les locals"
 
-#: builtin/show-branch.c:654
+#: builtin/show-branch.c:661
 msgid "show remote-tracking branches"
 msgstr "mostra les branques amb seguiment remot"
 
-#: builtin/show-branch.c:656
+#: builtin/show-branch.c:663
 msgid "color '*!+-' corresponding to the branch"
 msgstr "colora '*!+-' corresponent a la branca"
 
-#: builtin/show-branch.c:658
+#: builtin/show-branch.c:665
 msgid "show <n> more commits after the common ancestor"
 msgstr "mostra <n> comissions després de l'avantpassat comú"
 
-#: builtin/show-branch.c:660
+#: builtin/show-branch.c:667
 msgid "synonym to more=-1"
 msgstr "sinònim de more=-1"
 
-#: builtin/show-branch.c:661
+#: builtin/show-branch.c:668
 msgid "suppress naming strings"
 msgstr "omet l'anomenament de cadenes"
 
-#: builtin/show-branch.c:663
+#: builtin/show-branch.c:670
 msgid "include the current branch"
 msgstr "inclou la branca actual"
 
-#: builtin/show-branch.c:665
+#: builtin/show-branch.c:672
 msgid "name commits with their object names"
 msgstr "anomena les comissions amb els seus noms d'objecte"
 
-#: builtin/show-branch.c:667
+#: builtin/show-branch.c:674
 msgid "show possible merge bases"
 msgstr "mostra les bases de fusió possibles"
 
-#: builtin/show-branch.c:669
+#: builtin/show-branch.c:676
 msgid "show refs unreachable from any other ref"
 msgstr "mostra les referències inabastables de qualsevulla altra referència"
 
-#: builtin/show-branch.c:671
+#: builtin/show-branch.c:678
 msgid "show commits in topological order"
 msgstr "mostra les comissions en ordre topològic"
 
-#: builtin/show-branch.c:674
+#: builtin/show-branch.c:681
 msgid "show only commits not on the first branch"
 msgstr "mostra només les comissions que no siguin en la primera branca"
 
-#: builtin/show-branch.c:676
+#: builtin/show-branch.c:683
 msgid "show merges reachable from only one tip"
 msgstr "mostra les fusions abastables de només una punta"
 
-#: builtin/show-branch.c:678
+#: builtin/show-branch.c:685
 msgid "topologically sort, maintaining date order where possible"
 msgstr "ordena topològicament, mantenint l'ordre de dates on sigui possible"
 
-#: builtin/show-branch.c:681
+#: builtin/show-branch.c:688
 msgid "<n>[,<base>]"
 msgstr "<n>[,<base>]"
 
-#: builtin/show-branch.c:682
+#: builtin/show-branch.c:689
 msgid "show <n> most recent ref-log entries starting at base"
 msgstr "mostra les <n> entrades més recents començant a la base"
 
 #: builtin/show-ref.c:10
 msgid ""
 "git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | --"
@@ -9653,43 +9748,43 @@
 "hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<patró>...]"
 
 #: builtin/show-ref.c:11
 msgid "git show-ref --exclude-existing[=pattern] < ref-list"
 msgstr "git show-ref --exclude-existing[=pattern] < llista-de-referències"
 
-#: builtin/show-ref.c:168
+#: builtin/show-ref.c:170
 msgid "only show tags (can be combined with heads)"
 msgstr "mostra només les etiquetes (es pot combinar amb heads)"
 
-#: builtin/show-ref.c:169
+#: builtin/show-ref.c:171
 msgid "only show heads (can be combined with tags)"
 msgstr "mostra només els caps (es pot combinar amb tags)"
 
-#: builtin/show-ref.c:170
+#: builtin/show-ref.c:172
 msgid "stricter reference checking, requires exact ref path"
 msgstr ""
 "comprovació de referència més estricta, requereix el camí de referència "
 "exacte"
 
-#: builtin/show-ref.c:173 builtin/show-ref.c:175
+#: builtin/show-ref.c:175 builtin/show-ref.c:177
 msgid "show the HEAD reference, even if it would be filtered out"
 msgstr "mostra la referència HEAD, encara que es filtrés"
 
-#: builtin/show-ref.c:177
+#: builtin/show-ref.c:179
 msgid "dereference tags into object IDs"
 msgstr "dereferencia les etiquetes a IDs d'objecte"
 
-#: builtin/show-ref.c:179
+#: builtin/show-ref.c:181
 msgid "only show SHA1 hash using <n> digits"
 msgstr "mostra el hash SHA1 usant només <n> xifres"
 
-#: builtin/show-ref.c:183
+#: builtin/show-ref.c:185
 msgid "do not print results to stdout (useful with --verify)"
 msgstr "no imprimeixis els resultats a stdout (útil amb --verify)"
 
-#: builtin/show-ref.c:185
+#: builtin/show-ref.c:187
 msgid "show refs from stdin that aren't in local repository"
 msgstr "mostra les referències d'stdin que no siguin en el dipòsit local"
 
 #: builtin/symbolic-ref.c:7
 msgid "git symbolic-ref [<options>] <name> [<ref>]"
 msgstr "git symbolic-ref [<opcions>] <nom> [<referència>]"
@@ -9943,133 +10038,206 @@
 msgstr "Etiqueta '%s' actualitzada (era %s)\n"
 
 #: builtin/unpack-objects.c:489
 msgid "Unpacking objects"
 msgstr "Desempaquetant objectes"
 
-#: builtin/update-index.c:403
+#: builtin/update-index.c:70
+#, c-format
+msgid "failed to create directory %s"
+msgstr "s'ha fallat en crear el directori %s"
+
+#: builtin/update-index.c:76
+#, c-format
+msgid "failed to stat %s"
+msgstr "s'ha fallat en fer stat a %s"
+
+#: builtin/update-index.c:86
+#, c-format
+msgid "failed to create file %s"
+msgstr "s'ha fallat en crear el fitxer %s"
+
+#: builtin/update-index.c:94
+#, c-format
+msgid "failed to delete file %s"
+msgstr "s'ha fallat en suprimir el fitxer %s"
+
+#: builtin/update-index.c:101 builtin/update-index.c:203
+#, c-format
+msgid "failed to delete directory %s"
+msgstr "s'ha fallat en suprimir el directori %s"
+
+#: builtin/update-index.c:124
+#, c-format
+msgid "Testing "
+msgstr "Provant "
+
+#: builtin/update-index.c:136
+msgid "directory stat info does not change after adding a new file"
+msgstr ""
+"la informació d'stat de directori no canvia després d'afegir un fitxer nou"
+
+#: builtin/update-index.c:149
+msgid "directory stat info does not change after adding a new directory"
+msgstr ""
+"la informació d'stat de directori no canvia després d'afegir un directori nou"
+
+#: builtin/update-index.c:162
+msgid "directory stat info changes after updating a file"
+msgstr ""
+"la informació d'stat de directori canvia després d'actualitzar un fitxer"
+
+#: builtin/update-index.c:173
+msgid "directory stat info changes after adding a file inside subdirectory"
+msgstr ""
+"la informació d'stat de directori canvia després d'afegir un fitxer dins un "
+"subdirectori"
+
+#: builtin/update-index.c:184
+msgid "directory stat info does not change after deleting a file"
+msgstr ""
+"la informació d'stat de directori no canvia després de suprimir un fitxer"
+
+#: builtin/update-index.c:197
+msgid "directory stat info does not change after deleting a directory"
+msgstr ""
+"la informació d'stat de directori no canvia després de suprimir un directori"
+
+#: builtin/update-index.c:204
+msgid " OK"
+msgstr " D'acord"
+
+#: builtin/update-index.c:564
 msgid "git update-index [<options>] [--] [<file>...]"
 msgstr "git update-index [<opcions>] [--] [<fitxer>...]"
 
-#: builtin/update-index.c:757
+#: builtin/update-index.c:918
 msgid "continue refresh even when index needs update"
 msgstr ""
 "continua l'actualització encara que l'índex necessiti una actualització"
 
-#: builtin/update-index.c:760
+#: builtin/update-index.c:921
 msgid "refresh: ignore submodules"
 msgstr "actualitza: ignora els submòduls"
 
-#: builtin/update-index.c:763
+#: builtin/update-index.c:924
 msgid "do not ignore new files"
 msgstr "no ignoris els fitxers nous"
 
-#: builtin/update-index.c:765
+#: builtin/update-index.c:926
 msgid "let files replace directories and vice-versa"
 msgstr "deixa que els fitxers reemplacin els directoris i viceversa"
 
-#: builtin/update-index.c:767
+#: builtin/update-index.c:928
 msgid "notice files missing from worktree"
 msgstr "tingues en compte els fitxers absents de l'arbre de treball"
 
-#: builtin/update-index.c:769
+#: builtin/update-index.c:930
 msgid "refresh even if index contains unmerged entries"
 msgstr "actualitza encara que l'índex contingui entrades no fusionades"
 
-#: builtin/update-index.c:772
+#: builtin/update-index.c:933
 msgid "refresh stat information"
 msgstr "actualitza la informació d'estadístiques"
 
-#: builtin/update-index.c:776
+#: builtin/update-index.c:937
 msgid "like --refresh, but ignore assume-unchanged setting"
 msgstr "com --refresh, però ignora l'ajust assume-unchanged"
 
-#: builtin/update-index.c:780
+#: builtin/update-index.c:941
 msgid "<mode>,<object>,<path>"
 msgstr "<mode>,<objecte>,<camí>"
 
-#: builtin/update-index.c:781
+#: builtin/update-index.c:942
 msgid "add the specified entry to the index"
 msgstr "afegeix l'entrada especificada a l'índex"
 
-#: builtin/update-index.c:785
+#: builtin/update-index.c:946
 msgid "(+/-)x"
 msgstr "(+/-)x"
 
-#: builtin/update-index.c:786
+#: builtin/update-index.c:947
 msgid "override the executable bit of the listed files"
 msgstr "passa per alt el bit executable dels fitxers llistats"
 
-#: builtin/update-index.c:790
+#: builtin/update-index.c:951
 msgid "mark files as \"not changing\""
 msgstr "marca els fitxers com a \"not changing\""
 
-#: builtin/update-index.c:793
+#: builtin/update-index.c:954
 msgid "clear assumed-unchanged bit"
 msgstr "neteja el bit assumed-unchanged"
 
-#: builtin/update-index.c:796
+#: builtin/update-index.c:957
 msgid "mark files as \"index-only\""
 msgstr "marca els fitxers com a \"index-only\""
 
-#: builtin/update-index.c:799
+#: builtin/update-index.c:960
 msgid "clear skip-worktree bit"
 msgstr "neteja el bit skip-worktree"
 
-#: builtin/update-index.c:802
+#: builtin/update-index.c:963
 msgid "add to index only; do not add content to object database"
 msgstr ""
 "només afegeix a l'índex; no afegeixis el contingut a la base de dades "
 "d'objectes"
 
-#: builtin/update-index.c:804
+#: builtin/update-index.c:965
 msgid "remove named paths even if present in worktree"
 msgstr ""
 "elimina els camins anomenats encara que estiguin presents en l'arbre de "
 "treball"
 
-#: builtin/update-index.c:806
+#: builtin/update-index.c:967
 msgid "with --stdin: input lines are terminated by null bytes"
 msgstr "amb --stdin: les línies d'entrada acaben amb octets nuls"
 
-#: builtin/update-index.c:808
+#: builtin/update-index.c:969
 msgid "read list of paths to be updated from standard input"
 msgstr "llegeix la llista de camins a actualitzar des de l'entrada estàndard"
 
-#: builtin/update-index.c:812
+#: builtin/update-index.c:973
 msgid "add entries from standard input to the index"
 msgstr "afegeix les entrades de l'entrada estàndard a l'índex"
 
-#: builtin/update-index.c:816
+#: builtin/update-index.c:977
 msgid "repopulate stages #2 and #3 for the listed paths"
 msgstr "reemplena les etapes #2 i #3 per als camins llistats"
 
-#: builtin/update-index.c:820
+#: builtin/update-index.c:981
 msgid "only update entries that differ from HEAD"
 msgstr "només actualitza les entrades que difereixin de HEAD"
 
-#: builtin/update-index.c:824
+#: builtin/update-index.c:985
 msgid "ignore files missing from worktree"
 msgstr "ignora els fitxers absents de l'arbre de treball"
 
-#: builtin/update-index.c:827
+#: builtin/update-index.c:988
 msgid "report actions to standard output"
 msgstr "informa de les accions en la sortida estàndard"
 
-#: builtin/update-index.c:829
+#: builtin/update-index.c:990
 msgid "(for porcelains) forget saved unresolved conflicts"
 msgstr "(per porcellanes) oblida't dels conflictes no resolts ni desats"
 
-#: builtin/update-index.c:833
+#: builtin/update-index.c:994
 msgid "write index in this format"
 msgstr "escriu l'índex en aquest format"
 
-#: builtin/update-index.c:835
+#: builtin/update-index.c:996
 msgid "enable or disable split index"
 msgstr "habilita o inhabilita l'índex dividit"
 
+#: builtin/update-index.c:998
+msgid "enable/disable untracked cache"
+msgstr "habilita/inhabilita la memòria cau no seguida"
+
+#: builtin/update-index.c:1000
+msgid "enable untracked cache without testing the filesystem"
+msgstr "habilita la memòria cau no seguida sense provar el sistema de fitxers"
+
 #: builtin/update-ref.c:9
 msgid "git update-ref [<options>] -d <refname> [<old-val>]"
 msgstr "git update-ref [<opcions>] -d <nom-de-referència> [<valor-antic>]"
 
 #: builtin/update-ref.c:10
 msgid "git update-ref [<options>]    <refname> <new-val> [<old-val>]"
@@ -10129,12 +10297,91 @@
 msgstr "git verify-tag [-v | --verbose] <etiqueta>..."
 
 #: builtin/verify-tag.c:73
 msgid "print tag contents"
 msgstr "imprimeix els continguts de l'etiqueta"
 
+#: builtin/worktree.c:11
+msgid "git worktree add [<options>] <path> <branch>"
+msgstr "git worktree add [<opcions>] <camí> <branca>"
+
+#: builtin/worktree.c:12
+msgid "git worktree prune [<options>]"
+msgstr "git worktree prune [<opcions>]"
+
+#: builtin/worktree.c:27
+#, c-format
+msgid "Removing worktrees/%s: not a valid directory"
+msgstr "Eliminació de worktrees/%s: no és un directori vàlid"
+
+#: builtin/worktree.c:33
+#, c-format
+msgid "Removing worktrees/%s: gitdir file does not exist"
+msgstr "Eliminació de worktrees/%s: el fitxer gitdir no existeix"
+
+#: builtin/worktree.c:38
+#, c-format
+msgid "Removing worktrees/%s: unable to read gitdir file (%s)"
+msgstr "Eliminació de worktrees/%s: no s'ha pogut llegir el fitxer gitdir (%s)"
+
+#: builtin/worktree.c:49
+#, c-format
+msgid "Removing worktrees/%s: invalid gitdir file"
+msgstr "Eliminació de worktrees/%s: fitxer gitdir no vàlid"
+
+#: builtin/worktree.c:65
+#, c-format
+msgid "Removing worktrees/%s: gitdir file points to non-existent location"
+msgstr ""
+"Eliminació de worktrees/%s: el fitxer gitdir es refereix a una ubicació no "
+"existent"
+
+#: builtin/worktree.c:100
+#, c-format
+msgid "failed to remove: %s"
+msgstr "s'ha fallat en eliminar: %s"
+
+#: builtin/worktree.c:186
+#, c-format
+msgid "'%s' already exists"
+msgstr "'%s' ja existeix"
+
+#: builtin/worktree.c:207
+#, c-format
+msgid "could not create directory of '%s'"
+msgstr "no s'ha pogut crear directori de '%s'"
+
+#: builtin/worktree.c:241
+msgid "unable to resolve HEAD"
+msgstr "no es pot resoldre HEAD"
+
+#: builtin/worktree.c:249
+#, c-format
+msgid "Enter %s (identifier %s)"
+msgstr "Introduïu %s (identificador %s)"
+
+#: builtin/worktree.c:281
+msgid "checkout <branch> even if already checked out in other worktree"
+msgstr "agafa <branca> encara que sigui agafada en altre arbre de treball"
+
+#: builtin/worktree.c:283
+msgid "create a new branch"
+msgstr "crea una branca nova"
+
+#: builtin/worktree.c:285
+msgid "create or reset a branch"
+msgstr "crea o restableix una branca"
+
+#: builtin/worktree.c:286
+msgid "detach HEAD at named commit"
+msgstr "separa el HEAD a la comissió anomenada"
+
+#: builtin/worktree.c:292
+msgid "-b and -B are mutually exclusive"
+msgstr "-b i -B són mutualment exclusius"
+
 #: builtin/write-tree.c:13
 msgid "git write-tree [--missing-ok] [--prefix=<prefix>/]"
 msgstr "git write-tree [--missing-ok] [--prefix=<prefix>/]"
 
 #: builtin/write-tree.c:26
 msgid "<prefix>/"
@@ -10160,305 +10407,325 @@
 msgstr ""
 "'git help -a' i 'git help -g' llisten subordres disponibles i\n"
 "algunes guies de concepte. Vegeu 'git help <ordre>' o\n"
 "'git help <concepte>' per a llegir sobre una subordre o concepte\n"
 "específic."
 
-#: common-cmds.h:8
+#: common-cmds.h:10
+msgid "start a working area (see also: git help tutorial)"
+msgstr "començar un àrea de treball (vegeu també: git help tutorial)"
+
+#: common-cmds.h:11
+msgid "work on the current change (see also: git help everyday)"
+msgstr "treballar en el canvi actual (vegeu també: git help everyday)"
+
+#: common-cmds.h:12
+msgid "examine the history and state (see also: git help revisions)"
+msgstr "examinar la història i l'estat (vegeu també: git help revisions)"
+
+#: common-cmds.h:13
+msgid "grow, mark and tweak your common history"
+msgstr "fer créixer, marcar i ajustar la vostra història comuna"
+
+#: common-cmds.h:14
+msgid "collaborate (see also: git help workflows)"
+msgstr "col·laborar (vegeu també: git help workflow)"
+
+#: common-cmds.h:18
 msgid "Add file contents to the index"
 msgstr "Afegeix els continguts dels fitxers a l'índex"
 
-#: common-cmds.h:9
+#: common-cmds.h:19
 msgid "Find by binary search the change that introduced a bug"
 msgstr "Troba per cerca binària el canvi que hagi introduït un defecte"
 
-#: common-cmds.h:10
+#: common-cmds.h:20
 msgid "List, create, or delete branches"
 msgstr "Llista, crea o suprimeix branques"
 
-#: common-cmds.h:11
-msgid "Checkout a branch or paths to the working tree"
-msgstr "Agafa una branca o uns camins a l'arbre de treball"
+#: common-cmds.h:21
+msgid "Switch branches or restore working tree files"
+msgstr "Canvia de branca o restaura els fitxers de l'arbre de treball"
 
-#: common-cmds.h:12
+#: common-cmds.h:22
 msgid "Clone a repository into a new directory"
 msgstr "Clona un dipòsit a un directori nou"
 
-#: common-cmds.h:13
+#: common-cmds.h:23
 msgid "Record changes to the repository"
 msgstr "Registra els canvis al dipòsit"
 
-#: common-cmds.h:14
+#: common-cmds.h:24
 msgid "Show changes between commits, commit and working tree, etc"
 msgstr ""
 "Mostra els canvis entre comissions, la comissió i l'arbre de treball, etc."
 
-#: common-cmds.h:15
+#: common-cmds.h:25
 msgid "Download objects and refs from another repository"
 msgstr "Baixa objectes i referències d'un altre dipòsit"
 
-#: common-cmds.h:16
+#: common-cmds.h:26
 msgid "Print lines matching a pattern"
 msgstr "Imprimeix les línies coincidents amb un patró"
 
-#: common-cmds.h:17
+#: common-cmds.h:27
 msgid "Create an empty Git repository or reinitialize an existing one"
 msgstr "Crea un dipòsit de Git buit o reinicialitza un existent"
 
-#: common-cmds.h:18
+#: common-cmds.h:28
 msgid "Show commit logs"
 msgstr "Mostra els registres de comissió"
 
-#: common-cmds.h:19
+#: common-cmds.h:29
 msgid "Join two or more development histories together"
 msgstr "Uneix dues o més històries de desenvolupament"
 
-#: common-cmds.h:20
+#: common-cmds.h:30
 msgid "Move or rename a file, a directory, or a symlink"
 msgstr "Mou o canvia de nom un fitxer, directori o enllaç simbòlic"
 
-#: common-cmds.h:21
+#: common-cmds.h:31
 msgid "Fetch from and integrate with another repository or a local branch"
 msgstr "Obtén de i integra amb un altre dipòsit o una branca local"
 
-#: common-cmds.h:22
+#: common-cmds.h:32
 msgid "Update remote refs along with associated objects"
 msgstr ""
 "Actualitza les referències remotes juntament amb els objectes associats"
 
-#: common-cmds.h:23
+#: common-cmds.h:33
 msgid "Forward-port local commits to the updated upstream head"
 msgstr "Avança les comissions locals al cap font actualitzat"
 
-#: common-cmds.h:24
+#: common-cmds.h:34
 msgid "Reset current HEAD to the specified state"
 msgstr "Restableix el HEAD actual a l'estat especificat"
 
-#: common-cmds.h:25
+#: common-cmds.h:35
 msgid "Remove files from the working tree and from the index"
 msgstr "Elimina fitxers de l'arbre de treball i de l'índex"
 
-#: common-cmds.h:26
+#: common-cmds.h:36
 msgid "Show various types of objects"
 msgstr "Mostra diversos tipus d'objectes"
 
-#: common-cmds.h:27
+#: common-cmds.h:37
 msgid "Show the working tree status"
 msgstr "Mostra l'estat de l'arbre de treball"
 
-#: common-cmds.h:28
+#: common-cmds.h:38
 msgid "Create, list, delete or verify a tag object signed with GPG"
 msgstr ""
 "Crea, llista, suprimeix o verifica un objecte d'etiqueta firmat amb GPG"
 
-#: parse-options.h:143
+#: parse-options.h:142
 msgid "expiry-date"
 msgstr "data-de-caducitat"
 
-#: parse-options.h:158
+#: parse-options.h:157
 msgid "no-op (backward compatibility)"
 msgstr "operació nul·la (per a compatibilitat amb versions anteriors)"
 
-#: parse-options.h:232
+#: parse-options.h:231
 msgid "be more verbose"
 msgstr "sigues més detallat"
 
-#: parse-options.h:234
+#: parse-options.h:233
 msgid "be more quiet"
 msgstr "sigues més callat"
 
-#: parse-options.h:240
+#: parse-options.h:239
 msgid "use <n> digits to display SHA-1s"
 msgstr "usa <n> xifres per presentar els SHA-1"
 
 #: rerere.h:27
 msgid "update the index with reused conflict resolution if possible"
 msgstr ""
 "actualitza l'índex amb la resolució de conflicte reusada si és possible"
 
 #: git-am.sh:53
 msgid "You need to set your committer info first"
 msgstr "Cal establir la vostra informació de comitent primer"
 
-#: git-am.sh:98
+#: git-am.sh:100
 msgid ""
 "You seem to have moved HEAD since the last 'am' failure.\n"
 "Not rewinding to ORIG_HEAD"
 msgstr ""
 "Sembla que heu mogut HEAD després de l'última fallada de 'am'.\n"
 "No rebobinant a ORIG_HEAD"
 
-#: git-am.sh:108
+#: git-am.sh:110
 #, sh-format
 msgid ""
 "When you have resolved this problem, run \"$cmdline --continue\".\n"
 "If you prefer to skip this patch, run \"$cmdline --skip\" instead.\n"
 "To restore the original branch and stop patching, run \"$cmdline --abort\"."
 msgstr ""
 "Quan hàgiu resolt aquest problema, executeu \"$cmdline --continue\".\n"
 "Si preferiu ometre aquest pedaç, executeu \"$cmdline --skip\" en lloc "
 "d'això.\n"
 "Per a restaurar la branca original i deixar d'apedaçar, executeu \"$cmdline "
 "--abort\"."
 
-#: git-am.sh:124
+#: git-am.sh:126
 msgid "Cannot fall back to three-way merge."
 msgstr "No es pot retrocedir a una fusió de 3 vies."
 
-#: git-am.sh:140
+#: git-am.sh:142
 msgid "Repository lacks necessary blobs to fall back on 3-way merge."
 msgstr ""
 "Al dipòsit li manquen els blobs necessaris per a retrocedir a una fusió de 3 "
 "vies."
 
-#: git-am.sh:142
+#: git-am.sh:144
 msgid "Using index info to reconstruct a base tree..."
 msgstr "Usant la informació d'índex per a reconstruir un arbre base..."
 
-#: git-am.sh:157
+#: git-am.sh:159
 msgid ""
 "Did you hand edit your patch?\n"
 "It does not apply to blobs recorded in its index."
 msgstr ""
 "Heu editat el vostre pedaç a mà?\n"
 "No s'aplica als blobs recordats en el seu índex."
 
-#: git-am.sh:166
+#: git-am.sh:168
 msgid "Falling back to patching base and 3-way merge..."
 msgstr "Retrocedint a apedaçar la base i fusionar de 3 vies..."
 
-#: git-am.sh:182
+#: git-am.sh:185
 msgid "Failed to merge in the changes."
 msgstr "S'ha fallat en fusionar els canvis."
 
-#: git-am.sh:277
+#: git-am.sh:280
 msgid "Only one StGIT patch series can be applied at once"
 msgstr "només una sèrie de pedaços StGIT es pot aplicar a la vegada"
 
-#: git-am.sh:364
+#: git-am.sh:367
 #, sh-format
 msgid "Patch format $patch_format is not supported."
 msgstr "El format de pedaç $patch_format no és compatible."
 
-#: git-am.sh:366
+#: git-am.sh:369
 msgid "Patch format detection failed."
 msgstr "La detecció de format de pedaç ha fallat."
 
-#: git-am.sh:398
+#: git-am.sh:407
 msgid ""
 "The -b/--binary option has been a no-op for long time, and\n"
 "it will be removed. Please do not use it anymore."
 msgstr ""
 "Fa molt que l'opció -b/--binary no ha fet res, i\n"
 "s'eliminarà. Si us plau, no l'useu més."
 
-#: git-am.sh:496
+#: git-am.sh:507
 #, sh-format
 msgid "previous rebase directory $dotest still exists but mbox given."
 msgstr ""
 "un directori de rebase anterior $dotest encara existeix però s'ha donat una "
 "bústia."
 
-#: git-am.sh:501
+#: git-am.sh:512
 msgid "Please make up your mind. --skip or --abort?"
 msgstr "Si us plau, preneu una decisió. --skip o --abort?"
 
-#: git-am.sh:537
+#: git-am.sh:560
 #, sh-format
 msgid ""
 "Stray $dotest directory found.\n"
 "Use \"git am --abort\" to remove it."
 msgstr ""
 "Directori $dotest extraviat trobat.\n"
 "Useu \"git am --abort\" per a eliminar-lo."
 
-#: git-am.sh:545
+#: git-am.sh:568
 msgid "Resolve operation not in progress, we are not resuming."
 msgstr "Operació de resolució no en curs; no reprenem."
 
-#: git-am.sh:612
+#: git-am.sh:635
 #, sh-format
 msgid "Dirty index: cannot apply patches (dirty: $files)"
 msgstr "Índex brut: no es pot aplicar pedaços (bruts: $files)"
 
-#: git-am.sh:722
+#: git-am.sh:747
 #, sh-format
 msgid ""
 "Patch is empty.  Was it split wrong?\n"
 "If you would prefer to skip this patch, instead run \"$cmdline --skip\".\n"
 "To restore the original branch and stop patching run \"$cmdline --abort\"."
 msgstr ""
 "El pedaç és buit. S'ha dividit malament?\n"
 "Si preferiu ometre aquest pedaç, executeu en lloc d'això \"$cmdline --skip"
 "\".\n"
 "Per a restaurar la branca original i deixar d'empaquetar, executeu "
 "\"$cmdline --abort\"."
 
-#: git-am.sh:749
+#: git-am.sh:774
 msgid "Patch does not have a valid e-mail address."
 msgstr "El pedaç no té cap adreça de correu electrònic vàlida."
 
-#: git-am.sh:796
+#: git-am.sh:821
 msgid "cannot be interactive without stdin connected to a terminal."
 msgstr ""
 "no es pot ser interactiu sense que stdin sigui connectat a un terminal."
 
-#: git-am.sh:800
+#: git-am.sh:825
 msgid "Commit Body is:"
 msgstr "El cos de la comissió és:"
 
 #. TRANSLATORS: Make sure to include [y], [n], [e], [v] and [a]
 #. in your translation. The program will only accept English
 #. input at this point.
-#: git-am.sh:807
+#: git-am.sh:832
 msgid "Apply? [y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all "
 msgstr ""
 "Voleu aplicar-lo? [y]es/[n]o/[e]dita/[v]isualitza el pedaç/[a]ccepta'ls tots "
 
-#: git-am.sh:843
+#: git-am.sh:868
 #, sh-format
 msgid "Applying: $FIRSTLINE"
 msgstr "Aplicant: $FIRSTLINE"
 
-#: git-am.sh:864
+#: git-am.sh:889
 msgid ""
 "No changes - did you forget to use 'git add'?\n"
 "If there is nothing left to stage, chances are that something else\n"
 "already introduced the same changes; you might want to skip this patch."
 msgstr ""
 "Cap canvi - heu oblidat usar 'git add'?\n"
 "Si no hi ha res a allistar, probablement alguna altra cosa\n"
 "ja ha introduït els mateixos canvis; potser voleu ometre aquest pedaç."
 
-#: git-am.sh:872
+#: git-am.sh:897
 msgid ""
 "You still have unmerged paths in your index\n"
 "did you forget to use 'git add'?"
 msgstr ""
 "Encara teniu camins sense fusionar en el vostre índex\n"
 "heu oblidat d'usar 'git add'?"
 
-#: git-am.sh:888
+#: git-am.sh:913
 msgid "No changes -- Patch already applied."
 msgstr "Sense canvis -- El pedaç ja s'ha aplicat."
 
-#: git-am.sh:898
+#: git-am.sh:923
 #, sh-format
 msgid "Patch failed at $msgnum $FIRSTLINE"
 msgstr "El pedaç ha fallat a $msgnum $FIRSTLINE"
 
-#: git-am.sh:901
+#: git-am.sh:926
 #, sh-format
 msgid ""
 "The copy of the patch that failed is found in:\n"
 "   $dotest/patch"
 msgstr ""
 "La còpia del pedaç que ha fallat es troba en:\n"
 "   $dotest/patch"
 
-#: git-am.sh:919
+#: git-am.sh:945
 msgid "applying to an empty history"
 msgstr "aplicant a una història buida"
 
 #: git-bisect.sh:48
 msgid "You need to start by \"git bisect start\""
 msgstr "Cal començar per \"git bisect start\""
@@ -10611,55 +10878,55 @@
 "'bisect_state $state' ha surt amb el codi d'error $res"
 
 #: git-bisect.sh:485
 msgid "bisect run success"
 msgstr "pas de bisecció reeixit"
 
-#: git-pull.sh:21
+#: git-pull.sh:61
 msgid ""
 "Pull is not possible because you have unmerged files.\n"
 "Please, fix them up in the work tree, and then use 'git add/rm <file>'\n"
 "as appropriate to mark resolution and make a commit."
 msgstr ""
 "Baixar no és possible perquè teniu fitxers sense fusionar.\n"
 "Si us plau, arregleu-los en l'arbre de treball, i després useu\n"
 "'git add/rm <fitxer>' segons sigui apropiat per a marcar resolució i\n"
 "feu una comissió."
 
-#: git-pull.sh:25
+#: git-pull.sh:65
 msgid "Pull is not possible because you have unmerged files."
 msgstr "Baixar no és possible perquè teniu fitxers sense fusionar."
 
-#: git-pull.sh:31
+#: git-pull.sh:71
 msgid ""
 "You have not concluded your merge (MERGE_HEAD exists).\n"
 "Please, commit your changes before you can merge."
 msgstr ""
 "No heu completat la vostra fusió (MERGE_HEAD existeix).\n"
 "Si us plau, cometeu els vostres canvis abans de fusionar."
 
-#: git-pull.sh:245
+#: git-pull.sh:285
 msgid "updating an unborn branch with changes added to the index"
 msgstr "actualitzant una branca no nascuda amb canvis afegits a l'índex"
 
-#: git-pull.sh:269
+#: git-pull.sh:311
 #, sh-format
 msgid ""
 "Warning: fetch updated the current branch head.\n"
 "Warning: fast-forwarding your working tree from\n"
 "Warning: commit $orig_head."
 msgstr ""
 "Avís: l'obteniment ha actualitzat el cap de la branca actual.\n"
 "Avís: avançant ràpidament el vostre arbre de treball des de\n"
 "Avís: la comissió $orig_head."
 
-#: git-pull.sh:294
+#: git-pull.sh:336
 msgid "Cannot merge multiple branches into empty head"
 msgstr "No es pot fusionar múltiples branques a un cap buit"
 
-#: git-pull.sh:298
+#: git-pull.sh:340
 msgid "Cannot rebase onto multiple branches"
 msgstr "No es pot rebasar sobre múltiples branques"
 
 #: git-rebase.sh:57
 msgid ""
 "When you have resolved this problem, run \"git rebase --continue\".\n"
@@ -10852,100 +11119,105 @@
 #. translation of "error: " takes in your language. E.g. in
 #. English this is:
 #.
 #. $ git stash save --blah-blah 2>&1 | head -n 2
 #. error: unknown option for 'stash save': --blah-blah
 #. To provide a message, use git stash save -- '--blah-blah'
-#: git-stash.sh:238
+#: git-stash.sh:241
 #, sh-format
 msgid ""
 "error: unknown option for 'stash save': $option\n"
 "       To provide a message, use git stash save -- '$option'"
 msgstr ""
 "error: opció desconeguda de 'stash save': $option\n"
 "       Per a proveir un missatge, useu git stash save -- '$option'"
 
-#: git-stash.sh:259
+#: git-stash.sh:262
 msgid "No local changes to save"
 msgstr "No hi ha canvis locals a desar"
 
-#: git-stash.sh:263
+#: git-stash.sh:266
 msgid "Cannot initialize stash"
 msgstr "No es pot inicialitzar el magatzem"
 
-#: git-stash.sh:267
+#: git-stash.sh:270
 msgid "Cannot save the current status"
 msgstr "No es pot desar l'estat actual"
 
-#: git-stash.sh:285
+#: git-stash.sh:288
 msgid "Cannot remove worktree changes"
 msgstr "No es poden elminiar els canvis de l'arbre de treball"
 
-#: git-stash.sh:384
+#: git-stash.sh:389
+#, sh-format
+msgid "unknown option: $opt"
+msgstr "opció desconeguda: $opt"
+
+#: git-stash.sh:399
 msgid "No stash found."
 msgstr "Cap magatzem trobat."
 
-#: git-stash.sh:391
+#: git-stash.sh:406
 #, sh-format
 msgid "Too many revisions specified: $REV"
 msgstr "Massa revisions especificades: $REV"
 
-#: git-stash.sh:397
+#: git-stash.sh:412
 #, sh-format
 msgid "$reference is not a valid reference"
 msgstr "$reference no és una referència vàlida"
 
-#: git-stash.sh:425
+#: git-stash.sh:440
 #, sh-format
 msgid "'$args' is not a stash-like commit"
 msgstr "'$args' no és una comissió de tipus magatzem"
 
-#: git-stash.sh:436
+#: git-stash.sh:451
 #, sh-format
 msgid "'$args' is not a stash reference"
 msgstr "'$args' no és una referència de magatzem"
 
-#: git-stash.sh:444
+#: git-stash.sh:459
 msgid "unable to refresh index"
 msgstr "no s'ha pogut actualitzar l'índex"
 
-#: git-stash.sh:448
+#: git-stash.sh:463
 msgid "Cannot apply a stash in the middle of a merge"
 msgstr "No es pot aplicar un magatzem enmig d'una fusió"
 
-#: git-stash.sh:456
+#: git-stash.sh:471
 msgid "Conflicts in index. Try without --index."
 msgstr "Hi ha conflictes en l'índex. Proveu-ho sense --index."
 
-#: git-stash.sh:458
+#: git-stash.sh:473
 msgid "Could not save index tree"
 msgstr "No s'ha pogut desar l'arbre d'índex"
 
-#: git-stash.sh:492
+#: git-stash.sh:507
 msgid "Cannot unstage modified files"
 msgstr "No es pot desallistar fitxers modificats"
 
-#: git-stash.sh:507
+#: git-stash.sh:522
 msgid "Index was not unstashed."
 msgstr "L'índex no estava sense emmagatzemar."
 
-#: git-stash.sh:530
+#: git-stash.sh:545
 #, sh-format
 msgid "Dropped ${REV} ($s)"
 msgstr "${REV} ($s) descartada"
 
-#: git-stash.sh:531
+#: git-stash.sh:546
 #, sh-format
 msgid "${REV}: Could not drop stash entry"
 msgstr "${REV}: No s'ha pogut descartar l'entrada de magatzem"
 
-#: git-stash.sh:539
+#: git-stash.sh:554
 msgid "No branch name specified"
 msgstr "Cap nom de branca especificat"
 
-#: git-stash.sh:611
+#: git-stash.sh:626
 msgid "(To restore them type \"git stash apply\")"
 msgstr "(Per restaurar-les teclegeu \"git stash apply\")"
 
 #: git-submodule.sh:95
 #, sh-format
 msgid "cannot strip one component off url '$remoteurl'"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/de.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/de.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/de.po	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/de.po	2015-07-28 04:34:56.000000000 +0800
@@ -4,13 +4,13 @@
 # Ralf Thielow <ralf.thielow@gmail.com>, 2010-2015.
 #
 msgid ""
 msgstr ""
 "Project-Id-Version: Git\n"
 "Report-Msgid-Bugs-To: Git Mailing List <git@vger.kernel.org>\n"
-"POT-Creation-Date: 2015-04-03 08:13+0800\n"
+"POT-Creation-Date: 2015-07-14 07:19+0800\n"
 "PO-Revision-Date: 2015-01-21 15:01+0800\n"
 "Last-Translator: Ralf Thielow <ralf.thielow@gmail.com>\n"
 "Language-Team: German <>\n"
 "Language: de\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
@@ -47,13 +47,13 @@
 "Referenz> [<Pfad>...]"
 
 #: archive.c:14
 msgid "git archive --remote <repo> [--exec <cmd>] --list"
 msgstr "git archive --remote <Repository> [--exec <Programm>] --list"
 
-#: archive.c:342 builtin/add.c:137 builtin/add.c:427 builtin/rm.c:328
+#: archive.c:342 builtin/add.c:137 builtin/add.c:428 builtin/rm.c:327
 #, c-format
 msgid "pathspec '%s' did not match any files"
 msgstr "Pfadspezifikation '%s' stimmt mit keinen Dateien überein"
 
 #: archive.c:427
 msgid "fmt"
@@ -70,15 +70,15 @@
 #: archive.c:429
 msgid "prepend prefix to each pathname in the archive"
 msgstr "einen Präfix vor jeden Pfadnamen in dem Archiv stellen"
 
 #: archive.c:430 builtin/archive.c:88 builtin/blame.c:2516
 #: builtin/blame.c:2517 builtin/config.c:57 builtin/fast-export.c:986
-#: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:101
+#: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:99
 #: builtin/ls-files.c:446 builtin/ls-files.c:449 builtin/notes.c:394
-#: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:151
+#: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:150
 msgid "file"
 msgstr "Datei"
 
 #: archive.c:431 builtin/archive.c:89
 msgid "write the archive to this file"
 msgstr "das Archiv in diese Datei schreiben"
@@ -104,13 +104,13 @@
 msgstr "besser komprimieren"
 
 #: archive.c:447
 msgid "list supported archive formats"
 msgstr "unterstützte Archivformate auflisten"
 
-#: archive.c:449 builtin/archive.c:90 builtin/clone.c:86
+#: archive.c:449 builtin/archive.c:90 builtin/clone.c:77
 msgid "repo"
 msgstr "Repository"
 
 #: archive.c:450 builtin/archive.c:91
 msgid "retrieve the archive from remote repository <repo>"
 msgstr "Archiv vom Remote-Repository <Repository> abrufen"
@@ -120,13 +120,13 @@
 msgstr "Programm"
 
 #: archive.c:452 builtin/archive.c:93
 msgid "path to the remote git-upload-archive command"
 msgstr "Pfad zum externen \"git-upload-archive\"-Programm"
 
-#: attr.c:264
+#: attr.c:265
 msgid ""
 "Negative patterns are ignored in git attributes\n"
 "Use '\\!' for literal leading exclamation."
 msgstr ""
 "Verneinende Muster werden in Git-Attributen ignoriert.\n"
 "Benutzen Sie '\\!' für führende Ausrufezeichen."
@@ -264,14 +264,14 @@
 
 #: bundle.c:139
 msgid "Repository lacks these prerequisite commits:"
 msgstr "Dem Repository fehlen folgende vorausgesetzte Commits:"
 
 #: bundle.c:163 sequencer.c:650 sequencer.c:1105 builtin/blame.c:2705
-#: builtin/branch.c:659 builtin/commit.c:1045 builtin/log.c:330
-#: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:358
+#: builtin/branch.c:651 builtin/commit.c:1045 builtin/log.c:330
+#: builtin/log.c:825 builtin/log.c:1432 builtin/log.c:1666 builtin/merge.c:358
 #: builtin/shortlog.c:158
 msgid "revision walk setup failed"
 msgstr "Einrichtung des Revisionsgangs fehlgeschlagen"
 
 #: bundle.c:185
 #, c-format
@@ -515,35 +515,43 @@
 "Found errors in 'diff.dirstat' config variable:\n"
 "%s"
 msgstr ""
 "Fehler in 'diff.dirstat' Konfigurationsvariable gefunden:\n"
 "%s"
 
-#: diff.c:2956
+#: diff.c:2997
 #, c-format
 msgid "external diff died, stopping at %s"
 msgstr "externes Diff-Programm unerwartet beendet, angehalten bei %s"
 
-#: diff.c:3351
+#: diff.c:3393
 msgid "--follow requires exactly one pathspec"
 msgstr "--follow erfordert genau eine Pfadspezifikation"
 
-#: diff.c:3514
+#: diff.c:3556
 #, c-format
 msgid ""
 "Failed to parse --dirstat/-X option parameter:\n"
 "%s"
 msgstr ""
 "Fehler beim Parsen des --dirstat/-X Optionsparameters:\n"
 "%s"
 
-#: diff.c:3528
+#: diff.c:3570
 #, c-format
 msgid "Failed to parse --submodule option parameter: '%s'"
 msgstr "Fehler beim Parsen des --submodule Optionsparameters: '%s'"
 
+#: dir.c:1852
+msgid "failed to get kernel name and information"
+msgstr "Fehler beim Sammeln von Namen und Informationen zum Kernel"
+
+#: dir.c:1945
+msgid "Untracked cache is disabled on this system."
+msgstr "Cache für unversionierte Dateien ist auf diesem System deaktiviert."
+
 #: gpg-interface.c:129 gpg-interface.c:200
 msgid "could not run gpg."
 msgstr "konnte gpg nicht ausführen"
 
 #: gpg-interface.c:141
 msgid "gpg did not accept the data"
@@ -582,51 +590,51 @@
 #, c-format
 msgid "available git commands in '%s'"
 msgstr "Vorhandene Git-Kommandos in '%s'"
 
 #: help.c:214
 msgid "git commands available from elsewhere on your $PATH"
-msgstr "Vorhandene Git-Kommandos irgendwo in Ihrem $PATH"
+msgstr "Vorhandene Git-Kommandos anderswo in Ihrem $PATH"
 
-#: help.c:230
-msgid "The most commonly used git commands are:"
-msgstr "Die allgemein verwendeten Git-Kommandos sind:"
+#: help.c:246
+msgid "These are common Git commands used in various situations:"
+msgstr "Allgemeine Git-Kommandos, verwendet in verschiedenen Situationen:"
 
-#: help.c:289
+#: help.c:311
 #, c-format
 msgid ""
 "'%s' appears to be a git command, but we were not\n"
 "able to execute it. Maybe git-%s is broken?"
 msgstr ""
 "'%s' scheint ein git-Kommando zu sein, konnte aber\n"
 "nicht ausgeführt werden. Vielleicht ist git-%s fehlerhaft?"
 
-#: help.c:346
+#: help.c:368
 msgid "Uh oh. Your system reports no Git commands at all."
 msgstr "Uh oh. Keine Git-Kommandos auf Ihrem System vorhanden."
 
-#: help.c:368
+#: help.c:390
 #, c-format
 msgid ""
 "WARNING: You called a Git command named '%s', which does not exist.\n"
 "Continuing under the assumption that you meant '%s'"
 msgstr ""
 "Warnung: Sie haben das nicht existierende Git-Kommando '%s' ausgeführt.\n"
 "Setze fort unter der Annahme, dass Sie '%s' gemeint haben."
 
-#: help.c:373
+#: help.c:395
 #, c-format
 msgid "in %0.1f seconds automatically..."
 msgstr "Automatische Ausführung in %0.1f Sekunden ..."
 
-#: help.c:380
+#: help.c:402
 #, c-format
 msgid "git: '%s' is not a git command. See 'git --help'."
 msgstr "git: '%s' ist kein Git-Kommando. Siehe 'git --help'."
 
-#: help.c:384 help.c:444
+#: help.c:406 help.c:466
 msgid ""
 "\n"
 "Did you mean this?"
 msgid_plural ""
 "\n"
 "Did you mean one of these?"
@@ -634,33 +642,33 @@
 "\n"
 "Haben Sie das gemeint?"
 msgstr[1] ""
 "\n"
 "Haben Sie eines von diesen gemeint?"
 
-#: help.c:440
+#: help.c:462
 #, c-format
 msgid "%s: %s - %s"
 msgstr "%s: %s - %s"
 
-#: lockfile.c:283
+#: lockfile.c:345
 msgid "BUG: reopen a lockfile that is still open"
 msgstr "FEHLER: Wiederöffnen einer bereits geöffneten Lock-Datei"
 
-#: lockfile.c:285
+#: lockfile.c:347
 msgid "BUG: reopen a lockfile that has been committed"
 msgstr "FEHLER: Wiederöffnen einer bereits committeten Lock-Datei"
 
 #: merge.c:41
 msgid "failed to read the cache"
 msgstr "Lesen des Zwischenspeichers fehlgeschlagen"
 
-#: merge.c:94 builtin/checkout.c:374 builtin/checkout.c:580
-#: builtin/clone.c:662
+#: merge.c:94 builtin/checkout.c:376 builtin/checkout.c:587
+#: builtin/clone.c:647
 msgid "unable to write new index file"
-msgstr "Konnte neue Staging-Area-Datei nicht schreiben."
+msgstr "Konnte neue Index-Datei nicht schreiben."
 
 #: merge-recursive.c:189
 #, c-format
 msgid "(bad commit)\n"
 msgstr "(ungültiger Commit)\n"
 
@@ -670,253 +678,253 @@
 msgstr "addinfo_cache für Pfad '%s' fehlgeschlagen"
 
 #: merge-recursive.c:270
 msgid "error building trees"
 msgstr "Fehler beim Erstellen der \"Tree\"-Objekte"
 
-#: merge-recursive.c:688
+#: merge-recursive.c:687
 #, c-format
 msgid "failed to create path '%s'%s"
 msgstr "Fehler beim Erstellen des Pfades '%s'%s"
 
-#: merge-recursive.c:699
+#: merge-recursive.c:698
 #, c-format
 msgid "Removing %s to make room for subdirectory\n"
 msgstr "Entferne %s, um Platz für Unterverzeichnis zu schaffen\n"
 
-#: merge-recursive.c:713 merge-recursive.c:734
+#: merge-recursive.c:712 merge-recursive.c:733
 msgid ": perhaps a D/F conflict?"
 msgstr ": vielleicht ein Verzeichnis/Datei-Konflikt?"
 
-#: merge-recursive.c:724
+#: merge-recursive.c:723
 #, c-format
 msgid "refusing to lose untracked file at '%s'"
 msgstr "verweigere, da unversionierte Dateien in '%s' verloren gehen würden"
 
-#: merge-recursive.c:764
+#: merge-recursive.c:763
 #, c-format
 msgid "cannot read object %s '%s'"
 msgstr "kann Objekt %s '%s' nicht lesen"
 
-#: merge-recursive.c:766
+#: merge-recursive.c:765
 #, c-format
 msgid "blob expected for %s '%s'"
 msgstr "Blob erwartet für %s '%s'"
 
-#: merge-recursive.c:789 builtin/clone.c:321
+#: merge-recursive.c:788 builtin/clone.c:306
 #, c-format
 msgid "failed to open '%s'"
 msgstr "Fehler beim Öffnen von '%s'"
 
-#: merge-recursive.c:797
+#: merge-recursive.c:796
 #, c-format
 msgid "failed to symlink '%s'"
 msgstr "Fehler beim Erstellen einer symbolischen Verknüpfung für '%s'"
 
-#: merge-recursive.c:800
+#: merge-recursive.c:799
 #, c-format
 msgid "do not know what to do with %06o %s '%s'"
 msgstr "weiß nicht was mit %06o %s '%s' zu machen ist"
 
-#: merge-recursive.c:938
+#: merge-recursive.c:937
 msgid "Failed to execute internal merge"
 msgstr "Fehler bei Ausführung des internen Merges"
 
-#: merge-recursive.c:942
+#: merge-recursive.c:941
 #, c-format
 msgid "Unable to add %s to database"
 msgstr "Konnte %s nicht zur Datenbank hinzufügen"
 
-#: merge-recursive.c:958
+#: merge-recursive.c:957
 msgid "unsupported object type in the tree"
 msgstr "nicht unterstützter Objekttyp im Verzeichnis"
 
-#: merge-recursive.c:1033 merge-recursive.c:1047
+#: merge-recursive.c:1032 merge-recursive.c:1046
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree."
 msgstr ""
 "KONFLIKT (%s/löschen): %s gelöscht in %s und %s in %s. Stand %s von %s wurde "
 "im Arbeitsbereich gelassen."
 
-#: merge-recursive.c:1039 merge-recursive.c:1052
+#: merge-recursive.c:1038 merge-recursive.c:1051
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree at %s."
 msgstr ""
 "KONFLIKT (%s/löschen): %s gelöscht in %s und %s in %s. Stand %s von %s wurde "
 "im Arbeitsbereich bei %s gelassen."
 
-#: merge-recursive.c:1093
+#: merge-recursive.c:1092
 msgid "rename"
 msgstr "umbenennen"
 
-#: merge-recursive.c:1093
+#: merge-recursive.c:1092
 msgid "renamed"
 msgstr "umbenannt"
 
-#: merge-recursive.c:1149
+#: merge-recursive.c:1148
 #, c-format
 msgid "%s is a directory in %s adding as %s instead"
 msgstr "%s ist ein Verzeichnis in %s, füge es stattdessen als %s hinzu"
 
-#: merge-recursive.c:1171
+#: merge-recursive.c:1170
 #, c-format
 msgid ""
 "CONFLICT (rename/rename): Rename \"%s\"->\"%s\" in branch \"%s\" rename \"%s"
 "\"->\"%s\" in \"%s\"%s"
 msgstr ""
 "KONFLIKT (umbenennen/umbenennen): Benenne um \"%s\"->\"%s\" in Branch \"%s\" "
 "und \"%s\"->\"%s\" in Branch \"%s\"%s"
 
-#: merge-recursive.c:1176
+#: merge-recursive.c:1175
 msgid " (left unresolved)"
 msgstr " (bleibt unaufgelöst)"
 
-#: merge-recursive.c:1230
+#: merge-recursive.c:1229
 #, c-format
 msgid "CONFLICT (rename/rename): Rename %s->%s in %s. Rename %s->%s in %s"
 msgstr ""
 "KONFLIKT (umbenennen/umbenennen): Benenne um %s->%s in %s. Benenne um %s->%s "
 "in %s"
 
-#: merge-recursive.c:1260
+#: merge-recursive.c:1259
 #, c-format
 msgid "Renaming %s to %s and %s to %s instead"
 msgstr "Benenne stattdessen %s nach %s und %s nach %s um"
 
-#: merge-recursive.c:1459
+#: merge-recursive.c:1458
 #, c-format
 msgid "CONFLICT (rename/add): Rename %s->%s in %s. %s added in %s"
 msgstr ""
 "KONFLIKT (umbenennen/hinzufügen): Benenne um %s->%s in %s. %s hinzugefügt in "
 "%s"
 
-#: merge-recursive.c:1469
+#: merge-recursive.c:1468
 #, c-format
 msgid "Adding merged %s"
 msgstr "Füge zusammengeführte Datei %s hinzu"
 
-#: merge-recursive.c:1474 merge-recursive.c:1672
+#: merge-recursive.c:1473 merge-recursive.c:1671
 #, c-format
 msgid "Adding as %s instead"
 msgstr "Füge stattdessen als %s hinzu"
 
-#: merge-recursive.c:1525
+#: merge-recursive.c:1524
 #, c-format
 msgid "cannot read object %s"
 msgstr "kann Objekt %s nicht lesen"
 
-#: merge-recursive.c:1528
+#: merge-recursive.c:1527
 #, c-format
 msgid "object %s is not a blob"
 msgstr "Objekt %s ist kein Blob"
 
-#: merge-recursive.c:1576
+#: merge-recursive.c:1575
 msgid "modify"
 msgstr "ändern"
 
-#: merge-recursive.c:1576
+#: merge-recursive.c:1575
 msgid "modified"
 msgstr "geändert"
 
-#: merge-recursive.c:1586
+#: merge-recursive.c:1585
 msgid "content"
 msgstr "Inhalt"
 
-#: merge-recursive.c:1593
+#: merge-recursive.c:1592
 msgid "add/add"
 msgstr "hinzufügen/hinzufügen"
 
-#: merge-recursive.c:1627
+#: merge-recursive.c:1626
 #, c-format
 msgid "Skipped %s (merged same as existing)"
 msgstr "%s ausgelassen (Ergebnis des Merges existiert bereits)"
 
-#: merge-recursive.c:1641
+#: merge-recursive.c:1640
 #, c-format
 msgid "Auto-merging %s"
 msgstr "automatischer Merge von %s"
 
-#: merge-recursive.c:1645 git-submodule.sh:1150
+#: merge-recursive.c:1644 git-submodule.sh:1150
 msgid "submodule"
 msgstr "Submodul"
 
-#: merge-recursive.c:1646
+#: merge-recursive.c:1645
 #, c-format
 msgid "CONFLICT (%s): Merge conflict in %s"
 msgstr "KONFLIKT (%s): Merge-Konflikt in %s"
 
-#: merge-recursive.c:1732
+#: merge-recursive.c:1731
 #, c-format
 msgid "Removing %s"
 msgstr "Entferne %s"
 
-#: merge-recursive.c:1757
+#: merge-recursive.c:1756
 msgid "file/directory"
 msgstr "Datei/Verzeichnis"
 
-#: merge-recursive.c:1763
+#: merge-recursive.c:1762
 msgid "directory/file"
 msgstr "Verzeichnis/Datei"
 
-#: merge-recursive.c:1768
+#: merge-recursive.c:1767
 #, c-format
 msgid "CONFLICT (%s): There is a directory with name %s in %s. Adding %s as %s"
 msgstr ""
 "KONFLIKT (%s): Es existiert bereits ein Verzeichnis %s in %s. Füge %s als %s "
 "hinzu."
 
-#: merge-recursive.c:1778
+#: merge-recursive.c:1777
 #, c-format
 msgid "Adding %s"
 msgstr "Füge %s hinzu"
 
-#: merge-recursive.c:1795
+#: merge-recursive.c:1794
 msgid "Fatal merge failure, shouldn't happen."
 msgstr "Fataler Merge-Fehler. Sollte nicht passieren."
 
-#: merge-recursive.c:1814
+#: merge-recursive.c:1813
 msgid "Already up-to-date!"
 msgstr "Bereits aktuell!"
 
-#: merge-recursive.c:1823
+#: merge-recursive.c:1822
 #, c-format
 msgid "merging of trees %s and %s failed"
 msgstr "Zusammenführen der \"Tree\"-Objekte %s und %s fehlgeschlagen"
 
-#: merge-recursive.c:1853
+#: merge-recursive.c:1852
 #, c-format
 msgid "Unprocessed path??? %s"
 msgstr "unverarbeiteter Pfad??? %s"
 
-#: merge-recursive.c:1901
+#: merge-recursive.c:1900
 msgid "Merging:"
 msgstr "Merge:"
 
-#: merge-recursive.c:1914
+#: merge-recursive.c:1913
 #, c-format
 msgid "found %u common ancestor:"
 msgid_plural "found %u common ancestors:"
 msgstr[0] "%u gemeinsamen Vorgänger-Commit gefunden"
 msgstr[1] "%u gemeinsame Vorgänger-Commits gefunden"
 
-#: merge-recursive.c:1951
+#: merge-recursive.c:1950
 msgid "merge returned no commit"
 msgstr "Merge hat keinen Commit zurückgegeben"
 
-#: merge-recursive.c:2008
+#: merge-recursive.c:2007
 #, c-format
 msgid "Could not parse object '%s'"
 msgstr "Konnte Objekt '%s' nicht parsen."
 
-#: merge-recursive.c:2019 builtin/merge.c:667
+#: merge-recursive.c:2018 builtin/merge.c:645
 msgid "Unable to write index."
-msgstr "Konnte Staging-Area nicht schreiben."
+msgstr "Konnte Index nicht schreiben."
 
 #: notes-utils.c:41
 msgid "Cannot commit uninitialized/unreferenced notes tree"
 msgstr ""
 "Kann uninitialisiertes/unreferenzierte Notiz-Verzeichnis nicht committen."
 
@@ -935,13 +943,13 @@
 #. environment variable, the second %s is its value
 #: notes-utils.c:119
 #, c-format
 msgid "Bad %s value: '%s'"
 msgstr "Ungültiger %s Wert: '%s'"
 
-#: object.c:241
+#: object.c:242
 #, c-format
 msgid "unable to parse object: %s"
 msgstr "Konnte Objekt '%s' nicht parsen."
 
 #: parse-options.c:546
 msgid "..."
@@ -1036,94 +1044,139 @@
 "Vielleicht haben Sie vergessen entweder ':/' oder '.' hinzuzufügen?"
 
 #: pretty.c:968
 msgid "unable to parse --pretty format"
 msgstr "Konnte --pretty Format nicht parsen."
 
-#: progress.c:225
+#: progress.c:236
 msgid "done"
 msgstr "Fertig"
 
-#: read-cache.c:1275
+#: read-cache.c:1295
 #, c-format
 msgid ""
 "index.version set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "index.version gesetzt, aber Wert ungültig.\n"
 "Verwende Version %i"
 
-#: read-cache.c:1285
+#: read-cache.c:1305
 #, c-format
 msgid ""
 "GIT_INDEX_VERSION set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "GIT_INDEX_VERSION gesetzt, aber Wert ungültig.\n"
 "Verwende Version %i"
 
-#: remote.c:782
+#: remote.c:792
 #, c-format
 msgid "Cannot fetch both %s and %s to %s"
 msgstr "Kann 'fetch' nicht für sowohl %s als auch %s nach %s ausführen."
 
-#: remote.c:786
+#: remote.c:796
 #, c-format
 msgid "%s usually tracks %s, not %s"
 msgstr "%s folgt üblicherweise %s, nicht %s"
 
-#: remote.c:790
+#: remote.c:800
 #, c-format
 msgid "%s tracks both %s and %s"
 msgstr "%s folgt sowohl %s als auch %s"
 
-#: remote.c:798
+#: remote.c:808
 msgid "Internal error"
 msgstr "Interner Fehler"
 
-#: remote.c:1980
+#: remote.c:1723 remote.c:1766
+msgid "HEAD does not point to a branch"
+msgstr "HEAD zeigt auf keinen Branch"
+
+#: remote.c:1732
+#, c-format
+msgid "no such branch: '%s'"
+msgstr "Kein solcher Branch: '%s'"
+
+#: remote.c:1735
+#, c-format
+msgid "no upstream configured for branch '%s'"
+msgstr "Kein Upstream-Branch für Branch '%s' konfiguriert."
+
+#: remote.c:1741
+#, c-format
+msgid "upstream branch '%s' not stored as a remote-tracking branch"
+msgstr "Upstream-Branch '%s' nicht als Remote-Tracking-Branch gespeichert"
+
+#: remote.c:1756
+#, c-format
+msgid "push destination '%s' on remote '%s' has no local tracking branch"
+msgstr ""
+"Ziel für \"push\" '%s' auf Remote-Repository '%s' hat keinen lokal gefolgten "
+"Branch"
+
+#: remote.c:1771
+#, c-format
+msgid "branch '%s' has no remote for pushing"
+msgstr "Branch '%s' hat keinen Upstream-Branch gesetzt"
+
+#: remote.c:1782
+#, c-format
+msgid "push refspecs for '%s' do not include '%s'"
+msgstr "Push-Refspecs für '%s' beinhalten nicht '%s'"
+
+#: remote.c:1795
+msgid "push has no destination (push.default is 'nothing')"
+msgstr "kein Ziel für \"push\" (push.default ist 'nothing')"
+
+#: remote.c:1817
+msgid "cannot resolve 'simple' push to a single destination"
+msgstr "kann einzelnes Ziel für \"push\" im Modus 'simple' nicht auflösen"
+
+#: remote.c:2124
 #, c-format
 msgid "Your branch is based on '%s', but the upstream is gone.\n"
-msgstr "Ihr Branch basiert auf '%s', aber Upstream-Branch wurde entfernt.\n"
+msgstr ""
+"Ihr Branch basiert auf '%s', aber der Upstream-Branch wurde entfernt.\n"
 
-#: remote.c:1984
+#: remote.c:2128
 msgid "  (use \"git branch --unset-upstream\" to fixup)\n"
 msgstr "  (benutzen Sie \"git branch --unset-upstream\" zum Beheben)\n"
 
-#: remote.c:1987
+#: remote.c:2131
 #, c-format
 msgid "Your branch is up-to-date with '%s'.\n"
 msgstr "Ihr Branch ist auf dem selben Stand wie '%s'.\n"
 
-#: remote.c:1991
+#: remote.c:2135
 #, c-format
 msgid "Your branch is ahead of '%s' by %d commit.\n"
 msgid_plural "Your branch is ahead of '%s' by %d commits.\n"
 msgstr[0] "Ihr Branch ist vor '%s' um %d Commit.\n"
 msgstr[1] "Ihr Branch ist vor '%s' um %d Commits.\n"
 
-#: remote.c:1997
+#: remote.c:2141
 msgid "  (use \"git push\" to publish your local commits)\n"
 msgstr "  (benutzen Sie \"git push\", um lokale Commits zu publizieren)\n"
 
-#: remote.c:2000
+#: remote.c:2144
 #, c-format
 msgid "Your branch is behind '%s' by %d commit, and can be fast-forwarded.\n"
 msgid_plural ""
 "Your branch is behind '%s' by %d commits, and can be fast-forwarded.\n"
 msgstr[0] ""
 "Ihr Branch ist zu '%s' um %d Commit hinterher, und kann vorgespult werden.\n"
 msgstr[1] ""
 "Ihr Branch ist zu '%s' um %d Commits hinterher, und kann vorgespult werden.\n"
 
-#: remote.c:2008
+#: remote.c:2152
 msgid "  (use \"git pull\" to update your local branch)\n"
 msgstr ""
 "  (benutzen Sie \"git pull\", um Ihren lokalen Branch zu aktualisieren)\n"
 
-#: remote.c:2011
+#: remote.c:2155
 #, c-format
 msgid ""
 "Your branch and '%s' have diverged,\n"
 "and have %d and %d different commit each, respectively.\n"
 msgid_plural ""
 "Your branch and '%s' have diverged,\n"
@@ -1132,19 +1185,19 @@
 "Ihr Branch und '%s' sind divergiert,\n"
 "und haben jeweils %d und %d unterschiedliche Commits.\n"
 msgstr[1] ""
 "Ihr Branch und '%s' sind divergiert,\n"
 "und haben jeweils %d und %d unterschiedliche Commits.\n"
 
-#: remote.c:2021
+#: remote.c:2165
 msgid "  (use \"git pull\" to merge the remote branch into yours)\n"
 msgstr ""
 "  (benutzen Sie \"git pull\", um Ihren Branch mit dem Remote-Branch "
 "zusammenzuführen)\n"
 
-#: revision.c:2348
+#: revision.c:2366
 msgid "--first-parent is incompatible with --bisect"
 msgstr "Die Optionen --first-parent und --bisect sind inkompatibel."
 
 #: run-command.c:83
 msgid "open /dev/null failed"
 msgstr "Öffnen von /dev/null fehlgeschlagen"
@@ -1155,30 +1208,29 @@
 msgstr "dup2(%d,%d) fehlgeschlagen"
 
 #: send-pack.c:272
 msgid "failed to sign the push certificate"
 msgstr "Fehler beim Signieren des \"push\"-Zertifikates"
 
-#: send-pack.c:356
+#: send-pack.c:378
 msgid "the receiving end does not support --signed push"
 msgstr ""
 "die Gegenseite unterstützt keinen signierten Versand (\"--signed push\")"
 
-#: send-pack.c:366
+#: send-pack.c:389
 msgid "the receiving end does not support --atomic push"
-msgstr ""
-"die Gegenseite unterstützt keinen atomaren Versand (\"--atomic push\")"
+msgstr "die Gegenseite unterstützt keinen atomaren Versand (\"--atomic push\")"
 
-#: sequencer.c:172 builtin/merge.c:782 builtin/merge.c:893 builtin/merge.c:995
-#: builtin/merge.c:1005
+#: sequencer.c:172 builtin/merge.c:760 builtin/merge.c:871 builtin/merge.c:973
+#: builtin/merge.c:983
 #, c-format
 msgid "Could not open '%s' for writing"
 msgstr "Konnte '%s' nicht zum Schreiben öffnen."
 
-#: sequencer.c:174 builtin/merge.c:344 builtin/merge.c:785 builtin/merge.c:997
-#: builtin/merge.c:1010
+#: sequencer.c:174 builtin/merge.c:344 builtin/merge.c:763 builtin/merge.c:975
+#: builtin/merge.c:988
 #, c-format
 msgid "Could not write to '%s'"
 msgstr "Konnte nicht nach '%s' schreiben."
 
 #: sequencer.c:195
 msgid ""
@@ -1223,13 +1275,13 @@
 "Tragen Sie Ihre Änderungen ein oder benutzen Sie \"stash\", um fortzufahren."
 
 #. TRANSLATORS: %s will be "revert" or "cherry-pick"
 #: sequencer.c:321
 #, c-format
 msgid "%s: Unable to write new index file"
-msgstr "%s: Konnte neue Staging-Area-Datei nicht schreiben"
+msgstr "%s: Konnte neue Index-Datei nicht schreiben"
 
 #: sequencer.c:339
 msgid "Could not resolve HEAD commit\n"
 msgstr "Konnte Commit von HEAD nicht auflösen\n"
 
 #: sequencer.c:359
@@ -1245,13 +1297,13 @@
 #, c-format
 msgid "Could not parse parent commit %s\n"
 msgstr "Konnte Eltern-Commit %s nicht parsen\n"
 
 #: sequencer.c:482
 msgid "Your index file is unmerged."
-msgstr "Ihre Staging-Area-Datei ist nicht zusammengeführt."
+msgstr "Ihre Index-Datei ist nicht zusammengeführt."
 
 #: sequencer.c:501
 #, c-format
 msgid "Commit %s is a merge but no -m option was given."
 msgstr "Commit %s ist ein Merge, aber die Option -m wurde nicht angegeben."
 
@@ -1291,18 +1343,18 @@
 msgid "empty commit set passed"
 msgstr "leere Menge von Commits übergeben"
 
 #: sequencer.c:661
 #, c-format
 msgid "git %s: failed to read the index"
-msgstr "git %s: Fehler beim Lesen der Staging-Area"
+msgstr "git %s: Fehler beim Lesen des Index"
 
 #: sequencer.c:665
 #, c-format
 msgid "git %s: failed to refresh the index"
-msgstr "git %s: Fehler beim Aktualisieren der Staging-Area"
+msgstr "git %s: Fehler beim Aktualisieren des Index"
 
 #: sequencer.c:725
 #, c-format
 msgid "Cannot %s during a %s"
 msgstr "Kann %s nicht während eines %s durchführen"
 
@@ -1372,13 +1424,13 @@
 msgstr "kann HEAD nicht auflösen"
 
 #: sequencer.c:886
 msgid "cannot abort from a branch yet to be born"
 msgstr "kann nicht abbrechen: bin auf einem Branch, der noch geboren wird"
 
-#: sequencer.c:908 builtin/apply.c:4288
+#: sequencer.c:908 builtin/apply.c:4291
 #, c-format
 msgid "cannot open %s: %s"
 msgstr "Kann %s nicht öffnen: %s"
 
 #: sequencer.c:911
 #, c-format
@@ -1414,13 +1466,18 @@
 msgstr "Kann nicht als allerersten Commit einen Revert ausführen."
 
 #: sequencer.c:1124
 msgid "Can't cherry-pick into empty head"
 msgstr "Kann nicht als allerersten Commit einen Cherry-Pick ausführen."
 
-#: sha1_name.c:440
+#: setup.c:243
+#, c-format
+msgid "failed to read %s"
+msgstr "Fehler beim Lesen von %s"
+
+#: sha1_name.c:453
 msgid ""
 "Git normally never creates a ref that ends with 40 hex characters\n"
 "because it will be ignored when you just specify 40-hex. These refs\n"
 "may be created by mistake. For example,\n"
 "\n"
 "  git checkout -b $br $(git rev-parse ...)\n"
@@ -1439,31 +1496,12 @@
 "wobei \"$br\" leer ist und eine 40-Hex-Referenz erzeugt\n"
 "wurde. Bitte prüfen Sie diese Referenzen und löschen\n"
 "Sie sie gegebenenfalls. Unterdrücken Sie diese Meldung\n"
 "indem Sie \"git config advice.objectNameWarning false\"\n"
 "ausführen."
 
-#: sha1_name.c:1068
-msgid "HEAD does not point to a branch"
-msgstr "HEAD zeigt auf keinen Branch"
-
-#: sha1_name.c:1071
-#, c-format
-msgid "No such branch: '%s'"
-msgstr "Kein solcher Branch '%s'"
-
-#: sha1_name.c:1073
-#, c-format
-msgid "No upstream configured for branch '%s'"
-msgstr "Kein Upstream-Branch für Branch '%s' konfiguriert."
-
-#: sha1_name.c:1077
-#, c-format
-msgid "Upstream branch '%s' not stored as a remote-tracking branch"
-msgstr "Upstream-Branch '%s' ist nicht als Remote-Tracking-Branch gespeichert"
-
 #: submodule.c:64 submodule.c:98
 msgid "Cannot change unmerged .gitmodules, resolve merge conflicts first"
 msgstr ""
 "Kann nicht zusammengeführte .gitmodules-Datei nicht ändern, lösen\n"
 "Sie zuerst die Konflikte auf"
 
@@ -1483,18 +1521,13 @@
 msgstr "Konnte Eintrag '%s' nicht aus .gitmodules entfernen"
 
 #: submodule.c:120
 msgid "staging updated .gitmodules failed"
 msgstr "Konnte aktualisierte .gitmodules-Datei nicht zum Commit vormerken"
 
-#: submodule.c:1109 builtin/init-db.c:371
-#, c-format
-msgid "Could not create git link %s"
-msgstr "Konnte git-Verweis %s nicht erstellen"
-
-#: submodule.c:1120
+#: submodule.c:1115
 #, c-format
 msgid "Could not set core.worktree in %s"
 msgstr "Konnte core.worktree in '%s' nicht setzen."
 
 #: trailer.c:491 trailer.c:495 trailer.c:499 trailer.c:553 trailer.c:557
 #: trailer.c:561
@@ -1518,13 +1551,13 @@
 msgstr "Konnte Eingabe-Datei '%s' nicht lesen"
 
 #: trailer.c:704
 msgid "could not read from stdin"
 msgstr "konnte nicht von der Standard-Eingabe lesen"
 
-#: unpack-trees.c:202
+#: unpack-trees.c:203
 msgid "Checking out files"
 msgstr "Checke Dateien aus"
 
 #: urlmatch.c:120
 msgid "invalid URL scheme name or missing '://' suffix"
 msgstr "Ungültiges URL-Schema oder Suffix '://' fehlt"
@@ -1574,12 +1607,27 @@
 msgstr "kein solcher Benutzer"
 
 #: wrapper.c:564
 msgid "unable to get current working directory"
 msgstr "Konnte aktuelles Arbeitsverzeichnis nicht bekommen."
 
+#: wrapper.c:575
+#, c-format
+msgid "could not open %s for writing"
+msgstr "Konnte '%s' nicht zum Schreiben öffnen."
+
+#: wrapper.c:587
+#, c-format
+msgid "could not write to %s"
+msgstr "Konnte nicht nach '%s' schreiben."
+
+#: wrapper.c:593
+#, c-format
+msgid "could not close %s"
+msgstr "Konnte '%s' nicht schließen."
+
 #: wt-status.c:150
 msgid "Unmerged paths:"
 msgstr "Nicht zusammengeführte Pfade:"
 
 #: wt-status.c:177 wt-status.c:204
 #, c-format
@@ -1607,17 +1655,17 @@
 
 #: wt-status.c:187
 msgid "  (use \"git rm <file>...\" to mark resolution)"
 msgstr ""
 "  (benutzen Sie \"git add/rm <Datei>...\", um die Auflösung zu markieren)"
 
-#: wt-status.c:198 wt-status.c:878
+#: wt-status.c:198 wt-status.c:881
 msgid "Changes to be committed:"
 msgstr "zum Commit vorgemerkte Änderungen:"
 
-#: wt-status.c:216 wt-status.c:887
+#: wt-status.c:216 wt-status.c:890
 msgid "Changes not staged for commit:"
 msgstr "Änderungen, die nicht zum Commit vorgemerkt sind:"
 
 #: wt-status.c:220
 msgid "  (use \"git add <file>...\" to update what will be committed)"
 msgstr ""
@@ -1729,318 +1777,318 @@
 
 #: wt-status.c:391
 #, c-format
 msgid "bug: unhandled diff status %c"
 msgstr "Fehler: unbehandelter Differenz-Status %c"
 
-#: wt-status.c:753
+#: wt-status.c:755
 msgid "Submodules changed but not updated:"
 msgstr "Submodule geändert, aber nicht aktualisiert:"
 
-#: wt-status.c:755
+#: wt-status.c:757
 msgid "Submodule changes to be committed:"
 msgstr "Änderungen in Submodul zum Committen:"
 
-#: wt-status.c:835
+#: wt-status.c:838
 msgid ""
 "Do not touch the line above.\n"
 "Everything below will be removed."
 msgstr ""
 "Ändern Sie nicht die obige Zeile.\n"
 "Alles unterhalb von ihr wird entfernt."
 
-#: wt-status.c:946
+#: wt-status.c:949
 msgid "You have unmerged paths."
 msgstr "Sie haben nicht zusammengeführte Pfade."
 
-#: wt-status.c:949
+#: wt-status.c:952
 msgid "  (fix conflicts and run \"git commit\")"
 msgstr " (beheben Sie die Konflikte und führen Sie \"git commit\" aus)"
 
-#: wt-status.c:952
+#: wt-status.c:955
 msgid "All conflicts fixed but you are still merging."
 msgstr "Alle Konflikte sind behoben, aber Sie sind immer noch beim Merge."
 
-#: wt-status.c:955
+#: wt-status.c:958
 msgid "  (use \"git commit\" to conclude merge)"
 msgstr "  (benutzen Sie \"git commit\", um den Merge abzuschließen)"
 
-#: wt-status.c:965
+#: wt-status.c:968
 msgid "You are in the middle of an am session."
 msgstr "Eine \"am\"-Sitzung ist im Gange."
 
-#: wt-status.c:968
+#: wt-status.c:971
 msgid "The current patch is empty."
 msgstr "Der aktuelle Patch ist leer."
 
-#: wt-status.c:972
+#: wt-status.c:975
 msgid "  (fix conflicts and then run \"git am --continue\")"
 msgstr ""
 "  (beheben Sie die Konflikte und führen Sie dann \"git am --continue\" aus)"
 
-#: wt-status.c:974
+#: wt-status.c:977
 msgid "  (use \"git am --skip\" to skip this patch)"
 msgstr "  (benutzen Sie \"git am --skip\", um diesen Patch auszulassen)"
 
-#: wt-status.c:976
+#: wt-status.c:979
 msgid "  (use \"git am --abort\" to restore the original branch)"
 msgstr ""
 "  (benutzen Sie \"git am --abort\", um den ursprünglichen Branch "
 "wiederherzustellen)"
 
-#: wt-status.c:1036 wt-status.c:1053
+#: wt-status.c:1039 wt-status.c:1056
 #, c-format
 msgid "You are currently rebasing branch '%s' on '%s'."
 msgstr "Sie sind gerade beim Rebase von Branch '%s' auf '%s'."
 
-#: wt-status.c:1041 wt-status.c:1058
+#: wt-status.c:1044 wt-status.c:1061
 msgid "You are currently rebasing."
 msgstr "Sie sind gerade beim Rebase."
 
-#: wt-status.c:1044
+#: wt-status.c:1047
 msgid "  (fix conflicts and then run \"git rebase --continue\")"
 msgstr ""
 "  (beheben Sie die Konflikte und führen Sie dann \"git rebase --continue\" "
 "aus)"
 
-#: wt-status.c:1046
+#: wt-status.c:1049
 msgid "  (use \"git rebase --skip\" to skip this patch)"
 msgstr "  (benutzen Sie \"git rebase --skip\", um diesen Patch auszulassen)"
 
-#: wt-status.c:1048
+#: wt-status.c:1051
 msgid "  (use \"git rebase --abort\" to check out the original branch)"
 msgstr ""
 "  (benutzen Sie \"git rebase --abort\", um den ursprünglichen Branch "
 "auszuchecken)"
 
-#: wt-status.c:1061
+#: wt-status.c:1064
 msgid "  (all conflicts fixed: run \"git rebase --continue\")"
 msgstr "  (alle Konflikte behoben: führen Sie \"git rebase --continue\" aus)"
 
-#: wt-status.c:1065
+#: wt-status.c:1068
 #, c-format
 msgid ""
 "You are currently splitting a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "Sie teilen gerade einen Commit auf, während ein Rebase von Branch '%s' auf "
 "'%s' im Gange ist."
 
-#: wt-status.c:1070
+#: wt-status.c:1073
 msgid "You are currently splitting a commit during a rebase."
 msgstr "Sie teilen gerade einen Commit während eines Rebase auf."
 
-#: wt-status.c:1073
+#: wt-status.c:1076
 msgid "  (Once your working directory is clean, run \"git rebase --continue\")"
 msgstr ""
 "  (Sobald Ihr Arbeitsverzeichnis unverändert ist, führen Sie \"git rebase --"
 "continue\" aus)"
 
-#: wt-status.c:1077
+#: wt-status.c:1080
 #, c-format
 msgid "You are currently editing a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "Sie editieren gerade einen Commit während eines Rebase von Branch '%s' auf "
 "'%s'."
 
-#: wt-status.c:1082
+#: wt-status.c:1085
 msgid "You are currently editing a commit during a rebase."
 msgstr "Sie editieren gerade einen Commit während eines Rebase."
 
-#: wt-status.c:1085
+#: wt-status.c:1088
 msgid "  (use \"git commit --amend\" to amend the current commit)"
 msgstr ""
 "  (benutzen Sie \"git commit --amend\", um den aktuellen Commit "
 "nachzubessern)"
 
-#: wt-status.c:1087
+#: wt-status.c:1090
 msgid ""
 "  (use \"git rebase --continue\" once you are satisfied with your changes)"
 msgstr ""
 "  (benutzen Sie \"git rebase --continue\" sobald Ihre Änderungen "
 "abgeschlossen sind)"
 
-#: wt-status.c:1097
+#: wt-status.c:1100
 #, c-format
 msgid "You are currently cherry-picking commit %s."
 msgstr "Sie führen gerade \"cherry-pick\" von Commit %s aus."
 
-#: wt-status.c:1102
+#: wt-status.c:1105
 msgid "  (fix conflicts and run \"git cherry-pick --continue\")"
 msgstr ""
 "  (beheben Sie die Konflikte und führen Sie dann \"git cherry-pick --continue"
 "\" aus)"
 
-#: wt-status.c:1105
+#: wt-status.c:1108
 msgid "  (all conflicts fixed: run \"git cherry-pick --continue\")"
 msgstr ""
 "  (alle Konflikte behoben: führen Sie \"git cherry-pick --continue\" aus)"
 
-#: wt-status.c:1107
+#: wt-status.c:1110
 msgid "  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)"
 msgstr ""
 "  (benutzen Sie \"git cherry-pick --abort\", um die Cherry-Pick-Operation "
 "abzubrechen)"
 
-#: wt-status.c:1116
+#: wt-status.c:1119
 #, c-format
 msgid "You are currently reverting commit %s."
 msgstr "Sie sind gerade an einem Revert von Commit '%s'."
 
-#: wt-status.c:1121
+#: wt-status.c:1124
 msgid "  (fix conflicts and run \"git revert --continue\")"
 msgstr ""
 "  (beheben Sie die Konflikte und führen Sie dann \"git revert --continue\" "
 "aus)"
 
-#: wt-status.c:1124
+#: wt-status.c:1127
 msgid "  (all conflicts fixed: run \"git revert --continue\")"
 msgstr "  (alle Konflikte behoben: führen Sie \"git revert --continue\" aus)"
 
-#: wt-status.c:1126
+#: wt-status.c:1129
 msgid "  (use \"git revert --abort\" to cancel the revert operation)"
 msgstr ""
 "  (benutzen Sie \"git revert --abort\", um die Revert-Operation abzubrechen)"
 
-#: wt-status.c:1137
+#: wt-status.c:1140
 #, c-format
 msgid "You are currently bisecting, started from branch '%s'."
 msgstr "Sie sind gerade bei einer binären Suche, gestartet von Branch '%s'."
 
-#: wt-status.c:1141
+#: wt-status.c:1144
 msgid "You are currently bisecting."
 msgstr "Sie sind gerade bei einer binären Suche."
 
-#: wt-status.c:1144
+#: wt-status.c:1147
 msgid "  (use \"git bisect reset\" to get back to the original branch)"
 msgstr ""
 "  (benutzen Sie \"git bisect reset\", um zum ursprünglichen Branch "
 "zurückzukehren)"
 
-#: wt-status.c:1321
+#: wt-status.c:1324
 msgid "On branch "
 msgstr "Auf Branch "
 
-#: wt-status.c:1328
+#: wt-status.c:1331
 msgid "rebase in progress; onto "
 msgstr "Rebase im Gange; auf "
 
-#: wt-status.c:1333
+#: wt-status.c:1336
 msgid "HEAD detached at "
 msgstr "HEAD losgelöst bei "
 
-#: wt-status.c:1335
+#: wt-status.c:1338
 msgid "HEAD detached from "
 msgstr "HEAD losgelöst von "
 
-#: wt-status.c:1338
+#: wt-status.c:1341
 msgid "Not currently on any branch."
 msgstr "Im Moment auf keinem Branch."
 
-#: wt-status.c:1355
+#: wt-status.c:1358
 msgid "Initial commit"
 msgstr "Initialer Commit"
 
-#: wt-status.c:1369
+#: wt-status.c:1372
 msgid "Untracked files"
 msgstr "Unversionierte Dateien"
 
-#: wt-status.c:1371
+#: wt-status.c:1374
 msgid "Ignored files"
 msgstr "Ignorierte Dateien"
 
-#: wt-status.c:1375
+#: wt-status.c:1378
 #, c-format
 msgid ""
 "It took %.2f seconds to enumerate untracked files. 'status -uno'\n"
 "may speed it up, but you have to be careful not to forget to add\n"
 "new files yourself (see 'git help status')."
 msgstr ""
 "Es dauerte %.2f Sekunden die unversionierten Dateien zu bestimmen.\n"
 "'status -uno' könnte das beschleunigen, aber Sie müssen darauf achten,\n"
 "neue Dateien selbstständig hinzuzufügen (siehe 'git help status')."
 
-#: wt-status.c:1381
+#: wt-status.c:1384
 #, c-format
 msgid "Untracked files not listed%s"
 msgstr "Unversionierte Dateien nicht aufgelistet%s"
 
-#: wt-status.c:1383
+#: wt-status.c:1386
 msgid " (use -u option to show untracked files)"
 msgstr " (benutzen Sie die Option -u, um unversionierte Dateien anzuzeigen)"
 
-#: wt-status.c:1389
+#: wt-status.c:1392
 msgid "No changes"
 msgstr "Keine Änderungen"
 
-#: wt-status.c:1394
+#: wt-status.c:1397
 #, c-format
 msgid "no changes added to commit (use \"git add\" and/or \"git commit -a\")\n"
 msgstr ""
 "keine Änderungen zum Commit vorgemerkt (benutzen Sie \"git add\" und/oder "
 "\"git commit -a\")\n"
 
-#: wt-status.c:1397
+#: wt-status.c:1400
 #, c-format
 msgid "no changes added to commit\n"
 msgstr "keine Änderungen zum Commit vorgemerkt\n"
 
-#: wt-status.c:1400
+#: wt-status.c:1403
 #, c-format
 msgid ""
 "nothing added to commit but untracked files present (use \"git add\" to "
 "track)\n"
 msgstr ""
 "nichts zum Commit vorgemerkt, aber es gibt unversionierte Dateien (benutzen "
 "Sie \"git add\" zum Versionieren)\n"
 
-#: wt-status.c:1403
+#: wt-status.c:1406
 #, c-format
 msgid "nothing added to commit but untracked files present\n"
 msgstr "nichts zum Commit vorgemerkt, aber es gibt unversionierte Dateien\n"
 
-#: wt-status.c:1406
+#: wt-status.c:1409
 #, c-format
 msgid "nothing to commit (create/copy files and use \"git add\" to track)\n"
 msgstr ""
 "nichts zu committen (Erstellen/Kopieren Sie Dateien und benutzen Sie \"git "
 "add\" zum Versionieren)\n"
 
-#: wt-status.c:1409 wt-status.c:1414
+#: wt-status.c:1412 wt-status.c:1417
 #, c-format
 msgid "nothing to commit\n"
 msgstr "nichts zu committen\n"
 
-#: wt-status.c:1412
+#: wt-status.c:1415
 #, c-format
 msgid "nothing to commit (use -u to show untracked files)\n"
 msgstr ""
 "nichts zu committen (benutzen Sie die Option -u, um unversionierte Dateien "
 "anzuzeigen)\n"
 
-#: wt-status.c:1416
+#: wt-status.c:1419
 #, c-format
 msgid "nothing to commit, working directory clean\n"
 msgstr "nichts zu committen, Arbeitsverzeichnis unverändert\n"
 
-#: wt-status.c:1525
+#: wt-status.c:1528
 msgid "HEAD (no branch)"
 msgstr "HEAD (kein Branch)"
 
-#: wt-status.c:1531
+#: wt-status.c:1534
 msgid "Initial commit on "
 msgstr "Initialer Commit auf "
 
-#: wt-status.c:1563
+#: wt-status.c:1561
 msgid "gone"
 msgstr "entfernt"
 
-#: wt-status.c:1565 wt-status.c:1573
+#: wt-status.c:1563 wt-status.c:1571
 msgid "behind "
 msgstr "hinterher "
 
-#: compat/precompose_utf8.c:55 builtin/clone.c:360
+#: compat/precompose_utf8.c:55 builtin/clone.c:345
 #, c-format
 msgid "failed to unlink '%s'"
 msgstr "Konnte '%s' nicht entfernen."
 
 #: builtin/add.c:22
 msgid "git add [<options>] [--] <pathspec>..."
@@ -2062,140 +2110,144 @@
 
 #: builtin/add.c:134
 msgid "Unstaged changes after refreshing the index:"
 msgstr ""
 "Nicht zum Commit vorgemerkte Änderungen nach Aktualisierung der Staging-Area:"
 
-#: builtin/add.c:194 builtin/rev-parse.c:785
+#: builtin/add.c:194 builtin/rev-parse.c:796
 msgid "Could not read the index"
-msgstr "Konnte die Staging-Area nicht lesen"
+msgstr "Konnte den Index nicht lesen"
 
 #: builtin/add.c:205
 #, c-format
 msgid "Could not open '%s' for writing."
 msgstr "Konnte '%s' nicht zum Schreiben öffnen."
 
 #: builtin/add.c:209
 msgid "Could not write patch"
 msgstr "Konnte Patch nicht schreiben"
 
-#: builtin/add.c:214
+#: builtin/add.c:212
+msgid "editing patch failed"
+msgstr "Bearbeitung des Patches fehlgeschlagen"
+
+#: builtin/add.c:215
 #, c-format
 msgid "Could not stat '%s'"
 msgstr "Konnte Verzeichnis '%s' nicht lesen"
 
-#: builtin/add.c:216
+#: builtin/add.c:217
 msgid "Empty patch. Aborted."
 msgstr "Leerer Patch. Abgebrochen."
 
-#: builtin/add.c:221
+#: builtin/add.c:222
 #, c-format
 msgid "Could not apply '%s'"
 msgstr "Konnte '%s' nicht anwenden."
 
-#: builtin/add.c:231
+#: builtin/add.c:232
 msgid "The following paths are ignored by one of your .gitignore files:\n"
 msgstr ""
 "Die folgenden Pfade werden durch eine Ihrer \".gitignore\" Dateien "
 "ignoriert:\n"
 
-#: builtin/add.c:248 builtin/clean.c:876 builtin/fetch.c:107 builtin/mv.c:110
-#: builtin/prune-packed.c:55 builtin/push.c:508 builtin/remote.c:1372
-#: builtin/rm.c:269
+#: builtin/add.c:249 builtin/clean.c:874 builtin/fetch.c:107 builtin/mv.c:110
+#: builtin/prune-packed.c:55 builtin/push.c:508 builtin/remote.c:1369
+#: builtin/rm.c:268
 msgid "dry run"
 msgstr "Probelauf"
 
-#: builtin/add.c:249 builtin/apply.c:4577 builtin/check-ignore.c:19
-#: builtin/commit.c:1322 builtin/count-objects.c:63 builtin/fsck.c:608
+#: builtin/add.c:250 builtin/apply.c:4580 builtin/check-ignore.c:19
+#: builtin/commit.c:1322 builtin/count-objects.c:63 builtin/fsck.c:616
 #: builtin/log.c:1617 builtin/mv.c:109 builtin/read-tree.c:114
 msgid "be verbose"
 msgstr "erweiterte Ausgaben"
 
-#: builtin/add.c:251
+#: builtin/add.c:252
 msgid "interactive picking"
 msgstr "interaktives Auswählen"
 
-#: builtin/add.c:252 builtin/checkout.c:1126 builtin/reset.c:286
+#: builtin/add.c:253 builtin/checkout.c:1221 builtin/reset.c:286
 msgid "select hunks interactively"
 msgstr "Blöcke interaktiv auswählen"
 
-#: builtin/add.c:253
+#: builtin/add.c:254
 msgid "edit current diff and apply"
 msgstr "aktuelle Unterschiede editieren und anwenden"
 
-#: builtin/add.c:254
+#: builtin/add.c:255
 msgid "allow adding otherwise ignored files"
 msgstr "das Hinzufügen andernfalls ignorierter Dateien erlauben"
 
-#: builtin/add.c:255
+#: builtin/add.c:256
 msgid "update tracked files"
 msgstr "versionierte Dateien aktualisieren"
 
-#: builtin/add.c:256
+#: builtin/add.c:257
 msgid "record only the fact that the path will be added later"
 msgstr "nur speichern, dass der Pfad später hinzugefügt werden soll"
 
-#: builtin/add.c:257
+#: builtin/add.c:258
 msgid "add changes from all tracked and untracked files"
 msgstr ""
 "Änderungen von allen versionierten und unversionierten Dateien hinzufügen"
 
-#: builtin/add.c:260
+#: builtin/add.c:261
 msgid "ignore paths removed in the working tree (same as --no-all)"
 msgstr "gelöschte Pfade im Arbeitsverzeichnis ignorieren (genau wie --no-all)"
 
-#: builtin/add.c:262
+#: builtin/add.c:263
 msgid "don't add, only refresh the index"
-msgstr "nichts hinzufügen, nur die Staging-Area aktualisieren"
+msgstr "nichts hinzufügen, nur den Index aktualisieren"
 
-#: builtin/add.c:263
+#: builtin/add.c:264
 msgid "just skip files which cannot be added because of errors"
 msgstr ""
 "Dateien überspringen, die aufgrund von Fehlern nicht hinzugefügt werden "
 "konnten"
 
-#: builtin/add.c:264
+#: builtin/add.c:265
 msgid "check if - even missing - files are ignored in dry run"
 msgstr "prüfen ob - auch fehlende - Dateien im Probelauf ignoriert werden"
 
-#: builtin/add.c:286
+#: builtin/add.c:287
 #, c-format
 msgid "Use -f if you really want to add them.\n"
 msgstr "Verwenden Sie -f wenn Sie diese wirklich hinzufügen möchten.\n"
 
-#: builtin/add.c:293
+#: builtin/add.c:294
 msgid "adding files failed"
 msgstr "Hinzufügen von Dateien fehlgeschlagen"
 
-#: builtin/add.c:329
+#: builtin/add.c:330
 msgid "-A and -u are mutually incompatible"
 msgstr "Die Optionen -A und -u sind zueinander inkompatibel."
 
-#: builtin/add.c:336
+#: builtin/add.c:337
 msgid "Option --ignore-missing can only be used together with --dry-run"
 msgstr ""
 "Die Option --ignore-missing kann nur zusammen mit --dry-run verwendet werden."
 
-#: builtin/add.c:357
+#: builtin/add.c:358
 #, c-format
 msgid "Nothing specified, nothing added.\n"
 msgstr "Nichts spezifiziert, nichts hinzugefügt.\n"
 
-#: builtin/add.c:358
+#: builtin/add.c:359
 #, c-format
 msgid "Maybe you wanted to say 'git add .'?\n"
 msgstr "Meinten Sie vielleicht 'git add .'?\n"
 
-#: builtin/add.c:363 builtin/check-ignore.c:172 builtin/clean.c:920
-#: builtin/commit.c:335 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:299
+#: builtin/add.c:364 builtin/check-ignore.c:172 builtin/clean.c:918
+#: builtin/commit.c:335 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:298
 msgid "index file corrupt"
-msgstr "Staging-Area-Datei beschädigt"
+msgstr "Index-Datei beschädigt"
 
-#: builtin/add.c:446 builtin/apply.c:4675 builtin/mv.c:279 builtin/rm.c:431
+#: builtin/add.c:447 builtin/apply.c:4678 builtin/mv.c:279 builtin/rm.c:430
 msgid "Unable to write new index file"
-msgstr "Konnte neue Staging-Area-Datei nicht schreiben."
+msgstr "Konnte neue Index-Datei nicht schreiben."
 
 #: builtin/apply.c:59
 msgid "git apply [<options>] [<patch>...]"
 msgstr "git apply [<Optionen>] [<Patch>...]"
 
 #: builtin/apply.c:112
@@ -2269,441 +2321,440 @@
 "Dem Kopfbereich von \"git diff\" fehlen Informationen zum Dateinamen, wenn "
 "%d vorangestellter Teil des Pfades entfernt wird (Zeile %d)"
 msgstr[1] ""
 "Dem Kopfbereich von \"git diff\" fehlen Informationen zum Dateinamen, wenn "
 "%d vorangestellte Teile des Pfades entfernt werden (Zeile %d)"
 
-#: builtin/apply.c:1656
+#: builtin/apply.c:1659
 msgid "new file depends on old contents"
 msgstr "neue Datei hängt von alten Inhalten ab"
 
-#: builtin/apply.c:1658
+#: builtin/apply.c:1661
 msgid "deleted file still has contents"
 msgstr "entfernte Datei hat noch Inhalte"
 
-#: builtin/apply.c:1684
+#: builtin/apply.c:1687
 #, c-format
 msgid "corrupt patch at line %d"
 msgstr "fehlerhafter Patch bei Zeile %d"
 
-#: builtin/apply.c:1720
+#: builtin/apply.c:1723
 #, c-format
 msgid "new file %s depends on old contents"
 msgstr "neue Datei %s hängt von alten Inhalten ab"
 
-#: builtin/apply.c:1722
+#: builtin/apply.c:1725
 #, c-format
 msgid "deleted file %s still has contents"
 msgstr "entfernte Datei %s hat noch Inhalte"
 
-#: builtin/apply.c:1725
+#: builtin/apply.c:1728
 #, c-format
 msgid "** warning: file %s becomes empty but is not deleted"
 msgstr "** Warnung: Datei %s wird leer, aber nicht entfernt."
 
-#: builtin/apply.c:1871
+#: builtin/apply.c:1874
 #, c-format
 msgid "corrupt binary patch at line %d: %.*s"
 msgstr "fehlerhafter Binär-Patch bei Zeile %d: %.*s"
 
-#: builtin/apply.c:1900
+#: builtin/apply.c:1903
 #, c-format
 msgid "unrecognized binary patch at line %d"
 msgstr "nicht erkannter Binär-Patch bei Zeile %d"
 
-#: builtin/apply.c:2051
+#: builtin/apply.c:2054
 #, c-format
 msgid "patch with only garbage at line %d"
 msgstr "Patch mit nutzlosen Informationen bei Zeile %d"
 
-#: builtin/apply.c:2141
+#: builtin/apply.c:2144
 #, c-format
 msgid "unable to read symlink %s"
 msgstr "konnte symbolische Verknüpfung %s nicht lesen"
 
-#: builtin/apply.c:2145
+#: builtin/apply.c:2148
 #, c-format
 msgid "unable to open or read %s"
 msgstr "konnte %s nicht öffnen oder lesen"
 
-#: builtin/apply.c:2778
+#: builtin/apply.c:2781
 #, c-format
 msgid "invalid start of line: '%c'"
 msgstr "Ungültiger Zeilenanfang: '%c'"
 
-#: builtin/apply.c:2897
+#: builtin/apply.c:2900
 #, c-format
 msgid "Hunk #%d succeeded at %d (offset %d line)."
 msgid_plural "Hunk #%d succeeded at %d (offset %d lines)."
 msgstr[0] "Patch-Bereich #%d erfolgreich angewendet bei %d (%d Zeile versetzt)"
 msgstr[1] ""
 "Patch-Bereich #%d erfolgreich angewendet bei %d (%d Zeilen versetzt)"
 
-#: builtin/apply.c:2909
+#: builtin/apply.c:2912
 #, c-format
 msgid "Context reduced to (%ld/%ld) to apply fragment at %d"
 msgstr "Kontext reduziert zu (%ld/%ld), um Patch-Bereich bei %d anzuwenden"
 
-#: builtin/apply.c:2915
+#: builtin/apply.c:2918
 #, c-format
 msgid ""
 "while searching for:\n"
 "%.*s"
 msgstr ""
 "bei der Suche nach:\n"
 "%.*s"
 
-#: builtin/apply.c:2935
+#: builtin/apply.c:2938
 #, c-format
 msgid "missing binary patch data for '%s'"
 msgstr "keine Daten in Binär-Patch für '%s'"
 
-#: builtin/apply.c:3036
+#: builtin/apply.c:3039
 #, c-format
 msgid "binary patch does not apply to '%s'"
 msgstr "Konnte Binär-Patch nicht auf '%s' anwenden"
 
-#: builtin/apply.c:3042
+#: builtin/apply.c:3045
 #, c-format
 msgid "binary patch to '%s' creates incorrect result (expecting %s, got %s)"
 msgstr ""
 "Binär-Patch für '%s' erzeugt falsches Ergebnis (erwartete %s, bekam %s)"
 
-#: builtin/apply.c:3063
+#: builtin/apply.c:3066
 #, c-format
 msgid "patch failed: %s:%ld"
 msgstr "Anwendung des Patches fehlgeschlagen: %s:%ld"
 
-#: builtin/apply.c:3187
+#: builtin/apply.c:3190
 #, c-format
 msgid "cannot checkout %s"
 msgstr "kann %s nicht auschecken"
 
-#: builtin/apply.c:3232 builtin/apply.c:3243 builtin/apply.c:3288
+#: builtin/apply.c:3235 builtin/apply.c:3246 builtin/apply.c:3291
 #, c-format
 msgid "read of %s failed"
 msgstr "Konnte %s nicht lesen"
 
-#: builtin/apply.c:3240
+#: builtin/apply.c:3243
 #, c-format
 msgid "reading from '%s' beyond a symbolic link"
 msgstr "'%s' ist hinter einer symbolischen Verknüpfung"
 
-#: builtin/apply.c:3268 builtin/apply.c:3490
+#: builtin/apply.c:3271 builtin/apply.c:3493
 #, c-format
 msgid "path %s has been renamed/deleted"
 msgstr "Pfad %s wurde umbenannt/gelöscht"
 
-#: builtin/apply.c:3349 builtin/apply.c:3504
+#: builtin/apply.c:3352 builtin/apply.c:3507
 #, c-format
 msgid "%s: does not exist in index"
-msgstr "%s ist nicht in der Staging-Area"
+msgstr "%s ist nicht im Index"
 
-#: builtin/apply.c:3353 builtin/apply.c:3496 builtin/apply.c:3518
+#: builtin/apply.c:3356 builtin/apply.c:3499 builtin/apply.c:3521
 #, c-format
 msgid "%s: %s"
 msgstr "%s: %s"
 
-#: builtin/apply.c:3358 builtin/apply.c:3512
+#: builtin/apply.c:3361 builtin/apply.c:3515
 #, c-format
 msgid "%s: does not match index"
-msgstr "%s entspricht nicht der Version in der Staging-Area"
+msgstr "%s entspricht nicht der Version im Index"
 
-#: builtin/apply.c:3460
+#: builtin/apply.c:3463
 msgid "removal patch leaves file contents"
 msgstr "Lösch-Patch hinterlässt Dateiinhalte"
 
-#: builtin/apply.c:3529
+#: builtin/apply.c:3532
 #, c-format
 msgid "%s: wrong type"
 msgstr "%s: falscher Typ"
 
-#: builtin/apply.c:3531
+#: builtin/apply.c:3534
 #, c-format
 msgid "%s has type %o, expected %o"
 msgstr "%s ist vom Typ %o, erwartete %o"
 
-#: builtin/apply.c:3690 builtin/apply.c:3692
+#: builtin/apply.c:3693 builtin/apply.c:3695
 #, c-format
 msgid "invalid path '%s'"
 msgstr "Ungültiger Pfad '%s'"
 
-#: builtin/apply.c:3747
+#: builtin/apply.c:3750
 #, c-format
 msgid "%s: already exists in index"
 msgstr "%s ist bereits bereitgestellt"
 
-#: builtin/apply.c:3750
+#: builtin/apply.c:3753
 #, c-format
 msgid "%s: already exists in working directory"
 msgstr "%s existiert bereits im Arbeitsverzeichnis"
 
-#: builtin/apply.c:3770
+#: builtin/apply.c:3773
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o)"
 msgstr "neuer Modus (%o) von %s entspricht nicht dem alten Modus (%o)"
 
-#: builtin/apply.c:3775
+#: builtin/apply.c:3778
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o) of %s"
 msgstr "neuer Modus (%o) von %s entspricht nicht dem alten Modus (%o) von %s"
 
-#: builtin/apply.c:3795
+#: builtin/apply.c:3798
 #, c-format
 msgid "affected file '%s' is beyond a symbolic link"
 msgstr "betroffene Datei '%s' ist hinter einer symbolischen Verknüpfung"
 
-#: builtin/apply.c:3799
+#: builtin/apply.c:3802
 #, c-format
 msgid "%s: patch does not apply"
 msgstr "%s: Patch konnte nicht angewendet werden"
 
-#: builtin/apply.c:3813
+#: builtin/apply.c:3816
 #, c-format
 msgid "Checking patch %s..."
 msgstr "Prüfe Patch %s ..."
 
-#: builtin/apply.c:3906 builtin/checkout.c:231 builtin/reset.c:135
+#: builtin/apply.c:3909 builtin/checkout.c:233 builtin/reset.c:135
 #, c-format
 msgid "make_cache_entry failed for path '%s'"
 msgstr "make_cache_entry für Pfad '%s' fehlgeschlagen"
 
-#: builtin/apply.c:4049
+#: builtin/apply.c:4052
 #, c-format
 msgid "unable to remove %s from index"
-msgstr "konnte %s nicht aus der Staging-Area entfernen"
+msgstr "konnte %s nicht aus dem Index entfernen"
 
-#: builtin/apply.c:4078
+#: builtin/apply.c:4081
 #, c-format
 msgid "corrupt patch for submodule %s"
 msgstr "fehlerhafter Patch für Submodul %s"
 
-#: builtin/apply.c:4082
+#: builtin/apply.c:4085
 #, c-format
 msgid "unable to stat newly created file '%s'"
 msgstr "konnte neu erstellte Datei '%s' nicht lesen"
 
-#: builtin/apply.c:4087
+#: builtin/apply.c:4090
 #, c-format
 msgid "unable to create backing store for newly created file %s"
 msgstr "kann internen Speicher für eben erstellte Datei %s nicht erzeugen"
 
-#: builtin/apply.c:4090 builtin/apply.c:4198
+#: builtin/apply.c:4093 builtin/apply.c:4201
 #, c-format
 msgid "unable to add cache entry for %s"
 msgstr "kann für %s keinen Eintrag in den Zwischenspeicher hinzufügen"
 
-#: builtin/apply.c:4123
+#: builtin/apply.c:4126
 #, c-format
 msgid "closing file '%s'"
 msgstr "schließe Datei '%s'"
 
-#: builtin/apply.c:4172
+#: builtin/apply.c:4175
 #, c-format
 msgid "unable to write file '%s' mode %o"
 msgstr "konnte Datei '%s' mit Modus %o nicht schreiben"
 
-#: builtin/apply.c:4259
+#: builtin/apply.c:4262
 #, c-format
 msgid "Applied patch %s cleanly."
 msgstr "Patch %s sauber angewendet"
 
-#: builtin/apply.c:4267
+#: builtin/apply.c:4270
 msgid "internal error"
 msgstr "interner Fehler"
 
-#: builtin/apply.c:4270
+#: builtin/apply.c:4273
 #, c-format
 msgid "Applying patch %%s with %d reject..."
 msgid_plural "Applying patch %%s with %d rejects..."
 msgstr[0] "Wende Patch %%s mit %d Zurückweisung an..."
 msgstr[1] "Wende Patch %%s mit %d Zurückweisungen an..."
 
-#: builtin/apply.c:4280
+#: builtin/apply.c:4283
 #, c-format
 msgid "truncating .rej filename to %.*s.rej"
 msgstr "Verkürze Name von .rej Datei zu %.*s.rej"
 
-#: builtin/apply.c:4301
+#: builtin/apply.c:4304
 #, c-format
 msgid "Hunk #%d applied cleanly."
 msgstr "Patch-Bereich #%d sauber angewendet."
 
-#: builtin/apply.c:4304
+#: builtin/apply.c:4307
 #, c-format
 msgid "Rejected hunk #%d."
 msgstr "Patch-Block #%d zurückgewiesen."
 
-#: builtin/apply.c:4394
+#: builtin/apply.c:4397
 msgid "unrecognized input"
 msgstr "nicht erkannte Eingabe"
 
-#: builtin/apply.c:4405
+#: builtin/apply.c:4408
 msgid "unable to read index file"
-msgstr "Konnte Staging-Area-Datei nicht lesen"
+msgstr "Konnte Index-Datei nicht lesen"
 
-#: builtin/apply.c:4522 builtin/apply.c:4525 builtin/clone.c:92
+#: builtin/apply.c:4525 builtin/apply.c:4528 builtin/clone.c:85
 #: builtin/fetch.c:92
 msgid "path"
 msgstr "Pfad"
 
-#: builtin/apply.c:4523
+#: builtin/apply.c:4526
 msgid "don't apply changes matching the given path"
 msgstr "keine Änderungen im angegebenen Pfad anwenden"
 
-#: builtin/apply.c:4526
+#: builtin/apply.c:4529
 msgid "apply changes matching the given path"
 msgstr "Änderungen nur im angegebenen Pfad anwenden"
 
-#: builtin/apply.c:4528
+#: builtin/apply.c:4531
 msgid "num"
 msgstr "Anzahl"
 
-#: builtin/apply.c:4529
+#: builtin/apply.c:4532
 msgid "remove <num> leading slashes from traditional diff paths"
 msgstr ""
 "<Anzahl> vorangestellte Schrägstriche von herkömmlichen Differenzpfaden "
 "entfernen"
 
-#: builtin/apply.c:4532
+#: builtin/apply.c:4535
 msgid "ignore additions made by the patch"
 msgstr "hinzugefügte Zeilen des Patches ignorieren"
 
-#: builtin/apply.c:4534
+#: builtin/apply.c:4537
 msgid "instead of applying the patch, output diffstat for the input"
 msgstr ""
 "anstatt der Anwendung des Patches, den \"diffstat\" für die Eingabe "
 "ausgegeben"
 
-#: builtin/apply.c:4538
+#: builtin/apply.c:4541
 msgid "show number of added and deleted lines in decimal notation"
 msgstr ""
 "die Anzahl von hinzugefügten/entfernten Zeilen in Dezimalnotation anzeigen"
 
-#: builtin/apply.c:4540
+#: builtin/apply.c:4543
 msgid "instead of applying the patch, output a summary for the input"
 msgstr ""
 "anstatt der Anwendung des Patches, eine Zusammenfassung für die Eingabe "
 "ausgeben"
 
-#: builtin/apply.c:4542
+#: builtin/apply.c:4545
 msgid "instead of applying the patch, see if the patch is applicable"
 msgstr ""
 "anstatt der Anwendung des Patches, zeige ob Patch angewendet werden kann"
 
-#: builtin/apply.c:4544
+#: builtin/apply.c:4547
 msgid "make sure the patch is applicable to the current index"
 msgstr ""
-"sicherstellen, dass der Patch in der aktuellen Staging-Area angewendet "
-"werden kann"
+"sicherstellen, dass der Patch mit dem aktuellen Index angewendet werden kann"
 
-#: builtin/apply.c:4546
+#: builtin/apply.c:4549
 msgid "apply a patch without touching the working tree"
 msgstr "Patch anwenden, ohne Änderungen im Arbeitsverzeichnis vorzunehmen"
 
-#: builtin/apply.c:4548
+#: builtin/apply.c:4551
 msgid "accept a patch that touches outside the working area"
 msgstr ""
 "Patch anwenden, der Änderungen außerhalb des Arbeitsverzeichnisses vornimmt"
 
-#: builtin/apply.c:4550
+#: builtin/apply.c:4553
 msgid "also apply the patch (use with --stat/--summary/--check)"
 msgstr "Patch anwenden (Benutzung mit --stat/--summary/--check)"
 
-#: builtin/apply.c:4552
+#: builtin/apply.c:4555
 msgid "attempt three-way merge if a patch does not apply"
 msgstr "versuche 3-Wege-Merge, wenn der Patch nicht angewendet werden konnte"
 
-#: builtin/apply.c:4554
+#: builtin/apply.c:4557
 msgid "build a temporary index based on embedded index information"
 msgstr ""
-"eine temporäre Staging-Area, basierend auf den integrierten Staging-Area-"
-"Informationen, erstellen"
+"einen temporären Index, basierend auf den integrierten Index-Informationen, "
+"erstellen"
 
-#: builtin/apply.c:4556 builtin/checkout-index.c:198 builtin/ls-files.c:412
+#: builtin/apply.c:4559 builtin/checkout-index.c:198 builtin/ls-files.c:412
 msgid "paths are separated with NUL character"
 msgstr "Pfade sind getrennt durch NUL Zeichen"
 
-#: builtin/apply.c:4559
+#: builtin/apply.c:4562
 msgid "ensure at least <n> lines of context match"
 msgstr ""
 "sicher stellen, dass mindestens <n> Zeilen des Kontextes übereinstimmen"
 
-#: builtin/apply.c:4560
+#: builtin/apply.c:4563
 msgid "action"
 msgstr "Aktion"
 
-#: builtin/apply.c:4561
+#: builtin/apply.c:4564
 msgid "detect new or modified lines that have whitespace errors"
 msgstr "neue oder geänderte Zeilen, die Whitespace-Fehler haben, ermitteln"
 
-#: builtin/apply.c:4564 builtin/apply.c:4567
+#: builtin/apply.c:4567 builtin/apply.c:4570
 msgid "ignore changes in whitespace when finding context"
 msgstr "Änderungen im Whitespace bei der Suche des Kontextes ignorieren"
 
-#: builtin/apply.c:4570
+#: builtin/apply.c:4573
 msgid "apply the patch in reverse"
 msgstr "den Patch in umgekehrter Reihenfolge anwenden"
 
-#: builtin/apply.c:4572
+#: builtin/apply.c:4575
 msgid "don't expect at least one line of context"
 msgstr "keinen Kontext erwarten"
 
-#: builtin/apply.c:4574
+#: builtin/apply.c:4577
 msgid "leave the rejected hunks in corresponding *.rej files"
 msgstr ""
 "zurückgewiesene Patch-Blöcke in entsprechenden *.rej Dateien hinterlassen"
 
-#: builtin/apply.c:4576
+#: builtin/apply.c:4579
 msgid "allow overlapping hunks"
 msgstr "sich überlappende Patch-Blöcke erlauben"
 
-#: builtin/apply.c:4579
+#: builtin/apply.c:4582
 msgid "tolerate incorrectly detected missing new-line at the end of file"
 msgstr "fehlerhaft erkannten fehlenden Zeilenumbruch am Dateiende tolerieren"
 
-#: builtin/apply.c:4582
+#: builtin/apply.c:4585
 msgid "do not trust the line counts in the hunk headers"
 msgstr "den Zeilennummern im Kopf des Patch-Blocks nicht vertrauen"
 
-#: builtin/apply.c:4584
+#: builtin/apply.c:4587
 msgid "root"
 msgstr "Wurzelverzeichnis"
 
-#: builtin/apply.c:4585
+#: builtin/apply.c:4588
 msgid "prepend <root> to all filenames"
 msgstr "<Wurzelverzeichnis> vor alle Dateinamen stellen"
 
-#: builtin/apply.c:4607
+#: builtin/apply.c:4610
 msgid "--3way outside a repository"
 msgstr ""
 "Die Option --3way kann nicht außerhalb eines Repositories verwendet werden."
 
-#: builtin/apply.c:4615
+#: builtin/apply.c:4618
 msgid "--index outside a repository"
 msgstr ""
 "Die Option --index kann nicht außerhalb eines Repositories verwendet werden."
 
-#: builtin/apply.c:4618
+#: builtin/apply.c:4621
 msgid "--cached outside a repository"
 msgstr ""
 "Die Option --cached kann nicht außerhalb eines Repositories verwendet werden."
 
-#: builtin/apply.c:4637
+#: builtin/apply.c:4640
 #, c-format
 msgid "can't open patch '%s'"
 msgstr "kann Patch '%s' nicht öffnen"
 
-#: builtin/apply.c:4651
+#: builtin/apply.c:4654
 #, c-format
 msgid "squelched %d whitespace error"
 msgid_plural "squelched %d whitespace errors"
 msgstr[0] "unterdrückte %d Whitespace-Fehler"
 msgstr[1] "unterdrückte %d Whitespace-Fehler"
 
-#: builtin/apply.c:4657 builtin/apply.c:4667
+#: builtin/apply.c:4660 builtin/apply.c:4670
 #, c-format
 msgid "%d line adds whitespace errors."
 msgid_plural "%d lines add whitespace errors."
 msgstr[0] "%d Zeile fügt Whitespace-Fehler hinzu."
 msgstr[1] "%d Zeilen fügen Whitespace-Fehler hinzu."
 
@@ -2751,17 +2802,17 @@
 msgstr "'git bisect next' ausführen"
 
 #: builtin/bisect--helper.c:19
 msgid "update BISECT_HEAD instead of checking out the current commit"
 msgstr "BISECT_HEAD aktualisieren, anstatt den aktuellen Commit auszuchecken"
 
-#: builtin/blame.c:30
-msgid "git blame [<options>] [<rev-opts>] [<rev>] [--] file"
-msgstr "git blame [<Optionen>] [<rev-opts>] [<Commit>] [--] Datei"
+#: builtin/blame.c:31
+msgid "git blame [<options>] [<rev-opts>] [<rev>] [--] <file>"
+msgstr "git blame [<Optionen>] [<rev-opts>] [<Commit>] [--] <Datei>"
 
-#: builtin/blame.c:35
+#: builtin/blame.c:36
 msgid "<rev-opts> are documented in git-rev-list(1)"
 msgstr "<rev-opts> sind dokumentiert in git-rev-list(1)"
 
 #: builtin/blame.c:2500
 msgid "Show blame entries as we find them, incrementally"
 msgstr "\"blame\"-Einträge schrittweise anzeigen, während wir sie generieren"
@@ -2880,479 +2931,497 @@
 msgstr "git branch [<Optionen>] [-r] (-d | -D) <Branchname>..."
 
 #: builtin/branch.c:27
 msgid "git branch [<options>] (-m | -M) [<old-branch>] <new-branch>"
 msgstr "git branch [<Optionen>] (-m | -M) [<alter-Branch>] <neuer-Branch>"
 
-#: builtin/branch.c:152
+#: builtin/branch.c:150
 #, c-format
 msgid ""
 "deleting branch '%s' that has been merged to\n"
 "         '%s', but not yet merged to HEAD."
 msgstr ""
 "entferne Branch '%s', der zusammengeführt wurde mit\n"
 "         '%s', aber noch nicht mit HEAD zusammengeführt wurde."
 
-#: builtin/branch.c:156
+#: builtin/branch.c:154
 #, c-format
 msgid ""
 "not deleting branch '%s' that is not yet merged to\n"
 "         '%s', even though it is merged to HEAD."
 msgstr ""
 "entferne Branch '%s' nicht, der noch nicht zusammengeführt wurde mit\n"
 "         '%s', obwohl er mit HEAD zusammengeführt wurde."
 
-#: builtin/branch.c:170
+#: builtin/branch.c:168
 #, c-format
 msgid "Couldn't look up commit object for '%s'"
 msgstr "Konnte Commit-Objekt für '%s' nicht nachschlagen."
 
-#: builtin/branch.c:174
+#: builtin/branch.c:172
 #, c-format
 msgid ""
 "The branch '%s' is not fully merged.\n"
 "If you are sure you want to delete it, run 'git branch -D %s'."
 msgstr ""
 "Der Branch '%s' ist nicht vollständig zusammengeführt.\n"
 "Wenn Sie sicher sind diesen Branch zu entfernen, führen Sie 'git branch -D "
 "%s' aus."
 
-#: builtin/branch.c:187
+#: builtin/branch.c:185
 msgid "Update of config-file failed"
 msgstr "Aktualisierung der Konfigurationsdatei fehlgeschlagen."
 
-#: builtin/branch.c:215
+#: builtin/branch.c:213
 msgid "cannot use -a with -d"
 msgstr "kann -a nicht mit -d benutzen"
 
-#: builtin/branch.c:221
+#: builtin/branch.c:219
 msgid "Couldn't look up commit object for HEAD"
 msgstr "Konnte Commit-Objekt für HEAD nicht nachschlagen."
 
-#: builtin/branch.c:229
+#: builtin/branch.c:227
 #, c-format
 msgid "Cannot delete the branch '%s' which you are currently on."
 msgstr ""
 "Kann Branch '%s' nicht entfernen, da Sie sich gerade auf diesem befinden."
 
-#: builtin/branch.c:245
+#: builtin/branch.c:243
 #, c-format
-msgid "remote branch '%s' not found."
-msgstr "Remote-Branch '%s' nicht gefunden"
+msgid "remote-tracking branch '%s' not found."
+msgstr "Remote-Tracking-Branch '%s' nicht gefunden"
 
-#: builtin/branch.c:246
+#: builtin/branch.c:244
 #, c-format
 msgid "branch '%s' not found."
 msgstr "Branch '%s' nicht gefunden."
 
-#: builtin/branch.c:260
+#: builtin/branch.c:258
 #, c-format
-msgid "Error deleting remote branch '%s'"
-msgstr "Fehler beim Entfernen des Remote-Branches '%s'"
+msgid "Error deleting remote-tracking branch '%s'"
+msgstr "Fehler beim Entfernen des Remote-Tracking-Branches '%s'"
 
-#: builtin/branch.c:261
+#: builtin/branch.c:259
 #, c-format
 msgid "Error deleting branch '%s'"
 msgstr "Fehler beim Entfernen des Branches '%s'"
 
-#: builtin/branch.c:268
+#: builtin/branch.c:266
 #, c-format
-msgid "Deleted remote branch %s (was %s).\n"
-msgstr "Remote-Branch %s entfernt (war %s).\n"
+msgid "Deleted remote-tracking branch %s (was %s).\n"
+msgstr "Remote-Tracking-Branch %s entfernt (war %s).\n"
 
-#: builtin/branch.c:269
+#: builtin/branch.c:267
 #, c-format
 msgid "Deleted branch %s (was %s).\n"
 msgstr "Branch %s entfernt (war %s).\n"
 
-#: builtin/branch.c:370
+#: builtin/branch.c:368
 #, c-format
 msgid "branch '%s' does not point at a commit"
 msgstr "Branch '%s' zeigt auf keinen Commit"
 
-#: builtin/branch.c:459
+#: builtin/branch.c:451
 #, c-format
 msgid "[%s: gone]"
 msgstr "[%s: entfernt]"
 
-#: builtin/branch.c:464
+#: builtin/branch.c:456
 #, c-format
 msgid "[%s]"
 msgstr "[%s]"
 
-#: builtin/branch.c:469
+#: builtin/branch.c:461
 #, c-format
 msgid "[%s: behind %d]"
 msgstr "[%s: %d hinterher]"
 
-#: builtin/branch.c:471
+#: builtin/branch.c:463
 #, c-format
 msgid "[behind %d]"
 msgstr "[%d hinterher]"
 
-#: builtin/branch.c:475
+#: builtin/branch.c:467
 #, c-format
 msgid "[%s: ahead %d]"
 msgstr "[%s: %d voraus]"
 
-#: builtin/branch.c:477
+#: builtin/branch.c:469
 #, c-format
 msgid "[ahead %d]"
 msgstr "[%d voraus]"
 
-#: builtin/branch.c:480
+#: builtin/branch.c:472
 #, c-format
 msgid "[%s: ahead %d, behind %d]"
 msgstr "[%s: %d voraus, %d hinterher]"
 
-#: builtin/branch.c:483
+#: builtin/branch.c:475
 #, c-format
 msgid "[ahead %d, behind %d]"
 msgstr "[%d voraus, %d hinterher]"
 
-#: builtin/branch.c:496
+#: builtin/branch.c:488
 msgid " **** invalid ref ****"
 msgstr " **** ungültige Referenz ****"
 
-#: builtin/branch.c:587
+#: builtin/branch.c:579
 #, c-format
 msgid "(no branch, rebasing %s)"
 msgstr "(kein Branch, Rebase von Branch %s im Gange)"
 
-#: builtin/branch.c:590
+#: builtin/branch.c:582
 #, c-format
 msgid "(no branch, bisect started on %s)"
 msgstr "(kein Branch, binäre Suche begonnen bei %s)"
 
-#: builtin/branch.c:596
+#: builtin/branch.c:588
 #, c-format
 msgid "(HEAD detached at %s)"
 msgstr "(HEAD losgelöst bei %s)"
 
-#: builtin/branch.c:599
+#: builtin/branch.c:591
 #, c-format
 msgid "(HEAD detached from %s)"
 msgstr "(HEAD losgelöst von %s)"
 
-#: builtin/branch.c:603
+#: builtin/branch.c:595
 msgid "(no branch)"
 msgstr "(kein Branch)"
 
-#: builtin/branch.c:650
+#: builtin/branch.c:642
 #, c-format
 msgid "object '%s' does not point to a commit"
 msgstr "Objekt '%s' zeigt auf keinen Commit"
 
-#: builtin/branch.c:698
+#: builtin/branch.c:690
 msgid "some refs could not be read"
 msgstr "Konnte einige Referenzen nicht lesen"
 
-#: builtin/branch.c:711
+#: builtin/branch.c:703
 msgid "cannot rename the current branch while not on any."
 msgstr ""
 "Kann aktuellen Branch nicht umbenennen, solange Sie sich auf keinem befinden."
 
-#: builtin/branch.c:721
+#: builtin/branch.c:713
 #, c-format
 msgid "Invalid branch name: '%s'"
 msgstr "Ungültiger Branchname: '%s'"
 
-#: builtin/branch.c:736
+#: builtin/branch.c:728
 msgid "Branch rename failed"
 msgstr "Umbenennung des Branches fehlgeschlagen"
 
-#: builtin/branch.c:740
+#: builtin/branch.c:732
 #, c-format
 msgid "Renamed a misnamed branch '%s' away"
 msgstr "falsch benannten Branch '%s' umbenannt"
 
-#: builtin/branch.c:744
+#: builtin/branch.c:736
 #, c-format
 msgid "Branch renamed to %s, but HEAD is not updated!"
 msgstr "Branch umbenannt zu %s, aber HEAD ist nicht aktualisiert!"
 
-#: builtin/branch.c:751
+#: builtin/branch.c:743
 msgid "Branch is renamed, but update of config-file failed"
 msgstr ""
 "Branch ist umbenannt, aber die Aktualisierung der Konfigurationsdatei ist "
 "fehlgeschlagen."
 
-#: builtin/branch.c:766
+#: builtin/branch.c:758
 #, c-format
 msgid "malformed object name %s"
 msgstr "Missgebildeter Objektname %s"
 
-#: builtin/branch.c:790
+#: builtin/branch.c:780
 #, c-format
 msgid "could not write branch description template: %s"
 msgstr "Konnte Beschreibungsvorlage für Branch nicht schreiben: %s"
 
-#: builtin/branch.c:820
+#: builtin/branch.c:810
 msgid "Generic options"
 msgstr "Allgemeine Optionen"
 
-#: builtin/branch.c:822
+#: builtin/branch.c:812
 msgid "show hash and subject, give twice for upstream branch"
 msgstr "Hash und Betreff anzeigen; -vv: zusätzlich Upstream-Branch"
 
-#: builtin/branch.c:823
+#: builtin/branch.c:813
 msgid "suppress informational messages"
 msgstr "Informationsmeldungen unterdrücken"
 
-#: builtin/branch.c:824
+#: builtin/branch.c:814
 msgid "set up tracking mode (see git-pull(1))"
 msgstr "den Übernahmemodus einstellen (siehe git-pull(1))"
 
-#: builtin/branch.c:826
+#: builtin/branch.c:816
 msgid "change upstream info"
 msgstr "Informationen zum Upstream-Branch ändern"
 
-#: builtin/branch.c:830
+#: builtin/branch.c:820
 msgid "use colored output"
 msgstr "farbige Ausgaben verwenden"
 
-#: builtin/branch.c:831
+#: builtin/branch.c:821
 msgid "act on remote-tracking branches"
 msgstr "auf Remote-Tracking-Branches wirken"
 
-#: builtin/branch.c:834 builtin/branch.c:840 builtin/branch.c:861
-#: builtin/branch.c:867 builtin/commit.c:1582 builtin/commit.c:1583
-#: builtin/commit.c:1584 builtin/commit.c:1585 builtin/tag.c:616
+#: builtin/branch.c:824 builtin/branch.c:830 builtin/branch.c:851
+#: builtin/branch.c:857 builtin/commit.c:1581 builtin/commit.c:1582
+#: builtin/commit.c:1583 builtin/commit.c:1584 builtin/tag.c:616
 #: builtin/tag.c:622
 msgid "commit"
 msgstr "Commit"
 
-#: builtin/branch.c:835 builtin/branch.c:841
+#: builtin/branch.c:825 builtin/branch.c:831
 msgid "print only branches that contain the commit"
 msgstr "nur Branches ausgeben, welche diesen Commit beinhalten"
 
-#: builtin/branch.c:847
+#: builtin/branch.c:837
 msgid "Specific git-branch actions:"
 msgstr "spezifische Aktionen für \"git-branch\":"
 
-#: builtin/branch.c:848
+#: builtin/branch.c:838
 msgid "list both remote-tracking and local branches"
 msgstr "Remote-Tracking und lokale Branches auflisten"
 
-#: builtin/branch.c:850
+#: builtin/branch.c:840
 msgid "delete fully merged branch"
 msgstr "vollständig zusammengeführten Branch entfernen"
 
-#: builtin/branch.c:851
+#: builtin/branch.c:841
 msgid "delete branch (even if not merged)"
 msgstr "Branch löschen (auch wenn nicht zusammengeführt)"
 
-#: builtin/branch.c:852
+#: builtin/branch.c:842
 msgid "move/rename a branch and its reflog"
 msgstr "einen Branch und dessen Reflog verschieben/umbenennen"
 
-#: builtin/branch.c:853
+#: builtin/branch.c:843
 msgid "move/rename a branch, even if target exists"
 msgstr ""
 "einen Branch verschieben/umbenennen, auch wenn das Ziel bereits existiert"
 
-#: builtin/branch.c:854
+#: builtin/branch.c:844
 msgid "list branch names"
 msgstr "Branchnamen auflisten"
 
-#: builtin/branch.c:855
+#: builtin/branch.c:845
 msgid "create the branch's reflog"
 msgstr "das Reflog des Branches erzeugen"
 
-#: builtin/branch.c:857
+#: builtin/branch.c:847
 msgid "edit the description for the branch"
 msgstr "die Beschreibung für den Branch bearbeiten"
 
-#: builtin/branch.c:858
+#: builtin/branch.c:848
 msgid "force creation, move/rename, deletion"
 msgstr "Erstellung, Verschiebung/Umbenennung oder Löschung erzwingen"
 
-#: builtin/branch.c:861
+#: builtin/branch.c:851
 msgid "print only not merged branches"
 msgstr "nur Branches ausgeben, die nicht zusammengeführt sind"
 
-#: builtin/branch.c:867
+#: builtin/branch.c:857
 msgid "print only merged branches"
 msgstr "nur Branches ausgeben, die zusammengeführt sind"
 
-#: builtin/branch.c:871
+#: builtin/branch.c:861
 msgid "list branches in columns"
 msgstr "Branches in Spalten auflisten"
 
-#: builtin/branch.c:884
+#: builtin/branch.c:874
 msgid "Failed to resolve HEAD as a valid ref."
 msgstr "Konnte HEAD nicht als gültige Referenz auflösen."
 
-#: builtin/branch.c:888 builtin/clone.c:637
+#: builtin/branch.c:878 builtin/clone.c:622
 msgid "HEAD not found below refs/heads!"
 msgstr "HEAD wurde nicht unter \"refs/heads\" gefunden!"
 
-#: builtin/branch.c:910
+#: builtin/branch.c:900
 msgid "--column and --verbose are incompatible"
 msgstr "Die Optionen --column und --verbose sind inkompatibel."
 
-#: builtin/branch.c:921 builtin/branch.c:960
+#: builtin/branch.c:911 builtin/branch.c:950
 msgid "branch name required"
 msgstr "Branchname erforderlich"
 
-#: builtin/branch.c:936
+#: builtin/branch.c:926
 msgid "Cannot give description to detached HEAD"
 msgstr "zu losgelöstem HEAD kann keine Beschreibung hinterlegt werden"
 
-#: builtin/branch.c:941
+#: builtin/branch.c:931
 msgid "cannot edit description of more than one branch"
 msgstr "Beschreibung von mehr als einem Branch kann nicht bearbeitet werden"
 
-#: builtin/branch.c:948
+#: builtin/branch.c:938
 #, c-format
 msgid "No commit on branch '%s' yet."
 msgstr "Noch kein Commit in Branch '%s'."
 
-#: builtin/branch.c:951
+#: builtin/branch.c:941
 #, c-format
 msgid "No branch named '%s'."
 msgstr "Branch '%s' nicht vorhanden."
 
-#: builtin/branch.c:966
+#: builtin/branch.c:956
 msgid "too many branches for a rename operation"
 msgstr "zu viele Branches für eine Umbenennen-Operation angegeben"
 
-#: builtin/branch.c:971
+#: builtin/branch.c:961
 msgid "too many branches to set new upstream"
 msgstr "zu viele Branches angegeben, um Upstream-Branch zu setzen"
 
-#: builtin/branch.c:975
+#: builtin/branch.c:965
 #, c-format
 msgid ""
 "could not set upstream of HEAD to %s when it does not point to any branch."
 msgstr ""
 "Konnte keinen neuen Upstream-Branch von HEAD zu %s setzen, da dieser auf\n"
 "keinen Branch zeigt."
 
-#: builtin/branch.c:978 builtin/branch.c:1000 builtin/branch.c:1021
+#: builtin/branch.c:968 builtin/branch.c:990 builtin/branch.c:1011
 #, c-format
 msgid "no such branch '%s'"
 msgstr "Kein solcher Branch '%s'"
 
-#: builtin/branch.c:982
+#: builtin/branch.c:972
 #, c-format
 msgid "branch '%s' does not exist"
 msgstr "Branch '%s' existiert nicht"
 
-#: builtin/branch.c:994
+#: builtin/branch.c:984
 msgid "too many branches to unset upstream"
 msgstr ""
 "zu viele Branches angegeben, um Konfiguration zu Upstream-Branch zu entfernen"
 
-#: builtin/branch.c:998
+#: builtin/branch.c:988
 msgid "could not unset upstream of HEAD when it does not point to any branch."
 msgstr ""
 "Konnte Konfiguration zu Upstream-Branch von HEAD nicht entfernen, da dieser\n"
 "auf keinen Branch zeigt."
 
-#: builtin/branch.c:1004
+#: builtin/branch.c:994
 #, c-format
 msgid "Branch '%s' has no upstream information"
 msgstr "Branch '%s' hat keinen Upstream-Branch gesetzt"
 
-#: builtin/branch.c:1018
+#: builtin/branch.c:1008
 msgid "it does not make sense to create 'HEAD' manually"
 msgstr "'HEAD' darf nicht manuell erstellt werden"
 
-#: builtin/branch.c:1024
+#: builtin/branch.c:1014
 msgid "-a and -r options to 'git branch' do not make sense with a branch name"
 msgstr ""
 "Die Optionen -a und -r bei 'git branch' können nicht gemeimsam mit einem "
 "Branchnamen verwendet werden."
 
-#: builtin/branch.c:1027
+#: builtin/branch.c:1017
 #, c-format
 msgid ""
 "The --set-upstream flag is deprecated and will be removed. Consider using --"
 "track or --set-upstream-to\n"
 msgstr ""
 "Die --set-upstream Option ist veraltet und wird entfernt. Benutzen Sie --"
 "track oder --set-upstream-to\n"
 
-#: builtin/branch.c:1044
+#: builtin/branch.c:1034
 #, c-format
 msgid ""
 "\n"
 "If you wanted to make '%s' track '%s', do this:\n"
 "\n"
 msgstr ""
 "\n"
 "Wenn Sie wollten, dass '%s' den Branch '%s' als Upstream-Branch hat, führen "
 "Sie aus:\n"
 
-#: builtin/branch.c:1045
+#: builtin/branch.c:1035
 #, c-format
 msgid "    git branch -d %s\n"
 msgstr "    git branch -d %s\n"
 
-#: builtin/branch.c:1046
+#: builtin/branch.c:1036
 #, c-format
 msgid "    git branch --set-upstream-to %s\n"
 msgstr "    git branch --set-upstream-to %s\n"
 
-#: builtin/bundle.c:47
+#: builtin/bundle.c:51
 #, c-format
 msgid "%s is okay\n"
 msgstr "%s ist in Ordnung\n"
 
-#: builtin/bundle.c:56
+#: builtin/bundle.c:64
 msgid "Need a repository to create a bundle."
 msgstr "Um ein Paket zu erstellen wird ein Repository benötigt."
 
-#: builtin/bundle.c:60
+#: builtin/bundle.c:68
 msgid "Need a repository to unbundle."
 msgstr "Zum Entpacken wird ein Repository benötigt."
 
-#: builtin/cat-file.c:326
-msgid "git cat-file (-t | -s | -e | -p | <type> | --textconv) <object>"
-msgstr "git cat-file (-t | -s | -e | -p | <Art> | --textconv) <Objekt>"
-
-#: builtin/cat-file.c:327
-msgid "git cat-file (--batch | --batch-check) < <list-of-objects>"
-msgstr "git cat-file (--batch | --batch-check) < <Liste-von-Objekten>"
+#: builtin/cat-file.c:369
+msgid ""
+"git cat-file (-t [--allow-unknown-type]|-s [--allow-unknown-type]|-e|-p|"
+"<type>|--textconv) <object>"
+msgstr ""
+"git cat-file (-t [--allow-unknown-type]|-s [--allow-unknown-type]|-e|-p|"
+"<Art>|--textconv) <Objekt>"
+
+#: builtin/cat-file.c:370
+msgid ""
+"git cat-file (--batch | --batch-check) [--follow-symlinks] < <list-of-"
+"objects>"
+msgstr ""
+"git cat-file (--batch | --batch-check) [--follow-symlinks] < <Liste-von-"
+"Objekten"
 
-#: builtin/cat-file.c:364
+#: builtin/cat-file.c:407
 msgid "<type> can be one of: blob, tree, commit, tag"
 msgstr "<Art> kann sein: blob, tree, commit, tag"
 
-#: builtin/cat-file.c:365
+#: builtin/cat-file.c:408
 msgid "show object type"
 msgstr "Objektart anzeigen"
 
-#: builtin/cat-file.c:366
+#: builtin/cat-file.c:409
 msgid "show object size"
 msgstr "Objektgröße anzeigen"
 
-#: builtin/cat-file.c:368
+#: builtin/cat-file.c:411
 msgid "exit with zero when there's no error"
 msgstr "mit Rückgabewert 0 beenden, wenn kein Fehler aufgetreten ist"
 
-#: builtin/cat-file.c:369
+#: builtin/cat-file.c:412
 msgid "pretty-print object's content"
 msgstr "ansprechende Anzeige des Objektinhaltes"
 
-#: builtin/cat-file.c:371
+#: builtin/cat-file.c:414
 msgid "for blob objects, run textconv on object's content"
 msgstr "eine Textkonvertierung auf den Inhalt von Blob-Objekten ausführen"
 
-#: builtin/cat-file.c:373
+#: builtin/cat-file.c:416
+msgid "allow -s and -t to work with broken/corrupt objects"
+msgstr "-s und -t mit beschädigten Objekten erlauben"
+
+#: builtin/cat-file.c:418
 msgid "show info and content of objects fed from the standard input"
 msgstr ""
 "Anzeige von Informationen und Inhalt von Objekten, gelesen von der Standard-"
 "Eingabe"
 
-#: builtin/cat-file.c:376
+#: builtin/cat-file.c:421
 msgid "show info about objects fed from the standard input"
 msgstr ""
 "Anzeige von Informationen über Objekte, gelesen von der Standard-Eingabe"
 
+#: builtin/cat-file.c:424
+msgid "follow in-tree symlinks (used with --batch or --batch-check)"
+msgstr ""
+"symbolischen Verknüpfungen innerhalb des Repositories folgen (verwendet mit "
+"--batch oder --batch-check)"
+
 #: builtin/check-attr.c:11
 msgid "git check-attr [-a | --all | <attr>...] [--] <pathname>..."
 msgstr "git check-attr [-a | --all | <Attribut>...] [--] <Pfadname>..."
 
 #: builtin/check-attr.c:12
 msgid "git check-attr --stdin [-z] [-a | --all | <attr>...] < <list-of-paths>"
@@ -3362,33 +3431,33 @@
 #: builtin/check-attr.c:19
 msgid "report all attributes set on file"
 msgstr "alle Attribute einer Datei ausgeben"
 
 #: builtin/check-attr.c:20
 msgid "use .gitattributes only from the index"
-msgstr ".gitattributes nur von der Staging-Area verwenden"
+msgstr "nur .gitattributes vom Index verwenden"
 
-#: builtin/check-attr.c:21 builtin/check-ignore.c:22 builtin/hash-object.c:98
+#: builtin/check-attr.c:21 builtin/check-ignore.c:22 builtin/hash-object.c:96
 msgid "read file names from stdin"
 msgstr "Dateinamen von der Standard-Eingabe lesen"
 
 #: builtin/check-attr.c:23 builtin/check-ignore.c:24
 msgid "terminate input and output records by a NUL character"
 msgstr "Einträge von Ein- und Ausgabe mit NUL-Zeichen abschließen"
 
-#: builtin/check-ignore.c:18 builtin/checkout.c:1107 builtin/gc.c:274
+#: builtin/check-ignore.c:18 builtin/checkout.c:1202 builtin/gc.c:279
 msgid "suppress progress reporting"
 msgstr "Fortschrittsanzeige unterdrücken"
 
 #: builtin/check-ignore.c:26
 msgid "show non-matching input paths"
 msgstr "Eingabe-Pfade ohne Übereinstimmungen anzeigen"
 
 #: builtin/check-ignore.c:28
 msgid "ignore index when checking"
-msgstr "Staging-Area bei der Prüfung ignorieren"
+msgstr "Index bei der Prüfung ignorieren"
 
 #: builtin/check-ignore.c:154
 msgid "cannot specify pathnames with --stdin"
 msgstr "Angabe von Pfadnamen kann nicht gemeinsam mit --stdin verwendet werden"
 
 #: builtin/check-ignore.c:157
@@ -3432,31 +3501,31 @@
 #: builtin/checkout-index.c:126
 msgid "git checkout-index [<options>] [--] [<file>...]"
 msgstr "git checkout-index [<Optionen>] [--] [<Datei>...]"
 
 #: builtin/checkout-index.c:188
 msgid "check out all files in the index"
-msgstr "alle Dateien in der Staging-Area auschecken"
+msgstr "alle Dateien im Index auschecken"
 
 #: builtin/checkout-index.c:189
 msgid "force overwrite of existing files"
 msgstr "das Überschreiben bereits existierender Dateien erzwingen"
 
 #: builtin/checkout-index.c:191
 msgid "no warning for existing files and files not in index"
 msgstr ""
-"keine Warnung für existierende Dateien, und Dateien, die sich nicht in der "
-"Staging-Area befinden"
+"keine Warnung für existierende Dateien, und Dateien, die sich nicht im Index "
+"befinden"
 
 #: builtin/checkout-index.c:193
 msgid "don't checkout new files"
 msgstr "keine neuen Dateien auschecken"
 
 #: builtin/checkout-index.c:195
 msgid "update stat information in the index file"
-msgstr "Dateiinformationen in der Staging-Area-Datei aktualisieren"
+msgstr "Dateiinformationen in der Index-Datei aktualisieren"
 
 #: builtin/checkout-index.c:201
 msgid "read list of paths from the standard input"
 msgstr "eine Liste von Pfaden von der Standard-Eingabe lesen"
 
 #: builtin/checkout-index.c:203
@@ -3473,120 +3542,120 @@
 "wenn Dateien erzeugt werden, stelle <Zeichenkette> dem Dateinamen voran"
 
 #: builtin/checkout-index.c:208
 msgid "copy out the files from named stage"
 msgstr "Dateien von dem benannten Stand kopieren"
 
-#: builtin/checkout.c:25
+#: builtin/checkout.c:24
 msgid "git checkout [<options>] <branch>"
 msgstr "git checkout [<Optionen>] <Branch>"
 
-#: builtin/checkout.c:26
+#: builtin/checkout.c:25
 msgid "git checkout [<options>] [<branch>] -- <file>..."
 msgstr "git checkout [<Optionen>] [<Branch>] -- <Datei>..."
 
-#: builtin/checkout.c:132 builtin/checkout.c:165
+#: builtin/checkout.c:134 builtin/checkout.c:167
 #, c-format
 msgid "path '%s' does not have our version"
 msgstr "Pfad '%s' hat nicht unsere Version."
 
-#: builtin/checkout.c:134 builtin/checkout.c:167
+#: builtin/checkout.c:136 builtin/checkout.c:169
 #, c-format
 msgid "path '%s' does not have their version"
 msgstr "Pfad '%s' hat nicht deren Version."
 
-#: builtin/checkout.c:150
+#: builtin/checkout.c:152
 #, c-format
 msgid "path '%s' does not have all necessary versions"
 msgstr "Pfad '%s' hat nicht alle notwendigen Versionen."
 
-#: builtin/checkout.c:194
+#: builtin/checkout.c:196
 #, c-format
 msgid "path '%s' does not have necessary versions"
 msgstr "Pfad '%s' hat nicht die notwendigen Versionen."
 
-#: builtin/checkout.c:211
+#: builtin/checkout.c:213
 #, c-format
 msgid "path '%s': cannot merge"
 msgstr "Pfad '%s': kann nicht zusammenführen"
 
-#: builtin/checkout.c:228
+#: builtin/checkout.c:230
 #, c-format
 msgid "Unable to add merge result for '%s'"
 msgstr "Konnte Merge-Ergebnis von '%s' nicht hinzufügen."
 
-#: builtin/checkout.c:249 builtin/checkout.c:252 builtin/checkout.c:255
-#: builtin/checkout.c:258
+#: builtin/checkout.c:251 builtin/checkout.c:254 builtin/checkout.c:257
+#: builtin/checkout.c:260
 #, c-format
 msgid "'%s' cannot be used with updating paths"
-msgstr "'%s' kann nicht mit Pfaden verwendet werden"
+msgstr "'%s' kann nicht mit der Aktualisierung von Pfaden verwendet werden"
 
-#: builtin/checkout.c:261 builtin/checkout.c:264
+#: builtin/checkout.c:263 builtin/checkout.c:266
 #, c-format
 msgid "'%s' cannot be used with %s"
 msgstr "'%s' kann nicht mit '%s' verwendet werden"
 
-#: builtin/checkout.c:267
+#: builtin/checkout.c:269
 #, c-format
 msgid "Cannot update paths and switch to branch '%s' at the same time."
 msgstr ""
 "Kann nicht gleichzeitig Pfade aktualisieren und zu Branch '%s' wechseln"
 
-#: builtin/checkout.c:278 builtin/checkout.c:467
+#: builtin/checkout.c:280 builtin/checkout.c:474
 msgid "corrupt index file"
-msgstr "beschädigte Staging-Area-Datei"
+msgstr "beschädigte Index-Datei"
 
-#: builtin/checkout.c:338 builtin/checkout.c:345
+#: builtin/checkout.c:340 builtin/checkout.c:347
 #, c-format
 msgid "path '%s' is unmerged"
 msgstr "Pfad '%s' ist nicht zusammengeführt."
 
-#: builtin/checkout.c:489
+#: builtin/checkout.c:496
 msgid "you need to resolve your current index first"
-msgstr "Sie müssen zuerst Ihre aktuelle Staging-Area auflösen."
+msgstr "Sie müssen zuerst die Konflikte in Ihrem aktuellen Index auflösen."
 
-#: builtin/checkout.c:615
+#: builtin/checkout.c:627
 #, c-format
 msgid "Can not do reflog for '%s'\n"
 msgstr "Konnte \"reflog\" für '%s' nicht durchführen\n"
 
-#: builtin/checkout.c:653
+#: builtin/checkout.c:663
 msgid "HEAD is now at"
 msgstr "HEAD ist jetzt bei"
 
-#: builtin/checkout.c:660
+#: builtin/checkout.c:670
 #, c-format
 msgid "Reset branch '%s'\n"
 msgstr "Setze Branch '%s' neu\n"
 
-#: builtin/checkout.c:663
+#: builtin/checkout.c:673
 #, c-format
 msgid "Already on '%s'\n"
 msgstr "Bereits auf '%s'\n"
 
-#: builtin/checkout.c:667
+#: builtin/checkout.c:677
 #, c-format
 msgid "Switched to and reset branch '%s'\n"
 msgstr "Zu umgesetztem Branch '%s' gewechselt\n"
 
-#: builtin/checkout.c:669 builtin/checkout.c:1050
+#: builtin/checkout.c:679 builtin/checkout.c:1134
 #, c-format
 msgid "Switched to a new branch '%s'\n"
 msgstr "Zu neuem Branch '%s' gewechselt\n"
 
-#: builtin/checkout.c:671
+#: builtin/checkout.c:681
 #, c-format
 msgid "Switched to branch '%s'\n"
 msgstr "Zu Branch '%s' gewechselt\n"
 
-#: builtin/checkout.c:723
+#: builtin/checkout.c:733
 #, c-format
 msgid " ... and %d more.\n"
 msgstr " ... und %d weitere.\n"
 
-#: builtin/checkout.c:729
+#: builtin/checkout.c:739
 #, c-format
 msgid ""
 "Warning: you are leaving %d commit behind, not connected to\n"
 "any of your branches:\n"
 "\n"
 "%s\n"
@@ -3603,181 +3672,205 @@
 msgstr[1] ""
 "Warnung: Sie lassen %d Commits zurück. Folgende Commits sind in\n"
 "keinem Ihrer Branches enthalten:\n"
 "\n"
 "%s\n"
 
-#: builtin/checkout.c:747
+#: builtin/checkout.c:758
 #, c-format
 msgid ""
+"If you want to keep it by creating a new branch, this may be a good time\n"
+"to do so with:\n"
+"\n"
+" git branch <new-branch-name> %s\n"
+"\n"
+msgid_plural ""
 "If you want to keep them by creating a new branch, this may be a good time\n"
 "to do so with:\n"
 "\n"
 " git branch <new-branch-name> %s\n"
 "\n"
-msgstr ""
+msgstr[0] ""
+"Wenn Sie diese durch einen neuen Branch behalten möchten, dann könnte jetzt\n"
+"ein guter Zeitpunkt sein dies zu tun mit:\n"
+"\n"
+" git branch <neuer-Branchname> %s\n"
+"\n"
+msgstr[1] ""
 "Wenn Sie diese durch einen neuen Branch behalten möchten, dann könnte jetzt\n"
 "ein guter Zeitpunkt sein dies zu tun mit:\n"
 "\n"
 " git branch <neuer-Branchname> %s\n"
 "\n"
 
-#: builtin/checkout.c:777
+#: builtin/checkout.c:794
 msgid "internal error in revision walk"
 msgstr "interner Fehler im Revisionsgang"
 
-#: builtin/checkout.c:781
+#: builtin/checkout.c:798
 msgid "Previous HEAD position was"
 msgstr "Vorherige Position von HEAD war"
 
-#: builtin/checkout.c:808 builtin/checkout.c:1045
+#: builtin/checkout.c:825 builtin/checkout.c:1129
 msgid "You are on a branch yet to be born"
 msgstr "Sie sind auf einem Branch, der noch geboren wird"
 
-#: builtin/checkout.c:952
+#: builtin/checkout.c:931
+#, c-format
+msgid "'%s' is already checked out at '%s'"
+msgstr "'%s' ist bereits in '%s' ausgecheckt"
+
+#: builtin/checkout.c:1036
 #, c-format
 msgid "only one reference expected, %d given."
 msgstr "nur eine Referenz erwartet, %d gegeben."
 
-#: builtin/checkout.c:991
+#: builtin/checkout.c:1075
 #, c-format
 msgid "invalid reference: %s"
 msgstr "Ungültige Referenz: %s"
 
-#: builtin/checkout.c:1020
+#: builtin/checkout.c:1104
 #, c-format
 msgid "reference is not a tree: %s"
 msgstr "Referenz ist kein \"Tree\"-Objekt: %s"
 
-#: builtin/checkout.c:1059
+#: builtin/checkout.c:1143
 msgid "paths cannot be used with switching branches"
 msgstr "Pfade können nicht beim Wechseln von Branches verwendet werden"
 
-#: builtin/checkout.c:1062 builtin/checkout.c:1066
+#: builtin/checkout.c:1146 builtin/checkout.c:1150
 #, c-format
 msgid "'%s' cannot be used with switching branches"
 msgstr "'%s' kann nicht beim Wechseln von Branches verwendet werden"
 
-#: builtin/checkout.c:1070 builtin/checkout.c:1073 builtin/checkout.c:1078
-#: builtin/checkout.c:1081
+#: builtin/checkout.c:1154 builtin/checkout.c:1157 builtin/checkout.c:1162
+#: builtin/checkout.c:1165
 #, c-format
 msgid "'%s' cannot be used with '%s'"
 msgstr "'%s' kann nicht mit '%s' verwendet werden"
 
-#: builtin/checkout.c:1086
+#: builtin/checkout.c:1170
 #, c-format
 msgid "Cannot switch branch to a non-commit '%s'"
 msgstr "Kann Branch nicht zu Nicht-Commit '%s' wechseln"
 
-#: builtin/checkout.c:1108 builtin/checkout.c:1110 builtin/clone.c:90
-#: builtin/remote.c:159 builtin/remote.c:161
+#: builtin/checkout.c:1203 builtin/checkout.c:1205 builtin/clone.c:83
+#: builtin/remote.c:159 builtin/remote.c:161 builtin/worktree.c:282
+#: builtin/worktree.c:284
 msgid "branch"
 msgstr "Branch"
 
-#: builtin/checkout.c:1109
+#: builtin/checkout.c:1204
 msgid "create and checkout a new branch"
 msgstr "einen neuen Branch erzeugen und auschecken"
 
-#: builtin/checkout.c:1111
+#: builtin/checkout.c:1206
 msgid "create/reset and checkout a branch"
 msgstr "einen Branch erstellen/umsetzen und auschecken"
 
-#: builtin/checkout.c:1112
+#: builtin/checkout.c:1207
 msgid "create reflog for new branch"
 msgstr "das Reflog für den neuen Branch erzeugen"
 
-#: builtin/checkout.c:1113
+#: builtin/checkout.c:1208
 msgid "detach the HEAD at named commit"
 msgstr "HEAD zu benanntem Commit setzen"
 
-#: builtin/checkout.c:1114
+#: builtin/checkout.c:1209
 msgid "set upstream info for new branch"
 msgstr "Informationen zum Upstream-Branch für den neuen Branch setzen"
 
-#: builtin/checkout.c:1116
+#: builtin/checkout.c:1211
 msgid "new-branch"
 msgstr "neuer Branch"
 
-#: builtin/checkout.c:1116
+#: builtin/checkout.c:1211
 msgid "new unparented branch"
 msgstr "neuer Branch ohne Eltern-Commit"
 
-#: builtin/checkout.c:1117
+#: builtin/checkout.c:1212
 msgid "checkout our version for unmerged files"
 msgstr "unsere Variante für nicht zusammengeführte Dateien auschecken"
 
-#: builtin/checkout.c:1119
+#: builtin/checkout.c:1214
 msgid "checkout their version for unmerged files"
 msgstr "ihre Variante für nicht zusammengeführte Dateien auschecken"
 
-#: builtin/checkout.c:1121
+#: builtin/checkout.c:1216
 msgid "force checkout (throw away local modifications)"
 msgstr "Auschecken erzwingen (verwirft lokale Änderungen)"
 
-#: builtin/checkout.c:1122
+#: builtin/checkout.c:1217
 msgid "perform a 3-way merge with the new branch"
 msgstr "einen 3-Wege-Merge mit dem neuen Branch ausführen"
 
-#: builtin/checkout.c:1123 builtin/merge.c:227
+#: builtin/checkout.c:1218 builtin/merge.c:227
 msgid "update ignored files (default)"
 msgstr "ignorierte Dateien aktualisieren (Standard)"
 
-#: builtin/checkout.c:1124 builtin/log.c:1239 parse-options.h:245
+#: builtin/checkout.c:1219 builtin/log.c:1239 parse-options.h:244
 msgid "style"
 msgstr "Stil"
 
-#: builtin/checkout.c:1125
+#: builtin/checkout.c:1220
 msgid "conflict style (merge or diff3)"
 msgstr "Konfliktstil (merge oder diff3)"
 
-#: builtin/checkout.c:1128
+#: builtin/checkout.c:1223
 msgid "do not limit pathspecs to sparse entries only"
 msgstr "keine Einschränkung bei Pfadspezifikationen zum partiellen Auschecken"
 
-#: builtin/checkout.c:1130
+#: builtin/checkout.c:1225
 msgid "second guess 'git checkout <no-such-branch>'"
 msgstr "second guess 'git checkout <no-such-branch>'"
 
-#: builtin/checkout.c:1153
+#: builtin/checkout.c:1227
+msgid "do not check if another worktree is holding the given ref"
+msgstr ""
+"Prüfung, ob die Referenz bereits in einem anderen Arbeitsverzeichnis "
+"ausgecheckt wurde, deaktivieren"
+
+#: builtin/checkout.c:1252
 msgid "-b, -B and --orphan are mutually exclusive"
 msgstr "Die Optionen -b, -B und --orphan schließen sich gegenseitig aus."
 
-#: builtin/checkout.c:1170
+#: builtin/checkout.c:1269
 msgid "--track needs a branch name"
 msgstr "Bei der Option --track muss ein Branchname angegeben werden."
 
-#: builtin/checkout.c:1175
+#: builtin/checkout.c:1274
 msgid "Missing branch name; try -b"
 msgstr "Vermisse Branchnamen; versuchen Sie -b"
 
-#: builtin/checkout.c:1212
+#: builtin/checkout.c:1310
 msgid "invalid path specification"
 msgstr "ungültige Pfadspezifikation"
 
-#: builtin/checkout.c:1219
+#: builtin/checkout.c:1317
 #, c-format
 msgid ""
 "Cannot update paths and switch to branch '%s' at the same time.\n"
 "Did you intend to checkout '%s' which can not be resolved as commit?"
 msgstr ""
 "Kann nicht gleichzeitig Pfade aktualisieren und zu Branch '%s' wechseln.\n"
 "Haben Sie beabsichtigt '%s' auszuchecken, welcher nicht als Commit aufgelöst "
 "werden kann?"
 
-#: builtin/checkout.c:1224
+#: builtin/checkout.c:1322
 #, c-format
 msgid "git checkout: --detach does not take a path argument '%s'"
 msgstr "git checkout: --detach nimmt kein Pfad-Argument '%s'"
 
-#: builtin/checkout.c:1228
+#: builtin/checkout.c:1326
 msgid ""
 "git checkout: --ours/--theirs, --force and --merge are incompatible when\n"
 "checking out of the index."
 msgstr ""
 "git checkout: --ours/--theirs, --force und --merge sind inkompatibel wenn\n"
-"Sie aus der Staging-Area auschecken."
+"Sie aus dem Index auschecken."
 
 #: builtin/clean.c:26
 msgid ""
 "git clean [-d] [-f] [-i] [-n] [-q] [-e <pattern>] [-x | -X] [--] <paths>..."
 msgstr ""
 "git clean [-d] [-f] [-i] [-n] [-q] [-e <Muster>] [-x | -X] [--] <Pfade>..."
@@ -3836,42 +3929,42 @@
 "2-3,6-9    - mehrere Bereiche auswählen\n"
 "foo        - Element anhand eines eindeutigen Präfix auswählen\n"
 "-...       - angegebenes Element abwählen\n"
 "*          - alle Elemente auswählen\n"
 "           - (leer) Auswahl beenden"
 
-#: builtin/clean.c:517
+#: builtin/clean.c:515
 #, c-format
 msgid "Huh (%s)?"
 msgstr "Wie bitte (%s)?"
 
-#: builtin/clean.c:659
+#: builtin/clean.c:657
 #, c-format
 msgid "Input ignore patterns>> "
 msgstr "Ignorier-Muster eingeben>> "
 
-#: builtin/clean.c:696
+#: builtin/clean.c:694
 #, c-format
 msgid "WARNING: Cannot find items matched by: %s"
 msgstr "WARNUNG: Kann keine Einträge finden die Muster entsprechen: %s"
 
-#: builtin/clean.c:717
+#: builtin/clean.c:715
 msgid "Select items to delete"
 msgstr "Wählen Sie Einträge zum Löschen"
 
 #. TRANSLATORS: Make sure to keep [y/N] as is
-#: builtin/clean.c:758
+#: builtin/clean.c:756
 #, c-format
 msgid "Remove %s [y/N]? "
 msgstr "'%s' löschen [y/N]? "
 
-#: builtin/clean.c:783
+#: builtin/clean.c:781
 msgid "Bye."
 msgstr "Tschüss."
 
-#: builtin/clean.c:791
+#: builtin/clean.c:789
 msgid ""
 "clean               - start cleaning\n"
 "filter by pattern   - exclude items from deletion\n"
 "select by numbers   - select items to be deleted by numbers\n"
 "ask each            - confirm each deletion (like \"rm -i\")\n"
 "quit                - stop cleaning\n"
@@ -3883,364 +3976,365 @@
 "select by numbers   - Auswahl von Einträgen über Nummern\n"
 "ask each            - jede Löschung bestätigen (wie \"rm -i\")\n"
 "quit                - Clean beenden\n"
 "help                - diese Meldung anzeigen\n"
 "?                   - Hilfe zur Auswahl mittels Eingabe anzeigen"
 
-#: builtin/clean.c:818
+#: builtin/clean.c:816
 msgid "*** Commands ***"
 msgstr "*** Kommandos ***"
 
-#: builtin/clean.c:819
+#: builtin/clean.c:817
 msgid "What now"
 msgstr "Was nun"
 
-#: builtin/clean.c:827
+#: builtin/clean.c:825
 msgid "Would remove the following item:"
 msgid_plural "Would remove the following items:"
 msgstr[0] "Würde das folgende Element entfernen:"
 msgstr[1] "Würde die folgenden Elemente entfernen:"
 
-#: builtin/clean.c:844
+#: builtin/clean.c:842
 msgid "No more files to clean, exiting."
 msgstr "Keine Dateien mehr zum Löschen, beende."
 
-#: builtin/clean.c:875
+#: builtin/clean.c:873
 msgid "do not print names of files removed"
 msgstr "keine Namen von gelöschten Dateien ausgeben"
 
-#: builtin/clean.c:877
+#: builtin/clean.c:875
 msgid "force"
 msgstr "Aktion erzwingen"
 
-#: builtin/clean.c:878
+#: builtin/clean.c:876
 msgid "interactive cleaning"
 msgstr "interaktives Clean"
 
-#: builtin/clean.c:880
+#: builtin/clean.c:878
 msgid "remove whole directories"
 msgstr "ganze Verzeichnisse löschen"
 
-#: builtin/clean.c:881 builtin/describe.c:407 builtin/grep.c:714
-#: builtin/ls-files.c:443 builtin/name-rev.c:311 builtin/show-ref.c:185
+#: builtin/clean.c:879 builtin/describe.c:407 builtin/grep.c:714
+#: builtin/ls-files.c:443 builtin/name-rev.c:311 builtin/show-ref.c:187
 msgid "pattern"
 msgstr "Muster"
 
-#: builtin/clean.c:882
+#: builtin/clean.c:880
 msgid "add <pattern> to ignore rules"
 msgstr "<Muster> zu den Regeln für ignorierte Pfade hinzufügen"
 
-#: builtin/clean.c:883
+#: builtin/clean.c:881
 msgid "remove ignored files, too"
 msgstr "auch ignorierte Dateien löschen"
 
-#: builtin/clean.c:885
+#: builtin/clean.c:883
 msgid "remove only ignored files"
 msgstr "nur ignorierte Dateien löschen"
 
-#: builtin/clean.c:903
+#: builtin/clean.c:901
 msgid "-x and -X cannot be used together"
 msgstr "Die Optionen -x und -X können nicht gemeinsam verwendet werden."
 
-#: builtin/clean.c:907
+#: builtin/clean.c:905
 msgid ""
 "clean.requireForce set to true and neither -i, -n, nor -f given; refusing to "
 "clean"
 msgstr ""
 "clean.requireForce auf \"true\" gesetzt und weder -i, -n noch -f gegeben; "
 "\"clean\" verweigert"
 
-#: builtin/clean.c:910
+#: builtin/clean.c:908
 msgid ""
 "clean.requireForce defaults to true and neither -i, -n, nor -f given; "
 "refusing to clean"
 msgstr ""
 "clean.requireForce standardmäßig auf \"true\" gesetzt und weder -i, -n noch -"
 "f gegeben; \"clean\" verweigert"
 
 #: builtin/clone.c:37
 msgid "git clone [<options>] [--] <repo> [<dir>]"
 msgstr "git clone [<Optionen>] [--] <Repository> [<Verzeichnis>]"
 
-#: builtin/clone.c:66 builtin/fetch.c:111 builtin/merge.c:224
+#: builtin/clone.c:57 builtin/fetch.c:111 builtin/merge.c:224
 #: builtin/push.c:523
 msgid "force progress reporting"
 msgstr "Fortschrittsanzeige erzwingen"
 
-#: builtin/clone.c:68
+#: builtin/clone.c:59
 msgid "don't create a checkout"
 msgstr "kein Auschecken"
 
-#: builtin/clone.c:69 builtin/clone.c:71 builtin/init-db.c:496
+#: builtin/clone.c:60 builtin/clone.c:62 builtin/init-db.c:503
 msgid "create a bare repository"
 msgstr "ein Bare-Repository erstellen"
 
-#: builtin/clone.c:73
+#: builtin/clone.c:64
 msgid "create a mirror repository (implies bare)"
 msgstr "ein Spiegelarchiv erstellen (impliziert --bare)"
 
-#: builtin/clone.c:75
+#: builtin/clone.c:66
 msgid "to clone from a local repository"
 msgstr "von einem lokalen Repository klonen"
 
-#: builtin/clone.c:77
+#: builtin/clone.c:68
 msgid "don't use local hardlinks, always copy"
 msgstr "lokal keine harten Verweise verwenden, immer Kopien"
 
-#: builtin/clone.c:79
+#: builtin/clone.c:70
 msgid "setup as shared repository"
 msgstr "als verteiltes Repository einrichten"
 
-#: builtin/clone.c:81 builtin/clone.c:83
+#: builtin/clone.c:72 builtin/clone.c:74
 msgid "initialize submodules in the clone"
 msgstr "Submodule im Klon initialisieren"
 
-#: builtin/clone.c:84 builtin/init-db.c:493
+#: builtin/clone.c:75 builtin/init-db.c:500
 msgid "template-directory"
 msgstr "Vorlagenverzeichnis"
 
-#: builtin/clone.c:85 builtin/init-db.c:494
+#: builtin/clone.c:76 builtin/init-db.c:501
 msgid "directory from which templates will be used"
 msgstr "Verzeichnis, von welchem die Vorlagen verwendet werden"
 
-#: builtin/clone.c:87
+#: builtin/clone.c:78
 msgid "reference repository"
 msgstr "Repository referenzieren"
 
-#: builtin/clone.c:88 builtin/column.c:26 builtin/merge-file.c:44
+#: builtin/clone.c:80
+msgid "use --reference only while cloning"
+msgstr "--reference nur während des Klonens benutzen"
+
+#: builtin/clone.c:81 builtin/column.c:26 builtin/merge-file.c:44
 msgid "name"
 msgstr "Name"
 
-#: builtin/clone.c:89
+#: builtin/clone.c:82
 msgid "use <name> instead of 'origin' to track upstream"
 msgstr "<Name> statt 'origin' für Upstream-Repository verwenden"
 
-#: builtin/clone.c:91
+#: builtin/clone.c:84
 msgid "checkout <branch> instead of the remote's HEAD"
 msgstr "<Branch> auschecken, anstatt HEAD des Remote-Repositories"
 
-#: builtin/clone.c:93
+#: builtin/clone.c:86
 msgid "path to git-upload-pack on the remote"
 msgstr "Pfad zu \"git-upload-pack\" auf der Gegenseite"
 
-#: builtin/clone.c:94 builtin/fetch.c:112 builtin/grep.c:659
+#: builtin/clone.c:87 builtin/fetch.c:112 builtin/grep.c:659
 msgid "depth"
 msgstr "Tiefe"
 
-#: builtin/clone.c:95
+#: builtin/clone.c:88
 msgid "create a shallow clone of that depth"
 msgstr ""
 "einen Klon mit unvollständiger Historie (shallow) in dieser Tiefe erstellen"
 
-#: builtin/clone.c:97
+#: builtin/clone.c:90
 msgid "clone only one branch, HEAD or --branch"
 msgstr "nur einen Branch klonen, HEAD oder --branch"
 
-#: builtin/clone.c:99
-msgid "use --reference only while cloning"
-msgstr "--reference nur während des Klonens benutzen"
-
-#: builtin/clone.c:100 builtin/init-db.c:502
+#: builtin/clone.c:91 builtin/init-db.c:509
 msgid "gitdir"
 msgstr ".git-Verzeichnis"
 
-#: builtin/clone.c:101 builtin/init-db.c:503
+#: builtin/clone.c:92 builtin/init-db.c:510
 msgid "separate git dir from working tree"
 msgstr "Git-Verzeichnis vom Arbeitsverzeichnis separieren"
 
-#: builtin/clone.c:102
+#: builtin/clone.c:93
 msgid "key=value"
 msgstr "Schlüssel=Wert"
 
-#: builtin/clone.c:103
+#: builtin/clone.c:94
 msgid "set config inside the new repository"
 msgstr "Konfiguration innerhalb des neuen Repositories setzen"
 
-#: builtin/clone.c:256
+#: builtin/clone.c:240
 #, c-format
 msgid "reference repository '%s' is not a local repository."
 msgstr "Referenziertes Repository '%s' ist kein lokales Repository."
 
-#: builtin/clone.c:260
+#: builtin/clone.c:244
 #, c-format
 msgid "reference repository '%s' is shallow"
 msgstr ""
 "Referenziertes Repository '%s' hat eine unvollständige Historie (shallow)."
 
-#: builtin/clone.c:263
+#: builtin/clone.c:247
 #, c-format
 msgid "reference repository '%s' is grafted"
 msgstr ""
 "Referenziertes Repository '%s' ist mit künstlichen Vorgängern (\"grafts\") "
 "eingehängt."
 
-#: builtin/clone.c:325
+#: builtin/clone.c:310
 #, c-format
 msgid "failed to create directory '%s'"
 msgstr "Fehler beim Erstellen von Verzeichnis '%s'"
 
-#: builtin/clone.c:327 builtin/diff.c:84
+#: builtin/clone.c:312 builtin/diff.c:84
 #, c-format
 msgid "failed to stat '%s'"
 msgstr "Konnte '%s' nicht lesen"
 
-#: builtin/clone.c:329
+#: builtin/clone.c:314
 #, c-format
 msgid "%s exists and is not a directory"
 msgstr "%s existiert und ist kein Verzeichnis"
 
-#: builtin/clone.c:343
+#: builtin/clone.c:328
 #, c-format
 msgid "failed to stat %s\n"
 msgstr "Konnte %s nicht lesen\n"
 
-#: builtin/clone.c:365
+#: builtin/clone.c:350
 #, c-format
 msgid "failed to create link '%s'"
 msgstr "Konnte Verweis '%s' nicht erstellen"
 
-#: builtin/clone.c:369
+#: builtin/clone.c:354
 #, c-format
 msgid "failed to copy file to '%s'"
 msgstr "Konnte Datei nicht nach '%s' kopieren"
 
-#: builtin/clone.c:392 builtin/clone.c:566
+#: builtin/clone.c:377 builtin/clone.c:551
 #, c-format
 msgid "done.\n"
 msgstr "Fertig.\n"
 
-#: builtin/clone.c:404
+#: builtin/clone.c:389
 msgid ""
 "Clone succeeded, but checkout failed.\n"
 "You can inspect what was checked out with 'git status'\n"
 "and retry the checkout with 'git checkout -f HEAD'\n"
 msgstr ""
 "Klonen erfolgreich, Auschecken ist aber fehlgeschlagen.\n"
 "Sie können mit 'git status' prüfen, was ausgecheckt worden ist\n"
 "und das Auschecken mit 'git checkout -f HEAD' erneut versuchen.\n"
 
-#: builtin/clone.c:481
+#: builtin/clone.c:466
 #, c-format
 msgid "Could not find remote branch %s to clone."
 msgstr "Konnte zu klonenden Remote-Branch %s nicht finden."
 
-#: builtin/clone.c:561
+#: builtin/clone.c:546
 #, c-format
 msgid "Checking connectivity... "
 msgstr "Prüfe Konnektivität ... "
 
-#: builtin/clone.c:564
+#: builtin/clone.c:549
 msgid "remote did not send all necessary objects"
 msgstr "Remote-Repository hat nicht alle erforderlichen Objekte gesendet."
 
-#: builtin/clone.c:628
+#: builtin/clone.c:613
 msgid "remote HEAD refers to nonexistent ref, unable to checkout.\n"
 msgstr ""
 "Externer HEAD bezieht sich auf eine nicht existierende Referenz und kann "
 "nicht ausgecheckt werden.\n"
 
-#: builtin/clone.c:659
+#: builtin/clone.c:644
 msgid "unable to checkout working tree"
 msgstr "Arbeitsverzeichnis konnte nicht ausgecheckt werden"
 
-#: builtin/clone.c:746
+#: builtin/clone.c:731
 msgid "cannot repack to clean up"
 msgstr "Kann \"repack\" zum Aufräumen nicht aufrufen"
 
-#: builtin/clone.c:748
+#: builtin/clone.c:733
 msgid "cannot unlink temporary alternates file"
 msgstr "Kann temporäre \"alternates\"-Datei nicht entfernen"
 
-#: builtin/clone.c:778
+#: builtin/clone.c:763
 msgid "Too many arguments."
 msgstr "Zu viele Argumente."
 
-#: builtin/clone.c:782
+#: builtin/clone.c:767
 msgid "You must specify a repository to clone."
 msgstr "Sie müssen ein Repository zum Klonen angeben."
 
-#: builtin/clone.c:793
+#: builtin/clone.c:778
 #, c-format
 msgid "--bare and --origin %s options are incompatible."
 msgstr "Die Optionen --bare und --origin %s sind inkompatibel."
 
-#: builtin/clone.c:796
+#: builtin/clone.c:781
 msgid "--bare and --separate-git-dir are incompatible."
 msgstr "Die Optionen --bare und --separate-git-dir sind inkompatibel."
 
-#: builtin/clone.c:809
+#: builtin/clone.c:794
 #, c-format
 msgid "repository '%s' does not exist"
 msgstr "Repository '%s' existiert nicht."
 
-#: builtin/clone.c:815 builtin/fetch.c:1156
+#: builtin/clone.c:800 builtin/fetch.c:1160
 #, c-format
 msgid "depth %s is not a positive number"
 msgstr "Tiefe %s ist keine positive Zahl"
 
-#: builtin/clone.c:825
+#: builtin/clone.c:810
 #, c-format
 msgid "destination path '%s' already exists and is not an empty directory."
 msgstr "Zielpfad '%s' existiert bereits und ist kein leeres Verzeichnis."
 
-#: builtin/clone.c:835
+#: builtin/clone.c:820
 #, c-format
 msgid "working tree '%s' already exists."
 msgstr "Arbeitsverzeichnis '%s' existiert bereits."
 
-#: builtin/clone.c:850 builtin/clone.c:861
+#: builtin/clone.c:835 builtin/clone.c:846 builtin/worktree.c:193
+#: builtin/worktree.c:220
 #, c-format
 msgid "could not create leading directories of '%s'"
 msgstr "Konnte führende Verzeichnisse von '%s' nicht erstellen."
 
-#: builtin/clone.c:853
+#: builtin/clone.c:838
 #, c-format
 msgid "could not create work tree dir '%s'"
 msgstr "Konnte Arbeitsverzeichnis '%s' nicht erstellen"
 
-#: builtin/clone.c:871
+#: builtin/clone.c:856
 #, c-format
 msgid "Cloning into bare repository '%s'...\n"
 msgstr "Klone in Bare-Repository '%s' ...\n"
 
-#: builtin/clone.c:873
+#: builtin/clone.c:858
 #, c-format
 msgid "Cloning into '%s'...\n"
 msgstr "Klone nach '%s' ...\n"
 
-#: builtin/clone.c:898
+#: builtin/clone.c:883
 msgid "--dissociate given, but there is no --reference"
 msgstr "--dissociate ohne --reference angegeben"
 
-#: builtin/clone.c:913
+#: builtin/clone.c:900
 msgid "--depth is ignored in local clones; use file:// instead."
 msgstr ""
 "Die Option --depth wird in lokalen Klonen ignoriert; benutzen Sie "
 "stattdessen file://"
 
-#: builtin/clone.c:916
+#: builtin/clone.c:903
 msgid "source repository is shallow, ignoring --local"
 msgstr ""
 "Quelle ist ein Repository mit unvollständiger Historie (shallow),ignoriere --"
 "local"
 
-#: builtin/clone.c:921
+#: builtin/clone.c:908
 msgid "--local is ignored"
 msgstr "--local wird ignoriert"
 
-#: builtin/clone.c:925
+#: builtin/clone.c:912
 #, c-format
 msgid "Don't know how to clone %s"
 msgstr "Weiß nicht wie %s zu klonen ist."
 
-#: builtin/clone.c:976 builtin/clone.c:984
+#: builtin/clone.c:961 builtin/clone.c:969
 #, c-format
 msgid "Remote branch %s not found in upstream %s"
 msgstr "Remote-Branch %s nicht im Upstream-Repository %s gefunden"
 
-#: builtin/clone.c:987
+#: builtin/clone.c:972
 msgid "You appear to have cloned an empty repository."
 msgstr "Sie scheinen ein leeres Repository geklont zu haben."
 
 #: builtin/column.c:9
 msgid "git column [<options>]"
 msgstr "git column [<Optionen>]"
@@ -4383,25 +4477,25 @@
 #: builtin/commit.c:304
 msgid "failed to unpack HEAD tree object"
 msgstr "Fehler beim Entpacken des \"Tree\"-Objektes von HEAD."
 
 #: builtin/commit.c:344
 msgid "unable to create temporary index"
-msgstr "Konnte temporäre Staging-Area nicht erstellen."
+msgstr "Konnte temporären Index nicht erstellen."
 
 #: builtin/commit.c:350
 msgid "interactive add failed"
 msgstr "interaktives Hinzufügen fehlgeschlagen"
 
 #: builtin/commit.c:361
 msgid "unable to write index file"
-msgstr "Konnte Staging-Area-Datei nicht schreiben."
+msgstr "Konnte Index-Datei nicht schreiben."
 
 #: builtin/commit.c:363
 msgid "unable to update temporary index"
-msgstr "Konnte temporäre Staging-Area nicht aktualisieren."
+msgstr "Konnte temporären Index nicht aktualisieren."
 
 #: builtin/commit.c:365
 msgid "Failed to update main cache tree"
 msgstr "Konnte Haupt-Cache-Verzeichnis nicht aktualisieren"
 
 #: builtin/commit.c:389 builtin/commit.c:414 builtin/commit.c:463
@@ -4416,17 +4510,17 @@
 msgid "cannot do a partial commit during a cherry-pick."
 msgstr ""
 "Kann keinen Teil-Commit durchführen, während \"cherry-pick\" im Gange ist."
 
 #: builtin/commit.c:456
 msgid "cannot read the index"
-msgstr "Kann Staging-Area nicht lesen"
+msgstr "Kann Index nicht lesen"
 
 #: builtin/commit.c:475
 msgid "unable to write temporary index file"
-msgstr "Konnte temporäre Staging-Area-Datei nicht schreiben."
+msgstr "Konnte temporäre Index-Datei nicht schreiben."
 
 #: builtin/commit.c:580
 #, c-format
 msgid "commit '%s' lacks author header"
 msgstr "Commit '%s' fehlt Autor-Kopfbereich"
 
@@ -4476,13 +4570,13 @@
 msgstr "Konnte MERGE_MSG nicht lesen"
 
 #: builtin/commit.c:734
 msgid "could not read SQUASH_MSG"
 msgstr "Konnte SQUASH_MSG nicht lesen"
 
-#: builtin/commit.c:738
+#: builtin/commit.c:738 builtin/merge.c:1079
 #, c-format
 msgid "could not read '%s'"
 msgstr "Konnte '%s' nicht lesen"
 
 #: builtin/commit.c:785
 msgid "could not write commit template"
@@ -4555,13 +4649,13 @@
 #, c-format
 msgid "%sCommitter: %.*s <%.*s>"
 msgstr "%sCommit-Ersteller: %.*s <%.*s>"
 
 #: builtin/commit.c:881
 msgid "Cannot read index"
-msgstr "Kann Staging-Area nicht lesen"
+msgstr "Kann Index nicht lesen"
 
 #: builtin/commit.c:938
 msgid "Error building trees"
 msgstr "Fehler beim Erzeugen der \"Tree\"-Objekte"
 
 #: builtin/commit.c:953 builtin/tag.c:495
@@ -4633,14 +4727,13 @@
 msgstr ""
 "Die Optionen --include und --only können nur mit der Angabe von Pfaden "
 "verwendet werden."
 
 #: builtin/commit.c:1195
 msgid "Clever... amending the last one with dirty index."
-msgstr ""
-"Klug ... den letzten Commit mit einer geänderten Staging-Area nachbessern."
+msgstr "Klug ... den letzten Commit mit einem geänderten Index nachbessern."
 
 #: builtin/commit.c:1197
 msgid "Explicit paths specified without -i or -o; assuming --only paths..."
 msgstr "Explizite Pfade ohne -i oder -o angegeben; nehme --only an"
 
 #: builtin/commit.c:1209 builtin/tag.c:728
@@ -4649,48 +4742,48 @@
 msgstr "Ungültiger \"cleanup\" Modus %s"
 
 #: builtin/commit.c:1214
 msgid "Paths with -a does not make sense."
 msgstr "Die Option -a kann nicht mit der Angabe von Pfaden verwendet werden."
 
-#: builtin/commit.c:1324 builtin/commit.c:1604
+#: builtin/commit.c:1324 builtin/commit.c:1603
 msgid "show status concisely"
 msgstr "Status im Kurzformat anzeigen"
 
-#: builtin/commit.c:1326 builtin/commit.c:1606
+#: builtin/commit.c:1326 builtin/commit.c:1605
 msgid "show branch information"
 msgstr "Branchinformationen anzeigen"
 
-#: builtin/commit.c:1328 builtin/commit.c:1608 builtin/push.c:509
+#: builtin/commit.c:1328 builtin/commit.c:1607 builtin/push.c:509
 msgid "machine-readable output"
 msgstr "maschinenlesbare Ausgabe"
 
-#: builtin/commit.c:1331 builtin/commit.c:1610
+#: builtin/commit.c:1331 builtin/commit.c:1609
 msgid "show status in long format (default)"
 msgstr "Status im Langformat anzeigen (Standard)"
 
-#: builtin/commit.c:1334 builtin/commit.c:1613
+#: builtin/commit.c:1334 builtin/commit.c:1612
 msgid "terminate entries with NUL"
 msgstr "Einträge mit NUL-Zeichen abschließen"
 
-#: builtin/commit.c:1336 builtin/commit.c:1616 builtin/fast-export.c:980
+#: builtin/commit.c:1336 builtin/commit.c:1615 builtin/fast-export.c:980
 #: builtin/fast-export.c:983 builtin/tag.c:603
 msgid "mode"
 msgstr "Modus"
 
-#: builtin/commit.c:1337 builtin/commit.c:1616
+#: builtin/commit.c:1337 builtin/commit.c:1615
 msgid "show untracked files, optional modes: all, normal, no. (Default: all)"
 msgstr ""
 "unversionierte Dateien anzeigen, optionale Modi: all, normal, no. (Standard: "
 "all)"
 
 #: builtin/commit.c:1340
 msgid "show ignored files"
 msgstr "ignorierte Dateien anzeigen"
 
-#: builtin/commit.c:1341 parse-options.h:153
+#: builtin/commit.c:1341 parse-options.h:152
 msgid "when"
 msgstr "wann"
 
 #: builtin/commit.c:1342
 msgid ""
 "ignore changes to submodules, optional when: all, dirty, untracked. "
@@ -4700,213 +4793,213 @@
 "(Standard: all)"
 
 #: builtin/commit.c:1344
 msgid "list untracked files in columns"
 msgstr "unversionierte Dateien in Spalten auflisten"
 
-#: builtin/commit.c:1431
+#: builtin/commit.c:1430
 msgid "couldn't look up newly created commit"
 msgstr "Konnte neu erstellten Commit nicht nachschlagen."
 
-#: builtin/commit.c:1433
+#: builtin/commit.c:1432
 msgid "could not parse newly created commit"
 msgstr "Konnte neulich erstellten Commit nicht analysieren."
 
-#: builtin/commit.c:1478
+#: builtin/commit.c:1477
 msgid "detached HEAD"
 msgstr "losgelöster HEAD"
 
-#: builtin/commit.c:1481
+#: builtin/commit.c:1480
 msgid " (root-commit)"
 msgstr " (Basis-Commit)"
 
-#: builtin/commit.c:1574
+#: builtin/commit.c:1573
 msgid "suppress summary after successful commit"
 msgstr "Zusammenfassung nach erfolgreichem Commit unterdrücken"
 
-#: builtin/commit.c:1575
+#: builtin/commit.c:1574
 msgid "show diff in commit message template"
 msgstr "Unterschiede in Commit-Beschreibungsvorlage anzeigen"
 
-#: builtin/commit.c:1577
+#: builtin/commit.c:1576
 msgid "Commit message options"
 msgstr "Optionen für Commit-Beschreibung"
 
-#: builtin/commit.c:1578 builtin/tag.c:601
+#: builtin/commit.c:1577 builtin/tag.c:601
 msgid "read message from file"
 msgstr "Beschreibung von Datei lesen"
 
-#: builtin/commit.c:1579
+#: builtin/commit.c:1578
 msgid "author"
 msgstr "Autor"
 
-#: builtin/commit.c:1579
+#: builtin/commit.c:1578
 msgid "override author for commit"
 msgstr "Autor eines Commits überschreiben"
 
-#: builtin/commit.c:1580 builtin/gc.c:275
+#: builtin/commit.c:1579 builtin/gc.c:280
 msgid "date"
 msgstr "Datum"
 
-#: builtin/commit.c:1580
+#: builtin/commit.c:1579
 msgid "override date for commit"
 msgstr "Datum eines Commits überschreiben"
 
-#: builtin/commit.c:1581 builtin/merge.c:218 builtin/notes.c:391
+#: builtin/commit.c:1580 builtin/merge.c:218 builtin/notes.c:391
 #: builtin/notes.c:554 builtin/tag.c:599
 msgid "message"
 msgstr "Beschreibung"
 
-#: builtin/commit.c:1581
+#: builtin/commit.c:1580
 msgid "commit message"
 msgstr "Commit-Beschreibung"
 
-#: builtin/commit.c:1582
+#: builtin/commit.c:1581
 msgid "reuse and edit message from specified commit"
 msgstr "Beschreibung des angegebenen Commits wiederverwenden und editieren"
 
-#: builtin/commit.c:1583
+#: builtin/commit.c:1582
 msgid "reuse message from specified commit"
 msgstr "Beschreibung des angegebenen Commits wiederverwenden"
 
-#: builtin/commit.c:1584
+#: builtin/commit.c:1583
 msgid "use autosquash formatted message to fixup specified commit"
 msgstr ""
 "eine automatisch zusammengesetzte Beschreibung zum Nachbessern des "
 "angegebenen Commits verwenden"
 
-#: builtin/commit.c:1585
+#: builtin/commit.c:1584
 msgid "use autosquash formatted message to squash specified commit"
 msgstr ""
 "eine automatisch zusammengesetzte Beschreibung beim \"squash\" des "
 "angegebenen Commits verwenden"
 
-#: builtin/commit.c:1586
+#: builtin/commit.c:1585
 msgid "the commit is authored by me now (used with -C/-c/--amend)"
 msgstr "Sie als Autor des Commits setzen (verwendet mit -C/-c/--amend)"
 
-#: builtin/commit.c:1587 builtin/log.c:1191 builtin/revert.c:86
+#: builtin/commit.c:1586 builtin/log.c:1191 builtin/revert.c:86
 msgid "add Signed-off-by:"
 msgstr "'Signed-off-by:'-Zeile hinzufügen"
 
-#: builtin/commit.c:1588
+#: builtin/commit.c:1587
 msgid "use specified template file"
 msgstr "angegebene Vorlagendatei verwenden"
 
-#: builtin/commit.c:1589
+#: builtin/commit.c:1588
 msgid "force edit of commit"
 msgstr "Bearbeitung des Commits erzwingen"
 
-#: builtin/commit.c:1590
+#: builtin/commit.c:1589
 msgid "default"
 msgstr "Standard"
 
-#: builtin/commit.c:1590 builtin/tag.c:604
+#: builtin/commit.c:1589 builtin/tag.c:604
 msgid "how to strip spaces and #comments from message"
 msgstr ""
 "wie Leerzeichen und #Kommentare von der Beschreibung getrennt werden sollen"
 
-#: builtin/commit.c:1591
+#: builtin/commit.c:1590
 msgid "include status in commit message template"
 msgstr "Status in die Commit-Beschreibungsvorlage einfügen"
 
-#: builtin/commit.c:1592 builtin/merge.c:225 builtin/revert.c:92
+#: builtin/commit.c:1591 builtin/merge.c:225 builtin/revert.c:92
 #: builtin/tag.c:605
 msgid "key-id"
 msgstr "GPG-Schlüsselkennung"
 
-#: builtin/commit.c:1593 builtin/merge.c:226 builtin/revert.c:93
+#: builtin/commit.c:1592 builtin/merge.c:226 builtin/revert.c:93
 msgid "GPG sign commit"
 msgstr "Commit mit GPG signieren"
 
-#: builtin/commit.c:1596
+#: builtin/commit.c:1595
 msgid "Commit contents options"
 msgstr "Optionen für Commit-Inhalt"
 
-#: builtin/commit.c:1597
+#: builtin/commit.c:1596
 msgid "commit all changed files"
 msgstr "alle geänderten Dateien committen"
 
-#: builtin/commit.c:1598
+#: builtin/commit.c:1597
 msgid "add specified files to index for commit"
 msgstr "die angegebenen Dateien zusätzlich zum Commit vormerken"
 
-#: builtin/commit.c:1599
+#: builtin/commit.c:1598
 msgid "interactively add files"
 msgstr "interaktives Hinzufügen von Dateien"
 
-#: builtin/commit.c:1600
+#: builtin/commit.c:1599
 msgid "interactively add changes"
 msgstr "interaktives Hinzufügen von Änderungen"
 
-#: builtin/commit.c:1601
+#: builtin/commit.c:1600
 msgid "commit only specified files"
 msgstr "nur die angegebenen Dateien committen"
 
-#: builtin/commit.c:1602
+#: builtin/commit.c:1601
 msgid "bypass pre-commit hook"
 msgstr "\"pre-commit hook\" umgehen"
 
-#: builtin/commit.c:1603
+#: builtin/commit.c:1602
 msgid "show what would be committed"
 msgstr "anzeigen, was committet werden würde"
 
-#: builtin/commit.c:1614
+#: builtin/commit.c:1613
 msgid "amend previous commit"
 msgstr "vorherigen Commit ändern"
 
-#: builtin/commit.c:1615
+#: builtin/commit.c:1614
 msgid "bypass post-rewrite hook"
 msgstr "\"post-rewrite hook\" umgehen"
 
-#: builtin/commit.c:1620
+#: builtin/commit.c:1619
 msgid "ok to record an empty change"
 msgstr "Aufzeichnung einer leeren Änderung erlauben"
 
-#: builtin/commit.c:1622
+#: builtin/commit.c:1621
 msgid "ok to record a change with an empty message"
 msgstr "Aufzeichnung einer Änderung mit einer leeren Beschreibung erlauben"
 
-#: builtin/commit.c:1651
+#: builtin/commit.c:1650
 msgid "could not parse HEAD commit"
 msgstr "Konnte Commit von HEAD nicht analysieren."
 
-#: builtin/commit.c:1690 builtin/merge.c:519
+#: builtin/commit.c:1689 builtin/merge.c:1076
 #, c-format
 msgid "could not open '%s' for reading"
 msgstr "Konnte '%s' nicht zum Lesen öffnen."
 
-#: builtin/commit.c:1697
+#: builtin/commit.c:1696
 #, c-format
 msgid "Corrupt MERGE_HEAD file (%s)"
 msgstr "Beschädigte MERGE_HEAD-Datei (%s)"
 
-#: builtin/commit.c:1704
+#: builtin/commit.c:1703
 msgid "could not read MERGE_MODE"
 msgstr "Konnte MERGE_MODE nicht lesen"
 
-#: builtin/commit.c:1723
+#: builtin/commit.c:1722
 #, c-format
 msgid "could not read commit message: %s"
 msgstr "Konnte Commit-Beschreibung nicht lesen: %s"
 
-#: builtin/commit.c:1734
+#: builtin/commit.c:1733
 #, c-format
 msgid "Aborting commit; you did not edit the message.\n"
 msgstr "Commit abgebrochen; Sie haben die Beschreibung nicht editiert.\n"
 
-#: builtin/commit.c:1739
+#: builtin/commit.c:1738
 #, c-format
 msgid "Aborting commit due to empty commit message.\n"
 msgstr "Commit aufgrund leerer Beschreibung abgebrochen.\n"
 
-#: builtin/commit.c:1754 builtin/merge.c:851 builtin/merge.c:876
+#: builtin/commit.c:1753 builtin/merge.c:829 builtin/merge.c:854
 msgid "failed to write commit object"
 msgstr "Fehler beim Schreiben des Commit-Objektes."
 
-#: builtin/commit.c:1787
+#: builtin/commit.c:1786
 msgid ""
 "Repository has been updated, but unable to write\n"
 "new_index file. Check that disk is not full and quota is\n"
 "not exceeded, and then \"git reset HEAD\" to recover."
 msgstr ""
 "Das Repository wurde aktualisiert, aber die \"new_index\"-Datei\n"
@@ -5043,24 +5136,24 @@
 msgstr "konnte Standard-Farbwert nicht parsen"
 
 #: builtin/config.c:457
 #, c-format
 msgid ""
 "# This is Git's per-user configuration file.\n"
-"[core]\n"
+"[user]\n"
 "# Please adapt and uncomment the following lines:\n"
-"#\tuser = %s\n"
+"#\tname = %s\n"
 "#\temail = %s\n"
 msgstr ""
 "# Das ist Git's benutzerspezifische Konfiguraionsdatei.\n"
-"[core]\n"
+"[user]\n"
 "# Bitte passen Sie die folgenden Zeilen an und kommentieren Sie diese aus:\n"
-"#\tuser = %s\n"
+"#\tname = %s\n"
 "#\temail = %s\n"
 
-#: builtin/config.c:589
+#: builtin/config.c:587
 #, c-format
 msgid "cannot create configuration file %s"
 msgstr "Konnte Konfigurationsdatei '%s' nicht erstellen."
 
 #: builtin/count-objects.c:55
 msgid "git count-objects [-v] [-H | --human-readable]"
@@ -5389,385 +5482,385 @@
 msgstr "Refmap"
 
 #: builtin/fetch.c:125
 msgid "specify fetch refmap"
 msgstr "Refmap für 'fetch' angeben"
 
-#: builtin/fetch.c:375
+#: builtin/fetch.c:377
 msgid "Couldn't find remote ref HEAD"
 msgstr "Konnte Remote-Referenz von HEAD nicht finden."
 
-#: builtin/fetch.c:455
+#: builtin/fetch.c:457
 #, c-format
 msgid "object %s not found"
 msgstr "Objekt %s nicht gefunden"
 
-#: builtin/fetch.c:460
+#: builtin/fetch.c:462
 msgid "[up to date]"
 msgstr "[aktuell]"
 
-#: builtin/fetch.c:474
+#: builtin/fetch.c:476
 #, c-format
 msgid "! %-*s %-*s -> %s  (can't fetch in current branch)"
 msgstr ""
 "! %-*s %-*s -> %s  (kann \"fetch\" im aktuellen Branch nicht ausführen)"
 
-#: builtin/fetch.c:475 builtin/fetch.c:561
+#: builtin/fetch.c:477 builtin/fetch.c:563
 msgid "[rejected]"
 msgstr "[zurückgewiesen]"
 
-#: builtin/fetch.c:486
+#: builtin/fetch.c:488
 msgid "[tag update]"
 msgstr "[Tag Aktualisierung]"
 
-#: builtin/fetch.c:488 builtin/fetch.c:523 builtin/fetch.c:541
+#: builtin/fetch.c:490 builtin/fetch.c:525 builtin/fetch.c:543
 msgid "  (unable to update local ref)"
 msgstr "  (kann lokale Referenz nicht aktualisieren)"
 
-#: builtin/fetch.c:506
+#: builtin/fetch.c:508
 msgid "[new tag]"
 msgstr "[neues Tag]"
 
-#: builtin/fetch.c:509
+#: builtin/fetch.c:511
 msgid "[new branch]"
 msgstr "[neuer Branch]"
 
-#: builtin/fetch.c:512
+#: builtin/fetch.c:514
 msgid "[new ref]"
 msgstr "[neue Referenz]"
 
-#: builtin/fetch.c:557
+#: builtin/fetch.c:559
 msgid "unable to update local ref"
 msgstr "kann lokale Referenz nicht aktualisieren"
 
-#: builtin/fetch.c:557
+#: builtin/fetch.c:559
 msgid "forced update"
 msgstr "Aktualisierung erzwungen"
 
-#: builtin/fetch.c:563
+#: builtin/fetch.c:565
 msgid "(non-fast-forward)"
 msgstr "(kein Vorspulen)"
 
-#: builtin/fetch.c:596 builtin/fetch.c:829
+#: builtin/fetch.c:599 builtin/fetch.c:832
 #, c-format
 msgid "cannot open %s: %s\n"
 msgstr "kann %s nicht öffnen: %s\n"
 
-#: builtin/fetch.c:605
+#: builtin/fetch.c:608
 #, c-format
 msgid "%s did not send all necessary objects\n"
 msgstr "%s hat nicht alle erforderlichen Objekte gesendet\n"
 
-#: builtin/fetch.c:623
+#: builtin/fetch.c:626
 #, c-format
 msgid "reject %s because shallow roots are not allowed to be updated"
 msgstr ""
 "%s wurde zurückgewiesen, da Ursprungs-Commits von Repositoriesmit "
 "unvollständiger Historie (shallow) nicht aktualisiert werden dürfen."
 
-#: builtin/fetch.c:711 builtin/fetch.c:794
+#: builtin/fetch.c:714 builtin/fetch.c:797
 #, c-format
 msgid "From %.*s\n"
 msgstr "Von %.*s\n"
 
-#: builtin/fetch.c:722
+#: builtin/fetch.c:725
 #, c-format
 msgid ""
 "some local refs could not be updated; try running\n"
 " 'git remote prune %s' to remove any old, conflicting branches"
 msgstr ""
 "Einige lokale Referenzen konnten nicht aktualisiert werden; versuchen Sie\n"
 "'git remote prune %s', um jeden älteren, widersprüchlichen Branch zu löschen."
 
-#: builtin/fetch.c:774
+#: builtin/fetch.c:777
 #, c-format
 msgid "   (%s will become dangling)"
 msgstr "   (%s wird unreferenziert)"
 
-#: builtin/fetch.c:775
+#: builtin/fetch.c:778
 #, c-format
 msgid "   (%s has become dangling)"
 msgstr "   (%s wurde unreferenziert)"
 
-#: builtin/fetch.c:799
+#: builtin/fetch.c:802
 msgid "[deleted]"
 msgstr "[gelöscht]"
 
-#: builtin/fetch.c:800 builtin/remote.c:1060
+#: builtin/fetch.c:803 builtin/remote.c:1057
 msgid "(none)"
 msgstr "(nichts)"
 
-#: builtin/fetch.c:819
+#: builtin/fetch.c:822
 #, c-format
 msgid "Refusing to fetch into current branch %s of non-bare repository"
 msgstr ""
 "Der \"fetch\" in den aktuellen Branch %s von einem nicht-Bare-Repository "
 "wurde verweigert."
 
-#: builtin/fetch.c:838
+#: builtin/fetch.c:841
 #, c-format
 msgid "Option \"%s\" value \"%s\" is not valid for %s"
 msgstr "Option \"%s\" Wert \"%s\" ist nicht gültig für %s"
 
-#: builtin/fetch.c:841
+#: builtin/fetch.c:844
 #, c-format
 msgid "Option \"%s\" is ignored for %s\n"
 msgstr "Option \"%s\" wird ignoriert für %s\n"
 
-#: builtin/fetch.c:897
+#: builtin/fetch.c:900
 #, c-format
 msgid "Don't know how to fetch from %s"
 msgstr "Weiß nicht wie von %s angefordert wird."
 
-#: builtin/fetch.c:1059
+#: builtin/fetch.c:1063
 #, c-format
 msgid "Fetching %s\n"
 msgstr "Fordere an von %s\n"
 
-#: builtin/fetch.c:1061 builtin/remote.c:90
+#: builtin/fetch.c:1065 builtin/remote.c:90
 #, c-format
 msgid "Could not fetch %s"
 msgstr "Konnte nicht von %s anfordern"
 
-#: builtin/fetch.c:1079
+#: builtin/fetch.c:1083
 msgid ""
 "No remote repository specified.  Please, specify either a URL or a\n"
 "remote name from which new revisions should be fetched."
 msgstr ""
 "Kein Remote-Repository angegeben. Bitte geben Sie entweder eine URL\n"
 "oder den Namen des Remote-Repositories an, von welchem neue\n"
 "Commits angefordert werden sollen."
 
-#: builtin/fetch.c:1102
+#: builtin/fetch.c:1106
 msgid "You need to specify a tag name."
 msgstr "Sie müssen den Namen des Tags angeben."
 
-#: builtin/fetch.c:1144
+#: builtin/fetch.c:1148
 msgid "--depth and --unshallow cannot be used together"
 msgstr ""
 "Die Optionen --depth und --unshallow können nicht gemeinsam verwendet werden."
 
-#: builtin/fetch.c:1146
+#: builtin/fetch.c:1150
 msgid "--unshallow on a complete repository does not make sense"
 msgstr ""
 "Die Option --unshallow kann nicht in einem Repository mit unvollständiger "
 "Historie verwendet werden."
 
-#: builtin/fetch.c:1169
+#: builtin/fetch.c:1173
 msgid "fetch --all does not take a repository argument"
 msgstr "fetch --all akzeptiert kein Repository als Argument"
 
-#: builtin/fetch.c:1171
+#: builtin/fetch.c:1175
 msgid "fetch --all does not make sense with refspecs"
 msgstr "fetch --all kann nicht mit Refspecs verwendet werden."
 
-#: builtin/fetch.c:1182
+#: builtin/fetch.c:1186
 #, c-format
 msgid "No such remote or remote group: %s"
 msgstr "Kein Remote-Repository (einzeln oder Gruppe): %s"
 
-#: builtin/fetch.c:1190
+#: builtin/fetch.c:1194
 msgid "Fetching a group and specifying refspecs does not make sense"
 msgstr ""
 "Das Abholen einer Gruppe von Remote-Repositories kann nicht mit der Angabe\n"
 "von Refspecs verwendet werden."
 
 #: builtin/fmt-merge-msg.c:13
 msgid ""
 "git fmt-merge-msg [-m <message>] [--log[=<n>] | --no-log] [--file <file>]"
 msgstr ""
 "git fmt-merge-msg [-m <Beschreibung>] [--log[=<n>] | --no-log] [--file "
 "<Datei>]"
 
-#: builtin/fmt-merge-msg.c:662 builtin/fmt-merge-msg.c:665 builtin/grep.c:698
+#: builtin/fmt-merge-msg.c:668 builtin/fmt-merge-msg.c:671 builtin/grep.c:698
 #: builtin/merge.c:198 builtin/repack.c:178 builtin/repack.c:182
-#: builtin/show-branch.c:657 builtin/show-ref.c:178 builtin/tag.c:590
-#: parse-options.h:132 parse-options.h:239
+#: builtin/show-branch.c:664 builtin/show-ref.c:180 builtin/tag.c:590
+#: parse-options.h:131 parse-options.h:238
 msgid "n"
 msgstr "Anzahl"
 
-#: builtin/fmt-merge-msg.c:663
+#: builtin/fmt-merge-msg.c:669
 msgid "populate log with at most <n> entries from shortlog"
 msgstr "Historie mit höchstens <n> Einträgen von \"shortlog\" hinzufügen"
 
-#: builtin/fmt-merge-msg.c:666
+#: builtin/fmt-merge-msg.c:672
 msgid "alias for --log (deprecated)"
 msgstr "Alias für --log (veraltet)"
 
-#: builtin/fmt-merge-msg.c:669
+#: builtin/fmt-merge-msg.c:675
 msgid "text"
 msgstr "Text"
 
-#: builtin/fmt-merge-msg.c:670
+#: builtin/fmt-merge-msg.c:676
 msgid "use <text> as start of message"
 msgstr "<Text> als Beschreibungsanfang verwenden"
 
-#: builtin/fmt-merge-msg.c:671
+#: builtin/fmt-merge-msg.c:677
 msgid "file to read from"
 msgstr "Datei zum Einlesen"
 
-#: builtin/for-each-ref.c:675
+#: builtin/for-each-ref.c:687
 msgid "unable to parse format"
 msgstr "Konnte Format nicht parsen."
 
-#: builtin/for-each-ref.c:1063
+#: builtin/for-each-ref.c:1083
 msgid "git for-each-ref [<options>] [<pattern>]"
 msgstr "git for-each-ref [<Optionen>] [<Muster>]"
 
-#: builtin/for-each-ref.c:1078
+#: builtin/for-each-ref.c:1098
 msgid "quote placeholders suitably for shells"
 msgstr "Platzhalter als Shell-String formatieren"
 
-#: builtin/for-each-ref.c:1080
+#: builtin/for-each-ref.c:1100
 msgid "quote placeholders suitably for perl"
 msgstr "Platzhalter als Perl-String formatieren"
 
-#: builtin/for-each-ref.c:1082
+#: builtin/for-each-ref.c:1102
 msgid "quote placeholders suitably for python"
 msgstr "Platzhalter als Python-String formatieren"
 
-#: builtin/for-each-ref.c:1084
+#: builtin/for-each-ref.c:1104
 msgid "quote placeholders suitably for Tcl"
 msgstr "Platzhalter als Tcl-String formatieren"
 
-#: builtin/for-each-ref.c:1087
+#: builtin/for-each-ref.c:1107
 msgid "show only <n> matched refs"
 msgstr "nur <n> passende Referenzen anzeigen"
 
-#: builtin/for-each-ref.c:1088 builtin/replace.c:438
+#: builtin/for-each-ref.c:1108 builtin/replace.c:438
 msgid "format"
 msgstr "Format"
 
-#: builtin/for-each-ref.c:1088
+#: builtin/for-each-ref.c:1108
 msgid "format to use for the output"
 msgstr "für die Ausgabe zu verwendendes Format"
 
-#: builtin/for-each-ref.c:1089
+#: builtin/for-each-ref.c:1109
 msgid "key"
 msgstr "Schüssel"
 
-#: builtin/for-each-ref.c:1090
+#: builtin/for-each-ref.c:1110
 msgid "field name to sort on"
 msgstr "sortiere nach diesem Feld"
 
 #: builtin/fsck.c:147 builtin/prune.c:137
 msgid "Checking connectivity"
 msgstr "Prüfe Konnektivität"
 
-#: builtin/fsck.c:540
+#: builtin/fsck.c:548
 msgid "Checking object directories"
 msgstr "Prüfe Objekt-Verzeichnisse"
 
-#: builtin/fsck.c:603
+#: builtin/fsck.c:611
 msgid "git fsck [<options>] [<object>...]"
 msgstr "git fsck [<Optionen>] [<Objekt>...]"
 
-#: builtin/fsck.c:609
+#: builtin/fsck.c:617
 msgid "show unreachable objects"
 msgstr "unerreichbare Objekte anzeigen"
 
-#: builtin/fsck.c:610
+#: builtin/fsck.c:618
 msgid "show dangling objects"
 msgstr "unreferenzierte Objekte anzeigen"
 
-#: builtin/fsck.c:611
+#: builtin/fsck.c:619
 msgid "report tags"
 msgstr "Tags melden"
 
-#: builtin/fsck.c:612
+#: builtin/fsck.c:620
 msgid "report root nodes"
 msgstr "Hauptwurzeln melden"
 
-#: builtin/fsck.c:613
+#: builtin/fsck.c:621
 msgid "make index objects head nodes"
-msgstr "Objekte in der Staging-Area prüfen"
+msgstr "Index-Objekte in Erreichbarkeitsprüfung einbeziehen"
 
-#: builtin/fsck.c:614
+#: builtin/fsck.c:622
 msgid "make reflogs head nodes (default)"
-msgstr "die Reflogs prüfen (Standard)"
+msgstr "Reflogs in Erreichbarkeitsprüfung einbeziehen (Standard)"
 
-#: builtin/fsck.c:615
+#: builtin/fsck.c:623
 msgid "also consider packs and alternate objects"
 msgstr "ebenso Pakete und alternative Objekte betrachten"
 
-#: builtin/fsck.c:616
+#: builtin/fsck.c:624
 msgid "enable more strict checking"
 msgstr "genauere Prüfung aktivieren"
 
-#: builtin/fsck.c:618
+#: builtin/fsck.c:626
 msgid "write dangling objects in .git/lost-found"
 msgstr "unreferenzierte Objekte nach .git/lost-found schreiben"
 
-#: builtin/fsck.c:619 builtin/prune.c:108
+#: builtin/fsck.c:627 builtin/prune.c:107
 msgid "show progress"
 msgstr "Fortschrittsanzeige anzeigen"
 
-#: builtin/fsck.c:669
+#: builtin/fsck.c:677
 msgid "Checking objects"
 msgstr "Prüfe Objekte"
 
 #: builtin/gc.c:24
 msgid "git gc [<options>]"
 msgstr "git gc [<Optionen>]"
 
-#: builtin/gc.c:79
+#: builtin/gc.c:67
 #, c-format
-msgid "Invalid gc.pruneexpire: '%s'"
-msgstr "Ungültiges Wert für \"gc.pruneexpire\": '%s'"
+msgid "Invalid %s: '%s'"
+msgstr "Ungültiger %s: '%s'"
 
-#: builtin/gc.c:107
+#: builtin/gc.c:112
 #, c-format
 msgid "insanely long object directory %.*s"
 msgstr "zu langes Objekt-Verzeichnis %.*s"
 
-#: builtin/gc.c:276
+#: builtin/gc.c:281
 msgid "prune unreferenced objects"
 msgstr "unreferenzierte Objekte entfernen"
 
-#: builtin/gc.c:278
+#: builtin/gc.c:283
 msgid "be more thorough (increased runtime)"
 msgstr "mehr Gründlichkeit (erhöht Laufzeit)"
 
-#: builtin/gc.c:279
+#: builtin/gc.c:284
 msgid "enable auto-gc mode"
 msgstr "\"auto-gc\" Modus aktivieren"
 
-#: builtin/gc.c:280
+#: builtin/gc.c:285
 msgid "force running gc even if there may be another gc running"
 msgstr ""
 "Ausführung von \"git gc\" erwzingen, selbst wenn ein anderes\n"
 "\"git gc\" bereits ausgeführt wird"
 
-#: builtin/gc.c:321
+#: builtin/gc.c:327
 #, c-format
 msgid "Auto packing the repository in background for optimum performance.\n"
 msgstr ""
 "Die Datenbank des Repositories wird für eine optimale Performance im\n"
 "Hintergrund komprimiert.\n"
 
-#: builtin/gc.c:323
+#: builtin/gc.c:329
 #, c-format
 msgid "Auto packing the repository for optimum performance.\n"
 msgstr ""
 "Die Datenbank des Projektarchivs wird für eine optimale Performance "
 "komprimiert.\n"
 
-#: builtin/gc.c:324
+#: builtin/gc.c:330
 #, c-format
 msgid "See \"git help gc\" for manual housekeeping.\n"
 msgstr "Siehe \"git help gc\" für manuelles Aufräumen.\n"
 
-#: builtin/gc.c:342
+#: builtin/gc.c:348
 #, c-format
 msgid ""
 "gc is already running on machine '%s' pid %<PRIuMAX> (use --force if not)"
 msgstr ""
 "\"git gc\" wird bereits auf Maschine '%s' pid %<PRIuMAX> ausgeführt\n"
 "(benutzen Sie --force falls nicht)"
 
-#: builtin/gc.c:364
+#: builtin/gc.c:376
 msgid ""
 "There are too many unreachable loose objects; run 'git prune' to remove them."
 msgstr ""
 "Es gibt zu viele unerreichbare lose Objekte; führen Sie 'git prune' aus, um "
 "diese zu löschen."
 
@@ -5799,13 +5892,13 @@
 #, c-format
 msgid "cannot open '%s'"
 msgstr "kann '%s' nicht öffnen"
 
 #: builtin/grep.c:638
 msgid "search in index instead of in the work tree"
-msgstr "in der Staging-Area anstatt im Arbeitsverzeichnis suchen"
+msgstr "im Index anstatt im Arbeitsverzeichnis suchen"
 
 #: builtin/grep.c:640
 msgid "find in contents not managed by git"
 msgstr "auch in Inhalten finden, die nicht von Git verwaltet werden"
 
 #: builtin/grep.c:642
@@ -5969,13 +6062,13 @@
 msgstr "Dateien mit Übereinstimmungen im Anzeigeprogramm anzeigen"
 
 #: builtin/grep.c:740
 msgid "allow calling of grep(1) (ignored by this build)"
 msgstr "den Aufruf von grep(1) erlauben (von dieser Programmversion ignoriert)"
 
-#: builtin/grep.c:741 builtin/show-ref.c:187
+#: builtin/grep.c:741 builtin/show-ref.c:189
 msgid "show usage"
 msgstr "Verwendung anzeigen"
 
 #: builtin/grep.c:808
 msgid "no pattern given."
 msgstr "keine Muster angegeben"
@@ -6005,52 +6098,52 @@
 "verwendet werden."
 
 #: builtin/grep.c:908
 msgid "both --cached and trees are given."
 msgstr "Die Option --cached kann nicht mit \"Tree\"-Objekten verwendet werden."
 
-#: builtin/hash-object.c:82
+#: builtin/hash-object.c:80
 msgid ""
 "git hash-object [-t <type>] [-w] [--path=<file> | --no-filters] [--stdin] "
 "[--] <file>..."
 msgstr ""
 "git hash-object [-t <Art>] [-w] [--path=<Datei> | --no-filters] [--stdin] "
 "[--] <Datei>..."
 
-#: builtin/hash-object.c:83
+#: builtin/hash-object.c:81
 msgid "git hash-object  --stdin-paths < <list-of-paths>"
 msgstr "git hash-object  --stdin-paths < <Liste-von-Pfaden>"
 
-#: builtin/hash-object.c:94 builtin/tag.c:612
+#: builtin/hash-object.c:92 builtin/tag.c:612
 msgid "type"
 msgstr "Art"
 
-#: builtin/hash-object.c:94
+#: builtin/hash-object.c:92
 msgid "object type"
 msgstr "Art des Objektes"
 
-#: builtin/hash-object.c:95
+#: builtin/hash-object.c:93
 msgid "write the object into the object database"
 msgstr "das Objekt in die Objektdatenbank schreiben"
 
-#: builtin/hash-object.c:97
+#: builtin/hash-object.c:95
 msgid "read the object from stdin"
 msgstr "das Objekt von der Standard-Eingabe lesen"
 
-#: builtin/hash-object.c:99
+#: builtin/hash-object.c:97
 msgid "store file as is without filters"
 msgstr "Datei wie sie ist speichern, ohne Filter"
 
-#: builtin/hash-object.c:100
+#: builtin/hash-object.c:98
 msgid ""
 "just hash any random garbage to create corrupt objects for debugging Git"
 msgstr ""
 "Hash über zufällige Daten, zur Erzeugung von beschädigten Objekten zur\n"
 "Fehlersuche in Git, erzeugen"
 
-#: builtin/hash-object.c:101
+#: builtin/hash-object.c:99
 msgid "process file as it were from this path"
 msgstr "Datei verarbeiten, als ob sie von diesem Pfad wäre"
 
 #: builtin/help.c:41
 msgid "print all available commands"
 msgstr "alle vorhandenen Kommandos anzeigen"
@@ -6172,298 +6265,298 @@
 
 #: builtin/help.c:501
 #, c-format
 msgid "`git %s' is aliased to `%s'"
 msgstr "für `git %s' wurde der Alias `%s' angelegt"
 
-#: builtin/index-pack.c:150
+#: builtin/index-pack.c:151
 #, c-format
 msgid "unable to open %s"
 msgstr "kann %s nicht öffnen"
 
-#: builtin/index-pack.c:200
+#: builtin/index-pack.c:201
 #, c-format
 msgid "object type mismatch at %s"
 msgstr "Objekt-Typen passen bei %s nicht zusammen"
 
-#: builtin/index-pack.c:220
+#: builtin/index-pack.c:221
 #, c-format
 msgid "did not receive expected object %s"
 msgstr "konnte erwartetes Objekt %s nicht empfangen"
 
-#: builtin/index-pack.c:223
+#: builtin/index-pack.c:224
 #, c-format
 msgid "object %s: expected type %s, found %s"
 msgstr "Objekt %s: erwarteter Typ %s, %s gefunden"
 
-#: builtin/index-pack.c:265
+#: builtin/index-pack.c:266
 #, c-format
 msgid "cannot fill %d byte"
 msgid_plural "cannot fill %d bytes"
 msgstr[0] "kann %d Byte nicht lesen"
 msgstr[1] "kann %d Bytes nicht lesen"
 
-#: builtin/index-pack.c:275
+#: builtin/index-pack.c:276
 msgid "early EOF"
 msgstr "zu frühes Dateiende"
 
-#: builtin/index-pack.c:276
+#: builtin/index-pack.c:277
 msgid "read error on input"
 msgstr "Fehler beim Lesen der Eingabe"
 
-#: builtin/index-pack.c:288
+#: builtin/index-pack.c:289
 msgid "used more bytes than were available"
 msgstr "verwendete mehr Bytes als verfügbar waren"
 
-#: builtin/index-pack.c:295
+#: builtin/index-pack.c:296
 msgid "pack too large for current definition of off_t"
 msgstr "Paket ist zu groß für die aktuelle Definition von off_t"
 
-#: builtin/index-pack.c:311
+#: builtin/index-pack.c:312
 #, c-format
 msgid "unable to create '%s'"
 msgstr "konnte '%s' nicht erstellen"
 
-#: builtin/index-pack.c:316
+#: builtin/index-pack.c:317
 #, c-format
 msgid "cannot open packfile '%s'"
 msgstr "Kann Paketdatei '%s' nicht öffnen"
 
-#: builtin/index-pack.c:330
+#: builtin/index-pack.c:331
 msgid "pack signature mismatch"
 msgstr "Paketsignatur stimmt nicht überein"
 
-#: builtin/index-pack.c:332
+#: builtin/index-pack.c:333
 #, c-format
 msgid "pack version %<PRIu32> unsupported"
 msgstr "Paketversion %<PRIu32> nicht unterstützt"
 
-#: builtin/index-pack.c:350
+#: builtin/index-pack.c:351
 #, c-format
 msgid "pack has bad object at offset %lu: %s"
 msgstr "Paket hat ein ungültiges Objekt bei Versatz %lu: %s"
 
-#: builtin/index-pack.c:471
+#: builtin/index-pack.c:472
 #, c-format
 msgid "inflate returned %d"
 msgstr "Dekomprimierung gab %d zurück"
 
-#: builtin/index-pack.c:520
+#: builtin/index-pack.c:521
 msgid "offset value overflow for delta base object"
 msgstr "Wert für Versatz bei Differenzobjekt übergelaufen"
 
-#: builtin/index-pack.c:528
+#: builtin/index-pack.c:529
 msgid "delta base offset is out of bound"
 msgstr ""
 "Wert für Versatz bei Differenzobjekt liegt außerhalb des gültigen Bereichs"
 
-#: builtin/index-pack.c:536
+#: builtin/index-pack.c:537
 #, c-format
 msgid "unknown object type %d"
 msgstr "Unbekannter Objekt-Typ %d"
 
-#: builtin/index-pack.c:567
+#: builtin/index-pack.c:568
 msgid "cannot pread pack file"
 msgstr "Kann Paketdatei %s nicht lesen"
 
-#: builtin/index-pack.c:569
+#: builtin/index-pack.c:570
 #, c-format
 msgid "premature end of pack file, %lu byte missing"
 msgid_plural "premature end of pack file, %lu bytes missing"
 msgstr[0] "frühzeitiges Ende der Paketdatei, vermisse %lu Byte"
 msgstr[1] "frühzeitiges Ende der Paketdatei, vermisse %lu Bytes"
 
-#: builtin/index-pack.c:595
+#: builtin/index-pack.c:596
 msgid "serious inflate inconsistency"
 msgstr "ernsthafte Inkonsistenz nach Dekomprimierung"
 
-#: builtin/index-pack.c:686 builtin/index-pack.c:692 builtin/index-pack.c:715
-#: builtin/index-pack.c:749 builtin/index-pack.c:758
+#: builtin/index-pack.c:742 builtin/index-pack.c:748 builtin/index-pack.c:771
+#: builtin/index-pack.c:805 builtin/index-pack.c:814
 #, c-format
 msgid "SHA1 COLLISION FOUND WITH %s !"
 msgstr "SHA1 KOLLISION MIT %s GEFUNDEN !"
 
-#: builtin/index-pack.c:689 builtin/pack-objects.c:162
+#: builtin/index-pack.c:745 builtin/pack-objects.c:162
 #: builtin/pack-objects.c:254
 #, c-format
 msgid "unable to read %s"
 msgstr "kann %s nicht lesen"
 
-#: builtin/index-pack.c:755
+#: builtin/index-pack.c:811
 #, c-format
 msgid "cannot read existing object %s"
 msgstr "Kann existierendes Objekt %s nicht lesen."
 
-#: builtin/index-pack.c:769
+#: builtin/index-pack.c:825
 #, c-format
 msgid "invalid blob object %s"
 msgstr "ungültiges Blob-Objekt %s"
 
-#: builtin/index-pack.c:783
+#: builtin/index-pack.c:839
 #, c-format
 msgid "invalid %s"
 msgstr "Ungültiger Objekt-Typ %s"
 
-#: builtin/index-pack.c:787
+#: builtin/index-pack.c:843
 msgid "Error in object"
 msgstr "Fehler in Objekt"
 
-#: builtin/index-pack.c:789
+#: builtin/index-pack.c:845
 #, c-format
 msgid "Not all child objects of %s are reachable"
 msgstr "Nicht alle Kind-Objekte von %s sind erreichbar"
 
-#: builtin/index-pack.c:861 builtin/index-pack.c:890
+#: builtin/index-pack.c:917 builtin/index-pack.c:948
 msgid "failed to apply delta"
 msgstr "Konnte Dateiunterschied nicht anwenden"
 
-#: builtin/index-pack.c:1055
+#: builtin/index-pack.c:1118
 msgid "Receiving objects"
 msgstr "Empfange Objekte"
 
-#: builtin/index-pack.c:1055
+#: builtin/index-pack.c:1118
 msgid "Indexing objects"
 msgstr "Indiziere Objekte"
 
-#: builtin/index-pack.c:1081
+#: builtin/index-pack.c:1150
 msgid "pack is corrupted (SHA1 mismatch)"
 msgstr "Paket ist beschädigt (SHA1 unterschiedlich)"
 
-#: builtin/index-pack.c:1086
+#: builtin/index-pack.c:1155
 msgid "cannot fstat packfile"
 msgstr "kann Paketdatei nicht lesen"
 
-#: builtin/index-pack.c:1089
+#: builtin/index-pack.c:1158
 msgid "pack has junk at the end"
 msgstr "Paketende enthält nicht verwendbaren Inhalt"
 
-#: builtin/index-pack.c:1100
+#: builtin/index-pack.c:1169
 msgid "confusion beyond insanity in parse_pack_objects()"
 msgstr "Fehler beim Ausführen von \"parse_pack_objects()\""
 
-#: builtin/index-pack.c:1123
+#: builtin/index-pack.c:1194
 msgid "Resolving deltas"
 msgstr "Löse Unterschiede auf"
 
-#: builtin/index-pack.c:1133
+#: builtin/index-pack.c:1205
 #, c-format
 msgid "unable to create thread: %s"
 msgstr "kann Thread nicht erzeugen: %s"
 
-#: builtin/index-pack.c:1175
+#: builtin/index-pack.c:1247
 msgid "confusion beyond insanity"
 msgstr "Fehler beim Auflösen der Unterschiede"
 
-#: builtin/index-pack.c:1181
+#: builtin/index-pack.c:1253
 #, c-format
 msgid "completed with %d local objects"
 msgstr "abgeschlossen mit %d lokalen Objekten"
 
-#: builtin/index-pack.c:1191
+#: builtin/index-pack.c:1263
 #, c-format
 msgid "Unexpected tail checksum for %s (disk corruption?)"
 msgstr "Unerwartete Prüfsumme für %s (Festplattenfehler?)"
 
-#: builtin/index-pack.c:1195
+#: builtin/index-pack.c:1267
 #, c-format
 msgid "pack has %d unresolved delta"
 msgid_plural "pack has %d unresolved deltas"
 msgstr[0] "Paket hat %d unaufgelöste Unterschied"
 msgstr[1] "Paket hat %d unaufgelöste Unterschiede"
 
-#: builtin/index-pack.c:1219
+#: builtin/index-pack.c:1291
 #, c-format
 msgid "unable to deflate appended object (%d)"
 msgstr "Konnte angehängtes Objekt (%d) nicht komprimieren"
 
-#: builtin/index-pack.c:1298
+#: builtin/index-pack.c:1367
 #, c-format
 msgid "local object %s is corrupt"
 msgstr "lokales Objekt %s ist beschädigt"
 
-#: builtin/index-pack.c:1322
+#: builtin/index-pack.c:1391
 msgid "error while closing pack file"
 msgstr "Fehler beim Schließen der Paketdatei"
 
-#: builtin/index-pack.c:1335
+#: builtin/index-pack.c:1404
 #, c-format
 msgid "cannot write keep file '%s'"
 msgstr "Kann Paketbeschreibungsdatei '%s' nicht schreiben"
 
-#: builtin/index-pack.c:1343
+#: builtin/index-pack.c:1412
 #, c-format
 msgid "cannot close written keep file '%s'"
 msgstr "Kann eben erstellte Paketbeschreibungsdatei '%s' nicht schließen"
 
-#: builtin/index-pack.c:1356
+#: builtin/index-pack.c:1425
 msgid "cannot store pack file"
 msgstr "Kann Paketdatei nicht speichern"
 
-#: builtin/index-pack.c:1367
+#: builtin/index-pack.c:1436
 msgid "cannot store index file"
 msgstr "Kann Indexdatei nicht speichern"
 
-#: builtin/index-pack.c:1400
+#: builtin/index-pack.c:1469
 #, c-format
 msgid "bad pack.indexversion=%<PRIu32>"
 msgstr "\"pack.indexversion=%<PRIu32>\" ist ungültig"
 
-#: builtin/index-pack.c:1406
+#: builtin/index-pack.c:1475
 #, c-format
 msgid "invalid number of threads specified (%d)"
 msgstr "ungültige Anzahl von Threads angegeben (%d)"
 
-#: builtin/index-pack.c:1410 builtin/index-pack.c:1589
+#: builtin/index-pack.c:1479 builtin/index-pack.c:1658
 #, c-format
 msgid "no threads support, ignoring %s"
 msgstr "keine Unterstützung von Threads, '%s' wird ignoriert"
 
-#: builtin/index-pack.c:1468
+#: builtin/index-pack.c:1537
 #, c-format
 msgid "Cannot open existing pack file '%s'"
 msgstr "Kann existierende Paketdatei '%s' nicht öffnen"
 
-#: builtin/index-pack.c:1470
+#: builtin/index-pack.c:1539
 #, c-format
 msgid "Cannot open existing pack idx file for '%s'"
 msgstr "Kann existierende Indexdatei für Paket '%s' nicht öffnen"
 
-#: builtin/index-pack.c:1517
+#: builtin/index-pack.c:1586
 #, c-format
 msgid "non delta: %d object"
 msgid_plural "non delta: %d objects"
 msgstr[0] "kein Unterschied: %d Objekt"
 msgstr[1] "kein Unterschied: %d Objekte"
 
-#: builtin/index-pack.c:1524
+#: builtin/index-pack.c:1593
 #, c-format
 msgid "chain length = %d: %lu object"
 msgid_plural "chain length = %d: %lu objects"
 msgstr[0] "Länge der Objekt-Liste = %d: %lu Objekt"
 msgstr[1] "Länge der Objekt-Liste = %d: %lu Objekte"
 
-#: builtin/index-pack.c:1553
+#: builtin/index-pack.c:1622
 msgid "Cannot come back to cwd"
 msgstr "Kann nicht zurück zu Arbeitsverzeichnis wechseln"
 
-#: builtin/index-pack.c:1601 builtin/index-pack.c:1604
-#: builtin/index-pack.c:1616 builtin/index-pack.c:1620
+#: builtin/index-pack.c:1670 builtin/index-pack.c:1673
+#: builtin/index-pack.c:1685 builtin/index-pack.c:1689
 #, c-format
 msgid "bad %s"
 msgstr "%s ist ungültig"
 
-#: builtin/index-pack.c:1634
+#: builtin/index-pack.c:1703
 msgid "--fix-thin cannot be used without --stdin"
 msgstr "Die Option --fix-thin kann nicht ohne --stdin verwendet werden."
 
-#: builtin/index-pack.c:1638 builtin/index-pack.c:1647
+#: builtin/index-pack.c:1707 builtin/index-pack.c:1716
 #, c-format
 msgid "packfile name '%s' does not end with '.pack'"
 msgstr "Name der Paketdatei '%s' endet nicht mit '.pack'"
 
-#: builtin/index-pack.c:1655
+#: builtin/index-pack.c:1724
 msgid "--verify with no packfile name given"
 msgstr "Die Option --verify wurde ohne Namen der Paketdatei angegeben."
 
 #: builtin/init-db.c:35
 #, c-format
 msgid "Could not make %s writable by group"
@@ -6526,92 +6619,92 @@
 
 #: builtin/init-db.c:157
 #, c-format
 msgid "not copying templates of a wrong format version %d from '%s'"
 msgstr "kopiere keine Vorlagen mit einer falschen Formatversion %d von '%s'"
 
-#: builtin/init-db.c:197
+#: builtin/init-db.c:211
 #, c-format
 msgid "insane git directory %s"
 msgstr "ungültiges Git-Verzeichnis %s"
 
-#: builtin/init-db.c:331 builtin/init-db.c:334
+#: builtin/init-db.c:343 builtin/init-db.c:346
 #, c-format
 msgid "%s already exists"
 msgstr "%s existiert bereits"
 
-#: builtin/init-db.c:363
+#: builtin/init-db.c:374
 #, c-format
 msgid "unable to handle file type %d"
 msgstr "kann nicht mit Dateityp %d umgehen"
 
-#: builtin/init-db.c:366
+#: builtin/init-db.c:377
 #, c-format
 msgid "unable to move %s to %s"
 msgstr "Konnte %s nicht nach %s verschieben"
 
 #. TRANSLATORS: The first '%s' is either "Reinitialized
 #. existing" or "Initialized empty", the second " shared" or
 #. "", and the last '%s%s' is the verbatim directory name.
-#: builtin/init-db.c:426
+#: builtin/init-db.c:433
 #, c-format
 msgid "%s%s Git repository in %s%s\n"
 msgstr "%s%s Git-Repository in %s%s\n"
 
-#: builtin/init-db.c:427
+#: builtin/init-db.c:434
 msgid "Reinitialized existing"
 msgstr "Reinitialisierte existierendes"
 
-#: builtin/init-db.c:427
+#: builtin/init-db.c:434
 msgid "Initialized empty"
 msgstr "Initialisierte leeres"
 
-#: builtin/init-db.c:428
+#: builtin/init-db.c:435
 msgid " shared"
 msgstr " gemeinsames"
 
-#: builtin/init-db.c:475
+#: builtin/init-db.c:482
 msgid ""
 "git init [-q | --quiet] [--bare] [--template=<template-directory>] [--"
 "shared[=<permissions>]] [<directory>]"
 msgstr ""
 "git init [-q | --quiet] [--bare] [--template=<Vorlagenverzeichnis>] [--"
 "shared[=<Berechtigungen>]] [<Verzeichnis>]"
 
-#: builtin/init-db.c:498
+#: builtin/init-db.c:505
 msgid "permissions"
 msgstr "Berechtigungen"
 
-#: builtin/init-db.c:499
+#: builtin/init-db.c:506
 msgid "specify that the git repository is to be shared amongst several users"
 msgstr "angeben, dass das Git-Repository mit mehreren Benutzern geteilt wird"
 
-#: builtin/init-db.c:501 builtin/prune-packed.c:57 builtin/repack.c:171
+#: builtin/init-db.c:508 builtin/prune-packed.c:57 builtin/repack.c:171
 msgid "be quiet"
 msgstr "weniger Ausgaben"
 
-#: builtin/init-db.c:533 builtin/init-db.c:538
+#: builtin/init-db.c:540 builtin/init-db.c:545
 #, c-format
 msgid "cannot mkdir %s"
 msgstr "kann Verzeichnis %s nicht erstellen"
 
-#: builtin/init-db.c:542
+#: builtin/init-db.c:549
 #, c-format
 msgid "cannot chdir to %s"
 msgstr "kann nicht in Verzeichnis %s wechseln"
 
-#: builtin/init-db.c:563
+#: builtin/init-db.c:570
 #, c-format
 msgid ""
 "%s (or --work-tree=<directory>) not allowed without specifying %s (or --git-"
 "dir=<directory>)"
 msgstr ""
 "%s (oder --work-tree=<Verzeichnis>) nicht erlaubt ohne Spezifizierung von %s "
 "(oder --git-dir=<Verzeichnis>)"
 
-#: builtin/init-db.c:591
+#: builtin/init-db.c:598
 #, c-format
 msgid "Cannot access work tree '%s'"
 msgstr "Kann nicht auf Arbeitsverzeichnis '%s' zugreifen."
 
 #: builtin/interpret-trailers.c:15
 msgid ""
@@ -6631,13 +6724,13 @@
 
 #: builtin/interpret-trailers.c:27
 msgid "trailer(s) to add"
 msgstr "Anhang/Anhänge hinzufügen"
 
 #: builtin/log.c:41
-msgid "git log [<options>] [<revision range>] [[--] <path>...]"
+msgid "git log [<options>] [<revision-range>] [[--] <path>...]"
 msgstr "git log [<Optionen>] [<Commitbereich>] [[--] <Pfad>...]"
 
 #: builtin/log.c:42
 msgid "git show [<options>] <object>..."
 msgstr "git show [<Optionen>] <Objekt>..."
 
@@ -6700,13 +6793,13 @@
 msgstr "Kann Patch-Datei %s nicht öffnen"
 
 #: builtin/log.c:803
 msgid "Need exactly one range."
 msgstr "Brauche genau einen Commit-Bereich."
 
-#: builtin/log.c:811
+#: builtin/log.c:813
 msgid "Not a range."
 msgstr "Kein Commit-Bereich."
 
 #: builtin/log.c:919
 msgid "Cover letter needs email format"
 msgstr "Anschreiben benötigt E-Mail-Format"
@@ -6903,21 +6996,21 @@
 msgstr "Fehler beim Erstellen der Ausgabedateien."
 
 #: builtin/log.c:1583
 msgid "git cherry [-v] [<upstream> [<head> [<limit>]]]"
 msgstr "git cherry [-v] [<Upstream> [<Branch> [<Limit>]]]"
 
-#: builtin/log.c:1638
+#: builtin/log.c:1637
 #, c-format
 msgid ""
 "Could not find a tracked remote branch, please specify <upstream> manually.\n"
 msgstr ""
 "Konnte gefolgten Remote-Branch nicht finden, bitte geben Sie <Upstream> "
 "manuell an.\n"
 
-#: builtin/log.c:1651 builtin/log.c:1653 builtin/log.c:1665
+#: builtin/log.c:1648 builtin/log.c:1650 builtin/log.c:1662
 #, c-format
 msgid "Unknown commit %s"
 msgstr "Unbekannter Commit %s"
 
 #: builtin/ls-files.c:358
 msgid "git ls-files [<options>] [<file>...]"
@@ -6997,15 +7090,13 @@
 #: builtin/ls-files.c:455
 msgid "make the output relative to the project top directory"
 msgstr "Ausgabe relativ zum Projektverzeichnis"
 
 #: builtin/ls-files.c:458
 msgid "if any <file> is not in the index, treat this as an error"
-msgstr ""
-"als Fehler behandeln, wenn sich eine <Datei> nicht in der Staging-Area "
-"befindet"
+msgstr "als Fehler behandeln, wenn sich eine <Datei> nicht im Index befindet"
 
 #: builtin/ls-files.c:459
 msgid "tree-ish"
 msgstr "Commit-Referenz"
 
 #: builtin/ls-files.c:460
@@ -7195,48 +7286,48 @@
 
 #: builtin/merge.c:447
 #, c-format
 msgid "'%s' does not point to a commit"
 msgstr "'%s' zeigt auf keinen Commit"
 
-#: builtin/merge.c:559
+#: builtin/merge.c:537
 #, c-format
 msgid "Bad branch.%s.mergeoptions string: %s"
 msgstr "Ungültiger branch.%s.mergeoptions String: %s"
 
-#: builtin/merge.c:654
+#: builtin/merge.c:632
 msgid "git write-tree failed to write a tree"
 msgstr "\"git write-tree\" schlug beim Schreiben eines \"Tree\"-Objektes fehl"
 
-#: builtin/merge.c:678
+#: builtin/merge.c:656
 msgid "Not handling anything other than two heads merge."
 msgstr "Es wird nur der Merge von zwei Branches behandelt."
 
-#: builtin/merge.c:692
+#: builtin/merge.c:670
 #, c-format
 msgid "Unknown option for merge-recursive: -X%s"
 msgstr "Unbekannte Option für merge-recursive: -X%s"
 
-#: builtin/merge.c:705
+#: builtin/merge.c:683
 #, c-format
 msgid "unable to write %s"
 msgstr "konnte %s nicht schreiben"
 
-#: builtin/merge.c:794
+#: builtin/merge.c:772
 #, c-format
 msgid "Could not read from '%s'"
 msgstr "konnte nicht von '%s' lesen"
 
-#: builtin/merge.c:803
+#: builtin/merge.c:781
 #, c-format
 msgid "Not committing merge; use 'git commit' to complete the merge.\n"
 msgstr ""
 "Merge wurde nicht committet; benutzen Sie 'git commit', um den Merge "
 "abzuschließen.\n"
 
-#: builtin/merge.c:809
+#: builtin/merge.c:787
 #, c-format
 msgid ""
 "Please enter a commit message to explain why this merge is necessary,\n"
 "especially if it merges an updated upstream into a topic branch.\n"
 "\n"
 "Lines starting with '%c' will be ignored, and an empty message aborts\n"
@@ -7246,174 +7337,179 @@
 "Merge erforderlich ist, insbesondere wenn es einen aktualisierten\n"
 "Upstream-Branch mit einem Thema-Branch zusammenführt.\n"
 "\n"
 "Zeilen beginnend mit '%c' werden ignoriert, und eine leere Beschreibung\n"
 "bricht den Commit ab.\n"
 
-#: builtin/merge.c:833
+#: builtin/merge.c:811
 msgid "Empty commit message."
 msgstr "Leere Commit-Beschreibung"
 
-#: builtin/merge.c:845
+#: builtin/merge.c:823
 #, c-format
 msgid "Wonderful.\n"
 msgstr "Wunderbar.\n"
 
-#: builtin/merge.c:900
+#: builtin/merge.c:878
 #, c-format
 msgid "Automatic merge failed; fix conflicts and then commit the result.\n"
 msgstr ""
 "Automatischer Merge fehlgeschlagen; beheben Sie die Konflikte und committen "
 "Sie dann das Ergebnis.\n"
 
-#: builtin/merge.c:916
+#: builtin/merge.c:894
 #, c-format
 msgid "'%s' is not a commit"
 msgstr "'%s' ist kein Commit"
 
-#: builtin/merge.c:957
+#: builtin/merge.c:935
 msgid "No current branch."
 msgstr "Sie befinden sich auf keinem Branch."
 
-#: builtin/merge.c:959
+#: builtin/merge.c:937
 msgid "No remote for the current branch."
 msgstr "Kein Remote-Repository für den aktuellen Branch."
 
-#: builtin/merge.c:961
+#: builtin/merge.c:939
 msgid "No default upstream defined for the current branch."
 msgstr ""
 "Es ist kein Standard-Upstream-Branch für den aktuellen Branch definiert."
 
-#: builtin/merge.c:966
+#: builtin/merge.c:944
 #, c-format
 msgid "No remote-tracking branch for %s from %s"
 msgstr "Kein Remote-Tracking-Branch für %s von %s"
 
-#: builtin/merge.c:1122
+#: builtin/merge.c:1081
+#, c-format
+msgid "could not close '%s'"
+msgstr "Konnte '%s' nicht schließen"
+
+#: builtin/merge.c:1208
 msgid "There is no merge to abort (MERGE_HEAD missing)."
 msgstr "Es gibt keinen Merge zum Abbrechen (MERGE_HEAD fehlt)"
 
-#: builtin/merge.c:1138
+#: builtin/merge.c:1224
 msgid ""
 "You have not concluded your merge (MERGE_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 "Sie haben Ihren Merge nicht abgeschlossen (MERGE_HEAD existiert).\n"
 "Bitte committen Sie Ihre Änderungen, bevor Sie \"merge\" ausführen."
 
-#: builtin/merge.c:1141 git-pull.sh:34
+#: builtin/merge.c:1227 git-pull.sh:74
 msgid "You have not concluded your merge (MERGE_HEAD exists)."
 msgstr "Sie haben Ihren Merge nicht abgeschlossen (MERGE_HEAD existiert)."
 
-#: builtin/merge.c:1145
+#: builtin/merge.c:1231
 msgid ""
 "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 "Sie haben \"cherry-pick\" nicht abgeschlossen (CHERRY_PICK_HEAD existiert).\n"
 "Bitte committen Sie Ihre Änderungen, bevor Sie \"merge\" ausführen."
 
-#: builtin/merge.c:1148
+#: builtin/merge.c:1234
 msgid "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists)."
 msgstr ""
 "Sie haben \"cherry-pick\" nicht abgeschlossen (CHERRY_PICK_HEAD existiert)."
 
-#: builtin/merge.c:1157
+#: builtin/merge.c:1243
 msgid "You cannot combine --squash with --no-ff."
 msgstr "Sie können --squash nicht mit --no-ff kombinieren."
 
-#: builtin/merge.c:1166
+#: builtin/merge.c:1251
 msgid "No commit specified and merge.defaultToUpstream not set."
 msgstr "Kein Commit angegeben und merge.defaultToUpstream ist nicht gesetzt."
 
-#: builtin/merge.c:1198
-msgid "Can merge only exactly one commit into empty head"
-msgstr "Kann nur exakt einen Commit in einem leeren Branch zusammenführen."
-
-#: builtin/merge.c:1201
+#: builtin/merge.c:1268
 msgid "Squash commit into empty head not supported yet"
 msgstr ""
 "Bin auf einem Commit, der noch geboren wird; kann \"squash\" nicht ausführen."
 
-#: builtin/merge.c:1203
+#: builtin/merge.c:1270
 msgid "Non-fast-forward commit does not make sense into an empty head"
 msgstr ""
 "Nicht vorzuspulender Commit kann nicht in einem leeren Branch verwendet "
 "werden."
 
-#: builtin/merge.c:1208
+#: builtin/merge.c:1276
 #, c-format
 msgid "%s - not something we can merge"
 msgstr "%s - nichts was wir zusammenführen können"
 
-#: builtin/merge.c:1259
+#: builtin/merge.c:1278
+msgid "Can merge only exactly one commit into empty head"
+msgstr "Kann nur exakt einen Commit in einem leeren Branch zusammenführen."
+
+#: builtin/merge.c:1333
 #, c-format
 msgid "Commit %s has an untrusted GPG signature, allegedly by %s."
 msgstr ""
 "Commit %s hat eine nicht vertrauenswürdige GPG-Signatur, angeblich von %s."
 
-#: builtin/merge.c:1262
+#: builtin/merge.c:1336
 #, c-format
 msgid "Commit %s has a bad GPG signature allegedly by %s."
 msgstr "Commit %s hat eine ungültige GPG-Signatur, angeblich von %s."
 
-#: builtin/merge.c:1265
+#: builtin/merge.c:1339
 #, c-format
 msgid "Commit %s does not have a GPG signature."
 msgstr "Commit %s hat keine GPG-Signatur."
 
-#: builtin/merge.c:1268
+#: builtin/merge.c:1342
 #, c-format
 msgid "Commit %s has a good GPG signature by %s\n"
 msgstr "Commit %s hat eine gültige GPG-Signatur von %s\n"
 
-#: builtin/merge.c:1349
+#: builtin/merge.c:1423
 #, c-format
 msgid "Updating %s..%s\n"
 msgstr "Aktualisiere %s..%s\n"
 
-#: builtin/merge.c:1388
+#: builtin/merge.c:1462
 #, c-format
 msgid "Trying really trivial in-index merge...\n"
 msgstr "Probiere wirklich trivialen \"in-index\"-Merge ...\n"
 
-#: builtin/merge.c:1395
+#: builtin/merge.c:1469
 #, c-format
 msgid "Nope.\n"
 msgstr "Nein.\n"
 
-#: builtin/merge.c:1427
+#: builtin/merge.c:1501
 msgid "Not possible to fast-forward, aborting."
 msgstr "Vorspulen nicht möglich, breche ab."
 
-#: builtin/merge.c:1450 builtin/merge.c:1529
+#: builtin/merge.c:1524 builtin/merge.c:1603
 #, c-format
 msgid "Rewinding the tree to pristine...\n"
 msgstr "Rücklauf des Verzeichnisses bis zum Ursprung ...\n"
 
-#: builtin/merge.c:1454
+#: builtin/merge.c:1528
 #, c-format
 msgid "Trying merge strategy %s...\n"
 msgstr "Probiere Merge-Strategie %s ...\n"
 
-#: builtin/merge.c:1520
+#: builtin/merge.c:1594
 #, c-format
 msgid "No merge strategy handled the merge.\n"
 msgstr "Keine Merge-Strategie behandelt diesen Merge.\n"
 
-#: builtin/merge.c:1522
+#: builtin/merge.c:1596
 #, c-format
 msgid "Merge with strategy %s failed.\n"
 msgstr "Merge mit Strategie %s fehlgeschlagen.\n"
 
-#: builtin/merge.c:1531
+#: builtin/merge.c:1605
 #, c-format
 msgid "Using the %s to prepare resolving by hand.\n"
 msgstr "Benutzen Sie \"%s\", um die Auflösung per Hand vorzubereiten.\n"
 
-#: builtin/merge.c:1543
+#: builtin/merge.c:1617
 #, c-format
 msgid "Automatic merge went well; stopped before committing as requested\n"
 msgstr ""
 "Automatischer Merge abgeschlossen; halte, wie gewünscht, vor dem Commit an\n"
 
 #: builtin/merge-base.c:29
@@ -7599,13 +7695,13 @@
 
 #: builtin/mv.c:253
 #, c-format
 msgid "Renaming %s to %s\n"
 msgstr "Benenne %s nach %s um\n"
 
-#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:359
+#: builtin/mv.c:256 builtin/remote.c:725 builtin/repack.c:361
 #, c-format
 msgid "renaming '%s' failed"
 msgstr "Umbenennung von '%s' fehlgeschlagen"
 
 #: builtin/name-rev.c:255
 msgid "git name-rev [<options>] <commit>..."
@@ -7978,13 +8074,13 @@
 msgstr "Notiz-Referenz"
 
 #: builtin/notes.c:954
 msgid "use notes from <notes-ref>"
 msgstr "Notizen von <Notiz-Referenz> verwenden"
 
-#: builtin/notes.c:989 builtin/remote.c:1621
+#: builtin/notes.c:989 builtin/remote.c:1618
 #, c-format
 msgid "Unknown subcommand: %s"
 msgstr "Unbekanntes Unterkommando: %s"
 
 #: builtin/pack-objects.c:28
 msgid "git pack-objects --stdout [options...] [< ref-list | < object-list]"
@@ -8002,188 +8098,188 @@
 msgstr "Fehler beim Komprimieren (%d)"
 
 #: builtin/pack-objects.c:771
 msgid "Writing objects"
 msgstr "Schreibe Objekte"
 
-#: builtin/pack-objects.c:1013
+#: builtin/pack-objects.c:1011
 msgid "disabling bitmap writing, as some objects are not being packed"
 msgstr ""
 "Deaktiviere Schreiben des Bitmap-Index, da einige Objekte nicht in\n"
 "eine Pack-Datei geschrieben wurden"
 
-#: builtin/pack-objects.c:2173
+#: builtin/pack-objects.c:2171
 msgid "Compressing objects"
 msgstr "Komprimiere Objekte"
 
-#: builtin/pack-objects.c:2570
+#: builtin/pack-objects.c:2568
 #, c-format
 msgid "unsupported index version %s"
-msgstr "Nicht unterstützte Staging-Area-Version %s"
+msgstr "Nicht unterstützte Index-Version %s"
 
-#: builtin/pack-objects.c:2574
+#: builtin/pack-objects.c:2572
 #, c-format
 msgid "bad index version '%s'"
-msgstr "Ungültige Staging-Area-Version '%s'"
+msgstr "Ungültige Index-Version '%s'"
 
-#: builtin/pack-objects.c:2597
+#: builtin/pack-objects.c:2595
 #, c-format
 msgid "option %s does not accept negative form"
 msgstr "Option %s akzeptiert keine negative Form"
 
-#: builtin/pack-objects.c:2601
+#: builtin/pack-objects.c:2599
 #, c-format
 msgid "unable to parse value '%s' for option %s"
 msgstr "konnte Wert '%s' für Option %s nicht parsen"
 
-#: builtin/pack-objects.c:2621
+#: builtin/pack-objects.c:2619
 msgid "do not show progress meter"
 msgstr "keine Fortschrittsanzeige anzeigen"
 
-#: builtin/pack-objects.c:2623
+#: builtin/pack-objects.c:2621
 msgid "show progress meter"
 msgstr "Fortschrittsanzeige anzeigen"
 
-#: builtin/pack-objects.c:2625
+#: builtin/pack-objects.c:2623
 msgid "show progress meter during object writing phase"
 msgstr ""
 "Forschrittsanzeige während der Phase des Schreibens der Objekte anzeigen"
 
-#: builtin/pack-objects.c:2628
+#: builtin/pack-objects.c:2626
 msgid "similar to --all-progress when progress meter is shown"
 msgstr "ähnlich zu --all-progress wenn Fortschrittsanzeige darstellt wird"
 
-#: builtin/pack-objects.c:2629
+#: builtin/pack-objects.c:2627
 msgid "version[,offset]"
 msgstr "version[,offset]"
 
-#: builtin/pack-objects.c:2630
+#: builtin/pack-objects.c:2628
 msgid "write the pack index file in the specified idx format version"
 msgstr ""
 "die Index-Datei des Paketes in der angegebenen Indexformat-Version schreiben"
 
-#: builtin/pack-objects.c:2633
+#: builtin/pack-objects.c:2631
 msgid "maximum size of each output pack file"
 msgstr "maximale Größe für jede ausgegebene Paketdatei"
 
-#: builtin/pack-objects.c:2635
+#: builtin/pack-objects.c:2633
 msgid "ignore borrowed objects from alternate object store"
 msgstr "geliehene Objekte von alternativem Objektspeicher ignorieren"
 
-#: builtin/pack-objects.c:2637
+#: builtin/pack-objects.c:2635
 msgid "ignore packed objects"
 msgstr "gepackte Objekte ignorieren"
 
-#: builtin/pack-objects.c:2639
+#: builtin/pack-objects.c:2637
 msgid "limit pack window by objects"
 msgstr "Paketfenster durch Objekte begrenzen"
 
-#: builtin/pack-objects.c:2641
+#: builtin/pack-objects.c:2639
 msgid "limit pack window by memory in addition to object limit"
 msgstr ""
 "Paketfenster, zusätzlich zur Objektbegrenzung, durch Speicher begrenzen"
 
-#: builtin/pack-objects.c:2643
+#: builtin/pack-objects.c:2641
 msgid "maximum length of delta chain allowed in the resulting pack"
 msgstr ""
 "maximale Länge der erlaubten Differenzverkettung im resultierenden Paket"
 
-#: builtin/pack-objects.c:2645
+#: builtin/pack-objects.c:2643
 msgid "reuse existing deltas"
 msgstr "existierende Unterschiede wiederverwenden"
 
-#: builtin/pack-objects.c:2647
+#: builtin/pack-objects.c:2645
 msgid "reuse existing objects"
 msgstr "existierende Objekte wiederverwenden"
 
-#: builtin/pack-objects.c:2649
+#: builtin/pack-objects.c:2647
 msgid "use OFS_DELTA objects"
 msgstr "OFS_DELTA Objekte verwenden"
 
-#: builtin/pack-objects.c:2651
+#: builtin/pack-objects.c:2649
 msgid "use threads when searching for best delta matches"
 msgstr ""
 "Threads bei der Suche nach den besten Übereinstimmungen bei Unterschieden "
 "verwenden"
 
-#: builtin/pack-objects.c:2653
+#: builtin/pack-objects.c:2651
 msgid "do not create an empty pack output"
 msgstr "keine leeren Pakete erzeugen"
 
-#: builtin/pack-objects.c:2655
+#: builtin/pack-objects.c:2653
 msgid "read revision arguments from standard input"
 msgstr "Argumente bezüglich Commits von der Standard-Eingabe lesen"
 
-#: builtin/pack-objects.c:2657
+#: builtin/pack-objects.c:2655
 msgid "limit the objects to those that are not yet packed"
 msgstr "die Objekte zu solchen, die noch nicht gepackt wurden, begrenzen"
 
-#: builtin/pack-objects.c:2660
+#: builtin/pack-objects.c:2658
 msgid "include objects reachable from any reference"
 msgstr "Objekte einschließen, die von jeder Referenz erreichbar sind"
 
-#: builtin/pack-objects.c:2663
+#: builtin/pack-objects.c:2661
 msgid "include objects referred by reflog entries"
 msgstr ""
 "Objekte einschließen, die von Einträgen des Reflogs referenziert werden"
 
-#: builtin/pack-objects.c:2666
+#: builtin/pack-objects.c:2664
 msgid "include objects referred to by the index"
-msgstr "Objekte einschließen, die von der Staging-Area referenziert werden"
+msgstr "Objekte einschließen, die vom Index referenziert werden"
 
-#: builtin/pack-objects.c:2669
+#: builtin/pack-objects.c:2667
 msgid "output pack to stdout"
 msgstr "Paket in die Standard-Ausgabe schreiben"
 
-#: builtin/pack-objects.c:2671
+#: builtin/pack-objects.c:2669
 msgid "include tag objects that refer to objects to be packed"
 msgstr "Tag-Objekte einschließen, die auf gepackte Objekte referenzieren"
 
-#: builtin/pack-objects.c:2673
+#: builtin/pack-objects.c:2671
 msgid "keep unreachable objects"
 msgstr "nicht erreichbare Objekte behalten"
 
-#: builtin/pack-objects.c:2674 parse-options.h:140
+#: builtin/pack-objects.c:2672 parse-options.h:139
 msgid "time"
 msgstr "Zeit"
 
-#: builtin/pack-objects.c:2675
+#: builtin/pack-objects.c:2673
 msgid "unpack unreachable objects newer than <time>"
 msgstr "nicht erreichbare Objekte entpacken, die neuer als <Zeit> sind"
 
-#: builtin/pack-objects.c:2678
+#: builtin/pack-objects.c:2676
 msgid "create thin packs"
 msgstr "dünnere Pakete erzeugen"
 
-#: builtin/pack-objects.c:2680
+#: builtin/pack-objects.c:2678
 msgid "create packs suitable for shallow fetches"
 msgstr ""
 "Pakete geeignet für Abholung mit unvollständiger Historie (shallow) erzeugen"
 
-#: builtin/pack-objects.c:2682
+#: builtin/pack-objects.c:2680
 msgid "ignore packs that have companion .keep file"
 msgstr "Pakete ignorieren, die .keep Dateien haben"
 
-#: builtin/pack-objects.c:2684
+#: builtin/pack-objects.c:2682
 msgid "pack compression level"
 msgstr "Komprimierungsgrad für Paketierung"
 
-#: builtin/pack-objects.c:2686
+#: builtin/pack-objects.c:2684
 msgid "do not hide commits by grafts"
 msgstr "keine künstlichen Vorgänger-Commits (\"grafts\") verbergen"
 
-#: builtin/pack-objects.c:2688
+#: builtin/pack-objects.c:2686
 msgid "use a bitmap index if available to speed up counting objects"
 msgstr ""
 "Bitmap-Index (falls verfügbar) zur Optimierung der Objektzählung benutzen"
 
-#: builtin/pack-objects.c:2690
+#: builtin/pack-objects.c:2688
 msgid "write a bitmap index together with the pack index"
 msgstr "Bitmap-Index zusammen mit Pack-Index schreiben"
 
-#: builtin/pack-objects.c:2781
+#: builtin/pack-objects.c:2779
 msgid "Counting objects"
 msgstr "Zähle Objekte"
 
 #: builtin/pack-refs.c:6
 msgid "git pack-refs [<options>]"
 msgstr "git pack-refs [<Optionen>]"
@@ -8201,25 +8297,25 @@
 msgstr "git prune-packed [-n | --dry-run] [-q | --quiet]"
 
 #: builtin/prune-packed.c:40
 msgid "Removing duplicate objects"
 msgstr "Lösche doppelte Objekte"
 
-#: builtin/prune.c:12
+#: builtin/prune.c:11
 msgid "git prune [-n] [-v] [--expire <time>] [--] [<head>...]"
 msgstr "git prune [-n] [-v] [--expire <Zeit>] [--] [<head>...]"
 
-#: builtin/prune.c:106
+#: builtin/prune.c:105 builtin/worktree.c:112
 msgid "do not remove, show only"
 msgstr "nicht löschen, nur anzeigen"
 
-#: builtin/prune.c:107
+#: builtin/prune.c:106 builtin/worktree.c:113
 msgid "report pruned objects"
 msgstr "gelöschte Objekte melden"
 
-#: builtin/prune.c:110
+#: builtin/prune.c:109 builtin/worktree.c:115
 msgid "expire objects older than <time>"
 msgstr "Objekte älter als <Zeit> verfallen lassen"
 
 #: builtin/push.c:14
 msgid "git push [<options>] [<repository> [<refspec>...]]"
 msgstr "git push [<Optionen>] [<Repository> [<Refspec>...]]"
@@ -8577,17 +8673,17 @@
 "[-u [--exclude-per-directory=<gitignore>] | -i]] [--no-sparse-checkout] [--"
 "index-output=<Datei>] (--empty | <Commit-Referenz1> [<Commit-Referenz2> "
 "[<Commit-Referenz3>]])"
 
 #: builtin/read-tree.c:110
 msgid "write resulting index to <file>"
-msgstr "resultierende Staging-Area nach <Datei> schreiben"
+msgstr "resultierenden Index nach <Datei> schreiben"
 
 #: builtin/read-tree.c:113
 msgid "only empty the index"
-msgstr "die Staging-Area leeren"
+msgstr "nur den Index leeren"
 
 #: builtin/read-tree.c:115
 msgid "Merging"
 msgstr "Merge"
 
 #: builtin/read-tree.c:117
@@ -8609,13 +8705,13 @@
 #: builtin/read-tree.c:124
 msgid "<subdirectory>/"
 msgstr "<Unterverzeichnis>/"
 
 #: builtin/read-tree.c:125
 msgid "read the tree into the index under <subdirectory>/"
-msgstr "das Verzeichnis in die Staging-Area unter <Unterverzeichnis>/ lesen"
+msgstr "das Verzeichnis in den Index unter <Unterverzeichnis>/ lesen"
 
 #: builtin/read-tree.c:128
 msgid "update working tree with merge result"
 msgstr "Arbeitsverzeichnis mit dem Ergebnis des Merges aktualisieren"
 
 #: builtin/read-tree.c:130
@@ -8629,28 +8725,28 @@
 #: builtin/read-tree.c:134
 msgid "don't check the working tree after merging"
 msgstr "das Arbeitsverzeichnis nach dem Merge nicht prüfen"
 
 #: builtin/read-tree.c:135
 msgid "don't update the index or the work tree"
-msgstr "weder die Staging-Area, noch das Arbeitsverzeichnis aktualisieren"
+msgstr "weder den Index, noch das Arbeitsverzeichnis aktualisieren"
 
 #: builtin/read-tree.c:137
 msgid "skip applying sparse checkout filter"
 msgstr "Anwendung des Filters für spärliches Auschecken überspringen"
 
 #: builtin/read-tree.c:139
 msgid "debug unpack-trees"
 msgstr "Entpacken der Bäume protokollieren"
 
-#: builtin/reflog.c:429
+#: builtin/reflog.c:430
 #, c-format
 msgid "%s' for '%s' is not a valid timestamp"
 msgstr "'%s' für '%s' ist kein gültiger Zeitstempel"
 
-#: builtin/reflog.c:546 builtin/reflog.c:551
+#: builtin/reflog.c:547 builtin/reflog.c:552
 #, c-format
 msgid "'%s' is not a valid timestamp"
 msgstr "'%s' ist kein gültiger Zeitstempel"
 
 #: builtin/remote.c:12
 msgid "git remote [-v | --verbose]"
@@ -8787,18 +8883,18 @@
 #: builtin/remote.c:177
 msgid "specifying branches to track makes sense only with fetch mirrors"
 msgstr ""
 "Die Angabe von zu folgenden Branches kann nur mit dem Anfordern von "
 "Spiegelarchiven verwendet werden."
 
-#: builtin/remote.c:187 builtin/remote.c:643
+#: builtin/remote.c:187 builtin/remote.c:640
 #, c-format
 msgid "remote %s already exists."
 msgstr "externes Repository %s existiert bereits"
 
-#: builtin/remote.c:191 builtin/remote.c:647
+#: builtin/remote.c:191 builtin/remote.c:644
 #, c-format
 msgid "'%s' is not a valid remote name"
 msgstr "'%s' ist kein gültiger Name für ein Remote-Repository"
 
 #: builtin/remote.c:235
 #, c-format
@@ -8815,69 +8911,69 @@
 msgstr "(übereinstimmend)"
 
 #: builtin/remote.c:448
 msgid "(delete)"
 msgstr "(lösche)"
 
-#: builtin/remote.c:592 builtin/remote.c:598 builtin/remote.c:604
+#: builtin/remote.c:589 builtin/remote.c:595 builtin/remote.c:601
 #, c-format
 msgid "Could not append '%s' to '%s'"
 msgstr "Konnte '%s' nicht an '%s' anhängen."
 
-#: builtin/remote.c:636 builtin/remote.c:795 builtin/remote.c:895
+#: builtin/remote.c:633 builtin/remote.c:792 builtin/remote.c:892
 #, c-format
 msgid "No such remote: %s"
 msgstr "Kein solches Remote-Repository: %s"
 
-#: builtin/remote.c:653
+#: builtin/remote.c:650
 #, c-format
 msgid "Could not rename config section '%s' to '%s'"
 msgstr "Konnte Sektion '%s' in Konfiguration nicht nach '%s' umbenennen"
 
-#: builtin/remote.c:659 builtin/remote.c:847
+#: builtin/remote.c:656 builtin/remote.c:844
 #, c-format
 msgid "Could not remove config section '%s'"
 msgstr "Konnte Sektion '%s' nicht aus Konfiguration entfernen"
 
-#: builtin/remote.c:674
+#: builtin/remote.c:671
 #, c-format
 msgid ""
 "Not updating non-default fetch refspec\n"
 "\t%s\n"
 "\tPlease update the configuration manually if necessary."
 msgstr ""
 "Keine Aktualisierung der nicht standardmäßigen Refspec für \"fetch\"\n"
 "\t%s\n"
 "\tBitte aktualisieren Sie, falls notwendig, die Konfiguration manuell."
 
-#: builtin/remote.c:680
+#: builtin/remote.c:677
 #, c-format
 msgid "Could not append '%s'"
 msgstr "Konnte '%s' nicht anhängen."
 
-#: builtin/remote.c:691
+#: builtin/remote.c:688
 #, c-format
 msgid "Could not set '%s'"
 msgstr "Konnte '%s' nicht setzen"
 
-#: builtin/remote.c:713
+#: builtin/remote.c:710
 #, c-format
 msgid "deleting '%s' failed"
 msgstr "Konnte '%s' nicht löschen"
 
-#: builtin/remote.c:747
+#: builtin/remote.c:744
 #, c-format
 msgid "creating '%s' failed"
 msgstr "Konnte '%s' nicht erstellen"
 
-#: builtin/remote.c:766
+#: builtin/remote.c:763
 #, c-format
 msgid "Could not remove branch %s"
 msgstr "Konnte Branch %s nicht löschen"
 
-#: builtin/remote.c:833
+#: builtin/remote.c:830
 msgid ""
 "Note: A branch outside the refs/remotes/ hierarchy was not removed;\n"
 "to delete it, use:"
 msgid_plural ""
 "Note: Some branches outside the refs/remotes/ hierarchy were not removed;\n"
 "to delete them, use:"
@@ -8887,273 +8983,273 @@
 "um diesen zu löschen, benutzen Sie:"
 msgstr[1] ""
 "Hinweis: Einige Branches außer der refs/remotes/ Hierarchie wurden nicht "
 "entfernt;\n"
 "um diese zu entfernen, benutzen Sie:"
 
-#: builtin/remote.c:948
+#: builtin/remote.c:945
 #, c-format
 msgid " new (next fetch will store in remotes/%s)"
 msgstr " neu (wird bei nächstem \"fetch\" in remotes/%s gespeichert)"
 
-#: builtin/remote.c:951
+#: builtin/remote.c:948
 msgid " tracked"
 msgstr " gefolgt"
 
-#: builtin/remote.c:953
+#: builtin/remote.c:950
 msgid " stale (use 'git remote prune' to remove)"
 msgstr " veraltet (benutzen Sie 'git remote prune' zum Löschen)"
 
-#: builtin/remote.c:955
+#: builtin/remote.c:952
 msgid " ???"
 msgstr " ???"
 
-#: builtin/remote.c:996
+#: builtin/remote.c:993
 #, c-format
 msgid "invalid branch.%s.merge; cannot rebase onto > 1 branch"
 msgstr "ungültiges branch.%s.merge; kann Rebase nicht auf > 1 Branch ausführen"
 
-#: builtin/remote.c:1003
+#: builtin/remote.c:1000
 #, c-format
 msgid "rebases onto remote %s"
 msgstr "Rebase auf Remote-Branch %s"
 
-#: builtin/remote.c:1006
+#: builtin/remote.c:1003
 #, c-format
 msgid " merges with remote %s"
 msgstr " führt mit Remote-Branch %s zusammen"
 
-#: builtin/remote.c:1007
+#: builtin/remote.c:1004
 msgid "    and with remote"
 msgstr "    und mit Remote-Branch"
 
-#: builtin/remote.c:1009
+#: builtin/remote.c:1006
 #, c-format
 msgid "merges with remote %s"
 msgstr "führt mit Remote-Branch %s zusammen"
 
-#: builtin/remote.c:1010
+#: builtin/remote.c:1007
 msgid "   and with remote"
 msgstr "   und mit Remote-Branch"
 
-#: builtin/remote.c:1056
+#: builtin/remote.c:1053
 msgid "create"
 msgstr "erstellt"
 
-#: builtin/remote.c:1059
+#: builtin/remote.c:1056
 msgid "delete"
 msgstr "gelöscht"
 
-#: builtin/remote.c:1063
+#: builtin/remote.c:1060
 msgid "up to date"
 msgstr "aktuell"
 
-#: builtin/remote.c:1066
+#: builtin/remote.c:1063
 msgid "fast-forwardable"
 msgstr "vorspulbar"
 
-#: builtin/remote.c:1069
+#: builtin/remote.c:1066
 msgid "local out of date"
 msgstr "lokal nicht aktuell"
 
-#: builtin/remote.c:1076
+#: builtin/remote.c:1073
 #, c-format
 msgid "    %-*s forces to %-*s (%s)"
 msgstr "    %-*s erzwingt Versandt nach %-*s (%s)"
 
-#: builtin/remote.c:1079
+#: builtin/remote.c:1076
 #, c-format
 msgid "    %-*s pushes to %-*s (%s)"
 msgstr "    %-*s versendet nach %-*s (%s)"
 
-#: builtin/remote.c:1083
+#: builtin/remote.c:1080
 #, c-format
 msgid "    %-*s forces to %s"
 msgstr "    %-*s erzwingt Versand nach %s"
 
-#: builtin/remote.c:1086
+#: builtin/remote.c:1083
 #, c-format
 msgid "    %-*s pushes to %s"
 msgstr "    %-*s versendet nach %s"
 
-#: builtin/remote.c:1154
+#: builtin/remote.c:1151
 msgid "do not query remotes"
 msgstr "keine Abfrage von Remote-Repositories"
 
-#: builtin/remote.c:1181
+#: builtin/remote.c:1178
 #, c-format
 msgid "* remote %s"
 msgstr "* Remote-Repository %s"
 
-#: builtin/remote.c:1182
+#: builtin/remote.c:1179
 #, c-format
 msgid "  Fetch URL: %s"
 msgstr "  URL zum Abholen: %s"
 
-#: builtin/remote.c:1183 builtin/remote.c:1334
+#: builtin/remote.c:1180 builtin/remote.c:1331
 msgid "(no URL)"
 msgstr "(keine URL)"
 
-#: builtin/remote.c:1192 builtin/remote.c:1194
+#: builtin/remote.c:1189 builtin/remote.c:1191
 #, c-format
 msgid "  Push  URL: %s"
 msgstr "  URL zum Versenden: %s"
 
-#: builtin/remote.c:1196 builtin/remote.c:1198 builtin/remote.c:1200
+#: builtin/remote.c:1193 builtin/remote.c:1195 builtin/remote.c:1197
 #, c-format
 msgid "  HEAD branch: %s"
 msgstr "  Hauptbranch: %s"
 
-#: builtin/remote.c:1202
+#: builtin/remote.c:1199
 #, c-format
 msgid ""
 "  HEAD branch (remote HEAD is ambiguous, may be one of the following):\n"
 msgstr ""
 "  Hauptbranch (externer HEAD ist mehrdeutig, könnte einer der folgenden "
 "sein):\n"
 
-#: builtin/remote.c:1214
+#: builtin/remote.c:1211
 #, c-format
 msgid "  Remote branch:%s"
 msgid_plural "  Remote branches:%s"
 msgstr[0] "  Remote-Branch:%s"
 msgstr[1] "  Remote-Branches:%s"
 
-#: builtin/remote.c:1217 builtin/remote.c:1244
+#: builtin/remote.c:1214 builtin/remote.c:1241
 msgid " (status not queried)"
 msgstr " (Zustand nicht abgefragt)"
 
-#: builtin/remote.c:1226
+#: builtin/remote.c:1223
 msgid "  Local branch configured for 'git pull':"
 msgid_plural "  Local branches configured for 'git pull':"
 msgstr[0] "  Lokaler Branch konfiguriert für 'git pull':"
 msgstr[1] "  Lokale Branches konfiguriert für 'git pull':"
 
-#: builtin/remote.c:1234
+#: builtin/remote.c:1231
 msgid "  Local refs will be mirrored by 'git push'"
 msgstr "  Lokale Referenzen werden von 'git push' gespiegelt"
 
-#: builtin/remote.c:1241
+#: builtin/remote.c:1238
 #, c-format
 msgid "  Local ref configured for 'git push'%s:"
 msgid_plural "  Local refs configured for 'git push'%s:"
 msgstr[0] "  Lokale Referenz konfiguriert für 'git push'%s:"
 msgstr[1] "  Lokale Referenzen konfiguriert für 'git push'%s:"
 
-#: builtin/remote.c:1262
+#: builtin/remote.c:1259
 msgid "set refs/remotes/<name>/HEAD according to remote"
 msgstr "setzt refs/remotes/<Name>/HEAD gemäß dem Remote-Repository"
 
-#: builtin/remote.c:1264
+#: builtin/remote.c:1261
 msgid "delete refs/remotes/<name>/HEAD"
 msgstr "entfernt refs/remotes/<Name>/HEAD"
 
-#: builtin/remote.c:1279
+#: builtin/remote.c:1276
 msgid "Cannot determine remote HEAD"
 msgstr "Kann HEAD des Remote-Repositories nicht bestimmen"
 
-#: builtin/remote.c:1281
+#: builtin/remote.c:1278
 msgid "Multiple remote HEAD branches. Please choose one explicitly with:"
 msgstr ""
 "Mehrere Hauptbranches im Remote-Repository. Bitte wählen Sie explizit einen "
 "aus mit:"
 
-#: builtin/remote.c:1291
+#: builtin/remote.c:1288
 #, c-format
 msgid "Could not delete %s"
 msgstr "Konnte %s nicht entfernen"
 
-#: builtin/remote.c:1299
+#: builtin/remote.c:1296
 #, c-format
 msgid "Not a valid ref: %s"
 msgstr "keine gültige Referenz: %s"
 
-#: builtin/remote.c:1301
+#: builtin/remote.c:1298
 #, c-format
 msgid "Could not setup %s"
 msgstr "Konnte %s nicht einrichten"
 
-#: builtin/remote.c:1319
+#: builtin/remote.c:1316
 #, c-format
 msgid " %s will become dangling!"
 msgstr " %s wird unreferenziert!"
 
-#: builtin/remote.c:1320
+#: builtin/remote.c:1317
 #, c-format
 msgid " %s has become dangling!"
 msgstr " %s wurde unreferenziert!"
 
-#: builtin/remote.c:1330
+#: builtin/remote.c:1327
 #, c-format
 msgid "Pruning %s"
 msgstr "entferne veraltete Branches von %s"
 
-#: builtin/remote.c:1331
+#: builtin/remote.c:1328
 #, c-format
 msgid "URL: %s"
 msgstr "URL: %s"
 
-#: builtin/remote.c:1354
+#: builtin/remote.c:1351
 #, c-format
 msgid " * [would prune] %s"
 msgstr " * [würde veralteten Branch entfernen] %s"
 
-#: builtin/remote.c:1357
+#: builtin/remote.c:1354
 #, c-format
 msgid " * [pruned] %s"
 msgstr "* [veralteten Branch entfernt] %s"
 
-#: builtin/remote.c:1402
+#: builtin/remote.c:1399
 msgid "prune remotes after fetching"
 msgstr "entferne veraltete Branches im Remote-Repository nach \"fetch\""
 
-#: builtin/remote.c:1468 builtin/remote.c:1542
+#: builtin/remote.c:1465 builtin/remote.c:1539
 #, c-format
 msgid "No such remote '%s'"
 msgstr "Kein solches Remote-Repository '%s'"
 
-#: builtin/remote.c:1488
+#: builtin/remote.c:1485
 msgid "add branch"
 msgstr "Branch hinzufügen"
 
-#: builtin/remote.c:1495
+#: builtin/remote.c:1492
 msgid "no remote specified"
 msgstr "kein Remote-Repository angegeben"
 
-#: builtin/remote.c:1517
+#: builtin/remote.c:1514
 msgid "manipulate push URLs"
 msgstr "URLs für \"push\" manipulieren"
 
-#: builtin/remote.c:1519
+#: builtin/remote.c:1516
 msgid "add URL"
 msgstr "URL hinzufügen"
 
-#: builtin/remote.c:1521
+#: builtin/remote.c:1518
 msgid "delete URLs"
 msgstr "URLs löschen"
 
-#: builtin/remote.c:1528
+#: builtin/remote.c:1525
 msgid "--add --delete doesn't make sense"
 msgstr ""
 "Die Optionen --add und --delete können nicht gemeinsam verwendet werden."
 
-#: builtin/remote.c:1568
+#: builtin/remote.c:1565
 #, c-format
 msgid "Invalid old URL pattern: %s"
 msgstr "ungültiges altes URL Format: %s"
 
-#: builtin/remote.c:1576
+#: builtin/remote.c:1573
 #, c-format
 msgid "No such URL found: %s"
 msgstr "Keine solche URL gefunden: %s"
 
-#: builtin/remote.c:1578
+#: builtin/remote.c:1575
 msgid "Will not delete all non-push URLs"
 msgstr "Werde keine URLs entfernen, die nicht für \"push\" bestimmt sind"
 
-#: builtin/remote.c:1592
+#: builtin/remote.c:1589
 msgid "be verbose; must be placed before a subcommand"
 msgstr "erweiterte Ausgaben; muss vor einem Unterkommando angegeben werden"
 
 #: builtin/repack.c:17
 msgid "git repack [<options>]"
 msgstr "git repack [<Optionen>]"
@@ -9222,13 +9318,13 @@
 
 #: builtin/repack.c:187
 msgid "repack objects in packs marked with .keep"
 msgstr ""
 "Objekte umpacken, die sich in mit .keep markierten Pack-Dateien befinden"
 
-#: builtin/repack.c:375
+#: builtin/repack.c:377
 #, c-format
 msgid "removing '%s' failed"
 msgstr "Löschen von '%s' fehlgeschlagen"
 
 #: builtin/replace.c:19
 msgid "git replace [-f] <object> <replacement>"
@@ -9319,13 +9415,13 @@
 #: builtin/rerere.c:12
 msgid "git rerere [clear | forget <path>... | status | remaining | diff | gc]"
 msgstr "git rerere [clean | forget <Pfad>... | status | remaining | diff | gc]"
 
 #: builtin/rerere.c:57
 msgid "register clean resolutions in index"
-msgstr "saubere Auflösungen in der Staging-Area registrieren"
+msgstr "saubere Auflösungen im Index registrieren"
 
 #: builtin/reset.c:26
 msgid ""
 "git reset [--mixed | --soft | --hard | --merge | --keep] [-q] [<commit>]"
 msgstr ""
 "git reset [--mixed | --soft | --hard | --merge | --keep] [-q] [<Commit>]"
@@ -9384,21 +9480,21 @@
 #: builtin/reset.c:276
 msgid "be quiet, only report errors"
 msgstr "weniger Ausgaben, meldet nur Fehler"
 
 #: builtin/reset.c:278
 msgid "reset HEAD and index"
-msgstr "HEAD und Staging-Area umsetzen"
+msgstr "HEAD und Index umsetzen"
 
 #: builtin/reset.c:279
 msgid "reset only HEAD"
 msgstr "nur HEAD umsetzen"
 
 #: builtin/reset.c:281 builtin/reset.c:283
 msgid "reset HEAD, index and working tree"
-msgstr "HEAD, Staging-Area und Arbeitsverzeichnis umsetzen"
+msgstr "HEAD, Index und Arbeitsverzeichnis umsetzen"
 
 #: builtin/reset.c:285
 msgid "reset HEAD but keep local changes"
 msgstr "HEAD umsetzen, aber lokale Änderungen behalten"
 
 #: builtin/reset.c:288
@@ -9448,17 +9544,17 @@
 msgid "Unstaged changes after reset:"
 msgstr "Nicht zum Commit vorgemerkte Änderungen nach Zurücksetzung:"
 
 #: builtin/reset.c:370
 #, c-format
 msgid "Could not reset index file to revision '%s'."
-msgstr "Konnte Staging-Area-Datei nicht zu Commit '%s' setzen."
+msgstr "Konnte Index-Datei nicht zu Commit '%s' setzen."
 
 #: builtin/reset.c:374
 msgid "Could not write new index file."
-msgstr "Konnte neue Staging-Area-Datei nicht schreiben."
+msgstr "Konnte neue Index-Datei nicht schreiben."
 
 #: builtin/rev-parse.c:361
 msgid "git rev-parse --parseopt [<options>] -- [<args>...]"
 msgstr "git rev-parse --parseopt [<Optionen>] -- [<Argumente>...]"
 
 #: builtin/rev-parse.c:366
@@ -9602,13 +9698,13 @@
 "(use 'rm -rf' if you really want to remove it including all of its history)"
 msgstr ""
 "\n"
 "(benutzen Sie 'rm -rf' wenn Sie dieses Submodul wirklich mitsamt\n"
 "seiner Historie löschen möchten)"
 
-#: builtin/rm.c:231
+#: builtin/rm.c:230
 msgid ""
 "the following file has staged content different from both the\n"
 "file and the HEAD:"
 msgid_plural ""
 "the following files have staged content different from both the\n"
 "file and the HEAD:"
@@ -9617,74 +9713,74 @@
 "zu der Datei und HEAD:"
 msgstr[1] ""
 "die folgenden Dateien haben zum Commit vorgemerkte Änderungen "
 "unterschiedlich\n"
 "zu der Datei und HEAD:"
 
-#: builtin/rm.c:236
+#: builtin/rm.c:235
 msgid ""
 "\n"
 "(use -f to force removal)"
 msgstr ""
 "\n"
 "(benutzen Sie -f, um die Löschung zu erzwingen)"
 
-#: builtin/rm.c:240
+#: builtin/rm.c:239
 msgid "the following file has changes staged in the index:"
 msgid_plural "the following files have changes staged in the index:"
 msgstr[0] "die folgende Datei hat zum Commit vorgemerkte Änderungen:"
 msgstr[1] "die folgenden Dateien haben zum Commit vorgemerkte Änderungen:"
 
-#: builtin/rm.c:244 builtin/rm.c:255
+#: builtin/rm.c:243 builtin/rm.c:254
 msgid ""
 "\n"
 "(use --cached to keep the file, or -f to force removal)"
 msgstr ""
 "\n"
 "(benutzen Sie --cached, um die Datei zu behalten, oder -f, um die Entfernung "
 "zu erzwingen)"
 
-#: builtin/rm.c:252
+#: builtin/rm.c:251
 msgid "the following file has local modifications:"
 msgid_plural "the following files have local modifications:"
 msgstr[0] "die folgende Datei hat lokale Änderungen:"
 msgstr[1] "die folgenden Dateien haben lokale Änderungen:"
 
-#: builtin/rm.c:270
+#: builtin/rm.c:269
 msgid "do not list removed files"
 msgstr "keine gelöschten Dateien auflisten"
 
-#: builtin/rm.c:271
+#: builtin/rm.c:270
 msgid "only remove from the index"
-msgstr "nur aus der Staging-Area entfernen"
+msgstr "nur aus dem Index entfernen"
 
-#: builtin/rm.c:272
+#: builtin/rm.c:271
 msgid "override the up-to-date check"
 msgstr "die \"up-to-date\" Prüfung überschreiben"
 
-#: builtin/rm.c:273
+#: builtin/rm.c:272
 msgid "allow recursive removal"
 msgstr "rekursive Entfernung erlauben"
 
-#: builtin/rm.c:275
+#: builtin/rm.c:274
 msgid "exit with a zero status even if nothing matched"
 msgstr "mit Rückgabewert 0 beenden, wenn keine Übereinstimmung gefunden wurde"
 
-#: builtin/rm.c:318
+#: builtin/rm.c:317
 msgid "Please, stage your changes to .gitmodules or stash them to proceed"
 msgstr ""
 "Bitte merken Sie Ihre Änderungen in .gitmodules zum Commit vor oder "
 "benutzen\n"
 "Sie \"stash\", um fortzufahren."
 
-#: builtin/rm.c:336
+#: builtin/rm.c:335
 #, c-format
 msgid "not removing '%s' recursively without -r"
 msgstr "'%s' wird nicht ohne -r rekursiv entfernt"
 
-#: builtin/rm.c:375
+#: builtin/rm.c:374
 #, c-format
 msgid "git rm: unable to remove %s"
 msgstr "git rm: konnte %s nicht löschen"
 
 #: builtin/shortlog.c:13
 msgid "git shortlog [<options>] [<revision-range>] [[--] [<path>...]]"
@@ -9728,74 +9824,74 @@
 "\t\t[--no-name | --sha1-name] [--topics] [(<Commit> | <glob>)...]"
 
 #: builtin/show-branch.c:13
 msgid "git show-branch (-g | --reflog)[=<n>[,<base>]] [--list] [<ref>]"
 msgstr "git show-branch (-g | --reflog)[=<n>[,<Basis>]] [--list] [<Referenz>]"
 
-#: builtin/show-branch.c:652
+#: builtin/show-branch.c:659
 msgid "show remote-tracking and local branches"
 msgstr "Remote-Tracking und lokale Branches anzeigen"
 
-#: builtin/show-branch.c:654
+#: builtin/show-branch.c:661
 msgid "show remote-tracking branches"
 msgstr "Remote-Tracking-Branches anzeigen"
 
-#: builtin/show-branch.c:656
+#: builtin/show-branch.c:663
 msgid "color '*!+-' corresponding to the branch"
 msgstr "'*!+-' entsprechend des Branches einfärben"
 
-#: builtin/show-branch.c:658
+#: builtin/show-branch.c:665
 msgid "show <n> more commits after the common ancestor"
 msgstr "<n> weitere Commits nach dem gemeinsamen Vorgänger-Commit anzeigen"
 
-#: builtin/show-branch.c:660
+#: builtin/show-branch.c:667
 msgid "synonym to more=-1"
 msgstr "Synonym für more=-1"
 
-#: builtin/show-branch.c:661
+#: builtin/show-branch.c:668
 msgid "suppress naming strings"
 msgstr "Namen unterdrücken"
 
-#: builtin/show-branch.c:663
+#: builtin/show-branch.c:670
 msgid "include the current branch"
 msgstr "den aktuellen Branch einbeziehen"
 
-#: builtin/show-branch.c:665
+#: builtin/show-branch.c:672
 msgid "name commits with their object names"
 msgstr "Commits nach ihren Objektnamen benennen"
 
-#: builtin/show-branch.c:667
+#: builtin/show-branch.c:674
 msgid "show possible merge bases"
 msgstr "mögliche Merge-Basen anzeigen"
 
-#: builtin/show-branch.c:669
+#: builtin/show-branch.c:676
 msgid "show refs unreachable from any other ref"
 msgstr ""
 "Referenzen, die unerreichbar von allen anderen Referenzen sind, anzeigen"
 
-#: builtin/show-branch.c:671
+#: builtin/show-branch.c:678
 msgid "show commits in topological order"
 msgstr "Commits in topologischer Ordnung anzeigen"
 
-#: builtin/show-branch.c:674
+#: builtin/show-branch.c:681
 msgid "show only commits not on the first branch"
 msgstr "nur Commits anzeigen, die sich nicht im ersten Branch befinden"
 
-#: builtin/show-branch.c:676
+#: builtin/show-branch.c:683
 msgid "show merges reachable from only one tip"
 msgstr "Merges anzeigen, die nur von einem Branch aus erreichbar sind"
 
-#: builtin/show-branch.c:678
+#: builtin/show-branch.c:685
 msgid "topologically sort, maintaining date order where possible"
 msgstr "topologische Sortierung, Beibehaltung Datumsordnung wo möglich"
 
-#: builtin/show-branch.c:681
+#: builtin/show-branch.c:688
 msgid "<n>[,<base>]"
 msgstr "<n>[,<Basis>]"
 
-#: builtin/show-branch.c:682
+#: builtin/show-branch.c:689
 msgid "show <n> most recent ref-log entries starting at base"
 msgstr "die <n> jüngsten Einträge im Reflog, beginnend an der Basis, anzeigen"
 
 #: builtin/show-ref.c:10
 msgid ""
 "git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | --"
@@ -9805,43 +9901,43 @@
 "hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<Muster>...] "
 
 #: builtin/show-ref.c:11
 msgid "git show-ref --exclude-existing[=pattern] < ref-list"
 msgstr "git show-ref --exclude-existing[=Muster] < ref-list"
 
-#: builtin/show-ref.c:168
+#: builtin/show-ref.c:170
 msgid "only show tags (can be combined with heads)"
 msgstr "nur Tags anzeigen (kann mit \"heads\" kombiniert werden)"
 
-#: builtin/show-ref.c:169
+#: builtin/show-ref.c:171
 msgid "only show heads (can be combined with tags)"
 msgstr "nur Branches anzeigen (kann mit \"tags\" kombiniert werden)"
 
-#: builtin/show-ref.c:170
+#: builtin/show-ref.c:172
 msgid "stricter reference checking, requires exact ref path"
 msgstr "strengere Referenzprüfung, erfordert exakten Referenzpfad"
 
-#: builtin/show-ref.c:173 builtin/show-ref.c:175
+#: builtin/show-ref.c:175 builtin/show-ref.c:177
 msgid "show the HEAD reference, even if it would be filtered out"
 msgstr ""
 "die HEAD-Referenz anzeigen, selbst wenn diese ausgefiltert werden würde"
 
-#: builtin/show-ref.c:177
+#: builtin/show-ref.c:179
 msgid "dereference tags into object IDs"
 msgstr "Tags in Objekt-Identifikationen dereferenzieren"
 
-#: builtin/show-ref.c:179
+#: builtin/show-ref.c:181
 msgid "only show SHA1 hash using <n> digits"
 msgstr "nur SHA1 Hash mit <n> Ziffern anzeigen"
 
-#: builtin/show-ref.c:183
+#: builtin/show-ref.c:185
 msgid "do not print results to stdout (useful with --verify)"
 msgstr ""
 "keine Ausgabe der Ergebnisse in die Standard-Ausgabe (nützlich mit --verify)"
 
-#: builtin/show-ref.c:185
+#: builtin/show-ref.c:187
 msgid "show refs from stdin that aren't in local repository"
 msgstr ""
 "Referenzen von der Standard-Eingabe anzeigen, die sich nicht im lokalen "
 "Repository befinden"
 
 #: builtin/symbolic-ref.c:7
@@ -10098,135 +10194,211 @@
 msgstr "Tag '%s' aktualisiert (war %s)\n"
 
 #: builtin/unpack-objects.c:489
 msgid "Unpacking objects"
 msgstr "Entpacke Objekte"
 
-#: builtin/update-index.c:403
+#: builtin/update-index.c:70
+#, c-format
+msgid "failed to create directory %s"
+msgstr "Fehler beim Erstellen von Verzeichnis '%s'"
+
+#: builtin/update-index.c:76
+#, c-format
+msgid "failed to stat %s"
+msgstr "Konnte '%s' nicht lesen"
+
+#: builtin/update-index.c:86
+#, c-format
+msgid "failed to create file %s"
+msgstr "Konnte Datei '%s' nicht erstellen"
+
+#: builtin/update-index.c:94
+#, c-format
+msgid "failed to delete file %s"
+msgstr "Konnte Datei '%s' nicht löschen"
+
+#: builtin/update-index.c:101 builtin/update-index.c:203
+#, c-format
+msgid "failed to delete directory %s"
+msgstr "Konnte Verzeichnis '%s' nicht löschen"
+
+#: builtin/update-index.c:124
+#, c-format
+msgid "Testing "
+msgstr "Prüfe "
+
+#: builtin/update-index.c:136
+msgid "directory stat info does not change after adding a new file"
+msgstr ""
+"Verzeichnisinformationen haben sich nach Hinzufügen einer neuen Datei nicht "
+"geändert"
+
+#: builtin/update-index.c:149
+msgid "directory stat info does not change after adding a new directory"
+msgstr ""
+"Verzeichnisinformationen haben sich nach Hinzufügen eines neuen "
+"Verzeichnisses nicht geändert"
+
+#: builtin/update-index.c:162
+msgid "directory stat info changes after updating a file"
+msgstr ""
+"Verzeichnisinformationen haben sich nach Aktualisierung einer Datei geändert"
+
+#: builtin/update-index.c:173
+msgid "directory stat info changes after adding a file inside subdirectory"
+msgstr ""
+"Verzeichnisinformationen haben sich nach Hinzufügen einer Datei in ein "
+"Unterverzeichnis geändert"
+
+#: builtin/update-index.c:184
+msgid "directory stat info does not change after deleting a file"
+msgstr ""
+"Verzeichnisinformationen haben sich nach dem Löschen einer Datei nicht "
+"geändert"
+
+#: builtin/update-index.c:197
+msgid "directory stat info does not change after deleting a directory"
+msgstr ""
+"Verzeichnisinformationen haben sich nach dem Löschen eines Verzeichnisses "
+"nicht geändert"
+
+#: builtin/update-index.c:204
+msgid " OK"
+msgstr " OK"
+
+#: builtin/update-index.c:564
 msgid "git update-index [<options>] [--] [<file>...]"
 msgstr "git update-index [<Optionen>] [--] [<Datei>...]"
 
-#: builtin/update-index.c:757
+#: builtin/update-index.c:918
 msgid "continue refresh even when index needs update"
 msgstr ""
-"Aktualisierung fortsetzen, auch wenn die Staging-Area aktualisiert werden "
-"muss"
+"Aktualisierung fortsetzen, auch wenn der Index aktualisiert werden muss"
 
-#: builtin/update-index.c:760
+#: builtin/update-index.c:921
 msgid "refresh: ignore submodules"
 msgstr "Aktualisierung: ignoriert Submodule"
 
-#: builtin/update-index.c:763
+#: builtin/update-index.c:924
 msgid "do not ignore new files"
 msgstr "keine neuen Dateien ignorieren"
 
-#: builtin/update-index.c:765
+#: builtin/update-index.c:926
 msgid "let files replace directories and vice-versa"
 msgstr "Dateien Verzeichnisse ersetzen lassen, und umgedreht"
 
-#: builtin/update-index.c:767
+#: builtin/update-index.c:928
 msgid "notice files missing from worktree"
 msgstr "fehlende Dateien im Arbeitsverzeichnis beachten"
 
-#: builtin/update-index.c:769
+#: builtin/update-index.c:930
 msgid "refresh even if index contains unmerged entries"
 msgstr ""
-"aktualisieren, auch wenn die Staging-Area nicht zusammengeführte Einträge "
-"beinhaltet"
+"aktualisieren, auch wenn der Index nicht zusammengeführte Einträge beinhaltet"
 
-#: builtin/update-index.c:772
+#: builtin/update-index.c:933
 msgid "refresh stat information"
 msgstr "Dateiinformationen aktualisieren"
 
-#: builtin/update-index.c:776
+#: builtin/update-index.c:937
 msgid "like --refresh, but ignore assume-unchanged setting"
 msgstr "wie --refresh, ignoriert aber \"assume-unchanged\" Einstellung"
 
-#: builtin/update-index.c:780
+#: builtin/update-index.c:941
 msgid "<mode>,<object>,<path>"
 msgstr "<Modus>,<Objekt>,<Pfad>"
 
-#: builtin/update-index.c:781
+#: builtin/update-index.c:942
 msgid "add the specified entry to the index"
 msgstr "den angegebenen Eintrag zum Commit vormerken"
 
-#: builtin/update-index.c:785
+#: builtin/update-index.c:946
 msgid "(+/-)x"
 msgstr "(+/-)x"
 
-#: builtin/update-index.c:786
+#: builtin/update-index.c:947
 msgid "override the executable bit of the listed files"
 msgstr "das \"ausführbar\"-Bit der aufgelisteten Dateien überschreiben"
 
-#: builtin/update-index.c:790
+#: builtin/update-index.c:951
 msgid "mark files as \"not changing\""
 msgstr "diese Datei immer als unverändert betrachten"
 
-#: builtin/update-index.c:793
+#: builtin/update-index.c:954
 msgid "clear assumed-unchanged bit"
 msgstr "\"assumed-unchanged\"-Bit löschen"
 
-#: builtin/update-index.c:796
+#: builtin/update-index.c:957
 msgid "mark files as \"index-only\""
 msgstr "Dateien als \"index-only\" markieren"
 
-#: builtin/update-index.c:799
+#: builtin/update-index.c:960
 msgid "clear skip-worktree bit"
 msgstr "\"skip-worktree\"-Bit löschen"
 
-#: builtin/update-index.c:802
+#: builtin/update-index.c:963
 msgid "add to index only; do not add content to object database"
 msgstr ""
 "die Änderungen nur zum Commit vormerken; Inhalt wird nicht der Objekt-"
 "Datenbank hinzugefügt"
 
-#: builtin/update-index.c:804
+#: builtin/update-index.c:965
 msgid "remove named paths even if present in worktree"
 msgstr ""
 "benannte Pfade löschen, auch wenn sie sich im Arbeitsverzeichnis befinden"
 
-#: builtin/update-index.c:806
+#: builtin/update-index.c:967
 msgid "with --stdin: input lines are terminated by null bytes"
 msgstr "mit --stdin: eingegebene Zeilen sind durch NUL-Bytes abgeschlossen"
 
-#: builtin/update-index.c:808
+#: builtin/update-index.c:969
 msgid "read list of paths to be updated from standard input"
 msgstr "Liste der zu aktualisierenden Pfade von der Standard-Eingabe lesen"
 
-#: builtin/update-index.c:812
+#: builtin/update-index.c:973
 msgid "add entries from standard input to the index"
 msgstr "Einträge von der Standard-Eingabe zum Commit vormerken"
 
-#: builtin/update-index.c:816
+#: builtin/update-index.c:977
 msgid "repopulate stages #2 and #3 for the listed paths"
 msgstr ""
 "wiederholtes Einpflegen der Zustände #2 und #3 für die aufgelisteten Pfade"
 
-#: builtin/update-index.c:820
+#: builtin/update-index.c:981
 msgid "only update entries that differ from HEAD"
 msgstr "nur Einträge aktualisieren, die unterschiedlich zu HEAD sind"
 
-#: builtin/update-index.c:824
+#: builtin/update-index.c:985
 msgid "ignore files missing from worktree"
 msgstr "fehlende Dateien im Arbeitsverzeichnis ignorieren"
 
-#: builtin/update-index.c:827
+#: builtin/update-index.c:988
 msgid "report actions to standard output"
 msgstr "die Aktionen in der Standard-Ausgabe ausgeben"
 
-#: builtin/update-index.c:829
+#: builtin/update-index.c:990
 msgid "(for porcelains) forget saved unresolved conflicts"
 msgstr "(für Fremdprogramme) keine gespeicherten, nicht aufgelöste Konflikte"
 
-#: builtin/update-index.c:833
+#: builtin/update-index.c:994
 msgid "write index in this format"
-msgstr "Staging-Area-Datei in diesem Format schreiben"
+msgstr "Index-Datei in diesem Format schreiben"
 
-#: builtin/update-index.c:835
+#: builtin/update-index.c:996
 msgid "enable or disable split index"
-msgstr "Aktivierung oder Deaktivierung des Splittings der Staging-Area"
+msgstr "Splitting des Index aktivieren oder deaktivieren"
+
+#: builtin/update-index.c:998
+msgid "enable/disable untracked cache"
+msgstr "Cache für unversionierte Dateien aktivieren oder deaktivieren"
+
+#: builtin/update-index.c:1000
+msgid "enable untracked cache without testing the filesystem"
+msgstr ""
+"Cache für unversionierte Dateien ohne Prüfung des Dateisystems aktivieren"
 
 #: builtin/update-ref.c:9
 msgid "git update-ref [<options>] -d <refname> [<old-val>]"
 msgstr "git update-ref [<Optionen>] -d <Referenzname> [<alter-Wert>]"
 
 #: builtin/update-ref.c:10
@@ -10287,12 +10459,90 @@
 msgstr "git verify-tag [-v | --verbose] <Tag>..."
 
 #: builtin/verify-tag.c:73
 msgid "print tag contents"
 msgstr "Tag-Inhalte ausgeben"
 
+#: builtin/worktree.c:11
+msgid "git worktree add [<options>] <path> <branch>"
+msgstr "git worktree add [<Optionen>] <Pfad> <Branch>"
+
+#: builtin/worktree.c:12
+msgid "git worktree prune [<options>]"
+msgstr "git worktree prune [<Optionen>]"
+
+#: builtin/worktree.c:27
+#, c-format
+msgid "Removing worktrees/%s: not a valid directory"
+msgstr "Lösche worktrees/%s: kein gültiges Verzeichnis"
+
+#: builtin/worktree.c:33
+#, c-format
+msgid "Removing worktrees/%s: gitdir file does not exist"
+msgstr "Lösche worktrees/%s: gitdir-Datei existiert nicht"
+
+#: builtin/worktree.c:38
+#, c-format
+msgid "Removing worktrees/%s: unable to read gitdir file (%s)"
+msgstr "Lösche worktrees/%s: konnte gitdir-Datei (%s) nicht lesen"
+
+#: builtin/worktree.c:49
+#, c-format
+msgid "Removing worktrees/%s: invalid gitdir file"
+msgstr "Lösche worktrees/%s: ungültige gitdir-Datei"
+
+#: builtin/worktree.c:65
+#, c-format
+msgid "Removing worktrees/%s: gitdir file points to non-existent location"
+msgstr "Lösche worktrees/%s: gitdir-Datei verweist auf nicht existierenden Ort"
+
+#: builtin/worktree.c:100
+#, c-format
+msgid "failed to remove: %s"
+msgstr "Fehler beim Löschen: %s"
+
+#: builtin/worktree.c:186
+#, c-format
+msgid "'%s' already exists"
+msgstr "'%s' existiert bereits"
+
+#: builtin/worktree.c:207
+#, c-format
+msgid "could not create directory of '%s'"
+msgstr "Konnte Verzeichnis '%s' nicht erstellen."
+
+#: builtin/worktree.c:241
+msgid "unable to resolve HEAD"
+msgstr "Konnte HEAD nicht auflösen."
+
+#: builtin/worktree.c:249
+#, c-format
+msgid "Enter %s (identifier %s)"
+msgstr "Betrete %s (Identifikation %s)"
+
+#: builtin/worktree.c:281
+msgid "checkout <branch> even if already checked out in other worktree"
+msgstr "<Branch> auschecken, auch wenn dieser bereits in einem anderen "
+"Arbeitsverzeichnis ausgecheckt ist"
+
+#: builtin/worktree.c:283
+msgid "create a new branch"
+msgstr "neuen Branch erstellen"
+
+#: builtin/worktree.c:285
+msgid "create or reset a branch"
+msgstr "Branch erstellen oder umsetzen"
+
+#: builtin/worktree.c:286
+msgid "detach HEAD at named commit"
+msgstr "HEAD bei benanntem Commit loslösen"
+
+#: builtin/worktree.c:292
+msgid "-b and -B are mutually exclusive"
+msgstr "-b und -B schließen sich gegenseitig aus"
+
 #: builtin/write-tree.c:13
 msgid "git write-tree [--missing-ok] [--prefix=<prefix>/]"
 msgstr "git write-tree [--missing-ok] [--prefix=<Präfix>/]"
 
 #: builtin/write-tree.c:26
 msgid "<prefix>/"
@@ -10318,238 +10568,257 @@
 msgstr ""
 "'git help -a' und 'git help -g' listet verfügbare Unterkommandos und\n"
 "einige Anleitungen zu Git-Konzepten auf. Benutzen Sie 'git help <Kommando>'\n"
 "oder 'git help <Konzept>', um mehr über ein spezifisches Kommando oder\n"
 "Konzept zu erfahren."
 
-#: common-cmds.h:8
+#: common-cmds.h:10
+msgid "start a working area (see also: git help tutorial)"
+msgstr "Arbeitsverzeichnis anlegen (siehe auch: git help tutorial)"
+
+#: common-cmds.h:11
+msgid "work on the current change (see also: git help everyday)"
+msgstr "an aktuellen Änderungen arbeiten (siehe auch: git help everyday)"
+
+#: common-cmds.h:12
+msgid "examine the history and state (see also: git help revisions)"
+msgstr "Historie und Status untersuchen (siehe auch: git help revisions)"
+
+#: common-cmds.h:13
+msgid "grow, mark and tweak your common history"
+msgstr "Historie erweitern und bearbeiten"
+
+#: common-cmds.h:14
+msgid "collaborate (see also: git help workflows)"
+msgstr "mit anderen zusammenarbeiten (siehe auch: git help workflows)"
+
+#: common-cmds.h:18
 msgid "Add file contents to the index"
 msgstr "Dateiinhalte zum Commit vormerken"
 
-#: common-cmds.h:9
+#: common-cmds.h:19
 msgid "Find by binary search the change that introduced a bug"
 msgstr ""
 "über eine Binärsuche die Änderungen finden, die einen Fehler verursacht haben"
 
-#: common-cmds.h:10
+#: common-cmds.h:20
 msgid "List, create, or delete branches"
 msgstr "Branches anzeigen, erstellen oder entfernen"
 
-#: common-cmds.h:11
-msgid "Checkout a branch or paths to the working tree"
-msgstr "Branches oder Pfade im Arbeitsverzeichnis auschecken"
+#: common-cmds.h:21
+msgid "Switch branches or restore working tree files"
+msgstr "Branches wechseln oder Dateien im Arbeitsverzeichnis wiederherstellen"
 
-#: common-cmds.h:12
+#: common-cmds.h:22
 msgid "Clone a repository into a new directory"
 msgstr "ein Repository in einem neuen Verzeichnis klonen"
 
-#: common-cmds.h:13
+#: common-cmds.h:23
 msgid "Record changes to the repository"
 msgstr "Änderungen in das Repository eintragen"
 
-#: common-cmds.h:14
+#: common-cmds.h:24
 msgid "Show changes between commits, commit and working tree, etc"
 msgstr ""
 "Änderungen zwischen Commits, Commit und Arbeitsverzeichnis, etc. anzeigen"
 
-#: common-cmds.h:15
+#: common-cmds.h:25
 msgid "Download objects and refs from another repository"
 msgstr "Objekte und Referenzen von einem anderen Repository herunterladen"
 
-#: common-cmds.h:16
+#: common-cmds.h:26
 msgid "Print lines matching a pattern"
 msgstr "Zeilen darstellen, die einem Muster entsprechen"
 
-#: common-cmds.h:17
+#: common-cmds.h:27
 msgid "Create an empty Git repository or reinitialize an existing one"
 msgstr ""
 "ein leeres Git-Repository erstellen oder ein bestehendes neuinitialisieren"
 
-#: common-cmds.h:18
+#: common-cmds.h:28
 msgid "Show commit logs"
 msgstr "Commit-Historie anzeigen"
 
-#: common-cmds.h:19
+#: common-cmds.h:29
 msgid "Join two or more development histories together"
 msgstr "zwei oder mehr Entwicklungszweige zusammenführen"
 
-#: common-cmds.h:20
+#: common-cmds.h:30
 msgid "Move or rename a file, a directory, or a symlink"
 msgstr ""
 "eine Datei, ein Verzeichnis, oder eine symbolische Verknüpfung verschieben "
 "oder umbenennen"
 
-#: common-cmds.h:21
+#: common-cmds.h:31
 msgid "Fetch from and integrate with another repository or a local branch"
 msgstr ""
 "Objekte von einem externen Repository anfordern und sie mit einem anderen "
 "Repository oder einem lokalen Branch zusammenführen"
 
-#: common-cmds.h:22
+#: common-cmds.h:32
 msgid "Update remote refs along with associated objects"
 msgstr "Remote-Referenzen mitsamt den verbundenen Objekten aktualisieren"
 
-#: common-cmds.h:23
+#: common-cmds.h:33
 msgid "Forward-port local commits to the updated upstream head"
 msgstr "lokale Commits auf einem aktuellerem Upstream-Branch neu aufbauen"
 
-#: common-cmds.h:24
+#: common-cmds.h:34
 msgid "Reset current HEAD to the specified state"
 msgstr "aktuellen HEAD zu einem spezifizierten Zustand setzen"
 
-#: common-cmds.h:25
+#: common-cmds.h:35
 msgid "Remove files from the working tree and from the index"
-msgstr "Dateien im Arbeitsverzeichnis und von der Staging-Area löschen"
+msgstr "Dateien im Arbeitsverzeichnis und vom Index löschen"
 
-#: common-cmds.h:26
+#: common-cmds.h:36
 msgid "Show various types of objects"
 msgstr "verschiedene Arten von Objekten anzeigen"
 
-#: common-cmds.h:27
+#: common-cmds.h:37
 msgid "Show the working tree status"
 msgstr "den Zustand des Arbeitsverzeichnisses anzeigen"
 
-#: common-cmds.h:28
+#: common-cmds.h:38
 msgid "Create, list, delete or verify a tag object signed with GPG"
 msgstr ""
 "ein mit GPG signiertes Tag-Objekt erzeugen, auflisten, löschen oder "
 "verifizieren."
 
-#: parse-options.h:143
+#: parse-options.h:142
 msgid "expiry-date"
 msgstr "Verfallsdatum"
 
-#: parse-options.h:158
+#: parse-options.h:157
 msgid "no-op (backward compatibility)"
 msgstr "Kein Effekt (Rückwärtskompatibilität)"
 
-#: parse-options.h:232
+#: parse-options.h:231
 msgid "be more verbose"
 msgstr "erweiterte Ausgaben"
 
-#: parse-options.h:234
+#: parse-options.h:233
 msgid "be more quiet"
 msgstr "weniger Ausgaben"
 
-#: parse-options.h:240
+#: parse-options.h:239
 msgid "use <n> digits to display SHA-1s"
 msgstr "benutze <n> Ziffern zur Anzeige von SHA-1s"
 
 #: rerere.h:27
 msgid "update the index with reused conflict resolution if possible"
 msgstr ""
-"Staging-Area, wenn möglich, mit wiederverwendeter Konfliktauflösung "
-"aktualisieren"
+"Index, wenn möglich, mit wiederverwendeter Konfliktauflösung aktualisieren"
 
 #: git-am.sh:53
 msgid "You need to set your committer info first"
 msgstr "Sie müssen zuerst die Informationen zum Commit-Ersteller setzen."
 
-#: git-am.sh:98
+#: git-am.sh:100
 msgid ""
 "You seem to have moved HEAD since the last 'am' failure.\n"
 "Not rewinding to ORIG_HEAD"
 msgstr ""
 "Sie scheinen seit dem letzten gescheiterten 'am' HEAD geändert zu haben.\n"
 "Keine Zurücksetzung zu ORIG_HEAD."
 
-#: git-am.sh:108
+#: git-am.sh:110
 #, sh-format
 msgid ""
 "When you have resolved this problem, run \"$cmdline --continue\".\n"
 "If you prefer to skip this patch, run \"$cmdline --skip\" instead.\n"
 "To restore the original branch and stop patching, run \"$cmdline --abort\"."
 msgstr ""
 "Wenn Sie das Problem gelöst haben, führen Sie \"$cmdline --continue\" aus.\n"
 "Falls Sie diesen Patch auslassen möchten, führen Sie stattdessen\n"
 "\"$cmdline --skip\" aus.\n"
 "Um den ursprünglichen Branch wiederherzustellen und die Anwendung der\n"
 "Patches abzubrechen, führen Sie \"$cmdline --abort\" aus."
 
-#: git-am.sh:124
+#: git-am.sh:126
 msgid "Cannot fall back to three-way merge."
 msgstr "Kann nicht zu 3-Wege-Merge zurückfallen."
 
-#: git-am.sh:140
+#: git-am.sh:142
 msgid "Repository lacks necessary blobs to fall back on 3-way merge."
 msgstr ""
 "Dem Repository fehlen notwendige Blobs um auf einen 3-Wege-Merge "
 "zurückzufallen."
 
-#: git-am.sh:142
+#: git-am.sh:144
 msgid "Using index info to reconstruct a base tree..."
 msgstr ""
 "Verwende Informationen aus der Staging-Area, um ein Basisverzeichnis "
 "nachzustellen ..."
 
-#: git-am.sh:157
+#: git-am.sh:159
 msgid ""
 "Did you hand edit your patch?\n"
 "It does not apply to blobs recorded in its index."
 msgstr ""
 "Haben Sie den Patch per Hand editiert?\n"
 "Er kann nicht auf die Blobs in seiner 'index' Zeile angewendet werden."
 
-#: git-am.sh:166
+#: git-am.sh:168
 msgid "Falling back to patching base and 3-way merge..."
 msgstr "Falle zurück zum Patchen der Basis und zum 3-Wege-Merge ..."
 
-#: git-am.sh:182
+#: git-am.sh:185
 msgid "Failed to merge in the changes."
 msgstr "Merge der Änderungen fehlgeschlagen."
 
-#: git-am.sh:277
+#: git-am.sh:280
 msgid "Only one StGIT patch series can be applied at once"
 msgstr "Es kann nur eine StGIT Patch-Serie auf einmal angewendet werden."
 
-#: git-am.sh:364
+#: git-am.sh:367
 #, sh-format
 msgid "Patch format $patch_format is not supported."
 msgstr "Patch-Format $patch_format wird nicht unterstützt."
 
-#: git-am.sh:366
+#: git-am.sh:369
 msgid "Patch format detection failed."
 msgstr "Patch-Formaterkennung fehlgeschlagen."
 
-#: git-am.sh:398
+#: git-am.sh:407
 msgid ""
 "The -b/--binary option has been a no-op for long time, and\n"
 "it will be removed. Please do not use it anymore."
 msgstr ""
 "Die -b/--binary Option hat seit Langem keinen Effekt und wird\n"
 "entfernt. Bitte nicht mehr verwenden."
 
-#: git-am.sh:496
+#: git-am.sh:507
 #, sh-format
 msgid "previous rebase directory $dotest still exists but mbox given."
 msgstr ""
 "Vorheriges Rebase-Verzeichnis $dotest existiert noch, aber mbox gegeben."
 
-#: git-am.sh:501
+#: git-am.sh:512
 msgid "Please make up your mind. --skip or --abort?"
 msgstr "Bitte werden Sie sich klar. --skip oder --abort?"
 
-#: git-am.sh:537
+#: git-am.sh:560
 #, sh-format
 msgid ""
 "Stray $dotest directory found.\n"
 "Use \"git am --abort\" to remove it."
 msgstr ""
 "Stray $dotest Verzeichnis gefunden.\n"
 "Benutzen Sie \"git am --abort\", um es zu entfernen."
 
-#: git-am.sh:545
+#: git-am.sh:568
 msgid "Resolve operation not in progress, we are not resuming."
 msgstr "Es ist keine Auflösung im Gange, es wird nicht fortgesetzt."
 
-#: git-am.sh:612
+#: git-am.sh:635
 #, sh-format
 msgid "Dirty index: cannot apply patches (dirty: $files)"
-msgstr "Geänderte Staging-Area: kann Patches nicht anwenden (geändert: $files)"
+msgstr "Geänderter Index: kann Patches nicht anwenden (geändert: $files)"
 
-#: git-am.sh:722
+#: git-am.sh:747
 #, sh-format
 msgid ""
 "Patch is empty.  Was it split wrong?\n"
 "If you would prefer to skip this patch, instead run \"$cmdline --skip\".\n"
 "To restore the original branch and stop patching run \"$cmdline --abort\"."
 msgstr ""
@@ -10557,76 +10826,76 @@
 "Wenn Sie diesen Patch auslassen möchten, führen Sie stattdessen\n"
 "\"$cmdline --skip\" aus.\n"
 "Um den ursprünglichen Branch wiederherzustellen und die Anwendung der "
 "Patches\n"
 "abzubrechen, führen Sie \"$cmdline --abort\" aus."
 
-#: git-am.sh:749
+#: git-am.sh:774
 msgid "Patch does not have a valid e-mail address."
 msgstr "Patch enthält keine gültige E-Mail-Adresse."
 
-#: git-am.sh:796
+#: git-am.sh:821
 msgid "cannot be interactive without stdin connected to a terminal."
 msgstr ""
 "Kann nicht interaktiv sein, ohne dass die Standard-Eingabe mit einem "
 "Terminal verbunden ist."
 
-#: git-am.sh:800
+#: git-am.sh:825
 msgid "Commit Body is:"
 msgstr "Commit-Beschreibung ist:"
 
 #. TRANSLATORS: Make sure to include [y], [n], [e], [v] and [a]
 #. in your translation. The program will only accept English
 #. input at this point.
-#: git-am.sh:807
+#: git-am.sh:832
 msgid "Apply? [y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all "
 msgstr "Anwenden? [y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all "
 
-#: git-am.sh:843
+#: git-am.sh:868
 #, sh-format
 msgid "Applying: $FIRSTLINE"
 msgstr "Wende an: $FIRSTLINE"
 
-#: git-am.sh:864
+#: git-am.sh:889
 msgid ""
 "No changes - did you forget to use 'git add'?\n"
 "If there is nothing left to stage, chances are that something else\n"
 "already introduced the same changes; you might want to skip this patch."
 msgstr ""
 "Keine Änderungen - haben Sie vergessen 'git add' zu benutzen?\n"
 "Wenn keine Änderungen mehr zum Commit vorzumerken sind, könnten\n"
 "diese bereits anderweitig eingefügt worden sein; Sie könnten diesen Patch\n"
 "auslassen."
 
-#: git-am.sh:872
+#: git-am.sh:897
 msgid ""
 "You still have unmerged paths in your index\n"
 "did you forget to use 'git add'?"
 msgstr ""
-"Sie haben immer noch nicht zusammengeführte Pfade in der Staging-Area.\n"
+"Sie haben immer noch nicht zusammengeführte Pfade im Index.\n"
 "Haben Sie vergessen 'git add' zu benutzen?"
 
-#: git-am.sh:888
+#: git-am.sh:913
 msgid "No changes -- Patch already applied."
 msgstr "Keine Änderungen -- Patches bereits angewendet."
 
-#: git-am.sh:898
+#: git-am.sh:923
 #, sh-format
 msgid "Patch failed at $msgnum $FIRSTLINE"
 msgstr "Anwendung des Patches fehlgeschlagen bei $msgnum $FIRSTLINE"
 
-#: git-am.sh:901
+#: git-am.sh:926
 #, sh-format
 msgid ""
 "The copy of the patch that failed is found in:\n"
 "   $dotest/patch"
 msgstr ""
 "Die Kopie des fehlgeschlagenen Patches befindet sich in:\n"
 "   $dotest/patch"
 
-#: git-am.sh:919
+#: git-am.sh:945
 msgid "applying to an empty history"
 msgstr "auf leere Historie anwenden"
 
 #: git-bisect.sh:48
 msgid "You need to start by \"git bisect start\""
 msgstr "Sie müssen mit \"git bisect start\" beginnen."
@@ -10782,57 +11051,57 @@
 "'bisect_state $state' wurde mit Fehlerwert $res beendet"
 
 #: git-bisect.sh:485
 msgid "bisect run success"
 msgstr "'bisect run' erfolgreich ausgeführt"
 
-#: git-pull.sh:21
+#: git-pull.sh:61
 msgid ""
 "Pull is not possible because you have unmerged files.\n"
 "Please, fix them up in the work tree, and then use 'git add/rm <file>'\n"
 "as appropriate to mark resolution and make a commit."
 msgstr ""
 "\"pull\" ist nicht möglich, weil Sie nicht zusammengeführte Dateien haben.\n"
 "Bitte korrigieren Sie dies im Arbeitsverzeichnis und benutzen Sie dann\n"
 "'git add/rm <Datei>', um die Auflösung entsprechend zu markieren und zu\n"
 "committen."
 
-#: git-pull.sh:25
+#: git-pull.sh:65
 msgid "Pull is not possible because you have unmerged files."
 msgstr ""
 "\"pull\" ist nicht möglich, weil Sie nicht zusammengeführte Dateien haben."
 
-#: git-pull.sh:31
+#: git-pull.sh:71
 msgid ""
 "You have not concluded your merge (MERGE_HEAD exists).\n"
 "Please, commit your changes before you can merge."
 msgstr ""
 "Sie haben Ihren Merge nicht abgeschlossen (MERGE_HEAD existiert).\n"
 "Bitte committen Sie Ihre Änderungen, bevor Sie \"merge\" ausführen können."
 
-#: git-pull.sh:245
+#: git-pull.sh:285
 msgid "updating an unborn branch with changes added to the index"
 msgstr ""
 "Aktualisiere einen ungeborenen Branch mit Änderungen, die zum Commit "
 "vorgemerkt sind"
 
-#: git-pull.sh:269
+#: git-pull.sh:311
 #, sh-format
 msgid ""
 "Warning: fetch updated the current branch head.\n"
 "Warning: fast-forwarding your working tree from\n"
 "Warning: commit $orig_head."
 msgstr ""
 "Warnung: \"fetch\" aktualisierte die Spitze des aktuellen Branches.\n"
 "Warnung: Spule Ihr Arbeitsverzeichnis von Commit $orig_head vor."
 
-#: git-pull.sh:294
+#: git-pull.sh:336
 msgid "Cannot merge multiple branches into empty head"
 msgstr "Kann nicht mehrere Branches in einen ungeborenen Branch zusammenführen"
 
-#: git-pull.sh:298
+#: git-pull.sh:340
 msgid "Cannot rebase onto multiple branches"
 msgstr "kann Rebase nicht auf mehrere Branches ausführen"
 
 #: git-rebase.sh:57
 msgid ""
 "When you have resolved this problem, run \"git rebase --continue\".\n"
@@ -10998,25 +11267,25 @@
 #: git-stash.sh:74
 msgid "You do not have the initial commit yet"
 msgstr "Sie haben bisher noch keinen initialen Commit"
 
 #: git-stash.sh:89
 msgid "Cannot save the current index state"
-msgstr "Kann den aktuellen Zustand der Staging-Area nicht speichern"
+msgstr "Kann den aktuellen Zustand des Index nicht speichern"
 
 #: git-stash.sh:124 git-stash.sh:137
 msgid "Cannot save the current worktree state"
 msgstr "Kann den aktuellen Zustand des Arbeitsverzeichnisses nicht speichern"
 
 #: git-stash.sh:141
 msgid "No changes selected"
 msgstr "Keine Änderungen ausgewählt"
 
 #: git-stash.sh:144
 msgid "Cannot remove temporary index (can't happen)"
-msgstr "Kann temporäre Staging-Area nicht löschen (kann nicht passieren)"
+msgstr "Kann temporären Index nicht löschen (kann nicht passieren)"
 
 #: git-stash.sh:157
 msgid "Cannot record working tree state"
 msgstr "Kann Zustand des Arbeitsverzeichnisses nicht aufzeichnen"
 
 #: git-stash.sh:191
@@ -11031,101 +11300,106 @@
 #. translation of "error: " takes in your language. E.g. in
 #. English this is:
 #.
 #. $ git stash save --blah-blah 2>&1 | head -n 2
 #. error: unknown option for 'stash save': --blah-blah
 #. To provide a message, use git stash save -- '--blah-blah'
-#: git-stash.sh:238
+#: git-stash.sh:241
 #, sh-format
 msgid ""
 "error: unknown option for 'stash save': $option\n"
 "       To provide a message, use git stash save -- '$option'"
 msgstr ""
 "Fehler: unbekannte Option für 'stash save': $option\n"
 "        Um eine Beschreibung anzugeben, benutzen Sie \"git stash save -- "
 "'$option'\""
 
-#: git-stash.sh:259
+#: git-stash.sh:262
 msgid "No local changes to save"
 msgstr "Keine lokalen Änderungen zum Speichern"
 
-#: git-stash.sh:263
+#: git-stash.sh:266
 msgid "Cannot initialize stash"
 msgstr "Kann \"stash\" nicht initialisieren"
 
-#: git-stash.sh:267
+#: git-stash.sh:270
 msgid "Cannot save the current status"
 msgstr "Kann den aktuellen Status nicht speichern"
 
-#: git-stash.sh:285
+#: git-stash.sh:288
 msgid "Cannot remove worktree changes"
 msgstr "Kann Änderungen im Arbeitsverzeichnis nicht löschen"
 
-#: git-stash.sh:384
+#: git-stash.sh:389
+#, sh-format
+msgid "unknown option: $opt"
+msgstr "unbekannte Option: $opt"
+
+#: git-stash.sh:399
 msgid "No stash found."
 msgstr "Kein \"stash\" gefunden."
 
-#: git-stash.sh:391
+#: git-stash.sh:406
 #, sh-format
 msgid "Too many revisions specified: $REV"
 msgstr "Zu viele Commits angegeben: $REV"
 
-#: git-stash.sh:397
+#: git-stash.sh:412
 #, sh-format
 msgid "$reference is not a valid reference"
 msgstr "$reference ist keine gültige Referenz"
 
-#: git-stash.sh:425
+#: git-stash.sh:440
 #, sh-format
 msgid "'$args' is not a stash-like commit"
 msgstr "'$args' ist kein \"stash\"-artiger Commit"
 
-#: git-stash.sh:436
+#: git-stash.sh:451
 #, sh-format
 msgid "'$args' is not a stash reference"
 msgstr "'$args' ist keine \"stash\"-Referenz"
 
-#: git-stash.sh:444
+#: git-stash.sh:459
 msgid "unable to refresh index"
-msgstr "unfähig die Staging-Area zu aktualisieren"
+msgstr "unfähig den Index zu aktualisieren"
 
-#: git-stash.sh:448
+#: git-stash.sh:463
 msgid "Cannot apply a stash in the middle of a merge"
 msgstr "Kann \"stash\" nicht anwenden, solang ein Merge im Gange ist"
 
-#: git-stash.sh:456
+#: git-stash.sh:471
 msgid "Conflicts in index. Try without --index."
-msgstr "Konflikte in der Staging-Area. Versuchen Sie es ohne --index."
+msgstr "Konflikte im Index. Versuchen Sie es ohne --index."
 
-#: git-stash.sh:458
+#: git-stash.sh:473
 msgid "Could not save index tree"
-msgstr "Konnte Staging-Area-Verzeichnis nicht speichern"
+msgstr "Konnte Index-Verzeichnis nicht speichern"
 
-#: git-stash.sh:492
+#: git-stash.sh:507
 msgid "Cannot unstage modified files"
-msgstr "Kann geänderte Dateien nicht aus der Staging-Area entfernen"
+msgstr "Kann geänderte Dateien nicht aus dem Index entfernen"
 
-#: git-stash.sh:507
+#: git-stash.sh:522
 msgid "Index was not unstashed."
-msgstr "Staging-Area wurde nicht aus dem Stash zurückgeladen."
+msgstr "Index wurde nicht aus dem Stash zurückgeladen."
 
-#: git-stash.sh:530
+#: git-stash.sh:545
 #, sh-format
 msgid "Dropped ${REV} ($s)"
 msgstr "Gelöscht ${REV} ($s)"
 
-#: git-stash.sh:531
+#: git-stash.sh:546
 #, sh-format
 msgid "${REV}: Could not drop stash entry"
 msgstr "${REV}: Konnte \"stash\"-Eintrag nicht löschen"
 
-#: git-stash.sh:539
+#: git-stash.sh:554
 msgid "No branch name specified"
 msgstr "Kein Branchname spezifiziert"
 
-#: git-stash.sh:611
+#: git-stash.sh:626
 msgid "(To restore them type \"git stash apply\")"
 msgstr "(Zur Wiederherstellung geben Sie \"git stash apply\" ein)"
 
 #: git-submodule.sh:95
 #, sh-format
 msgid "cannot strip one component off url '$remoteurl'"
@@ -11173,13 +11447,13 @@
 "$sm_path\n"
 "Benutzen Sie -f wenn Sie diesen wirklich hinzufügen möchten."
 
 #: git-submodule.sh:455
 #, sh-format
 msgid "Adding existing repo at '$sm_path' to the index"
-msgstr "Füge existierendes Repository in '$sm_path' der Staging-Area hinzu."
+msgstr "Füge existierendes Repository in '$sm_path' dem Index hinzu."
 
 #: git-submodule.sh:457
 #, sh-format
 msgid "'$sm_path' already exists and is not a valid git repo"
 msgstr "'$sm_path' existiert bereits und ist kein gültiges Git-Repository"
 
@@ -11435,12 +11709,38 @@
 
 #: git-submodule.sh:1331
 #, sh-format
 msgid "Synchronizing submodule url for '$displaypath'"
 msgstr "Synchronisiere Submodul-URL für '$displaypath'"
 
+#~ msgid "no branch specified"
+#~ msgstr "Kein Branch spezifiziert"
+
+#~ msgid "check a branch out in a separate working directory"
+#~ msgstr "Branch in separatem Arbeitsverzeichnis auschecken"
+
+#~ msgid "prune .git/worktrees"
+#~ msgstr ""
+#~ "Informationen zu nicht mehr existierenden Arbeitsverzeichnissen in .git/"
+#~ "worktrees entfernen"
+
+#~ msgid "--worktrees does not take extra arguments"
+#~ msgstr "--worktrees akzeptiert keine weiteren Argumente"
+
+#~ msgid "The most commonly used git commands are:"
+#~ msgstr "Die allgemein verwendeten Git-Kommandos sind:"
+
+#~ msgid "No such branch: '%s'"
+#~ msgstr "Kein solcher Branch '%s'"
+
+#~ msgid "Could not create git link %s"
+#~ msgstr "Konnte git-Verweis %s nicht erstellen"
+
+#~ msgid "Invalid gc.pruneexpire: '%s'"
+#~ msgstr "Ungültiges Wert für \"gc.pruneexpire\": '%s'"
+
 #~ msgid "server does not support --atomic push"
 #~ msgstr ""
 #~ "die Gegenseite unterstützt keinen atomaren Versand (\"--atomic push\")"
 
 #~ msgid "(detached from %s)"
 #~ msgstr "(losgelöst von %s)"
@@ -11484,15 +11784,12 @@
 #~ msgid "cannot lock HEAD ref"
 #~ msgstr "Kann Referenz von HEAD nicht sperren."
 
 #~ msgid "cannot update HEAD ref"
 #~ msgstr "Kann Referenz von HEAD nicht aktualisieren."
 
-#~ msgid "Invalid %s: '%s'"
-#~ msgstr "Ungültiger %s: '%s'"
-
 #~ msgid "cannot tell cwd"
 #~ msgstr "kann aktuelles Arbeitsverzeichnis nicht ermitteln"
 
 #~ msgid "%s: cannot lock the ref"
 #~ msgstr "%s: kann Referenz nicht sperren"
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/fr.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/fr.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/fr.po	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/fr.po	2015-07-28 04:34:56.000000000 +0800
@@ -1,8 +1,8 @@
 # French translations for Git.
-# Copyright (C) 2013 Jean-Noël Avila <jn.avila@free.fr>
+# Copyright (C) 2015 Jean-Noël Avila <jn.avila@free.fr>
 # This file is distributed under the same license as the Git package.
 # Jean-Noël Avila <jn.avila@free.fr>, 2013.
 # Sébastien Helleu <flashcode@flashtux.org>, 2013.
 #
 # French translations of common Git words used in this file:
 #
@@ -70,14 +70,14 @@
 #   work(ing) tree   |  copie de travail
 #
 msgid ""
 msgstr ""
 "Project-Id-Version: git\n"
 "Report-Msgid-Bugs-To: Git Mailing List <git@vger.kernel.org>\n"
-"POT-Creation-Date: 2015-04-03 08:13+0800\n"
-"PO-Revision-Date: 2015-04-04 18:03+0200\n"
+"POT-Creation-Date: 2015-07-14 07:19+0800\n"
+"PO-Revision-Date: 2015-07-14 23:02+0200\n"
 "Last-Translator: Jean-Noël Avila <jn.avila@free.fr>\n"
 "Language-Team: Jean-Noël Avila <jn.avila@free.fr>\n"
 "Language: fr\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
@@ -90,15 +90,14 @@
 
 #: advice.c:88
 msgid ""
 "Fix them up in the work tree, and then use 'git add/rm <file>'\n"
 "as appropriate to mark resolution and make a commit."
 msgstr ""
-"Corrigez-les dans la copie de travail,\n"
-"puis utilisez 'git add/rm <fichier>' si\n"
-"nécessaire pour marquer la résolution et valider."
+"Corrigez-les puis lancez 'git add/rm <fichier>'\n"
+"si nécessaire pour marquer la résolution et valider."
 
 #: archive.c:11
 msgid "git archive [<options>] <tree-ish> [<path>...]"
 msgstr "git archive [<options>] <arbre ou apparenté> [<chemin>...]"
 
 #: archive.c:12
@@ -113,13 +112,13 @@
 "apparenté> [<chemin>...]"
 
 #: archive.c:14
 msgid "git archive --remote <repo> [--exec <cmd>] --list"
 msgstr "git archive --remote <dépôt> [--exec <commande>] --list"
 
-#: archive.c:342 builtin/add.c:137 builtin/add.c:427 builtin/rm.c:328
+#: archive.c:342 builtin/add.c:137 builtin/add.c:428 builtin/rm.c:327
 #, c-format
 msgid "pathspec '%s' did not match any files"
 msgstr "le chemin '%s' ne correspond à aucun fichier"
 
 #: archive.c:427
 msgid "fmt"
@@ -136,15 +135,15 @@
 #: archive.c:429
 msgid "prepend prefix to each pathname in the archive"
 msgstr "préfixer chaque chemin de fichier dans l'archive"
 
 #: archive.c:430 builtin/archive.c:88 builtin/blame.c:2516
 #: builtin/blame.c:2517 builtin/config.c:57 builtin/fast-export.c:986
-#: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:101
+#: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:99
 #: builtin/ls-files.c:446 builtin/ls-files.c:449 builtin/notes.c:394
-#: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:151
+#: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:150
 msgid "file"
 msgstr "fichier"
 
 #: archive.c:431 builtin/archive.c:89
 msgid "write the archive to this file"
 msgstr "écrire l'archive dans ce fichier"
@@ -170,13 +169,13 @@
 msgstr "compression efficace"
 
 #: archive.c:447
 msgid "list supported archive formats"
 msgstr "afficher les formats d'archive supportés"
 
-#: archive.c:449 builtin/archive.c:90 builtin/clone.c:86
+#: archive.c:449 builtin/archive.c:90 builtin/clone.c:77
 msgid "repo"
 msgstr "dépôt"
 
 #: archive.c:450 builtin/archive.c:91
 msgid "retrieve the archive from remote repository <repo>"
 msgstr "récupérer l'archive depuis le dépôt distant <dépôt>"
@@ -186,13 +185,13 @@
 msgstr "commande"
 
 #: archive.c:452 builtin/archive.c:93
 msgid "path to the remote git-upload-archive command"
 msgstr "chemin vers la commande distante git-upload-archive"
 
-#: attr.c:264
+#: attr.c:265
 msgid ""
 "Negative patterns are ignored in git attributes\n"
 "Use '\\!' for literal leading exclamation."
 msgstr ""
 "Les motifs de négation sont ignorés dans les attributs git\n"
 "Utilisez '\\!' pour un point d'exclamation littéral."
@@ -332,14 +331,14 @@
 
 #: bundle.c:139
 msgid "Repository lacks these prerequisite commits:"
 msgstr "Le dépôt ne dispose pas des commits prérequis suivants :"
 
 #: bundle.c:163 sequencer.c:650 sequencer.c:1105 builtin/blame.c:2705
-#: builtin/branch.c:659 builtin/commit.c:1045 builtin/log.c:330
-#: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:358
+#: builtin/branch.c:651 builtin/commit.c:1045 builtin/log.c:330
+#: builtin/log.c:825 builtin/log.c:1432 builtin/log.c:1666 builtin/merge.c:358
 #: builtin/shortlog.c:158
 msgid "revision walk setup failed"
 msgstr "échec de la préparation du parcours des révisions"
 
 #: bundle.c:185
 #, c-format
@@ -583,35 +582,43 @@
 "Found errors in 'diff.dirstat' config variable:\n"
 "%s"
 msgstr ""
 "Erreurs dans la variable de configuration 'diff.dirstat' :\n"
 "%s"
 
-#: diff.c:2956
+#: diff.c:2997
 #, c-format
 msgid "external diff died, stopping at %s"
 msgstr "l'application de diff externe a disparu, arrêt à %s"
 
-#: diff.c:3351
+#: diff.c:3393
 msgid "--follow requires exactly one pathspec"
 msgstr "--follow a besoin d'une spécification de chemin unique"
 
-#: diff.c:3514
+#: diff.c:3556
 #, c-format
 msgid ""
 "Failed to parse --dirstat/-X option parameter:\n"
 "%s"
 msgstr ""
 "Impossible d'analyser le paramètre de l'option --dirstat/-X :\n"
 "%s"
 
-#: diff.c:3528
+#: diff.c:3570
 #, c-format
 msgid "Failed to parse --submodule option parameter: '%s'"
 msgstr "Impossible d'analyser le paramètre de l'option --submodule : '%s'"
 
+#: dir.c:1852
+msgid "failed to get kernel name and information"
+msgstr "echec de l'obtention d'information de kernel"
+
+#: dir.c:1945
+msgid "Untracked cache is disabled on this system."
+msgstr "Le cache non suivi est désactivé sur ce système."
+
 #: gpg-interface.c:129 gpg-interface.c:200
 msgid "could not run gpg."
 msgstr "impossible de lancer gpg."
 
 #: gpg-interface.c:141
 msgid "gpg did not accept the data"
@@ -652,50 +659,50 @@
 msgstr "commandes git disponibles dans '%s'"
 
 #: help.c:214
 msgid "git commands available from elsewhere on your $PATH"
 msgstr "commandes git disponibles depuis un autre endroit de votre $PATH"
 
-#: help.c:230
-msgid "The most commonly used git commands are:"
-msgstr "Les commandes git les plus utilisées sont :"
+#: help.c:246
+msgid "These are common Git commands used in various situations:"
+msgstr "Ci-dessous les commandes Git habituelles dans diverses situations :"
 
-#: help.c:289
+#: help.c:311
 #, c-format
 msgid ""
 "'%s' appears to be a git command, but we were not\n"
 "able to execute it. Maybe git-%s is broken?"
 msgstr ""
 "'%s' semble être une commande git, mais elle n'a pas pu\n"
 "être exécutée. Peut-être git-%s est-elle cassée ?"
 
-#: help.c:346
+#: help.c:368
 msgid "Uh oh. Your system reports no Git commands at all."
 msgstr "Ahem. Votre système n'indique aucune commande Git."
 
-#: help.c:368
+#: help.c:390
 #, c-format
 msgid ""
 "WARNING: You called a Git command named '%s', which does not exist.\n"
 "Continuing under the assumption that you meant '%s'"
 msgstr ""
 "ATTENTION : vous avez invoqué une commande Git nommée '%s' qui n'existe "
 "pas.\n"
 "Continuons en supposant que vous avez voulu dire '%s'"
 
-#: help.c:373
+#: help.c:395
 #, c-format
 msgid "in %0.1f seconds automatically..."
 msgstr "dans %0.1f secondes automatiquement..."
 
-#: help.c:380
+#: help.c:402
 #, c-format
 msgid "git: '%s' is not a git command. See 'git --help'."
 msgstr "git : '%s' n'est pas une commande git. Voir 'git --help'."
 
-#: help.c:384 help.c:444
+#: help.c:406 help.c:466
 msgid ""
 "\n"
 "Did you mean this?"
 msgid_plural ""
 "\n"
 "Did you mean one of these?"
@@ -703,31 +710,31 @@
 "\n"
 "Vouliez-vous dire cela ?"
 msgstr[1] ""
 "\n"
 "Vouliez-vous dire un de ceux-là ?"
 
-#: help.c:440
+#: help.c:462
 #, c-format
 msgid "%s: %s - %s"
 msgstr "%s: %s - %s"
 
-#: lockfile.c:283
+#: lockfile.c:345
 msgid "BUG: reopen a lockfile that is still open"
 msgstr "BUG: réouverture d'un fichier verrou déjà ouvert"
 
-#: lockfile.c:285
+#: lockfile.c:347
 msgid "BUG: reopen a lockfile that has been committed"
 msgstr "BUG: réouverture d'un fichier verrou validé"
 
 #: merge.c:41
 msgid "failed to read the cache"
 msgstr "impossible de lire le cache"
 
-#: merge.c:94 builtin/checkout.c:374 builtin/checkout.c:580
-#: builtin/clone.c:662
+#: merge.c:94 builtin/checkout.c:376 builtin/checkout.c:587
+#: builtin/clone.c:647
 msgid "unable to write new index file"
 msgstr "impossible d'écrire le nouveau fichier d'index"
 
 #: merge-recursive.c:189
 #, c-format
 msgid "(bad commit)\n"
@@ -739,249 +746,249 @@
 msgstr "échec de addinfo_cache pour le chemin '%s'"
 
 #: merge-recursive.c:270
 msgid "error building trees"
 msgstr "erreur de construction des arbres"
 
-#: merge-recursive.c:688
+#: merge-recursive.c:687
 #, c-format
 msgid "failed to create path '%s'%s"
 msgstr "impossible de créer le chemin '%s' %s"
 
-#: merge-recursive.c:699
+#: merge-recursive.c:698
 #, c-format
 msgid "Removing %s to make room for subdirectory\n"
 msgstr "Suppression de %s pour faire de la place pour le sous-répertoire\n"
 
-#: merge-recursive.c:713 merge-recursive.c:734
+#: merge-recursive.c:712 merge-recursive.c:733
 msgid ": perhaps a D/F conflict?"
 msgstr ": peut-être un conflit D/F ?"
 
-#: merge-recursive.c:724
+#: merge-recursive.c:723
 #, c-format
 msgid "refusing to lose untracked file at '%s'"
 msgstr "refus de perdre le fichier non suivi '%s'"
 
-#: merge-recursive.c:764
+#: merge-recursive.c:763
 #, c-format
 msgid "cannot read object %s '%s'"
 msgstr "impossible de lire l'objet %s '%s'"
 
-#: merge-recursive.c:766
+#: merge-recursive.c:765
 #, c-format
 msgid "blob expected for %s '%s'"
 msgstr "blob attendu pour %s '%s'"
 
-#: merge-recursive.c:789 builtin/clone.c:321
+#: merge-recursive.c:788 builtin/clone.c:306
 #, c-format
 msgid "failed to open '%s'"
 msgstr "échec à l'ouverture de '%s'"
 
-#: merge-recursive.c:797
+#: merge-recursive.c:796
 #, c-format
 msgid "failed to symlink '%s'"
 msgstr "échec à la création du lien symbolique '%s'"
 
-#: merge-recursive.c:800
+#: merge-recursive.c:799
 #, c-format
 msgid "do not know what to do with %06o %s '%s'"
 msgstr "ne sait pas traiter %06o %s '%s'"
 
-#: merge-recursive.c:938
+#: merge-recursive.c:937
 msgid "Failed to execute internal merge"
 msgstr "Échec à l'exécution de la fusion interne"
 
-#: merge-recursive.c:942
+#: merge-recursive.c:941
 #, c-format
 msgid "Unable to add %s to database"
 msgstr "Impossible d'ajouter %s à la base de données"
 
-#: merge-recursive.c:958
+#: merge-recursive.c:957
 msgid "unsupported object type in the tree"
 msgstr "type d'objet non supporté dans l'arbre"
 
-#: merge-recursive.c:1033 merge-recursive.c:1047
+#: merge-recursive.c:1032 merge-recursive.c:1046
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree."
 msgstr ""
 "CONFLIT (%s/suppression) : %s supprimé dans %s et %s dans %s. Version %s de "
 "%s laissée dans l'arbre."
 
-#: merge-recursive.c:1039 merge-recursive.c:1052
+#: merge-recursive.c:1038 merge-recursive.c:1051
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree at %s."
 msgstr ""
 "CONFLIT (%s/suppression) : %s supprimé dans %s et %s dans %s. Version %s de "
 "%s laissée dans l'arbre dans le fichier %s."
 
-#: merge-recursive.c:1093
+#: merge-recursive.c:1092
 msgid "rename"
 msgstr "renommage"
 
-#: merge-recursive.c:1093
+#: merge-recursive.c:1092
 msgid "renamed"
 msgstr "renommé"
 
-#: merge-recursive.c:1149
+#: merge-recursive.c:1148
 #, c-format
 msgid "%s is a directory in %s adding as %s instead"
 msgstr "%s est un répertoire dans %s ajouté plutôt comme %s"
 
-#: merge-recursive.c:1171
+#: merge-recursive.c:1170
 #, c-format
 msgid ""
 "CONFLICT (rename/rename): Rename \"%s\"->\"%s\" in branch \"%s\" rename \"%s"
 "\"->\"%s\" in \"%s\"%s"
 msgstr ""
 "CONFLIT (renommage/renommage) : Renommage de \"%s\"->\"%s\" dans la branche "
 "\"%s\" et renommage \"%s\"->\"%s\" dans \"%s\"%s"
 
-#: merge-recursive.c:1176
+#: merge-recursive.c:1175
 msgid " (left unresolved)"
 msgstr " (laissé non résolu)"
 
-#: merge-recursive.c:1230
+#: merge-recursive.c:1229
 #, c-format
 msgid "CONFLICT (rename/rename): Rename %s->%s in %s. Rename %s->%s in %s"
 msgstr ""
 "CONFLIT (renommage/renommage) : renommage '%s'->'%s' dans %s. Renommage '%s'-"
 ">'%s' dans %s"
 
-#: merge-recursive.c:1260
+#: merge-recursive.c:1259
 #, c-format
 msgid "Renaming %s to %s and %s to %s instead"
 msgstr "Renommage de %s en %s et de %s en %s à la place"
 
-#: merge-recursive.c:1459
+#: merge-recursive.c:1458
 #, c-format
 msgid "CONFLICT (rename/add): Rename %s->%s in %s. %s added in %s"
 msgstr ""
 "CONFLIT (renommage/ajout) : Renommage de %s->%s dans %s. %s ajouté dans %s"
 
-#: merge-recursive.c:1469
+#: merge-recursive.c:1468
 #, c-format
 msgid "Adding merged %s"
 msgstr "Ajout de %s fusionné"
 
-#: merge-recursive.c:1474 merge-recursive.c:1672
+#: merge-recursive.c:1473 merge-recursive.c:1671
 #, c-format
 msgid "Adding as %s instead"
 msgstr "Ajout plutôt comme %s"
 
-#: merge-recursive.c:1525
+#: merge-recursive.c:1524
 #, c-format
 msgid "cannot read object %s"
 msgstr "impossible de lire l'objet %s"
 
-#: merge-recursive.c:1528
+#: merge-recursive.c:1527
 #, c-format
 msgid "object %s is not a blob"
 msgstr "l'objet %s n'est pas un blob"
 
-#: merge-recursive.c:1576
+#: merge-recursive.c:1575
 msgid "modify"
 msgstr "modification"
 
-#: merge-recursive.c:1576
+#: merge-recursive.c:1575
 msgid "modified"
 msgstr "modifié"
 
-#: merge-recursive.c:1586
+#: merge-recursive.c:1585
 msgid "content"
 msgstr "contenu"
 
-#: merge-recursive.c:1593
+#: merge-recursive.c:1592
 msgid "add/add"
 msgstr "ajout/ajout"
 
-#: merge-recursive.c:1627
+#: merge-recursive.c:1626
 #, c-format
 msgid "Skipped %s (merged same as existing)"
 msgstr "%s sauté (fusion identique à l'existant)"
 
-#: merge-recursive.c:1641
+#: merge-recursive.c:1640
 #, c-format
 msgid "Auto-merging %s"
 msgstr "Fusion automatique de %s"
 
-#: merge-recursive.c:1645 git-submodule.sh:1150
+#: merge-recursive.c:1644 git-submodule.sh:1150
 msgid "submodule"
 msgstr "sous-module"
 
-#: merge-recursive.c:1646
+#: merge-recursive.c:1645
 #, c-format
 msgid "CONFLICT (%s): Merge conflict in %s"
 msgstr "CONFLIT (%s) : Conflit de fusion dans %s"
 
-#: merge-recursive.c:1732
+#: merge-recursive.c:1731
 #, c-format
 msgid "Removing %s"
 msgstr "Suppression de %s"
 
-#: merge-recursive.c:1757
+#: merge-recursive.c:1756
 msgid "file/directory"
 msgstr "fichier/répertoire"
 
-#: merge-recursive.c:1763
+#: merge-recursive.c:1762
 msgid "directory/file"
 msgstr "répertoire/fichier"
 
-#: merge-recursive.c:1768
+#: merge-recursive.c:1767
 #, c-format
 msgid "CONFLICT (%s): There is a directory with name %s in %s. Adding %s as %s"
 msgstr ""
 "CONFLIT (%s) : Il y a un répertoire nommé %s dans %s. Ajout de %s comme %s"
 
-#: merge-recursive.c:1778
+#: merge-recursive.c:1777
 #, c-format
 msgid "Adding %s"
 msgstr "Ajout de %s"
 
-#: merge-recursive.c:1795
+#: merge-recursive.c:1794
 msgid "Fatal merge failure, shouldn't happen."
 msgstr "Échec fatal de fusion, qui ne devrait jamais arriver."
 
-#: merge-recursive.c:1814
+#: merge-recursive.c:1813
 msgid "Already up-to-date!"
 msgstr "Déjà à jour !"
 
-#: merge-recursive.c:1823
+#: merge-recursive.c:1822
 #, c-format
 msgid "merging of trees %s and %s failed"
 msgstr "échec de fusion des arbres %s et %s"
 
-#: merge-recursive.c:1853
+#: merge-recursive.c:1852
 #, c-format
 msgid "Unprocessed path??? %s"
 msgstr "Chemin non traité ??? %s"
 
-#: merge-recursive.c:1901
+#: merge-recursive.c:1900
 msgid "Merging:"
 msgstr "Fusion :"
 
-#: merge-recursive.c:1914
+#: merge-recursive.c:1913
 #, c-format
 msgid "found %u common ancestor:"
 msgid_plural "found %u common ancestors:"
 msgstr[0] "%u ancêtre commun trouvé :"
 msgstr[1] "%u ancêtres communs trouvés :"
 
-#: merge-recursive.c:1951
+#: merge-recursive.c:1950
 msgid "merge returned no commit"
 msgstr "la fusion n'a pas retourné de commit"
 
-#: merge-recursive.c:2008
+#: merge-recursive.c:2007
 #, c-format
 msgid "Could not parse object '%s'"
 msgstr "Impossible d'analyser l'objet '%s'"
 
-#: merge-recursive.c:2019 builtin/merge.c:667
+#: merge-recursive.c:2018 builtin/merge.c:645
 msgid "Unable to write index."
 msgstr "Impossible d'écrire l'index."
 
 #: notes-utils.c:41
 msgid "Cannot commit uninitialized/unreferenced notes tree"
 msgstr "Impossible de valider un arbre de notes non initialisé/référencé"
@@ -1000,13 +1007,13 @@
 #. environment variable, the second %s is its value
 #: notes-utils.c:119
 #, c-format
 msgid "Bad %s value: '%s'"
 msgstr "Mauvaise valeur de %s : '%s'"
 
-#: object.c:241
+#: object.c:242
 #, c-format
 msgid "unable to parse object: %s"
 msgstr "impossible d'analyser l'objet : %s"
 
 #: parse-options.c:546
 msgid "..."
@@ -1102,95 +1109,140 @@
 "Peut-être avez-vous oublié d'ajouter ':/' ou '.' ?"
 
 #: pretty.c:968
 msgid "unable to parse --pretty format"
 msgstr "impossible d'analyser le format --pretty"
 
-#: progress.c:225
+#: progress.c:236
 msgid "done"
 msgstr "fait"
 
-#: read-cache.c:1275
+#: read-cache.c:1295
 #, c-format
 msgid ""
 "index.version set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "version d'index renseignée, mais la valeur est invalide.\n"
 "Utilisation de la version %i"
 
-#: read-cache.c:1285
+#: read-cache.c:1305
 #, c-format
 msgid ""
 "GIT_INDEX_VERSION set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "GIT_INDEX_VERSION est renseigné, mais la valeur est invalide.\n"
 "Utilisation de la version %i"
 
-#: remote.c:782
+#: remote.c:792
 #, c-format
 msgid "Cannot fetch both %s and %s to %s"
 msgstr "Impossible de récupérer à la fois %s et %s pour %s"
 
-#: remote.c:786
+#: remote.c:796
 #, c-format
 msgid "%s usually tracks %s, not %s"
 msgstr "%s suit habituellement %s, pas %s"
 
-#: remote.c:790
+#: remote.c:800
 #, c-format
 msgid "%s tracks both %s and %s"
 msgstr "%s suit à la fois %s et %s"
 
-#: remote.c:798
+#: remote.c:808
 msgid "Internal error"
 msgstr "Erreur interne"
 
-#: remote.c:1980
+#: remote.c:1723 remote.c:1766
+msgid "HEAD does not point to a branch"
+msgstr "HEAD ne pointe pas sur une branche"
+
+#: remote.c:1732
+#, c-format
+msgid "no such branch: '%s'"
+msgstr "pas de branche '%s'"
+
+#: remote.c:1735
+#, c-format
+msgid "no upstream configured for branch '%s'"
+msgstr "aucune branche amont configurée pour la branche '%s'"
+
+#: remote.c:1741
+#, c-format
+msgid "upstream branch '%s' not stored as a remote-tracking branch"
+msgstr "la branche amont '%s' n'est pas stockée comme branche de suivi"
+
+#: remote.c:1756
+#, c-format
+msgid "push destination '%s' on remote '%s' has no local tracking branch"
+msgstr ""
+"la destination de poussée '%s' sur le serveur distant '%s' n'a pas de "
+"branche locale de suivi"
+
+#: remote.c:1771
+#, c-format
+msgid "branch '%s' has no remote for pushing"
+msgstr "la branche '%s' n'a aucune branche distante de poussée"
+
+#: remote.c:1782
+#, c-format
+msgid "push refspecs for '%s' do not include '%s'"
+msgstr "les références de spec pour '%s' n'incluent pas '%s'"
+
+#: remote.c:1795
+msgid "push has no destination (push.default is 'nothing')"
+msgstr "la poussée n'a pas de destination (push.default vaut 'nothing')"
+
+#: remote.c:1817
+msgid "cannot resolve 'simple' push to a single destination"
+msgstr ""
+"impossible de résoudre une poussée 'simple' pour une destination unique"
+
+#: remote.c:2124
 #, c-format
 msgid "Your branch is based on '%s', but the upstream is gone.\n"
 msgstr "Votre branche est basée sur '%s', mais la branche amont a disparu.\n"
 
-#: remote.c:1984
+#: remote.c:2128
 msgid "  (use \"git branch --unset-upstream\" to fixup)\n"
 msgstr "  (utilisez \"git branch --unset-upstream\" pour corriger)\n"
 
-#: remote.c:1987
+#: remote.c:2131
 #, c-format
 msgid "Your branch is up-to-date with '%s'.\n"
 msgstr "Votre branche est à jour avec '%s'.\n"
 
-#: remote.c:1991
+#: remote.c:2135
 #, c-format
 msgid "Your branch is ahead of '%s' by %d commit.\n"
 msgid_plural "Your branch is ahead of '%s' by %d commits.\n"
 msgstr[0] "Votre branche est en avance sur '%s' de %d commit.\n"
 msgstr[1] "Votre branche est en avance sur '%s' de %d commits.\n"
 
-#: remote.c:1997
+#: remote.c:2141
 msgid "  (use \"git push\" to publish your local commits)\n"
 msgstr "  (utilisez \"git push\" pour publier vos commits locaux)\n"
 
-#: remote.c:2000
+#: remote.c:2144
 #, c-format
 msgid "Your branch is behind '%s' by %d commit, and can be fast-forwarded.\n"
 msgid_plural ""
 "Your branch is behind '%s' by %d commits, and can be fast-forwarded.\n"
 msgstr[0] ""
 "Votre branche est en retard sur '%s' de %d commit, et peut être mise à jour "
 "en avance rapide.\n"
 msgstr[1] ""
 "Votre branche est en retard sur '%s' de %d commits, et peut être mise à jour "
 "en avance rapide.\n"
 
-#: remote.c:2008
+#: remote.c:2152
 msgid "  (use \"git pull\" to update your local branch)\n"
 msgstr "  (utilisez \"git pull\" pour mettre à jour votre branche locale)\n"
 
-#: remote.c:2011
+#: remote.c:2155
 #, c-format
 msgid ""
 "Your branch and '%s' have diverged,\n"
 "and have %d and %d different commit each, respectively.\n"
 msgid_plural ""
 "Your branch and '%s' have diverged,\n"
@@ -1199,18 +1251,18 @@
 "Votre branche et '%s' ont divergé,\n"
 "et ont %d et %d commit différent chacune respectivement.\n"
 msgstr[1] ""
 "Votre branche et '%s' ont divergé,\n"
 "et ont %d et %d commits différents chacune respectivement.\n"
 
-#: remote.c:2021
+#: remote.c:2165
 msgid "  (use \"git pull\" to merge the remote branch into yours)\n"
 msgstr ""
 "  (utilisez \"git pull\" pour fusionner la branche distante dans la vôtre)\n"
 
-#: revision.c:2348
+#: revision.c:2366
 msgid "--first-parent is incompatible with --bisect"
 msgstr "--first-parent est incompatible avec --bisect"
 
 #: run-command.c:83
 msgid "open /dev/null failed"
 msgstr "échec de l'ouverture de /dev/null"
@@ -1221,28 +1273,28 @@
 msgstr "échec de dup2(%d,%d)"
 
 #: send-pack.c:272
 msgid "failed to sign the push certificate"
 msgstr "impossible de signer le certificat de poussée"
 
-#: send-pack.c:356
+#: send-pack.c:378
 msgid "the receiving end does not support --signed push"
 msgstr "Le receveur ne gère pas les poussées avec --signed"
 
-#: send-pack.c:366
+#: send-pack.c:389
 msgid "the receiving end does not support --atomic push"
 msgstr "Le receveur ne gère pas les poussées avec --atomic"
 
-#: sequencer.c:172 builtin/merge.c:782 builtin/merge.c:893 builtin/merge.c:995
-#: builtin/merge.c:1005
+#: sequencer.c:172 builtin/merge.c:760 builtin/merge.c:871 builtin/merge.c:973
+#: builtin/merge.c:983
 #, c-format
 msgid "Could not open '%s' for writing"
 msgstr "Impossible d'ouvrir '%s' en écriture"
 
-#: sequencer.c:174 builtin/merge.c:344 builtin/merge.c:785 builtin/merge.c:997
-#: builtin/merge.c:1010
+#: sequencer.c:174 builtin/merge.c:344 builtin/merge.c:763 builtin/merge.c:975
+#: builtin/merge.c:988
 #, c-format
 msgid "Could not write to '%s'"
 msgstr "Impossible d'écrire dans '%s'"
 
 #: sequencer.c:195
 msgid ""
@@ -1436,13 +1488,13 @@
 msgstr "impossible de résoudre HEAD"
 
 #: sequencer.c:886
 msgid "cannot abort from a branch yet to be born"
 msgstr "impossible d'abandonner depuis une branche non encore créée"
 
-#: sequencer.c:908 builtin/apply.c:4288
+#: sequencer.c:908 builtin/apply.c:4291
 #, c-format
 msgid "cannot open %s: %s"
 msgstr "impossible d'ouvrir %s : %s"
 
 #: sequencer.c:911
 #, c-format
@@ -1478,13 +1530,18 @@
 msgstr "Impossible d'annuler en tant que commit initial"
 
 #: sequencer.c:1124
 msgid "Can't cherry-pick into empty head"
 msgstr "Impossible de picorer vers une HEAD vide"
 
-#: sha1_name.c:440
+#: setup.c:243
+#, c-format
+msgid "failed to read %s"
+msgstr "échec de la lecture de %s"
+
+#: sha1_name.c:453
 msgid ""
 "Git normally never creates a ref that ends with 40 hex characters\n"
 "because it will be ignored when you just specify 40-hex. These refs\n"
 "may be created by mistake. For example,\n"
 "\n"
 "  git checkout -b $br $(git rev-parse ...)\n"
@@ -1503,31 +1560,12 @@
 "où \"$br\" est d'une manière ou d'une autre vide et une référence 40-hexa "
 "est créée.\n"
 "Veuillez examiner ces références et peut-être les supprimer. Désactivez ce "
 "message\n"
 "en lançant \"git config advice.objectNameWarning false\""
 
-#: sha1_name.c:1068
-msgid "HEAD does not point to a branch"
-msgstr "HEAD ne pointe pas sur une branche"
-
-#: sha1_name.c:1071
-#, c-format
-msgid "No such branch: '%s'"
-msgstr "Branche inconnue : '%s'"
-
-#: sha1_name.c:1073
-#, c-format
-msgid "No upstream configured for branch '%s'"
-msgstr "Aucune branche amont configurée pour la branche '%s'"
-
-#: sha1_name.c:1077
-#, c-format
-msgid "Upstream branch '%s' not stored as a remote-tracking branch"
-msgstr "La branche amont '%s' n'est pas stockée comme branche de suivi"
-
 #: submodule.c:64 submodule.c:98
 msgid "Cannot change unmerged .gitmodules, resolve merge conflicts first"
 msgstr ""
 "Modification impossible de .gitmodules non fusionné, résolvez les conflits "
 "d'abord"
 
@@ -1548,18 +1586,13 @@
 msgstr "Impossible de supprimer l'élément de .gitmodules pour %s"
 
 #: submodule.c:120
 msgid "staging updated .gitmodules failed"
 msgstr "échec de la mise en index du .gitmodules mis à jour"
 
-#: submodule.c:1109 builtin/init-db.c:371
-#, c-format
-msgid "Could not create git link %s"
-msgstr "Impossible de créer le lien git %s"
-
-#: submodule.c:1120
+#: submodule.c:1115
 #, c-format
 msgid "Could not set core.worktree in %s"
 msgstr "Impossible de paramétrer core.worktree dans %s"
 
 #: trailer.c:491 trailer.c:495 trailer.c:499 trailer.c:553 trailer.c:557
 #: trailer.c:561
@@ -1583,13 +1616,13 @@
 msgstr "impossible de lire le fichier d'entrée '%s'"
 
 #: trailer.c:704
 msgid "could not read from stdin"
 msgstr "Impossible de lire depuis l'entrée standard"
 
-#: unpack-trees.c:202
+#: unpack-trees.c:203
 msgid "Checking out files"
 msgstr "Extraction des fichiers"
 
 #: urlmatch.c:120
 msgid "invalid URL scheme name or missing '://' suffix"
 msgstr "nom de schéma d'URL invalide ou suffixe '://' manquant"
@@ -1641,12 +1674,27 @@
 msgstr "utilisateur inconnu"
 
 #: wrapper.c:564
 msgid "unable to get current working directory"
 msgstr "impossible d'accéder au répertoire de travail courant"
 
+#: wrapper.c:575
+#, c-format
+msgid "could not open %s for writing"
+msgstr "Impossible d'ouvrir '%s' en écriture"
+
+#: wrapper.c:587
+#, c-format
+msgid "could not write to %s"
+msgstr "Impossible d'écrire dans %s"
+
+#: wrapper.c:593
+#, c-format
+msgid "could not close %s"
+msgstr "impossible de fermer %s"
+
 #: wt-status.c:150
 msgid "Unmerged paths:"
 msgstr "Chemins non fusionnés :"
 
 #: wt-status.c:177 wt-status.c:204
 #, c-format
@@ -1668,17 +1716,17 @@
 "résolu)"
 
 #: wt-status.c:187
 msgid "  (use \"git rm <file>...\" to mark resolution)"
 msgstr "  (utilisez \"git rm <fichier>...\" pour marquer comme résolu)"
 
-#: wt-status.c:198 wt-status.c:878
+#: wt-status.c:198 wt-status.c:881
 msgid "Changes to be committed:"
 msgstr "Modifications qui seront validées :"
 
-#: wt-status.c:216 wt-status.c:887
+#: wt-status.c:216 wt-status.c:890
 msgid "Changes not staged for commit:"
 msgstr "Modifications qui ne seront pas validées :"
 
 #: wt-status.c:220
 msgid "  (use \"git add <file>...\" to update what will be committed)"
 msgstr ""
@@ -1787,303 +1835,303 @@
 
 #: wt-status.c:391
 #, c-format
 msgid "bug: unhandled diff status %c"
 msgstr "bogue : état de diff non géré %c"
 
-#: wt-status.c:753
+#: wt-status.c:755
 msgid "Submodules changed but not updated:"
 msgstr "Sous-modules modifiés mais non mis à jour :"
 
-#: wt-status.c:755
+#: wt-status.c:757
 msgid "Submodule changes to be committed:"
 msgstr "Changements du sous-module à valider :"
 
-#: wt-status.c:835
+#: wt-status.c:838
 msgid ""
 "Do not touch the line above.\n"
 "Everything below will be removed."
 msgstr ""
 "Ne touchez pas à la ligne ci-dessus\n"
 "Tout se qui suit sera éliminé."
 
-#: wt-status.c:946
+#: wt-status.c:949
 msgid "You have unmerged paths."
 msgstr "Vous avez des chemins non fusionnés."
 
-#: wt-status.c:949
+#: wt-status.c:952
 msgid "  (fix conflicts and run \"git commit\")"
 msgstr "  (réglez les conflits puis lancez \"git commit\")"
 
-#: wt-status.c:952
+#: wt-status.c:955
 msgid "All conflicts fixed but you are still merging."
 msgstr "Tous les conflits sont réglés mais la fusion n'est pas terminée."
 
-#: wt-status.c:955
+#: wt-status.c:958
 msgid "  (use \"git commit\" to conclude merge)"
 msgstr "  (utilisez \"git commit\" pour terminer la fusion)"
 
-#: wt-status.c:965
+#: wt-status.c:968
 msgid "You are in the middle of an am session."
 msgstr "Vous êtes au milieu d'une session am."
 
-#: wt-status.c:968
+#: wt-status.c:971
 msgid "The current patch is empty."
 msgstr "Le patch actuel est vide."
 
-#: wt-status.c:972
+#: wt-status.c:975
 msgid "  (fix conflicts and then run \"git am --continue\")"
 msgstr "  (réglez les conflits puis lancez \"git am --continue\")"
 
-#: wt-status.c:974
+#: wt-status.c:977
 msgid "  (use \"git am --skip\" to skip this patch)"
 msgstr "  (utilisez \"git am --skip\" pour sauter ce patch)"
 
-#: wt-status.c:976
+#: wt-status.c:979
 msgid "  (use \"git am --abort\" to restore the original branch)"
 msgstr "  (utilisez \"git am --abort\" pour restaurer la branche d'origine)"
 
-#: wt-status.c:1036 wt-status.c:1053
+#: wt-status.c:1039 wt-status.c:1056
 #, c-format
 msgid "You are currently rebasing branch '%s' on '%s'."
 msgstr "Vous êtes en train de rebaser la branche '%s' sur '%s'."
 
-#: wt-status.c:1041 wt-status.c:1058
+#: wt-status.c:1044 wt-status.c:1061
 msgid "You are currently rebasing."
 msgstr "Vous êtes en train de rebaser."
 
-#: wt-status.c:1044
+#: wt-status.c:1047
 msgid "  (fix conflicts and then run \"git rebase --continue\")"
 msgstr "  (réglez les conflits puis lancez \"git rebase --continue\")"
 
-#: wt-status.c:1046
+#: wt-status.c:1049
 msgid "  (use \"git rebase --skip\" to skip this patch)"
 msgstr "  (utilisez \"git rebase --skip\" pour sauter ce patch)"
 
-#: wt-status.c:1048
+#: wt-status.c:1051
 msgid "  (use \"git rebase --abort\" to check out the original branch)"
 msgstr "  (utilisez \"git rebase --abort\" pour extraire la branche d'origine)"
 
-#: wt-status.c:1061
+#: wt-status.c:1064
 msgid "  (all conflicts fixed: run \"git rebase --continue\")"
 msgstr "  (tous les conflits sont réglés : lancez \"git rebase --continue\")"
 
-#: wt-status.c:1065
+#: wt-status.c:1068
 #, c-format
 msgid ""
 "You are currently splitting a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "Vous êtes actuellement en train de fractionner un commit pendant un rebasage "
 "de la branche '%s' sur '%s'."
 
-#: wt-status.c:1070
+#: wt-status.c:1073
 msgid "You are currently splitting a commit during a rebase."
 msgstr ""
 "Vous êtes actuellement en train de fractionner un commit pendant un rebasage."
 
-#: wt-status.c:1073
+#: wt-status.c:1076
 msgid "  (Once your working directory is clean, run \"git rebase --continue\")"
 msgstr ""
 "  (Une fois la copie de travail nettoyée, lancez \"git rebase --continue\")"
 
-#: wt-status.c:1077
+#: wt-status.c:1080
 #, c-format
 msgid "You are currently editing a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "Vous êtes actuellement en train d'éditer un commit pendant un rebasage de la "
 "branche '%s' sur '%s'."
 
-#: wt-status.c:1082
+#: wt-status.c:1085
 msgid "You are currently editing a commit during a rebase."
 msgstr ""
 "Vous êtes actuellement en train d'éditer un commit pendant un rebasage."
 
-#: wt-status.c:1085
+#: wt-status.c:1088
 msgid "  (use \"git commit --amend\" to amend the current commit)"
 msgstr "  (utilisez \"git commit --amend\" pour corriger le commit actuel)"
 
-#: wt-status.c:1087
+#: wt-status.c:1090
 msgid ""
 "  (use \"git rebase --continue\" once you are satisfied with your changes)"
 msgstr ""
 "  (utilisez \"git rebase --continue\" quand vous êtes satisfait de vos "
 "modifications)"
 
-#: wt-status.c:1097
+#: wt-status.c:1100
 #, c-format
 msgid "You are currently cherry-picking commit %s."
 msgstr "Vous êtes actuellement en train de picorer le commit %s."
 
-#: wt-status.c:1102
+#: wt-status.c:1105
 msgid "  (fix conflicts and run \"git cherry-pick --continue\")"
 msgstr "  (réglez les conflits puis lancez \"git cherry-pick --continue\")"
 
-#: wt-status.c:1105
+#: wt-status.c:1108
 msgid "  (all conflicts fixed: run \"git cherry-pick --continue\")"
 msgstr ""
 "  (tous les conflits sont réglés : lancez \"git cherry-pick --continue\")"
 
-#: wt-status.c:1107
+#: wt-status.c:1110
 msgid "  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)"
 msgstr "  (utilisez \"git cherry-pick --abort\" pour annuler le picorage)"
 
-#: wt-status.c:1116
+#: wt-status.c:1119
 #, c-format
 msgid "You are currently reverting commit %s."
 msgstr "Vous êtes actuellement en train de rétablir le commit %s."
 
-#: wt-status.c:1121
+#: wt-status.c:1124
 msgid "  (fix conflicts and run \"git revert --continue\")"
 msgstr "  (réglez les conflits puis lancez \"git revert --continue\")"
 
-#: wt-status.c:1124
+#: wt-status.c:1127
 msgid "  (all conflicts fixed: run \"git revert --continue\")"
 msgstr "  (tous les conflits sont réglés : lancez \"git revert --continue\")"
 
-#: wt-status.c:1126
+#: wt-status.c:1129
 msgid "  (use \"git revert --abort\" to cancel the revert operation)"
 msgstr "  (utilisez \"git revert --abort\" pour annuler le rétablissement)"
 
-#: wt-status.c:1137
+#: wt-status.c:1140
 #, c-format
 msgid "You are currently bisecting, started from branch '%s'."
 msgstr "Vous êtes en cours de bissection, depuis la branche '%s'."
 
-#: wt-status.c:1141
+#: wt-status.c:1144
 msgid "You are currently bisecting."
 msgstr "Vous êtes en cours de bissection."
 
-#: wt-status.c:1144
+#: wt-status.c:1147
 msgid "  (use \"git bisect reset\" to get back to the original branch)"
 msgstr "  (utilisez \"git bisect reset\" pour revenir à la branche d'origine)"
 
-#: wt-status.c:1321
+#: wt-status.c:1324
 msgid "On branch "
 msgstr "Sur la branche "
 
-#: wt-status.c:1328
+#: wt-status.c:1331
 msgid "rebase in progress; onto "
 msgstr "rebasage en cours ; sur "
 
-#: wt-status.c:1333
+#: wt-status.c:1336
 msgid "HEAD detached at "
 msgstr "HEAD détachée sur "
 
-#: wt-status.c:1335
+#: wt-status.c:1338
 msgid "HEAD detached from "
 msgstr "HEAD détachée depuis "
 
-#: wt-status.c:1338
+#: wt-status.c:1341
 msgid "Not currently on any branch."
 msgstr "Actuellement sur aucun branche."
 
-#: wt-status.c:1355
+#: wt-status.c:1358
 msgid "Initial commit"
 msgstr "Validation initiale"
 
-#: wt-status.c:1369
+#: wt-status.c:1372
 msgid "Untracked files"
 msgstr "Fichiers non suivis"
 
-#: wt-status.c:1371
+#: wt-status.c:1374
 msgid "Ignored files"
 msgstr "Fichiers ignorés"
 
-#: wt-status.c:1375
+#: wt-status.c:1378
 #, c-format
 msgid ""
 "It took %.2f seconds to enumerate untracked files. 'status -uno'\n"
 "may speed it up, but you have to be careful not to forget to add\n"
 "new files yourself (see 'git help status')."
 msgstr ""
 "L'énumération des fichiers non suivis a duré %.2f secondes. 'status -uno'\n"
 "peut l'accélérer, mais vous devez alors faire attention à ne pas\n"
 "oublier d'ajouter les nouveaux fichiers par vous-même (voir 'git help "
 "status')."
 
-#: wt-status.c:1381
+#: wt-status.c:1384
 #, c-format
 msgid "Untracked files not listed%s"
 msgstr "Fichiers non suivis non affichés%s"
 
-#: wt-status.c:1383
+#: wt-status.c:1386
 msgid " (use -u option to show untracked files)"
 msgstr " (utilisez -u pour afficher les fichiers non suivis)"
 
-#: wt-status.c:1389
+#: wt-status.c:1392
 msgid "No changes"
 msgstr "Aucune modification"
 
-#: wt-status.c:1394
+#: wt-status.c:1397
 #, c-format
 msgid "no changes added to commit (use \"git add\" and/or \"git commit -a\")\n"
 msgstr ""
 "aucune modification n'a été ajoutée à la validation (utilisez \"git add\" ou "
 "\"git commit -a\")\n"
 
-#: wt-status.c:1397
+#: wt-status.c:1400
 #, c-format
 msgid "no changes added to commit\n"
 msgstr "aucune modification ajoutée à la validation\n"
 
-#: wt-status.c:1400
+#: wt-status.c:1403
 #, c-format
 msgid ""
 "nothing added to commit but untracked files present (use \"git add\" to "
 "track)\n"
 msgstr ""
 "aucune modification ajoutée à la validation mais des fichiers non suivis "
 "sont présents (utilisez \"git add\" pour les suivre)\n"
 
-#: wt-status.c:1403
+#: wt-status.c:1406
 #, c-format
 msgid "nothing added to commit but untracked files present\n"
 msgstr ""
 "aucune modification ajoutée à la validation mais des fichiers non suivis "
 "sont présents\n"
 
-#: wt-status.c:1406
+#: wt-status.c:1409
 #, c-format
 msgid "nothing to commit (create/copy files and use \"git add\" to track)\n"
 msgstr ""
 "rien à valider (créez/copiez des fichiers et utilisez \"git add\" pour les "
 "suivre)\n"
 
-#: wt-status.c:1409 wt-status.c:1414
+#: wt-status.c:1412 wt-status.c:1417
 #, c-format
 msgid "nothing to commit\n"
 msgstr "rien à valider\n"
 
-#: wt-status.c:1412
+#: wt-status.c:1415
 #, c-format
 msgid "nothing to commit (use -u to show untracked files)\n"
 msgstr "rien à valider (utilisez -u pour afficher les fichiers non suivis)\n"
 
-#: wt-status.c:1416
+#: wt-status.c:1419
 #, c-format
 msgid "nothing to commit, working directory clean\n"
 msgstr "rien à valider, la copie de travail est propre\n"
 
-#: wt-status.c:1525
+#: wt-status.c:1528
 msgid "HEAD (no branch)"
 msgstr "HEAD (aucune branche)"
 
-#: wt-status.c:1531
+#: wt-status.c:1534
 msgid "Initial commit on "
 msgstr "Validation initiale sur "
 
 # à priori on parle d'une branche ici
-#: wt-status.c:1563
+#: wt-status.c:1561
 msgid "gone"
 msgstr "disparue"
 
-#: wt-status.c:1565 wt-status.c:1573
+#: wt-status.c:1563 wt-status.c:1571
 msgid "behind "
 msgstr "derrière "
 
-#: compat/precompose_utf8.c:55 builtin/clone.c:360
+#: compat/precompose_utf8.c:55 builtin/clone.c:345
 #, c-format
 msgid "failed to unlink '%s'"
 msgstr "échec lors de l'unlink de '%s'"
 
 #: builtin/add.c:22
 msgid "git add [<options>] [--] <pathspec>..."
@@ -2104,137 +2152,141 @@
 msgstr "suppression de '%s'\n"
 
 #: builtin/add.c:134
 msgid "Unstaged changes after refreshing the index:"
 msgstr "Modifications non indexées après rafraîchissement de l'index :"
 
-#: builtin/add.c:194 builtin/rev-parse.c:785
+#: builtin/add.c:194 builtin/rev-parse.c:796
 msgid "Could not read the index"
 msgstr "Impossible de lire l'index"
 
 #: builtin/add.c:205
 #, c-format
 msgid "Could not open '%s' for writing."
 msgstr "Impossible d'ouvrir '%s' en écriture."
 
 #: builtin/add.c:209
 msgid "Could not write patch"
 msgstr "Impossible d'écrire le patch"
 
-#: builtin/add.c:214
+#: builtin/add.c:212
+msgid "editing patch failed"
+msgstr "échec de l'édition du patch"
+
+#: builtin/add.c:215
 #, c-format
 msgid "Could not stat '%s'"
 msgstr "Stat de '%s' impossible"
 
-#: builtin/add.c:216
+#: builtin/add.c:217
 msgid "Empty patch. Aborted."
 msgstr "Patch vide. Abandon."
 
-#: builtin/add.c:221
+#: builtin/add.c:222
 #, c-format
 msgid "Could not apply '%s'"
 msgstr "Impossible d'appliquer '%s'"
 
-#: builtin/add.c:231
+#: builtin/add.c:232
 msgid "The following paths are ignored by one of your .gitignore files:\n"
 msgstr ""
 "Les chemins suivants sont ignorés par un de vos fichiers .gitignore :\n"
 
-#: builtin/add.c:248 builtin/clean.c:876 builtin/fetch.c:107 builtin/mv.c:110
-#: builtin/prune-packed.c:55 builtin/push.c:508 builtin/remote.c:1372
-#: builtin/rm.c:269
+#: builtin/add.c:249 builtin/clean.c:874 builtin/fetch.c:107 builtin/mv.c:110
+#: builtin/prune-packed.c:55 builtin/push.c:508 builtin/remote.c:1369
+#: builtin/rm.c:268
 msgid "dry run"
 msgstr "simuler l'action"
 
-#: builtin/add.c:249 builtin/apply.c:4577 builtin/check-ignore.c:19
-#: builtin/commit.c:1322 builtin/count-objects.c:63 builtin/fsck.c:608
+#: builtin/add.c:250 builtin/apply.c:4580 builtin/check-ignore.c:19
+#: builtin/commit.c:1322 builtin/count-objects.c:63 builtin/fsck.c:616
 #: builtin/log.c:1617 builtin/mv.c:109 builtin/read-tree.c:114
 msgid "be verbose"
 msgstr "mode verbeux"
 
-#: builtin/add.c:251
+#: builtin/add.c:252
 msgid "interactive picking"
 msgstr "sélection interactive"
 
-#: builtin/add.c:252 builtin/checkout.c:1126 builtin/reset.c:286
+#: builtin/add.c:253 builtin/checkout.c:1221 builtin/reset.c:286
 msgid "select hunks interactively"
 msgstr "sélection interactive des sections"
 
-#: builtin/add.c:253
+#: builtin/add.c:254
 msgid "edit current diff and apply"
 msgstr "édition du diff actuel et application"
 
-#: builtin/add.c:254
+#: builtin/add.c:255
 msgid "allow adding otherwise ignored files"
 msgstr "permettre l'ajout de fichiers ignorés"
 
-#: builtin/add.c:255
+#: builtin/add.c:256
 msgid "update tracked files"
 msgstr "mettre à jour les fichiers suivis"
 
-#: builtin/add.c:256
+#: builtin/add.c:257
 msgid "record only the fact that the path will be added later"
 msgstr "enregistrer seulement le fait que le chemin sera ajouté plus tard"
 
-#: builtin/add.c:257
+#: builtin/add.c:258
 msgid "add changes from all tracked and untracked files"
 msgstr "ajouter les modifications de tous les fichiers suivis et non suivis"
 
-#: builtin/add.c:260
+#: builtin/add.c:261
 msgid "ignore paths removed in the working tree (same as --no-all)"
 msgstr ""
 "ignorer les chemins effacés dans la copie de travail (identique à --no-all)"
 
-#: builtin/add.c:262
+#: builtin/add.c:263
 msgid "don't add, only refresh the index"
 msgstr "ne pas ajouter, juste rafraîchir l'index"
 
-#: builtin/add.c:263
+#: builtin/add.c:264
 msgid "just skip files which cannot be added because of errors"
 msgstr ""
 "sauter seulement les fichiers qui ne peuvent pas être ajoutés du fait "
 "d'erreurs"
 
-#: builtin/add.c:264
+#: builtin/add.c:265
 msgid "check if - even missing - files are ignored in dry run"
 msgstr "vérifier si des fichiers - même manquants - sont ignorés, à vide"
 
-#: builtin/add.c:286
+#: builtin/add.c:287
 #, c-format
 msgid "Use -f if you really want to add them.\n"
 msgstr "Utilisez -f si vous voulez réellement les ajouter.\n"
 
-#: builtin/add.c:293
+#: builtin/add.c:294
 msgid "adding files failed"
 msgstr "échec de l'ajout de fichiers"
 
-#: builtin/add.c:329
+#: builtin/add.c:330
 msgid "-A and -u are mutually incompatible"
 msgstr "-A et -u sont mutuellement incompatibles"
 
-#: builtin/add.c:336
+#: builtin/add.c:337
 msgid "Option --ignore-missing can only be used together with --dry-run"
 msgstr ""
 "L'option --ignore-missing ne peut être utilisée qu'en complément de --dry-run"
 
-#: builtin/add.c:357
+#: builtin/add.c:358
 #, c-format
 msgid "Nothing specified, nothing added.\n"
 msgstr "Rien de spécifié, rien n'a été ajouté.\n"
 
-#: builtin/add.c:358
+#: builtin/add.c:359
 #, c-format
 msgid "Maybe you wanted to say 'git add .'?\n"
 msgstr "Vous vouliez sûrement dire 'git add .' ?\n"
 
-#: builtin/add.c:363 builtin/check-ignore.c:172 builtin/clean.c:920
-#: builtin/commit.c:335 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:299
+#: builtin/add.c:364 builtin/check-ignore.c:172 builtin/clean.c:918
+#: builtin/commit.c:335 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:298
 msgid "index file corrupt"
 msgstr "fichier d'index corrompu"
 
-#: builtin/add.c:446 builtin/apply.c:4675 builtin/mv.c:279 builtin/rm.c:431
+#: builtin/add.c:447 builtin/apply.c:4678 builtin/mv.c:279 builtin/rm.c:430
 msgid "Unable to write new index file"
 msgstr "Impossible d'écrire le nouveau fichier d'index"
 
 #: builtin/apply.c:59
 msgid "git apply [<options>] [<patch>...]"
 msgstr "git apply [<options>] [<patch>...]"
@@ -2313,432 +2365,432 @@
 "information de nom de fichier manquante dans l'en-tête de git diff lors de "
 "la suppression de %d composant de préfixe de chemin (ligne %d)"
 msgstr[1] ""
 "information de nom de fichier manquante dans l'en-tête de git diff lors de "
 "la suppression de %d composants de préfixe de chemin (ligne %d)"
 
-#: builtin/apply.c:1656
+#: builtin/apply.c:1659
 msgid "new file depends on old contents"
 msgstr "le nouveau fichier dépend de contenus anciens"
 
-#: builtin/apply.c:1658
+#: builtin/apply.c:1661
 msgid "deleted file still has contents"
 msgstr "le fichier supprimé a encore du contenu"
 
-#: builtin/apply.c:1684
+#: builtin/apply.c:1687
 #, c-format
 msgid "corrupt patch at line %d"
 msgstr "patch corrompu à la ligne %d"
 
-#: builtin/apply.c:1720
+#: builtin/apply.c:1723
 #, c-format
 msgid "new file %s depends on old contents"
 msgstr "le nouveau fichier %s dépend de contenus anciens"
 
-#: builtin/apply.c:1722
+#: builtin/apply.c:1725
 #, c-format
 msgid "deleted file %s still has contents"
 msgstr "le fichier supprimé %s a encore du contenu"
 
-#: builtin/apply.c:1725
+#: builtin/apply.c:1728
 #, c-format
 msgid "** warning: file %s becomes empty but is not deleted"
 msgstr "** attention : le fichier %s devient vide mais n'est pas supprimé"
 
-#: builtin/apply.c:1871
+#: builtin/apply.c:1874
 #, c-format
 msgid "corrupt binary patch at line %d: %.*s"
 msgstr "patch binaire corrompu à la ligne %d : %.*s"
 
-#: builtin/apply.c:1900
+#: builtin/apply.c:1903
 #, c-format
 msgid "unrecognized binary patch at line %d"
 msgstr "patch binaire non reconnu à la ligne %d"
 
-#: builtin/apply.c:2051
+#: builtin/apply.c:2054
 #, c-format
 msgid "patch with only garbage at line %d"
 msgstr "patch totalement incompréhensible à la ligne %d"
 
-#: builtin/apply.c:2141
+#: builtin/apply.c:2144
 #, c-format
 msgid "unable to read symlink %s"
 msgstr "lecture du lien symbolique %s impossible"
 
-#: builtin/apply.c:2145
+#: builtin/apply.c:2148
 #, c-format
 msgid "unable to open or read %s"
 msgstr "ouverture ou lecture de %s impossible"
 
-#: builtin/apply.c:2778
+#: builtin/apply.c:2781
 #, c-format
 msgid "invalid start of line: '%c'"
 msgstr "début de ligne invalide : '%c'"
 
-#: builtin/apply.c:2897
+#: builtin/apply.c:2900
 #, c-format
 msgid "Hunk #%d succeeded at %d (offset %d line)."
 msgid_plural "Hunk #%d succeeded at %d (offset %d lines)."
 msgstr[0] "La section n°%d a réussi à la ligne %d (offset %d ligne)."
 msgstr[1] "La section n°%d a réussi à la ligne %d (offset %d lignes)."
 
-#: builtin/apply.c:2909
+#: builtin/apply.c:2912
 #, c-format
 msgid "Context reduced to (%ld/%ld) to apply fragment at %d"
 msgstr "Contexte réduit à (%ld/%ld) pour appliquer le fragment à la ligne %d"
 
-#: builtin/apply.c:2915
+#: builtin/apply.c:2918
 #, c-format
 msgid ""
 "while searching for:\n"
 "%.*s"
 msgstr ""
 "pendant la recherche de :\n"
 "%.*s"
 
-#: builtin/apply.c:2935
+#: builtin/apply.c:2938
 #, c-format
 msgid "missing binary patch data for '%s'"
 msgstr "données de patch binaire manquantes pour '%s'"
 
-#: builtin/apply.c:3036
+#: builtin/apply.c:3039
 #, c-format
 msgid "binary patch does not apply to '%s'"
 msgstr "le patch binaire ne s'applique par correctement à '%s'"
 
-#: builtin/apply.c:3042
+#: builtin/apply.c:3045
 #, c-format
 msgid "binary patch to '%s' creates incorrect result (expecting %s, got %s)"
 msgstr ""
 "le patch binaire sur '%s' crée un résultat incorrect (%s attendu, mais %s "
 "trouvé)"
 
-#: builtin/apply.c:3063
+#: builtin/apply.c:3066
 #, c-format
 msgid "patch failed: %s:%ld"
 msgstr "le patch a échoué : %s:%ld"
 
-#: builtin/apply.c:3187
+#: builtin/apply.c:3190
 #, c-format
 msgid "cannot checkout %s"
 msgstr "extraction de %s impossible"
 
-#: builtin/apply.c:3232 builtin/apply.c:3243 builtin/apply.c:3288
+#: builtin/apply.c:3235 builtin/apply.c:3246 builtin/apply.c:3291
 #, c-format
 msgid "read of %s failed"
 msgstr "échec de la lecture de %s"
 
-#: builtin/apply.c:3240
+#: builtin/apply.c:3243
 #, c-format
 msgid "reading from '%s' beyond a symbolic link"
 msgstr "lecture depuis '%s' au-delà d'un lien symbolique"
 
-#: builtin/apply.c:3268 builtin/apply.c:3490
+#: builtin/apply.c:3271 builtin/apply.c:3493
 #, c-format
 msgid "path %s has been renamed/deleted"
 msgstr "le chemin %s a été renommé/supprimé"
 
-#: builtin/apply.c:3349 builtin/apply.c:3504
+#: builtin/apply.c:3352 builtin/apply.c:3507
 #, c-format
 msgid "%s: does not exist in index"
 msgstr "%s : n'existe pas dans l'index"
 
-#: builtin/apply.c:3353 builtin/apply.c:3496 builtin/apply.c:3518
+#: builtin/apply.c:3356 builtin/apply.c:3499 builtin/apply.c:3521
 #, c-format
 msgid "%s: %s"
 msgstr "%s : %s"
 
-#: builtin/apply.c:3358 builtin/apply.c:3512
+#: builtin/apply.c:3361 builtin/apply.c:3515
 #, c-format
 msgid "%s: does not match index"
 msgstr "%s : ne correspond pas à l'index"
 
-#: builtin/apply.c:3460
+#: builtin/apply.c:3463
 msgid "removal patch leaves file contents"
 msgstr "le patch de suppression laisse un contenu dans le fichier"
 
-#: builtin/apply.c:3529
+#: builtin/apply.c:3532
 #, c-format
 msgid "%s: wrong type"
 msgstr "%s : type erroné"
 
-#: builtin/apply.c:3531
+#: builtin/apply.c:3534
 #, c-format
 msgid "%s has type %o, expected %o"
 msgstr "%s est de type %o, mais %o attendu"
 
-#: builtin/apply.c:3690 builtin/apply.c:3692
+#: builtin/apply.c:3693 builtin/apply.c:3695
 #, c-format
 msgid "invalid path '%s'"
 msgstr "chemin invalide '%s'"
 
-#: builtin/apply.c:3747
+#: builtin/apply.c:3750
 #, c-format
 msgid "%s: already exists in index"
 msgstr "%s : existe déjà dans l'index"
 
-#: builtin/apply.c:3750
+#: builtin/apply.c:3753
 #, c-format
 msgid "%s: already exists in working directory"
 msgstr "%s : existe déjà dans la copie de travail"
 
-#: builtin/apply.c:3770
+#: builtin/apply.c:3773
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o)"
 msgstr "le nouveau mode (%o) de %s ne correspond pas à l'ancien mode (%o)"
 
-#: builtin/apply.c:3775
+#: builtin/apply.c:3778
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o) of %s"
 msgstr ""
 "le nouveau mode (%o) de %s ne correspond pas à l'ancien mode (%o) de %s"
 
-#: builtin/apply.c:3795
+#: builtin/apply.c:3798
 #, c-format
 msgid "affected file '%s' is beyond a symbolic link"
 msgstr "le fichier affecté '%s' est au-delà d'un lien symbolique"
 
-#: builtin/apply.c:3799
+#: builtin/apply.c:3802
 #, c-format
 msgid "%s: patch does not apply"
 msgstr "%s : le patch ne s'applique pas"
 
-#: builtin/apply.c:3813
+#: builtin/apply.c:3816
 #, c-format
 msgid "Checking patch %s..."
 msgstr "Vérification du patch %s..."
 
-#: builtin/apply.c:3906 builtin/checkout.c:231 builtin/reset.c:135
+#: builtin/apply.c:3909 builtin/checkout.c:233 builtin/reset.c:135
 #, c-format
 msgid "make_cache_entry failed for path '%s'"
 msgstr "échec de make_cache_entry pour le chemin '%s'"
 
-#: builtin/apply.c:4049
+#: builtin/apply.c:4052
 #, c-format
 msgid "unable to remove %s from index"
 msgstr "suppression de %s dans l'index impossible"
 
-#: builtin/apply.c:4078
+#: builtin/apply.c:4081
 #, c-format
 msgid "corrupt patch for submodule %s"
 msgstr "patch corrompu pour le sous-module %s"
 
-#: builtin/apply.c:4082
+#: builtin/apply.c:4085
 #, c-format
 msgid "unable to stat newly created file '%s'"
 msgstr "stat du fichier nouvellement créé '%s' impossible"
 
-#: builtin/apply.c:4087
+#: builtin/apply.c:4090
 #, c-format
 msgid "unable to create backing store for newly created file %s"
 msgstr ""
 "création du magasin de stockage pour le fichier nouvellement créé %s "
 "impossible"
 
-#: builtin/apply.c:4090 builtin/apply.c:4198
+#: builtin/apply.c:4093 builtin/apply.c:4201
 #, c-format
 msgid "unable to add cache entry for %s"
 msgstr "ajout de l'élément de cache %s impossible"
 
-#: builtin/apply.c:4123
+#: builtin/apply.c:4126
 #, c-format
 msgid "closing file '%s'"
 msgstr "fermeture du fichier '%s'"
 
-#: builtin/apply.c:4172
+#: builtin/apply.c:4175
 #, c-format
 msgid "unable to write file '%s' mode %o"
 msgstr "écriture du fichier '%s' mode %o impossible"
 
-#: builtin/apply.c:4259
+#: builtin/apply.c:4262
 #, c-format
 msgid "Applied patch %s cleanly."
 msgstr "Patch %s appliqué proprement."
 
-#: builtin/apply.c:4267
+#: builtin/apply.c:4270
 msgid "internal error"
 msgstr "erreur interne"
 
-#: builtin/apply.c:4270
+#: builtin/apply.c:4273
 #, c-format
 msgid "Applying patch %%s with %d reject..."
 msgid_plural "Applying patch %%s with %d rejects..."
 msgstr[0] "Application du patch %%s avec %d rejet..."
 msgstr[1] "Application du patch %%s avec %d rejets..."
 
-#: builtin/apply.c:4280
+#: builtin/apply.c:4283
 #, c-format
 msgid "truncating .rej filename to %.*s.rej"
 msgstr "troncature du nom de fichier .rej en %.*s.rej"
 
-#: builtin/apply.c:4301
+#: builtin/apply.c:4304
 #, c-format
 msgid "Hunk #%d applied cleanly."
 msgstr "Section n°%d appliquée proprement."
 
-#: builtin/apply.c:4304
+#: builtin/apply.c:4307
 #, c-format
 msgid "Rejected hunk #%d."
 msgstr "Section n°%d rejetée."
 
-#: builtin/apply.c:4394
+#: builtin/apply.c:4397
 msgid "unrecognized input"
 msgstr "entrée non reconnue"
 
-#: builtin/apply.c:4405
+#: builtin/apply.c:4408
 msgid "unable to read index file"
 msgstr "lecture du fichier d'index impossible"
 
-#: builtin/apply.c:4522 builtin/apply.c:4525 builtin/clone.c:92
+#: builtin/apply.c:4525 builtin/apply.c:4528 builtin/clone.c:85
 #: builtin/fetch.c:92
 msgid "path"
 msgstr "chemin"
 
-#: builtin/apply.c:4523
+#: builtin/apply.c:4526
 msgid "don't apply changes matching the given path"
 msgstr "ne pas appliquer les modifications qui correspondent au chemin donné"
 
-#: builtin/apply.c:4526
+#: builtin/apply.c:4529
 msgid "apply changes matching the given path"
 msgstr "appliquer les modifications qui correspondent au chemin donné"
 
-#: builtin/apply.c:4528
+#: builtin/apply.c:4531
 msgid "num"
 msgstr "num"
 
-#: builtin/apply.c:4529
+#: builtin/apply.c:4532
 msgid "remove <num> leading slashes from traditional diff paths"
 msgstr "supprimer <num> barres obliques des chemins traditionnels de diff"
 
-#: builtin/apply.c:4532
+#: builtin/apply.c:4535
 msgid "ignore additions made by the patch"
 msgstr "ignorer les additions réalisées par le patch"
 
-#: builtin/apply.c:4534
+#: builtin/apply.c:4537
 msgid "instead of applying the patch, output diffstat for the input"
 msgstr "au lieu d'appliquer le patch, afficher le diffstat de l'entrée"
 
-#: builtin/apply.c:4538
+#: builtin/apply.c:4541
 msgid "show number of added and deleted lines in decimal notation"
 msgstr ""
 "afficher le nombre de lignes ajoutées et supprimées en notation décimale"
 
-#: builtin/apply.c:4540
+#: builtin/apply.c:4543
 msgid "instead of applying the patch, output a summary for the input"
 msgstr "au lieu d'appliquer le patch, afficher un résumer de l'entrée"
 
-#: builtin/apply.c:4542
+#: builtin/apply.c:4545
 msgid "instead of applying the patch, see if the patch is applicable"
 msgstr "au lieu d'appliquer le patch, voir si le patch est applicable"
 
-#: builtin/apply.c:4544
+#: builtin/apply.c:4547
 msgid "make sure the patch is applicable to the current index"
 msgstr "s'assurer que le patch est applicable sur l'index actuel"
 
-#: builtin/apply.c:4546
+#: builtin/apply.c:4549
 msgid "apply a patch without touching the working tree"
 msgstr "appliquer les patch sans toucher à la copie de travail"
 
-#: builtin/apply.c:4548
+#: builtin/apply.c:4551
 msgid "accept a patch that touches outside the working area"
 msgstr "accepter un patch qui touche hors de la copie de travail"
 
-#: builtin/apply.c:4550
+#: builtin/apply.c:4553
 msgid "also apply the patch (use with --stat/--summary/--check)"
 msgstr "appliquer aussi le patch (à utiliser avec ---stat/--summary/--check)"
 
-#: builtin/apply.c:4552
+#: builtin/apply.c:4555
 msgid "attempt three-way merge if a patch does not apply"
 msgstr "tenter une fusion à 3 points si le patch ne s'applique pas proprement"
 
-#: builtin/apply.c:4554
+#: builtin/apply.c:4557
 msgid "build a temporary index based on embedded index information"
 msgstr ""
 "construire un index temporaire fondé sur l'information de l'index embarqué"
 
-#: builtin/apply.c:4556 builtin/checkout-index.c:198 builtin/ls-files.c:412
+#: builtin/apply.c:4559 builtin/checkout-index.c:198 builtin/ls-files.c:412
 msgid "paths are separated with NUL character"
 msgstr "les chemins sont séparés par un caractère NUL"
 
-#: builtin/apply.c:4559
+#: builtin/apply.c:4562
 msgid "ensure at least <n> lines of context match"
 msgstr "s'assurer d'au moins <n> lignes de correspondance de contexte"
 
-#: builtin/apply.c:4560
+#: builtin/apply.c:4563
 msgid "action"
 msgstr "action"
 
-#: builtin/apply.c:4561
+#: builtin/apply.c:4564
 msgid "detect new or modified lines that have whitespace errors"
 msgstr ""
 "détecter des lignes nouvelles ou modifiées qui contiennent des erreurs "
 "d'espace"
 
-#: builtin/apply.c:4564 builtin/apply.c:4567
+#: builtin/apply.c:4567 builtin/apply.c:4570
 msgid "ignore changes in whitespace when finding context"
 msgstr "ignorer des modifications d'espace lors de la recherche de contexte"
 
-#: builtin/apply.c:4570
+#: builtin/apply.c:4573
 msgid "apply the patch in reverse"
 msgstr "appliquer le patch en sens inverse"
 
-#: builtin/apply.c:4572
+#: builtin/apply.c:4575
 msgid "don't expect at least one line of context"
 msgstr "ne pas s'attendre à au moins une ligne de contexte"
 
-#: builtin/apply.c:4574
+#: builtin/apply.c:4577
 msgid "leave the rejected hunks in corresponding *.rej files"
 msgstr "laisser les sections rejetées dans les fichiers *.rej correspondants"
 
-#: builtin/apply.c:4576
+#: builtin/apply.c:4579
 msgid "allow overlapping hunks"
 msgstr "accepter les recouvrements de sections"
 
-#: builtin/apply.c:4579
+#: builtin/apply.c:4582
 msgid "tolerate incorrectly detected missing new-line at the end of file"
 msgstr ""
 "tolérer des erreurs de détection de retours chariot manquants en fin de "
 "fichier"
 
-#: builtin/apply.c:4582
+#: builtin/apply.c:4585
 msgid "do not trust the line counts in the hunk headers"
 msgstr "ne pas se fier au compte de lignes dans les en-têtes de section"
 
-#: builtin/apply.c:4584
+#: builtin/apply.c:4587
 msgid "root"
 msgstr "racine"
 
-#: builtin/apply.c:4585
+#: builtin/apply.c:4588
 msgid "prepend <root> to all filenames"
 msgstr "préfixer tous les noms de fichier avec <root>"
 
-#: builtin/apply.c:4607
+#: builtin/apply.c:4610
 msgid "--3way outside a repository"
 msgstr "--3way hors d'un dépôt"
 
-#: builtin/apply.c:4615
+#: builtin/apply.c:4618
 msgid "--index outside a repository"
 msgstr "--index hors d'un dépôt"
 
-#: builtin/apply.c:4618
+#: builtin/apply.c:4621
 msgid "--cached outside a repository"
 msgstr "--cached hors d'un dépôt"
 
-#: builtin/apply.c:4637
+#: builtin/apply.c:4640
 #, c-format
 msgid "can't open patch '%s'"
 msgstr "ouverture impossible du patch '%s'"
 
-#: builtin/apply.c:4651
+#: builtin/apply.c:4654
 #, c-format
 msgid "squelched %d whitespace error"
 msgid_plural "squelched %d whitespace errors"
 msgstr[0] "%d erreur d'espace ignorée"
 msgstr[1] "%d erreurs d'espace ignorées"
 
-#: builtin/apply.c:4657 builtin/apply.c:4667
+#: builtin/apply.c:4660 builtin/apply.c:4670
 #, c-format
 msgid "%d line adds whitespace errors."
 msgid_plural "%d lines add whitespace errors."
 msgstr[0] "%d ligne a ajouté des erreurs d'espace."
 msgstr[1] "%d lignes ont ajouté des erreurs d'espace."
 
@@ -2786,17 +2838,17 @@
 msgstr "effectuer 'git bisect next'"
 
 #: builtin/bisect--helper.c:19
 msgid "update BISECT_HEAD instead of checking out the current commit"
 msgstr "mettre à jour BISECT_HEAD au lieu d'extraire le commit actuel"
 
-#: builtin/blame.c:30
-msgid "git blame [<options>] [<rev-opts>] [<rev>] [--] file"
-msgstr "git blame [<options>] [<options-de-révision>] [<rev>] [--] fichier"
+#: builtin/blame.c:31
+msgid "git blame [<options>] [<rev-opts>] [<rev>] [--] <file>"
+msgstr "git blame [<options>] [<options-de-révision>] [<rev>] [--] <fichier>"
 
-#: builtin/blame.c:35
+#: builtin/blame.c:36
 msgid "<rev-opts> are documented in git-rev-list(1)"
 msgstr "<options-de-révision> sont documentés dans git-rev-list(1)"
 
 #: builtin/blame.c:2500
 msgid "Show blame entries as we find them, incrementally"
 msgstr ""
@@ -2919,472 +2971,489 @@
 
 #: builtin/branch.c:27
 msgid "git branch [<options>] (-m | -M) [<old-branch>] <new-branch>"
 msgstr ""
 "git branch [<options>] (-m | -M) [<ancienne-branche>] <nouvelle-branche>"
 
-#: builtin/branch.c:152
+#: builtin/branch.c:150
 #, c-format
 msgid ""
 "deleting branch '%s' that has been merged to\n"
 "         '%s', but not yet merged to HEAD."
 msgstr ""
 "suppression de la branche '%s' qui a été fusionnée dans\n"
 "         '%s', mais pas dans HEAD."
 
-#: builtin/branch.c:156
+#: builtin/branch.c:154
 #, c-format
 msgid ""
 "not deleting branch '%s' that is not yet merged to\n"
 "         '%s', even though it is merged to HEAD."
 msgstr ""
 "branche '%s' non supprimée car elle n'a pas été fusionnée dans\n"
 "         '%s', même si elle est fusionnée dans HEAD."
 
-#: builtin/branch.c:170
+#: builtin/branch.c:168
 #, c-format
 msgid "Couldn't look up commit object for '%s'"
 msgstr "Impossible de rechercher l'objet commit pour '%s'"
 
-#: builtin/branch.c:174
+#: builtin/branch.c:172
 #, c-format
 msgid ""
 "The branch '%s' is not fully merged.\n"
 "If you are sure you want to delete it, run 'git branch -D %s'."
 msgstr ""
 "La branche '%s' n'est pas totalement fusionnée.\n"
 "Si vous êtes sur que vous voulez la supprimer, lancez 'git branch -D %s'."
 
-#: builtin/branch.c:187
+#: builtin/branch.c:185
 msgid "Update of config-file failed"
 msgstr "Échec de la mise à jour du fichier de configuration"
 
-#: builtin/branch.c:215
+#: builtin/branch.c:213
 msgid "cannot use -a with -d"
 msgstr "impossible d'utiliser -a avec -d"
 
-#: builtin/branch.c:221
+#: builtin/branch.c:219
 msgid "Couldn't look up commit object for HEAD"
 msgstr "Impossible de rechercher l'objet commit pour HEAD"
 
-#: builtin/branch.c:229
+#: builtin/branch.c:227
 #, c-format
 msgid "Cannot delete the branch '%s' which you are currently on."
 msgstr "Impossible de supprimer la branche '%s' sur laquelle vous êtes."
 
-#: builtin/branch.c:245
+#: builtin/branch.c:243
 #, c-format
-msgid "remote branch '%s' not found."
-msgstr "branche distante %s' non trouvée."
+msgid "remote-tracking branch '%s' not found."
+msgstr "branche de suivi '%s' non trouvée."
 
-#: builtin/branch.c:246
+#: builtin/branch.c:244
 #, c-format
 msgid "branch '%s' not found."
 msgstr "branche '%s' non trouvée."
 
-#: builtin/branch.c:260
+#: builtin/branch.c:258
 #, c-format
-msgid "Error deleting remote branch '%s'"
-msgstr "Erreur lors de la suppression de la branche distante '%s'"
+msgid "Error deleting remote-tracking branch '%s'"
+msgstr "Erreur lors de la suppression de la branche de suivi '%s'"
 
-#: builtin/branch.c:261
+#: builtin/branch.c:259
 #, c-format
 msgid "Error deleting branch '%s'"
 msgstr "Erreur lors de la suppression de la branche '%s'"
 
-#: builtin/branch.c:268
+#: builtin/branch.c:266
 #, c-format
-msgid "Deleted remote branch %s (was %s).\n"
-msgstr "Branche distante %s supprimée (précédemment %s).\n"
+msgid "Deleted remote-tracking branch %s (was %s).\n"
+msgstr "Branche de suivi %s supprimée (précédemment %s).\n"
 
-#: builtin/branch.c:269
+#: builtin/branch.c:267
 #, c-format
 msgid "Deleted branch %s (was %s).\n"
 msgstr "Branche %s supprimée (précédemment %s).\n"
 
-#: builtin/branch.c:370
+#: builtin/branch.c:368
 #, c-format
 msgid "branch '%s' does not point at a commit"
 msgstr "la branche '%s' ne pointe pas sur un commit"
 
 # féminin pour une branche
-#: builtin/branch.c:459
+#: builtin/branch.c:451
 #, c-format
 msgid "[%s: gone]"
 msgstr "[%s: disparue]"
 
-#: builtin/branch.c:464
+#: builtin/branch.c:456
 #, c-format
 msgid "[%s]"
 msgstr "[%s]"
 
-#: builtin/branch.c:469
+#: builtin/branch.c:461
 #, c-format
 msgid "[%s: behind %d]"
 msgstr "[%s: en retard de %d]"
 
-#: builtin/branch.c:471
+#: builtin/branch.c:463
 #, c-format
 msgid "[behind %d]"
 msgstr "[en retard de %d]"
 
-#: builtin/branch.c:475
+#: builtin/branch.c:467
 #, c-format
 msgid "[%s: ahead %d]"
 msgstr "[%s : en avance de %d]"
 
-#: builtin/branch.c:477
+#: builtin/branch.c:469
 #, c-format
 msgid "[ahead %d]"
 msgstr "[en avance de %d]"
 
-#: builtin/branch.c:480
+#: builtin/branch.c:472
 #, c-format
 msgid "[%s: ahead %d, behind %d]"
 msgstr "[%s : en avance de %d, en retard de %d]"
 
-#: builtin/branch.c:483
+#: builtin/branch.c:475
 #, c-format
 msgid "[ahead %d, behind %d]"
 msgstr "[en avance de %d, en retard de %d]"
 
-#: builtin/branch.c:496
+#: builtin/branch.c:488
 msgid " **** invalid ref ****"
 msgstr " **** référence invalide ****"
 
-#: builtin/branch.c:587
+#: builtin/branch.c:579
 #, c-format
 msgid "(no branch, rebasing %s)"
 msgstr "(aucune branche, rebasage de %s)"
 
-#: builtin/branch.c:590
+#: builtin/branch.c:582
 #, c-format
 msgid "(no branch, bisect started on %s)"
 msgstr "(aucune branche, bisect a démarré sur %s)"
 
-#: builtin/branch.c:596
+#: builtin/branch.c:588
 #, c-format
 msgid "(HEAD detached at %s)"
 msgstr "(HEAD détachée sur %s)"
 
-#: builtin/branch.c:599
+#: builtin/branch.c:591
 #, c-format
 msgid "(HEAD detached from %s)"
 msgstr "(HEAD détachée depuis %s)"
 
-#: builtin/branch.c:603
+#: builtin/branch.c:595
 msgid "(no branch)"
 msgstr "(aucune branche)"
 
-#: builtin/branch.c:650
+#: builtin/branch.c:642
 #, c-format
 msgid "object '%s' does not point to a commit"
 msgstr "l'objet '%s' ne pointe pas sur un commit"
 
-#: builtin/branch.c:698
+#: builtin/branch.c:690
 msgid "some refs could not be read"
 msgstr "des références n'ont pas pu être lues"
 
-#: builtin/branch.c:711
+#: builtin/branch.c:703
 msgid "cannot rename the current branch while not on any."
 msgstr "impossible de renommer la branche actuelle, il n'y en a pas."
 
-#: builtin/branch.c:721
+#: builtin/branch.c:713
 #, c-format
 msgid "Invalid branch name: '%s'"
 msgstr "Nom de branche invalide : '%s'"
 
-#: builtin/branch.c:736
+#: builtin/branch.c:728
 msgid "Branch rename failed"
 msgstr "Échec de renommage de la branche"
 
-#: builtin/branch.c:740
+#: builtin/branch.c:732
 #, c-format
 msgid "Renamed a misnamed branch '%s' away"
 msgstr "Renommage d'un branche mal nommée '%s'"
 
-#: builtin/branch.c:744
+#: builtin/branch.c:736
 #, c-format
 msgid "Branch renamed to %s, but HEAD is not updated!"
 msgstr "La branche a été renommée en %s, mais HEAD n'est pas mise à jour !"
 
-#: builtin/branch.c:751
+#: builtin/branch.c:743
 msgid "Branch is renamed, but update of config-file failed"
 msgstr ""
 "La branche est renommée, mais la mise à jour du fichier de configuration a "
 "échoué"
 
-#: builtin/branch.c:766
+#: builtin/branch.c:758
 #, c-format
 msgid "malformed object name %s"
 msgstr "nom d'objet malformé %s"
 
-#: builtin/branch.c:790
+#: builtin/branch.c:780
 #, c-format
 msgid "could not write branch description template: %s"
 msgstr "impossible d'écrire le modèle de description de branche : %s"
 
-#: builtin/branch.c:820
+#: builtin/branch.c:810
 msgid "Generic options"
 msgstr "Options génériques"
 
-#: builtin/branch.c:822
+#: builtin/branch.c:812
 msgid "show hash and subject, give twice for upstream branch"
 msgstr "afficher le hachage et le sujet, doublé pour la branche amont"
 
-#: builtin/branch.c:823
+#: builtin/branch.c:813
 msgid "suppress informational messages"
 msgstr "supprimer les messages d'information"
 
-#: builtin/branch.c:824
+#: builtin/branch.c:814
 msgid "set up tracking mode (see git-pull(1))"
 msgstr "régler le mode de suivi (voir git-pull(1))"
 
-#: builtin/branch.c:826
+#: builtin/branch.c:816
 msgid "change upstream info"
 msgstr "modifier l'information amont"
 
-#: builtin/branch.c:830
+#: builtin/branch.c:820
 msgid "use colored output"
 msgstr "utiliser la coloration dans la sortie"
 
-#: builtin/branch.c:831
+#: builtin/branch.c:821
 msgid "act on remote-tracking branches"
 msgstr "agir sur les branches de suivi distantes"
 
-#: builtin/branch.c:834 builtin/branch.c:840 builtin/branch.c:861
-#: builtin/branch.c:867 builtin/commit.c:1582 builtin/commit.c:1583
-#: builtin/commit.c:1584 builtin/commit.c:1585 builtin/tag.c:616
+#: builtin/branch.c:824 builtin/branch.c:830 builtin/branch.c:851
+#: builtin/branch.c:857 builtin/commit.c:1581 builtin/commit.c:1582
+#: builtin/commit.c:1583 builtin/commit.c:1584 builtin/tag.c:616
 #: builtin/tag.c:622
 msgid "commit"
 msgstr "commit"
 
-#: builtin/branch.c:835 builtin/branch.c:841
+#: builtin/branch.c:825 builtin/branch.c:831
 msgid "print only branches that contain the commit"
 msgstr "afficher seulement les branches qui contiennent le commit"
 
-#: builtin/branch.c:847
+#: builtin/branch.c:837
 msgid "Specific git-branch actions:"
 msgstr "Actions spécifiques à git-branch :"
 
-#: builtin/branch.c:848
+#: builtin/branch.c:838
 msgid "list both remote-tracking and local branches"
 msgstr "afficher à la fois les branches de suivi et les branches locales"
 
-#: builtin/branch.c:850
+#: builtin/branch.c:840
 msgid "delete fully merged branch"
 msgstr "supprimer une branche totalement fusionnée"
 
-#: builtin/branch.c:851
+#: builtin/branch.c:841
 msgid "delete branch (even if not merged)"
 msgstr "supprimer une branche (même non fusionnée)"
 
-#: builtin/branch.c:852
+#: builtin/branch.c:842
 msgid "move/rename a branch and its reflog"
 msgstr "déplacer/renommer une branche et son reflog"
 
-#: builtin/branch.c:853
+#: builtin/branch.c:843
 msgid "move/rename a branch, even if target exists"
 msgstr "déplacer/renommer une branche, même si la cible existe"
 
-#: builtin/branch.c:854
+#: builtin/branch.c:844
 msgid "list branch names"
 msgstr "afficher les noms des branches"
 
-#: builtin/branch.c:855
+#: builtin/branch.c:845
 msgid "create the branch's reflog"
 msgstr "créer le reflog de la branche"
 
-#: builtin/branch.c:857
+#: builtin/branch.c:847
 msgid "edit the description for the branch"
 msgstr "éditer la description de la branche"
 
-#: builtin/branch.c:858
+#: builtin/branch.c:848
 msgid "force creation, move/rename, deletion"
 msgstr "forcer la création, le déplacement/renommage, ou la suppression"
 
-#: builtin/branch.c:861
+#: builtin/branch.c:851
 msgid "print only not merged branches"
 msgstr "afficher seulement les branches non fusionnées"
 
-#: builtin/branch.c:867
+#: builtin/branch.c:857
 msgid "print only merged branches"
 msgstr "afficher seulement les branches fusionnées"
 
-#: builtin/branch.c:871
+#: builtin/branch.c:861
 msgid "list branches in columns"
 msgstr "afficher les branches en colonnes"
 
-#: builtin/branch.c:884
+#: builtin/branch.c:874
 msgid "Failed to resolve HEAD as a valid ref."
 msgstr "Échec de résolution de HEAD comme référence valide."
 
-#: builtin/branch.c:888 builtin/clone.c:637
+#: builtin/branch.c:878 builtin/clone.c:622
 msgid "HEAD not found below refs/heads!"
 msgstr "HEAD non trouvée sous refs/heads !"
 
-#: builtin/branch.c:910
+#: builtin/branch.c:900
 msgid "--column and --verbose are incompatible"
 msgstr "--column et --verbose sont incompatibles"
 
-#: builtin/branch.c:921 builtin/branch.c:960
+#: builtin/branch.c:911 builtin/branch.c:950
 msgid "branch name required"
 msgstr "le nom de branche est requis"
 
-#: builtin/branch.c:936
+#: builtin/branch.c:926
 msgid "Cannot give description to detached HEAD"
 msgstr "Impossible de décrire une HEAD détachée"
 
-#: builtin/branch.c:941
+#: builtin/branch.c:931
 msgid "cannot edit description of more than one branch"
 msgstr "impossible d'éditer la description de plus d'une branche"
 
-#: builtin/branch.c:948
+#: builtin/branch.c:938
 #, c-format
 msgid "No commit on branch '%s' yet."
 msgstr "Aucun commit sur la branche '%s'."
 
-#: builtin/branch.c:951
+#: builtin/branch.c:941
 #, c-format
 msgid "No branch named '%s'."
 msgstr "Aucune branche nommée '%s'."
 
-#: builtin/branch.c:966
+#: builtin/branch.c:956
 msgid "too many branches for a rename operation"
 msgstr "trop de branches pour une opération de renommage"
 
-#: builtin/branch.c:971
+#: builtin/branch.c:961
 msgid "too many branches to set new upstream"
 msgstr "trop de branches pour spécifier une branche amont"
 
-#: builtin/branch.c:975
+#: builtin/branch.c:965
 #, c-format
 msgid ""
 "could not set upstream of HEAD to %s when it does not point to any branch."
 msgstr ""
 "impossible de spécifier une branche amont de HEAD par %s qui ne pointe sur "
 "aucune branche."
 
-#: builtin/branch.c:978 builtin/branch.c:1000 builtin/branch.c:1021
+#: builtin/branch.c:968 builtin/branch.c:990 builtin/branch.c:1011
 #, c-format
 msgid "no such branch '%s'"
 msgstr "pas de branche '%s'"
 
-#: builtin/branch.c:982
+#: builtin/branch.c:972
 #, c-format
 msgid "branch '%s' does not exist"
 msgstr "la branche '%s' n'existe pas"
 
-#: builtin/branch.c:994
+#: builtin/branch.c:984
 msgid "too many branches to unset upstream"
 msgstr "trop de branches pour désactiver un amont"
 
-#: builtin/branch.c:998
+#: builtin/branch.c:988
 msgid "could not unset upstream of HEAD when it does not point to any branch."
 msgstr ""
 "impossible de désactiver une branche amont de HEAD quand elle ne pointe sur "
 "aucune branche."
 
-#: builtin/branch.c:1004
+#: builtin/branch.c:994
 #, c-format
 msgid "Branch '%s' has no upstream information"
 msgstr "La branche '%s' n'a aucune information de branche amont"
 
-#: builtin/branch.c:1018
+#: builtin/branch.c:1008
 msgid "it does not make sense to create 'HEAD' manually"
 msgstr "créer manuellement 'HEAD' n'a pas de sens"
 
-#: builtin/branch.c:1024
+#: builtin/branch.c:1014
 msgid "-a and -r options to 'git branch' do not make sense with a branch name"
 msgstr ""
 "les options -a et -r de 'git branch' n'ont pas de sens avec un nom de branche"
 
-#: builtin/branch.c:1027
+#: builtin/branch.c:1017
 #, c-format
 msgid ""
 "The --set-upstream flag is deprecated and will be removed. Consider using --"
 "track or --set-upstream-to\n"
 msgstr ""
 "l'option --set-upstream est obsolète et va disparaître. Utilisez plutôt --"
 "track ou --set-upstream-to\n"
 
-#: builtin/branch.c:1044
+#: builtin/branch.c:1034
 #, c-format
 msgid ""
 "\n"
 "If you wanted to make '%s' track '%s', do this:\n"
 "\n"
 msgstr ""
 "\n"
 "Si vous vouliez que '%s' suive '%s', faîtes ceci :\n"
 "\n"
 
-#: builtin/branch.c:1045
+#: builtin/branch.c:1035
 #, c-format
 msgid "    git branch -d %s\n"
 msgstr "    git branch -d %s\n"
 
-#: builtin/branch.c:1046
+#: builtin/branch.c:1036
 #, c-format
 msgid "    git branch --set-upstream-to %s\n"
 msgstr "    git branch --set-upstream-to %s\n"
 
-#: builtin/bundle.c:47
+#: builtin/bundle.c:51
 #, c-format
 msgid "%s is okay\n"
 msgstr "%s est correct\n"
 
-#: builtin/bundle.c:56
+#: builtin/bundle.c:64
 msgid "Need a repository to create a bundle."
 msgstr "La création d'un colis requiert un dépôt."
 
-#: builtin/bundle.c:60
+#: builtin/bundle.c:68
 msgid "Need a repository to unbundle."
 msgstr "Le dépaquetage d'un colis requiert un dépôt."
 
-#: builtin/cat-file.c:326
-msgid "git cat-file (-t | -s | -e | -p | <type> | --textconv) <object>"
-msgstr "git cat-file (-t | -s | -e | -p | <type> | --textconv) <objet>"
-
-#: builtin/cat-file.c:327
-msgid "git cat-file (--batch | --batch-check) < <list-of-objects>"
-msgstr "git cat-file (--batch | --batch-check) < <liste-d-objets>"
+#: builtin/cat-file.c:369
+msgid ""
+"git cat-file (-t [--allow-unknown-type]|-s [--allow-unknown-type]|-e|-p|"
+"<type>|--textconv) <object>"
+msgstr ""
+"git cat-file (-t [--allow-unknow-type] | -s [--allow-unknow-type] | -e | -p "
+"| <type> | --textconv) <objet>"
+
+#: builtin/cat-file.c:370
+msgid ""
+"git cat-file (--batch | --batch-check) [--follow-symlinks] < <list-of-"
+"objects>"
+msgstr ""
+"git cat-file (--batch | --batch-check) [--follow-symlinks] < <liste-d-objets>"
 
-#: builtin/cat-file.c:364
+#: builtin/cat-file.c:407
 msgid "<type> can be one of: blob, tree, commit, tag"
 msgstr "<type> peut être : blob, tree, commit ou tag"
 
-#: builtin/cat-file.c:365
+#: builtin/cat-file.c:408
 msgid "show object type"
 msgstr "afficher le type de l'objet"
 
-#: builtin/cat-file.c:366
+#: builtin/cat-file.c:409
 msgid "show object size"
 msgstr "afficher la taille de l'objet"
 
-#: builtin/cat-file.c:368
+#: builtin/cat-file.c:411
 msgid "exit with zero when there's no error"
 msgstr "sortir avec un code d'erreur nul quand il n'y a aucune erreur"
 
-#: builtin/cat-file.c:369
+#: builtin/cat-file.c:412
 msgid "pretty-print object's content"
 msgstr "afficher avec mise en forme le contenu de l'objet"
 
-#: builtin/cat-file.c:371
+#: builtin/cat-file.c:414
 msgid "for blob objects, run textconv on object's content"
 msgstr "pour les objets blob, lancer textconv sur le contenu de l'objet"
 
-#: builtin/cat-file.c:373
+#: builtin/cat-file.c:416
+msgid "allow -s and -t to work with broken/corrupt objects"
+msgstr "autoriser -s et -t à travailler sur des objets cassés/corrompus"
+
+#: builtin/cat-file.c:418
 msgid "show info and content of objects fed from the standard input"
 msgstr ""
 "afficher l'information et le contenu des objets passés en entrée standard"
 
-#: builtin/cat-file.c:376
+#: builtin/cat-file.c:421
 msgid "show info about objects fed from the standard input"
 msgstr "afficher l'information des objets passés en entrée standard"
 
+#: builtin/cat-file.c:424
+msgid "follow in-tree symlinks (used with --batch or --batch-check)"
+msgstr ""
+"suivre les liens symbolique internes à la copie de travail (utilisé avec --"
+"batch ou --batch-check)"
+
 #: builtin/check-attr.c:11
 msgid "git check-attr [-a | --all | <attr>...] [--] <pathname>..."
 msgstr "git check-attr [-a | --all | <attr>...] [--] <chemin>..."
 
 #: builtin/check-attr.c:12
 msgid "git check-attr --stdin [-z] [-a | --all | <attr>...] < <list-of-paths>"
@@ -3396,22 +3465,22 @@
 msgstr "afficher tous les attributs associés au fichier"
 
 #: builtin/check-attr.c:20
 msgid "use .gitattributes only from the index"
 msgstr "utiliser .gitattributes seulement depuis l'index"
 
-#: builtin/check-attr.c:21 builtin/check-ignore.c:22 builtin/hash-object.c:98
+#: builtin/check-attr.c:21 builtin/check-ignore.c:22 builtin/hash-object.c:96
 msgid "read file names from stdin"
 msgstr "lire les noms de fichier depuis l'entrée standard"
 
 #: builtin/check-attr.c:23 builtin/check-ignore.c:24
 msgid "terminate input and output records by a NUL character"
 msgstr ""
 "terminer les enregistrements en entrée et en sortie par un caractère NUL"
 
-#: builtin/check-ignore.c:18 builtin/checkout.c:1107 builtin/gc.c:274
+#: builtin/check-ignore.c:18 builtin/checkout.c:1202 builtin/gc.c:279
 msgid "suppress progress reporting"
 msgstr "supprimer l'état d'avancement"
 
 #: builtin/check-ignore.c:26
 msgid "show non-matching input paths"
 msgstr "afficher les chemins en entrée qui ne correspondent pas"
@@ -3504,121 +3573,121 @@
 msgstr "lors de la création de fichiers, préfixer par <chaîne>"
 
 #: builtin/checkout-index.c:208
 msgid "copy out the files from named stage"
 msgstr "copier les fichiers depuis l'index nommé"
 
-#: builtin/checkout.c:25
+#: builtin/checkout.c:24
 msgid "git checkout [<options>] <branch>"
 msgstr "git checkout [<options>] <branche>"
 
-#: builtin/checkout.c:26
+#: builtin/checkout.c:25
 msgid "git checkout [<options>] [<branch>] -- <file>..."
 msgstr "git checkout [<options>] [<branche>] -- <fichier>..."
 
-#: builtin/checkout.c:132 builtin/checkout.c:165
+#: builtin/checkout.c:134 builtin/checkout.c:167
 #, c-format
 msgid "path '%s' does not have our version"
 msgstr "le chemin '%s' n'a pas notre version"
 
-#: builtin/checkout.c:134 builtin/checkout.c:167
+#: builtin/checkout.c:136 builtin/checkout.c:169
 #, c-format
 msgid "path '%s' does not have their version"
 msgstr "le chemin '%s' n'a pas leur version"
 
-#: builtin/checkout.c:150
+#: builtin/checkout.c:152
 #, c-format
 msgid "path '%s' does not have all necessary versions"
 msgstr "le chemin '%s' n'a aucune des versions nécessaires"
 
-#: builtin/checkout.c:194
+#: builtin/checkout.c:196
 #, c-format
 msgid "path '%s' does not have necessary versions"
 msgstr "le chemin '%s' n'a pas les versions nécessaires"
 
-#: builtin/checkout.c:211
+#: builtin/checkout.c:213
 #, c-format
 msgid "path '%s': cannot merge"
 msgstr "chemin '%s' : impossible de fusionner"
 
-#: builtin/checkout.c:228
+#: builtin/checkout.c:230
 #, c-format
 msgid "Unable to add merge result for '%s'"
 msgstr "Impossible d'ajouter le résultat de fusion pour '%s'"
 
-#: builtin/checkout.c:249 builtin/checkout.c:252 builtin/checkout.c:255
-#: builtin/checkout.c:258
+#: builtin/checkout.c:251 builtin/checkout.c:254 builtin/checkout.c:257
+#: builtin/checkout.c:260
 #, c-format
 msgid "'%s' cannot be used with updating paths"
 msgstr "'%s' ne peut pas être utilisé avec des mises à jour de chemins"
 
-#: builtin/checkout.c:261 builtin/checkout.c:264
+#: builtin/checkout.c:263 builtin/checkout.c:266
 #, c-format
 msgid "'%s' cannot be used with %s"
 msgstr "'%s' ne peut pas être utilisé avec %s"
 
-#: builtin/checkout.c:267
+#: builtin/checkout.c:269
 #, c-format
 msgid "Cannot update paths and switch to branch '%s' at the same time."
 msgstr ""
 "Impossible de mettre à jour les chemins et basculer sur la branche '%s' en "
 "même temps."
 
-#: builtin/checkout.c:278 builtin/checkout.c:467
+#: builtin/checkout.c:280 builtin/checkout.c:474
 msgid "corrupt index file"
 msgstr "fichier d'index corrompu"
 
-#: builtin/checkout.c:338 builtin/checkout.c:345
+#: builtin/checkout.c:340 builtin/checkout.c:347
 #, c-format
 msgid "path '%s' is unmerged"
 msgstr "le chemin '%s' n'est pas fusionné"
 
-#: builtin/checkout.c:489
+#: builtin/checkout.c:496
 msgid "you need to resolve your current index first"
 msgstr "vous devez d'abord résoudre votre index courant"
 
-#: builtin/checkout.c:615
+#: builtin/checkout.c:627
 #, c-format
 msgid "Can not do reflog for '%s'\n"
 msgstr "Impossible de faire un reflog pour '%s'\n"
 
-#: builtin/checkout.c:653
+#: builtin/checkout.c:663
 msgid "HEAD is now at"
 msgstr "HEAD est maintenant sur"
 
-#: builtin/checkout.c:660
+#: builtin/checkout.c:670
 #, c-format
 msgid "Reset branch '%s'\n"
 msgstr "Remise à zéro de la branche '%s'\n"
 
-#: builtin/checkout.c:663
+#: builtin/checkout.c:673
 #, c-format
 msgid "Already on '%s'\n"
 msgstr "Déjà sur '%s'\n"
 
-#: builtin/checkout.c:667
+#: builtin/checkout.c:677
 #, c-format
 msgid "Switched to and reset branch '%s'\n"
 msgstr "Basculement et remise à zéro de la branche '%s'\n"
 
-#: builtin/checkout.c:669 builtin/checkout.c:1050
+#: builtin/checkout.c:679 builtin/checkout.c:1134
 #, c-format
 msgid "Switched to a new branch '%s'\n"
 msgstr "Basculement sur la nouvelle branche '%s'\n"
 
-#: builtin/checkout.c:671
+#: builtin/checkout.c:681
 #, c-format
 msgid "Switched to branch '%s'\n"
 msgstr "Basculement sur la branche '%s'\n"
 
-#: builtin/checkout.c:723
+#: builtin/checkout.c:733
 #, c-format
 msgid " ... and %d more.\n"
 msgstr " ... et %d en plus.\n"
 
-#: builtin/checkout.c:729
+#: builtin/checkout.c:739
 #, c-format
 msgid ""
 "Warning: you are leaving %d commit behind, not connected to\n"
 "any of your branches:\n"
 "\n"
 "%s\n"
@@ -3635,176 +3704,200 @@
 msgstr[1] ""
 "Attention : vous abandonnez %d commits, non connectés à\n"
 "une branche :\n"
 "\n"
 "%s\n"
 
-#: builtin/checkout.c:747
+#: builtin/checkout.c:758
 #, c-format
 msgid ""
+"If you want to keep it by creating a new branch, this may be a good time\n"
+"to do so with:\n"
+"\n"
+" git branch <new-branch-name> %s\n"
+"\n"
+msgid_plural ""
 "If you want to keep them by creating a new branch, this may be a good time\n"
 "to do so with:\n"
 "\n"
 " git branch <new-branch-name> %s\n"
 "\n"
-msgstr ""
+msgstr[0] ""
+"Si vous souhaitez le garder en créant une nouvelle branche, c'est le bon "
+"moment\n"
+"pour le faire avec :\n"
+"\n"
+"git branch <nouvelle-branche> %s\n"
+"\n"
+msgstr[1] ""
 "Si vous souhaitez les garder en créant une nouvelle branche, c'est le bon "
 "moment\n"
 "pour le faire avec :\n"
 "\n"
 "git branch <nouvelle-branche> %s\n"
 "\n"
 
-#: builtin/checkout.c:777
+#: builtin/checkout.c:794
 msgid "internal error in revision walk"
 msgstr "erreur interne lors du parcours des révisions"
 
-#: builtin/checkout.c:781
+#: builtin/checkout.c:798
 msgid "Previous HEAD position was"
 msgstr "La position précédente de HEAD était sur"
 
-#: builtin/checkout.c:808 builtin/checkout.c:1045
+#: builtin/checkout.c:825 builtin/checkout.c:1129
 msgid "You are on a branch yet to be born"
 msgstr "Vous êtes sur une branche qui doit encore naître"
 
-#: builtin/checkout.c:952
+#: builtin/checkout.c:931
+#, c-format
+msgid "'%s' is already checked out at '%s'"
+msgstr "'%s' est déjà extrait dans '%s'"
+
+#: builtin/checkout.c:1036
 #, c-format
 msgid "only one reference expected, %d given."
 msgstr "une seule référence attendue, %d fournies."
 
-#: builtin/checkout.c:991
+#: builtin/checkout.c:1075
 #, c-format
 msgid "invalid reference: %s"
 msgstr "référence invalide : %s"
 
-#: builtin/checkout.c:1020
+#: builtin/checkout.c:1104
 #, c-format
 msgid "reference is not a tree: %s"
 msgstr "la référence n'est pas un arbre : %s"
 
-#: builtin/checkout.c:1059
+#: builtin/checkout.c:1143
 msgid "paths cannot be used with switching branches"
 msgstr "impossible d'utiliser des chemins avec un basculement de branches"
 
-#: builtin/checkout.c:1062 builtin/checkout.c:1066
+#: builtin/checkout.c:1146 builtin/checkout.c:1150
 #, c-format
 msgid "'%s' cannot be used with switching branches"
 msgstr "'%s' ne peut pas être utilisé avec un basculement de branches"
 
-#: builtin/checkout.c:1070 builtin/checkout.c:1073 builtin/checkout.c:1078
-#: builtin/checkout.c:1081
+#: builtin/checkout.c:1154 builtin/checkout.c:1157 builtin/checkout.c:1162
+#: builtin/checkout.c:1165
 #, c-format
 msgid "'%s' cannot be used with '%s'"
 msgstr "'%s' ne peut pas être utilisé avec '%s'"
 
-#: builtin/checkout.c:1086
+#: builtin/checkout.c:1170
 #, c-format
 msgid "Cannot switch branch to a non-commit '%s'"
 msgstr "Impossible de basculer de branche vers '%s' qui n'est pas un commit"
 
-#: builtin/checkout.c:1108 builtin/checkout.c:1110 builtin/clone.c:90
-#: builtin/remote.c:159 builtin/remote.c:161
+#: builtin/checkout.c:1203 builtin/checkout.c:1205 builtin/clone.c:83
+#: builtin/remote.c:159 builtin/remote.c:161 builtin/worktree.c:282
+#: builtin/worktree.c:284
 msgid "branch"
 msgstr "branche"
 
-#: builtin/checkout.c:1109
+#: builtin/checkout.c:1204
 msgid "create and checkout a new branch"
 msgstr "créer et extraire une nouvelle branche"
 
-#: builtin/checkout.c:1111
+#: builtin/checkout.c:1206
 msgid "create/reset and checkout a branch"
 msgstr "créer/réinitialiser et extraire une branche"
 
-#: builtin/checkout.c:1112
+#: builtin/checkout.c:1207
 msgid "create reflog for new branch"
 msgstr "créer un reflog pour une nouvelle branche"
 
-#: builtin/checkout.c:1113
+#: builtin/checkout.c:1208
 msgid "detach the HEAD at named commit"
 msgstr "détacher la HEAD à la validation nommée"
 
-#: builtin/checkout.c:1114
+#: builtin/checkout.c:1209
 msgid "set upstream info for new branch"
 msgstr "paramétrer les coordonnées de branche amont pour une nouvelle branche"
 
-#: builtin/checkout.c:1116
+#: builtin/checkout.c:1211
 msgid "new-branch"
 msgstr "nouvelle branche"
 
-#: builtin/checkout.c:1116
+#: builtin/checkout.c:1211
 msgid "new unparented branch"
 msgstr "nouvelle branche sans parent"
 
-#: builtin/checkout.c:1117
+#: builtin/checkout.c:1212
 msgid "checkout our version for unmerged files"
 msgstr "extraire notre version pour les fichiers non fusionnés"
 
-#: builtin/checkout.c:1119
+#: builtin/checkout.c:1214
 msgid "checkout their version for unmerged files"
 msgstr "extraire leur version pour les fichiers non fusionnés"
 
-#: builtin/checkout.c:1121
+#: builtin/checkout.c:1216
 msgid "force checkout (throw away local modifications)"
 msgstr "forcer l'extraction (laisser tomber les modifications locales)"
 
-#: builtin/checkout.c:1122
+#: builtin/checkout.c:1217
 msgid "perform a 3-way merge with the new branch"
 msgstr "effectuer une fusion à 3 points avec la nouvelle branche"
 
-#: builtin/checkout.c:1123 builtin/merge.c:227
+#: builtin/checkout.c:1218 builtin/merge.c:227
 msgid "update ignored files (default)"
 msgstr "mettre à jour les fichiers ignorés (par défaut)"
 
-#: builtin/checkout.c:1124 builtin/log.c:1239 parse-options.h:245
+#: builtin/checkout.c:1219 builtin/log.c:1239 parse-options.h:244
 msgid "style"
 msgstr "style"
 
-#: builtin/checkout.c:1125
+#: builtin/checkout.c:1220
 msgid "conflict style (merge or diff3)"
 msgstr "style de conflit (fusion ou diff3)"
 
-#: builtin/checkout.c:1128
+#: builtin/checkout.c:1223
 msgid "do not limit pathspecs to sparse entries only"
 msgstr "ne pas limiter les spécificateurs de chemins aux seuls éléments creux"
 
-#: builtin/checkout.c:1130
+#: builtin/checkout.c:1225
 msgid "second guess 'git checkout <no-such-branch>'"
 msgstr "réessayer d'interpréter 'git checkout <branche-inexistante>'"
 
-#: builtin/checkout.c:1153
+#: builtin/checkout.c:1227
+msgid "do not check if another worktree is holding the given ref"
+msgstr ""
+"ne pas vérifier si une autre copie de travail contient le référence fournie"
+
+#: builtin/checkout.c:1252
 msgid "-b, -B and --orphan are mutually exclusive"
 msgstr "-b, -B et --orphan sont mutuellement exclusifs"
 
-#: builtin/checkout.c:1170
+#: builtin/checkout.c:1269
 msgid "--track needs a branch name"
 msgstr "--track requiert un nom de branche"
 
-#: builtin/checkout.c:1175
+#: builtin/checkout.c:1274
 msgid "Missing branch name; try -b"
 msgstr "Nom de branche manquant ; essayez -b"
 
-#: builtin/checkout.c:1212
+#: builtin/checkout.c:1310
 msgid "invalid path specification"
 msgstr "spécification de chemin invalide"
 
-#: builtin/checkout.c:1219
+#: builtin/checkout.c:1317
 #, c-format
 msgid ""
 "Cannot update paths and switch to branch '%s' at the same time.\n"
 "Did you intend to checkout '%s' which can not be resolved as commit?"
 msgstr ""
 "Impossible de mettre à jour les chemins et de basculer sur la branche '%s' "
 "en même temps.\n"
 "Souhaitiez-vous extraire '%s' qui ne peut être résolu comme commit ?"
 
-#: builtin/checkout.c:1224
+#: builtin/checkout.c:1322
 #, c-format
 msgid "git checkout: --detach does not take a path argument '%s'"
 msgstr "git checkout: --detach n'accepte pas un argument de chemin '%s'"
 
-#: builtin/checkout.c:1228
+#: builtin/checkout.c:1326
 msgid ""
 "git checkout: --ours/--theirs, --force and --merge are incompatible when\n"
 "checking out of the index."
 msgstr ""
 "git checkout: --ours/--theirs, --force et --merge sont incompatibles lors\n"
 "de l'extraction de l'index."
@@ -3869,42 +3962,42 @@
 "2-3,6-9    - sélectionner plusieurs plages\n"
 "foo        - sélectionner un élément par un préfixe unique\n"
 "-...       - désélectionner les éléments spécifiés\n"
 "*          - choisir tous les éléments\n"
 "           - (vide) terminer la sélection"
 
-#: builtin/clean.c:517
+#: builtin/clean.c:515
 #, c-format
 msgid "Huh (%s)?"
 msgstr "Hein (%s) ?"
 
-#: builtin/clean.c:659
+#: builtin/clean.c:657
 #, c-format
 msgid "Input ignore patterns>> "
 msgstr "Entrez les motifs à ignorer>> "
 
-#: builtin/clean.c:696
+#: builtin/clean.c:694
 #, c-format
 msgid "WARNING: Cannot find items matched by: %s"
 msgstr "ATTENTION : Impossible de trouver les éléments correspondant à : %s"
 
-#: builtin/clean.c:717
+#: builtin/clean.c:715
 msgid "Select items to delete"
 msgstr "Sélectionner les éléments à supprimer"
 
 #. TRANSLATORS: Make sure to keep [y/N] as is
-#: builtin/clean.c:758
+#: builtin/clean.c:756
 #, c-format
 msgid "Remove %s [y/N]? "
 msgstr "Supprimer %s [y/N] ? "
 
-#: builtin/clean.c:783
+#: builtin/clean.c:781
 msgid "Bye."
 msgstr "Au revoir."
 
-#: builtin/clean.c:791
+#: builtin/clean.c:789
 msgid ""
 "clean               - start cleaning\n"
 "filter by pattern   - exclude items from deletion\n"
 "select by numbers   - select items to be deleted by numbers\n"
 "ask each            - confirm each deletion (like \"rm -i\")\n"
 "quit                - stop cleaning\n"
@@ -3916,358 +4009,359 @@
 "select by numbers   - sélectionner les éléments à supprimer par numéros\n"
 "ask each            - confirmer chaque suppression (comme \"rm -i\")\n"
 "quit                - arrêter le nettoyage\n"
 "help                - cet écran\n"
 "?                   - aide pour la sélection en ligne"
 
-#: builtin/clean.c:818
+#: builtin/clean.c:816
 msgid "*** Commands ***"
 msgstr "*** Commandes ***"
 
-#: builtin/clean.c:819
+#: builtin/clean.c:817
 msgid "What now"
 msgstr "Et maintenant ?"
 
-#: builtin/clean.c:827
+#: builtin/clean.c:825
 msgid "Would remove the following item:"
 msgid_plural "Would remove the following items:"
 msgstr[0] "Supprimerait l'élément suivant :"
 msgstr[1] "Supprimerait les éléments suivants :"
 
-#: builtin/clean.c:844
+#: builtin/clean.c:842
 msgid "No more files to clean, exiting."
 msgstr "Plus de fichier à nettoyer, sortie."
 
-#: builtin/clean.c:875
+#: builtin/clean.c:873
 msgid "do not print names of files removed"
 msgstr "ne pas afficher les noms des fichiers supprimés"
 
-#: builtin/clean.c:877
+#: builtin/clean.c:875
 msgid "force"
 msgstr "forcer"
 
-#: builtin/clean.c:878
+#: builtin/clean.c:876
 msgid "interactive cleaning"
 msgstr "nettoyage interactif"
 
-#: builtin/clean.c:880
+#: builtin/clean.c:878
 msgid "remove whole directories"
 msgstr "supprimer les répertoires entiers"
 
-#: builtin/clean.c:881 builtin/describe.c:407 builtin/grep.c:714
-#: builtin/ls-files.c:443 builtin/name-rev.c:311 builtin/show-ref.c:185
+#: builtin/clean.c:879 builtin/describe.c:407 builtin/grep.c:714
+#: builtin/ls-files.c:443 builtin/name-rev.c:311 builtin/show-ref.c:187
 msgid "pattern"
 msgstr "motif"
 
-#: builtin/clean.c:882
+#: builtin/clean.c:880
 msgid "add <pattern> to ignore rules"
 msgstr "ajouter <motif> aux règles ignore"
 
-#: builtin/clean.c:883
+#: builtin/clean.c:881
 msgid "remove ignored files, too"
 msgstr "supprimer les fichiers ignorés, aussi"
 
-#: builtin/clean.c:885
+#: builtin/clean.c:883
 msgid "remove only ignored files"
 msgstr "supprimer seulement les fichiers ignorés"
 
-#: builtin/clean.c:903
+#: builtin/clean.c:901
 msgid "-x and -X cannot be used together"
 msgstr "-x et -X ne peuvent pas être utilisés ensemble"
 
-#: builtin/clean.c:907
+#: builtin/clean.c:905
 msgid ""
 "clean.requireForce set to true and neither -i, -n, nor -f given; refusing to "
 "clean"
 msgstr ""
 "clean.requireForce positionné à true et ni -i, -n ou -f fourni ; refus de "
 "nettoyer"
 
-#: builtin/clean.c:910
+#: builtin/clean.c:908
 msgid ""
 "clean.requireForce defaults to true and neither -i, -n, nor -f given; "
 "refusing to clean"
 msgstr ""
 "clean.requireForce à true par défaut et ni -i, -n ou -f fourni ; refus de "
 "nettoyer"
 
 #: builtin/clone.c:37
 msgid "git clone [<options>] [--] <repo> [<dir>]"
 msgstr "git clone [<options>] [--] <dépôt> [<répertoire>]"
 
-#: builtin/clone.c:66 builtin/fetch.c:111 builtin/merge.c:224
+#: builtin/clone.c:57 builtin/fetch.c:111 builtin/merge.c:224
 #: builtin/push.c:523
 msgid "force progress reporting"
 msgstr "forcer l'affichage de l'état d'avancement"
 
-#: builtin/clone.c:68
+#: builtin/clone.c:59
 msgid "don't create a checkout"
 msgstr "ne pas créer d'extraction"
 
-#: builtin/clone.c:69 builtin/clone.c:71 builtin/init-db.c:496
+#: builtin/clone.c:60 builtin/clone.c:62 builtin/init-db.c:503
 msgid "create a bare repository"
 msgstr "créer un dépôt nu"
 
-#: builtin/clone.c:73
+#: builtin/clone.c:64
 msgid "create a mirror repository (implies bare)"
 msgstr "créer un dépôt miroir (implique dépôt nu)"
 
-#: builtin/clone.c:75
+#: builtin/clone.c:66
 msgid "to clone from a local repository"
 msgstr "pour cloner depuis un dépôt local"
 
-#: builtin/clone.c:77
+#: builtin/clone.c:68
 msgid "don't use local hardlinks, always copy"
 msgstr "ne pas utiliser de liens durs locaux, toujours copier"
 
-#: builtin/clone.c:79
+#: builtin/clone.c:70
 msgid "setup as shared repository"
 msgstr "régler comme dépôt partagé"
 
-#: builtin/clone.c:81 builtin/clone.c:83
+#: builtin/clone.c:72 builtin/clone.c:74
 msgid "initialize submodules in the clone"
 msgstr "initialiser les sous-modules dans le clone"
 
-#: builtin/clone.c:84 builtin/init-db.c:493
+#: builtin/clone.c:75 builtin/init-db.c:500
 msgid "template-directory"
 msgstr "répertoire-modèle"
 
-#: builtin/clone.c:85 builtin/init-db.c:494
+#: builtin/clone.c:76 builtin/init-db.c:501
 msgid "directory from which templates will be used"
 msgstr "répertoire depuis lequel les modèles vont être utilisés"
 
-#: builtin/clone.c:87
+#: builtin/clone.c:78
 msgid "reference repository"
 msgstr "dépôt de référence"
 
-#: builtin/clone.c:88 builtin/column.c:26 builtin/merge-file.c:44
+#: builtin/clone.c:80
+msgid "use --reference only while cloning"
+msgstr "utiliser seulement --reference pour cloner"
+
+#: builtin/clone.c:81 builtin/column.c:26 builtin/merge-file.c:44
 msgid "name"
 msgstr "nom"
 
-#: builtin/clone.c:89
+#: builtin/clone.c:82
 msgid "use <name> instead of 'origin' to track upstream"
 msgstr "utiliser <nom> au lieu de 'origin' pour suivre la branche amont"
 
-#: builtin/clone.c:91
+#: builtin/clone.c:84
 msgid "checkout <branch> instead of the remote's HEAD"
 msgstr "extraire <branche> au lieu de la HEAD du répertoire distant"
 
-#: builtin/clone.c:93
+#: builtin/clone.c:86
 msgid "path to git-upload-pack on the remote"
 msgstr "chemin vers git-upload-pack sur le serveur distant"
 
-#: builtin/clone.c:94 builtin/fetch.c:112 builtin/grep.c:659
+#: builtin/clone.c:87 builtin/fetch.c:112 builtin/grep.c:659
 msgid "depth"
 msgstr "profondeur"
 
-#: builtin/clone.c:95
+#: builtin/clone.c:88
 msgid "create a shallow clone of that depth"
 msgstr "créer un clone superficiel de cette profondeur"
 
-#: builtin/clone.c:97
+#: builtin/clone.c:90
 msgid "clone only one branch, HEAD or --branch"
 msgstr "cloner seulement une branche, HEAD ou --branch"
 
-#: builtin/clone.c:99
-msgid "use --reference only while cloning"
-msgstr "utiliser seulement --reference pour cloner"
-
-#: builtin/clone.c:100 builtin/init-db.c:502
+#: builtin/clone.c:91 builtin/init-db.c:509
 msgid "gitdir"
 msgstr "gitdir"
 
-#: builtin/clone.c:101 builtin/init-db.c:503
+#: builtin/clone.c:92 builtin/init-db.c:510
 msgid "separate git dir from working tree"
 msgstr "séparer le répertoire git de la copie de travail"
 
-#: builtin/clone.c:102
+#: builtin/clone.c:93
 msgid "key=value"
 msgstr "clé=valeur"
 
-#: builtin/clone.c:103
+#: builtin/clone.c:94
 msgid "set config inside the new repository"
 msgstr "régler la configuration dans le nouveau dépôt"
 
-#: builtin/clone.c:256
+#: builtin/clone.c:240
 #, c-format
 msgid "reference repository '%s' is not a local repository."
 msgstr "le dépôt de référence '%s' n'est pas un dépôt local."
 
-#: builtin/clone.c:260
+#: builtin/clone.c:244
 #, c-format
 msgid "reference repository '%s' is shallow"
 msgstr "le dépôt de référence '%s' est superficiel"
 
-#: builtin/clone.c:263
+#: builtin/clone.c:247
 #, c-format
 msgid "reference repository '%s' is grafted"
 msgstr "le dépôt de référence '%s' est greffé"
 
-#: builtin/clone.c:325
+#: builtin/clone.c:310
 #, c-format
 msgid "failed to create directory '%s'"
 msgstr "échec de la création du répertoire '%s'"
 
-#: builtin/clone.c:327 builtin/diff.c:84
+#: builtin/clone.c:312 builtin/diff.c:84
 #, c-format
 msgid "failed to stat '%s'"
 msgstr "échec du stat de '%s'"
 
-#: builtin/clone.c:329
+#: builtin/clone.c:314
 #, c-format
 msgid "%s exists and is not a directory"
 msgstr "%s existe et n'est pas un répertoire"
 
-#: builtin/clone.c:343
+#: builtin/clone.c:328
 #, c-format
 msgid "failed to stat %s\n"
 msgstr "échec du stat de %s\n"
 
-#: builtin/clone.c:365
+#: builtin/clone.c:350
 #, c-format
 msgid "failed to create link '%s'"
 msgstr "échec de la création du lien '%s'"
 
-#: builtin/clone.c:369
+#: builtin/clone.c:354
 #, c-format
 msgid "failed to copy file to '%s'"
 msgstr "échec de la copie vers '%s'"
 
-#: builtin/clone.c:392 builtin/clone.c:566
+#: builtin/clone.c:377 builtin/clone.c:551
 #, c-format
 msgid "done.\n"
 msgstr "fait.\n"
 
-#: builtin/clone.c:404
+#: builtin/clone.c:389
 msgid ""
 "Clone succeeded, but checkout failed.\n"
 "You can inspect what was checked out with 'git status'\n"
 "and retry the checkout with 'git checkout -f HEAD'\n"
 msgstr ""
 "Le clone a réussi, mais l'extraction a échoué.\n"
 "Vous pouvez inspecter ce qui a été extrait avec 'git status'\n"
 "et réessayer l'extraction avec 'git checkout -f HEAD'\n"
 
-#: builtin/clone.c:481
+#: builtin/clone.c:466
 #, c-format
 msgid "Could not find remote branch %s to clone."
 msgstr "Impossible de trouver la branche distante '%s' à cloner."
 
-#: builtin/clone.c:561
+#: builtin/clone.c:546
 #, c-format
 msgid "Checking connectivity... "
 msgstr "Vérification de la connectivité... "
 
-#: builtin/clone.c:564
+#: builtin/clone.c:549
 msgid "remote did not send all necessary objects"
 msgstr "le serveur distant n'a pas envoyé tous les objets nécessaires"
 
-#: builtin/clone.c:628
+#: builtin/clone.c:613
 msgid "remote HEAD refers to nonexistent ref, unable to checkout.\n"
 msgstr ""
 "la HEAD distante réfère à une référence non existante, impossible de "
 "l'extraire.\n"
 
-#: builtin/clone.c:659
+#: builtin/clone.c:644
 msgid "unable to checkout working tree"
 msgstr "impossible d'extraire la copie de travail"
 
-#: builtin/clone.c:746
+#: builtin/clone.c:731
 msgid "cannot repack to clean up"
 msgstr "impossible de remballer pour nettoyer"
 
-#: builtin/clone.c:748
+#: builtin/clone.c:733
 msgid "cannot unlink temporary alternates file"
 msgstr "impossible de unlinker le fichier temporaire alternates"
 
-#: builtin/clone.c:778
+#: builtin/clone.c:763
 msgid "Too many arguments."
 msgstr "Trop d'arguments."
 
-#: builtin/clone.c:782
+#: builtin/clone.c:767
 msgid "You must specify a repository to clone."
 msgstr "Vous devez spécifier un dépôt à cloner."
 
-#: builtin/clone.c:793
+#: builtin/clone.c:778
 #, c-format
 msgid "--bare and --origin %s options are incompatible."
 msgstr "les options --bare et --origin %s sont incompatibles."
 
-#: builtin/clone.c:796
+#: builtin/clone.c:781
 msgid "--bare and --separate-git-dir are incompatible."
 msgstr "--bare et --separate-git-dir sont incompatibles."
 
-#: builtin/clone.c:809
+#: builtin/clone.c:794
 #, c-format
 msgid "repository '%s' does not exist"
 msgstr "le dépôt '%s' n'existe pas"
 
-#: builtin/clone.c:815 builtin/fetch.c:1156
+#: builtin/clone.c:800 builtin/fetch.c:1160
 #, c-format
 msgid "depth %s is not a positive number"
 msgstr "la profondeur %s n'est pas un entier positif"
 
-#: builtin/clone.c:825
+#: builtin/clone.c:810
 #, c-format
 msgid "destination path '%s' already exists and is not an empty directory."
 msgstr ""
 "le chemin de destination '%s' existe déjà et n'est pas un répertoire vide."
 
-#: builtin/clone.c:835
+#: builtin/clone.c:820
 #, c-format
 msgid "working tree '%s' already exists."
 msgstr "la copie de travail '%s' existe déjà."
 
-#: builtin/clone.c:850 builtin/clone.c:861
+#: builtin/clone.c:835 builtin/clone.c:846 builtin/worktree.c:193
+#: builtin/worktree.c:220
 #, c-format
 msgid "could not create leading directories of '%s'"
 msgstr "impossible de créer les répertoires de premier niveau dans '%s'"
 
-#: builtin/clone.c:853
+#: builtin/clone.c:838
 #, c-format
 msgid "could not create work tree dir '%s'"
 msgstr "impossible de créer le répertoire de la copie de travail '%s'"
 
-#: builtin/clone.c:871
+#: builtin/clone.c:856
 #, c-format
 msgid "Cloning into bare repository '%s'...\n"
 msgstr "Clonage dans le dépôt nu '%s'\n"
 
-#: builtin/clone.c:873
+#: builtin/clone.c:858
 #, c-format
 msgid "Cloning into '%s'...\n"
 msgstr "Clonage dans '%s'...\n"
 
-#: builtin/clone.c:898
+#: builtin/clone.c:883
 msgid "--dissociate given, but there is no --reference"
 msgstr "--dissociate est spécifié, mais --reference est absent"
 
-#: builtin/clone.c:913
+#: builtin/clone.c:900
 msgid "--depth is ignored in local clones; use file:// instead."
 msgstr ""
 "--depth est ignoré dans les clones locaux : utilisez plutôt \"file://\"."
 
-#: builtin/clone.c:916
+#: builtin/clone.c:903
 msgid "source repository is shallow, ignoring --local"
 msgstr "le dépôt source est superficiel, option --local ignorée"
 
-#: builtin/clone.c:921
+#: builtin/clone.c:908
 msgid "--local is ignored"
 msgstr "--local est ignoré"
 
-#: builtin/clone.c:925
+#: builtin/clone.c:912
 #, c-format
 msgid "Don't know how to clone %s"
 msgstr "Je ne sais pas cloner %s"
 
-#: builtin/clone.c:976 builtin/clone.c:984
+#: builtin/clone.c:961 builtin/clone.c:969
 #, c-format
 msgid "Remote branch %s not found in upstream %s"
 msgstr "La branche distante %s n'a pas été trouvée dans le dépôt amont %s"
 
-#: builtin/clone.c:987
+#: builtin/clone.c:972
 msgid "You appear to have cloned an empty repository."
 msgstr "Vous semblez avoir cloné un dépôt vide."
 
 #: builtin/column.c:9
 msgid "git column [<options>]"
 msgstr "git column [<options>]"
@@ -4502,13 +4596,13 @@
 msgstr "impossible de lire MERGE_MSG"
 
 #: builtin/commit.c:734
 msgid "could not read SQUASH_MSG"
 msgstr "impossible de lire SQUASH_MSG"
 
-#: builtin/commit.c:738
+#: builtin/commit.c:738 builtin/merge.c:1079
 #, c-format
 msgid "could not read '%s'"
 msgstr "impossible de lire '%s'"
 
 #: builtin/commit.c:785
 msgid "could not write commit template"
@@ -4665,48 +4759,48 @@
 msgstr "Mode de nettoyage invalide %s"
 
 #: builtin/commit.c:1214
 msgid "Paths with -a does not make sense."
 msgstr "Spécifier des chemins avec l'option -a n'a pas de sens."
 
-#: builtin/commit.c:1324 builtin/commit.c:1604
+#: builtin/commit.c:1324 builtin/commit.c:1603
 msgid "show status concisely"
 msgstr "afficher le statut avec concision"
 
-#: builtin/commit.c:1326 builtin/commit.c:1606
+#: builtin/commit.c:1326 builtin/commit.c:1605
 msgid "show branch information"
 msgstr "afficher l'information de branche"
 
-#: builtin/commit.c:1328 builtin/commit.c:1608 builtin/push.c:509
+#: builtin/commit.c:1328 builtin/commit.c:1607 builtin/push.c:509
 msgid "machine-readable output"
 msgstr "sortie pour traitement automatique"
 
-#: builtin/commit.c:1331 builtin/commit.c:1610
+#: builtin/commit.c:1331 builtin/commit.c:1609
 msgid "show status in long format (default)"
 msgstr "afficher le statut en format long (par défaut)"
 
-#: builtin/commit.c:1334 builtin/commit.c:1613
+#: builtin/commit.c:1334 builtin/commit.c:1612
 msgid "terminate entries with NUL"
 msgstr "terminer les éléments par NUL"
 
-#: builtin/commit.c:1336 builtin/commit.c:1616 builtin/fast-export.c:980
+#: builtin/commit.c:1336 builtin/commit.c:1615 builtin/fast-export.c:980
 #: builtin/fast-export.c:983 builtin/tag.c:603
 msgid "mode"
 msgstr "mode"
 
-#: builtin/commit.c:1337 builtin/commit.c:1616
+#: builtin/commit.c:1337 builtin/commit.c:1615
 msgid "show untracked files, optional modes: all, normal, no. (Default: all)"
 msgstr ""
 "afficher les fichiers non suivis, \"mode\" facultatif : all (tous), normal, "
 "no. (Défaut : all)"
 
 #: builtin/commit.c:1340
 msgid "show ignored files"
 msgstr "afficher les fichiers ignorés"
 
-#: builtin/commit.c:1341 parse-options.h:153
+#: builtin/commit.c:1341 parse-options.h:152
 msgid "when"
 msgstr "quand"
 
 #: builtin/commit.c:1342
 msgid ""
 "ignore changes to submodules, optional when: all, dirty, untracked. "
@@ -4716,211 +4810,211 @@
 "(tous), dirty (sale), untracked (non suivi). (Défaut : all)"
 
 #: builtin/commit.c:1344
 msgid "list untracked files in columns"
 msgstr "afficher les fichiers non suivis en colonnes"
 
-#: builtin/commit.c:1431
+#: builtin/commit.c:1430
 msgid "couldn't look up newly created commit"
 msgstr "impossible de retrouver le commit nouvellement créé"
 
-#: builtin/commit.c:1433
+#: builtin/commit.c:1432
 msgid "could not parse newly created commit"
 msgstr "impossible d'analyser le commit nouvellement créé"
 
-#: builtin/commit.c:1478
+#: builtin/commit.c:1477
 msgid "detached HEAD"
 msgstr "HEAD détachée"
 
-#: builtin/commit.c:1481
+#: builtin/commit.c:1480
 msgid " (root-commit)"
 msgstr " (commit racine)"
 
-#: builtin/commit.c:1574
+#: builtin/commit.c:1573
 msgid "suppress summary after successful commit"
 msgstr "supprimer le résumé après une validation réussie"
 
-#: builtin/commit.c:1575
+#: builtin/commit.c:1574
 msgid "show diff in commit message template"
 msgstr "afficher les diff dans le modèle de message de validation"
 
-#: builtin/commit.c:1577
+#: builtin/commit.c:1576
 msgid "Commit message options"
 msgstr "Options du message de validation"
 
-#: builtin/commit.c:1578 builtin/tag.c:601
+#: builtin/commit.c:1577 builtin/tag.c:601
 msgid "read message from file"
 msgstr "lire le message depuis un fichier"
 
-#: builtin/commit.c:1579
+#: builtin/commit.c:1578
 msgid "author"
 msgstr "auteur"
 
-#: builtin/commit.c:1579
+#: builtin/commit.c:1578
 msgid "override author for commit"
 msgstr "remplacer l'auteur pour la validation"
 
-#: builtin/commit.c:1580 builtin/gc.c:275
+#: builtin/commit.c:1579 builtin/gc.c:280
 msgid "date"
 msgstr "date"
 
-#: builtin/commit.c:1580
+#: builtin/commit.c:1579
 msgid "override date for commit"
 msgstr "remplacer la date pour la validation"
 
-#: builtin/commit.c:1581 builtin/merge.c:218 builtin/notes.c:391
+#: builtin/commit.c:1580 builtin/merge.c:218 builtin/notes.c:391
 #: builtin/notes.c:554 builtin/tag.c:599
 msgid "message"
 msgstr "message"
 
-#: builtin/commit.c:1581
+#: builtin/commit.c:1580
 msgid "commit message"
 msgstr "message de validation"
 
-#: builtin/commit.c:1582
+#: builtin/commit.c:1581
 msgid "reuse and edit message from specified commit"
 msgstr "réutiliser et éditer le message du commit spécifié"
 
-#: builtin/commit.c:1583
+#: builtin/commit.c:1582
 msgid "reuse message from specified commit"
 msgstr "réutiliser le message du commit spécifié"
 
-#: builtin/commit.c:1584
+#: builtin/commit.c:1583
 msgid "use autosquash formatted message to fixup specified commit"
 msgstr ""
 "utiliser un message au format autosquash pour corriger le commit spécifié"
 
-#: builtin/commit.c:1585
+#: builtin/commit.c:1584
 msgid "use autosquash formatted message to squash specified commit"
 msgstr ""
 "utiliser un message au format autosquash pour compresser le commit spécifié"
 
-#: builtin/commit.c:1586
+#: builtin/commit.c:1585
 msgid "the commit is authored by me now (used with -C/-c/--amend)"
 msgstr ""
 "à présent je suis l'auteur de la validation (utilisé avec -C/-c/--amend)"
 
-#: builtin/commit.c:1587 builtin/log.c:1191 builtin/revert.c:86
+#: builtin/commit.c:1586 builtin/log.c:1191 builtin/revert.c:86
 msgid "add Signed-off-by:"
 msgstr "ajouter une entrée Signed-off-by :"
 
-#: builtin/commit.c:1588
+#: builtin/commit.c:1587
 msgid "use specified template file"
 msgstr "utiliser le fichier de modèle spécifié"
 
-#: builtin/commit.c:1589
+#: builtin/commit.c:1588
 msgid "force edit of commit"
 msgstr "forcer l'édition du commit"
 
-#: builtin/commit.c:1590
+#: builtin/commit.c:1589
 msgid "default"
 msgstr "défaut"
 
-#: builtin/commit.c:1590 builtin/tag.c:604
+#: builtin/commit.c:1589 builtin/tag.c:604
 msgid "how to strip spaces and #comments from message"
 msgstr "comment éliminer les espaces et les commentaires # du message"
 
-#: builtin/commit.c:1591
+#: builtin/commit.c:1590
 msgid "include status in commit message template"
 msgstr "inclure le statut dans le modèle de message de validation"
 
-#: builtin/commit.c:1592 builtin/merge.c:225 builtin/revert.c:92
+#: builtin/commit.c:1591 builtin/merge.c:225 builtin/revert.c:92
 #: builtin/tag.c:605
 msgid "key-id"
 msgstr "id de clé"
 
-#: builtin/commit.c:1593 builtin/merge.c:226 builtin/revert.c:93
+#: builtin/commit.c:1592 builtin/merge.c:226 builtin/revert.c:93
 msgid "GPG sign commit"
 msgstr "signer la validation avec GPG"
 
-#: builtin/commit.c:1596
+#: builtin/commit.c:1595
 msgid "Commit contents options"
 msgstr "Valider les options des contenus"
 
-#: builtin/commit.c:1597
+#: builtin/commit.c:1596
 msgid "commit all changed files"
 msgstr "valider tous les fichiers modifiés"
 
-#: builtin/commit.c:1598
+#: builtin/commit.c:1597
 msgid "add specified files to index for commit"
 msgstr "ajouter les fichiers spécifiés à l'index pour la validation"
 
-#: builtin/commit.c:1599
+#: builtin/commit.c:1598
 msgid "interactively add files"
 msgstr "ajouter des fichiers en mode interactif"
 
-#: builtin/commit.c:1600
+#: builtin/commit.c:1599
 msgid "interactively add changes"
 msgstr "ajouter les modifications en mode interactif"
 
-#: builtin/commit.c:1601
+#: builtin/commit.c:1600
 msgid "commit only specified files"
 msgstr "valider seulement les fichiers spécifiés"
 
-#: builtin/commit.c:1602
+#: builtin/commit.c:1601
 msgid "bypass pre-commit hook"
 msgstr "éviter d'utiliser le crochet pre-commit"
 
-#: builtin/commit.c:1603
+#: builtin/commit.c:1602
 msgid "show what would be committed"
 msgstr "afficher ce qui serait validé"
 
-#: builtin/commit.c:1614
+#: builtin/commit.c:1613
 msgid "amend previous commit"
 msgstr "corriger la validation précédente"
 
-#: builtin/commit.c:1615
+#: builtin/commit.c:1614
 msgid "bypass post-rewrite hook"
 msgstr "éviter d'utiliser le crochet post-rewrite"
 
-#: builtin/commit.c:1620
+#: builtin/commit.c:1619
 msgid "ok to record an empty change"
 msgstr "accepter d'enregistrer une modification vide"
 
-#: builtin/commit.c:1622
+#: builtin/commit.c:1621
 msgid "ok to record a change with an empty message"
 msgstr "accepter d'enregistrer une modification avec un message vide"
 
-#: builtin/commit.c:1651
+#: builtin/commit.c:1650
 msgid "could not parse HEAD commit"
 msgstr "impossible d'analyser le commit HEAD"
 
-#: builtin/commit.c:1690 builtin/merge.c:519
+#: builtin/commit.c:1689 builtin/merge.c:1076
 #, c-format
 msgid "could not open '%s' for reading"
 msgstr "impossible d'ouvrir '%s' en lecture"
 
-#: builtin/commit.c:1697
+#: builtin/commit.c:1696
 #, c-format
 msgid "Corrupt MERGE_HEAD file (%s)"
 msgstr "Fichier MERGE_HEAD corrompu (%s)"
 
-#: builtin/commit.c:1704
+#: builtin/commit.c:1703
 msgid "could not read MERGE_MODE"
 msgstr "impossible de lire MERGE_MODE"
 
-#: builtin/commit.c:1723
+#: builtin/commit.c:1722
 #, c-format
 msgid "could not read commit message: %s"
 msgstr "impossible de lire le message de validation : %s"
 
-#: builtin/commit.c:1734
+#: builtin/commit.c:1733
 #, c-format
 msgid "Aborting commit; you did not edit the message.\n"
 msgstr "Abandon de la validation ; vous n'avez pas édité le message\n"
 
-#: builtin/commit.c:1739
+#: builtin/commit.c:1738
 #, c-format
 msgid "Aborting commit due to empty commit message.\n"
 msgstr "Abandon de la validation du à un message de validation vide\n"
 
-#: builtin/commit.c:1754 builtin/merge.c:851 builtin/merge.c:876
+#: builtin/commit.c:1753 builtin/merge.c:829 builtin/merge.c:854
 msgid "failed to write commit object"
 msgstr "échec de l'écriture de l'objet commit"
 
-#: builtin/commit.c:1787
+#: builtin/commit.c:1786
 msgid ""
 "Repository has been updated, but unable to write\n"
 "new_index file. Check that disk is not full and quota is\n"
 "not exceeded, and then \"git reset HEAD\" to recover."
 msgstr ""
 "Le dépôt a été mis à jour, mais impossible d'écrire le fichier\n"
@@ -4966,13 +5060,13 @@
 #: builtin/config.c:60
 msgid "get value: name [value-regex]"
 msgstr "obtenir la valeur : nom [regex-de-valeur]"
 
 #: builtin/config.c:61
 msgid "get all values: key [value-regex]"
-msgstr "obtenir toutes le valeurs : clé [regex-de-valeur]"
+msgstr "obtenir toutes les valeurs : clé [regex-de-valeur]"
 
 #: builtin/config.c:62
 msgid "get values for regexp: name-regex [value-regex]"
 msgstr "obtenir les valeur pour la regexp : regex-de-nom [regex-de-valeur]"
 
 #: builtin/config.c:63
@@ -5057,24 +5151,24 @@
 msgstr "impossible de lire la valeur de couleur par défaut"
 
 #: builtin/config.c:457
 #, c-format
 msgid ""
 "# This is Git's per-user configuration file.\n"
-"[core]\n"
+"[user]\n"
 "# Please adapt and uncomment the following lines:\n"
-"#\tuser = %s\n"
+"#\tname = %s\n"
 "#\temail = %s\n"
 msgstr ""
-"# Ceci est le fichier de configuration personnel.\n"
-"[core]\n"
+"# Ceci est le fichier de configuration personnel de Git.\n"
+"[user]\n"
 "# Veuillez adapter et décommenter les lignes suivantes :\n"
-"#\tuser = %s\n"
+"#\tname = %s\n"
 "#\temail = %s\n"
 
-#: builtin/config.c:589
+#: builtin/config.c:587
 #, c-format
 msgid "cannot create configuration file %s"
 msgstr "création impossible du fichier de configuration '%s'"
 
 #: builtin/count-objects.c:55
 msgid "git count-objects [-v] [-H | --human-readable]"
@@ -5403,375 +5497,375 @@
 msgstr "correspondance de référence"
 
 #: builtin/fetch.c:125
 msgid "specify fetch refmap"
 msgstr "spécifier une correspondance de référence pour la récupération"
 
-#: builtin/fetch.c:375
+#: builtin/fetch.c:377
 msgid "Couldn't find remote ref HEAD"
 msgstr "impossible de trouver la référence HEAD distante"
 
-#: builtin/fetch.c:455
+#: builtin/fetch.c:457
 #, c-format
 msgid "object %s not found"
 msgstr "objet %s non trouvé"
 
-#: builtin/fetch.c:460
+#: builtin/fetch.c:462
 msgid "[up to date]"
 msgstr "[à jour]"
 
-#: builtin/fetch.c:474
+#: builtin/fetch.c:476
 #, c-format
 msgid "! %-*s %-*s -> %s  (can't fetch in current branch)"
 msgstr "! %-*s %-*s -> %s  (impossible de récupérer la branche actuelle)"
 
-#: builtin/fetch.c:475 builtin/fetch.c:561
+#: builtin/fetch.c:477 builtin/fetch.c:563
 msgid "[rejected]"
 msgstr "[rejeté]"
 
-#: builtin/fetch.c:486
+#: builtin/fetch.c:488
 msgid "[tag update]"
 msgstr "[mise à jour de l'étiquette]"
 
-#: builtin/fetch.c:488 builtin/fetch.c:523 builtin/fetch.c:541
+#: builtin/fetch.c:490 builtin/fetch.c:525 builtin/fetch.c:543
 msgid "  (unable to update local ref)"
 msgstr "  (impossible de mettre à jour la référence locale)"
 
-#: builtin/fetch.c:506
+#: builtin/fetch.c:508
 msgid "[new tag]"
 msgstr "[nouvelle étiquette]"
 
-#: builtin/fetch.c:509
+#: builtin/fetch.c:511
 msgid "[new branch]"
 msgstr "[nouvelle branche]"
 
-#: builtin/fetch.c:512
+#: builtin/fetch.c:514
 msgid "[new ref]"
 msgstr "[nouvelle référence]"
 
-#: builtin/fetch.c:557
+#: builtin/fetch.c:559
 msgid "unable to update local ref"
 msgstr "impossible de mettre à jour la référence locale"
 
-#: builtin/fetch.c:557
+#: builtin/fetch.c:559
 msgid "forced update"
 msgstr "mise à jour forcée"
 
-#: builtin/fetch.c:563
+#: builtin/fetch.c:565
 msgid "(non-fast-forward)"
 msgstr "(pas d'avance rapide)"
 
-#: builtin/fetch.c:596 builtin/fetch.c:829
+#: builtin/fetch.c:599 builtin/fetch.c:832
 #, c-format
 msgid "cannot open %s: %s\n"
 msgstr "impossible d'ouvrir %s : %s\n"
 
-#: builtin/fetch.c:605
+#: builtin/fetch.c:608
 #, c-format
 msgid "%s did not send all necessary objects\n"
 msgstr "%s n'a pas envoyé tous les objets nécessaires\n"
 
-#: builtin/fetch.c:623
+#: builtin/fetch.c:626
 #, c-format
 msgid "reject %s because shallow roots are not allowed to be updated"
 msgstr ""
 "%s rejeté parce que les racines superficielles ne sont pas mises à jour"
 
-#: builtin/fetch.c:711 builtin/fetch.c:794
+#: builtin/fetch.c:714 builtin/fetch.c:797
 #, c-format
 msgid "From %.*s\n"
 msgstr "Depuis %.*s\n"
 
-#: builtin/fetch.c:722
+#: builtin/fetch.c:725
 #, c-format
 msgid ""
 "some local refs could not be updated; try running\n"
 " 'git remote prune %s' to remove any old, conflicting branches"
 msgstr ""
 "des références locales n'ont pas pu être mises à jour ; essayez de lancer\n"
 " 'git remote prune %s' pour supprimer des branches anciennes en conflit"
 
-#: builtin/fetch.c:774
+#: builtin/fetch.c:777
 #, c-format
 msgid "   (%s will become dangling)"
 msgstr "   (%s sera en suspens)"
 
-#: builtin/fetch.c:775
+#: builtin/fetch.c:778
 #, c-format
 msgid "   (%s has become dangling)"
 msgstr "   (%s est devenu en suspens)"
 
-#: builtin/fetch.c:799
+#: builtin/fetch.c:802
 msgid "[deleted]"
 msgstr "[supprimé]"
 
-#: builtin/fetch.c:800 builtin/remote.c:1060
+#: builtin/fetch.c:803 builtin/remote.c:1057
 msgid "(none)"
 msgstr "(aucun(e))"
 
-#: builtin/fetch.c:819
+#: builtin/fetch.c:822
 #, c-format
 msgid "Refusing to fetch into current branch %s of non-bare repository"
 msgstr "Refus de récupérer dans la branche courant %s d'un dépôt non nu"
 
-#: builtin/fetch.c:838
+#: builtin/fetch.c:841
 #, c-format
 msgid "Option \"%s\" value \"%s\" is not valid for %s"
 msgstr "La valeur \"%2$s\" de l'option \"%1$s\" est invalide pour %3$s"
 
-#: builtin/fetch.c:841
+#: builtin/fetch.c:844
 #, c-format
 msgid "Option \"%s\" is ignored for %s\n"
 msgstr "L'option \"%s\" est ignorée pour %s\n"
 
-#: builtin/fetch.c:897
+#: builtin/fetch.c:900
 #, c-format
 msgid "Don't know how to fetch from %s"
 msgstr "Je ne sais pas récupérer depuis %s"
 
-#: builtin/fetch.c:1059
+#: builtin/fetch.c:1063
 #, c-format
 msgid "Fetching %s\n"
 msgstr "Récupération de %s\n"
 
-#: builtin/fetch.c:1061 builtin/remote.c:90
+#: builtin/fetch.c:1065 builtin/remote.c:90
 #, c-format
 msgid "Could not fetch %s"
 msgstr "Impossible de récupérer %s"
 
-#: builtin/fetch.c:1079
+#: builtin/fetch.c:1083
 msgid ""
 "No remote repository specified.  Please, specify either a URL or a\n"
 "remote name from which new revisions should be fetched."
 msgstr ""
 "Aucun dépôt distant spécifié. Veuillez spécifier une URL ou un nom\n"
 "distant depuis lesquels les nouvelles révisions devraient être récupérées."
 
-#: builtin/fetch.c:1102
+#: builtin/fetch.c:1106
 msgid "You need to specify a tag name."
 msgstr "Vous devez spécifier un nom d'étiquette."
 
-#: builtin/fetch.c:1144
+#: builtin/fetch.c:1148
 msgid "--depth and --unshallow cannot be used together"
 msgstr "--depth et --unshallow ne peuvent pas être utilisés ensemble"
 
-#: builtin/fetch.c:1146
+#: builtin/fetch.c:1150
 msgid "--unshallow on a complete repository does not make sense"
 msgstr "--unshallow sur un dépôt complet n'a pas de sens"
 
-#: builtin/fetch.c:1169
+#: builtin/fetch.c:1173
 msgid "fetch --all does not take a repository argument"
 msgstr "fetch --all n'accepte pas d'argument de dépôt"
 
-#: builtin/fetch.c:1171
+#: builtin/fetch.c:1175
 msgid "fetch --all does not make sense with refspecs"
 msgstr "fetch --all n'a pas de sens avec des spécifications de référence"
 
-#: builtin/fetch.c:1182
+#: builtin/fetch.c:1186
 #, c-format
 msgid "No such remote or remote group: %s"
 msgstr "distant ou groupe distant inexistant : %s"
 
-#: builtin/fetch.c:1190
+#: builtin/fetch.c:1194
 msgid "Fetching a group and specifying refspecs does not make sense"
 msgstr ""
 "La récupération d'un groupe et les spécifications de référence n'ont pas de "
 "sens"
 
 #: builtin/fmt-merge-msg.c:13
 msgid ""
 "git fmt-merge-msg [-m <message>] [--log[=<n>] | --no-log] [--file <file>]"
 msgstr ""
 "git fmt-merge-msg [-m <message>] [--log[=<n>] | --no-log] [--file <fichier>]"
 
-#: builtin/fmt-merge-msg.c:662 builtin/fmt-merge-msg.c:665 builtin/grep.c:698
+#: builtin/fmt-merge-msg.c:668 builtin/fmt-merge-msg.c:671 builtin/grep.c:698
 #: builtin/merge.c:198 builtin/repack.c:178 builtin/repack.c:182
-#: builtin/show-branch.c:657 builtin/show-ref.c:178 builtin/tag.c:590
-#: parse-options.h:132 parse-options.h:239
+#: builtin/show-branch.c:664 builtin/show-ref.c:180 builtin/tag.c:590
+#: parse-options.h:131 parse-options.h:238
 msgid "n"
 msgstr "n"
 
-#: builtin/fmt-merge-msg.c:663
+#: builtin/fmt-merge-msg.c:669
 msgid "populate log with at most <n> entries from shortlog"
 msgstr "peupler le journal avec au plus <n> éléments depuis le journal court"
 
-#: builtin/fmt-merge-msg.c:666
+#: builtin/fmt-merge-msg.c:672
 msgid "alias for --log (deprecated)"
 msgstr "alias pour --log (obsolète)"
 
-#: builtin/fmt-merge-msg.c:669
+#: builtin/fmt-merge-msg.c:675
 msgid "text"
 msgstr "texte"
 
-#: builtin/fmt-merge-msg.c:670
+#: builtin/fmt-merge-msg.c:676
 msgid "use <text> as start of message"
 msgstr "utiliser <texte> comme début de message"
 
-#: builtin/fmt-merge-msg.c:671
+#: builtin/fmt-merge-msg.c:677
 msgid "file to read from"
 msgstr "fichier d'où lire"
 
-#: builtin/for-each-ref.c:675
+#: builtin/for-each-ref.c:687
 msgid "unable to parse format"
 msgstr "impossible d'analyser le format"
 
-#: builtin/for-each-ref.c:1063
+#: builtin/for-each-ref.c:1083
 msgid "git for-each-ref [<options>] [<pattern>]"
 msgstr "git for-each-ref [<options>] [<motif>]"
 
-#: builtin/for-each-ref.c:1078
+#: builtin/for-each-ref.c:1098
 msgid "quote placeholders suitably for shells"
 msgstr "échapper les champs réservés pour les interpréteurs de commandes"
 
-#: builtin/for-each-ref.c:1080
+#: builtin/for-each-ref.c:1100
 msgid "quote placeholders suitably for perl"
 msgstr "échapper les champs réservés pour perl"
 
-#: builtin/for-each-ref.c:1082
+#: builtin/for-each-ref.c:1102
 msgid "quote placeholders suitably for python"
 msgstr "échapper les champs réservés pour python"
 
-#: builtin/for-each-ref.c:1084
+#: builtin/for-each-ref.c:1104
 msgid "quote placeholders suitably for Tcl"
 msgstr "échapper les champs réservés pour compatibilité avec Tcl"
 
-#: builtin/for-each-ref.c:1087
+#: builtin/for-each-ref.c:1107
 msgid "show only <n> matched refs"
 msgstr "n'afficher que <n> références correspondant"
 
-#: builtin/for-each-ref.c:1088 builtin/replace.c:438
+#: builtin/for-each-ref.c:1108 builtin/replace.c:438
 msgid "format"
 msgstr "format"
 
-#: builtin/for-each-ref.c:1088
+#: builtin/for-each-ref.c:1108
 msgid "format to use for the output"
 msgstr "format à utiliser pour la sortie"
 
-#: builtin/for-each-ref.c:1089
+#: builtin/for-each-ref.c:1109
 msgid "key"
 msgstr "clé"
 
-#: builtin/for-each-ref.c:1090
+#: builtin/for-each-ref.c:1110
 msgid "field name to sort on"
 msgstr "nom du champ servant à trier"
 
 #: builtin/fsck.c:147 builtin/prune.c:137
 msgid "Checking connectivity"
 msgstr "Vérification de la connectivité"
 
-#: builtin/fsck.c:540
+#: builtin/fsck.c:548
 msgid "Checking object directories"
 msgstr "Vérification des répertoires d'objet"
 
-#: builtin/fsck.c:603
+#: builtin/fsck.c:611
 msgid "git fsck [<options>] [<object>...]"
 msgstr "git fsck [<options>] [<objet>...]"
 
-#: builtin/fsck.c:609
+#: builtin/fsck.c:617
 msgid "show unreachable objects"
 msgstr "afficher les objets inaccessibles"
 
-#: builtin/fsck.c:610
+#: builtin/fsck.c:618
 msgid "show dangling objects"
 msgstr "afficher les objets en suspens"
 
-#: builtin/fsck.c:611
+#: builtin/fsck.c:619
 msgid "report tags"
 msgstr "afficher les étiquettes"
 
-#: builtin/fsck.c:612
+#: builtin/fsck.c:620
 msgid "report root nodes"
 msgstr "signaler les nœuds racines"
 
-#: builtin/fsck.c:613
+#: builtin/fsck.c:621
 msgid "make index objects head nodes"
 msgstr "considérer les objets de l'index comme nœuds tête"
 
 # translated from man page
-#: builtin/fsck.c:614
+#: builtin/fsck.c:622
 msgid "make reflogs head nodes (default)"
 msgstr "considérer les reflogs comme nœuds tête (par défaut)"
 
-#: builtin/fsck.c:615
+#: builtin/fsck.c:623
 msgid "also consider packs and alternate objects"
 msgstr "inspecter aussi les objets pack et alternatifs"
 
-#: builtin/fsck.c:616
+#: builtin/fsck.c:624
 msgid "enable more strict checking"
 msgstr "activer une vérification plus strict"
 
-#: builtin/fsck.c:618
+#: builtin/fsck.c:626
 msgid "write dangling objects in .git/lost-found"
 msgstr "écrire les objets en suspens dans .git/lost-found"
 
-#: builtin/fsck.c:619 builtin/prune.c:108
+#: builtin/fsck.c:627 builtin/prune.c:107
 msgid "show progress"
 msgstr "afficher la progression"
 
-#: builtin/fsck.c:669
+#: builtin/fsck.c:677
 msgid "Checking objects"
 msgstr "Vérification des objets"
 
 #: builtin/gc.c:24
 msgid "git gc [<options>]"
 msgstr "git gc [<options>]"
 
-#: builtin/gc.c:79
+#: builtin/gc.c:67
 #, c-format
-msgid "Invalid gc.pruneexpire: '%s'"
-msgstr "gc.pruneexpire invalide : '%s'"
+msgid "Invalid %s: '%s'"
+msgstr "%s invalide : '%s'"
 
-#: builtin/gc.c:107
+#: builtin/gc.c:112
 #, c-format
 msgid "insanely long object directory %.*s"
 msgstr "objet répertoire démentiellement long %.*s"
 
-#: builtin/gc.c:276
+#: builtin/gc.c:281
 msgid "prune unreferenced objects"
 msgstr "éliminer les objets non référencés"
 
-#: builtin/gc.c:278
+#: builtin/gc.c:283
 msgid "be more thorough (increased runtime)"
 msgstr "être plus consciencieux (durée de traitement allongée)"
 
-#: builtin/gc.c:279
+#: builtin/gc.c:284
 msgid "enable auto-gc mode"
 msgstr "activer le mode auto-gc"
 
-#: builtin/gc.c:280
+#: builtin/gc.c:285
 msgid "force running gc even if there may be another gc running"
 msgstr ""
 "forcer le lancement du ramasse-miettes même si un autre ramasse-miettes "
 "tourne déjà"
 
-#: builtin/gc.c:321
+#: builtin/gc.c:327
 #, c-format
 msgid "Auto packing the repository in background for optimum performance.\n"
 msgstr ""
 "Compression automatique du dépôt en tâche de fond pour optimiser les "
 "performances.\n"
 
-#: builtin/gc.c:323
+#: builtin/gc.c:329
 #, c-format
 msgid "Auto packing the repository for optimum performance.\n"
 msgstr "Compression du dépôt pour optimiser les performances.\n"
 
-#: builtin/gc.c:324
+#: builtin/gc.c:330
 #, c-format
 msgid "See \"git help gc\" for manual housekeeping.\n"
 msgstr "Voir \"git help gc\" pour toute information sur le nettoyage manuel.\n"
 
-#: builtin/gc.c:342
+#: builtin/gc.c:348
 #, c-format
 msgid ""
 "gc is already running on machine '%s' pid %<PRIuMAX> (use --force if not)"
 msgstr ""
 "un ramasse-miettes est déjà en cours sur la machine '%s' pid %<PRIuMAX> "
 "(utilisez --force si ce n'est pas le cas)"
 
-#: builtin/gc.c:364
+#: builtin/gc.c:376
 msgid ""
 "There are too many unreachable loose objects; run 'git prune' to remove them."
 msgstr ""
 "Il y a trop d'objets seuls inaccessibles ; lancez 'git prune' pour les "
 "supprimer."
 
@@ -5976,13 +6070,13 @@
 msgstr "afficher les fichiers correspondant dans le pagineur"
 
 #: builtin/grep.c:740
 msgid "allow calling of grep(1) (ignored by this build)"
 msgstr "permettre l'appel de grep(1) (ignoré par ce build)"
 
-#: builtin/grep.c:741 builtin/show-ref.c:187
+#: builtin/grep.c:741 builtin/show-ref.c:189
 msgid "show usage"
 msgstr "afficher l'usage"
 
 #: builtin/grep.c:808
 msgid "no pattern given."
 msgstr "aucun motif fourni."
@@ -6006,52 +6100,52 @@
 "--[no-]exclude-standard ne peut pas être utilisé avec du contenu suivi."
 
 #: builtin/grep.c:908
 msgid "both --cached and trees are given."
 msgstr "--cached et des arbres sont fournis en même temps."
 
-#: builtin/hash-object.c:82
+#: builtin/hash-object.c:80
 msgid ""
 "git hash-object [-t <type>] [-w] [--path=<file> | --no-filters] [--stdin] "
 "[--] <file>..."
 msgstr ""
 "git hash-object [-t <type>] [-w] [--path=<fichier> | --no-filters] [--stdin] "
 "[--] <fichier>..."
 
-#: builtin/hash-object.c:83
+#: builtin/hash-object.c:81
 msgid "git hash-object  --stdin-paths < <list-of-paths>"
 msgstr "git hash-object  --stdin-paths < <liste-de-chemins>"
 
-#: builtin/hash-object.c:94 builtin/tag.c:612
+#: builtin/hash-object.c:92 builtin/tag.c:612
 msgid "type"
 msgstr "type"
 
-#: builtin/hash-object.c:94
+#: builtin/hash-object.c:92
 msgid "object type"
 msgstr "type d'objet"
 
-#: builtin/hash-object.c:95
+#: builtin/hash-object.c:93
 msgid "write the object into the object database"
 msgstr "écrire l'objet dans la base de donnée d'objets"
 
-#: builtin/hash-object.c:97
+#: builtin/hash-object.c:95
 msgid "read the object from stdin"
 msgstr "lire l'objet depuis l'entrée standard"
 
-#: builtin/hash-object.c:99
+#: builtin/hash-object.c:97
 msgid "store file as is without filters"
 msgstr "stocker le fichier tel quel sans filtrage"
 
-#: builtin/hash-object.c:100
+#: builtin/hash-object.c:98
 msgid ""
 "just hash any random garbage to create corrupt objects for debugging Git"
 msgstr ""
 "juste hasher n'importe quel contenu pour créer des objets corrompus pour "
 "debugger Git"
 
-#: builtin/hash-object.c:101
+#: builtin/hash-object.c:99
 msgid "process file as it were from this path"
 msgstr "traiter le fichier comme s'il venait de ce chemin"
 
 #: builtin/help.c:41
 msgid "print all available commands"
 msgstr "afficher toutes les commandes disponibles"
@@ -6174,298 +6268,298 @@
 
 #: builtin/help.c:501
 #, c-format
 msgid "`git %s' is aliased to `%s'"
 msgstr "`git %s\" est un alias de `%s'"
 
-#: builtin/index-pack.c:150
+#: builtin/index-pack.c:151
 #, c-format
 msgid "unable to open %s"
 msgstr "impossible d'ouvrir %s"
 
-#: builtin/index-pack.c:200
+#: builtin/index-pack.c:201
 #, c-format
 msgid "object type mismatch at %s"
 msgstr "type d'objet non correspondant à %s"
 
-#: builtin/index-pack.c:220
+#: builtin/index-pack.c:221
 #, c-format
 msgid "did not receive expected object %s"
 msgstr "objet attendu non reçu %s"
 
-#: builtin/index-pack.c:223
+#: builtin/index-pack.c:224
 #, c-format
 msgid "object %s: expected type %s, found %s"
 msgstr "objet %s : type attendu %s, reçu %s"
 
-#: builtin/index-pack.c:265
+#: builtin/index-pack.c:266
 #, c-format
 msgid "cannot fill %d byte"
 msgid_plural "cannot fill %d bytes"
 msgstr[0] "impossible de remplir %d octet"
 msgstr[1] "impossible de remplir %d octets"
 
-#: builtin/index-pack.c:275
+#: builtin/index-pack.c:276
 msgid "early EOF"
 msgstr "fin de fichier prématurée"
 
-#: builtin/index-pack.c:276
+#: builtin/index-pack.c:277
 msgid "read error on input"
 msgstr "erreur de lecture sur l'entrée"
 
-#: builtin/index-pack.c:288
+#: builtin/index-pack.c:289
 msgid "used more bytes than were available"
 msgstr "plus d'octets utilisés que disponibles"
 
-#: builtin/index-pack.c:295
+#: builtin/index-pack.c:296
 msgid "pack too large for current definition of off_t"
 msgstr "le paquet est trop grand pour la définition actuelle de off_t"
 
-#: builtin/index-pack.c:311
+#: builtin/index-pack.c:312
 #, c-format
 msgid "unable to create '%s'"
 msgstr "impossible de créer '%s'"
 
-#: builtin/index-pack.c:316
+#: builtin/index-pack.c:317
 #, c-format
 msgid "cannot open packfile '%s'"
 msgstr "impossible d'ouvrir le fichier paquet '%s'"
 
-#: builtin/index-pack.c:330
+#: builtin/index-pack.c:331
 msgid "pack signature mismatch"
 msgstr "la signature du paquet ne correspond pas"
 
-#: builtin/index-pack.c:332
+#: builtin/index-pack.c:333
 #, c-format
 msgid "pack version %<PRIu32> unsupported"
 msgstr "la version de paquet %<PRIu32> non supportée"
 
-#: builtin/index-pack.c:350
+#: builtin/index-pack.c:351
 #, c-format
 msgid "pack has bad object at offset %lu: %s"
 msgstr "le paquet a un mauvais objet à l'offset %lu: %s"
 
-#: builtin/index-pack.c:471
+#: builtin/index-pack.c:472
 #, c-format
 msgid "inflate returned %d"
 msgstr "la décompression (inflate) a retourné %d"
 
-#: builtin/index-pack.c:520
+#: builtin/index-pack.c:521
 msgid "offset value overflow for delta base object"
 msgstr "dépassement de la valeur d'offset pour l'objet delta de base"
 
-#: builtin/index-pack.c:528
+#: builtin/index-pack.c:529
 msgid "delta base offset is out of bound"
 msgstr "l'objet delta de base est hors limite"
 
-#: builtin/index-pack.c:536
+#: builtin/index-pack.c:537
 #, c-format
 msgid "unknown object type %d"
 msgstr "type d'objet inconnu %d"
 
-#: builtin/index-pack.c:567
+#: builtin/index-pack.c:568
 msgid "cannot pread pack file"
 msgstr "impossible de lire (pread) le fichier paquet"
 
-#: builtin/index-pack.c:569
+#: builtin/index-pack.c:570
 #, c-format
 msgid "premature end of pack file, %lu byte missing"
 msgid_plural "premature end of pack file, %lu bytes missing"
 msgstr[0] "fin prématurée du fichier paquet, %lu octet lu"
 msgstr[1] "fin prématurée du fichier paquet, %lu octets lus"
 
-#: builtin/index-pack.c:595
+#: builtin/index-pack.c:596
 msgid "serious inflate inconsistency"
 msgstr "grave incohérence dans la décompression (inflate)"
 
-#: builtin/index-pack.c:686 builtin/index-pack.c:692 builtin/index-pack.c:715
-#: builtin/index-pack.c:749 builtin/index-pack.c:758
+#: builtin/index-pack.c:742 builtin/index-pack.c:748 builtin/index-pack.c:771
+#: builtin/index-pack.c:805 builtin/index-pack.c:814
 #, c-format
 msgid "SHA1 COLLISION FOUND WITH %s !"
 msgstr "COLLISION SHA1 TROUVÉE AVEC %s !"
 
-#: builtin/index-pack.c:689 builtin/pack-objects.c:162
+#: builtin/index-pack.c:745 builtin/pack-objects.c:162
 #: builtin/pack-objects.c:254
 #, c-format
 msgid "unable to read %s"
 msgstr "impossible de lire %s"
 
-#: builtin/index-pack.c:755
+#: builtin/index-pack.c:811
 #, c-format
 msgid "cannot read existing object %s"
 msgstr "impossible de lire l'objet existant %s"
 
-#: builtin/index-pack.c:769
+#: builtin/index-pack.c:825
 #, c-format
 msgid "invalid blob object %s"
 msgstr "objet blob invalide %s"
 
-#: builtin/index-pack.c:783
+#: builtin/index-pack.c:839
 #, c-format
 msgid "invalid %s"
 msgstr "%s invalide"
 
-#: builtin/index-pack.c:787
+#: builtin/index-pack.c:843
 msgid "Error in object"
 msgstr "Erreur dans l'objet"
 
-#: builtin/index-pack.c:789
+#: builtin/index-pack.c:845
 #, c-format
 msgid "Not all child objects of %s are reachable"
 msgstr "Tous les objets enfants de %s ne sont pas accessibles"
 
-#: builtin/index-pack.c:861 builtin/index-pack.c:890
+#: builtin/index-pack.c:917 builtin/index-pack.c:948
 msgid "failed to apply delta"
 msgstr "échec d'application du delta"
 
-#: builtin/index-pack.c:1055
+#: builtin/index-pack.c:1118
 msgid "Receiving objects"
 msgstr "Réception d'objets"
 
-#: builtin/index-pack.c:1055
+#: builtin/index-pack.c:1118
 msgid "Indexing objects"
 msgstr "Indexation d'objets"
 
-#: builtin/index-pack.c:1081
+#: builtin/index-pack.c:1150
 msgid "pack is corrupted (SHA1 mismatch)"
 msgstr "le paquet est corrompu (SHA1 ne correspond pas)"
 
-#: builtin/index-pack.c:1086
+#: builtin/index-pack.c:1155
 msgid "cannot fstat packfile"
 msgstr "impossible d'obtenir le statut (fstat) du fichier paquet"
 
-#: builtin/index-pack.c:1089
+#: builtin/index-pack.c:1158
 msgid "pack has junk at the end"
 msgstr "le paquet est invalide à la fin"
 
-#: builtin/index-pack.c:1100
+#: builtin/index-pack.c:1169
 msgid "confusion beyond insanity in parse_pack_objects()"
 msgstr "confusion extrême dans parse_pack_objects()"
 
-#: builtin/index-pack.c:1123
+#: builtin/index-pack.c:1194
 msgid "Resolving deltas"
 msgstr "Résolution des deltas"
 
-#: builtin/index-pack.c:1133
+#: builtin/index-pack.c:1205
 #, c-format
 msgid "unable to create thread: %s"
 msgstr "impossible de créer le fil : %s"
 
-#: builtin/index-pack.c:1175
+#: builtin/index-pack.c:1247
 msgid "confusion beyond insanity"
 msgstr "confusion extrême"
 
-#: builtin/index-pack.c:1181
+#: builtin/index-pack.c:1253
 #, c-format
 msgid "completed with %d local objects"
 msgstr "complété avec %d objets locaux"
 
-#: builtin/index-pack.c:1191
+#: builtin/index-pack.c:1263
 #, c-format
 msgid "Unexpected tail checksum for %s (disk corruption?)"
 msgstr ""
 "Somme de contrôle de fin inattendue pour %s (corruption sur le disque ?)"
 
-#: builtin/index-pack.c:1195
+#: builtin/index-pack.c:1267
 #, c-format
 msgid "pack has %d unresolved delta"
 msgid_plural "pack has %d unresolved deltas"
 msgstr[0] "le paquet a %d delta non résolu"
 msgstr[1] "le paquet a %d deltas non résolus"
 
-#: builtin/index-pack.c:1219
+#: builtin/index-pack.c:1291
 #, c-format
 msgid "unable to deflate appended object (%d)"
 msgstr "impossible de compresser l'objet ajouté (%d)"
 
-#: builtin/index-pack.c:1298
+#: builtin/index-pack.c:1367
 #, c-format
 msgid "local object %s is corrupt"
 msgstr "l'objet local %s est corrompu"
 
-#: builtin/index-pack.c:1322
+#: builtin/index-pack.c:1391
 msgid "error while closing pack file"
 msgstr "erreur en fermeture du fichier paquet"
 
-#: builtin/index-pack.c:1335
+#: builtin/index-pack.c:1404
 #, c-format
 msgid "cannot write keep file '%s'"
 msgstr "impossible d'écrire le fichier \"keep\" '%s'"
 
-#: builtin/index-pack.c:1343
+#: builtin/index-pack.c:1412
 #, c-format
 msgid "cannot close written keep file '%s'"
 msgstr "impossible de fermer le fichier \"keep\" '%s'"
 
-#: builtin/index-pack.c:1356
+#: builtin/index-pack.c:1425
 msgid "cannot store pack file"
 msgstr "impossible de stocker le fichier paquet"
 
-#: builtin/index-pack.c:1367
+#: builtin/index-pack.c:1436
 msgid "cannot store index file"
 msgstr "impossible de stocker le fichier d'index"
 
-#: builtin/index-pack.c:1400
+#: builtin/index-pack.c:1469
 #, c-format
 msgid "bad pack.indexversion=%<PRIu32>"
 msgstr "mauvais pack.indexversion=%<PRIu32>"
 
-#: builtin/index-pack.c:1406
+#: builtin/index-pack.c:1475
 #, c-format
 msgid "invalid number of threads specified (%d)"
 msgstr "nombre de fils spécifié invalide (%d)"
 
-#: builtin/index-pack.c:1410 builtin/index-pack.c:1589
+#: builtin/index-pack.c:1479 builtin/index-pack.c:1658
 #, c-format
 msgid "no threads support, ignoring %s"
 msgstr "pas de support des fils, ignore %s"
 
-#: builtin/index-pack.c:1468
+#: builtin/index-pack.c:1537
 #, c-format
 msgid "Cannot open existing pack file '%s'"
 msgstr "Impossible d'ouvrir le fichier paquet existant '%s'"
 
-#: builtin/index-pack.c:1470
+#: builtin/index-pack.c:1539
 #, c-format
 msgid "Cannot open existing pack idx file for '%s'"
 msgstr "Impossible d'ouvrir le fichier paquet d'index existant pour '%s'"
 
-#: builtin/index-pack.c:1517
+#: builtin/index-pack.c:1586
 #, c-format
 msgid "non delta: %d object"
 msgid_plural "non delta: %d objects"
 msgstr[0] "pas un delta : %d objet"
 msgstr[1] "pas un delta : %d objets"
 
-#: builtin/index-pack.c:1524
+#: builtin/index-pack.c:1593
 #, c-format
 msgid "chain length = %d: %lu object"
 msgid_plural "chain length = %d: %lu objects"
 msgstr[0] "longueur chaînée = %d : %lu objet"
 msgstr[1] "longueur chaînée = %d : %lu objets"
 
-#: builtin/index-pack.c:1553
+#: builtin/index-pack.c:1622
 msgid "Cannot come back to cwd"
 msgstr "Impossible de revenir au répertoire de travail courant"
 
-#: builtin/index-pack.c:1601 builtin/index-pack.c:1604
-#: builtin/index-pack.c:1616 builtin/index-pack.c:1620
+#: builtin/index-pack.c:1670 builtin/index-pack.c:1673
+#: builtin/index-pack.c:1685 builtin/index-pack.c:1689
 #, c-format
 msgid "bad %s"
 msgstr "mauvais %s"
 
-#: builtin/index-pack.c:1634
+#: builtin/index-pack.c:1703
 msgid "--fix-thin cannot be used without --stdin"
 msgstr "--fix-thin ne peut pas être utilisé sans --stdin"
 
-#: builtin/index-pack.c:1638 builtin/index-pack.c:1647
+#: builtin/index-pack.c:1707 builtin/index-pack.c:1716
 #, c-format
 msgid "packfile name '%s' does not end with '.pack'"
 msgstr "le nom de fichier paquet '%s' ne se termine pas par '.pack'"
 
-#: builtin/index-pack.c:1655
+#: builtin/index-pack.c:1724
 msgid "--verify with no packfile name given"
 msgstr "--verify sans nom de fichier paquet donné"
 
 #: builtin/init-db.c:35
 #, c-format
 msgid "Could not make %s writable by group"
@@ -6529,92 +6623,92 @@
 #: builtin/init-db.c:157
 #, c-format
 msgid "not copying templates of a wrong format version %d from '%s'"
 msgstr ""
 "pas de copie des modèles étant dans une mauvaise version du format %d de '%s'"
 
-#: builtin/init-db.c:197
+#: builtin/init-db.c:211
 #, c-format
 msgid "insane git directory %s"
 msgstr "répertoire git démentiel %s"
 
-#: builtin/init-db.c:331 builtin/init-db.c:334
+#: builtin/init-db.c:343 builtin/init-db.c:346
 #, c-format
 msgid "%s already exists"
 msgstr "%s existe déjà"
 
-#: builtin/init-db.c:363
+#: builtin/init-db.c:374
 #, c-format
 msgid "unable to handle file type %d"
 msgstr "impossible de traiter le fichier de type %d"
 
-#: builtin/init-db.c:366
+#: builtin/init-db.c:377
 #, c-format
 msgid "unable to move %s to %s"
 msgstr "impossible de déplacer %s vers %s"
 
 #. TRANSLATORS: The first '%s' is either "Reinitialized
 #. existing" or "Initialized empty", the second " shared" or
 #. "", and the last '%s%s' is the verbatim directory name.
-#: builtin/init-db.c:426
+#: builtin/init-db.c:433
 #, c-format
 msgid "%s%s Git repository in %s%s\n"
 msgstr "Dépôt Git%2$s %1$s dans %3$s%4$s\n"
 
-#: builtin/init-db.c:427
+#: builtin/init-db.c:434
 msgid "Reinitialized existing"
 msgstr "existant réinitialisé"
 
-#: builtin/init-db.c:427
+#: builtin/init-db.c:434
 msgid "Initialized empty"
 msgstr "vide initialisé"
 
-#: builtin/init-db.c:428
+#: builtin/init-db.c:435
 msgid " shared"
 msgstr " partagé"
 
-#: builtin/init-db.c:475
+#: builtin/init-db.c:482
 msgid ""
 "git init [-q | --quiet] [--bare] [--template=<template-directory>] [--"
 "shared[=<permissions>]] [<directory>]"
 msgstr ""
 "git init [-q | --quiet] [--bare] [--template=<répertoire-modèle>] [--"
 "shared[=<permissions>]] [<répertoire>]"
 
-#: builtin/init-db.c:498
+#: builtin/init-db.c:505
 msgid "permissions"
 msgstr "permissions"
 
-#: builtin/init-db.c:499
+#: builtin/init-db.c:506
 msgid "specify that the git repository is to be shared amongst several users"
 msgstr "spécifier que le dépôt git sera partagé entre plusieurs utilisateurs"
 
-#: builtin/init-db.c:501 builtin/prune-packed.c:57 builtin/repack.c:171
+#: builtin/init-db.c:508 builtin/prune-packed.c:57 builtin/repack.c:171
 msgid "be quiet"
 msgstr "être silencieux"
 
-#: builtin/init-db.c:533 builtin/init-db.c:538
+#: builtin/init-db.c:540 builtin/init-db.c:545
 #, c-format
 msgid "cannot mkdir %s"
 msgstr "impossible de créer le répertoire (mkdir) %s"
 
-#: builtin/init-db.c:542
+#: builtin/init-db.c:549
 #, c-format
 msgid "cannot chdir to %s"
 msgstr "impossible de se déplacer vers le répertoire (chdir) %s"
 
-#: builtin/init-db.c:563
+#: builtin/init-db.c:570
 #, c-format
 msgid ""
 "%s (or --work-tree=<directory>) not allowed without specifying %s (or --git-"
 "dir=<directory>)"
 msgstr ""
 "%s (ou --work-tree=<répertoire>) n'est pas autorisé sans spécifier %s (ou --"
 "git-dir=<répertoire>)"
 
-#: builtin/init-db.c:591
+#: builtin/init-db.c:598
 #, c-format
 msgid "Cannot access work tree '%s'"
 msgstr "Impossible d'accéder à l'arbre de travail '%s'"
 
 #: builtin/interpret-trailers.c:15
 msgid ""
@@ -6634,13 +6728,13 @@
 
 #: builtin/interpret-trailers.c:27
 msgid "trailer(s) to add"
 msgstr "ligne(s) de fin à ajouter"
 
 #: builtin/log.c:41
-msgid "git log [<options>] [<revision range>] [[--] <path>...]"
+msgid "git log [<options>] [<revision-range>] [[--] <path>...]"
 msgstr "git log [<options>] [<plage de révisions>] [[--] <chemin>...]"
 
 #: builtin/log.c:42
 msgid "git show [<options>] <object>..."
 msgstr "git show [<options>] <objet>..."
 
@@ -6705,13 +6799,13 @@
 msgstr "Impossible d'ouvrir le fichier correctif %s"
 
 #: builtin/log.c:803
 msgid "Need exactly one range."
 msgstr "Exactement une plage nécessaire."
 
-#: builtin/log.c:811
+#: builtin/log.c:813
 msgid "Not a range."
 msgstr "Ceci n'est pas une plage."
 
 #: builtin/log.c:919
 msgid "Cover letter needs email format"
 msgstr "La lettre de motivation doit être au format e-mail"
@@ -6908,21 +7002,21 @@
 msgstr "Échec de création des fichiers en sortie"
 
 #: builtin/log.c:1583
 msgid "git cherry [-v] [<upstream> [<head> [<limit>]]]"
 msgstr "git cherry [-v] [<branche_amont> [<head> [<limite>]]]"
 
-#: builtin/log.c:1638
+#: builtin/log.c:1637
 #, c-format
 msgid ""
 "Could not find a tracked remote branch, please specify <upstream> manually.\n"
 msgstr ""
 "Impossible de trouver une branche distante suivie, merci de spécifier "
 "<branche_amont> manuellement.\n"
 
-#: builtin/log.c:1651 builtin/log.c:1653 builtin/log.c:1665
+#: builtin/log.c:1648 builtin/log.c:1650 builtin/log.c:1662
 #, c-format
 msgid "Unknown commit %s"
 msgstr "Commit inconnu %s"
 
 #: builtin/ls-files.c:358
 msgid "git ls-files [<options>] [<file>...]"
@@ -7196,48 +7290,48 @@
 
 #: builtin/merge.c:447
 #, c-format
 msgid "'%s' does not point to a commit"
 msgstr "'%s' ne pointe pas sur un commit"
 
-#: builtin/merge.c:559
+#: builtin/merge.c:537
 #, c-format
 msgid "Bad branch.%s.mergeoptions string: %s"
 msgstr "Mauvaise chaîne branch.%s.mergeoptions : %s"
 
-#: builtin/merge.c:654
+#: builtin/merge.c:632
 msgid "git write-tree failed to write a tree"
 msgstr "git write-tree a échoué à écrire un arbre"
 
-#: builtin/merge.c:678
+#: builtin/merge.c:656
 msgid "Not handling anything other than two heads merge."
 msgstr "Impossible de gérer autre chose que la fusion de deux têtes."
 
-#: builtin/merge.c:692
+#: builtin/merge.c:670
 #, c-format
 msgid "Unknown option for merge-recursive: -X%s"
 msgstr "Options inconnue pour merge-recursive : -X%s"
 
-#: builtin/merge.c:705
+#: builtin/merge.c:683
 #, c-format
 msgid "unable to write %s"
 msgstr "impossible d'écrire %s"
 
-#: builtin/merge.c:794
+#: builtin/merge.c:772
 #, c-format
 msgid "Could not read from '%s'"
 msgstr "Impossible de lire depuis '%s'"
 
-#: builtin/merge.c:803
+#: builtin/merge.c:781
 #, c-format
 msgid "Not committing merge; use 'git commit' to complete the merge.\n"
 msgstr ""
 "Pas de validation de la fusion ; utilisez 'git commit' pour terminer la "
 "fusion.\n"
 
-#: builtin/merge.c:809
+#: builtin/merge.c:787
 #, c-format
 msgid ""
 "Please enter a commit message to explain why this merge is necessary,\n"
 "especially if it merges an updated upstream into a topic branch.\n"
 "\n"
 "Lines starting with '%c' will be ignored, and an empty message aborts\n"
@@ -7248,170 +7342,175 @@
 "nécessaire, surtout si cela fusionne une branche amont mise à jour dans une "
 "branche de sujet.\n"
 "\n"
 "Les lignes commençant par '%c' seront ignorées, et un message vide\n"
 "abandonne la validation.\n"
 
-#: builtin/merge.c:833
+#: builtin/merge.c:811
 msgid "Empty commit message."
 msgstr "Message de validation vide."
 
-#: builtin/merge.c:845
+#: builtin/merge.c:823
 #, c-format
 msgid "Wonderful.\n"
 msgstr "Merveilleux.\n"
 
-#: builtin/merge.c:900
+#: builtin/merge.c:878
 #, c-format
 msgid "Automatic merge failed; fix conflicts and then commit the result.\n"
 msgstr ""
 "La fusion automatique a échoué ; réglez les conflits et validez le "
 "résultat.\n"
 
-#: builtin/merge.c:916
+#: builtin/merge.c:894
 #, c-format
 msgid "'%s' is not a commit"
 msgstr "'%s' n'est pas une validation"
 
-#: builtin/merge.c:957
+#: builtin/merge.c:935
 msgid "No current branch."
 msgstr "Pas de branche courante."
 
-#: builtin/merge.c:959
+#: builtin/merge.c:937
 msgid "No remote for the current branch."
 msgstr "Pas de branche distante pour la branche courante."
 
-#: builtin/merge.c:961
+#: builtin/merge.c:939
 msgid "No default upstream defined for the current branch."
 msgstr "Pas de branche amont par défaut définie pour la branche courante."
 
-#: builtin/merge.c:966
+#: builtin/merge.c:944
 #, c-format
 msgid "No remote-tracking branch for %s from %s"
 msgstr "Pas de branche de suivi pour %s depuis %s"
 
-#: builtin/merge.c:1122
+#: builtin/merge.c:1081
+#, c-format
+msgid "could not close '%s'"
+msgstr "impossible de fermer '%s'"
+
+#: builtin/merge.c:1208
 msgid "There is no merge to abort (MERGE_HEAD missing)."
 msgstr "Il n'y a pas de fusion à abandonner (MERGE_HEAD manquant)."
 
-#: builtin/merge.c:1138
+#: builtin/merge.c:1224
 msgid ""
 "You have not concluded your merge (MERGE_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 "Vous n'avez pas terminé votre fusion (MERGE_HEAD existe).\n"
 "Veuillez valider vos modifications avant de pouvoir fusionner."
 
-#: builtin/merge.c:1141 git-pull.sh:34
+#: builtin/merge.c:1227 git-pull.sh:74
 msgid "You have not concluded your merge (MERGE_HEAD exists)."
 msgstr "Vous n'avez pas terminé votre fusion (MERGE_HEAD existe)."
 
-#: builtin/merge.c:1145
+#: builtin/merge.c:1231
 msgid ""
 "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 "Vous n'avez pas terminé votre picorage (CHERRY_PICK_HEAD existe).\n"
 "Veuillez valider vos modifications avant de pouvoir fusionner."
 
-#: builtin/merge.c:1148
+#: builtin/merge.c:1234
 msgid "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists)."
 msgstr "Vous n'avez pas terminé votre picorage (CHERRY_PICK_HEAD existe)."
 
-#: builtin/merge.c:1157
+#: builtin/merge.c:1243
 msgid "You cannot combine --squash with --no-ff."
 msgstr "Vous ne pouvez pas combiner --squash avec --no-ff."
 
-#: builtin/merge.c:1166
+#: builtin/merge.c:1251
 msgid "No commit specified and merge.defaultToUpstream not set."
 msgstr ""
 "Pas de validation spécifiée et merge.defaultToUpstream n'est pas défini."
 
-#: builtin/merge.c:1198
-msgid "Can merge only exactly one commit into empty head"
-msgstr ""
-"Possible de fusionner exactement une seule validation dans une tête vide"
-
-#: builtin/merge.c:1201
+#: builtin/merge.c:1268
 msgid "Squash commit into empty head not supported yet"
 msgstr "La validation compressée vers une tête vide n'est pas encore supportée"
 
-#: builtin/merge.c:1203
+#: builtin/merge.c:1270
 msgid "Non-fast-forward commit does not make sense into an empty head"
 msgstr "Une validation sans avance rapide n'a pas de sens dans une tête vide"
 
-#: builtin/merge.c:1208
+#: builtin/merge.c:1276
 #, c-format
 msgid "%s - not something we can merge"
 msgstr "%s - pas possible de fusionner ceci"
 
-#: builtin/merge.c:1259
+#: builtin/merge.c:1278
+msgid "Can merge only exactly one commit into empty head"
+msgstr ""
+"Possible de fusionner exactement une seule validation dans une tête vide"
+
+#: builtin/merge.c:1333
 #, c-format
 msgid "Commit %s has an untrusted GPG signature, allegedly by %s."
 msgstr "La validation %s a une signature GPG non fiable, prétendument par %s."
 
-#: builtin/merge.c:1262
+#: builtin/merge.c:1336
 #, c-format
 msgid "Commit %s has a bad GPG signature allegedly by %s."
 msgstr "La validation %s a une mauvaise signature GPG prétendument par %s."
 
-#: builtin/merge.c:1265
+#: builtin/merge.c:1339
 #, c-format
 msgid "Commit %s does not have a GPG signature."
 msgstr "La validation %s n'a pas de signature GPG."
 
-#: builtin/merge.c:1268
+#: builtin/merge.c:1342
 #, c-format
 msgid "Commit %s has a good GPG signature by %s\n"
 msgstr "La validation %s a une signature GPG correcte par %s\n"
 
-#: builtin/merge.c:1349
+#: builtin/merge.c:1423
 #, c-format
 msgid "Updating %s..%s\n"
 msgstr "Mise à jour %s..%s\n"
 
-#: builtin/merge.c:1388
+#: builtin/merge.c:1462
 #, c-format
 msgid "Trying really trivial in-index merge...\n"
 msgstr "Essai de fusion vraiment triviale dans l'index...\n"
 
-#: builtin/merge.c:1395
+#: builtin/merge.c:1469
 #, c-format
 msgid "Nope.\n"
 msgstr "Non.\n"
 
-#: builtin/merge.c:1427
+#: builtin/merge.c:1501
 msgid "Not possible to fast-forward, aborting."
 msgstr "Pas possible d'avancer rapidement, abandon."
 
-#: builtin/merge.c:1450 builtin/merge.c:1529
+#: builtin/merge.c:1524 builtin/merge.c:1603
 #, c-format
 msgid "Rewinding the tree to pristine...\n"
 msgstr "Retour de l'arbre à l'original...\n"
 
-#: builtin/merge.c:1454
+#: builtin/merge.c:1528
 #, c-format
 msgid "Trying merge strategy %s...\n"
 msgstr "Essai de la stratégie de fusion %s...\n"
 
-#: builtin/merge.c:1520
+#: builtin/merge.c:1594
 #, c-format
 msgid "No merge strategy handled the merge.\n"
 msgstr "Aucune stratégie de fusion n'a pris en charge la fusion.\n"
 
-#: builtin/merge.c:1522
+#: builtin/merge.c:1596
 #, c-format
 msgid "Merge with strategy %s failed.\n"
 msgstr "La fusion avec la stratégie %s a échoué.\n"
 
-#: builtin/merge.c:1531
+#: builtin/merge.c:1605
 #, c-format
 msgid "Using the %s to prepare resolving by hand.\n"
 msgstr "Utilisation de %s pour préparer la résolution à la main.\n"
 
-#: builtin/merge.c:1543
+#: builtin/merge.c:1617
 #, c-format
 msgid "Automatic merge went well; stopped before committing as requested\n"
 msgstr ""
 "La fusion automatique a réussi ; stoppée avant la validation comme demandé\n"
 
 #: builtin/merge-base.c:29
@@ -7596,13 +7695,13 @@
 
 #: builtin/mv.c:253
 #, c-format
 msgid "Renaming %s to %s\n"
 msgstr "Renommage de %s en %s\n"
 
-#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:359
+#: builtin/mv.c:256 builtin/remote.c:725 builtin/repack.c:361
 #, c-format
 msgid "renaming '%s' failed"
 msgstr "le renommage de '%s' a échoué"
 
 #: builtin/name-rev.c:255
 msgid "git name-rev [<options>] <commit>..."
@@ -7973,13 +8072,13 @@
 msgstr "références-notes"
 
 #: builtin/notes.c:954
 msgid "use notes from <notes-ref>"
 msgstr "utiliser les notes depuis <références-notes>"
 
-#: builtin/notes.c:989 builtin/remote.c:1621
+#: builtin/notes.c:989 builtin/remote.c:1618
 #, c-format
 msgid "Unknown subcommand: %s"
 msgstr "Sous-commande inconnue : %s"
 
 #: builtin/pack-objects.c:28
 msgid "git pack-objects --stdout [options...] [< ref-list | < object-list]"
@@ -7997,187 +8096,187 @@
 msgstr "erreur de compression (%d)"
 
 #: builtin/pack-objects.c:771
 msgid "Writing objects"
 msgstr "Écriture des objets"
 
-#: builtin/pack-objects.c:1013
+#: builtin/pack-objects.c:1011
 msgid "disabling bitmap writing, as some objects are not being packed"
 msgstr ""
 "désactivation de l'écriture en bitmap car certains objets ne sont pas "
 "compressés"
 
-#: builtin/pack-objects.c:2173
+#: builtin/pack-objects.c:2171
 msgid "Compressing objects"
 msgstr "Compression des objets"
 
-#: builtin/pack-objects.c:2570
+#: builtin/pack-objects.c:2568
 #, c-format
 msgid "unsupported index version %s"
 msgstr "version d'index non supportée %s"
 
-#: builtin/pack-objects.c:2574
+#: builtin/pack-objects.c:2572
 #, c-format
 msgid "bad index version '%s'"
 msgstr "mauvaise version d'index '%s'"
 
-#: builtin/pack-objects.c:2597
+#: builtin/pack-objects.c:2595
 #, c-format
 msgid "option %s does not accept negative form"
 msgstr "l'option %s n'accepte pas de valeur négative"
 
-#: builtin/pack-objects.c:2601
+#: builtin/pack-objects.c:2599
 #, c-format
 msgid "unable to parse value '%s' for option %s"
 msgstr "impossible d'analyser la valeur '%s' pour l'option %s"
 
-#: builtin/pack-objects.c:2621
+#: builtin/pack-objects.c:2619
 msgid "do not show progress meter"
 msgstr "ne pas afficher la barre de progression"
 
-#: builtin/pack-objects.c:2623
+#: builtin/pack-objects.c:2621
 msgid "show progress meter"
 msgstr "afficher la barre de progression"
 
-#: builtin/pack-objects.c:2625
+#: builtin/pack-objects.c:2623
 msgid "show progress meter during object writing phase"
 msgstr "afficher la barre de progression durant la phase d'écrite des objets"
 
-#: builtin/pack-objects.c:2628
+#: builtin/pack-objects.c:2626
 msgid "similar to --all-progress when progress meter is shown"
 msgstr "similaire à --all-progress quand la barre de progression est affichée"
 
-#: builtin/pack-objects.c:2629
+#: builtin/pack-objects.c:2627
 msgid "version[,offset]"
 msgstr "version[,offset]"
 
-#: builtin/pack-objects.c:2630
+#: builtin/pack-objects.c:2628
 msgid "write the pack index file in the specified idx format version"
 msgstr ""
 "écrire le fichier d'index du paquet dans le format d'index de version "
 "spécifié"
 
-#: builtin/pack-objects.c:2633
+#: builtin/pack-objects.c:2631
 msgid "maximum size of each output pack file"
 msgstr "taille maximum de chaque fichier paquet en sortie"
 
-#: builtin/pack-objects.c:2635
+#: builtin/pack-objects.c:2633
 msgid "ignore borrowed objects from alternate object store"
 msgstr "ignorer les objets empruntés à un autre magasin d'objets"
 
-#: builtin/pack-objects.c:2637
+#: builtin/pack-objects.c:2635
 msgid "ignore packed objects"
 msgstr "ignorer les objets empaquetés"
 
-#: builtin/pack-objects.c:2639
+#: builtin/pack-objects.c:2637
 msgid "limit pack window by objects"
 msgstr "limiter la fenêtre d'empaquetage par objets"
 
-#: builtin/pack-objects.c:2641
+#: builtin/pack-objects.c:2639
 msgid "limit pack window by memory in addition to object limit"
 msgstr ""
 "limiter la fenêtre d'empaquetage par mémoire en plus de la limite d'objets"
 
-#: builtin/pack-objects.c:2643
+#: builtin/pack-objects.c:2641
 msgid "maximum length of delta chain allowed in the resulting pack"
 msgstr ""
 "longueur maximum de la chaîne de delta autorisée dans le paquet résultant"
 
-#: builtin/pack-objects.c:2645
+#: builtin/pack-objects.c:2643
 msgid "reuse existing deltas"
 msgstr "réutiliser les deltas existants"
 
-#: builtin/pack-objects.c:2647
+#: builtin/pack-objects.c:2645
 msgid "reuse existing objects"
 msgstr "réutiliser les objets existants"
 
-#: builtin/pack-objects.c:2649
+#: builtin/pack-objects.c:2647
 msgid "use OFS_DELTA objects"
 msgstr "utiliser les objets OFS_DELTA"
 
-#: builtin/pack-objects.c:2651
+#: builtin/pack-objects.c:2649
 msgid "use threads when searching for best delta matches"
 msgstr ""
 "utiliser des fils lors de la recherche pour une meilleurs correspondance des "
 "deltas"
 
-#: builtin/pack-objects.c:2653
+#: builtin/pack-objects.c:2651
 msgid "do not create an empty pack output"
 msgstr "ne pas créer un paquet vide"
 
-#: builtin/pack-objects.c:2655
+#: builtin/pack-objects.c:2653
 msgid "read revision arguments from standard input"
 msgstr "lire les paramètres de révision depuis l'entrée standard"
 
-#: builtin/pack-objects.c:2657
+#: builtin/pack-objects.c:2655
 msgid "limit the objects to those that are not yet packed"
 msgstr "limiter les objets à ceux qui ne sont pas encore empaquetés"
 
-#: builtin/pack-objects.c:2660
+#: builtin/pack-objects.c:2658
 msgid "include objects reachable from any reference"
 msgstr "inclure les objets accessibles depuis toute référence"
 
-#: builtin/pack-objects.c:2663
+#: builtin/pack-objects.c:2661
 msgid "include objects referred by reflog entries"
 msgstr "inclure les objets référencés par les éléments de reflog"
 
-#: builtin/pack-objects.c:2666
+#: builtin/pack-objects.c:2664
 msgid "include objects referred to by the index"
 msgstr "inclure les objets référencés par l'index"
 
-#: builtin/pack-objects.c:2669
+#: builtin/pack-objects.c:2667
 msgid "output pack to stdout"
 msgstr "afficher l'empaquetage sur la sortie standard"
 
-#: builtin/pack-objects.c:2671
+#: builtin/pack-objects.c:2669
 msgid "include tag objects that refer to objects to be packed"
 msgstr "inclure les objets d'étiquettes qui réfèrent à des objets à empaqueter"
 
-#: builtin/pack-objects.c:2673
+#: builtin/pack-objects.c:2671
 msgid "keep unreachable objects"
 msgstr "garder les objets inaccessibles"
 
-#: builtin/pack-objects.c:2674 parse-options.h:140
+#: builtin/pack-objects.c:2672 parse-options.h:139
 msgid "time"
 msgstr "heure"
 
-#: builtin/pack-objects.c:2675
+#: builtin/pack-objects.c:2673
 msgid "unpack unreachable objects newer than <time>"
 msgstr "dépaqueter les objets inaccessibles plus récents que <heure>"
 
-#: builtin/pack-objects.c:2678
+#: builtin/pack-objects.c:2676
 msgid "create thin packs"
 msgstr "créer des paquets légers"
 
-#: builtin/pack-objects.c:2680
+#: builtin/pack-objects.c:2678
 msgid "create packs suitable for shallow fetches"
 msgstr "créer des paquets permettant des récupérations superficielles"
 
-#: builtin/pack-objects.c:2682
+#: builtin/pack-objects.c:2680
 msgid "ignore packs that have companion .keep file"
 msgstr "ignorer les paquets qui ont un fichier .keep"
 
-#: builtin/pack-objects.c:2684
+#: builtin/pack-objects.c:2682
 msgid "pack compression level"
 msgstr "niveau de compression du paquet"
 
-#: builtin/pack-objects.c:2686
+#: builtin/pack-objects.c:2684
 msgid "do not hide commits by grafts"
 msgstr "ne pas cacher les validations par greffes"
 
-#: builtin/pack-objects.c:2688
+#: builtin/pack-objects.c:2686
 msgid "use a bitmap index if available to speed up counting objects"
 msgstr ""
 "utiliser un index en bitmap si disponible pour accélerer le décompte des "
 "objets"
 
-#: builtin/pack-objects.c:2690
+#: builtin/pack-objects.c:2688
 msgid "write a bitmap index together with the pack index"
 msgstr "écrire un index en bitmap associé à l'index de paquet"
 
-#: builtin/pack-objects.c:2781
+#: builtin/pack-objects.c:2779
 msgid "Counting objects"
 msgstr "Décompte des objets"
 
 #: builtin/pack-refs.c:6
 msgid "git pack-refs [<options>]"
 msgstr "git pack-refs [<options>]"
@@ -8195,25 +8294,25 @@
 msgstr "git prune-packed [-n | --dry-run] [-q | --quiet]"
 
 #: builtin/prune-packed.c:40
 msgid "Removing duplicate objects"
 msgstr "Suppression des objets dupliqués"
 
-#: builtin/prune.c:12
+#: builtin/prune.c:11
 msgid "git prune [-n] [-v] [--expire <time>] [--] [<head>...]"
 msgstr "git prune [-n] [-v] [--expire <heure>] [--] [<head>...]"
 
-#: builtin/prune.c:106
+#: builtin/prune.c:105 builtin/worktree.c:112
 msgid "do not remove, show only"
 msgstr "ne pas supprimer, afficher seulement"
 
-#: builtin/prune.c:107
+#: builtin/prune.c:106 builtin/worktree.c:113
 msgid "report pruned objects"
 msgstr "afficher les objets éliminés"
 
-#: builtin/prune.c:110
+#: builtin/prune.c:109 builtin/worktree.c:115
 msgid "expire objects older than <time>"
 msgstr "faire expirer les objets plus vieux que <heure>"
 
 #: builtin/push.c:14
 msgid "git push [<options>] [<repository> [<refspec>...]]"
 msgstr "git push [<options>] [<dépôt> [<spécification-de-référence>...]]"
@@ -8636,18 +8735,18 @@
 msgstr "sauter l'application du filtre d'extraction creuse"
 
 #: builtin/read-tree.c:139
 msgid "debug unpack-trees"
 msgstr "déboguer unpack-trees"
 
-#: builtin/reflog.c:429
+#: builtin/reflog.c:430
 #, c-format
 msgid "%s' for '%s' is not a valid timestamp"
 msgstr "%s' pour '%s' n'est pas un horodatage valide"
 
-#: builtin/reflog.c:546 builtin/reflog.c:551
+#: builtin/reflog.c:547 builtin/reflog.c:552
 #, c-format
 msgid "'%s' is not a valid timestamp"
 msgstr "'%s' n'est pas un horodatage valide"
 
 #: builtin/remote.c:12
 msgid "git remote [-v | --verbose]"
@@ -8783,18 +8882,18 @@
 #: builtin/remote.c:177
 msgid "specifying branches to track makes sense only with fetch mirrors"
 msgstr ""
 "spécifier les branches à suivre n'a de sens qu'avec des miroirs de "
 "rapatriement"
 
-#: builtin/remote.c:187 builtin/remote.c:643
+#: builtin/remote.c:187 builtin/remote.c:640
 #, c-format
 msgid "remote %s already exists."
 msgstr "la distante %s existe déjà."
 
-#: builtin/remote.c:191 builtin/remote.c:647
+#: builtin/remote.c:191 builtin/remote.c:644
 #, c-format
 msgid "'%s' is not a valid remote name"
 msgstr "'%s' n'est pas un nom valide de distante"
 
 #: builtin/remote.c:235
 #, c-format
@@ -8813,69 +8912,69 @@
 msgstr "(correspond)"
 
 #: builtin/remote.c:448
 msgid "(delete)"
 msgstr "(supprimer)"
 
-#: builtin/remote.c:592 builtin/remote.c:598 builtin/remote.c:604
+#: builtin/remote.c:589 builtin/remote.c:595 builtin/remote.c:601
 #, c-format
 msgid "Could not append '%s' to '%s'"
 msgstr "Impossible d'ajouter '%s' à '%s'"
 
-#: builtin/remote.c:636 builtin/remote.c:795 builtin/remote.c:895
+#: builtin/remote.c:633 builtin/remote.c:792 builtin/remote.c:892
 #, c-format
 msgid "No such remote: %s"
 msgstr "Distante inconnue : %s"
 
-#: builtin/remote.c:653
+#: builtin/remote.c:650
 #, c-format
 msgid "Could not rename config section '%s' to '%s'"
 msgstr "Impossible de renommer la section de configuration '%s' en '%s'"
 
-#: builtin/remote.c:659 builtin/remote.c:847
+#: builtin/remote.c:656 builtin/remote.c:844
 #, c-format
 msgid "Could not remove config section '%s'"
 msgstr "Impossible de supprimer la section de configuration '%s'"
 
-#: builtin/remote.c:674
+#: builtin/remote.c:671
 #, c-format
 msgid ""
 "Not updating non-default fetch refspec\n"
 "\t%s\n"
 "\tPlease update the configuration manually if necessary."
 msgstr ""
 "Pas de mise à jour du refspec de rapatriement qui n'est pas par défaut\n"
 "\t%s\n"
 "\tVeuillez mettre à jour la configuration manuellement si nécessaire."
 
-#: builtin/remote.c:680
+#: builtin/remote.c:677
 #, c-format
 msgid "Could not append '%s'"
 msgstr "Impossible d'ajouter '%s'"
 
-#: builtin/remote.c:691
+#: builtin/remote.c:688
 #, c-format
 msgid "Could not set '%s'"
 msgstr "Impossible de définir '%s'"
 
-#: builtin/remote.c:713
+#: builtin/remote.c:710
 #, c-format
 msgid "deleting '%s' failed"
 msgstr "échec de suppression de '%s'"
 
-#: builtin/remote.c:747
+#: builtin/remote.c:744
 #, c-format
 msgid "creating '%s' failed"
 msgstr "échec de création de '%s'"
 
-#: builtin/remote.c:766
+#: builtin/remote.c:763
 #, c-format
 msgid "Could not remove branch %s"
 msgstr "Impossible de supprimer la branche %s"
 
-#: builtin/remote.c:833
+#: builtin/remote.c:830
 msgid ""
 "Note: A branch outside the refs/remotes/ hierarchy was not removed;\n"
 "to delete it, use:"
 msgid_plural ""
 "Note: Some branches outside the refs/remotes/ hierarchy were not removed;\n"
 "to delete them, use:"
@@ -8884,272 +8983,272 @@
 "pour la supprimer, utilisez :"
 msgstr[1] ""
 "Note : Plusieurs branches en dehors de refs/remotes/ n'ont pas été "
 "supprimées ;\n"
 "pour les supprimer, utilisez :"
 
-#: builtin/remote.c:948
+#: builtin/remote.c:945
 #, c-format
 msgid " new (next fetch will store in remotes/%s)"
 msgstr " nouveau (le prochain rapatriement (fetch) stockera dans remotes/%s)"
 
-#: builtin/remote.c:951
+#: builtin/remote.c:948
 msgid " tracked"
 msgstr " suivi"
 
-#: builtin/remote.c:953
+#: builtin/remote.c:950
 msgid " stale (use 'git remote prune' to remove)"
 msgstr " dépassé (utilisez 'git remote prune' pour supprimer)"
 
-#: builtin/remote.c:955
+#: builtin/remote.c:952
 msgid " ???"
 msgstr " ???"
 
-#: builtin/remote.c:996
+#: builtin/remote.c:993
 #, c-format
 msgid "invalid branch.%s.merge; cannot rebase onto > 1 branch"
 msgstr "branch.%s.merge invalide ; ne peut pas rebaser sur plus d'une branche"
 
-#: builtin/remote.c:1003
+#: builtin/remote.c:1000
 #, c-format
 msgid "rebases onto remote %s"
 msgstr "rebase sur la distante %s"
 
-#: builtin/remote.c:1006
+#: builtin/remote.c:1003
 #, c-format
 msgid " merges with remote %s"
 msgstr " fusionne avec la distante %s"
 
-#: builtin/remote.c:1007
+#: builtin/remote.c:1004
 msgid "    and with remote"
 msgstr "    et avec la distante"
 
-#: builtin/remote.c:1009
+#: builtin/remote.c:1006
 #, c-format
 msgid "merges with remote %s"
 msgstr "fusionne avec la distante %s"
 
-#: builtin/remote.c:1010
+#: builtin/remote.c:1007
 msgid "   and with remote"
 msgstr "   et avec la distante"
 
-#: builtin/remote.c:1056
+#: builtin/remote.c:1053
 msgid "create"
 msgstr "créer"
 
-#: builtin/remote.c:1059
+#: builtin/remote.c:1056
 msgid "delete"
 msgstr "supprimer"
 
-#: builtin/remote.c:1063
+#: builtin/remote.c:1060
 msgid "up to date"
 msgstr "à jour"
 
-#: builtin/remote.c:1066
+#: builtin/remote.c:1063
 msgid "fast-forwardable"
 msgstr "peut être mis à jour en avance rapide"
 
-#: builtin/remote.c:1069
+#: builtin/remote.c:1066
 msgid "local out of date"
 msgstr "le local n'est pas à jour"
 
-#: builtin/remote.c:1076
+#: builtin/remote.c:1073
 #, c-format
 msgid "    %-*s forces to %-*s (%s)"
 msgstr "    %-*s force vers %-*s (%s)"
 
-#: builtin/remote.c:1079
+#: builtin/remote.c:1076
 #, c-format
 msgid "    %-*s pushes to %-*s (%s)"
 msgstr "    %-*s pousse vers %-*s (%s)"
 
-#: builtin/remote.c:1083
+#: builtin/remote.c:1080
 #, c-format
 msgid "    %-*s forces to %s"
 msgstr "    %-*s force vers %s"
 
-#: builtin/remote.c:1086
+#: builtin/remote.c:1083
 #, c-format
 msgid "    %-*s pushes to %s"
 msgstr "    %-*s pousse vers %s"
 
-#: builtin/remote.c:1154
+#: builtin/remote.c:1151
 msgid "do not query remotes"
 msgstr "ne pas interroger les distantes"
 
-#: builtin/remote.c:1181
+#: builtin/remote.c:1178
 #, c-format
 msgid "* remote %s"
 msgstr "* distante %s"
 
-#: builtin/remote.c:1182
+#: builtin/remote.c:1179
 #, c-format
 msgid "  Fetch URL: %s"
 msgstr "  URL de rapatriement : %s"
 
-#: builtin/remote.c:1183 builtin/remote.c:1334
+#: builtin/remote.c:1180 builtin/remote.c:1331
 msgid "(no URL)"
 msgstr "(pas d'URL)"
 
-#: builtin/remote.c:1192 builtin/remote.c:1194
+#: builtin/remote.c:1189 builtin/remote.c:1191
 #, c-format
 msgid "  Push  URL: %s"
 msgstr "  URL push : %s"
 
-#: builtin/remote.c:1196 builtin/remote.c:1198 builtin/remote.c:1200
+#: builtin/remote.c:1193 builtin/remote.c:1195 builtin/remote.c:1197
 #, c-format
 msgid "  HEAD branch: %s"
 msgstr "  Branche HEAD : %s"
 
-#: builtin/remote.c:1202
+#: builtin/remote.c:1199
 #, c-format
 msgid ""
 "  HEAD branch (remote HEAD is ambiguous, may be one of the following):\n"
 msgstr ""
 "  Branche HEAD (la HEAD distante est ambiguë, peut être l'une des "
 "suivantes) :\n"
 
-#: builtin/remote.c:1214
+#: builtin/remote.c:1211
 #, c-format
 msgid "  Remote branch:%s"
 msgid_plural "  Remote branches:%s"
 msgstr[0] "  Branche distante :%s"
 msgstr[1] "  Branches distantes :%s"
 
-#: builtin/remote.c:1217 builtin/remote.c:1244
+#: builtin/remote.c:1214 builtin/remote.c:1241
 msgid " (status not queried)"
 msgstr " (statut non demandé)"
 
-#: builtin/remote.c:1226
+#: builtin/remote.c:1223
 msgid "  Local branch configured for 'git pull':"
 msgid_plural "  Local branches configured for 'git pull':"
 msgstr[0] "  Branche locale configurée pour 'git pull' :"
 msgstr[1] "  Branches locales configurées pour 'git pull' :"
 
-#: builtin/remote.c:1234
+#: builtin/remote.c:1231
 msgid "  Local refs will be mirrored by 'git push'"
 msgstr "  Les références locales seront reflétées par 'git push'"
 
-#: builtin/remote.c:1241
+#: builtin/remote.c:1238
 #, c-format
 msgid "  Local ref configured for 'git push'%s:"
 msgid_plural "  Local refs configured for 'git push'%s:"
 msgstr[0] "  Référence locale configurée pour 'git push'%s :"
 msgstr[1] "  Références locales configurées pour 'git push'%s :"
 
-#: builtin/remote.c:1262
+#: builtin/remote.c:1259
 msgid "set refs/remotes/<name>/HEAD according to remote"
 msgstr "définir refs/remotes/<nom>/HEAD selon la distante"
 
-#: builtin/remote.c:1264
+#: builtin/remote.c:1261
 msgid "delete refs/remotes/<name>/HEAD"
 msgstr "supprimer refs/remotes/<nom>/HEAD"
 
-#: builtin/remote.c:1279
+#: builtin/remote.c:1276
 msgid "Cannot determine remote HEAD"
 msgstr "Impossible de déterminer la HEAD distante"
 
-#: builtin/remote.c:1281
+#: builtin/remote.c:1278
 msgid "Multiple remote HEAD branches. Please choose one explicitly with:"
 msgstr ""
 "Il y a de multiples branches HEAD distantes. Veuillez en choisir une "
 "explicitement avec :"
 
-#: builtin/remote.c:1291
+#: builtin/remote.c:1288
 #, c-format
 msgid "Could not delete %s"
 msgstr "Impossible de supprimer %s"
 
-#: builtin/remote.c:1299
+#: builtin/remote.c:1296
 #, c-format
 msgid "Not a valid ref: %s"
 msgstr "Référence non valide : %s"
 
-#: builtin/remote.c:1301
+#: builtin/remote.c:1298
 #, c-format
 msgid "Could not setup %s"
 msgstr "Impossible de paramétrer %s"
 
-#: builtin/remote.c:1319
+#: builtin/remote.c:1316
 #, c-format
 msgid " %s will become dangling!"
 msgstr " %s se retrouvera en suspens !"
 
-#: builtin/remote.c:1320
+#: builtin/remote.c:1317
 #, c-format
 msgid " %s has become dangling!"
 msgstr " %s se retrouve en suspens !"
 
-#: builtin/remote.c:1330
+#: builtin/remote.c:1327
 #, c-format
 msgid "Pruning %s"
 msgstr "Élimination de %s"
 
-#: builtin/remote.c:1331
+#: builtin/remote.c:1328
 #, c-format
 msgid "URL: %s"
 msgstr "URL : %s"
 
-#: builtin/remote.c:1354
+#: builtin/remote.c:1351
 #, c-format
 msgid " * [would prune] %s"
 msgstr " * [serait éliminé] %s"
 
-#: builtin/remote.c:1357
+#: builtin/remote.c:1354
 #, c-format
 msgid " * [pruned] %s"
 msgstr " * [éliminé] %s"
 
-#: builtin/remote.c:1402
+#: builtin/remote.c:1399
 msgid "prune remotes after fetching"
 msgstr "éliminer les distants après le rapatriement"
 
-#: builtin/remote.c:1468 builtin/remote.c:1542
+#: builtin/remote.c:1465 builtin/remote.c:1539
 #, c-format
 msgid "No such remote '%s'"
 msgstr "Pas de serveur remote '%s'"
 
-#: builtin/remote.c:1488
+#: builtin/remote.c:1485
 msgid "add branch"
 msgstr "ajouter une branche"
 
-#: builtin/remote.c:1495
+#: builtin/remote.c:1492
 msgid "no remote specified"
 msgstr "pas de serveur distant spécifié"
 
-#: builtin/remote.c:1517
+#: builtin/remote.c:1514
 msgid "manipulate push URLs"
 msgstr "manipuler les URLs push"
 
-#: builtin/remote.c:1519
+#: builtin/remote.c:1516
 msgid "add URL"
 msgstr "ajouter une URL"
 
-#: builtin/remote.c:1521
+#: builtin/remote.c:1518
 msgid "delete URLs"
 msgstr "supprimer des URLs"
 
-#: builtin/remote.c:1528
+#: builtin/remote.c:1525
 msgid "--add --delete doesn't make sense"
 msgstr "--add --delete n'a aucun sens"
 
-#: builtin/remote.c:1568
+#: builtin/remote.c:1565
 #, c-format
 msgid "Invalid old URL pattern: %s"
 msgstr "Motif d'URL ancien invalide : %s"
 
-#: builtin/remote.c:1576
+#: builtin/remote.c:1573
 #, c-format
 msgid "No such URL found: %s"
 msgstr "Pas d'URL trouvée : %s"
 
-#: builtin/remote.c:1578
+#: builtin/remote.c:1575
 msgid "Will not delete all non-push URLs"
 msgstr "Pas de suppression de toutes les URLs non-push"
 
-#: builtin/remote.c:1592
+#: builtin/remote.c:1589
 msgid "be verbose; must be placed before a subcommand"
 msgstr "être verbeux : doit être placé avant une sous-commande"
 
 #: builtin/repack.c:17
 msgid "git repack [<options>]"
 msgstr "git repack [<options>]"
@@ -9216,13 +9315,13 @@
 msgstr "taille maximum de chaque fichier paquet"
 
 #: builtin/repack.c:187
 msgid "repack objects in packs marked with .keep"
 msgstr "réempaqueter les objets dans des paquets marqués avec .keep"
 
-#: builtin/repack.c:375
+#: builtin/repack.c:377
 #, c-format
 msgid "removing '%s' failed"
 msgstr "la suppression de '%s' a échoué"
 
 #: builtin/replace.c:19
 msgid "git replace [-f] <object> <replacement>"
@@ -9598,13 +9697,13 @@
 "(use 'rm -rf' if you really want to remove it including all of its history)"
 msgstr ""
 "\n"
 "(utilisez 'rm -rf' si vous voulez vraiment le supprimer en incluant tout son "
 "historique)"
 
-#: builtin/rm.c:231
+#: builtin/rm.c:230
 msgid ""
 "the following file has staged content different from both the\n"
 "file and the HEAD:"
 msgid_plural ""
 "the following files have staged content different from both the\n"
 "file and the HEAD:"
@@ -9612,72 +9711,72 @@
 "le fichier suivant a du contenu indexé différent\n"
 "du fichier et de HEAD :"
 msgstr[1] ""
 "les fichiers suivants ont du contenu indexé différent\n"
 "du fichier et de HEAD :"
 
-#: builtin/rm.c:236
+#: builtin/rm.c:235
 msgid ""
 "\n"
 "(use -f to force removal)"
 msgstr ""
 "\n"
 "(utilisez -f pour forcer la suppression)"
 
-#: builtin/rm.c:240
+#: builtin/rm.c:239
 msgid "the following file has changes staged in the index:"
 msgid_plural "the following files have changes staged in the index:"
 msgstr[0] "le fichier suivant a des changements indexés :"
 msgstr[1] "les fichiers suivants ont des changements indexés :"
 
-#: builtin/rm.c:244 builtin/rm.c:255
+#: builtin/rm.c:243 builtin/rm.c:254
 msgid ""
 "\n"
 "(use --cached to keep the file, or -f to force removal)"
 msgstr ""
 "\n"
 "(utilisez --cached pour garder le fichier, ou -f pour forcer la suppression)"
 
-#: builtin/rm.c:252
+#: builtin/rm.c:251
 msgid "the following file has local modifications:"
 msgid_plural "the following files have local modifications:"
 msgstr[0] "le fichier suivant a des modifications locales :"
 msgstr[1] "les fichiers suivants ont des modifications locales :"
 
-#: builtin/rm.c:270
+#: builtin/rm.c:269
 msgid "do not list removed files"
 msgstr "ne pas afficher les fichiers supprimés"
 
-#: builtin/rm.c:271
+#: builtin/rm.c:270
 msgid "only remove from the index"
 msgstr "supprimer seulement de l'index"
 
-#: builtin/rm.c:272
+#: builtin/rm.c:271
 msgid "override the up-to-date check"
 msgstr "outrepasser la vérification des fichiers à jour"
 
-#: builtin/rm.c:273
+#: builtin/rm.c:272
 msgid "allow recursive removal"
 msgstr "autoriser la suppression récursive"
 
-#: builtin/rm.c:275
+#: builtin/rm.c:274
 msgid "exit with a zero status even if nothing matched"
 msgstr "sortir avec un statut zéro même si rien ne correspondait"
 
-#: builtin/rm.c:318
+#: builtin/rm.c:317
 msgid "Please, stage your changes to .gitmodules or stash them to proceed"
 msgstr ""
 "Veuillez indexer vos modifications de .gitmodules ou remisez-les pour "
 "continuer"
 
-#: builtin/rm.c:336
+#: builtin/rm.c:335
 #, c-format
 msgid "not removing '%s' recursively without -r"
 msgstr "pas de suppression récursive de '%s' sans -r"
 
-#: builtin/rm.c:375
+#: builtin/rm.c:374
 #, c-format
 msgid "git rm: unable to remove %s"
 msgstr "git rm : impossible de supprimer %s"
 
 #: builtin/shortlog.c:13
 msgid "git shortlog [<options>] [<revision-range>] [[--] [<path>...]]"
@@ -9723,74 +9822,74 @@
 "\t\t[--no-name | --sha1-name] [--topics] [(<rév> | <glob>)...]"
 
 #: builtin/show-branch.c:13
 msgid "git show-branch (-g | --reflog)[=<n>[,<base>]] [--list] [<ref>]"
 msgstr "git show-branch (-g | --reflog)[=<n>[,<base>]] [--list] [<référence>]"
 
-#: builtin/show-branch.c:652
+#: builtin/show-branch.c:659
 msgid "show remote-tracking and local branches"
 msgstr "afficher les branches de suivi distantes et les branches locales"
 
-#: builtin/show-branch.c:654
+#: builtin/show-branch.c:661
 msgid "show remote-tracking branches"
 msgstr "afficher les branches de suivi distantes"
 
-#: builtin/show-branch.c:656
+#: builtin/show-branch.c:663
 msgid "color '*!+-' corresponding to the branch"
 msgstr "couleur '*!+-' correspondant à la branche"
 
-#: builtin/show-branch.c:658
+#: builtin/show-branch.c:665
 msgid "show <n> more commits after the common ancestor"
 msgstr "afficher <n> validations de plus après l'ancêtre commun"
 
-#: builtin/show-branch.c:660
+#: builtin/show-branch.c:667
 msgid "synonym to more=-1"
 msgstr "synonyme de more=-1"
 
-#: builtin/show-branch.c:661
+#: builtin/show-branch.c:668
 msgid "suppress naming strings"
 msgstr "supprimer les chaînes de nommage"
 
-#: builtin/show-branch.c:663
+#: builtin/show-branch.c:670
 msgid "include the current branch"
 msgstr "inclure la branche courante"
 
-#: builtin/show-branch.c:665
+#: builtin/show-branch.c:672
 msgid "name commits with their object names"
 msgstr "nommer les validations avec leurs noms d'objet"
 
-#: builtin/show-branch.c:667
+#: builtin/show-branch.c:674
 msgid "show possible merge bases"
 msgstr "afficher les bases possibles de fusion"
 
-#: builtin/show-branch.c:669
+#: builtin/show-branch.c:676
 msgid "show refs unreachable from any other ref"
 msgstr "afficher les références inaccessibles depuis toute autre référence"
 
-#: builtin/show-branch.c:671
+#: builtin/show-branch.c:678
 msgid "show commits in topological order"
 msgstr "afficher les validations dans l'ordre topologique"
 
-#: builtin/show-branch.c:674
+#: builtin/show-branch.c:681
 msgid "show only commits not on the first branch"
 msgstr ""
 "afficher seulement les validations qui ne sont pas sur la première branche"
 
-#: builtin/show-branch.c:676
+#: builtin/show-branch.c:683
 msgid "show merges reachable from only one tip"
 msgstr "afficher les fusions accessibles depuis une seule pointe"
 
-#: builtin/show-branch.c:678
+#: builtin/show-branch.c:685
 msgid "topologically sort, maintaining date order where possible"
 msgstr "tri topologique, maintenant l'ordre par date si possible"
 
-#: builtin/show-branch.c:681
+#: builtin/show-branch.c:688
 msgid "<n>[,<base>]"
 msgstr "<n>[,<base>]"
 
-#: builtin/show-branch.c:682
+#: builtin/show-branch.c:689
 msgid "show <n> most recent ref-log entries starting at base"
 msgstr ""
 "afficher les <n> plus récents éléments de ref-log en commençant à la base"
 
 #: builtin/show-ref.c:10
 msgid ""
@@ -9801,44 +9900,44 @@
 "hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<motif>...]"
 
 #: builtin/show-ref.c:11
 msgid "git show-ref --exclude-existing[=pattern] < ref-list"
 msgstr "git show-ref --exclude-existing[=motif] < liste-références"
 
-#: builtin/show-ref.c:168
+#: builtin/show-ref.c:170
 msgid "only show tags (can be combined with heads)"
 msgstr "afficher seulement les étiquettes (peut être combiné avec des têtes)"
 
-#: builtin/show-ref.c:169
+#: builtin/show-ref.c:171
 msgid "only show heads (can be combined with tags)"
 msgstr "afficher seulement les têtes (peut être combiné avec des étiquettes)"
 
-#: builtin/show-ref.c:170
+#: builtin/show-ref.c:172
 msgid "stricter reference checking, requires exact ref path"
 msgstr ""
 "vérification de référence plus stricte, nécessite un chemin de référence "
 "exact"
 
-#: builtin/show-ref.c:173 builtin/show-ref.c:175
+#: builtin/show-ref.c:175 builtin/show-ref.c:177
 msgid "show the HEAD reference, even if it would be filtered out"
 msgstr "afficher la référence HEAD, même si elle serait filtrée"
 
-#: builtin/show-ref.c:177
+#: builtin/show-ref.c:179
 msgid "dereference tags into object IDs"
 msgstr "déréférencer les étiquettes en IDs d'objet"
 
-#: builtin/show-ref.c:179
+#: builtin/show-ref.c:181
 msgid "only show SHA1 hash using <n> digits"
 msgstr "afficher seulement le hachage SHA1 en utilisant <n> chiffres"
 
-#: builtin/show-ref.c:183
+#: builtin/show-ref.c:185
 msgid "do not print results to stdout (useful with --verify)"
 msgstr ""
 "ne pas afficher les résultats sur la sortie standard (pratique avec --verify)"
 
-#: builtin/show-ref.c:185
+#: builtin/show-ref.c:187
 msgid "show refs from stdin that aren't in local repository"
 msgstr ""
 "afficher les références de l'entrée standard qui ne sont pas dans le dépôt "
 "local"
 
 #: builtin/symbolic-ref.c:7
@@ -10095,132 +10194,207 @@
 msgstr "Étiquette '%s' mise à jour (elle était sur %s)\n"
 
 #: builtin/unpack-objects.c:489
 msgid "Unpacking objects"
 msgstr "Dépaquetage des objets"
 
-#: builtin/update-index.c:403
+#: builtin/update-index.c:70
+#, c-format
+msgid "failed to create directory %s"
+msgstr "échec de la création du répertoire %s"
+
+#: builtin/update-index.c:76
+#, c-format
+msgid "failed to stat %s"
+msgstr "échec du stat de %s"
+
+#: builtin/update-index.c:86
+#, c-format
+msgid "failed to create file %s"
+msgstr "échec de la création du fichier %s"
+
+#: builtin/update-index.c:94
+#, c-format
+msgid "failed to delete file %s"
+msgstr "échec de la suppression du fichier %s"
+
+#: builtin/update-index.c:101 builtin/update-index.c:203
+#, c-format
+msgid "failed to delete directory %s"
+msgstr "échec de la suppression du répertoire %s"
+
+#: builtin/update-index.c:124
+#, c-format
+msgid "Testing "
+msgstr "Test en cours "
+
+#: builtin/update-index.c:136
+msgid "directory stat info does not change after adding a new file"
+msgstr ""
+"l'information de stat du répertoire ne change pas après ajout d'un fichier"
+
+#: builtin/update-index.c:149
+msgid "directory stat info does not change after adding a new directory"
+msgstr ""
+"l'information de stat du répertoire ne change pas après ajout d'un répertoire"
+
+#: builtin/update-index.c:162
+msgid "directory stat info changes after updating a file"
+msgstr ""
+"l'information de stat du répertoire change après mise à jour d'un fichier"
+
+#: builtin/update-index.c:173
+msgid "directory stat info changes after adding a file inside subdirectory"
+msgstr ""
+"l'information de stat du répertoire change après l'ajout d'un fichier dans "
+"un sous-répertoire"
+
+#: builtin/update-index.c:184
+msgid "directory stat info does not change after deleting a file"
+msgstr ""
+"l'information de stat du répertoire ne change pas après la suppression d'un "
+"fichier<"
+
+#: builtin/update-index.c:197
+msgid "directory stat info does not change after deleting a directory"
+msgstr ""
+"l'information de stat du répertoire ne change pas après la suppression d'un "
+"répertoire"
+
+#: builtin/update-index.c:204
+msgid " OK"
+msgstr " OK"
+
+#: builtin/update-index.c:564
 msgid "git update-index [<options>] [--] [<file>...]"
 msgstr "git update-index [<options>] [--] [<fichier>...]"
 
-#: builtin/update-index.c:757
+#: builtin/update-index.c:918
 msgid "continue refresh even when index needs update"
 msgstr "continuer de rafraîchir même si l'index a besoin d'une mise à jour"
 
-#: builtin/update-index.c:760
+#: builtin/update-index.c:921
 msgid "refresh: ignore submodules"
 msgstr "rafraîchir : ignorer les sous-modules"
 
-#: builtin/update-index.c:763
+#: builtin/update-index.c:924
 msgid "do not ignore new files"
 msgstr "ne pas ignorer les nouveaux fichiers"
 
-#: builtin/update-index.c:765
+#: builtin/update-index.c:926
 msgid "let files replace directories and vice-versa"
 msgstr "laisser les fichiers remplacer des répertoires et vice-versa"
 
-#: builtin/update-index.c:767
+#: builtin/update-index.c:928
 msgid "notice files missing from worktree"
 msgstr "aviser des fichiers manquants dans la copie de travail"
 
-#: builtin/update-index.c:769
+#: builtin/update-index.c:930
 msgid "refresh even if index contains unmerged entries"
 msgstr "rafraîchir même si l'index contient des éléments non fusionnés"
 
-#: builtin/update-index.c:772
+#: builtin/update-index.c:933
 msgid "refresh stat information"
 msgstr "rafraîchir l'information de stat"
 
-#: builtin/update-index.c:776
+#: builtin/update-index.c:937
 msgid "like --refresh, but ignore assume-unchanged setting"
 msgstr "comme --refresh, mais en ignorant l'option assume-unchanged"
 
-#: builtin/update-index.c:780
+#: builtin/update-index.c:941
 msgid "<mode>,<object>,<path>"
 msgstr "<mode>, <objet>, <chemin>"
 
-#: builtin/update-index.c:781
+#: builtin/update-index.c:942
 msgid "add the specified entry to the index"
 msgstr "ajouter l'élément spécifié dans l'index"
 
-#: builtin/update-index.c:785
+#: builtin/update-index.c:946
 msgid "(+/-)x"
 msgstr "(+/-)x"
 
-#: builtin/update-index.c:786
+#: builtin/update-index.c:947
 msgid "override the executable bit of the listed files"
 msgstr "outrepasser le bit exécutable pour les fichiers listés"
 
-#: builtin/update-index.c:790
+#: builtin/update-index.c:951
 msgid "mark files as \"not changing\""
 msgstr "marquer les fichiers comme \"non changeants\""
 
-#: builtin/update-index.c:793
+#: builtin/update-index.c:954
 msgid "clear assumed-unchanged bit"
 msgstr "mettre à zéro le bit supposé-non-modifié"
 
-#: builtin/update-index.c:796
+#: builtin/update-index.c:957
 msgid "mark files as \"index-only\""
 msgstr "marquer les fichiers comme \"index seulement\""
 
-#: builtin/update-index.c:799
+#: builtin/update-index.c:960
 msgid "clear skip-worktree bit"
 msgstr "mettre à zéro le bit sauter-la-copie-de travail"
 
-#: builtin/update-index.c:802
+#: builtin/update-index.c:963
 msgid "add to index only; do not add content to object database"
 msgstr ""
 "ajouter seulement à l'index ; ne pas ajouter le contenu dans la base de "
 "données des objets"
 
-#: builtin/update-index.c:804
+#: builtin/update-index.c:965
 msgid "remove named paths even if present in worktree"
 msgstr ""
 "supprimer les chemins nommés même s'ils sont présents dans la copie de "
 "travail"
 
-#: builtin/update-index.c:806
+#: builtin/update-index.c:967
 msgid "with --stdin: input lines are terminated by null bytes"
 msgstr "avec --stdin : les lignes en entrée sont terminées par des octets nuls"
 
-#: builtin/update-index.c:808
+#: builtin/update-index.c:969
 msgid "read list of paths to be updated from standard input"
 msgstr "lire la liste des chemins à mettre à jour depuis l'entrée standard"
 
-#: builtin/update-index.c:812
+#: builtin/update-index.c:973
 msgid "add entries from standard input to the index"
 msgstr "ajouter les éléments depuis l'entrée standard à l'index"
 
-#: builtin/update-index.c:816
+#: builtin/update-index.c:977
 msgid "repopulate stages #2 and #3 for the listed paths"
 msgstr "repeupler les étapes n°2 et n°3 pour les chemins listés"
 
-#: builtin/update-index.c:820
+#: builtin/update-index.c:981
 msgid "only update entries that differ from HEAD"
 msgstr "mettre à jour seulement les éléments qui diffèrent de HEAD"
 
-#: builtin/update-index.c:824
+#: builtin/update-index.c:985
 msgid "ignore files missing from worktree"
 msgstr "ignorer les fichiers manquants dans la copie de travail"
 
-#: builtin/update-index.c:827
+#: builtin/update-index.c:988
 msgid "report actions to standard output"
 msgstr "afficher les actions sur la sortie standard"
 
-#: builtin/update-index.c:829
+#: builtin/update-index.c:990
 msgid "(for porcelains) forget saved unresolved conflicts"
 msgstr "(pour porcelaines) oublier les conflits sauvés et non résolus"
 
-#: builtin/update-index.c:833
+#: builtin/update-index.c:994
 msgid "write index in this format"
 msgstr "écrire l'index dans ce format"
 
-#: builtin/update-index.c:835
+#: builtin/update-index.c:996
 msgid "enable or disable split index"
 msgstr "activer ou désactiver l'index divisé"
 
+#: builtin/update-index.c:998
+msgid "enable/disable untracked cache"
+msgstr "activer ou désactiver le cache non-suivi"
+
+#: builtin/update-index.c:1000
+msgid "enable untracked cache without testing the filesystem"
+msgstr "activer le cache non-suivi sans tester le système de fichier"
+
 #: builtin/update-ref.c:9
 msgid "git update-ref [<options>] -d <refname> [<old-val>]"
 msgstr "git update-ref [<options>] -d <nom-référence> [<ancienne-valeur>]"
 
 #: builtin/update-ref.c:10
 msgid "git update-ref [<options>]    <refname> <new-val> [<old-val>]"
@@ -10281,12 +10455,92 @@
 msgstr "git verify-tag [-v | --verbose] <étiquette>..."
 
 #: builtin/verify-tag.c:73
 msgid "print tag contents"
 msgstr "afficher le contenu de l'étiquette"
 
+#: builtin/worktree.c:11
+msgid "git worktree add [<options>] <path> <branch>"
+msgstr "git worktree add [<options>] <chemin> <branche>"
+
+#: builtin/worktree.c:12
+msgid "git worktree prune [<options>]"
+msgstr "git worktree prune [<options>]"
+
+#: builtin/worktree.c:27
+#, c-format
+msgid "Removing worktrees/%s: not a valid directory"
+msgstr "Suppression de worktrees/%s : répertoire invalide"
+
+#: builtin/worktree.c:33
+#, c-format
+msgid "Removing worktrees/%s: gitdir file does not exist"
+msgstr "Suppression de worktrees/%s : le fichier gitdir n'existe pas"
+
+#: builtin/worktree.c:38
+#, c-format
+msgid "Removing worktrees/%s: unable to read gitdir file (%s)"
+msgstr ""
+"Suppression de worktrees/%s : echec de la lecture du fichier gitdir (%s)"
+
+#: builtin/worktree.c:49
+#, c-format
+msgid "Removing worktrees/%s: invalid gitdir file"
+msgstr "Suppression de worktrees/%s : fichier gitdir invalide"
+
+#: builtin/worktree.c:65
+#, c-format
+msgid "Removing worktrees/%s: gitdir file points to non-existent location"
+msgstr ""
+"Suppression de worktrees/%s : le fichier gitdir point sur un endroit "
+"inexistant"
+
+#: builtin/worktree.c:100
+#, c-format
+msgid "failed to remove: %s"
+msgstr "échec de la suppression de %s"
+
+#: builtin/worktree.c:186
+#, c-format
+msgid "'%s' already exists"
+msgstr "'%s' existe déjà"
+
+#: builtin/worktree.c:207
+#, c-format
+msgid "could not create directory of '%s'"
+msgstr "impossible de créer le répertoire de '%s'"
+
+#: builtin/worktree.c:241
+msgid "unable to resolve HEAD"
+msgstr "impossible de résoudre HEAD"
+
+#: builtin/worktree.c:249
+#, c-format
+msgid "Enter %s (identifier %s)"
+msgstr "Saisir %s (identifiant %s)"
+
+#: builtin/worktree.c:281
+msgid "checkout <branch> even if already checked out in other worktree"
+msgstr "extraire la <branche> même si elle est déjà extraite dans une autre copie de travail"
+
+#: builtin/worktree.c:283
+msgid "create a new branch"
+msgstr "créer une nouvelle branche"
+
+#: builtin/worktree.c:285
+msgid "create or reset a branch"
+msgstr "créer ou réinitialiser une branche"
+
+#: builtin/worktree.c:286
+msgid "detach HEAD at named commit"
+msgstr "détacher la HEAD au commit nommé"
+
+#: builtin/worktree.c:292
+msgid "-b and -B are mutually exclusive"
+msgstr "-b et -B sont mutuellement exclusifs"
+
 #: builtin/write-tree.c:13
 msgid "git write-tree [--missing-ok] [--prefix=<prefix>/]"
 msgstr "git write-tree [--missing-ok] [--prefix=<préfixe>/]"
 
 #: builtin/write-tree.c:26
 msgid "<prefix>/"
@@ -10311,306 +10565,327 @@
 "to read about a specific subcommand or concept."
 msgstr ""
 "'git help -a' et 'git help -g' listent les sous-commandes disponibles et\n"
 "quelques concepts. Voir 'git help <commande>' ou 'git help <concept>'\n"
 "pour en lire plus à propos d'une commande spécifique ou d'un concept."
 
-#: common-cmds.h:8
+#: common-cmds.h:10
+msgid "start a working area (see also: git help tutorial)"
+msgstr "démarrer une zone de travail (voir aussi : git help tutorial)"
+
+#: common-cmds.h:11
+msgid "work on the current change (see also: git help everyday)"
+msgstr ""
+"travailler sur la modification actuelle (voir aussi : git help revisions)"
+
+#: common-cmds.h:12
+msgid "examine the history and state (see also: git help revisions)"
+msgstr "examiner l'historique et l'état (voir aussi : git help revisions)"
+
+#: common-cmds.h:13
+msgid "grow, mark and tweak your common history"
+msgstr "agrandir, marquer et modifier votre historique"
+
+#: common-cmds.h:14
+msgid "collaborate (see also: git help workflows)"
+msgstr "collaborer (voir aussi : git help workflows)"
+
+#: common-cmds.h:18
 msgid "Add file contents to the index"
 msgstr "Ajouter le contenu de fichiers dans l'index"
 
-#: common-cmds.h:9
+#: common-cmds.h:19
 msgid "Find by binary search the change that introduced a bug"
 msgstr "Trouver par recherche binaire la modification qui a introduit un bogue"
 
-#: common-cmds.h:10
+#: common-cmds.h:20
 msgid "List, create, or delete branches"
 msgstr "Lister, créer ou supprimer des branches"
 
-#: common-cmds.h:11
-msgid "Checkout a branch or paths to the working tree"
-msgstr "Extraire une branche ou des chemins dans la copie de travail"
+#: common-cmds.h:21
+msgid "Switch branches or restore working tree files"
+msgstr "Basculer de branche ou restaurer la copie de travail"
 
-#: common-cmds.h:12
+#: common-cmds.h:22
 msgid "Clone a repository into a new directory"
 msgstr "Cloner un dépôt dans un nouveau répertoire"
 
-#: common-cmds.h:13
+#: common-cmds.h:23
 msgid "Record changes to the repository"
 msgstr "Enregistrer les modifications dans le dépôt"
 
-#: common-cmds.h:14
+#: common-cmds.h:24
 msgid "Show changes between commits, commit and working tree, etc"
 msgstr ""
 "Afficher les changements entre les validations, entre validation et copie de "
 "travail, etc"
 
-#: common-cmds.h:15
+#: common-cmds.h:25
 msgid "Download objects and refs from another repository"
 msgstr "Télécharger les objets et références depuis un autre dépôt"
 
-#: common-cmds.h:16
+#: common-cmds.h:26
 msgid "Print lines matching a pattern"
 msgstr "Afficher les lignes correspondant à un motif"
 
-#: common-cmds.h:17
+#: common-cmds.h:27
 msgid "Create an empty Git repository or reinitialize an existing one"
 msgstr "Créer un dépôt Git vide ou réinitialiser un existant"
 
-#: common-cmds.h:18
+#: common-cmds.h:28
 msgid "Show commit logs"
 msgstr "Afficher l'historique des validations"
 
-#: common-cmds.h:19
+#: common-cmds.h:29
 msgid "Join two or more development histories together"
 msgstr "Fusionner deux ou plusieurs historiques de développement ensemble"
 
-#: common-cmds.h:20
+#: common-cmds.h:30
 msgid "Move or rename a file, a directory, or a symlink"
 msgstr "Déplacer ou renommer un fichier, un répertoire, ou un lien symbolique"
 
-#: common-cmds.h:21
+#: common-cmds.h:31
 msgid "Fetch from and integrate with another repository or a local branch"
 msgstr "Rapatrier et intégrer un autre dépôt ou une branche locale"
 
-#: common-cmds.h:22
+#: common-cmds.h:32
 msgid "Update remote refs along with associated objects"
 msgstr "Mettre à jour les références distantes ainsi que les objets associés"
 
-#: common-cmds.h:23
+#: common-cmds.h:33
 msgid "Forward-port local commits to the updated upstream head"
 msgstr ""
 "Reporter les validations locales sur le sommet mis à jour d'une branche amont"
 
-#: common-cmds.h:24
+#: common-cmds.h:34
 msgid "Reset current HEAD to the specified state"
 msgstr "Réinitialiser la HEAD courante à l'état spécifié"
 
-#: common-cmds.h:25
+#: common-cmds.h:35
 msgid "Remove files from the working tree and from the index"
 msgstr "Supprimer des fichiers de la copie de travail et de l'index"
 
-#: common-cmds.h:26
+#: common-cmds.h:36
 msgid "Show various types of objects"
 msgstr "Afficher différents types d'objets"
 
-#: common-cmds.h:27
+#: common-cmds.h:37
 msgid "Show the working tree status"
 msgstr "Afficher le statut de la copie de travail"
 
-#: common-cmds.h:28
+#: common-cmds.h:38
 msgid "Create, list, delete or verify a tag object signed with GPG"
 msgstr ""
 "Créer, lister, supprimer ou vérifier un objet d'étiquette signé avec GPG"
 
-#: parse-options.h:143
+#: parse-options.h:142
 msgid "expiry-date"
 msgstr "date-d'expiration"
 
-#: parse-options.h:158
+#: parse-options.h:157
 msgid "no-op (backward compatibility)"
 msgstr "sans action (rétrocompatibilité)"
 
-#: parse-options.h:232
+#: parse-options.h:231
 msgid "be more verbose"
 msgstr "être plus verbeux"
 
-#: parse-options.h:234
+#: parse-options.h:233
 msgid "be more quiet"
 msgstr "être plus silencieux"
 
-#: parse-options.h:240
+#: parse-options.h:239
 msgid "use <n> digits to display SHA-1s"
 msgstr "utiliser <n> chiffres pour afficher les SHA-1s"
 
 #: rerere.h:27
 msgid "update the index with reused conflict resolution if possible"
 msgstr ""
 "met à jour l'index avec les résolutions de conflit réutilisées si possible"
 
 #: git-am.sh:53
 msgid "You need to set your committer info first"
 msgstr "Vous devez d'abord définir vos informations de validateur"
 
-#: git-am.sh:98
+#: git-am.sh:100
 msgid ""
 "You seem to have moved HEAD since the last 'am' failure.\n"
 "Not rewinding to ORIG_HEAD"
 msgstr ""
 "Vous semblez avoir déplacé la HEAD depuis le dernier échec de 'am'.\n"
 "Pas de retour à ORIG_HEAD"
 
-#: git-am.sh:108
+#: git-am.sh:110
 #, sh-format
 msgid ""
 "When you have resolved this problem, run \"$cmdline --continue\".\n"
 "If you prefer to skip this patch, run \"$cmdline --skip\" instead.\n"
 "To restore the original branch and stop patching, run \"$cmdline --abort\"."
 msgstr ""
 "Lorsque vous aurez résolu ce problème, lancez \"$cmdline --continue\".\n"
 "Si vous préférez sauter ce patch, lancez \"$cmdline --skip\" à la place.\n"
 "Pour restaurer la branche d'origine et stopper le patchage, lancez "
 "\"$cmdline --abort\"."
 
-#: git-am.sh:124
+#: git-am.sh:126
 msgid "Cannot fall back to three-way merge."
 msgstr "Impossible de retourner à une fusion à 3 points."
 
-#: git-am.sh:140
+#: git-am.sh:142
 msgid "Repository lacks necessary blobs to fall back on 3-way merge."
 msgstr ""
 "Le dépôt n'a pas les blobs nécessaires pour un retour à une fusion à 3 "
 "points."
 
-#: git-am.sh:142
+#: git-am.sh:144
 msgid "Using index info to reconstruct a base tree..."
 msgstr ""
 "Utilisation de l'information de l'index pour reconstruire un arbre de base..."
 
-#: git-am.sh:157
+#: git-am.sh:159
 msgid ""
 "Did you hand edit your patch?\n"
 "It does not apply to blobs recorded in its index."
 msgstr ""
 "Avez-vous édité le patch à la main ?\n"
 "Il ne s'applique pas aux blobs enregistrés dans son index."
 
-#: git-am.sh:166
+#: git-am.sh:168
 msgid "Falling back to patching base and 3-way merge..."
 msgstr "Retour à un patch de la base et fusion à 3 points..."
 
-#: git-am.sh:182
+#: git-am.sh:185
 msgid "Failed to merge in the changes."
 msgstr "Échec d'intégration des modifications."
 
-#: git-am.sh:277
+#: git-am.sh:280
 msgid "Only one StGIT patch series can be applied at once"
 msgstr "Seulement une série de patchs StGIT peut être appliquée à la fois"
 
-#: git-am.sh:364
+#: git-am.sh:367
 #, sh-format
 msgid "Patch format $patch_format is not supported."
 msgstr "Le format de patch $patch_format n'est pas supporté."
 
-#: git-am.sh:366
+#: git-am.sh:369
 msgid "Patch format detection failed."
 msgstr "Échec de détection du format du patch."
 
-#: git-am.sh:398
+#: git-am.sh:407
 msgid ""
 "The -b/--binary option has been a no-op for long time, and\n"
 "it will be removed. Please do not use it anymore."
 msgstr ""
 "L'option -b/--binary ne fait plus rien depuis longtemps,\n"
 "et elle sera supprimée. Veuillez ne plus l'utiliser."
 
-#: git-am.sh:496
+#: git-am.sh:507
 #, sh-format
 msgid "previous rebase directory $dotest still exists but mbox given."
 msgstr ""
 "le répertoire précédent de rebasage $dotest existe toujours mais mbox donnée."
 
-#: git-am.sh:501
+#: git-am.sh:512
 msgid "Please make up your mind. --skip or --abort?"
 msgstr "Décidez-vous. --skip ou --abort ?"
 
-#: git-am.sh:537
+#: git-am.sh:560
 #, sh-format
 msgid ""
 "Stray $dotest directory found.\n"
 "Use \"git am --abort\" to remove it."
 msgstr ""
 "Répertoire abandonné $dotest trouvé.\n"
 "Utilisez \"git am --abort\" pour le supprimer."
 
-#: git-am.sh:545
+#: git-am.sh:568
 msgid "Resolve operation not in progress, we are not resuming."
 msgstr ""
 "Pas de résolution de l'opération en cours, nous ne sommes pas dans une "
 "reprise."
 
-#: git-am.sh:612
+#: git-am.sh:635
 #, sh-format
 msgid "Dirty index: cannot apply patches (dirty: $files)"
 msgstr "Index sale : impossible d'appliquer des patchs (sales : $files)"
 
-#: git-am.sh:722
+#: git-am.sh:747
 #, sh-format
 msgid ""
 "Patch is empty.  Was it split wrong?\n"
 "If you would prefer to skip this patch, instead run \"$cmdline --skip\".\n"
 "To restore the original branch and stop patching run \"$cmdline --abort\"."
 msgstr ""
 "Le patch est vide.  Était-il mal découpé ?\n"
 "Si vous préférez sauter ce patch, lancez plutôt \"$cmdline --skip\".\n"
 "Pour restaurer la branche d'origine et stopper le patchage, lancez "
 "\"$cmdline --abort\"."
 
-#: git-am.sh:749
+#: git-am.sh:774
 msgid "Patch does not have a valid e-mail address."
 msgstr "Le patch n'a pas d'adresse e-mail valide."
 
-#: git-am.sh:796
+#: git-am.sh:821
 msgid "cannot be interactive without stdin connected to a terminal."
 msgstr ""
 "impossible d'être interactif sans entrée standard connectée à un terminal."
 
-#: git-am.sh:800
+#: git-am.sh:825
 msgid "Commit Body is:"
 msgstr "Le corps de la validation est :"
 
 #. TRANSLATORS: Make sure to include [y], [n], [e], [v] and [a]
 #. in your translation. The program will only accept English
 #. input at this point.
-#: git-am.sh:807
+#: git-am.sh:832
 msgid "Apply? [y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all "
 msgstr "Appliquer ? [y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all "
 
-#: git-am.sh:843
+#: git-am.sh:868
 #, sh-format
 msgid "Applying: $FIRSTLINE"
 msgstr "Application : $FIRSTLINE"
 
-#: git-am.sh:864
+#: git-am.sh:889
 msgid ""
 "No changes - did you forget to use 'git add'?\n"
 "If there is nothing left to stage, chances are that something else\n"
 "already introduced the same changes; you might want to skip this patch."
 msgstr ""
 "Aucun changement - avez-vous oublié d'utiliser 'git add' ?\n"
 "S'il n'y a plus rien à indexer, il se peut qu'autre chose ait déjà\n"
 "introduit les mêmes changements ; vous pourriez avoir envie de sauter ce "
 "patch."
 
-#: git-am.sh:872
+#: git-am.sh:897
 msgid ""
 "You still have unmerged paths in your index\n"
 "did you forget to use 'git add'?"
 msgstr ""
 "Vous avez toujours des chemins non fusionnés dans votre index\n"
 "auriez-vous oublié de faire 'git add' ?"
 
-#: git-am.sh:888
+#: git-am.sh:913
 msgid "No changes -- Patch already applied."
 msgstr "Pas de changement -- Patch déjà appliqué."
 
-#: git-am.sh:898
+#: git-am.sh:923
 #, sh-format
 msgid "Patch failed at $msgnum $FIRSTLINE"
 msgstr "Le patch a échoué à $msgnum $FIRSTLINE"
 
-#: git-am.sh:901
+#: git-am.sh:926
 #, sh-format
 msgid ""
 "The copy of the patch that failed is found in:\n"
 "   $dotest/patch"
 msgstr ""
 "La copie du patch qui a échoué se trouve dans :\n"
 "   $dotest/patch"
 
-#: git-am.sh:919
+#: git-am.sh:945
 msgid "applying to an empty history"
 msgstr "application à un historique vide"
 
 #: git-bisect.sh:48
 msgid "You need to start by \"git bisect start\""
 msgstr "Vous devez démarrer avec \"git bisect start\""
@@ -10763,57 +11038,57 @@
 "'bisect_state $state' a retourné le code erreur $res"
 
 #: git-bisect.sh:485
 msgid "bisect run success"
 msgstr "succès de la bissection"
 
-#: git-pull.sh:21
+#: git-pull.sh:61
 msgid ""
 "Pull is not possible because you have unmerged files.\n"
 "Please, fix them up in the work tree, and then use 'git add/rm <file>'\n"
 "as appropriate to mark resolution and make a commit."
 msgstr ""
 "Le tirage n'est pas possible car vous avez des fichiers non fusionnés.\n"
 "Veuillez les corriger dans votre copie de travail, utiliser alors 'git add/"
 "rm <fichier>'\n"
 "si nécessaire pour marquer comme résolu et valider."
 
-#: git-pull.sh:25
+#: git-pull.sh:65
 msgid "Pull is not possible because you have unmerged files."
 msgstr "Le pull n'est pas possible car vous avez des fichiers non fusionnés."
 
-#: git-pull.sh:31
+#: git-pull.sh:71
 msgid ""
 "You have not concluded your merge (MERGE_HEAD exists).\n"
 "Please, commit your changes before you can merge."
 msgstr ""
 "Vous n'avez pas terminé votre fusion (MERGE_HEAD existe).\n"
 "Veuillez valider vos changements avant de pouvoir fusionner."
 
-#: git-pull.sh:245
+#: git-pull.sh:285
 msgid "updating an unborn branch with changes added to the index"
 msgstr ""
 "mise à jour d'une branche non encore créée avec les changements ajoutés dans "
 "l'index"
 
-#: git-pull.sh:269
+#: git-pull.sh:311
 #, sh-format
 msgid ""
 "Warning: fetch updated the current branch head.\n"
 "Warning: fast-forwarding your working tree from\n"
 "Warning: commit $orig_head."
 msgstr ""
 "Attention : fetch a mis à jour la tête de la branche courante.\n"
 "Attention : mise à jour en avance rapide de votre copie de travail\n"
 "Attention : depuis la validation $orig_head."
 
-#: git-pull.sh:294
+#: git-pull.sh:336
 msgid "Cannot merge multiple branches into empty head"
 msgstr "Impossible de fusionner de multiples branches sur une tête vide"
 
-#: git-pull.sh:298
+#: git-pull.sh:340
 msgid "Cannot rebase onto multiple branches"
 msgstr "Impossible de rebaser sur de multiples branches"
 
 #: git-rebase.sh:57
 msgid ""
 "When you have resolved this problem, run \"git rebase --continue\".\n"
@@ -11009,100 +11284,105 @@
 #. translation of "error: " takes in your language. E.g. in
 #. English this is:
 #.
 #. $ git stash save --blah-blah 2>&1 | head -n 2
 #. error: unknown option for 'stash save': --blah-blah
 #. To provide a message, use git stash save -- '--blah-blah'
-#: git-stash.sh:238
+#: git-stash.sh:241
 #, sh-format
 msgid ""
 "error: unknown option for 'stash save': $option\n"
 "       To provide a message, use git stash save -- '$option'"
 msgstr ""
 "erreur: option inconnue pour 'stash save': $option\n"
 "        Pour fournir un message, utilisez git stash save -- '$option'"
 
-#: git-stash.sh:259
+#: git-stash.sh:262
 msgid "No local changes to save"
 msgstr "Pas de modifications locales à sauver"
 
-#: git-stash.sh:263
+#: git-stash.sh:266
 msgid "Cannot initialize stash"
 msgstr "Impossible d'initialiser le remisage"
 
-#: git-stash.sh:267
+#: git-stash.sh:270
 msgid "Cannot save the current status"
 msgstr "Impossible de sauver le statut courant"
 
-#: git-stash.sh:285
+#: git-stash.sh:288
 msgid "Cannot remove worktree changes"
 msgstr "Impossible de supprimer les changements de la copie de travail"
 
-#: git-stash.sh:384
+#: git-stash.sh:389
+#, sh-format
+msgid "unknown option: $opt"
+msgstr "option inconnue : $opt"
+
+#: git-stash.sh:399
 msgid "No stash found."
 msgstr "Pas de remisage trouvé."
 
-#: git-stash.sh:391
+#: git-stash.sh:406
 #, sh-format
 msgid "Too many revisions specified: $REV"
 msgstr "Trop de révisions spécifiées : $REV"
 
-#: git-stash.sh:397
+#: git-stash.sh:412
 #, sh-format
 msgid "$reference is not a valid reference"
 msgstr "$reference n'est pas une référence valide"
 
-#: git-stash.sh:425
+#: git-stash.sh:440
 #, sh-format
 msgid "'$args' is not a stash-like commit"
 msgstr "'$args' n'est pas une validation de type remisage"
 
-#: git-stash.sh:436
+#: git-stash.sh:451
 #, sh-format
 msgid "'$args' is not a stash reference"
 msgstr "'$args' n'est pas une référence de remisage"
 
-#: git-stash.sh:444
+#: git-stash.sh:459
 msgid "unable to refresh index"
 msgstr "impossible de rafraîchir l'index"
 
-#: git-stash.sh:448
+#: git-stash.sh:463
 msgid "Cannot apply a stash in the middle of a merge"
 msgstr "Impossible d'appliquer un remisage en cours de fusion"
 
-#: git-stash.sh:456
+#: git-stash.sh:471
 msgid "Conflicts in index. Try without --index."
 msgstr "Conflits dans l'index. Essayez sans --index."
 
-#: git-stash.sh:458
+#: git-stash.sh:473
 msgid "Could not save index tree"
 msgstr "Impossible de sauvegarder l'arbre d'index"
 
-#: git-stash.sh:492
+#: git-stash.sh:507
 msgid "Cannot unstage modified files"
 msgstr "Impossible de désindexer les fichiers modifiés"
 
-#: git-stash.sh:507
+#: git-stash.sh:522
 msgid "Index was not unstashed."
 msgstr "L'index n'a pas été sorti de remise."
 
-#: git-stash.sh:530
+#: git-stash.sh:545
 #, sh-format
 msgid "Dropped ${REV} ($s)"
 msgstr "${REV} supprimé ($s)"
 
-#: git-stash.sh:531
+#: git-stash.sh:546
 #, sh-format
 msgid "${REV}: Could not drop stash entry"
 msgstr "${REV}: Impossible de supprimer l'élément de stash"
 
-#: git-stash.sh:539
+#: git-stash.sh:554
 msgid "No branch name specified"
 msgstr "Aucune branche spécifiée"
 
-#: git-stash.sh:611
+#: git-stash.sh:626
 msgid "(To restore them type \"git stash apply\")"
 msgstr "(Pour les restaurer tapez \"git stash apply\")"
 
 #: git-submodule.sh:95
 #, sh-format
 msgid "cannot strip one component off url '$remoteurl'"
@@ -11417,12 +11697,36 @@
 
 #: git-submodule.sh:1331
 #, sh-format
 msgid "Synchronizing submodule url for '$displaypath'"
 msgstr "Synchronisation de l'URL sous-module pour '$displaypath'"
 
+#~ msgid "no branch specified"
+#~ msgstr "aucune branche spécifiée"
+
+#~ msgid "check a branch out in a separate working directory"
+#~ msgstr "extraire une branche dans un répertoire de travail séparé"
+
+#~ msgid "prune .git/worktrees"
+#~ msgstr "éliminer .git/worktrees"
+
+#~ msgid "--worktrees does not take extra arguments"
+#~ msgstr "--worktrees n'accepte pas d'argument supplémentaire"
+
+#~ msgid "The most commonly used git commands are:"
+#~ msgstr "Les commandes git les plus utilisées sont :"
+
+#~ msgid "No such branch: '%s'"
+#~ msgstr "Branche inconnue : '%s'"
+
+#~ msgid "Could not create git link %s"
+#~ msgstr "Impossible de créer le lien git %s"
+
+#~ msgid "Invalid gc.pruneexpire: '%s'"
+#~ msgstr "gc.pruneexpire invalide : '%s'"
+
 #~ msgid "server does not support --atomic push"
 #~ msgstr "le serveur ne gère pas push --atomic"
 
 #~ msgid "(detached from %s)"
 #~ msgstr "(détaché de %s)"
 
@@ -11462,15 +11766,12 @@
 #~ msgid "cannot lock HEAD ref"
 #~ msgstr "impossible de verrouiller la référence HEAD"
 
 #~ msgid "cannot update HEAD ref"
 #~ msgstr "impossible de mettre à jour la référence HEAD"
 
-#~ msgid "Invalid %s: '%s'"
-#~ msgstr "%s invalide : '%s'"
-
 #~ msgid "cannot tell cwd"
 #~ msgstr "impossible de déterminer le répertoire de travail courant"
 
 #~ msgid "%s: cannot lock the ref"
 #~ msgstr "%s : impossible de verrouiller la référence"
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/git.pot /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/git.pot
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/git.pot	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/git.pot	2015-07-28 04:34:56.000000000 +0800
@@ -5,13 +5,13 @@
 #
 #, fuzzy
 msgid ""
 msgstr ""
 "Project-Id-Version: PACKAGE VERSION\n"
 "Report-Msgid-Bugs-To: Git Mailing List <git@vger.kernel.org>\n"
-"POT-Creation-Date: 2015-04-03 08:13+0800\n"
+"POT-Creation-Date: 2015-07-14 07:19+0800\n"
 "PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
 "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
 "Language-Team: LANGUAGE <LL@li.org>\n"
 "Language: \n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=CHARSET\n"
@@ -43,13 +43,13 @@
 msgstr ""
 
 #: archive.c:14
 msgid "git archive --remote <repo> [--exec <cmd>] --list"
 msgstr ""
 
-#: archive.c:342 builtin/add.c:137 builtin/add.c:427 builtin/rm.c:328
+#: archive.c:342 builtin/add.c:137 builtin/add.c:428 builtin/rm.c:327
 #, c-format
 msgid "pathspec '%s' did not match any files"
 msgstr ""
 
 #: archive.c:427
 msgid "fmt"
@@ -66,15 +66,15 @@
 #: archive.c:429
 msgid "prepend prefix to each pathname in the archive"
 msgstr ""
 
 #: archive.c:430 builtin/archive.c:88 builtin/blame.c:2516
 #: builtin/blame.c:2517 builtin/config.c:57 builtin/fast-export.c:986
-#: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:101
+#: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:99
 #: builtin/ls-files.c:446 builtin/ls-files.c:449 builtin/notes.c:394
-#: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:151
+#: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:150
 msgid "file"
 msgstr ""
 
 #: archive.c:431 builtin/archive.c:89
 msgid "write the archive to this file"
 msgstr ""
@@ -100,13 +100,13 @@
 msgstr ""
 
 #: archive.c:447
 msgid "list supported archive formats"
 msgstr ""
 
-#: archive.c:449 builtin/archive.c:90 builtin/clone.c:86
+#: archive.c:449 builtin/archive.c:90 builtin/clone.c:77
 msgid "repo"
 msgstr ""
 
 #: archive.c:450 builtin/archive.c:91
 msgid "retrieve the archive from remote repository <repo>"
 msgstr ""
@@ -116,13 +116,13 @@
 msgstr ""
 
 #: archive.c:452 builtin/archive.c:93
 msgid "path to the remote git-upload-archive command"
 msgstr ""
 
-#: attr.c:264
+#: attr.c:265
 msgid ""
 "Negative patterns are ignored in git attributes\n"
 "Use '\\!' for literal leading exclamation."
 msgstr ""
 
 #: branch.c:60
@@ -243,14 +243,14 @@
 
 #: bundle.c:139
 msgid "Repository lacks these prerequisite commits:"
 msgstr ""
 
 #: bundle.c:163 sequencer.c:650 sequencer.c:1105 builtin/blame.c:2705
-#: builtin/branch.c:659 builtin/commit.c:1045 builtin/log.c:330
-#: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:358
+#: builtin/branch.c:651 builtin/commit.c:1045 builtin/log.c:330
+#: builtin/log.c:825 builtin/log.c:1432 builtin/log.c:1666 builtin/merge.c:358
 #: builtin/shortlog.c:158
 msgid "revision walk setup failed"
 msgstr ""
 
 #: bundle.c:185
 #, c-format
@@ -487,33 +487,41 @@
 #, c-format
 msgid ""
 "Found errors in 'diff.dirstat' config variable:\n"
 "%s"
 msgstr ""
 
-#: diff.c:2956
+#: diff.c:2997
 #, c-format
 msgid "external diff died, stopping at %s"
 msgstr ""
 
-#: diff.c:3351
+#: diff.c:3393
 msgid "--follow requires exactly one pathspec"
 msgstr ""
 
-#: diff.c:3514
+#: diff.c:3556
 #, c-format
 msgid ""
 "Failed to parse --dirstat/-X option parameter:\n"
 "%s"
 msgstr ""
 
-#: diff.c:3528
+#: diff.c:3570
 #, c-format
 msgid "Failed to parse --submodule option parameter: '%s'"
 msgstr ""
 
+#: dir.c:1852
+msgid "failed to get kernel name and information"
+msgstr ""
+
+#: dir.c:1945
+msgid "Untracked cache is disabled on this system."
+msgstr ""
+
 #: gpg-interface.c:129 gpg-interface.c:200
 msgid "could not run gpg."
 msgstr ""
 
 #: gpg-interface.c:141
 msgid "gpg did not accept the data"
@@ -554,73 +562,73 @@
 msgstr ""
 
 #: help.c:214
 msgid "git commands available from elsewhere on your $PATH"
 msgstr ""
 
-#: help.c:230
-msgid "The most commonly used git commands are:"
+#: help.c:246
+msgid "These are common Git commands used in various situations:"
 msgstr ""
 
-#: help.c:289
+#: help.c:311
 #, c-format
 msgid ""
 "'%s' appears to be a git command, but we were not\n"
 "able to execute it. Maybe git-%s is broken?"
 msgstr ""
 
-#: help.c:346
+#: help.c:368
 msgid "Uh oh. Your system reports no Git commands at all."
 msgstr ""
 
-#: help.c:368
+#: help.c:390
 #, c-format
 msgid ""
 "WARNING: You called a Git command named '%s', which does not exist.\n"
 "Continuing under the assumption that you meant '%s'"
 msgstr ""
 
-#: help.c:373
+#: help.c:395
 #, c-format
 msgid "in %0.1f seconds automatically..."
 msgstr ""
 
-#: help.c:380
+#: help.c:402
 #, c-format
 msgid "git: '%s' is not a git command. See 'git --help'."
 msgstr ""
 
-#: help.c:384 help.c:444
+#: help.c:406 help.c:466
 msgid ""
 "\n"
 "Did you mean this?"
 msgid_plural ""
 "\n"
 "Did you mean one of these?"
 msgstr[0] ""
 msgstr[1] ""
 
-#: help.c:440
+#: help.c:462
 #, c-format
 msgid "%s: %s - %s"
 msgstr ""
 
-#: lockfile.c:283
+#: lockfile.c:345
 msgid "BUG: reopen a lockfile that is still open"
 msgstr ""
 
-#: lockfile.c:285
+#: lockfile.c:347
 msgid "BUG: reopen a lockfile that has been committed"
 msgstr ""
 
 #: merge.c:41
 msgid "failed to read the cache"
 msgstr ""
 
-#: merge.c:94 builtin/checkout.c:374 builtin/checkout.c:580
-#: builtin/clone.c:662
+#: merge.c:94 builtin/checkout.c:376 builtin/checkout.c:587
+#: builtin/clone.c:647
 msgid "unable to write new index file"
 msgstr ""
 
 #: merge-recursive.c:189
 #, c-format
 msgid "(bad commit)\n"
@@ -632,239 +640,239 @@
 msgstr ""
 
 #: merge-recursive.c:270
 msgid "error building trees"
 msgstr ""
 
-#: merge-recursive.c:688
+#: merge-recursive.c:687
 #, c-format
 msgid "failed to create path '%s'%s"
 msgstr ""
 
-#: merge-recursive.c:699
+#: merge-recursive.c:698
 #, c-format
 msgid "Removing %s to make room for subdirectory\n"
 msgstr ""
 
-#: merge-recursive.c:713 merge-recursive.c:734
+#: merge-recursive.c:712 merge-recursive.c:733
 msgid ": perhaps a D/F conflict?"
 msgstr ""
 
-#: merge-recursive.c:724
+#: merge-recursive.c:723
 #, c-format
 msgid "refusing to lose untracked file at '%s'"
 msgstr ""
 
-#: merge-recursive.c:764
+#: merge-recursive.c:763
 #, c-format
 msgid "cannot read object %s '%s'"
 msgstr ""
 
-#: merge-recursive.c:766
+#: merge-recursive.c:765
 #, c-format
 msgid "blob expected for %s '%s'"
 msgstr ""
 
-#: merge-recursive.c:789 builtin/clone.c:321
+#: merge-recursive.c:788 builtin/clone.c:306
 #, c-format
 msgid "failed to open '%s'"
 msgstr ""
 
-#: merge-recursive.c:797
+#: merge-recursive.c:796
 #, c-format
 msgid "failed to symlink '%s'"
 msgstr ""
 
-#: merge-recursive.c:800
+#: merge-recursive.c:799
 #, c-format
 msgid "do not know what to do with %06o %s '%s'"
 msgstr ""
 
-#: merge-recursive.c:938
+#: merge-recursive.c:937
 msgid "Failed to execute internal merge"
 msgstr ""
 
-#: merge-recursive.c:942
+#: merge-recursive.c:941
 #, c-format
 msgid "Unable to add %s to database"
 msgstr ""
 
-#: merge-recursive.c:958
+#: merge-recursive.c:957
 msgid "unsupported object type in the tree"
 msgstr ""
 
-#: merge-recursive.c:1033 merge-recursive.c:1047
+#: merge-recursive.c:1032 merge-recursive.c:1046
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree."
 msgstr ""
 
-#: merge-recursive.c:1039 merge-recursive.c:1052
+#: merge-recursive.c:1038 merge-recursive.c:1051
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree at %s."
 msgstr ""
 
-#: merge-recursive.c:1093
+#: merge-recursive.c:1092
 msgid "rename"
 msgstr ""
 
-#: merge-recursive.c:1093
+#: merge-recursive.c:1092
 msgid "renamed"
 msgstr ""
 
-#: merge-recursive.c:1149
+#: merge-recursive.c:1148
 #, c-format
 msgid "%s is a directory in %s adding as %s instead"
 msgstr ""
 
-#: merge-recursive.c:1171
+#: merge-recursive.c:1170
 #, c-format
 msgid ""
 "CONFLICT (rename/rename): Rename \"%s\"->\"%s\" in branch \"%s\" rename \"%s"
 "\"->\"%s\" in \"%s\"%s"
 msgstr ""
 
-#: merge-recursive.c:1176
+#: merge-recursive.c:1175
 msgid " (left unresolved)"
 msgstr ""
 
-#: merge-recursive.c:1230
+#: merge-recursive.c:1229
 #, c-format
 msgid "CONFLICT (rename/rename): Rename %s->%s in %s. Rename %s->%s in %s"
 msgstr ""
 
-#: merge-recursive.c:1260
+#: merge-recursive.c:1259
 #, c-format
 msgid "Renaming %s to %s and %s to %s instead"
 msgstr ""
 
-#: merge-recursive.c:1459
+#: merge-recursive.c:1458
 #, c-format
 msgid "CONFLICT (rename/add): Rename %s->%s in %s. %s added in %s"
 msgstr ""
 
-#: merge-recursive.c:1469
+#: merge-recursive.c:1468
 #, c-format
 msgid "Adding merged %s"
 msgstr ""
 
-#: merge-recursive.c:1474 merge-recursive.c:1672
+#: merge-recursive.c:1473 merge-recursive.c:1671
 #, c-format
 msgid "Adding as %s instead"
 msgstr ""
 
-#: merge-recursive.c:1525
+#: merge-recursive.c:1524
 #, c-format
 msgid "cannot read object %s"
 msgstr ""
 
-#: merge-recursive.c:1528
+#: merge-recursive.c:1527
 #, c-format
 msgid "object %s is not a blob"
 msgstr ""
 
-#: merge-recursive.c:1576
+#: merge-recursive.c:1575
 msgid "modify"
 msgstr ""
 
-#: merge-recursive.c:1576
+#: merge-recursive.c:1575
 msgid "modified"
 msgstr ""
 
-#: merge-recursive.c:1586
+#: merge-recursive.c:1585
 msgid "content"
 msgstr ""
 
-#: merge-recursive.c:1593
+#: merge-recursive.c:1592
 msgid "add/add"
 msgstr ""
 
-#: merge-recursive.c:1627
+#: merge-recursive.c:1626
 #, c-format
 msgid "Skipped %s (merged same as existing)"
 msgstr ""
 
-#: merge-recursive.c:1641
+#: merge-recursive.c:1640
 #, c-format
 msgid "Auto-merging %s"
 msgstr ""
 
-#: merge-recursive.c:1645 git-submodule.sh:1150
+#: merge-recursive.c:1644 git-submodule.sh:1150
 msgid "submodule"
 msgstr ""
 
-#: merge-recursive.c:1646
+#: merge-recursive.c:1645
 #, c-format
 msgid "CONFLICT (%s): Merge conflict in %s"
 msgstr ""
 
-#: merge-recursive.c:1732
+#: merge-recursive.c:1731
 #, c-format
 msgid "Removing %s"
 msgstr ""
 
-#: merge-recursive.c:1757
+#: merge-recursive.c:1756
 msgid "file/directory"
 msgstr ""
 
-#: merge-recursive.c:1763
+#: merge-recursive.c:1762
 msgid "directory/file"
 msgstr ""
 
-#: merge-recursive.c:1768
+#: merge-recursive.c:1767
 #, c-format
 msgid "CONFLICT (%s): There is a directory with name %s in %s. Adding %s as %s"
 msgstr ""
 
-#: merge-recursive.c:1778
+#: merge-recursive.c:1777
 #, c-format
 msgid "Adding %s"
 msgstr ""
 
-#: merge-recursive.c:1795
+#: merge-recursive.c:1794
 msgid "Fatal merge failure, shouldn't happen."
 msgstr ""
 
-#: merge-recursive.c:1814
+#: merge-recursive.c:1813
 msgid "Already up-to-date!"
 msgstr ""
 
-#: merge-recursive.c:1823
+#: merge-recursive.c:1822
 #, c-format
 msgid "merging of trees %s and %s failed"
 msgstr ""
 
-#: merge-recursive.c:1853
+#: merge-recursive.c:1852
 #, c-format
 msgid "Unprocessed path??? %s"
 msgstr ""
 
-#: merge-recursive.c:1901
+#: merge-recursive.c:1900
 msgid "Merging:"
 msgstr ""
 
-#: merge-recursive.c:1914
+#: merge-recursive.c:1913
 #, c-format
 msgid "found %u common ancestor:"
 msgid_plural "found %u common ancestors:"
 msgstr[0] ""
 msgstr[1] ""
 
-#: merge-recursive.c:1951
+#: merge-recursive.c:1950
 msgid "merge returned no commit"
 msgstr ""
 
-#: merge-recursive.c:2008
+#: merge-recursive.c:2007
 #, c-format
 msgid "Could not parse object '%s'"
 msgstr ""
 
-#: merge-recursive.c:2019 builtin/merge.c:667
+#: merge-recursive.c:2018 builtin/merge.c:645
 msgid "Unable to write index."
 msgstr ""
 
 #: notes-utils.c:41
 msgid "Cannot commit uninitialized/unreferenced notes tree"
 msgstr ""
@@ -883,13 +891,13 @@
 #. environment variable, the second %s is its value
 #: notes-utils.c:119
 #, c-format
 msgid "Bad %s value: '%s'"
 msgstr ""
 
-#: object.c:241
+#: object.c:242
 #, c-format
 msgid "unable to parse object: %s"
 msgstr ""
 
 #: parse-options.c:546
 msgid "..."
@@ -977,102 +985,144 @@
 msgstr ""
 
 #: pretty.c:968
 msgid "unable to parse --pretty format"
 msgstr ""
 
-#: progress.c:225
+#: progress.c:236
 msgid "done"
 msgstr ""
 
-#: read-cache.c:1275
+#: read-cache.c:1295
 #, c-format
 msgid ""
 "index.version set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 
-#: read-cache.c:1285
+#: read-cache.c:1305
 #, c-format
 msgid ""
 "GIT_INDEX_VERSION set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 
-#: remote.c:782
+#: remote.c:792
 #, c-format
 msgid "Cannot fetch both %s and %s to %s"
 msgstr ""
 
-#: remote.c:786
+#: remote.c:796
 #, c-format
 msgid "%s usually tracks %s, not %s"
 msgstr ""
 
-#: remote.c:790
+#: remote.c:800
 #, c-format
 msgid "%s tracks both %s and %s"
 msgstr ""
 
-#: remote.c:798
+#: remote.c:808
 msgid "Internal error"
 msgstr ""
 
-#: remote.c:1980
+#: remote.c:1723 remote.c:1766
+msgid "HEAD does not point to a branch"
+msgstr ""
+
+#: remote.c:1732
+#, c-format
+msgid "no such branch: '%s'"
+msgstr ""
+
+#: remote.c:1735
+#, c-format
+msgid "no upstream configured for branch '%s'"
+msgstr ""
+
+#: remote.c:1741
+#, c-format
+msgid "upstream branch '%s' not stored as a remote-tracking branch"
+msgstr ""
+
+#: remote.c:1756
+#, c-format
+msgid "push destination '%s' on remote '%s' has no local tracking branch"
+msgstr ""
+
+#: remote.c:1771
+#, c-format
+msgid "branch '%s' has no remote for pushing"
+msgstr ""
+
+#: remote.c:1782
+#, c-format
+msgid "push refspecs for '%s' do not include '%s'"
+msgstr ""
+
+#: remote.c:1795
+msgid "push has no destination (push.default is 'nothing')"
+msgstr ""
+
+#: remote.c:1817
+msgid "cannot resolve 'simple' push to a single destination"
+msgstr ""
+
+#: remote.c:2124
 #, c-format
 msgid "Your branch is based on '%s', but the upstream is gone.\n"
 msgstr ""
 
-#: remote.c:1984
+#: remote.c:2128
 msgid "  (use \"git branch --unset-upstream\" to fixup)\n"
 msgstr ""
 
-#: remote.c:1987
+#: remote.c:2131
 #, c-format
 msgid "Your branch is up-to-date with '%s'.\n"
 msgstr ""
 
-#: remote.c:1991
+#: remote.c:2135
 #, c-format
 msgid "Your branch is ahead of '%s' by %d commit.\n"
 msgid_plural "Your branch is ahead of '%s' by %d commits.\n"
 msgstr[0] ""
 msgstr[1] ""
 
-#: remote.c:1997
+#: remote.c:2141
 msgid "  (use \"git push\" to publish your local commits)\n"
 msgstr ""
 
-#: remote.c:2000
+#: remote.c:2144
 #, c-format
 msgid "Your branch is behind '%s' by %d commit, and can be fast-forwarded.\n"
 msgid_plural ""
 "Your branch is behind '%s' by %d commits, and can be fast-forwarded.\n"
 msgstr[0] ""
 msgstr[1] ""
 
-#: remote.c:2008
+#: remote.c:2152
 msgid "  (use \"git pull\" to update your local branch)\n"
 msgstr ""
 
-#: remote.c:2011
+#: remote.c:2155
 #, c-format
 msgid ""
 "Your branch and '%s' have diverged,\n"
 "and have %d and %d different commit each, respectively.\n"
 msgid_plural ""
 "Your branch and '%s' have diverged,\n"
 "and have %d and %d different commits each, respectively.\n"
 msgstr[0] ""
 msgstr[1] ""
 
-#: remote.c:2021
+#: remote.c:2165
 msgid "  (use \"git pull\" to merge the remote branch into yours)\n"
 msgstr ""
 
-#: revision.c:2348
+#: revision.c:2366
 msgid "--first-parent is incompatible with --bisect"
 msgstr ""
 
 #: run-command.c:83
 msgid "open /dev/null failed"
 msgstr ""
@@ -1083,28 +1133,28 @@
 msgstr ""
 
 #: send-pack.c:272
 msgid "failed to sign the push certificate"
 msgstr ""
 
-#: send-pack.c:356
+#: send-pack.c:378
 msgid "the receiving end does not support --signed push"
 msgstr ""
 
-#: send-pack.c:366
+#: send-pack.c:389
 msgid "the receiving end does not support --atomic push"
 msgstr ""
 
-#: sequencer.c:172 builtin/merge.c:782 builtin/merge.c:893 builtin/merge.c:995
-#: builtin/merge.c:1005
+#: sequencer.c:172 builtin/merge.c:760 builtin/merge.c:871 builtin/merge.c:973
+#: builtin/merge.c:983
 #, c-format
 msgid "Could not open '%s' for writing"
 msgstr ""
 
-#: sequencer.c:174 builtin/merge.c:344 builtin/merge.c:785 builtin/merge.c:997
-#: builtin/merge.c:1010
+#: sequencer.c:174 builtin/merge.c:344 builtin/merge.c:763 builtin/merge.c:975
+#: builtin/merge.c:988
 #, c-format
 msgid "Could not write to '%s'"
 msgstr ""
 
 #: sequencer.c:195
 msgid ""
@@ -1291,13 +1341,13 @@
 msgstr ""
 
 #: sequencer.c:886
 msgid "cannot abort from a branch yet to be born"
 msgstr ""
 
-#: sequencer.c:908 builtin/apply.c:4288
+#: sequencer.c:908 builtin/apply.c:4291
 #, c-format
 msgid "cannot open %s: %s"
 msgstr ""
 
 #: sequencer.c:911
 #, c-format
@@ -1333,44 +1383,30 @@
 msgstr ""
 
 #: sequencer.c:1124
 msgid "Can't cherry-pick into empty head"
 msgstr ""
 
-#: sha1_name.c:440
+#: setup.c:243
+#, c-format
+msgid "failed to read %s"
+msgstr ""
+
+#: sha1_name.c:453
 msgid ""
 "Git normally never creates a ref that ends with 40 hex characters\n"
 "because it will be ignored when you just specify 40-hex. These refs\n"
 "may be created by mistake. For example,\n"
 "\n"
 "  git checkout -b $br $(git rev-parse ...)\n"
 "\n"
 "where \"$br\" is somehow empty and a 40-hex ref is created. Please\n"
 "examine these refs and maybe delete them. Turn this message off by\n"
 "running \"git config advice.objectNameWarning false\""
 msgstr ""
 
-#: sha1_name.c:1068
-msgid "HEAD does not point to a branch"
-msgstr ""
-
-#: sha1_name.c:1071
-#, c-format
-msgid "No such branch: '%s'"
-msgstr ""
-
-#: sha1_name.c:1073
-#, c-format
-msgid "No upstream configured for branch '%s'"
-msgstr ""
-
-#: sha1_name.c:1077
-#, c-format
-msgid "Upstream branch '%s' not stored as a remote-tracking branch"
-msgstr ""
-
 #: submodule.c:64 submodule.c:98
 msgid "Cannot change unmerged .gitmodules, resolve merge conflicts first"
 msgstr ""
 
 #: submodule.c:68 submodule.c:102
 #, c-format
@@ -1388,18 +1424,13 @@
 msgstr ""
 
 #: submodule.c:120
 msgid "staging updated .gitmodules failed"
 msgstr ""
 
-#: submodule.c:1109 builtin/init-db.c:371
-#, c-format
-msgid "Could not create git link %s"
-msgstr ""
-
-#: submodule.c:1120
+#: submodule.c:1115
 #, c-format
 msgid "Could not set core.worktree in %s"
 msgstr ""
 
 #: trailer.c:491 trailer.c:495 trailer.c:499 trailer.c:553 trailer.c:557
 #: trailer.c:561
@@ -1423,13 +1454,13 @@
 msgstr ""
 
 #: trailer.c:704
 msgid "could not read from stdin"
 msgstr ""
 
-#: unpack-trees.c:202
+#: unpack-trees.c:203
 msgid "Checking out files"
 msgstr ""
 
 #: urlmatch.c:120
 msgid "invalid URL scheme name or missing '://' suffix"
 msgstr ""
@@ -1479,12 +1510,27 @@
 msgstr ""
 
 #: wrapper.c:564
 msgid "unable to get current working directory"
 msgstr ""
 
+#: wrapper.c:575
+#, c-format
+msgid "could not open %s for writing"
+msgstr ""
+
+#: wrapper.c:587
+#, c-format
+msgid "could not write to %s"
+msgstr ""
+
+#: wrapper.c:593
+#, c-format
+msgid "could not close %s"
+msgstr ""
+
 #: wt-status.c:150
 msgid "Unmerged paths:"
 msgstr ""
 
 #: wt-status.c:177 wt-status.c:204
 #, c-format
@@ -1504,17 +1550,17 @@
 msgstr ""
 
 #: wt-status.c:187
 msgid "  (use \"git rm <file>...\" to mark resolution)"
 msgstr ""
 
-#: wt-status.c:198 wt-status.c:878
+#: wt-status.c:198 wt-status.c:881
 msgid "Changes to be committed:"
 msgstr ""
 
-#: wt-status.c:216 wt-status.c:887
+#: wt-status.c:216 wt-status.c:890
 msgid "Changes not staged for commit:"
 msgstr ""
 
 #: wt-status.c:220
 msgid "  (use \"git add <file>...\" to update what will be committed)"
 msgstr ""
@@ -1616,278 +1662,278 @@
 
 #: wt-status.c:391
 #, c-format
 msgid "bug: unhandled diff status %c"
 msgstr ""
 
-#: wt-status.c:753
+#: wt-status.c:755
 msgid "Submodules changed but not updated:"
 msgstr ""
 
-#: wt-status.c:755
+#: wt-status.c:757
 msgid "Submodule changes to be committed:"
 msgstr ""
 
-#: wt-status.c:835
+#: wt-status.c:838
 msgid ""
 "Do not touch the line above.\n"
 "Everything below will be removed."
 msgstr ""
 
-#: wt-status.c:946
+#: wt-status.c:949
 msgid "You have unmerged paths."
 msgstr ""
 
-#: wt-status.c:949
+#: wt-status.c:952
 msgid "  (fix conflicts and run \"git commit\")"
 msgstr ""
 
-#: wt-status.c:952
+#: wt-status.c:955
 msgid "All conflicts fixed but you are still merging."
 msgstr ""
 
-#: wt-status.c:955
+#: wt-status.c:958
 msgid "  (use \"git commit\" to conclude merge)"
 msgstr ""
 
-#: wt-status.c:965
+#: wt-status.c:968
 msgid "You are in the middle of an am session."
 msgstr ""
 
-#: wt-status.c:968
+#: wt-status.c:971
 msgid "The current patch is empty."
 msgstr ""
 
-#: wt-status.c:972
+#: wt-status.c:975
 msgid "  (fix conflicts and then run \"git am --continue\")"
 msgstr ""
 
-#: wt-status.c:974
+#: wt-status.c:977
 msgid "  (use \"git am --skip\" to skip this patch)"
 msgstr ""
 
-#: wt-status.c:976
+#: wt-status.c:979
 msgid "  (use \"git am --abort\" to restore the original branch)"
 msgstr ""
 
-#: wt-status.c:1036 wt-status.c:1053
+#: wt-status.c:1039 wt-status.c:1056
 #, c-format
 msgid "You are currently rebasing branch '%s' on '%s'."
 msgstr ""
 
-#: wt-status.c:1041 wt-status.c:1058
+#: wt-status.c:1044 wt-status.c:1061
 msgid "You are currently rebasing."
 msgstr ""
 
-#: wt-status.c:1044
+#: wt-status.c:1047
 msgid "  (fix conflicts and then run \"git rebase --continue\")"
 msgstr ""
 
-#: wt-status.c:1046
+#: wt-status.c:1049
 msgid "  (use \"git rebase --skip\" to skip this patch)"
 msgstr ""
 
-#: wt-status.c:1048
+#: wt-status.c:1051
 msgid "  (use \"git rebase --abort\" to check out the original branch)"
 msgstr ""
 
-#: wt-status.c:1061
+#: wt-status.c:1064
 msgid "  (all conflicts fixed: run \"git rebase --continue\")"
 msgstr ""
 
-#: wt-status.c:1065
+#: wt-status.c:1068
 #, c-format
 msgid ""
 "You are currently splitting a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 
-#: wt-status.c:1070
+#: wt-status.c:1073
 msgid "You are currently splitting a commit during a rebase."
 msgstr ""
 
-#: wt-status.c:1073
+#: wt-status.c:1076
 msgid "  (Once your working directory is clean, run \"git rebase --continue\")"
 msgstr ""
 
-#: wt-status.c:1077
+#: wt-status.c:1080
 #, c-format
 msgid "You are currently editing a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 
-#: wt-status.c:1082
+#: wt-status.c:1085
 msgid "You are currently editing a commit during a rebase."
 msgstr ""
 
-#: wt-status.c:1085
+#: wt-status.c:1088
 msgid "  (use \"git commit --amend\" to amend the current commit)"
 msgstr ""
 
-#: wt-status.c:1087
+#: wt-status.c:1090
 msgid ""
 "  (use \"git rebase --continue\" once you are satisfied with your changes)"
 msgstr ""
 
-#: wt-status.c:1097
+#: wt-status.c:1100
 #, c-format
 msgid "You are currently cherry-picking commit %s."
 msgstr ""
 
-#: wt-status.c:1102
+#: wt-status.c:1105
 msgid "  (fix conflicts and run \"git cherry-pick --continue\")"
 msgstr ""
 
-#: wt-status.c:1105
+#: wt-status.c:1108
 msgid "  (all conflicts fixed: run \"git cherry-pick --continue\")"
 msgstr ""
 
-#: wt-status.c:1107
+#: wt-status.c:1110
 msgid "  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)"
 msgstr ""
 
-#: wt-status.c:1116
+#: wt-status.c:1119
 #, c-format
 msgid "You are currently reverting commit %s."
 msgstr ""
 
-#: wt-status.c:1121
+#: wt-status.c:1124
 msgid "  (fix conflicts and run \"git revert --continue\")"
 msgstr ""
 
-#: wt-status.c:1124
+#: wt-status.c:1127
 msgid "  (all conflicts fixed: run \"git revert --continue\")"
 msgstr ""
 
-#: wt-status.c:1126
+#: wt-status.c:1129
 msgid "  (use \"git revert --abort\" to cancel the revert operation)"
 msgstr ""
 
-#: wt-status.c:1137
+#: wt-status.c:1140
 #, c-format
 msgid "You are currently bisecting, started from branch '%s'."
 msgstr ""
 
-#: wt-status.c:1141
+#: wt-status.c:1144
 msgid "You are currently bisecting."
 msgstr ""
 
-#: wt-status.c:1144
+#: wt-status.c:1147
 msgid "  (use \"git bisect reset\" to get back to the original branch)"
 msgstr ""
 
-#: wt-status.c:1321
+#: wt-status.c:1324
 msgid "On branch "
 msgstr ""
 
-#: wt-status.c:1328
+#: wt-status.c:1331
 msgid "rebase in progress; onto "
 msgstr ""
 
-#: wt-status.c:1333
+#: wt-status.c:1336
 msgid "HEAD detached at "
 msgstr ""
 
-#: wt-status.c:1335
+#: wt-status.c:1338
 msgid "HEAD detached from "
 msgstr ""
 
-#: wt-status.c:1338
+#: wt-status.c:1341
 msgid "Not currently on any branch."
 msgstr ""
 
-#: wt-status.c:1355
+#: wt-status.c:1358
 msgid "Initial commit"
 msgstr ""
 
-#: wt-status.c:1369
+#: wt-status.c:1372
 msgid "Untracked files"
 msgstr ""
 
-#: wt-status.c:1371
+#: wt-status.c:1374
 msgid "Ignored files"
 msgstr ""
 
-#: wt-status.c:1375
+#: wt-status.c:1378
 #, c-format
 msgid ""
 "It took %.2f seconds to enumerate untracked files. 'status -uno'\n"
 "may speed it up, but you have to be careful not to forget to add\n"
 "new files yourself (see 'git help status')."
 msgstr ""
 
-#: wt-status.c:1381
+#: wt-status.c:1384
 #, c-format
 msgid "Untracked files not listed%s"
 msgstr ""
 
-#: wt-status.c:1383
+#: wt-status.c:1386
 msgid " (use -u option to show untracked files)"
 msgstr ""
 
-#: wt-status.c:1389
+#: wt-status.c:1392
 msgid "No changes"
 msgstr ""
 
-#: wt-status.c:1394
+#: wt-status.c:1397
 #, c-format
 msgid "no changes added to commit (use \"git add\" and/or \"git commit -a\")\n"
 msgstr ""
 
-#: wt-status.c:1397
+#: wt-status.c:1400
 #, c-format
 msgid "no changes added to commit\n"
 msgstr ""
 
-#: wt-status.c:1400
+#: wt-status.c:1403
 #, c-format
 msgid ""
 "nothing added to commit but untracked files present (use \"git add\" to "
 "track)\n"
 msgstr ""
 
-#: wt-status.c:1403
+#: wt-status.c:1406
 #, c-format
 msgid "nothing added to commit but untracked files present\n"
 msgstr ""
 
-#: wt-status.c:1406
+#: wt-status.c:1409
 #, c-format
 msgid "nothing to commit (create/copy files and use \"git add\" to track)\n"
 msgstr ""
 
-#: wt-status.c:1409 wt-status.c:1414
+#: wt-status.c:1412 wt-status.c:1417
 #, c-format
 msgid "nothing to commit\n"
 msgstr ""
 
-#: wt-status.c:1412
+#: wt-status.c:1415
 #, c-format
 msgid "nothing to commit (use -u to show untracked files)\n"
 msgstr ""
 
-#: wt-status.c:1416
+#: wt-status.c:1419
 #, c-format
 msgid "nothing to commit, working directory clean\n"
 msgstr ""
 
-#: wt-status.c:1525
+#: wt-status.c:1528
 msgid "HEAD (no branch)"
 msgstr ""
 
-#: wt-status.c:1531
+#: wt-status.c:1534
 msgid "Initial commit on "
 msgstr ""
 
-#: wt-status.c:1563
+#: wt-status.c:1561
 msgid "gone"
 msgstr ""
 
-#: wt-status.c:1565 wt-status.c:1573
+#: wt-status.c:1563 wt-status.c:1571
 msgid "behind "
 msgstr ""
 
-#: compat/precompose_utf8.c:55 builtin/clone.c:360
+#: compat/precompose_utf8.c:55 builtin/clone.c:345
 #, c-format
 msgid "failed to unlink '%s'"
 msgstr ""
 
 #: builtin/add.c:22
 msgid "git add [<options>] [--] <pathspec>..."
@@ -1908,132 +1954,136 @@
 msgstr ""
 
 #: builtin/add.c:134
 msgid "Unstaged changes after refreshing the index:"
 msgstr ""
 
-#: builtin/add.c:194 builtin/rev-parse.c:785
+#: builtin/add.c:194 builtin/rev-parse.c:796
 msgid "Could not read the index"
 msgstr ""
 
 #: builtin/add.c:205
 #, c-format
 msgid "Could not open '%s' for writing."
 msgstr ""
 
 #: builtin/add.c:209
 msgid "Could not write patch"
 msgstr ""
 
-#: builtin/add.c:214
+#: builtin/add.c:212
+msgid "editing patch failed"
+msgstr ""
+
+#: builtin/add.c:215
 #, c-format
 msgid "Could not stat '%s'"
 msgstr ""
 
-#: builtin/add.c:216
+#: builtin/add.c:217
 msgid "Empty patch. Aborted."
 msgstr ""
 
-#: builtin/add.c:221
+#: builtin/add.c:222
 #, c-format
 msgid "Could not apply '%s'"
 msgstr ""
 
-#: builtin/add.c:231
+#: builtin/add.c:232
 msgid "The following paths are ignored by one of your .gitignore files:\n"
 msgstr ""
 
-#: builtin/add.c:248 builtin/clean.c:876 builtin/fetch.c:107 builtin/mv.c:110
-#: builtin/prune-packed.c:55 builtin/push.c:508 builtin/remote.c:1372
-#: builtin/rm.c:269
+#: builtin/add.c:249 builtin/clean.c:874 builtin/fetch.c:107 builtin/mv.c:110
+#: builtin/prune-packed.c:55 builtin/push.c:508 builtin/remote.c:1369
+#: builtin/rm.c:268
 msgid "dry run"
 msgstr ""
 
-#: builtin/add.c:249 builtin/apply.c:4577 builtin/check-ignore.c:19
-#: builtin/commit.c:1322 builtin/count-objects.c:63 builtin/fsck.c:608
+#: builtin/add.c:250 builtin/apply.c:4580 builtin/check-ignore.c:19
+#: builtin/commit.c:1322 builtin/count-objects.c:63 builtin/fsck.c:616
 #: builtin/log.c:1617 builtin/mv.c:109 builtin/read-tree.c:114
 msgid "be verbose"
 msgstr ""
 
-#: builtin/add.c:251
+#: builtin/add.c:252
 msgid "interactive picking"
 msgstr ""
 
-#: builtin/add.c:252 builtin/checkout.c:1126 builtin/reset.c:286
+#: builtin/add.c:253 builtin/checkout.c:1221 builtin/reset.c:286
 msgid "select hunks interactively"
 msgstr ""
 
-#: builtin/add.c:253
+#: builtin/add.c:254
 msgid "edit current diff and apply"
 msgstr ""
 
-#: builtin/add.c:254
+#: builtin/add.c:255
 msgid "allow adding otherwise ignored files"
 msgstr ""
 
-#: builtin/add.c:255
+#: builtin/add.c:256
 msgid "update tracked files"
 msgstr ""
 
-#: builtin/add.c:256
+#: builtin/add.c:257
 msgid "record only the fact that the path will be added later"
 msgstr ""
 
-#: builtin/add.c:257
+#: builtin/add.c:258
 msgid "add changes from all tracked and untracked files"
 msgstr ""
 
-#: builtin/add.c:260
+#: builtin/add.c:261
 msgid "ignore paths removed in the working tree (same as --no-all)"
 msgstr ""
 
-#: builtin/add.c:262
+#: builtin/add.c:263
 msgid "don't add, only refresh the index"
 msgstr ""
 
-#: builtin/add.c:263
+#: builtin/add.c:264
 msgid "just skip files which cannot be added because of errors"
 msgstr ""
 
-#: builtin/add.c:264
+#: builtin/add.c:265
 msgid "check if - even missing - files are ignored in dry run"
 msgstr ""
 
-#: builtin/add.c:286
+#: builtin/add.c:287
 #, c-format
 msgid "Use -f if you really want to add them.\n"
 msgstr ""
 
-#: builtin/add.c:293
+#: builtin/add.c:294
 msgid "adding files failed"
 msgstr ""
 
-#: builtin/add.c:329
+#: builtin/add.c:330
 msgid "-A and -u are mutually incompatible"
 msgstr ""
 
-#: builtin/add.c:336
+#: builtin/add.c:337
 msgid "Option --ignore-missing can only be used together with --dry-run"
 msgstr ""
 
-#: builtin/add.c:357
+#: builtin/add.c:358
 #, c-format
 msgid "Nothing specified, nothing added.\n"
 msgstr ""
 
-#: builtin/add.c:358
+#: builtin/add.c:359
 #, c-format
 msgid "Maybe you wanted to say 'git add .'?\n"
 msgstr ""
 
-#: builtin/add.c:363 builtin/check-ignore.c:172 builtin/clean.c:920
-#: builtin/commit.c:335 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:299
+#: builtin/add.c:364 builtin/check-ignore.c:172 builtin/clean.c:918
+#: builtin/commit.c:335 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:298
 msgid "index file corrupt"
 msgstr ""
 
-#: builtin/add.c:446 builtin/apply.c:4675 builtin/mv.c:279 builtin/rm.c:431
+#: builtin/add.c:447 builtin/apply.c:4678 builtin/mv.c:279 builtin/rm.c:430
 msgid "Unable to write new index file"
 msgstr ""
 
 #: builtin/apply.c:59
 msgid "git apply [<options>] [<patch>...]"
 msgstr ""
@@ -2101,419 +2151,419 @@
 msgid_plural ""
 "git diff header lacks filename information when removing %d leading pathname "
 "components (line %d)"
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/apply.c:1656
+#: builtin/apply.c:1659
 msgid "new file depends on old contents"
 msgstr ""
 
-#: builtin/apply.c:1658
+#: builtin/apply.c:1661
 msgid "deleted file still has contents"
 msgstr ""
 
-#: builtin/apply.c:1684
+#: builtin/apply.c:1687
 #, c-format
 msgid "corrupt patch at line %d"
 msgstr ""
 
-#: builtin/apply.c:1720
+#: builtin/apply.c:1723
 #, c-format
 msgid "new file %s depends on old contents"
 msgstr ""
 
-#: builtin/apply.c:1722
+#: builtin/apply.c:1725
 #, c-format
 msgid "deleted file %s still has contents"
 msgstr ""
 
-#: builtin/apply.c:1725
+#: builtin/apply.c:1728
 #, c-format
 msgid "** warning: file %s becomes empty but is not deleted"
 msgstr ""
 
-#: builtin/apply.c:1871
+#: builtin/apply.c:1874
 #, c-format
 msgid "corrupt binary patch at line %d: %.*s"
 msgstr ""
 
-#: builtin/apply.c:1900
+#: builtin/apply.c:1903
 #, c-format
 msgid "unrecognized binary patch at line %d"
 msgstr ""
 
-#: builtin/apply.c:2051
+#: builtin/apply.c:2054
 #, c-format
 msgid "patch with only garbage at line %d"
 msgstr ""
 
-#: builtin/apply.c:2141
+#: builtin/apply.c:2144
 #, c-format
 msgid "unable to read symlink %s"
 msgstr ""
 
-#: builtin/apply.c:2145
+#: builtin/apply.c:2148
 #, c-format
 msgid "unable to open or read %s"
 msgstr ""
 
-#: builtin/apply.c:2778
+#: builtin/apply.c:2781
 #, c-format
 msgid "invalid start of line: '%c'"
 msgstr ""
 
-#: builtin/apply.c:2897
+#: builtin/apply.c:2900
 #, c-format
 msgid "Hunk #%d succeeded at %d (offset %d line)."
 msgid_plural "Hunk #%d succeeded at %d (offset %d lines)."
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/apply.c:2909
+#: builtin/apply.c:2912
 #, c-format
 msgid "Context reduced to (%ld/%ld) to apply fragment at %d"
 msgstr ""
 
-#: builtin/apply.c:2915
+#: builtin/apply.c:2918
 #, c-format
 msgid ""
 "while searching for:\n"
 "%.*s"
 msgstr ""
 
-#: builtin/apply.c:2935
+#: builtin/apply.c:2938
 #, c-format
 msgid "missing binary patch data for '%s'"
 msgstr ""
 
-#: builtin/apply.c:3036
+#: builtin/apply.c:3039
 #, c-format
 msgid "binary patch does not apply to '%s'"
 msgstr ""
 
-#: builtin/apply.c:3042
+#: builtin/apply.c:3045
 #, c-format
 msgid "binary patch to '%s' creates incorrect result (expecting %s, got %s)"
 msgstr ""
 
-#: builtin/apply.c:3063
+#: builtin/apply.c:3066
 #, c-format
 msgid "patch failed: %s:%ld"
 msgstr ""
 
-#: builtin/apply.c:3187
+#: builtin/apply.c:3190
 #, c-format
 msgid "cannot checkout %s"
 msgstr ""
 
-#: builtin/apply.c:3232 builtin/apply.c:3243 builtin/apply.c:3288
+#: builtin/apply.c:3235 builtin/apply.c:3246 builtin/apply.c:3291
 #, c-format
 msgid "read of %s failed"
 msgstr ""
 
-#: builtin/apply.c:3240
+#: builtin/apply.c:3243
 #, c-format
 msgid "reading from '%s' beyond a symbolic link"
 msgstr ""
 
-#: builtin/apply.c:3268 builtin/apply.c:3490
+#: builtin/apply.c:3271 builtin/apply.c:3493
 #, c-format
 msgid "path %s has been renamed/deleted"
 msgstr ""
 
-#: builtin/apply.c:3349 builtin/apply.c:3504
+#: builtin/apply.c:3352 builtin/apply.c:3507
 #, c-format
 msgid "%s: does not exist in index"
 msgstr ""
 
-#: builtin/apply.c:3353 builtin/apply.c:3496 builtin/apply.c:3518
+#: builtin/apply.c:3356 builtin/apply.c:3499 builtin/apply.c:3521
 #, c-format
 msgid "%s: %s"
 msgstr ""
 
-#: builtin/apply.c:3358 builtin/apply.c:3512
+#: builtin/apply.c:3361 builtin/apply.c:3515
 #, c-format
 msgid "%s: does not match index"
 msgstr ""
 
-#: builtin/apply.c:3460
+#: builtin/apply.c:3463
 msgid "removal patch leaves file contents"
 msgstr ""
 
-#: builtin/apply.c:3529
+#: builtin/apply.c:3532
 #, c-format
 msgid "%s: wrong type"
 msgstr ""
 
-#: builtin/apply.c:3531
+#: builtin/apply.c:3534
 #, c-format
 msgid "%s has type %o, expected %o"
 msgstr ""
 
-#: builtin/apply.c:3690 builtin/apply.c:3692
+#: builtin/apply.c:3693 builtin/apply.c:3695
 #, c-format
 msgid "invalid path '%s'"
 msgstr ""
 
-#: builtin/apply.c:3747
+#: builtin/apply.c:3750
 #, c-format
 msgid "%s: already exists in index"
 msgstr ""
 
-#: builtin/apply.c:3750
+#: builtin/apply.c:3753
 #, c-format
 msgid "%s: already exists in working directory"
 msgstr ""
 
-#: builtin/apply.c:3770
+#: builtin/apply.c:3773
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o)"
 msgstr ""
 
-#: builtin/apply.c:3775
+#: builtin/apply.c:3778
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o) of %s"
 msgstr ""
 
-#: builtin/apply.c:3795
+#: builtin/apply.c:3798
 #, c-format
 msgid "affected file '%s' is beyond a symbolic link"
 msgstr ""
 
-#: builtin/apply.c:3799
+#: builtin/apply.c:3802
 #, c-format
 msgid "%s: patch does not apply"
 msgstr ""
 
-#: builtin/apply.c:3813
+#: builtin/apply.c:3816
 #, c-format
 msgid "Checking patch %s..."
 msgstr ""
 
-#: builtin/apply.c:3906 builtin/checkout.c:231 builtin/reset.c:135
+#: builtin/apply.c:3909 builtin/checkout.c:233 builtin/reset.c:135
 #, c-format
 msgid "make_cache_entry failed for path '%s'"
 msgstr ""
 
-#: builtin/apply.c:4049
+#: builtin/apply.c:4052
 #, c-format
 msgid "unable to remove %s from index"
 msgstr ""
 
-#: builtin/apply.c:4078
+#: builtin/apply.c:4081
 #, c-format
 msgid "corrupt patch for submodule %s"
 msgstr ""
 
-#: builtin/apply.c:4082
+#: builtin/apply.c:4085
 #, c-format
 msgid "unable to stat newly created file '%s'"
 msgstr ""
 
-#: builtin/apply.c:4087
+#: builtin/apply.c:4090
 #, c-format
 msgid "unable to create backing store for newly created file %s"
 msgstr ""
 
-#: builtin/apply.c:4090 builtin/apply.c:4198
+#: builtin/apply.c:4093 builtin/apply.c:4201
 #, c-format
 msgid "unable to add cache entry for %s"
 msgstr ""
 
-#: builtin/apply.c:4123
+#: builtin/apply.c:4126
 #, c-format
 msgid "closing file '%s'"
 msgstr ""
 
-#: builtin/apply.c:4172
+#: builtin/apply.c:4175
 #, c-format
 msgid "unable to write file '%s' mode %o"
 msgstr ""
 
-#: builtin/apply.c:4259
+#: builtin/apply.c:4262
 #, c-format
 msgid "Applied patch %s cleanly."
 msgstr ""
 
-#: builtin/apply.c:4267
+#: builtin/apply.c:4270
 msgid "internal error"
 msgstr ""
 
-#: builtin/apply.c:4270
+#: builtin/apply.c:4273
 #, c-format
 msgid "Applying patch %%s with %d reject..."
 msgid_plural "Applying patch %%s with %d rejects..."
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/apply.c:4280
+#: builtin/apply.c:4283
 #, c-format
 msgid "truncating .rej filename to %.*s.rej"
 msgstr ""
 
-#: builtin/apply.c:4301
+#: builtin/apply.c:4304
 #, c-format
 msgid "Hunk #%d applied cleanly."
 msgstr ""
 
-#: builtin/apply.c:4304
+#: builtin/apply.c:4307
 #, c-format
 msgid "Rejected hunk #%d."
 msgstr ""
 
-#: builtin/apply.c:4394
+#: builtin/apply.c:4397
 msgid "unrecognized input"
 msgstr ""
 
-#: builtin/apply.c:4405
+#: builtin/apply.c:4408
 msgid "unable to read index file"
 msgstr ""
 
-#: builtin/apply.c:4522 builtin/apply.c:4525 builtin/clone.c:92
+#: builtin/apply.c:4525 builtin/apply.c:4528 builtin/clone.c:85
 #: builtin/fetch.c:92
 msgid "path"
 msgstr ""
 
-#: builtin/apply.c:4523
+#: builtin/apply.c:4526
 msgid "don't apply changes matching the given path"
 msgstr ""
 
-#: builtin/apply.c:4526
+#: builtin/apply.c:4529
 msgid "apply changes matching the given path"
 msgstr ""
 
-#: builtin/apply.c:4528
+#: builtin/apply.c:4531
 msgid "num"
 msgstr ""
 
-#: builtin/apply.c:4529
+#: builtin/apply.c:4532
 msgid "remove <num> leading slashes from traditional diff paths"
 msgstr ""
 
-#: builtin/apply.c:4532
+#: builtin/apply.c:4535
 msgid "ignore additions made by the patch"
 msgstr ""
 
-#: builtin/apply.c:4534
+#: builtin/apply.c:4537
 msgid "instead of applying the patch, output diffstat for the input"
 msgstr ""
 
-#: builtin/apply.c:4538
+#: builtin/apply.c:4541
 msgid "show number of added and deleted lines in decimal notation"
 msgstr ""
 
-#: builtin/apply.c:4540
+#: builtin/apply.c:4543
 msgid "instead of applying the patch, output a summary for the input"
 msgstr ""
 
-#: builtin/apply.c:4542
+#: builtin/apply.c:4545
 msgid "instead of applying the patch, see if the patch is applicable"
 msgstr ""
 
-#: builtin/apply.c:4544
+#: builtin/apply.c:4547
 msgid "make sure the patch is applicable to the current index"
 msgstr ""
 
-#: builtin/apply.c:4546
+#: builtin/apply.c:4549
 msgid "apply a patch without touching the working tree"
 msgstr ""
 
-#: builtin/apply.c:4548
+#: builtin/apply.c:4551
 msgid "accept a patch that touches outside the working area"
 msgstr ""
 
-#: builtin/apply.c:4550
+#: builtin/apply.c:4553
 msgid "also apply the patch (use with --stat/--summary/--check)"
 msgstr ""
 
-#: builtin/apply.c:4552
+#: builtin/apply.c:4555
 msgid "attempt three-way merge if a patch does not apply"
 msgstr ""
 
-#: builtin/apply.c:4554
+#: builtin/apply.c:4557
 msgid "build a temporary index based on embedded index information"
 msgstr ""
 
-#: builtin/apply.c:4556 builtin/checkout-index.c:198 builtin/ls-files.c:412
+#: builtin/apply.c:4559 builtin/checkout-index.c:198 builtin/ls-files.c:412
 msgid "paths are separated with NUL character"
 msgstr ""
 
-#: builtin/apply.c:4559
+#: builtin/apply.c:4562
 msgid "ensure at least <n> lines of context match"
 msgstr ""
 
-#: builtin/apply.c:4560
+#: builtin/apply.c:4563
 msgid "action"
 msgstr ""
 
-#: builtin/apply.c:4561
+#: builtin/apply.c:4564
 msgid "detect new or modified lines that have whitespace errors"
 msgstr ""
 
-#: builtin/apply.c:4564 builtin/apply.c:4567
+#: builtin/apply.c:4567 builtin/apply.c:4570
 msgid "ignore changes in whitespace when finding context"
 msgstr ""
 
-#: builtin/apply.c:4570
+#: builtin/apply.c:4573
 msgid "apply the patch in reverse"
 msgstr ""
 
-#: builtin/apply.c:4572
+#: builtin/apply.c:4575
 msgid "don't expect at least one line of context"
 msgstr ""
 
-#: builtin/apply.c:4574
+#: builtin/apply.c:4577
 msgid "leave the rejected hunks in corresponding *.rej files"
 msgstr ""
 
-#: builtin/apply.c:4576
+#: builtin/apply.c:4579
 msgid "allow overlapping hunks"
 msgstr ""
 
-#: builtin/apply.c:4579
+#: builtin/apply.c:4582
 msgid "tolerate incorrectly detected missing new-line at the end of file"
 msgstr ""
 
-#: builtin/apply.c:4582
+#: builtin/apply.c:4585
 msgid "do not trust the line counts in the hunk headers"
 msgstr ""
 
-#: builtin/apply.c:4584
+#: builtin/apply.c:4587
 msgid "root"
 msgstr ""
 
-#: builtin/apply.c:4585
+#: builtin/apply.c:4588
 msgid "prepend <root> to all filenames"
 msgstr ""
 
-#: builtin/apply.c:4607
+#: builtin/apply.c:4610
 msgid "--3way outside a repository"
 msgstr ""
 
-#: builtin/apply.c:4615
+#: builtin/apply.c:4618
 msgid "--index outside a repository"
 msgstr ""
 
-#: builtin/apply.c:4618
+#: builtin/apply.c:4621
 msgid "--cached outside a repository"
 msgstr ""
 
-#: builtin/apply.c:4637
+#: builtin/apply.c:4640
 #, c-format
 msgid "can't open patch '%s'"
 msgstr ""
 
-#: builtin/apply.c:4651
+#: builtin/apply.c:4654
 #, c-format
 msgid "squelched %d whitespace error"
 msgid_plural "squelched %d whitespace errors"
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/apply.c:4657 builtin/apply.c:4667
+#: builtin/apply.c:4660 builtin/apply.c:4670
 #, c-format
 msgid "%d line adds whitespace errors."
 msgid_plural "%d lines add whitespace errors."
 msgstr[0] ""
 msgstr[1] ""
 
@@ -2561,17 +2611,17 @@
 msgstr ""
 
 #: builtin/bisect--helper.c:19
 msgid "update BISECT_HEAD instead of checking out the current commit"
 msgstr ""
 
-#: builtin/blame.c:30
-msgid "git blame [<options>] [<rev-opts>] [<rev>] [--] file"
+#: builtin/blame.c:31
+msgid "git blame [<options>] [<rev-opts>] [<rev>] [--] <file>"
 msgstr ""
 
-#: builtin/blame.c:35
+#: builtin/blame.c:36
 msgid "<rev-opts> are documented in git-rev-list(1)"
 msgstr ""
 
 #: builtin/blame.c:2500
 msgid "Show blame entries as we find them, incrementally"
 msgstr ""
@@ -2687,452 +2737,464 @@
 msgstr ""
 
 #: builtin/branch.c:27
 msgid "git branch [<options>] (-m | -M) [<old-branch>] <new-branch>"
 msgstr ""
 
-#: builtin/branch.c:152
+#: builtin/branch.c:150
 #, c-format
 msgid ""
 "deleting branch '%s' that has been merged to\n"
 "         '%s', but not yet merged to HEAD."
 msgstr ""
 
-#: builtin/branch.c:156
+#: builtin/branch.c:154
 #, c-format
 msgid ""
 "not deleting branch '%s' that is not yet merged to\n"
 "         '%s', even though it is merged to HEAD."
 msgstr ""
 
-#: builtin/branch.c:170
+#: builtin/branch.c:168
 #, c-format
 msgid "Couldn't look up commit object for '%s'"
 msgstr ""
 
-#: builtin/branch.c:174
+#: builtin/branch.c:172
 #, c-format
 msgid ""
 "The branch '%s' is not fully merged.\n"
 "If you are sure you want to delete it, run 'git branch -D %s'."
 msgstr ""
 
-#: builtin/branch.c:187
+#: builtin/branch.c:185
 msgid "Update of config-file failed"
 msgstr ""
 
-#: builtin/branch.c:215
+#: builtin/branch.c:213
 msgid "cannot use -a with -d"
 msgstr ""
 
-#: builtin/branch.c:221
+#: builtin/branch.c:219
 msgid "Couldn't look up commit object for HEAD"
 msgstr ""
 
-#: builtin/branch.c:229
+#: builtin/branch.c:227
 #, c-format
 msgid "Cannot delete the branch '%s' which you are currently on."
 msgstr ""
 
-#: builtin/branch.c:245
+#: builtin/branch.c:243
 #, c-format
-msgid "remote branch '%s' not found."
+msgid "remote-tracking branch '%s' not found."
 msgstr ""
 
-#: builtin/branch.c:246
+#: builtin/branch.c:244
 #, c-format
 msgid "branch '%s' not found."
 msgstr ""
 
-#: builtin/branch.c:260
+#: builtin/branch.c:258
 #, c-format
-msgid "Error deleting remote branch '%s'"
+msgid "Error deleting remote-tracking branch '%s'"
 msgstr ""
 
-#: builtin/branch.c:261
+#: builtin/branch.c:259
 #, c-format
 msgid "Error deleting branch '%s'"
 msgstr ""
 
-#: builtin/branch.c:268
+#: builtin/branch.c:266
 #, c-format
-msgid "Deleted remote branch %s (was %s).\n"
+msgid "Deleted remote-tracking branch %s (was %s).\n"
 msgstr ""
 
-#: builtin/branch.c:269
+#: builtin/branch.c:267
 #, c-format
 msgid "Deleted branch %s (was %s).\n"
 msgstr ""
 
-#: builtin/branch.c:370
+#: builtin/branch.c:368
 #, c-format
 msgid "branch '%s' does not point at a commit"
 msgstr ""
 
-#: builtin/branch.c:459
+#: builtin/branch.c:451
 #, c-format
 msgid "[%s: gone]"
 msgstr ""
 
-#: builtin/branch.c:464
+#: builtin/branch.c:456
 #, c-format
 msgid "[%s]"
 msgstr ""
 
-#: builtin/branch.c:469
+#: builtin/branch.c:461
 #, c-format
 msgid "[%s: behind %d]"
 msgstr ""
 
-#: builtin/branch.c:471
+#: builtin/branch.c:463
 #, c-format
 msgid "[behind %d]"
 msgstr ""
 
-#: builtin/branch.c:475
+#: builtin/branch.c:467
 #, c-format
 msgid "[%s: ahead %d]"
 msgstr ""
 
-#: builtin/branch.c:477
+#: builtin/branch.c:469
 #, c-format
 msgid "[ahead %d]"
 msgstr ""
 
-#: builtin/branch.c:480
+#: builtin/branch.c:472
 #, c-format
 msgid "[%s: ahead %d, behind %d]"
 msgstr ""
 
-#: builtin/branch.c:483
+#: builtin/branch.c:475
 #, c-format
 msgid "[ahead %d, behind %d]"
 msgstr ""
 
-#: builtin/branch.c:496
+#: builtin/branch.c:488
 msgid " **** invalid ref ****"
 msgstr ""
 
-#: builtin/branch.c:587
+#: builtin/branch.c:579
 #, c-format
 msgid "(no branch, rebasing %s)"
 msgstr ""
 
-#: builtin/branch.c:590
+#: builtin/branch.c:582
 #, c-format
 msgid "(no branch, bisect started on %s)"
 msgstr ""
 
-#: builtin/branch.c:596
+#: builtin/branch.c:588
 #, c-format
 msgid "(HEAD detached at %s)"
 msgstr ""
 
-#: builtin/branch.c:599
+#: builtin/branch.c:591
 #, c-format
 msgid "(HEAD detached from %s)"
 msgstr ""
 
-#: builtin/branch.c:603
+#: builtin/branch.c:595
 msgid "(no branch)"
 msgstr ""
 
-#: builtin/branch.c:650
+#: builtin/branch.c:642
 #, c-format
 msgid "object '%s' does not point to a commit"
 msgstr ""
 
-#: builtin/branch.c:698
+#: builtin/branch.c:690
 msgid "some refs could not be read"
 msgstr ""
 
-#: builtin/branch.c:711
+#: builtin/branch.c:703
 msgid "cannot rename the current branch while not on any."
 msgstr ""
 
-#: builtin/branch.c:721
+#: builtin/branch.c:713
 #, c-format
 msgid "Invalid branch name: '%s'"
 msgstr ""
 
-#: builtin/branch.c:736
+#: builtin/branch.c:728
 msgid "Branch rename failed"
 msgstr ""
 
-#: builtin/branch.c:740
+#: builtin/branch.c:732
 #, c-format
 msgid "Renamed a misnamed branch '%s' away"
 msgstr ""
 
-#: builtin/branch.c:744
+#: builtin/branch.c:736
 #, c-format
 msgid "Branch renamed to %s, but HEAD is not updated!"
 msgstr ""
 
-#: builtin/branch.c:751
+#: builtin/branch.c:743
 msgid "Branch is renamed, but update of config-file failed"
 msgstr ""
 
-#: builtin/branch.c:766
+#: builtin/branch.c:758
 #, c-format
 msgid "malformed object name %s"
 msgstr ""
 
-#: builtin/branch.c:790
+#: builtin/branch.c:780
 #, c-format
 msgid "could not write branch description template: %s"
 msgstr ""
 
-#: builtin/branch.c:820
+#: builtin/branch.c:810
 msgid "Generic options"
 msgstr ""
 
-#: builtin/branch.c:822
+#: builtin/branch.c:812
 msgid "show hash and subject, give twice for upstream branch"
 msgstr ""
 
-#: builtin/branch.c:823
+#: builtin/branch.c:813
 msgid "suppress informational messages"
 msgstr ""
 
-#: builtin/branch.c:824
+#: builtin/branch.c:814
 msgid "set up tracking mode (see git-pull(1))"
 msgstr ""
 
-#: builtin/branch.c:826
+#: builtin/branch.c:816
 msgid "change upstream info"
 msgstr ""
 
-#: builtin/branch.c:830
+#: builtin/branch.c:820
 msgid "use colored output"
 msgstr ""
 
-#: builtin/branch.c:831
+#: builtin/branch.c:821
 msgid "act on remote-tracking branches"
 msgstr ""
 
-#: builtin/branch.c:834 builtin/branch.c:840 builtin/branch.c:861
-#: builtin/branch.c:867 builtin/commit.c:1582 builtin/commit.c:1583
-#: builtin/commit.c:1584 builtin/commit.c:1585 builtin/tag.c:616
+#: builtin/branch.c:824 builtin/branch.c:830 builtin/branch.c:851
+#: builtin/branch.c:857 builtin/commit.c:1581 builtin/commit.c:1582
+#: builtin/commit.c:1583 builtin/commit.c:1584 builtin/tag.c:616
 #: builtin/tag.c:622
 msgid "commit"
 msgstr ""
 
-#: builtin/branch.c:835 builtin/branch.c:841
+#: builtin/branch.c:825 builtin/branch.c:831
 msgid "print only branches that contain the commit"
 msgstr ""
 
-#: builtin/branch.c:847
+#: builtin/branch.c:837
 msgid "Specific git-branch actions:"
 msgstr ""
 
-#: builtin/branch.c:848
+#: builtin/branch.c:838
 msgid "list both remote-tracking and local branches"
 msgstr ""
 
-#: builtin/branch.c:850
+#: builtin/branch.c:840
 msgid "delete fully merged branch"
 msgstr ""
 
-#: builtin/branch.c:851
+#: builtin/branch.c:841
 msgid "delete branch (even if not merged)"
 msgstr ""
 
-#: builtin/branch.c:852
+#: builtin/branch.c:842
 msgid "move/rename a branch and its reflog"
 msgstr ""
 
-#: builtin/branch.c:853
+#: builtin/branch.c:843
 msgid "move/rename a branch, even if target exists"
 msgstr ""
 
-#: builtin/branch.c:854
+#: builtin/branch.c:844
 msgid "list branch names"
 msgstr ""
 
-#: builtin/branch.c:855
+#: builtin/branch.c:845
 msgid "create the branch's reflog"
 msgstr ""
 
-#: builtin/branch.c:857
+#: builtin/branch.c:847
 msgid "edit the description for the branch"
 msgstr ""
 
-#: builtin/branch.c:858
+#: builtin/branch.c:848
 msgid "force creation, move/rename, deletion"
 msgstr ""
 
-#: builtin/branch.c:861
+#: builtin/branch.c:851
 msgid "print only not merged branches"
 msgstr ""
 
-#: builtin/branch.c:867
+#: builtin/branch.c:857
 msgid "print only merged branches"
 msgstr ""
 
-#: builtin/branch.c:871
+#: builtin/branch.c:861
 msgid "list branches in columns"
 msgstr ""
 
-#: builtin/branch.c:884
+#: builtin/branch.c:874
 msgid "Failed to resolve HEAD as a valid ref."
 msgstr ""
 
-#: builtin/branch.c:888 builtin/clone.c:637
+#: builtin/branch.c:878 builtin/clone.c:622
 msgid "HEAD not found below refs/heads!"
 msgstr ""
 
-#: builtin/branch.c:910
+#: builtin/branch.c:900
 msgid "--column and --verbose are incompatible"
 msgstr ""
 
-#: builtin/branch.c:921 builtin/branch.c:960
+#: builtin/branch.c:911 builtin/branch.c:950
 msgid "branch name required"
 msgstr ""
 
-#: builtin/branch.c:936
+#: builtin/branch.c:926
 msgid "Cannot give description to detached HEAD"
 msgstr ""
 
-#: builtin/branch.c:941
+#: builtin/branch.c:931
 msgid "cannot edit description of more than one branch"
 msgstr ""
 
-#: builtin/branch.c:948
+#: builtin/branch.c:938
 #, c-format
 msgid "No commit on branch '%s' yet."
 msgstr ""
 
-#: builtin/branch.c:951
+#: builtin/branch.c:941
 #, c-format
 msgid "No branch named '%s'."
 msgstr ""
 
-#: builtin/branch.c:966
+#: builtin/branch.c:956
 msgid "too many branches for a rename operation"
 msgstr ""
 
-#: builtin/branch.c:971
+#: builtin/branch.c:961
 msgid "too many branches to set new upstream"
 msgstr ""
 
-#: builtin/branch.c:975
+#: builtin/branch.c:965
 #, c-format
 msgid ""
 "could not set upstream of HEAD to %s when it does not point to any branch."
 msgstr ""
 
-#: builtin/branch.c:978 builtin/branch.c:1000 builtin/branch.c:1021
+#: builtin/branch.c:968 builtin/branch.c:990 builtin/branch.c:1011
 #, c-format
 msgid "no such branch '%s'"
 msgstr ""
 
-#: builtin/branch.c:982
+#: builtin/branch.c:972
 #, c-format
 msgid "branch '%s' does not exist"
 msgstr ""
 
-#: builtin/branch.c:994
+#: builtin/branch.c:984
 msgid "too many branches to unset upstream"
 msgstr ""
 
-#: builtin/branch.c:998
+#: builtin/branch.c:988
 msgid "could not unset upstream of HEAD when it does not point to any branch."
 msgstr ""
 
-#: builtin/branch.c:1004
+#: builtin/branch.c:994
 #, c-format
 msgid "Branch '%s' has no upstream information"
 msgstr ""
 
-#: builtin/branch.c:1018
+#: builtin/branch.c:1008
 msgid "it does not make sense to create 'HEAD' manually"
 msgstr ""
 
-#: builtin/branch.c:1024
+#: builtin/branch.c:1014
 msgid "-a and -r options to 'git branch' do not make sense with a branch name"
 msgstr ""
 
-#: builtin/branch.c:1027
+#: builtin/branch.c:1017
 #, c-format
 msgid ""
 "The --set-upstream flag is deprecated and will be removed. Consider using --"
 "track or --set-upstream-to\n"
 msgstr ""
 
-#: builtin/branch.c:1044
+#: builtin/branch.c:1034
 #, c-format
 msgid ""
 "\n"
 "If you wanted to make '%s' track '%s', do this:\n"
 "\n"
 msgstr ""
 
-#: builtin/branch.c:1045
+#: builtin/branch.c:1035
 #, c-format
 msgid "    git branch -d %s\n"
 msgstr ""
 
-#: builtin/branch.c:1046
+#: builtin/branch.c:1036
 #, c-format
 msgid "    git branch --set-upstream-to %s\n"
 msgstr ""
 
-#: builtin/bundle.c:47
+#: builtin/bundle.c:51
 #, c-format
 msgid "%s is okay\n"
 msgstr ""
 
-#: builtin/bundle.c:56
+#: builtin/bundle.c:64
 msgid "Need a repository to create a bundle."
 msgstr ""
 
-#: builtin/bundle.c:60
+#: builtin/bundle.c:68
 msgid "Need a repository to unbundle."
 msgstr ""
 
-#: builtin/cat-file.c:326
-msgid "git cat-file (-t | -s | -e | -p | <type> | --textconv) <object>"
+#: builtin/cat-file.c:369
+msgid ""
+"git cat-file (-t [--allow-unknown-type]|-s [--allow-unknown-type]|-e|-p|"
+"<type>|--textconv) <object>"
 msgstr ""
 
-#: builtin/cat-file.c:327
-msgid "git cat-file (--batch | --batch-check) < <list-of-objects>"
+#: builtin/cat-file.c:370
+msgid ""
+"git cat-file (--batch | --batch-check) [--follow-symlinks] < <list-of-"
+"objects>"
 msgstr ""
 
-#: builtin/cat-file.c:364
+#: builtin/cat-file.c:407
 msgid "<type> can be one of: blob, tree, commit, tag"
 msgstr ""
 
-#: builtin/cat-file.c:365
+#: builtin/cat-file.c:408
 msgid "show object type"
 msgstr ""
 
-#: builtin/cat-file.c:366
+#: builtin/cat-file.c:409
 msgid "show object size"
 msgstr ""
 
-#: builtin/cat-file.c:368
+#: builtin/cat-file.c:411
 msgid "exit with zero when there's no error"
 msgstr ""
 
-#: builtin/cat-file.c:369
+#: builtin/cat-file.c:412
 msgid "pretty-print object's content"
 msgstr ""
 
-#: builtin/cat-file.c:371
+#: builtin/cat-file.c:414
 msgid "for blob objects, run textconv on object's content"
 msgstr ""
 
-#: builtin/cat-file.c:373
+#: builtin/cat-file.c:416
+msgid "allow -s and -t to work with broken/corrupt objects"
+msgstr ""
+
+#: builtin/cat-file.c:418
 msgid "show info and content of objects fed from the standard input"
 msgstr ""
 
-#: builtin/cat-file.c:376
+#: builtin/cat-file.c:421
 msgid "show info about objects fed from the standard input"
 msgstr ""
 
+#: builtin/cat-file.c:424
+msgid "follow in-tree symlinks (used with --batch or --batch-check)"
+msgstr ""
+
 #: builtin/check-attr.c:11
 msgid "git check-attr [-a | --all | <attr>...] [--] <pathname>..."
 msgstr ""
 
 #: builtin/check-attr.c:12
 msgid "git check-attr --stdin [-z] [-a | --all | <attr>...] < <list-of-paths>"
@@ -3143,21 +3205,21 @@
 msgstr ""
 
 #: builtin/check-attr.c:20
 msgid "use .gitattributes only from the index"
 msgstr ""
 
-#: builtin/check-attr.c:21 builtin/check-ignore.c:22 builtin/hash-object.c:98
+#: builtin/check-attr.c:21 builtin/check-ignore.c:22 builtin/hash-object.c:96
 msgid "read file names from stdin"
 msgstr ""
 
 #: builtin/check-attr.c:23 builtin/check-ignore.c:24
 msgid "terminate input and output records by a NUL character"
 msgstr ""
 
-#: builtin/check-ignore.c:18 builtin/checkout.c:1107 builtin/gc.c:274
+#: builtin/check-ignore.c:18 builtin/checkout.c:1202 builtin/gc.c:279
 msgid "suppress progress reporting"
 msgstr ""
 
 #: builtin/check-ignore.c:26
 msgid "show non-matching input paths"
 msgstr ""
@@ -3248,119 +3310,119 @@
 msgstr ""
 
 #: builtin/checkout-index.c:208
 msgid "copy out the files from named stage"
 msgstr ""
 
-#: builtin/checkout.c:25
+#: builtin/checkout.c:24
 msgid "git checkout [<options>] <branch>"
 msgstr ""
 
-#: builtin/checkout.c:26
+#: builtin/checkout.c:25
 msgid "git checkout [<options>] [<branch>] -- <file>..."
 msgstr ""
 
-#: builtin/checkout.c:132 builtin/checkout.c:165
+#: builtin/checkout.c:134 builtin/checkout.c:167
 #, c-format
 msgid "path '%s' does not have our version"
 msgstr ""
 
-#: builtin/checkout.c:134 builtin/checkout.c:167
+#: builtin/checkout.c:136 builtin/checkout.c:169
 #, c-format
 msgid "path '%s' does not have their version"
 msgstr ""
 
-#: builtin/checkout.c:150
+#: builtin/checkout.c:152
 #, c-format
 msgid "path '%s' does not have all necessary versions"
 msgstr ""
 
-#: builtin/checkout.c:194
+#: builtin/checkout.c:196
 #, c-format
 msgid "path '%s' does not have necessary versions"
 msgstr ""
 
-#: builtin/checkout.c:211
+#: builtin/checkout.c:213
 #, c-format
 msgid "path '%s': cannot merge"
 msgstr ""
 
-#: builtin/checkout.c:228
+#: builtin/checkout.c:230
 #, c-format
 msgid "Unable to add merge result for '%s'"
 msgstr ""
 
-#: builtin/checkout.c:249 builtin/checkout.c:252 builtin/checkout.c:255
-#: builtin/checkout.c:258
+#: builtin/checkout.c:251 builtin/checkout.c:254 builtin/checkout.c:257
+#: builtin/checkout.c:260
 #, c-format
 msgid "'%s' cannot be used with updating paths"
 msgstr ""
 
-#: builtin/checkout.c:261 builtin/checkout.c:264
+#: builtin/checkout.c:263 builtin/checkout.c:266
 #, c-format
 msgid "'%s' cannot be used with %s"
 msgstr ""
 
-#: builtin/checkout.c:267
+#: builtin/checkout.c:269
 #, c-format
 msgid "Cannot update paths and switch to branch '%s' at the same time."
 msgstr ""
 
-#: builtin/checkout.c:278 builtin/checkout.c:467
+#: builtin/checkout.c:280 builtin/checkout.c:474
 msgid "corrupt index file"
 msgstr ""
 
-#: builtin/checkout.c:338 builtin/checkout.c:345
+#: builtin/checkout.c:340 builtin/checkout.c:347
 #, c-format
 msgid "path '%s' is unmerged"
 msgstr ""
 
-#: builtin/checkout.c:489
+#: builtin/checkout.c:496
 msgid "you need to resolve your current index first"
 msgstr ""
 
-#: builtin/checkout.c:615
+#: builtin/checkout.c:627
 #, c-format
 msgid "Can not do reflog for '%s'\n"
 msgstr ""
 
-#: builtin/checkout.c:653
+#: builtin/checkout.c:663
 msgid "HEAD is now at"
 msgstr ""
 
-#: builtin/checkout.c:660
+#: builtin/checkout.c:670
 #, c-format
 msgid "Reset branch '%s'\n"
 msgstr ""
 
-#: builtin/checkout.c:663
+#: builtin/checkout.c:673
 #, c-format
 msgid "Already on '%s'\n"
 msgstr ""
 
-#: builtin/checkout.c:667
+#: builtin/checkout.c:677
 #, c-format
 msgid "Switched to and reset branch '%s'\n"
 msgstr ""
 
-#: builtin/checkout.c:669 builtin/checkout.c:1050
+#: builtin/checkout.c:679 builtin/checkout.c:1134
 #, c-format
 msgid "Switched to a new branch '%s'\n"
 msgstr ""
 
-#: builtin/checkout.c:671
+#: builtin/checkout.c:681
 #, c-format
 msgid "Switched to branch '%s'\n"
 msgstr ""
 
-#: builtin/checkout.c:723
+#: builtin/checkout.c:733
 #, c-format
 msgid " ... and %d more.\n"
 msgstr ""
 
-#: builtin/checkout.c:729
+#: builtin/checkout.c:739
 #, c-format
 msgid ""
 "Warning: you are leaving %d commit behind, not connected to\n"
 "any of your branches:\n"
 "\n"
 "%s\n"
@@ -3369,167 +3431,184 @@
 "any of your branches:\n"
 "\n"
 "%s\n"
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/checkout.c:747
+#: builtin/checkout.c:758
 #, c-format
 msgid ""
+"If you want to keep it by creating a new branch, this may be a good time\n"
+"to do so with:\n"
+"\n"
+" git branch <new-branch-name> %s\n"
+"\n"
+msgid_plural ""
 "If you want to keep them by creating a new branch, this may be a good time\n"
 "to do so with:\n"
 "\n"
 " git branch <new-branch-name> %s\n"
 "\n"
-msgstr ""
+msgstr[0] ""
+msgstr[1] ""
 
-#: builtin/checkout.c:777
+#: builtin/checkout.c:794
 msgid "internal error in revision walk"
 msgstr ""
 
-#: builtin/checkout.c:781
+#: builtin/checkout.c:798
 msgid "Previous HEAD position was"
 msgstr ""
 
-#: builtin/checkout.c:808 builtin/checkout.c:1045
+#: builtin/checkout.c:825 builtin/checkout.c:1129
 msgid "You are on a branch yet to be born"
 msgstr ""
 
-#: builtin/checkout.c:952
+#: builtin/checkout.c:931
+#, c-format
+msgid "'%s' is already checked out at '%s'"
+msgstr ""
+
+#: builtin/checkout.c:1036
 #, c-format
 msgid "only one reference expected, %d given."
 msgstr ""
 
-#: builtin/checkout.c:991
+#: builtin/checkout.c:1075
 #, c-format
 msgid "invalid reference: %s"
 msgstr ""
 
-#: builtin/checkout.c:1020
+#: builtin/checkout.c:1104
 #, c-format
 msgid "reference is not a tree: %s"
 msgstr ""
 
-#: builtin/checkout.c:1059
+#: builtin/checkout.c:1143
 msgid "paths cannot be used with switching branches"
 msgstr ""
 
-#: builtin/checkout.c:1062 builtin/checkout.c:1066
+#: builtin/checkout.c:1146 builtin/checkout.c:1150
 #, c-format
 msgid "'%s' cannot be used with switching branches"
 msgstr ""
 
-#: builtin/checkout.c:1070 builtin/checkout.c:1073 builtin/checkout.c:1078
-#: builtin/checkout.c:1081
+#: builtin/checkout.c:1154 builtin/checkout.c:1157 builtin/checkout.c:1162
+#: builtin/checkout.c:1165
 #, c-format
 msgid "'%s' cannot be used with '%s'"
 msgstr ""
 
-#: builtin/checkout.c:1086
+#: builtin/checkout.c:1170
 #, c-format
 msgid "Cannot switch branch to a non-commit '%s'"
 msgstr ""
 
-#: builtin/checkout.c:1108 builtin/checkout.c:1110 builtin/clone.c:90
-#: builtin/remote.c:159 builtin/remote.c:161
+#: builtin/checkout.c:1203 builtin/checkout.c:1205 builtin/clone.c:83
+#: builtin/remote.c:159 builtin/remote.c:161 builtin/worktree.c:282
+#: builtin/worktree.c:284
 msgid "branch"
 msgstr ""
 
-#: builtin/checkout.c:1109
+#: builtin/checkout.c:1204
 msgid "create and checkout a new branch"
 msgstr ""
 
-#: builtin/checkout.c:1111
+#: builtin/checkout.c:1206
 msgid "create/reset and checkout a branch"
 msgstr ""
 
-#: builtin/checkout.c:1112
+#: builtin/checkout.c:1207
 msgid "create reflog for new branch"
 msgstr ""
 
-#: builtin/checkout.c:1113
+#: builtin/checkout.c:1208
 msgid "detach the HEAD at named commit"
 msgstr ""
 
-#: builtin/checkout.c:1114
+#: builtin/checkout.c:1209
 msgid "set upstream info for new branch"
 msgstr ""
 
-#: builtin/checkout.c:1116
+#: builtin/checkout.c:1211
 msgid "new-branch"
 msgstr ""
 
-#: builtin/checkout.c:1116
+#: builtin/checkout.c:1211
 msgid "new unparented branch"
 msgstr ""
 
-#: builtin/checkout.c:1117
+#: builtin/checkout.c:1212
 msgid "checkout our version for unmerged files"
 msgstr ""
 
-#: builtin/checkout.c:1119
+#: builtin/checkout.c:1214
 msgid "checkout their version for unmerged files"
 msgstr ""
 
-#: builtin/checkout.c:1121
+#: builtin/checkout.c:1216
 msgid "force checkout (throw away local modifications)"
 msgstr ""
 
-#: builtin/checkout.c:1122
+#: builtin/checkout.c:1217
 msgid "perform a 3-way merge with the new branch"
 msgstr ""
 
-#: builtin/checkout.c:1123 builtin/merge.c:227
+#: builtin/checkout.c:1218 builtin/merge.c:227
 msgid "update ignored files (default)"
 msgstr ""
 
-#: builtin/checkout.c:1124 builtin/log.c:1239 parse-options.h:245
+#: builtin/checkout.c:1219 builtin/log.c:1239 parse-options.h:244
 msgid "style"
 msgstr ""
 
-#: builtin/checkout.c:1125
+#: builtin/checkout.c:1220
 msgid "conflict style (merge or diff3)"
 msgstr ""
 
-#: builtin/checkout.c:1128
+#: builtin/checkout.c:1223
 msgid "do not limit pathspecs to sparse entries only"
 msgstr ""
 
-#: builtin/checkout.c:1130
+#: builtin/checkout.c:1225
 msgid "second guess 'git checkout <no-such-branch>'"
 msgstr ""
 
-#: builtin/checkout.c:1153
+#: builtin/checkout.c:1227
+msgid "do not check if another worktree is holding the given ref"
+msgstr ""
+
+#: builtin/checkout.c:1252
 msgid "-b, -B and --orphan are mutually exclusive"
 msgstr ""
 
-#: builtin/checkout.c:1170
+#: builtin/checkout.c:1269
 msgid "--track needs a branch name"
 msgstr ""
 
-#: builtin/checkout.c:1175
+#: builtin/checkout.c:1274
 msgid "Missing branch name; try -b"
 msgstr ""
 
-#: builtin/checkout.c:1212
+#: builtin/checkout.c:1310
 msgid "invalid path specification"
 msgstr ""
 
-#: builtin/checkout.c:1219
+#: builtin/checkout.c:1317
 #, c-format
 msgid ""
 "Cannot update paths and switch to branch '%s' at the same time.\n"
 "Did you intend to checkout '%s' which can not be resolved as commit?"
 msgstr ""
 
-#: builtin/checkout.c:1224
+#: builtin/checkout.c:1322
 #, c-format
 msgid "git checkout: --detach does not take a path argument '%s'"
 msgstr ""
 
-#: builtin/checkout.c:1228
+#: builtin/checkout.c:1326
 msgid ""
 "git checkout: --ours/--theirs, --force and --merge are incompatible when\n"
 "checking out of the index."
 msgstr ""
 
 #: builtin/clean.c:26
@@ -3579,387 +3658,388 @@
 "foo        - select item based on unique prefix\n"
 "-...       - unselect specified items\n"
 "*          - choose all items\n"
 "           - (empty) finish selecting"
 msgstr ""
 
-#: builtin/clean.c:517
+#: builtin/clean.c:515
 #, c-format
 msgid "Huh (%s)?"
 msgstr ""
 
-#: builtin/clean.c:659
+#: builtin/clean.c:657
 #, c-format
 msgid "Input ignore patterns>> "
 msgstr ""
 
-#: builtin/clean.c:696
+#: builtin/clean.c:694
 #, c-format
 msgid "WARNING: Cannot find items matched by: %s"
 msgstr ""
 
-#: builtin/clean.c:717
+#: builtin/clean.c:715
 msgid "Select items to delete"
 msgstr ""
 
 #. TRANSLATORS: Make sure to keep [y/N] as is
-#: builtin/clean.c:758
+#: builtin/clean.c:756
 #, c-format
 msgid "Remove %s [y/N]? "
 msgstr ""
 
-#: builtin/clean.c:783
+#: builtin/clean.c:781
 msgid "Bye."
 msgstr ""
 
-#: builtin/clean.c:791
+#: builtin/clean.c:789
 msgid ""
 "clean               - start cleaning\n"
 "filter by pattern   - exclude items from deletion\n"
 "select by numbers   - select items to be deleted by numbers\n"
 "ask each            - confirm each deletion (like \"rm -i\")\n"
 "quit                - stop cleaning\n"
 "help                - this screen\n"
 "?                   - help for prompt selection"
 msgstr ""
 
-#: builtin/clean.c:818
+#: builtin/clean.c:816
 msgid "*** Commands ***"
 msgstr ""
 
-#: builtin/clean.c:819
+#: builtin/clean.c:817
 msgid "What now"
 msgstr ""
 
-#: builtin/clean.c:827
+#: builtin/clean.c:825
 msgid "Would remove the following item:"
 msgid_plural "Would remove the following items:"
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/clean.c:844
+#: builtin/clean.c:842
 msgid "No more files to clean, exiting."
 msgstr ""
 
-#: builtin/clean.c:875
+#: builtin/clean.c:873
 msgid "do not print names of files removed"
 msgstr ""
 
-#: builtin/clean.c:877
+#: builtin/clean.c:875
 msgid "force"
 msgstr ""
 
-#: builtin/clean.c:878
+#: builtin/clean.c:876
 msgid "interactive cleaning"
 msgstr ""
 
-#: builtin/clean.c:880
+#: builtin/clean.c:878
 msgid "remove whole directories"
 msgstr ""
 
-#: builtin/clean.c:881 builtin/describe.c:407 builtin/grep.c:714
-#: builtin/ls-files.c:443 builtin/name-rev.c:311 builtin/show-ref.c:185
+#: builtin/clean.c:879 builtin/describe.c:407 builtin/grep.c:714
+#: builtin/ls-files.c:443 builtin/name-rev.c:311 builtin/show-ref.c:187
 msgid "pattern"
 msgstr ""
 
-#: builtin/clean.c:882
+#: builtin/clean.c:880
 msgid "add <pattern> to ignore rules"
 msgstr ""
 
-#: builtin/clean.c:883
+#: builtin/clean.c:881
 msgid "remove ignored files, too"
 msgstr ""
 
-#: builtin/clean.c:885
+#: builtin/clean.c:883
 msgid "remove only ignored files"
 msgstr ""
 
-#: builtin/clean.c:903
+#: builtin/clean.c:901
 msgid "-x and -X cannot be used together"
 msgstr ""
 
-#: builtin/clean.c:907
+#: builtin/clean.c:905
 msgid ""
 "clean.requireForce set to true and neither -i, -n, nor -f given; refusing to "
 "clean"
 msgstr ""
 
-#: builtin/clean.c:910
+#: builtin/clean.c:908
 msgid ""
 "clean.requireForce defaults to true and neither -i, -n, nor -f given; "
 "refusing to clean"
 msgstr ""
 
 #: builtin/clone.c:37
 msgid "git clone [<options>] [--] <repo> [<dir>]"
 msgstr ""
 
-#: builtin/clone.c:66 builtin/fetch.c:111 builtin/merge.c:224
+#: builtin/clone.c:57 builtin/fetch.c:111 builtin/merge.c:224
 #: builtin/push.c:523
 msgid "force progress reporting"
 msgstr ""
 
-#: builtin/clone.c:68
+#: builtin/clone.c:59
 msgid "don't create a checkout"
 msgstr ""
 
-#: builtin/clone.c:69 builtin/clone.c:71 builtin/init-db.c:496
+#: builtin/clone.c:60 builtin/clone.c:62 builtin/init-db.c:503
 msgid "create a bare repository"
 msgstr ""
 
-#: builtin/clone.c:73
+#: builtin/clone.c:64
 msgid "create a mirror repository (implies bare)"
 msgstr ""
 
-#: builtin/clone.c:75
+#: builtin/clone.c:66
 msgid "to clone from a local repository"
 msgstr ""
 
-#: builtin/clone.c:77
+#: builtin/clone.c:68
 msgid "don't use local hardlinks, always copy"
 msgstr ""
 
-#: builtin/clone.c:79
+#: builtin/clone.c:70
 msgid "setup as shared repository"
 msgstr ""
 
-#: builtin/clone.c:81 builtin/clone.c:83
+#: builtin/clone.c:72 builtin/clone.c:74
 msgid "initialize submodules in the clone"
 msgstr ""
 
-#: builtin/clone.c:84 builtin/init-db.c:493
+#: builtin/clone.c:75 builtin/init-db.c:500
 msgid "template-directory"
 msgstr ""
 
-#: builtin/clone.c:85 builtin/init-db.c:494
+#: builtin/clone.c:76 builtin/init-db.c:501
 msgid "directory from which templates will be used"
 msgstr ""
 
-#: builtin/clone.c:87
+#: builtin/clone.c:78
 msgid "reference repository"
 msgstr ""
 
-#: builtin/clone.c:88 builtin/column.c:26 builtin/merge-file.c:44
+#: builtin/clone.c:80
+msgid "use --reference only while cloning"
+msgstr ""
+
+#: builtin/clone.c:81 builtin/column.c:26 builtin/merge-file.c:44
 msgid "name"
 msgstr ""
 
-#: builtin/clone.c:89
+#: builtin/clone.c:82
 msgid "use <name> instead of 'origin' to track upstream"
 msgstr ""
 
-#: builtin/clone.c:91
+#: builtin/clone.c:84
 msgid "checkout <branch> instead of the remote's HEAD"
 msgstr ""
 
-#: builtin/clone.c:93
+#: builtin/clone.c:86
 msgid "path to git-upload-pack on the remote"
 msgstr ""
 
-#: builtin/clone.c:94 builtin/fetch.c:112 builtin/grep.c:659
+#: builtin/clone.c:87 builtin/fetch.c:112 builtin/grep.c:659
 msgid "depth"
 msgstr ""
 
-#: builtin/clone.c:95
+#: builtin/clone.c:88
 msgid "create a shallow clone of that depth"
 msgstr ""
 
-#: builtin/clone.c:97
+#: builtin/clone.c:90
 msgid "clone only one branch, HEAD or --branch"
 msgstr ""
 
-#: builtin/clone.c:99
-msgid "use --reference only while cloning"
-msgstr ""
-
-#: builtin/clone.c:100 builtin/init-db.c:502
+#: builtin/clone.c:91 builtin/init-db.c:509
 msgid "gitdir"
 msgstr ""
 
-#: builtin/clone.c:101 builtin/init-db.c:503
+#: builtin/clone.c:92 builtin/init-db.c:510
 msgid "separate git dir from working tree"
 msgstr ""
 
-#: builtin/clone.c:102
+#: builtin/clone.c:93
 msgid "key=value"
 msgstr ""
 
-#: builtin/clone.c:103
+#: builtin/clone.c:94
 msgid "set config inside the new repository"
 msgstr ""
 
-#: builtin/clone.c:256
+#: builtin/clone.c:240
 #, c-format
 msgid "reference repository '%s' is not a local repository."
 msgstr ""
 
-#: builtin/clone.c:260
+#: builtin/clone.c:244
 #, c-format
 msgid "reference repository '%s' is shallow"
 msgstr ""
 
-#: builtin/clone.c:263
+#: builtin/clone.c:247
 #, c-format
 msgid "reference repository '%s' is grafted"
 msgstr ""
 
-#: builtin/clone.c:325
+#: builtin/clone.c:310
 #, c-format
 msgid "failed to create directory '%s'"
 msgstr ""
 
-#: builtin/clone.c:327 builtin/diff.c:84
+#: builtin/clone.c:312 builtin/diff.c:84
 #, c-format
 msgid "failed to stat '%s'"
 msgstr ""
 
-#: builtin/clone.c:329
+#: builtin/clone.c:314
 #, c-format
 msgid "%s exists and is not a directory"
 msgstr ""
 
-#: builtin/clone.c:343
+#: builtin/clone.c:328
 #, c-format
 msgid "failed to stat %s\n"
 msgstr ""
 
-#: builtin/clone.c:365
+#: builtin/clone.c:350
 #, c-format
 msgid "failed to create link '%s'"
 msgstr ""
 
-#: builtin/clone.c:369
+#: builtin/clone.c:354
 #, c-format
 msgid "failed to copy file to '%s'"
 msgstr ""
 
-#: builtin/clone.c:392 builtin/clone.c:566
+#: builtin/clone.c:377 builtin/clone.c:551
 #, c-format
 msgid "done.\n"
 msgstr ""
 
-#: builtin/clone.c:404
+#: builtin/clone.c:389
 msgid ""
 "Clone succeeded, but checkout failed.\n"
 "You can inspect what was checked out with 'git status'\n"
 "and retry the checkout with 'git checkout -f HEAD'\n"
 msgstr ""
 
-#: builtin/clone.c:481
+#: builtin/clone.c:466
 #, c-format
 msgid "Could not find remote branch %s to clone."
 msgstr ""
 
-#: builtin/clone.c:561
+#: builtin/clone.c:546
 #, c-format
 msgid "Checking connectivity... "
 msgstr ""
 
-#: builtin/clone.c:564
+#: builtin/clone.c:549
 msgid "remote did not send all necessary objects"
 msgstr ""
 
-#: builtin/clone.c:628
+#: builtin/clone.c:613
 msgid "remote HEAD refers to nonexistent ref, unable to checkout.\n"
 msgstr ""
 
-#: builtin/clone.c:659
+#: builtin/clone.c:644
 msgid "unable to checkout working tree"
 msgstr ""
 
-#: builtin/clone.c:746
+#: builtin/clone.c:731
 msgid "cannot repack to clean up"
 msgstr ""
 
-#: builtin/clone.c:748
+#: builtin/clone.c:733
 msgid "cannot unlink temporary alternates file"
 msgstr ""
 
-#: builtin/clone.c:778
+#: builtin/clone.c:763
 msgid "Too many arguments."
 msgstr ""
 
-#: builtin/clone.c:782
+#: builtin/clone.c:767
 msgid "You must specify a repository to clone."
 msgstr ""
 
-#: builtin/clone.c:793
+#: builtin/clone.c:778
 #, c-format
 msgid "--bare and --origin %s options are incompatible."
 msgstr ""
 
-#: builtin/clone.c:796
+#: builtin/clone.c:781
 msgid "--bare and --separate-git-dir are incompatible."
 msgstr ""
 
-#: builtin/clone.c:809
+#: builtin/clone.c:794
 #, c-format
 msgid "repository '%s' does not exist"
 msgstr ""
 
-#: builtin/clone.c:815 builtin/fetch.c:1156
+#: builtin/clone.c:800 builtin/fetch.c:1160
 #, c-format
 msgid "depth %s is not a positive number"
 msgstr ""
 
-#: builtin/clone.c:825
+#: builtin/clone.c:810
 #, c-format
 msgid "destination path '%s' already exists and is not an empty directory."
 msgstr ""
 
-#: builtin/clone.c:835
+#: builtin/clone.c:820
 #, c-format
 msgid "working tree '%s' already exists."
 msgstr ""
 
-#: builtin/clone.c:850 builtin/clone.c:861
+#: builtin/clone.c:835 builtin/clone.c:846 builtin/worktree.c:193
+#: builtin/worktree.c:220
 #, c-format
 msgid "could not create leading directories of '%s'"
 msgstr ""
 
-#: builtin/clone.c:853
+#: builtin/clone.c:838
 #, c-format
 msgid "could not create work tree dir '%s'"
 msgstr ""
 
-#: builtin/clone.c:871
+#: builtin/clone.c:856
 #, c-format
 msgid "Cloning into bare repository '%s'...\n"
 msgstr ""
 
-#: builtin/clone.c:873
+#: builtin/clone.c:858
 #, c-format
 msgid "Cloning into '%s'...\n"
 msgstr ""
 
-#: builtin/clone.c:898
+#: builtin/clone.c:883
 msgid "--dissociate given, but there is no --reference"
 msgstr ""
 
-#: builtin/clone.c:913
+#: builtin/clone.c:900
 msgid "--depth is ignored in local clones; use file:// instead."
 msgstr ""
 
-#: builtin/clone.c:916
+#: builtin/clone.c:903
 msgid "source repository is shallow, ignoring --local"
 msgstr ""
 
-#: builtin/clone.c:921
+#: builtin/clone.c:908
 msgid "--local is ignored"
 msgstr ""
 
-#: builtin/clone.c:925
+#: builtin/clone.c:912
 #, c-format
 msgid "Don't know how to clone %s"
 msgstr ""
 
-#: builtin/clone.c:976 builtin/clone.c:984
+#: builtin/clone.c:961 builtin/clone.c:969
 #, c-format
 msgid "Remote branch %s not found in upstream %s"
 msgstr ""
 
-#: builtin/clone.c:987
+#: builtin/clone.c:972
 msgid "You appear to have cloned an empty repository."
 msgstr ""
 
 #: builtin/column.c:9
 msgid "git column [<options>]"
 msgstr ""
@@ -4152,13 +4232,13 @@
 msgstr ""
 
 #: builtin/commit.c:734
 msgid "could not read SQUASH_MSG"
 msgstr ""
 
-#: builtin/commit.c:738
+#: builtin/commit.c:738 builtin/merge.c:1079
 #, c-format
 msgid "could not read '%s'"
 msgstr ""
 
 #: builtin/commit.c:785
 msgid "could not write commit template"
@@ -4295,46 +4375,46 @@
 msgstr ""
 
 #: builtin/commit.c:1214
 msgid "Paths with -a does not make sense."
 msgstr ""
 
-#: builtin/commit.c:1324 builtin/commit.c:1604
+#: builtin/commit.c:1324 builtin/commit.c:1603
 msgid "show status concisely"
 msgstr ""
 
-#: builtin/commit.c:1326 builtin/commit.c:1606
+#: builtin/commit.c:1326 builtin/commit.c:1605
 msgid "show branch information"
 msgstr ""
 
-#: builtin/commit.c:1328 builtin/commit.c:1608 builtin/push.c:509
+#: builtin/commit.c:1328 builtin/commit.c:1607 builtin/push.c:509
 msgid "machine-readable output"
 msgstr ""
 
-#: builtin/commit.c:1331 builtin/commit.c:1610
+#: builtin/commit.c:1331 builtin/commit.c:1609
 msgid "show status in long format (default)"
 msgstr ""
 
-#: builtin/commit.c:1334 builtin/commit.c:1613
+#: builtin/commit.c:1334 builtin/commit.c:1612
 msgid "terminate entries with NUL"
 msgstr ""
 
-#: builtin/commit.c:1336 builtin/commit.c:1616 builtin/fast-export.c:980
+#: builtin/commit.c:1336 builtin/commit.c:1615 builtin/fast-export.c:980
 #: builtin/fast-export.c:983 builtin/tag.c:603
 msgid "mode"
 msgstr ""
 
-#: builtin/commit.c:1337 builtin/commit.c:1616
+#: builtin/commit.c:1337 builtin/commit.c:1615
 msgid "show untracked files, optional modes: all, normal, no. (Default: all)"
 msgstr ""
 
 #: builtin/commit.c:1340
 msgid "show ignored files"
 msgstr ""
 
-#: builtin/commit.c:1341 parse-options.h:153
+#: builtin/commit.c:1341 parse-options.h:152
 msgid "when"
 msgstr ""
 
 #: builtin/commit.c:1342
 msgid ""
 "ignore changes to submodules, optional when: all, dirty, untracked. "
@@ -4342,208 +4422,208 @@
 msgstr ""
 
 #: builtin/commit.c:1344
 msgid "list untracked files in columns"
 msgstr ""
 
-#: builtin/commit.c:1431
+#: builtin/commit.c:1430
 msgid "couldn't look up newly created commit"
 msgstr ""
 
-#: builtin/commit.c:1433
+#: builtin/commit.c:1432
 msgid "could not parse newly created commit"
 msgstr ""
 
-#: builtin/commit.c:1478
+#: builtin/commit.c:1477
 msgid "detached HEAD"
 msgstr ""
 
-#: builtin/commit.c:1481
+#: builtin/commit.c:1480
 msgid " (root-commit)"
 msgstr ""
 
-#: builtin/commit.c:1574
+#: builtin/commit.c:1573
 msgid "suppress summary after successful commit"
 msgstr ""
 
-#: builtin/commit.c:1575
+#: builtin/commit.c:1574
 msgid "show diff in commit message template"
 msgstr ""
 
-#: builtin/commit.c:1577
+#: builtin/commit.c:1576
 msgid "Commit message options"
 msgstr ""
 
-#: builtin/commit.c:1578 builtin/tag.c:601
+#: builtin/commit.c:1577 builtin/tag.c:601
 msgid "read message from file"
 msgstr ""
 
-#: builtin/commit.c:1579
+#: builtin/commit.c:1578
 msgid "author"
 msgstr ""
 
-#: builtin/commit.c:1579
+#: builtin/commit.c:1578
 msgid "override author for commit"
 msgstr ""
 
-#: builtin/commit.c:1580 builtin/gc.c:275
+#: builtin/commit.c:1579 builtin/gc.c:280
 msgid "date"
 msgstr ""
 
-#: builtin/commit.c:1580
+#: builtin/commit.c:1579
 msgid "override date for commit"
 msgstr ""
 
-#: builtin/commit.c:1581 builtin/merge.c:218 builtin/notes.c:391
+#: builtin/commit.c:1580 builtin/merge.c:218 builtin/notes.c:391
 #: builtin/notes.c:554 builtin/tag.c:599
 msgid "message"
 msgstr ""
 
-#: builtin/commit.c:1581
+#: builtin/commit.c:1580
 msgid "commit message"
 msgstr ""
 
-#: builtin/commit.c:1582
+#: builtin/commit.c:1581
 msgid "reuse and edit message from specified commit"
 msgstr ""
 
-#: builtin/commit.c:1583
+#: builtin/commit.c:1582
 msgid "reuse message from specified commit"
 msgstr ""
 
-#: builtin/commit.c:1584
+#: builtin/commit.c:1583
 msgid "use autosquash formatted message to fixup specified commit"
 msgstr ""
 
-#: builtin/commit.c:1585
+#: builtin/commit.c:1584
 msgid "use autosquash formatted message to squash specified commit"
 msgstr ""
 
-#: builtin/commit.c:1586
+#: builtin/commit.c:1585
 msgid "the commit is authored by me now (used with -C/-c/--amend)"
 msgstr ""
 
-#: builtin/commit.c:1587 builtin/log.c:1191 builtin/revert.c:86
+#: builtin/commit.c:1586 builtin/log.c:1191 builtin/revert.c:86
 msgid "add Signed-off-by:"
 msgstr ""
 
-#: builtin/commit.c:1588
+#: builtin/commit.c:1587
 msgid "use specified template file"
 msgstr ""
 
-#: builtin/commit.c:1589
+#: builtin/commit.c:1588
 msgid "force edit of commit"
 msgstr ""
 
-#: builtin/commit.c:1590
+#: builtin/commit.c:1589
 msgid "default"
 msgstr ""
 
-#: builtin/commit.c:1590 builtin/tag.c:604
+#: builtin/commit.c:1589 builtin/tag.c:604
 msgid "how to strip spaces and #comments from message"
 msgstr ""
 
-#: builtin/commit.c:1591
+#: builtin/commit.c:1590
 msgid "include status in commit message template"
 msgstr ""
 
-#: builtin/commit.c:1592 builtin/merge.c:225 builtin/revert.c:92
+#: builtin/commit.c:1591 builtin/merge.c:225 builtin/revert.c:92
 #: builtin/tag.c:605
 msgid "key-id"
 msgstr ""
 
-#: builtin/commit.c:1593 builtin/merge.c:226 builtin/revert.c:93
+#: builtin/commit.c:1592 builtin/merge.c:226 builtin/revert.c:93
 msgid "GPG sign commit"
 msgstr ""
 
-#: builtin/commit.c:1596
+#: builtin/commit.c:1595
 msgid "Commit contents options"
 msgstr ""
 
-#: builtin/commit.c:1597
+#: builtin/commit.c:1596
 msgid "commit all changed files"
 msgstr ""
 
-#: builtin/commit.c:1598
+#: builtin/commit.c:1597
 msgid "add specified files to index for commit"
 msgstr ""
 
-#: builtin/commit.c:1599
+#: builtin/commit.c:1598
 msgid "interactively add files"
 msgstr ""
 
-#: builtin/commit.c:1600
+#: builtin/commit.c:1599
 msgid "interactively add changes"
 msgstr ""
 
-#: builtin/commit.c:1601
+#: builtin/commit.c:1600
 msgid "commit only specified files"
 msgstr ""
 
-#: builtin/commit.c:1602
+#: builtin/commit.c:1601
 msgid "bypass pre-commit hook"
 msgstr ""
 
-#: builtin/commit.c:1603
+#: builtin/commit.c:1602
 msgid "show what would be committed"
 msgstr ""
 
-#: builtin/commit.c:1614
+#: builtin/commit.c:1613
 msgid "amend previous commit"
 msgstr ""
 
-#: builtin/commit.c:1615
+#: builtin/commit.c:1614
 msgid "bypass post-rewrite hook"
 msgstr ""
 
-#: builtin/commit.c:1620
+#: builtin/commit.c:1619
 msgid "ok to record an empty change"
 msgstr ""
 
-#: builtin/commit.c:1622
+#: builtin/commit.c:1621
 msgid "ok to record a change with an empty message"
 msgstr ""
 
-#: builtin/commit.c:1651
+#: builtin/commit.c:1650
 msgid "could not parse HEAD commit"
 msgstr ""
 
-#: builtin/commit.c:1690 builtin/merge.c:519
+#: builtin/commit.c:1689 builtin/merge.c:1076
 #, c-format
 msgid "could not open '%s' for reading"
 msgstr ""
 
-#: builtin/commit.c:1697
+#: builtin/commit.c:1696
 #, c-format
 msgid "Corrupt MERGE_HEAD file (%s)"
 msgstr ""
 
-#: builtin/commit.c:1704
+#: builtin/commit.c:1703
 msgid "could not read MERGE_MODE"
 msgstr ""
 
-#: builtin/commit.c:1723
+#: builtin/commit.c:1722
 #, c-format
 msgid "could not read commit message: %s"
 msgstr ""
 
-#: builtin/commit.c:1734
+#: builtin/commit.c:1733
 #, c-format
 msgid "Aborting commit; you did not edit the message.\n"
 msgstr ""
 
-#: builtin/commit.c:1739
+#: builtin/commit.c:1738
 #, c-format
 msgid "Aborting commit due to empty commit message.\n"
 msgstr ""
 
-#: builtin/commit.c:1754 builtin/merge.c:851 builtin/merge.c:876
+#: builtin/commit.c:1753 builtin/merge.c:829 builtin/merge.c:854
 msgid "failed to write commit object"
 msgstr ""
 
-#: builtin/commit.c:1787
+#: builtin/commit.c:1786
 msgid ""
 "Repository has been updated, but unable to write\n"
 "new_index file. Check that disk is not full and quota is\n"
 "not exceeded, and then \"git reset HEAD\" to recover."
 msgstr ""
 
@@ -4676,19 +4756,19 @@
 msgstr ""
 
 #: builtin/config.c:457
 #, c-format
 msgid ""
 "# This is Git's per-user configuration file.\n"
-"[core]\n"
+"[user]\n"
 "# Please adapt and uncomment the following lines:\n"
-"#\tuser = %s\n"
+"#\tname = %s\n"
 "#\temail = %s\n"
 msgstr ""
 
-#: builtin/config.c:589
+#: builtin/config.c:587
 #, c-format
 msgid "cannot create configuration file %s"
 msgstr ""
 
 #: builtin/count-objects.c:55
 msgid "git count-objects [-v] [-H | --human-readable]"
@@ -5006,360 +5086,360 @@
 msgstr ""
 
 #: builtin/fetch.c:125
 msgid "specify fetch refmap"
 msgstr ""
 
-#: builtin/fetch.c:375
+#: builtin/fetch.c:377
 msgid "Couldn't find remote ref HEAD"
 msgstr ""
 
-#: builtin/fetch.c:455
+#: builtin/fetch.c:457
 #, c-format
 msgid "object %s not found"
 msgstr ""
 
-#: builtin/fetch.c:460
+#: builtin/fetch.c:462
 msgid "[up to date]"
 msgstr ""
 
-#: builtin/fetch.c:474
+#: builtin/fetch.c:476
 #, c-format
 msgid "! %-*s %-*s -> %s  (can't fetch in current branch)"
 msgstr ""
 
-#: builtin/fetch.c:475 builtin/fetch.c:561
+#: builtin/fetch.c:477 builtin/fetch.c:563
 msgid "[rejected]"
 msgstr ""
 
-#: builtin/fetch.c:486
+#: builtin/fetch.c:488
 msgid "[tag update]"
 msgstr ""
 
-#: builtin/fetch.c:488 builtin/fetch.c:523 builtin/fetch.c:541
+#: builtin/fetch.c:490 builtin/fetch.c:525 builtin/fetch.c:543
 msgid "  (unable to update local ref)"
 msgstr ""
 
-#: builtin/fetch.c:506
+#: builtin/fetch.c:508
 msgid "[new tag]"
 msgstr ""
 
-#: builtin/fetch.c:509
+#: builtin/fetch.c:511
 msgid "[new branch]"
 msgstr ""
 
-#: builtin/fetch.c:512
+#: builtin/fetch.c:514
 msgid "[new ref]"
 msgstr ""
 
-#: builtin/fetch.c:557
+#: builtin/fetch.c:559
 msgid "unable to update local ref"
 msgstr ""
 
-#: builtin/fetch.c:557
+#: builtin/fetch.c:559
 msgid "forced update"
 msgstr ""
 
-#: builtin/fetch.c:563
+#: builtin/fetch.c:565
 msgid "(non-fast-forward)"
 msgstr ""
 
-#: builtin/fetch.c:596 builtin/fetch.c:829
+#: builtin/fetch.c:599 builtin/fetch.c:832
 #, c-format
 msgid "cannot open %s: %s\n"
 msgstr ""
 
-#: builtin/fetch.c:605
+#: builtin/fetch.c:608
 #, c-format
 msgid "%s did not send all necessary objects\n"
 msgstr ""
 
-#: builtin/fetch.c:623
+#: builtin/fetch.c:626
 #, c-format
 msgid "reject %s because shallow roots are not allowed to be updated"
 msgstr ""
 
-#: builtin/fetch.c:711 builtin/fetch.c:794
+#: builtin/fetch.c:714 builtin/fetch.c:797
 #, c-format
 msgid "From %.*s\n"
 msgstr ""
 
-#: builtin/fetch.c:722
+#: builtin/fetch.c:725
 #, c-format
 msgid ""
 "some local refs could not be updated; try running\n"
 " 'git remote prune %s' to remove any old, conflicting branches"
 msgstr ""
 
-#: builtin/fetch.c:774
+#: builtin/fetch.c:777
 #, c-format
 msgid "   (%s will become dangling)"
 msgstr ""
 
-#: builtin/fetch.c:775
+#: builtin/fetch.c:778
 #, c-format
 msgid "   (%s has become dangling)"
 msgstr ""
 
-#: builtin/fetch.c:799
+#: builtin/fetch.c:802
 msgid "[deleted]"
 msgstr ""
 
-#: builtin/fetch.c:800 builtin/remote.c:1060
+#: builtin/fetch.c:803 builtin/remote.c:1057
 msgid "(none)"
 msgstr ""
 
-#: builtin/fetch.c:819
+#: builtin/fetch.c:822
 #, c-format
 msgid "Refusing to fetch into current branch %s of non-bare repository"
 msgstr ""
 
-#: builtin/fetch.c:838
+#: builtin/fetch.c:841
 #, c-format
 msgid "Option \"%s\" value \"%s\" is not valid for %s"
 msgstr ""
 
-#: builtin/fetch.c:841
+#: builtin/fetch.c:844
 #, c-format
 msgid "Option \"%s\" is ignored for %s\n"
 msgstr ""
 
-#: builtin/fetch.c:897
+#: builtin/fetch.c:900
 #, c-format
 msgid "Don't know how to fetch from %s"
 msgstr ""
 
-#: builtin/fetch.c:1059
+#: builtin/fetch.c:1063
 #, c-format
 msgid "Fetching %s\n"
 msgstr ""
 
-#: builtin/fetch.c:1061 builtin/remote.c:90
+#: builtin/fetch.c:1065 builtin/remote.c:90
 #, c-format
 msgid "Could not fetch %s"
 msgstr ""
 
-#: builtin/fetch.c:1079
+#: builtin/fetch.c:1083
 msgid ""
 "No remote repository specified.  Please, specify either a URL or a\n"
 "remote name from which new revisions should be fetched."
 msgstr ""
 
-#: builtin/fetch.c:1102
+#: builtin/fetch.c:1106
 msgid "You need to specify a tag name."
 msgstr ""
 
-#: builtin/fetch.c:1144
+#: builtin/fetch.c:1148
 msgid "--depth and --unshallow cannot be used together"
 msgstr ""
 
-#: builtin/fetch.c:1146
+#: builtin/fetch.c:1150
 msgid "--unshallow on a complete repository does not make sense"
 msgstr ""
 
-#: builtin/fetch.c:1169
+#: builtin/fetch.c:1173
 msgid "fetch --all does not take a repository argument"
 msgstr ""
 
-#: builtin/fetch.c:1171
+#: builtin/fetch.c:1175
 msgid "fetch --all does not make sense with refspecs"
 msgstr ""
 
-#: builtin/fetch.c:1182
+#: builtin/fetch.c:1186
 #, c-format
 msgid "No such remote or remote group: %s"
 msgstr ""
 
-#: builtin/fetch.c:1190
+#: builtin/fetch.c:1194
 msgid "Fetching a group and specifying refspecs does not make sense"
 msgstr ""
 
 #: builtin/fmt-merge-msg.c:13
 msgid ""
 "git fmt-merge-msg [-m <message>] [--log[=<n>] | --no-log] [--file <file>]"
 msgstr ""
 
-#: builtin/fmt-merge-msg.c:662 builtin/fmt-merge-msg.c:665 builtin/grep.c:698
+#: builtin/fmt-merge-msg.c:668 builtin/fmt-merge-msg.c:671 builtin/grep.c:698
 #: builtin/merge.c:198 builtin/repack.c:178 builtin/repack.c:182
-#: builtin/show-branch.c:657 builtin/show-ref.c:178 builtin/tag.c:590
-#: parse-options.h:132 parse-options.h:239
+#: builtin/show-branch.c:664 builtin/show-ref.c:180 builtin/tag.c:590
+#: parse-options.h:131 parse-options.h:238
 msgid "n"
 msgstr ""
 
-#: builtin/fmt-merge-msg.c:663
+#: builtin/fmt-merge-msg.c:669
 msgid "populate log with at most <n> entries from shortlog"
 msgstr ""
 
-#: builtin/fmt-merge-msg.c:666
+#: builtin/fmt-merge-msg.c:672
 msgid "alias for --log (deprecated)"
 msgstr ""
 
-#: builtin/fmt-merge-msg.c:669
+#: builtin/fmt-merge-msg.c:675
 msgid "text"
 msgstr ""
 
-#: builtin/fmt-merge-msg.c:670
+#: builtin/fmt-merge-msg.c:676
 msgid "use <text> as start of message"
 msgstr ""
 
-#: builtin/fmt-merge-msg.c:671
+#: builtin/fmt-merge-msg.c:677
 msgid "file to read from"
 msgstr ""
 
-#: builtin/for-each-ref.c:675
+#: builtin/for-each-ref.c:687
 msgid "unable to parse format"
 msgstr ""
 
-#: builtin/for-each-ref.c:1063
+#: builtin/for-each-ref.c:1083
 msgid "git for-each-ref [<options>] [<pattern>]"
 msgstr ""
 
-#: builtin/for-each-ref.c:1078
+#: builtin/for-each-ref.c:1098
 msgid "quote placeholders suitably for shells"
 msgstr ""
 
-#: builtin/for-each-ref.c:1080
+#: builtin/for-each-ref.c:1100
 msgid "quote placeholders suitably for perl"
 msgstr ""
 
-#: builtin/for-each-ref.c:1082
+#: builtin/for-each-ref.c:1102
 msgid "quote placeholders suitably for python"
 msgstr ""
 
-#: builtin/for-each-ref.c:1084
+#: builtin/for-each-ref.c:1104
 msgid "quote placeholders suitably for Tcl"
 msgstr ""
 
-#: builtin/for-each-ref.c:1087
+#: builtin/for-each-ref.c:1107
 msgid "show only <n> matched refs"
 msgstr ""
 
-#: builtin/for-each-ref.c:1088 builtin/replace.c:438
+#: builtin/for-each-ref.c:1108 builtin/replace.c:438
 msgid "format"
 msgstr ""
 
-#: builtin/for-each-ref.c:1088
+#: builtin/for-each-ref.c:1108
 msgid "format to use for the output"
 msgstr ""
 
-#: builtin/for-each-ref.c:1089
+#: builtin/for-each-ref.c:1109
 msgid "key"
 msgstr ""
 
-#: builtin/for-each-ref.c:1090
+#: builtin/for-each-ref.c:1110
 msgid "field name to sort on"
 msgstr ""
 
 #: builtin/fsck.c:147 builtin/prune.c:137
 msgid "Checking connectivity"
 msgstr ""
 
-#: builtin/fsck.c:540
+#: builtin/fsck.c:548
 msgid "Checking object directories"
 msgstr ""
 
-#: builtin/fsck.c:603
+#: builtin/fsck.c:611
 msgid "git fsck [<options>] [<object>...]"
 msgstr ""
 
-#: builtin/fsck.c:609
+#: builtin/fsck.c:617
 msgid "show unreachable objects"
 msgstr ""
 
-#: builtin/fsck.c:610
+#: builtin/fsck.c:618
 msgid "show dangling objects"
 msgstr ""
 
-#: builtin/fsck.c:611
+#: builtin/fsck.c:619
 msgid "report tags"
 msgstr ""
 
-#: builtin/fsck.c:612
+#: builtin/fsck.c:620
 msgid "report root nodes"
 msgstr ""
 
-#: builtin/fsck.c:613
+#: builtin/fsck.c:621
 msgid "make index objects head nodes"
 msgstr ""
 
-#: builtin/fsck.c:614
+#: builtin/fsck.c:622
 msgid "make reflogs head nodes (default)"
 msgstr ""
 
-#: builtin/fsck.c:615
+#: builtin/fsck.c:623
 msgid "also consider packs and alternate objects"
 msgstr ""
 
-#: builtin/fsck.c:616
+#: builtin/fsck.c:624
 msgid "enable more strict checking"
 msgstr ""
 
-#: builtin/fsck.c:618
+#: builtin/fsck.c:626
 msgid "write dangling objects in .git/lost-found"
 msgstr ""
 
-#: builtin/fsck.c:619 builtin/prune.c:108
+#: builtin/fsck.c:627 builtin/prune.c:107
 msgid "show progress"
 msgstr ""
 
-#: builtin/fsck.c:669
+#: builtin/fsck.c:677
 msgid "Checking objects"
 msgstr ""
 
 #: builtin/gc.c:24
 msgid "git gc [<options>]"
 msgstr ""
 
-#: builtin/gc.c:79
+#: builtin/gc.c:67
 #, c-format
-msgid "Invalid gc.pruneexpire: '%s'"
+msgid "Invalid %s: '%s'"
 msgstr ""
 
-#: builtin/gc.c:107
+#: builtin/gc.c:112
 #, c-format
 msgid "insanely long object directory %.*s"
 msgstr ""
 
-#: builtin/gc.c:276
+#: builtin/gc.c:281
 msgid "prune unreferenced objects"
 msgstr ""
 
-#: builtin/gc.c:278
+#: builtin/gc.c:283
 msgid "be more thorough (increased runtime)"
 msgstr ""
 
-#: builtin/gc.c:279
+#: builtin/gc.c:284
 msgid "enable auto-gc mode"
 msgstr ""
 
-#: builtin/gc.c:280
+#: builtin/gc.c:285
 msgid "force running gc even if there may be another gc running"
 msgstr ""
 
-#: builtin/gc.c:321
+#: builtin/gc.c:327
 #, c-format
 msgid "Auto packing the repository in background for optimum performance.\n"
 msgstr ""
 
-#: builtin/gc.c:323
+#: builtin/gc.c:329
 #, c-format
 msgid "Auto packing the repository for optimum performance.\n"
 msgstr ""
 
-#: builtin/gc.c:324
+#: builtin/gc.c:330
 #, c-format
 msgid "See \"git help gc\" for manual housekeeping.\n"
 msgstr ""
 
-#: builtin/gc.c:342
+#: builtin/gc.c:348
 #, c-format
 msgid ""
 "gc is already running on machine '%s' pid %<PRIuMAX> (use --force if not)"
 msgstr ""
 
-#: builtin/gc.c:364
+#: builtin/gc.c:376
 msgid ""
 "There are too many unreachable loose objects; run 'git prune' to remove them."
 msgstr ""
 
 #: builtin/grep.c:23
 msgid "git grep [<options>] [-e] <pattern> [<rev>...] [[--] <path>...]"
@@ -5555,13 +5635,13 @@
 msgstr ""
 
 #: builtin/grep.c:740
 msgid "allow calling of grep(1) (ignored by this build)"
 msgstr ""
 
-#: builtin/grep.c:741 builtin/show-ref.c:187
+#: builtin/grep.c:741 builtin/show-ref.c:189
 msgid "show usage"
 msgstr ""
 
 #: builtin/grep.c:808
 msgid "no pattern given."
 msgstr ""
@@ -5583,48 +5663,48 @@
 msgstr ""
 
 #: builtin/grep.c:908
 msgid "both --cached and trees are given."
 msgstr ""
 
-#: builtin/hash-object.c:82
+#: builtin/hash-object.c:80
 msgid ""
 "git hash-object [-t <type>] [-w] [--path=<file> | --no-filters] [--stdin] "
 "[--] <file>..."
 msgstr ""
 
-#: builtin/hash-object.c:83
+#: builtin/hash-object.c:81
 msgid "git hash-object  --stdin-paths < <list-of-paths>"
 msgstr ""
 
-#: builtin/hash-object.c:94 builtin/tag.c:612
+#: builtin/hash-object.c:92 builtin/tag.c:612
 msgid "type"
 msgstr ""
 
-#: builtin/hash-object.c:94
+#: builtin/hash-object.c:92
 msgid "object type"
 msgstr ""
 
-#: builtin/hash-object.c:95
+#: builtin/hash-object.c:93
 msgid "write the object into the object database"
 msgstr ""
 
-#: builtin/hash-object.c:97
+#: builtin/hash-object.c:95
 msgid "read the object from stdin"
 msgstr ""
 
-#: builtin/hash-object.c:99
+#: builtin/hash-object.c:97
 msgid "store file as is without filters"
 msgstr ""
 
-#: builtin/hash-object.c:100
+#: builtin/hash-object.c:98
 msgid ""
 "just hash any random garbage to create corrupt objects for debugging Git"
 msgstr ""
 
-#: builtin/hash-object.c:101
+#: builtin/hash-object.c:99
 msgid "process file as it were from this path"
 msgstr ""
 
 #: builtin/help.c:41
 msgid "print all available commands"
 msgstr ""
@@ -5742,297 +5822,297 @@
 
 #: builtin/help.c:501
 #, c-format
 msgid "`git %s' is aliased to `%s'"
 msgstr ""
 
-#: builtin/index-pack.c:150
+#: builtin/index-pack.c:151
 #, c-format
 msgid "unable to open %s"
 msgstr ""
 
-#: builtin/index-pack.c:200
+#: builtin/index-pack.c:201
 #, c-format
 msgid "object type mismatch at %s"
 msgstr ""
 
-#: builtin/index-pack.c:220
+#: builtin/index-pack.c:221
 #, c-format
 msgid "did not receive expected object %s"
 msgstr ""
 
-#: builtin/index-pack.c:223
+#: builtin/index-pack.c:224
 #, c-format
 msgid "object %s: expected type %s, found %s"
 msgstr ""
 
-#: builtin/index-pack.c:265
+#: builtin/index-pack.c:266
 #, c-format
 msgid "cannot fill %d byte"
 msgid_plural "cannot fill %d bytes"
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/index-pack.c:275
+#: builtin/index-pack.c:276
 msgid "early EOF"
 msgstr ""
 
-#: builtin/index-pack.c:276
+#: builtin/index-pack.c:277
 msgid "read error on input"
 msgstr ""
 
-#: builtin/index-pack.c:288
+#: builtin/index-pack.c:289
 msgid "used more bytes than were available"
 msgstr ""
 
-#: builtin/index-pack.c:295
+#: builtin/index-pack.c:296
 msgid "pack too large for current definition of off_t"
 msgstr ""
 
-#: builtin/index-pack.c:311
+#: builtin/index-pack.c:312
 #, c-format
 msgid "unable to create '%s'"
 msgstr ""
 
-#: builtin/index-pack.c:316
+#: builtin/index-pack.c:317
 #, c-format
 msgid "cannot open packfile '%s'"
 msgstr ""
 
-#: builtin/index-pack.c:330
+#: builtin/index-pack.c:331
 msgid "pack signature mismatch"
 msgstr ""
 
-#: builtin/index-pack.c:332
+#: builtin/index-pack.c:333
 #, c-format
 msgid "pack version %<PRIu32> unsupported"
 msgstr ""
 
-#: builtin/index-pack.c:350
+#: builtin/index-pack.c:351
 #, c-format
 msgid "pack has bad object at offset %lu: %s"
 msgstr ""
 
-#: builtin/index-pack.c:471
+#: builtin/index-pack.c:472
 #, c-format
 msgid "inflate returned %d"
 msgstr ""
 
-#: builtin/index-pack.c:520
+#: builtin/index-pack.c:521
 msgid "offset value overflow for delta base object"
 msgstr ""
 
-#: builtin/index-pack.c:528
+#: builtin/index-pack.c:529
 msgid "delta base offset is out of bound"
 msgstr ""
 
-#: builtin/index-pack.c:536
+#: builtin/index-pack.c:537
 #, c-format
 msgid "unknown object type %d"
 msgstr ""
 
-#: builtin/index-pack.c:567
+#: builtin/index-pack.c:568
 msgid "cannot pread pack file"
 msgstr ""
 
-#: builtin/index-pack.c:569
+#: builtin/index-pack.c:570
 #, c-format
 msgid "premature end of pack file, %lu byte missing"
 msgid_plural "premature end of pack file, %lu bytes missing"
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/index-pack.c:595
+#: builtin/index-pack.c:596
 msgid "serious inflate inconsistency"
 msgstr ""
 
-#: builtin/index-pack.c:686 builtin/index-pack.c:692 builtin/index-pack.c:715
-#: builtin/index-pack.c:749 builtin/index-pack.c:758
+#: builtin/index-pack.c:742 builtin/index-pack.c:748 builtin/index-pack.c:771
+#: builtin/index-pack.c:805 builtin/index-pack.c:814
 #, c-format
 msgid "SHA1 COLLISION FOUND WITH %s !"
 msgstr ""
 
-#: builtin/index-pack.c:689 builtin/pack-objects.c:162
+#: builtin/index-pack.c:745 builtin/pack-objects.c:162
 #: builtin/pack-objects.c:254
 #, c-format
 msgid "unable to read %s"
 msgstr ""
 
-#: builtin/index-pack.c:755
+#: builtin/index-pack.c:811
 #, c-format
 msgid "cannot read existing object %s"
 msgstr ""
 
-#: builtin/index-pack.c:769
+#: builtin/index-pack.c:825
 #, c-format
 msgid "invalid blob object %s"
 msgstr ""
 
-#: builtin/index-pack.c:783
+#: builtin/index-pack.c:839
 #, c-format
 msgid "invalid %s"
 msgstr ""
 
-#: builtin/index-pack.c:787
+#: builtin/index-pack.c:843
 msgid "Error in object"
 msgstr ""
 
-#: builtin/index-pack.c:789
+#: builtin/index-pack.c:845
 #, c-format
 msgid "Not all child objects of %s are reachable"
 msgstr ""
 
-#: builtin/index-pack.c:861 builtin/index-pack.c:890
+#: builtin/index-pack.c:917 builtin/index-pack.c:948
 msgid "failed to apply delta"
 msgstr ""
 
-#: builtin/index-pack.c:1055
+#: builtin/index-pack.c:1118
 msgid "Receiving objects"
 msgstr ""
 
-#: builtin/index-pack.c:1055
+#: builtin/index-pack.c:1118
 msgid "Indexing objects"
 msgstr ""
 
-#: builtin/index-pack.c:1081
+#: builtin/index-pack.c:1150
 msgid "pack is corrupted (SHA1 mismatch)"
 msgstr ""
 
-#: builtin/index-pack.c:1086
+#: builtin/index-pack.c:1155
 msgid "cannot fstat packfile"
 msgstr ""
 
-#: builtin/index-pack.c:1089
+#: builtin/index-pack.c:1158
 msgid "pack has junk at the end"
 msgstr ""
 
-#: builtin/index-pack.c:1100
+#: builtin/index-pack.c:1169
 msgid "confusion beyond insanity in parse_pack_objects()"
 msgstr ""
 
-#: builtin/index-pack.c:1123
+#: builtin/index-pack.c:1194
 msgid "Resolving deltas"
 msgstr ""
 
-#: builtin/index-pack.c:1133
+#: builtin/index-pack.c:1205
 #, c-format
 msgid "unable to create thread: %s"
 msgstr ""
 
-#: builtin/index-pack.c:1175
+#: builtin/index-pack.c:1247
 msgid "confusion beyond insanity"
 msgstr ""
 
-#: builtin/index-pack.c:1181
+#: builtin/index-pack.c:1253
 #, c-format
 msgid "completed with %d local objects"
 msgstr ""
 
-#: builtin/index-pack.c:1191
+#: builtin/index-pack.c:1263
 #, c-format
 msgid "Unexpected tail checksum for %s (disk corruption?)"
 msgstr ""
 
-#: builtin/index-pack.c:1195
+#: builtin/index-pack.c:1267
 #, c-format
 msgid "pack has %d unresolved delta"
 msgid_plural "pack has %d unresolved deltas"
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/index-pack.c:1219
+#: builtin/index-pack.c:1291
 #, c-format
 msgid "unable to deflate appended object (%d)"
 msgstr ""
 
-#: builtin/index-pack.c:1298
+#: builtin/index-pack.c:1367
 #, c-format
 msgid "local object %s is corrupt"
 msgstr ""
 
-#: builtin/index-pack.c:1322
+#: builtin/index-pack.c:1391
 msgid "error while closing pack file"
 msgstr ""
 
-#: builtin/index-pack.c:1335
+#: builtin/index-pack.c:1404
 #, c-format
 msgid "cannot write keep file '%s'"
 msgstr ""
 
-#: builtin/index-pack.c:1343
+#: builtin/index-pack.c:1412
 #, c-format
 msgid "cannot close written keep file '%s'"
 msgstr ""
 
-#: builtin/index-pack.c:1356
+#: builtin/index-pack.c:1425
 msgid "cannot store pack file"
 msgstr ""
 
-#: builtin/index-pack.c:1367
+#: builtin/index-pack.c:1436
 msgid "cannot store index file"
 msgstr ""
 
-#: builtin/index-pack.c:1400
+#: builtin/index-pack.c:1469
 #, c-format
 msgid "bad pack.indexversion=%<PRIu32>"
 msgstr ""
 
-#: builtin/index-pack.c:1406
+#: builtin/index-pack.c:1475
 #, c-format
 msgid "invalid number of threads specified (%d)"
 msgstr ""
 
-#: builtin/index-pack.c:1410 builtin/index-pack.c:1589
+#: builtin/index-pack.c:1479 builtin/index-pack.c:1658
 #, c-format
 msgid "no threads support, ignoring %s"
 msgstr ""
 
-#: builtin/index-pack.c:1468
+#: builtin/index-pack.c:1537
 #, c-format
 msgid "Cannot open existing pack file '%s'"
 msgstr ""
 
-#: builtin/index-pack.c:1470
+#: builtin/index-pack.c:1539
 #, c-format
 msgid "Cannot open existing pack idx file for '%s'"
 msgstr ""
 
-#: builtin/index-pack.c:1517
+#: builtin/index-pack.c:1586
 #, c-format
 msgid "non delta: %d object"
 msgid_plural "non delta: %d objects"
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/index-pack.c:1524
+#: builtin/index-pack.c:1593
 #, c-format
 msgid "chain length = %d: %lu object"
 msgid_plural "chain length = %d: %lu objects"
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/index-pack.c:1553
+#: builtin/index-pack.c:1622
 msgid "Cannot come back to cwd"
 msgstr ""
 
-#: builtin/index-pack.c:1601 builtin/index-pack.c:1604
-#: builtin/index-pack.c:1616 builtin/index-pack.c:1620
+#: builtin/index-pack.c:1670 builtin/index-pack.c:1673
+#: builtin/index-pack.c:1685 builtin/index-pack.c:1689
 #, c-format
 msgid "bad %s"
 msgstr ""
 
-#: builtin/index-pack.c:1634
+#: builtin/index-pack.c:1703
 msgid "--fix-thin cannot be used without --stdin"
 msgstr ""
 
-#: builtin/index-pack.c:1638 builtin/index-pack.c:1647
+#: builtin/index-pack.c:1707 builtin/index-pack.c:1716
 #, c-format
 msgid "packfile name '%s' does not end with '.pack'"
 msgstr ""
 
-#: builtin/index-pack.c:1655
+#: builtin/index-pack.c:1724
 msgid "--verify with no packfile name given"
 msgstr ""
 
 #: builtin/init-db.c:35
 #, c-format
 msgid "Could not make %s writable by group"
@@ -6095,88 +6175,88 @@
 
 #: builtin/init-db.c:157
 #, c-format
 msgid "not copying templates of a wrong format version %d from '%s'"
 msgstr ""
 
-#: builtin/init-db.c:197
+#: builtin/init-db.c:211
 #, c-format
 msgid "insane git directory %s"
 msgstr ""
 
-#: builtin/init-db.c:331 builtin/init-db.c:334
+#: builtin/init-db.c:343 builtin/init-db.c:346
 #, c-format
 msgid "%s already exists"
 msgstr ""
 
-#: builtin/init-db.c:363
+#: builtin/init-db.c:374
 #, c-format
 msgid "unable to handle file type %d"
 msgstr ""
 
-#: builtin/init-db.c:366
+#: builtin/init-db.c:377
 #, c-format
 msgid "unable to move %s to %s"
 msgstr ""
 
 #. TRANSLATORS: The first '%s' is either "Reinitialized
 #. existing" or "Initialized empty", the second " shared" or
 #. "", and the last '%s%s' is the verbatim directory name.
-#: builtin/init-db.c:426
+#: builtin/init-db.c:433
 #, c-format
 msgid "%s%s Git repository in %s%s\n"
 msgstr ""
 
-#: builtin/init-db.c:427
+#: builtin/init-db.c:434
 msgid "Reinitialized existing"
 msgstr ""
 
-#: builtin/init-db.c:427
+#: builtin/init-db.c:434
 msgid "Initialized empty"
 msgstr ""
 
-#: builtin/init-db.c:428
+#: builtin/init-db.c:435
 msgid " shared"
 msgstr ""
 
-#: builtin/init-db.c:475
+#: builtin/init-db.c:482
 msgid ""
 "git init [-q | --quiet] [--bare] [--template=<template-directory>] [--"
 "shared[=<permissions>]] [<directory>]"
 msgstr ""
 
-#: builtin/init-db.c:498
+#: builtin/init-db.c:505
 msgid "permissions"
 msgstr ""
 
-#: builtin/init-db.c:499
+#: builtin/init-db.c:506
 msgid "specify that the git repository is to be shared amongst several users"
 msgstr ""
 
-#: builtin/init-db.c:501 builtin/prune-packed.c:57 builtin/repack.c:171
+#: builtin/init-db.c:508 builtin/prune-packed.c:57 builtin/repack.c:171
 msgid "be quiet"
 msgstr ""
 
-#: builtin/init-db.c:533 builtin/init-db.c:538
+#: builtin/init-db.c:540 builtin/init-db.c:545
 #, c-format
 msgid "cannot mkdir %s"
 msgstr ""
 
-#: builtin/init-db.c:542
+#: builtin/init-db.c:549
 #, c-format
 msgid "cannot chdir to %s"
 msgstr ""
 
-#: builtin/init-db.c:563
+#: builtin/init-db.c:570
 #, c-format
 msgid ""
 "%s (or --work-tree=<directory>) not allowed without specifying %s (or --git-"
 "dir=<directory>)"
 msgstr ""
 
-#: builtin/init-db.c:591
+#: builtin/init-db.c:598
 #, c-format
 msgid "Cannot access work tree '%s'"
 msgstr ""
 
 #: builtin/interpret-trailers.c:15
 msgid ""
@@ -6194,13 +6274,13 @@
 
 #: builtin/interpret-trailers.c:27
 msgid "trailer(s) to add"
 msgstr ""
 
 #: builtin/log.c:41
-msgid "git log [<options>] [<revision range>] [[--] <path>...]"
+msgid "git log [<options>] [<revision-range>] [[--] <path>...]"
 msgstr ""
 
 #: builtin/log.c:42
 msgid "git show [<options>] <object>..."
 msgstr ""
 
@@ -6263,13 +6343,13 @@
 msgstr ""
 
 #: builtin/log.c:803
 msgid "Need exactly one range."
 msgstr ""
 
-#: builtin/log.c:811
+#: builtin/log.c:813
 msgid "Not a range."
 msgstr ""
 
 #: builtin/log.c:919
 msgid "Cover letter needs email format"
 msgstr ""
@@ -6463,19 +6543,19 @@
 msgstr ""
 
 #: builtin/log.c:1583
 msgid "git cherry [-v] [<upstream> [<head> [<limit>]]]"
 msgstr ""
 
-#: builtin/log.c:1638
+#: builtin/log.c:1637
 #, c-format
 msgid ""
 "Could not find a tracked remote branch, please specify <upstream> manually.\n"
 msgstr ""
 
-#: builtin/log.c:1651 builtin/log.c:1653 builtin/log.c:1665
+#: builtin/log.c:1648 builtin/log.c:1650 builtin/log.c:1662
 #, c-format
 msgid "Unknown commit %s"
 msgstr ""
 
 #: builtin/ls-files.c:358
 msgid "git ls-files [<options>] [<file>...]"
@@ -6741,205 +6821,210 @@
 
 #: builtin/merge.c:447
 #, c-format
 msgid "'%s' does not point to a commit"
 msgstr ""
 
-#: builtin/merge.c:559
+#: builtin/merge.c:537
 #, c-format
 msgid "Bad branch.%s.mergeoptions string: %s"
 msgstr ""
 
-#: builtin/merge.c:654
+#: builtin/merge.c:632
 msgid "git write-tree failed to write a tree"
 msgstr ""
 
-#: builtin/merge.c:678
+#: builtin/merge.c:656
 msgid "Not handling anything other than two heads merge."
 msgstr ""
 
-#: builtin/merge.c:692
+#: builtin/merge.c:670
 #, c-format
 msgid "Unknown option for merge-recursive: -X%s"
 msgstr ""
 
-#: builtin/merge.c:705
+#: builtin/merge.c:683
 #, c-format
 msgid "unable to write %s"
 msgstr ""
 
-#: builtin/merge.c:794
+#: builtin/merge.c:772
 #, c-format
 msgid "Could not read from '%s'"
 msgstr ""
 
-#: builtin/merge.c:803
+#: builtin/merge.c:781
 #, c-format
 msgid "Not committing merge; use 'git commit' to complete the merge.\n"
 msgstr ""
 
-#: builtin/merge.c:809
+#: builtin/merge.c:787
 #, c-format
 msgid ""
 "Please enter a commit message to explain why this merge is necessary,\n"
 "especially if it merges an updated upstream into a topic branch.\n"
 "\n"
 "Lines starting with '%c' will be ignored, and an empty message aborts\n"
 "the commit.\n"
 msgstr ""
 
-#: builtin/merge.c:833
+#: builtin/merge.c:811
 msgid "Empty commit message."
 msgstr ""
 
-#: builtin/merge.c:845
+#: builtin/merge.c:823
 #, c-format
 msgid "Wonderful.\n"
 msgstr ""
 
-#: builtin/merge.c:900
+#: builtin/merge.c:878
 #, c-format
 msgid "Automatic merge failed; fix conflicts and then commit the result.\n"
 msgstr ""
 
-#: builtin/merge.c:916
+#: builtin/merge.c:894
 #, c-format
 msgid "'%s' is not a commit"
 msgstr ""
 
-#: builtin/merge.c:957
+#: builtin/merge.c:935
 msgid "No current branch."
 msgstr ""
 
-#: builtin/merge.c:959
+#: builtin/merge.c:937
 msgid "No remote for the current branch."
 msgstr ""
 
-#: builtin/merge.c:961
+#: builtin/merge.c:939
 msgid "No default upstream defined for the current branch."
 msgstr ""
 
-#: builtin/merge.c:966
+#: builtin/merge.c:944
 #, c-format
 msgid "No remote-tracking branch for %s from %s"
 msgstr ""
 
-#: builtin/merge.c:1122
+#: builtin/merge.c:1081
+#, c-format
+msgid "could not close '%s'"
+msgstr ""
+
+#: builtin/merge.c:1208
 msgid "There is no merge to abort (MERGE_HEAD missing)."
 msgstr ""
 
-#: builtin/merge.c:1138
+#: builtin/merge.c:1224
 msgid ""
 "You have not concluded your merge (MERGE_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 
-#: builtin/merge.c:1141 git-pull.sh:34
+#: builtin/merge.c:1227 git-pull.sh:74
 msgid "You have not concluded your merge (MERGE_HEAD exists)."
 msgstr ""
 
-#: builtin/merge.c:1145
+#: builtin/merge.c:1231
 msgid ""
 "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 
-#: builtin/merge.c:1148
+#: builtin/merge.c:1234
 msgid "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists)."
 msgstr ""
 
-#: builtin/merge.c:1157
+#: builtin/merge.c:1243
 msgid "You cannot combine --squash with --no-ff."
 msgstr ""
 
-#: builtin/merge.c:1166
+#: builtin/merge.c:1251
 msgid "No commit specified and merge.defaultToUpstream not set."
 msgstr ""
 
-#: builtin/merge.c:1198
-msgid "Can merge only exactly one commit into empty head"
-msgstr ""
-
-#: builtin/merge.c:1201
+#: builtin/merge.c:1268
 msgid "Squash commit into empty head not supported yet"
 msgstr ""
 
-#: builtin/merge.c:1203
+#: builtin/merge.c:1270
 msgid "Non-fast-forward commit does not make sense into an empty head"
 msgstr ""
 
-#: builtin/merge.c:1208
+#: builtin/merge.c:1276
 #, c-format
 msgid "%s - not something we can merge"
 msgstr ""
 
-#: builtin/merge.c:1259
+#: builtin/merge.c:1278
+msgid "Can merge only exactly one commit into empty head"
+msgstr ""
+
+#: builtin/merge.c:1333
 #, c-format
 msgid "Commit %s has an untrusted GPG signature, allegedly by %s."
 msgstr ""
 
-#: builtin/merge.c:1262
+#: builtin/merge.c:1336
 #, c-format
 msgid "Commit %s has a bad GPG signature allegedly by %s."
 msgstr ""
 
-#: builtin/merge.c:1265
+#: builtin/merge.c:1339
 #, c-format
 msgid "Commit %s does not have a GPG signature."
 msgstr ""
 
-#: builtin/merge.c:1268
+#: builtin/merge.c:1342
 #, c-format
 msgid "Commit %s has a good GPG signature by %s\n"
 msgstr ""
 
-#: builtin/merge.c:1349
+#: builtin/merge.c:1423
 #, c-format
 msgid "Updating %s..%s\n"
 msgstr ""
 
-#: builtin/merge.c:1388
+#: builtin/merge.c:1462
 #, c-format
 msgid "Trying really trivial in-index merge...\n"
 msgstr ""
 
-#: builtin/merge.c:1395
+#: builtin/merge.c:1469
 #, c-format
 msgid "Nope.\n"
 msgstr ""
 
-#: builtin/merge.c:1427
+#: builtin/merge.c:1501
 msgid "Not possible to fast-forward, aborting."
 msgstr ""
 
-#: builtin/merge.c:1450 builtin/merge.c:1529
+#: builtin/merge.c:1524 builtin/merge.c:1603
 #, c-format
 msgid "Rewinding the tree to pristine...\n"
 msgstr ""
 
-#: builtin/merge.c:1454
+#: builtin/merge.c:1528
 #, c-format
 msgid "Trying merge strategy %s...\n"
 msgstr ""
 
-#: builtin/merge.c:1520
+#: builtin/merge.c:1594
 #, c-format
 msgid "No merge strategy handled the merge.\n"
 msgstr ""
 
-#: builtin/merge.c:1522
+#: builtin/merge.c:1596
 #, c-format
 msgid "Merge with strategy %s failed.\n"
 msgstr ""
 
-#: builtin/merge.c:1531
+#: builtin/merge.c:1605
 #, c-format
 msgid "Using the %s to prepare resolving by hand.\n"
 msgstr ""
 
-#: builtin/merge.c:1543
+#: builtin/merge.c:1617
 #, c-format
 msgid "Automatic merge went well; stopped before committing as requested\n"
 msgstr ""
 
 #: builtin/merge-base.c:29
 msgid "git merge-base [-a | --all] <commit> <commit>..."
@@ -7119,13 +7204,13 @@
 
 #: builtin/mv.c:253
 #, c-format
 msgid "Renaming %s to %s\n"
 msgstr ""
 
-#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:359
+#: builtin/mv.c:256 builtin/remote.c:725 builtin/repack.c:361
 #, c-format
 msgid "renaming '%s' failed"
 msgstr ""
 
 #: builtin/name-rev.c:255
 msgid "git name-rev [<options>] <commit>..."
@@ -7478,13 +7563,13 @@
 msgstr ""
 
 #: builtin/notes.c:954
 msgid "use notes from <notes-ref>"
 msgstr ""
 
-#: builtin/notes.c:989 builtin/remote.c:1621
+#: builtin/notes.c:989 builtin/remote.c:1618
 #, c-format
 msgid "Unknown subcommand: %s"
 msgstr ""
 
 #: builtin/pack-objects.c:28
 msgid "git pack-objects --stdout [options...] [< ref-list | < object-list]"
@@ -7500,177 +7585,177 @@
 msgstr ""
 
 #: builtin/pack-objects.c:771
 msgid "Writing objects"
 msgstr ""
 
-#: builtin/pack-objects.c:1013
+#: builtin/pack-objects.c:1011
 msgid "disabling bitmap writing, as some objects are not being packed"
 msgstr ""
 
-#: builtin/pack-objects.c:2173
+#: builtin/pack-objects.c:2171
 msgid "Compressing objects"
 msgstr ""
 
-#: builtin/pack-objects.c:2570
+#: builtin/pack-objects.c:2568
 #, c-format
 msgid "unsupported index version %s"
 msgstr ""
 
-#: builtin/pack-objects.c:2574
+#: builtin/pack-objects.c:2572
 #, c-format
 msgid "bad index version '%s'"
 msgstr ""
 
-#: builtin/pack-objects.c:2597
+#: builtin/pack-objects.c:2595
 #, c-format
 msgid "option %s does not accept negative form"
 msgstr ""
 
-#: builtin/pack-objects.c:2601
+#: builtin/pack-objects.c:2599
 #, c-format
 msgid "unable to parse value '%s' for option %s"
 msgstr ""
 
-#: builtin/pack-objects.c:2621
+#: builtin/pack-objects.c:2619
 msgid "do not show progress meter"
 msgstr ""
 
-#: builtin/pack-objects.c:2623
+#: builtin/pack-objects.c:2621
 msgid "show progress meter"
 msgstr ""
 
-#: builtin/pack-objects.c:2625
+#: builtin/pack-objects.c:2623
 msgid "show progress meter during object writing phase"
 msgstr ""
 
-#: builtin/pack-objects.c:2628
+#: builtin/pack-objects.c:2626
 msgid "similar to --all-progress when progress meter is shown"
 msgstr ""
 
-#: builtin/pack-objects.c:2629
+#: builtin/pack-objects.c:2627
 msgid "version[,offset]"
 msgstr ""
 
-#: builtin/pack-objects.c:2630
+#: builtin/pack-objects.c:2628
 msgid "write the pack index file in the specified idx format version"
 msgstr ""
 
-#: builtin/pack-objects.c:2633
+#: builtin/pack-objects.c:2631
 msgid "maximum size of each output pack file"
 msgstr ""
 
-#: builtin/pack-objects.c:2635
+#: builtin/pack-objects.c:2633
 msgid "ignore borrowed objects from alternate object store"
 msgstr ""
 
-#: builtin/pack-objects.c:2637
+#: builtin/pack-objects.c:2635
 msgid "ignore packed objects"
 msgstr ""
 
-#: builtin/pack-objects.c:2639
+#: builtin/pack-objects.c:2637
 msgid "limit pack window by objects"
 msgstr ""
 
-#: builtin/pack-objects.c:2641
+#: builtin/pack-objects.c:2639
 msgid "limit pack window by memory in addition to object limit"
 msgstr ""
 
-#: builtin/pack-objects.c:2643
+#: builtin/pack-objects.c:2641
 msgid "maximum length of delta chain allowed in the resulting pack"
 msgstr ""
 
-#: builtin/pack-objects.c:2645
+#: builtin/pack-objects.c:2643
 msgid "reuse existing deltas"
 msgstr ""
 
-#: builtin/pack-objects.c:2647
+#: builtin/pack-objects.c:2645
 msgid "reuse existing objects"
 msgstr ""
 
-#: builtin/pack-objects.c:2649
+#: builtin/pack-objects.c:2647
 msgid "use OFS_DELTA objects"
 msgstr ""
 
-#: builtin/pack-objects.c:2651
+#: builtin/pack-objects.c:2649
 msgid "use threads when searching for best delta matches"
 msgstr ""
 
-#: builtin/pack-objects.c:2653
+#: builtin/pack-objects.c:2651
 msgid "do not create an empty pack output"
 msgstr ""
 
-#: builtin/pack-objects.c:2655
+#: builtin/pack-objects.c:2653
 msgid "read revision arguments from standard input"
 msgstr ""
 
-#: builtin/pack-objects.c:2657
+#: builtin/pack-objects.c:2655
 msgid "limit the objects to those that are not yet packed"
 msgstr ""
 
-#: builtin/pack-objects.c:2660
+#: builtin/pack-objects.c:2658
 msgid "include objects reachable from any reference"
 msgstr ""
 
-#: builtin/pack-objects.c:2663
+#: builtin/pack-objects.c:2661
 msgid "include objects referred by reflog entries"
 msgstr ""
 
-#: builtin/pack-objects.c:2666
+#: builtin/pack-objects.c:2664
 msgid "include objects referred to by the index"
 msgstr ""
 
-#: builtin/pack-objects.c:2669
+#: builtin/pack-objects.c:2667
 msgid "output pack to stdout"
 msgstr ""
 
-#: builtin/pack-objects.c:2671
+#: builtin/pack-objects.c:2669
 msgid "include tag objects that refer to objects to be packed"
 msgstr ""
 
-#: builtin/pack-objects.c:2673
+#: builtin/pack-objects.c:2671
 msgid "keep unreachable objects"
 msgstr ""
 
-#: builtin/pack-objects.c:2674 parse-options.h:140
+#: builtin/pack-objects.c:2672 parse-options.h:139
 msgid "time"
 msgstr ""
 
-#: builtin/pack-objects.c:2675
+#: builtin/pack-objects.c:2673
 msgid "unpack unreachable objects newer than <time>"
 msgstr ""
 
-#: builtin/pack-objects.c:2678
+#: builtin/pack-objects.c:2676
 msgid "create thin packs"
 msgstr ""
 
-#: builtin/pack-objects.c:2680
+#: builtin/pack-objects.c:2678
 msgid "create packs suitable for shallow fetches"
 msgstr ""
 
-#: builtin/pack-objects.c:2682
+#: builtin/pack-objects.c:2680
 msgid "ignore packs that have companion .keep file"
 msgstr ""
 
-#: builtin/pack-objects.c:2684
+#: builtin/pack-objects.c:2682
 msgid "pack compression level"
 msgstr ""
 
-#: builtin/pack-objects.c:2686
+#: builtin/pack-objects.c:2684
 msgid "do not hide commits by grafts"
 msgstr ""
 
-#: builtin/pack-objects.c:2688
+#: builtin/pack-objects.c:2686
 msgid "use a bitmap index if available to speed up counting objects"
 msgstr ""
 
-#: builtin/pack-objects.c:2690
+#: builtin/pack-objects.c:2688
 msgid "write a bitmap index together with the pack index"
 msgstr ""
 
-#: builtin/pack-objects.c:2781
+#: builtin/pack-objects.c:2779
 msgid "Counting objects"
 msgstr ""
 
 #: builtin/pack-refs.c:6
 msgid "git pack-refs [<options>]"
 msgstr ""
@@ -7688,25 +7773,25 @@
 msgstr ""
 
 #: builtin/prune-packed.c:40
 msgid "Removing duplicate objects"
 msgstr ""
 
-#: builtin/prune.c:12
+#: builtin/prune.c:11
 msgid "git prune [-n] [-v] [--expire <time>] [--] [<head>...]"
 msgstr ""
 
-#: builtin/prune.c:106
+#: builtin/prune.c:105 builtin/worktree.c:112
 msgid "do not remove, show only"
 msgstr ""
 
-#: builtin/prune.c:107
+#: builtin/prune.c:106 builtin/worktree.c:113
 msgid "report pruned objects"
 msgstr ""
 
-#: builtin/prune.c:110
+#: builtin/prune.c:109 builtin/worktree.c:115
 msgid "expire objects older than <time>"
 msgstr ""
 
 #: builtin/push.c:14
 msgid "git push [<options>] [<repository> [<refspec>...]]"
 msgstr ""
@@ -8030,18 +8115,18 @@
 msgstr ""
 
 #: builtin/read-tree.c:139
 msgid "debug unpack-trees"
 msgstr ""
 
-#: builtin/reflog.c:429
+#: builtin/reflog.c:430
 #, c-format
 msgid "%s' for '%s' is not a valid timestamp"
 msgstr ""
 
-#: builtin/reflog.c:546 builtin/reflog.c:551
+#: builtin/reflog.c:547 builtin/reflog.c:552
 #, c-format
 msgid "'%s' is not a valid timestamp"
 msgstr ""
 
 #: builtin/remote.c:12
 msgid "git remote [-v | --verbose]"
@@ -8167,18 +8252,18 @@
 msgstr ""
 
 #: builtin/remote.c:177
 msgid "specifying branches to track makes sense only with fetch mirrors"
 msgstr ""
 
-#: builtin/remote.c:187 builtin/remote.c:643
+#: builtin/remote.c:187 builtin/remote.c:640
 #, c-format
 msgid "remote %s already exists."
 msgstr ""
 
-#: builtin/remote.c:191 builtin/remote.c:647
+#: builtin/remote.c:191 builtin/remote.c:644
 #, c-format
 msgid "'%s' is not a valid remote name"
 msgstr ""
 
 #: builtin/remote.c:235
 #, c-format
@@ -8195,331 +8280,331 @@
 msgstr ""
 
 #: builtin/remote.c:448
 msgid "(delete)"
 msgstr ""
 
-#: builtin/remote.c:592 builtin/remote.c:598 builtin/remote.c:604
+#: builtin/remote.c:589 builtin/remote.c:595 builtin/remote.c:601
 #, c-format
 msgid "Could not append '%s' to '%s'"
 msgstr ""
 
-#: builtin/remote.c:636 builtin/remote.c:795 builtin/remote.c:895
+#: builtin/remote.c:633 builtin/remote.c:792 builtin/remote.c:892
 #, c-format
 msgid "No such remote: %s"
 msgstr ""
 
-#: builtin/remote.c:653
+#: builtin/remote.c:650
 #, c-format
 msgid "Could not rename config section '%s' to '%s'"
 msgstr ""
 
-#: builtin/remote.c:659 builtin/remote.c:847
+#: builtin/remote.c:656 builtin/remote.c:844
 #, c-format
 msgid "Could not remove config section '%s'"
 msgstr ""
 
-#: builtin/remote.c:674
+#: builtin/remote.c:671
 #, c-format
 msgid ""
 "Not updating non-default fetch refspec\n"
 "\t%s\n"
 "\tPlease update the configuration manually if necessary."
 msgstr ""
 
-#: builtin/remote.c:680
+#: builtin/remote.c:677
 #, c-format
 msgid "Could not append '%s'"
 msgstr ""
 
-#: builtin/remote.c:691
+#: builtin/remote.c:688
 #, c-format
 msgid "Could not set '%s'"
 msgstr ""
 
-#: builtin/remote.c:713
+#: builtin/remote.c:710
 #, c-format
 msgid "deleting '%s' failed"
 msgstr ""
 
-#: builtin/remote.c:747
+#: builtin/remote.c:744
 #, c-format
 msgid "creating '%s' failed"
 msgstr ""
 
-#: builtin/remote.c:766
+#: builtin/remote.c:763
 #, c-format
 msgid "Could not remove branch %s"
 msgstr ""
 
-#: builtin/remote.c:833
+#: builtin/remote.c:830
 msgid ""
 "Note: A branch outside the refs/remotes/ hierarchy was not removed;\n"
 "to delete it, use:"
 msgid_plural ""
 "Note: Some branches outside the refs/remotes/ hierarchy were not removed;\n"
 "to delete them, use:"
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/remote.c:948
+#: builtin/remote.c:945
 #, c-format
 msgid " new (next fetch will store in remotes/%s)"
 msgstr ""
 
-#: builtin/remote.c:951
+#: builtin/remote.c:948
 msgid " tracked"
 msgstr ""
 
-#: builtin/remote.c:953
+#: builtin/remote.c:950
 msgid " stale (use 'git remote prune' to remove)"
 msgstr ""
 
-#: builtin/remote.c:955
+#: builtin/remote.c:952
 msgid " ???"
 msgstr ""
 
-#: builtin/remote.c:996
+#: builtin/remote.c:993
 #, c-format
 msgid "invalid branch.%s.merge; cannot rebase onto > 1 branch"
 msgstr ""
 
-#: builtin/remote.c:1003
+#: builtin/remote.c:1000
 #, c-format
 msgid "rebases onto remote %s"
 msgstr ""
 
-#: builtin/remote.c:1006
+#: builtin/remote.c:1003
 #, c-format
 msgid " merges with remote %s"
 msgstr ""
 
-#: builtin/remote.c:1007
+#: builtin/remote.c:1004
 msgid "    and with remote"
 msgstr ""
 
-#: builtin/remote.c:1009
+#: builtin/remote.c:1006
 #, c-format
 msgid "merges with remote %s"
 msgstr ""
 
-#: builtin/remote.c:1010
+#: builtin/remote.c:1007
 msgid "   and with remote"
 msgstr ""
 
-#: builtin/remote.c:1056
+#: builtin/remote.c:1053
 msgid "create"
 msgstr ""
 
-#: builtin/remote.c:1059
+#: builtin/remote.c:1056
 msgid "delete"
 msgstr ""
 
-#: builtin/remote.c:1063
+#: builtin/remote.c:1060
 msgid "up to date"
 msgstr ""
 
-#: builtin/remote.c:1066
+#: builtin/remote.c:1063
 msgid "fast-forwardable"
 msgstr ""
 
-#: builtin/remote.c:1069
+#: builtin/remote.c:1066
 msgid "local out of date"
 msgstr ""
 
-#: builtin/remote.c:1076
+#: builtin/remote.c:1073
 #, c-format
 msgid "    %-*s forces to %-*s (%s)"
 msgstr ""
 
-#: builtin/remote.c:1079
+#: builtin/remote.c:1076
 #, c-format
 msgid "    %-*s pushes to %-*s (%s)"
 msgstr ""
 
-#: builtin/remote.c:1083
+#: builtin/remote.c:1080
 #, c-format
 msgid "    %-*s forces to %s"
 msgstr ""
 
-#: builtin/remote.c:1086
+#: builtin/remote.c:1083
 #, c-format
 msgid "    %-*s pushes to %s"
 msgstr ""
 
-#: builtin/remote.c:1154
+#: builtin/remote.c:1151
 msgid "do not query remotes"
 msgstr ""
 
-#: builtin/remote.c:1181
+#: builtin/remote.c:1178
 #, c-format
 msgid "* remote %s"
 msgstr ""
 
-#: builtin/remote.c:1182
+#: builtin/remote.c:1179
 #, c-format
 msgid "  Fetch URL: %s"
 msgstr ""
 
-#: builtin/remote.c:1183 builtin/remote.c:1334
+#: builtin/remote.c:1180 builtin/remote.c:1331
 msgid "(no URL)"
 msgstr ""
 
-#: builtin/remote.c:1192 builtin/remote.c:1194
+#: builtin/remote.c:1189 builtin/remote.c:1191
 #, c-format
 msgid "  Push  URL: %s"
 msgstr ""
 
-#: builtin/remote.c:1196 builtin/remote.c:1198 builtin/remote.c:1200
+#: builtin/remote.c:1193 builtin/remote.c:1195 builtin/remote.c:1197
 #, c-format
 msgid "  HEAD branch: %s"
 msgstr ""
 
-#: builtin/remote.c:1202
+#: builtin/remote.c:1199
 #, c-format
 msgid ""
 "  HEAD branch (remote HEAD is ambiguous, may be one of the following):\n"
 msgstr ""
 
-#: builtin/remote.c:1214
+#: builtin/remote.c:1211
 #, c-format
 msgid "  Remote branch:%s"
 msgid_plural "  Remote branches:%s"
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/remote.c:1217 builtin/remote.c:1244
+#: builtin/remote.c:1214 builtin/remote.c:1241
 msgid " (status not queried)"
 msgstr ""
 
-#: builtin/remote.c:1226
+#: builtin/remote.c:1223
 msgid "  Local branch configured for 'git pull':"
 msgid_plural "  Local branches configured for 'git pull':"
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/remote.c:1234
+#: builtin/remote.c:1231
 msgid "  Local refs will be mirrored by 'git push'"
 msgstr ""
 
-#: builtin/remote.c:1241
+#: builtin/remote.c:1238
 #, c-format
 msgid "  Local ref configured for 'git push'%s:"
 msgid_plural "  Local refs configured for 'git push'%s:"
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/remote.c:1262
+#: builtin/remote.c:1259
 msgid "set refs/remotes/<name>/HEAD according to remote"
 msgstr ""
 
-#: builtin/remote.c:1264
+#: builtin/remote.c:1261
 msgid "delete refs/remotes/<name>/HEAD"
 msgstr ""
 
-#: builtin/remote.c:1279
+#: builtin/remote.c:1276
 msgid "Cannot determine remote HEAD"
 msgstr ""
 
-#: builtin/remote.c:1281
+#: builtin/remote.c:1278
 msgid "Multiple remote HEAD branches. Please choose one explicitly with:"
 msgstr ""
 
-#: builtin/remote.c:1291
+#: builtin/remote.c:1288
 #, c-format
 msgid "Could not delete %s"
 msgstr ""
 
-#: builtin/remote.c:1299
+#: builtin/remote.c:1296
 #, c-format
 msgid "Not a valid ref: %s"
 msgstr ""
 
-#: builtin/remote.c:1301
+#: builtin/remote.c:1298
 #, c-format
 msgid "Could not setup %s"
 msgstr ""
 
-#: builtin/remote.c:1319
+#: builtin/remote.c:1316
 #, c-format
 msgid " %s will become dangling!"
 msgstr ""
 
-#: builtin/remote.c:1320
+#: builtin/remote.c:1317
 #, c-format
 msgid " %s has become dangling!"
 msgstr ""
 
-#: builtin/remote.c:1330
+#: builtin/remote.c:1327
 #, c-format
 msgid "Pruning %s"
 msgstr ""
 
-#: builtin/remote.c:1331
+#: builtin/remote.c:1328
 #, c-format
 msgid "URL: %s"
 msgstr ""
 
-#: builtin/remote.c:1354
+#: builtin/remote.c:1351
 #, c-format
 msgid " * [would prune] %s"
 msgstr ""
 
-#: builtin/remote.c:1357
+#: builtin/remote.c:1354
 #, c-format
 msgid " * [pruned] %s"
 msgstr ""
 
-#: builtin/remote.c:1402
+#: builtin/remote.c:1399
 msgid "prune remotes after fetching"
 msgstr ""
 
-#: builtin/remote.c:1468 builtin/remote.c:1542
+#: builtin/remote.c:1465 builtin/remote.c:1539
 #, c-format
 msgid "No such remote '%s'"
 msgstr ""
 
-#: builtin/remote.c:1488
+#: builtin/remote.c:1485
 msgid "add branch"
 msgstr ""
 
-#: builtin/remote.c:1495
+#: builtin/remote.c:1492
 msgid "no remote specified"
 msgstr ""
 
-#: builtin/remote.c:1517
+#: builtin/remote.c:1514
 msgid "manipulate push URLs"
 msgstr ""
 
-#: builtin/remote.c:1519
+#: builtin/remote.c:1516
 msgid "add URL"
 msgstr ""
 
-#: builtin/remote.c:1521
+#: builtin/remote.c:1518
 msgid "delete URLs"
 msgstr ""
 
-#: builtin/remote.c:1528
+#: builtin/remote.c:1525
 msgid "--add --delete doesn't make sense"
 msgstr ""
 
-#: builtin/remote.c:1568
+#: builtin/remote.c:1565
 #, c-format
 msgid "Invalid old URL pattern: %s"
 msgstr ""
 
-#: builtin/remote.c:1576
+#: builtin/remote.c:1573
 #, c-format
 msgid "No such URL found: %s"
 msgstr ""
 
-#: builtin/remote.c:1578
+#: builtin/remote.c:1575
 msgid "Will not delete all non-push URLs"
 msgstr ""
 
-#: builtin/remote.c:1592
+#: builtin/remote.c:1589
 msgid "be verbose; must be placed before a subcommand"
 msgstr ""
 
 #: builtin/repack.c:17
 msgid "git repack [<options>]"
 msgstr ""
@@ -8585,13 +8670,13 @@
 msgstr ""
 
 #: builtin/repack.c:187
 msgid "repack objects in packs marked with .keep"
 msgstr ""
 
-#: builtin/repack.c:375
+#: builtin/repack.c:377
 #, c-format
 msgid "removing '%s' failed"
 msgstr ""
 
 #: builtin/replace.c:19
 msgid "git replace [-f] <object> <replacement>"
@@ -8946,76 +9031,76 @@
 #: builtin/rm.c:71
 msgid ""
 "\n"
 "(use 'rm -rf' if you really want to remove it including all of its history)"
 msgstr ""
 
-#: builtin/rm.c:231
+#: builtin/rm.c:230
 msgid ""
 "the following file has staged content different from both the\n"
 "file and the HEAD:"
 msgid_plural ""
 "the following files have staged content different from both the\n"
 "file and the HEAD:"
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/rm.c:236
+#: builtin/rm.c:235
 msgid ""
 "\n"
 "(use -f to force removal)"
 msgstr ""
 
-#: builtin/rm.c:240
+#: builtin/rm.c:239
 msgid "the following file has changes staged in the index:"
 msgid_plural "the following files have changes staged in the index:"
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/rm.c:244 builtin/rm.c:255
+#: builtin/rm.c:243 builtin/rm.c:254
 msgid ""
 "\n"
 "(use --cached to keep the file, or -f to force removal)"
 msgstr ""
 
-#: builtin/rm.c:252
+#: builtin/rm.c:251
 msgid "the following file has local modifications:"
 msgid_plural "the following files have local modifications:"
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/rm.c:270
+#: builtin/rm.c:269
 msgid "do not list removed files"
 msgstr ""
 
-#: builtin/rm.c:271
+#: builtin/rm.c:270
 msgid "only remove from the index"
 msgstr ""
 
-#: builtin/rm.c:272
+#: builtin/rm.c:271
 msgid "override the up-to-date check"
 msgstr ""
 
-#: builtin/rm.c:273
+#: builtin/rm.c:272
 msgid "allow recursive removal"
 msgstr ""
 
-#: builtin/rm.c:275
+#: builtin/rm.c:274
 msgid "exit with a zero status even if nothing matched"
 msgstr ""
 
-#: builtin/rm.c:318
+#: builtin/rm.c:317
 msgid "Please, stage your changes to .gitmodules or stash them to proceed"
 msgstr ""
 
-#: builtin/rm.c:336
+#: builtin/rm.c:335
 #, c-format
 msgid "not removing '%s' recursively without -r"
 msgstr ""
 
-#: builtin/rm.c:375
+#: builtin/rm.c:374
 #, c-format
 msgid "git rm: unable to remove %s"
 msgstr ""
 
 #: builtin/shortlog.c:13
 msgid "git shortlog [<options>] [<revision-range>] [[--] [<path>...]]"
@@ -9055,73 +9140,73 @@
 msgstr ""
 
 #: builtin/show-branch.c:13
 msgid "git show-branch (-g | --reflog)[=<n>[,<base>]] [--list] [<ref>]"
 msgstr ""
 
-#: builtin/show-branch.c:652
+#: builtin/show-branch.c:659
 msgid "show remote-tracking and local branches"
 msgstr ""
 
-#: builtin/show-branch.c:654
+#: builtin/show-branch.c:661
 msgid "show remote-tracking branches"
 msgstr ""
 
-#: builtin/show-branch.c:656
+#: builtin/show-branch.c:663
 msgid "color '*!+-' corresponding to the branch"
 msgstr ""
 
-#: builtin/show-branch.c:658
+#: builtin/show-branch.c:665
 msgid "show <n> more commits after the common ancestor"
 msgstr ""
 
-#: builtin/show-branch.c:660
+#: builtin/show-branch.c:667
 msgid "synonym to more=-1"
 msgstr ""
 
-#: builtin/show-branch.c:661
+#: builtin/show-branch.c:668
 msgid "suppress naming strings"
 msgstr ""
 
-#: builtin/show-branch.c:663
+#: builtin/show-branch.c:670
 msgid "include the current branch"
 msgstr ""
 
-#: builtin/show-branch.c:665
+#: builtin/show-branch.c:672
 msgid "name commits with their object names"
 msgstr ""
 
-#: builtin/show-branch.c:667
+#: builtin/show-branch.c:674
 msgid "show possible merge bases"
 msgstr ""
 
-#: builtin/show-branch.c:669
+#: builtin/show-branch.c:676
 msgid "show refs unreachable from any other ref"
 msgstr ""
 
-#: builtin/show-branch.c:671
+#: builtin/show-branch.c:678
 msgid "show commits in topological order"
 msgstr ""
 
-#: builtin/show-branch.c:674
+#: builtin/show-branch.c:681
 msgid "show only commits not on the first branch"
 msgstr ""
 
-#: builtin/show-branch.c:676
+#: builtin/show-branch.c:683
 msgid "show merges reachable from only one tip"
 msgstr ""
 
-#: builtin/show-branch.c:678
+#: builtin/show-branch.c:685
 msgid "topologically sort, maintaining date order where possible"
 msgstr ""
 
-#: builtin/show-branch.c:681
+#: builtin/show-branch.c:688
 msgid "<n>[,<base>]"
 msgstr ""
 
-#: builtin/show-branch.c:682
+#: builtin/show-branch.c:689
 msgid "show <n> most recent ref-log entries starting at base"
 msgstr ""
 
 #: builtin/show-ref.c:10
 msgid ""
 "git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | --"
@@ -9129,41 +9214,41 @@
 msgstr ""
 
 #: builtin/show-ref.c:11
 msgid "git show-ref --exclude-existing[=pattern] < ref-list"
 msgstr ""
 
-#: builtin/show-ref.c:168
+#: builtin/show-ref.c:170
 msgid "only show tags (can be combined with heads)"
 msgstr ""
 
-#: builtin/show-ref.c:169
+#: builtin/show-ref.c:171
 msgid "only show heads (can be combined with tags)"
 msgstr ""
 
-#: builtin/show-ref.c:170
+#: builtin/show-ref.c:172
 msgid "stricter reference checking, requires exact ref path"
 msgstr ""
 
-#: builtin/show-ref.c:173 builtin/show-ref.c:175
+#: builtin/show-ref.c:175 builtin/show-ref.c:177
 msgid "show the HEAD reference, even if it would be filtered out"
 msgstr ""
 
-#: builtin/show-ref.c:177
+#: builtin/show-ref.c:179
 msgid "dereference tags into object IDs"
 msgstr ""
 
-#: builtin/show-ref.c:179
+#: builtin/show-ref.c:181
 msgid "only show SHA1 hash using <n> digits"
 msgstr ""
 
-#: builtin/show-ref.c:183
+#: builtin/show-ref.c:185
 msgid "do not print results to stdout (useful with --verify)"
 msgstr ""
 
-#: builtin/show-ref.c:185
+#: builtin/show-ref.c:187
 msgid "show refs from stdin that aren't in local repository"
 msgstr ""
 
 #: builtin/symbolic-ref.c:7
 msgid "git symbolic-ref [<options>] <name> [<ref>]"
 msgstr ""
@@ -9404,128 +9489,194 @@
 msgstr ""
 
 #: builtin/unpack-objects.c:489
 msgid "Unpacking objects"
 msgstr ""
 
-#: builtin/update-index.c:403
+#: builtin/update-index.c:70
+#, c-format
+msgid "failed to create directory %s"
+msgstr ""
+
+#: builtin/update-index.c:76
+#, c-format
+msgid "failed to stat %s"
+msgstr ""
+
+#: builtin/update-index.c:86
+#, c-format
+msgid "failed to create file %s"
+msgstr ""
+
+#: builtin/update-index.c:94
+#, c-format
+msgid "failed to delete file %s"
+msgstr ""
+
+#: builtin/update-index.c:101 builtin/update-index.c:203
+#, c-format
+msgid "failed to delete directory %s"
+msgstr ""
+
+#: builtin/update-index.c:124
+#, c-format
+msgid "Testing "
+msgstr ""
+
+#: builtin/update-index.c:136
+msgid "directory stat info does not change after adding a new file"
+msgstr ""
+
+#: builtin/update-index.c:149
+msgid "directory stat info does not change after adding a new directory"
+msgstr ""
+
+#: builtin/update-index.c:162
+msgid "directory stat info changes after updating a file"
+msgstr ""
+
+#: builtin/update-index.c:173
+msgid "directory stat info changes after adding a file inside subdirectory"
+msgstr ""
+
+#: builtin/update-index.c:184
+msgid "directory stat info does not change after deleting a file"
+msgstr ""
+
+#: builtin/update-index.c:197
+msgid "directory stat info does not change after deleting a directory"
+msgstr ""
+
+#: builtin/update-index.c:204
+msgid " OK"
+msgstr ""
+
+#: builtin/update-index.c:564
 msgid "git update-index [<options>] [--] [<file>...]"
 msgstr ""
 
-#: builtin/update-index.c:757
+#: builtin/update-index.c:918
 msgid "continue refresh even when index needs update"
 msgstr ""
 
-#: builtin/update-index.c:760
+#: builtin/update-index.c:921
 msgid "refresh: ignore submodules"
 msgstr ""
 
-#: builtin/update-index.c:763
+#: builtin/update-index.c:924
 msgid "do not ignore new files"
 msgstr ""
 
-#: builtin/update-index.c:765
+#: builtin/update-index.c:926
 msgid "let files replace directories and vice-versa"
 msgstr ""
 
-#: builtin/update-index.c:767
+#: builtin/update-index.c:928
 msgid "notice files missing from worktree"
 msgstr ""
 
-#: builtin/update-index.c:769
+#: builtin/update-index.c:930
 msgid "refresh even if index contains unmerged entries"
 msgstr ""
 
-#: builtin/update-index.c:772
+#: builtin/update-index.c:933
 msgid "refresh stat information"
 msgstr ""
 
-#: builtin/update-index.c:776
+#: builtin/update-index.c:937
 msgid "like --refresh, but ignore assume-unchanged setting"
 msgstr ""
 
-#: builtin/update-index.c:780
+#: builtin/update-index.c:941
 msgid "<mode>,<object>,<path>"
 msgstr ""
 
-#: builtin/update-index.c:781
+#: builtin/update-index.c:942
 msgid "add the specified entry to the index"
 msgstr ""
 
-#: builtin/update-index.c:785
+#: builtin/update-index.c:946
 msgid "(+/-)x"
 msgstr ""
 
-#: builtin/update-index.c:786
+#: builtin/update-index.c:947
 msgid "override the executable bit of the listed files"
 msgstr ""
 
-#: builtin/update-index.c:790
+#: builtin/update-index.c:951
 msgid "mark files as \"not changing\""
 msgstr ""
 
-#: builtin/update-index.c:793
+#: builtin/update-index.c:954
 msgid "clear assumed-unchanged bit"
 msgstr ""
 
-#: builtin/update-index.c:796
+#: builtin/update-index.c:957
 msgid "mark files as \"index-only\""
 msgstr ""
 
-#: builtin/update-index.c:799
+#: builtin/update-index.c:960
 msgid "clear skip-worktree bit"
 msgstr ""
 
-#: builtin/update-index.c:802
+#: builtin/update-index.c:963
 msgid "add to index only; do not add content to object database"
 msgstr ""
 
-#: builtin/update-index.c:804
+#: builtin/update-index.c:965
 msgid "remove named paths even if present in worktree"
 msgstr ""
 
-#: builtin/update-index.c:806
+#: builtin/update-index.c:967
 msgid "with --stdin: input lines are terminated by null bytes"
 msgstr ""
 
-#: builtin/update-index.c:808
+#: builtin/update-index.c:969
 msgid "read list of paths to be updated from standard input"
 msgstr ""
 
-#: builtin/update-index.c:812
+#: builtin/update-index.c:973
 msgid "add entries from standard input to the index"
 msgstr ""
 
-#: builtin/update-index.c:816
+#: builtin/update-index.c:977
 msgid "repopulate stages #2 and #3 for the listed paths"
 msgstr ""
 
-#: builtin/update-index.c:820
+#: builtin/update-index.c:981
 msgid "only update entries that differ from HEAD"
 msgstr ""
 
-#: builtin/update-index.c:824
+#: builtin/update-index.c:985
 msgid "ignore files missing from worktree"
 msgstr ""
 
-#: builtin/update-index.c:827
+#: builtin/update-index.c:988
 msgid "report actions to standard output"
 msgstr ""
 
-#: builtin/update-index.c:829
+#: builtin/update-index.c:990
 msgid "(for porcelains) forget saved unresolved conflicts"
 msgstr ""
 
-#: builtin/update-index.c:833
+#: builtin/update-index.c:994
 msgid "write index in this format"
 msgstr ""
 
-#: builtin/update-index.c:835
+#: builtin/update-index.c:996
 msgid "enable or disable split index"
 msgstr ""
 
+#: builtin/update-index.c:998
+msgid "enable/disable untracked cache"
+msgstr ""
+
+#: builtin/update-index.c:1000
+msgid "enable untracked cache without testing the filesystem"
+msgstr ""
+
 #: builtin/update-ref.c:9
 msgid "git update-ref [<options>] -d <refname> [<old-val>]"
 msgstr ""
 
 #: builtin/update-ref.c:10
 msgid "git update-ref [<options>]    <refname> <new-val> [<old-val>]"
@@ -9584,12 +9735,89 @@
 msgstr ""
 
 #: builtin/verify-tag.c:73
 msgid "print tag contents"
 msgstr ""
 
+#: builtin/worktree.c:11
+msgid "git worktree add [<options>] <path> <branch>"
+msgstr ""
+
+#: builtin/worktree.c:12
+msgid "git worktree prune [<options>]"
+msgstr ""
+
+#: builtin/worktree.c:27
+#, c-format
+msgid "Removing worktrees/%s: not a valid directory"
+msgstr ""
+
+#: builtin/worktree.c:33
+#, c-format
+msgid "Removing worktrees/%s: gitdir file does not exist"
+msgstr ""
+
+#: builtin/worktree.c:38
+#, c-format
+msgid "Removing worktrees/%s: unable to read gitdir file (%s)"
+msgstr ""
+
+#: builtin/worktree.c:49
+#, c-format
+msgid "Removing worktrees/%s: invalid gitdir file"
+msgstr ""
+
+#: builtin/worktree.c:65
+#, c-format
+msgid "Removing worktrees/%s: gitdir file points to non-existent location"
+msgstr ""
+
+#: builtin/worktree.c:100
+#, c-format
+msgid "failed to remove: %s"
+msgstr ""
+
+#: builtin/worktree.c:186
+#, c-format
+msgid "'%s' already exists"
+msgstr ""
+
+#: builtin/worktree.c:207
+#, c-format
+msgid "could not create directory of '%s'"
+msgstr ""
+
+#: builtin/worktree.c:241
+msgid "unable to resolve HEAD"
+msgstr ""
+
+#: builtin/worktree.c:249
+#, c-format
+msgid "Enter %s (identifier %s)"
+msgstr ""
+
+#: builtin/worktree.c:281
+msgid "checkout <branch> even if already checked out in other worktree"
+msgstr ""
+
+#: builtin/worktree.c:283
+msgid "create a new branch"
+msgstr ""
+
+#: builtin/worktree.c:285
+msgid "create or reset a branch"
+msgstr ""
+
+#: builtin/worktree.c:286
+msgid "detach HEAD at named commit"
+msgstr ""
+
+#: builtin/worktree.c:292
+msgid "-b and -B are mutually exclusive"
+msgstr ""
+
 #: builtin/write-tree.c:13
 msgid "git write-tree [--missing-ok] [--prefix=<prefix>/]"
 msgstr ""
 
 #: builtin/write-tree.c:26
 msgid "<prefix>/"
@@ -9611,270 +9839,290 @@
 msgid ""
 "'git help -a' and 'git help -g' list available subcommands and some\n"
 "concept guides. See 'git help <command>' or 'git help <concept>'\n"
 "to read about a specific subcommand or concept."
 msgstr ""
 
-#: common-cmds.h:8
+#: common-cmds.h:10
+msgid "start a working area (see also: git help tutorial)"
+msgstr ""
+
+#: common-cmds.h:11
+msgid "work on the current change (see also: git help everyday)"
+msgstr ""
+
+#: common-cmds.h:12
+msgid "examine the history and state (see also: git help revisions)"
+msgstr ""
+
+#: common-cmds.h:13
+msgid "grow, mark and tweak your common history"
+msgstr ""
+
+#: common-cmds.h:14
+msgid "collaborate (see also: git help workflows)"
+msgstr ""
+
+#: common-cmds.h:18
 msgid "Add file contents to the index"
 msgstr ""
 
-#: common-cmds.h:9
+#: common-cmds.h:19
 msgid "Find by binary search the change that introduced a bug"
 msgstr ""
 
-#: common-cmds.h:10
+#: common-cmds.h:20
 msgid "List, create, or delete branches"
 msgstr ""
 
-#: common-cmds.h:11
-msgid "Checkout a branch or paths to the working tree"
+#: common-cmds.h:21
+msgid "Switch branches or restore working tree files"
 msgstr ""
 
-#: common-cmds.h:12
+#: common-cmds.h:22
 msgid "Clone a repository into a new directory"
 msgstr ""
 
-#: common-cmds.h:13
+#: common-cmds.h:23
 msgid "Record changes to the repository"
 msgstr ""
 
-#: common-cmds.h:14
+#: common-cmds.h:24
 msgid "Show changes between commits, commit and working tree, etc"
 msgstr ""
 
-#: common-cmds.h:15
+#: common-cmds.h:25
 msgid "Download objects and refs from another repository"
 msgstr ""
 
-#: common-cmds.h:16
+#: common-cmds.h:26
 msgid "Print lines matching a pattern"
 msgstr ""
 
-#: common-cmds.h:17
+#: common-cmds.h:27
 msgid "Create an empty Git repository or reinitialize an existing one"
 msgstr ""
 
-#: common-cmds.h:18
+#: common-cmds.h:28
 msgid "Show commit logs"
 msgstr ""
 
-#: common-cmds.h:19
+#: common-cmds.h:29
 msgid "Join two or more development histories together"
 msgstr ""
 
-#: common-cmds.h:20
+#: common-cmds.h:30
 msgid "Move or rename a file, a directory, or a symlink"
 msgstr ""
 
-#: common-cmds.h:21
+#: common-cmds.h:31
 msgid "Fetch from and integrate with another repository or a local branch"
 msgstr ""
 
-#: common-cmds.h:22
+#: common-cmds.h:32
 msgid "Update remote refs along with associated objects"
 msgstr ""
 
-#: common-cmds.h:23
+#: common-cmds.h:33
 msgid "Forward-port local commits to the updated upstream head"
 msgstr ""
 
-#: common-cmds.h:24
+#: common-cmds.h:34
 msgid "Reset current HEAD to the specified state"
 msgstr ""
 
-#: common-cmds.h:25
+#: common-cmds.h:35
 msgid "Remove files from the working tree and from the index"
 msgstr ""
 
-#: common-cmds.h:26
+#: common-cmds.h:36
 msgid "Show various types of objects"
 msgstr ""
 
-#: common-cmds.h:27
+#: common-cmds.h:37
 msgid "Show the working tree status"
 msgstr ""
 
-#: common-cmds.h:28
+#: common-cmds.h:38
 msgid "Create, list, delete or verify a tag object signed with GPG"
 msgstr ""
 
-#: parse-options.h:143
+#: parse-options.h:142
 msgid "expiry-date"
 msgstr ""
 
-#: parse-options.h:158
+#: parse-options.h:157
 msgid "no-op (backward compatibility)"
 msgstr ""
 
-#: parse-options.h:232
+#: parse-options.h:231
 msgid "be more verbose"
 msgstr ""
 
-#: parse-options.h:234
+#: parse-options.h:233
 msgid "be more quiet"
 msgstr ""
 
-#: parse-options.h:240
+#: parse-options.h:239
 msgid "use <n> digits to display SHA-1s"
 msgstr ""
 
 #: rerere.h:27
 msgid "update the index with reused conflict resolution if possible"
 msgstr ""
 
 #: git-am.sh:53
 msgid "You need to set your committer info first"
 msgstr ""
 
-#: git-am.sh:98
+#: git-am.sh:100
 msgid ""
 "You seem to have moved HEAD since the last 'am' failure.\n"
 "Not rewinding to ORIG_HEAD"
 msgstr ""
 
-#: git-am.sh:108
+#: git-am.sh:110
 #, sh-format
 msgid ""
 "When you have resolved this problem, run \"$cmdline --continue\".\n"
 "If you prefer to skip this patch, run \"$cmdline --skip\" instead.\n"
 "To restore the original branch and stop patching, run \"$cmdline --abort\"."
 msgstr ""
 
-#: git-am.sh:124
+#: git-am.sh:126
 msgid "Cannot fall back to three-way merge."
 msgstr ""
 
-#: git-am.sh:140
+#: git-am.sh:142
 msgid "Repository lacks necessary blobs to fall back on 3-way merge."
 msgstr ""
 
-#: git-am.sh:142
+#: git-am.sh:144
 msgid "Using index info to reconstruct a base tree..."
 msgstr ""
 
-#: git-am.sh:157
+#: git-am.sh:159
 msgid ""
 "Did you hand edit your patch?\n"
 "It does not apply to blobs recorded in its index."
 msgstr ""
 
-#: git-am.sh:166
+#: git-am.sh:168
 msgid "Falling back to patching base and 3-way merge..."
 msgstr ""
 
-#: git-am.sh:182
+#: git-am.sh:185
 msgid "Failed to merge in the changes."
 msgstr ""
 
-#: git-am.sh:277
+#: git-am.sh:280
 msgid "Only one StGIT patch series can be applied at once"
 msgstr ""
 
-#: git-am.sh:364
+#: git-am.sh:367
 #, sh-format
 msgid "Patch format $patch_format is not supported."
 msgstr ""
 
-#: git-am.sh:366
+#: git-am.sh:369
 msgid "Patch format detection failed."
 msgstr ""
 
-#: git-am.sh:398
+#: git-am.sh:407
 msgid ""
 "The -b/--binary option has been a no-op for long time, and\n"
 "it will be removed. Please do not use it anymore."
 msgstr ""
 
-#: git-am.sh:496
+#: git-am.sh:507
 #, sh-format
 msgid "previous rebase directory $dotest still exists but mbox given."
 msgstr ""
 
-#: git-am.sh:501
+#: git-am.sh:512
 msgid "Please make up your mind. --skip or --abort?"
 msgstr ""
 
-#: git-am.sh:537
+#: git-am.sh:560
 #, sh-format
 msgid ""
 "Stray $dotest directory found.\n"
 "Use \"git am --abort\" to remove it."
 msgstr ""
 
-#: git-am.sh:545
+#: git-am.sh:568
 msgid "Resolve operation not in progress, we are not resuming."
 msgstr ""
 
-#: git-am.sh:612
+#: git-am.sh:635
 #, sh-format
 msgid "Dirty index: cannot apply patches (dirty: $files)"
 msgstr ""
 
-#: git-am.sh:722
+#: git-am.sh:747
 #, sh-format
 msgid ""
 "Patch is empty.  Was it split wrong?\n"
 "If you would prefer to skip this patch, instead run \"$cmdline --skip\".\n"
 "To restore the original branch and stop patching run \"$cmdline --abort\"."
 msgstr ""
 
-#: git-am.sh:749
+#: git-am.sh:774
 msgid "Patch does not have a valid e-mail address."
 msgstr ""
 
-#: git-am.sh:796
+#: git-am.sh:821
 msgid "cannot be interactive without stdin connected to a terminal."
 msgstr ""
 
-#: git-am.sh:800
+#: git-am.sh:825
 msgid "Commit Body is:"
 msgstr ""
 
 #. TRANSLATORS: Make sure to include [y], [n], [e], [v] and [a]
 #. in your translation. The program will only accept English
 #. input at this point.
-#: git-am.sh:807
+#: git-am.sh:832
 msgid "Apply? [y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all "
 msgstr ""
 
-#: git-am.sh:843
+#: git-am.sh:868
 #, sh-format
 msgid "Applying: $FIRSTLINE"
 msgstr ""
 
-#: git-am.sh:864
+#: git-am.sh:889
 msgid ""
 "No changes - did you forget to use 'git add'?\n"
 "If there is nothing left to stage, chances are that something else\n"
 "already introduced the same changes; you might want to skip this patch."
 msgstr ""
 
-#: git-am.sh:872
+#: git-am.sh:897
 msgid ""
 "You still have unmerged paths in your index\n"
 "did you forget to use 'git add'?"
 msgstr ""
 
-#: git-am.sh:888
+#: git-am.sh:913
 msgid "No changes -- Patch already applied."
 msgstr ""
 
-#: git-am.sh:898
+#: git-am.sh:923
 #, sh-format
 msgid "Patch failed at $msgnum $FIRSTLINE"
 msgstr ""
 
-#: git-am.sh:901
+#: git-am.sh:926
 #, sh-format
 msgid ""
 "The copy of the patch that failed is found in:\n"
 "   $dotest/patch"
 msgstr ""
 
-#: git-am.sh:919
+#: git-am.sh:945
 msgid "applying to an empty history"
 msgstr ""
 
 #: git-bisect.sh:48
 msgid "You need to start by \"git bisect start\""
 msgstr ""
@@ -10014,46 +10262,46 @@
 msgstr ""
 
 #: git-bisect.sh:485
 msgid "bisect run success"
 msgstr ""
 
-#: git-pull.sh:21
+#: git-pull.sh:61
 msgid ""
 "Pull is not possible because you have unmerged files.\n"
 "Please, fix them up in the work tree, and then use 'git add/rm <file>'\n"
 "as appropriate to mark resolution and make a commit."
 msgstr ""
 
-#: git-pull.sh:25
+#: git-pull.sh:65
 msgid "Pull is not possible because you have unmerged files."
 msgstr ""
 
-#: git-pull.sh:31
+#: git-pull.sh:71
 msgid ""
 "You have not concluded your merge (MERGE_HEAD exists).\n"
 "Please, commit your changes before you can merge."
 msgstr ""
 
-#: git-pull.sh:245
+#: git-pull.sh:285
 msgid "updating an unborn branch with changes added to the index"
 msgstr ""
 
-#: git-pull.sh:269
+#: git-pull.sh:311
 #, sh-format
 msgid ""
 "Warning: fetch updated the current branch head.\n"
 "Warning: fast-forwarding your working tree from\n"
 "Warning: commit $orig_head."
 msgstr ""
 
-#: git-pull.sh:294
+#: git-pull.sh:336
 msgid "Cannot merge multiple branches into empty head"
 msgstr ""
 
-#: git-pull.sh:298
+#: git-pull.sh:340
 msgid "Cannot rebase onto multiple branches"
 msgstr ""
 
 #: git-rebase.sh:57
 msgid ""
 "When you have resolved this problem, run \"git rebase --continue\".\n"
@@ -10228,98 +10476,103 @@
 #. translation of "error: " takes in your language. E.g. in
 #. English this is:
 #.
 #. $ git stash save --blah-blah 2>&1 | head -n 2
 #. error: unknown option for 'stash save': --blah-blah
 #. To provide a message, use git stash save -- '--blah-blah'
-#: git-stash.sh:238
+#: git-stash.sh:241
 #, sh-format
 msgid ""
 "error: unknown option for 'stash save': $option\n"
 "       To provide a message, use git stash save -- '$option'"
 msgstr ""
 
-#: git-stash.sh:259
+#: git-stash.sh:262
 msgid "No local changes to save"
 msgstr ""
 
-#: git-stash.sh:263
+#: git-stash.sh:266
 msgid "Cannot initialize stash"
 msgstr ""
 
-#: git-stash.sh:267
+#: git-stash.sh:270
 msgid "Cannot save the current status"
 msgstr ""
 
-#: git-stash.sh:285
+#: git-stash.sh:288
 msgid "Cannot remove worktree changes"
 msgstr ""
 
-#: git-stash.sh:384
+#: git-stash.sh:389
+#, sh-format
+msgid "unknown option: $opt"
+msgstr ""
+
+#: git-stash.sh:399
 msgid "No stash found."
 msgstr ""
 
-#: git-stash.sh:391
+#: git-stash.sh:406
 #, sh-format
 msgid "Too many revisions specified: $REV"
 msgstr ""
 
-#: git-stash.sh:397
+#: git-stash.sh:412
 #, sh-format
 msgid "$reference is not a valid reference"
 msgstr ""
 
-#: git-stash.sh:425
+#: git-stash.sh:440
 #, sh-format
 msgid "'$args' is not a stash-like commit"
 msgstr ""
 
-#: git-stash.sh:436
+#: git-stash.sh:451
 #, sh-format
 msgid "'$args' is not a stash reference"
 msgstr ""
 
-#: git-stash.sh:444
+#: git-stash.sh:459
 msgid "unable to refresh index"
 msgstr ""
 
-#: git-stash.sh:448
+#: git-stash.sh:463
 msgid "Cannot apply a stash in the middle of a merge"
 msgstr ""
 
-#: git-stash.sh:456
+#: git-stash.sh:471
 msgid "Conflicts in index. Try without --index."
 msgstr ""
 
-#: git-stash.sh:458
+#: git-stash.sh:473
 msgid "Could not save index tree"
 msgstr ""
 
-#: git-stash.sh:492
+#: git-stash.sh:507
 msgid "Cannot unstage modified files"
 msgstr ""
 
-#: git-stash.sh:507
+#: git-stash.sh:522
 msgid "Index was not unstashed."
 msgstr ""
 
-#: git-stash.sh:530
+#: git-stash.sh:545
 #, sh-format
 msgid "Dropped ${REV} ($s)"
 msgstr ""
 
-#: git-stash.sh:531
+#: git-stash.sh:546
 #, sh-format
 msgid "${REV}: Could not drop stash entry"
 msgstr ""
 
-#: git-stash.sh:539
+#: git-stash.sh:554
 msgid "No branch name specified"
 msgstr ""
 
-#: git-stash.sh:611
+#: git-stash.sh:626
 msgid "(To restore them type \"git stash apply\")"
 msgstr ""
 
 #: git-submodule.sh:95
 #, sh-format
 msgid "cannot strip one component off url '$remoteurl'"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/ru.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/ru.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/ru.po	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/ru.po	2015-07-28 04:34:56.000000000 +0800
@@ -7,21 +7,21 @@
 # insolor <insolor@gmail.com>, 2014
 # insolor <insolor@gmail.com>, 2014
 msgid ""
 msgstr ""
 "Project-Id-Version: Перевод Git на русский язык\n"
 "Report-Msgid-Bugs-To: Git Mailing List <git@vger.kernel.org>\n"
-"POT-Creation-Date: 2015-04-03 08:13+0800\n"
-"PO-Revision-Date: 2015-04-03 13:32+0000\n"
+"POT-Creation-Date: 2015-07-14 07:19+0800\n"
+"PO-Revision-Date: 2015-07-14 13:06+0000\n"
 "Last-Translator: Dimitriy Ryazantcev <DJm00n@mail.ru>\n"
-"Language-Team: Russian (http://www.transifex.com/projects/p/git-po-ru/language/ru/)\n"
+"Language-Team: Russian (http://www.transifex.com/p/git-po-ru/language/ru/)\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
 "Language: ru\n"
-"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
+"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || (n%100>=11 && n%100<=14)? 2 : 3);\n"
 
 #: advice.c:55
 #, c-format
 msgid "hint: %.*s\n"
 msgstr "подсказка: %.*s\n"
 
@@ -46,13 +46,13 @@
 msgstr "git archive --remote <репозиторий> [--exec <команда>] [<опции>] <указатель-дерева> [<путь>…]"
 
 #: archive.c:14
 msgid "git archive --remote <repo> [--exec <cmd>] --list"
 msgstr "git archive --remote <репозиторий> [--exec <команда>] --list"
 
-#: archive.c:342 builtin/add.c:137 builtin/add.c:427 builtin/rm.c:328
+#: archive.c:342 builtin/add.c:137 builtin/add.c:428 builtin/rm.c:327
 #, c-format
 msgid "pathspec '%s' did not match any files"
 msgstr "спецификация пути «%s» не соответствует ни одному файлу"
 
 #: archive.c:427
 msgid "fmt"
@@ -69,15 +69,15 @@
 #: archive.c:429
 msgid "prepend prefix to each pathname in the archive"
 msgstr "добавлять префикс перед каждым путем файла в архиве"
 
 #: archive.c:430 builtin/archive.c:88 builtin/blame.c:2516
 #: builtin/blame.c:2517 builtin/config.c:57 builtin/fast-export.c:986
-#: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:101
+#: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:99
 #: builtin/ls-files.c:446 builtin/ls-files.c:449 builtin/notes.c:394
-#: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:151
+#: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:150
 msgid "file"
 msgstr "файл"
 
 #: archive.c:431 builtin/archive.c:89
 msgid "write the archive to this file"
 msgstr "запись архива в этот файл"
@@ -103,13 +103,13 @@
 msgstr "сжимать лучше"
 
 #: archive.c:447
 msgid "list supported archive formats"
 msgstr "перечислить поддерживаемые форматы архивов"
 
-#: archive.c:449 builtin/archive.c:90 builtin/clone.c:86
+#: archive.c:449 builtin/archive.c:90 builtin/clone.c:77
 msgid "repo"
 msgstr "репозиторий"
 
 #: archive.c:450 builtin/archive.c:91
 msgid "retrieve the archive from remote repository <repo>"
 msgstr "получить архив из внешнего <репозитория>"
@@ -119,13 +119,13 @@
 msgstr "комманда"
 
 #: archive.c:452 builtin/archive.c:93
 msgid "path to the remote git-upload-archive command"
 msgstr "путь к команде git-upload-archive на машине с внешним репозиторием"
 
-#: attr.c:264
+#: attr.c:265
 msgid ""
 "Negative patterns are ignored in git attributes\n"
 "Use '\\!' for literal leading exclamation."
 msgstr "Отрицающие шаблоны в атрибутах git игнорируются.\nИспользуйте «\\!» для буквального использования символа в значении «восклицательный знак»."
 
 #: branch.c:60
@@ -247,37 +247,39 @@
 
 #: bundle.c:139
 msgid "Repository lacks these prerequisite commits:"
 msgstr "В репозитории отсутствуют необходимые коммиты:"
 
 #: bundle.c:163 sequencer.c:650 sequencer.c:1105 builtin/blame.c:2705
-#: builtin/branch.c:659 builtin/commit.c:1045 builtin/log.c:330
-#: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:358
+#: builtin/branch.c:651 builtin/commit.c:1045 builtin/log.c:330
+#: builtin/log.c:825 builtin/log.c:1432 builtin/log.c:1666 builtin/merge.c:358
 #: builtin/shortlog.c:158
 msgid "revision walk setup failed"
 msgstr "сбой инициализации прохода по редакциям"
 
 #: bundle.c:185
 #, c-format
 msgid "The bundle contains this ref:"
 msgid_plural "The bundle contains these %d refs:"
 msgstr[0] "Пакет содержит эту %d ссылку:"
 msgstr[1] "Пакет содержит эти %d ссылки:"
 msgstr[2] "Пакет содержит эти %d ссылок:"
+msgstr[3] "Пакет содержит эти %d ссылок:"
 
 #: bundle.c:192
 msgid "The bundle records a complete history."
 msgstr "Пакет содержит полную историю."
 
 #: bundle.c:194
 #, c-format
 msgid "The bundle requires this ref:"
 msgid_plural "The bundle requires these %d refs:"
 msgstr[0] "Пакет требует эту %d ссылку:"
 msgstr[1] "Пакет требует эти %d ссылки:"
 msgstr[2] "Пакет требует эти %d ссылок:"
+msgstr[3] "Пакет требует эти %d ссылок:"
 
 #: bundle.c:251
 msgid "Could not spawn pack-objects"
 msgstr "Не удалось создать объекты пакета"
 
 #: bundle.c:269
@@ -405,77 +407,86 @@
 #, c-format
 msgid "%lu second ago"
 msgid_plural "%lu seconds ago"
 msgstr[0] "%lu секунду назад"
 msgstr[1] "%lu секунды назад"
 msgstr[2] "%lu секунд назад"
+msgstr[3] "%lu секунд назад"
 
 #: date.c:108
 #, c-format
 msgid "%lu minute ago"
 msgid_plural "%lu minutes ago"
 msgstr[0] "%lu минуту назад"
 msgstr[1] "%lu минуты назад"
 msgstr[2] "%lu минут назад"
+msgstr[3] "%lu минут назад"
 
 #: date.c:115
 #, c-format
 msgid "%lu hour ago"
 msgid_plural "%lu hours ago"
 msgstr[0] "%lu час назад"
 msgstr[1] "%lu часа назад"
 msgstr[2] "%lu часов назад"
+msgstr[3] "%lu часов назад"
 
 #: date.c:122
 #, c-format
 msgid "%lu day ago"
 msgid_plural "%lu days ago"
 msgstr[0] "%lu день назад"
 msgstr[1] "%lu дня назад"
 msgstr[2] "%lu дней назад"
+msgstr[3] "%lu дней назад"
 
 #: date.c:128
 #, c-format
 msgid "%lu week ago"
 msgid_plural "%lu weeks ago"
 msgstr[0] "%lu неделю назад"
 msgstr[1] "%lu недели назад"
 msgstr[2] "%lu недель назад"
+msgstr[3] "%lu недель назад"
 
 #: date.c:135
 #, c-format
 msgid "%lu month ago"
 msgid_plural "%lu months ago"
 msgstr[0] "%lu месяц назад"
 msgstr[1] "%lu месяца назад"
 msgstr[2] "%lu месяцев назад"
+msgstr[3] "%lu месяцев назад"
 
 #: date.c:146
 #, c-format
 msgid "%lu year"
 msgid_plural "%lu years"
 msgstr[0] "%lu год"
 msgstr[1] "%lu года"
 msgstr[2] "%lu лет"
+msgstr[3] "%lu лет"
 
 #. TRANSLATORS: "%s" is "<n> years"
 #: date.c:149
 #, c-format
 msgid "%s, %lu month ago"
 msgid_plural "%s, %lu months ago"
 msgstr[0] "%s и %lu месяц назад"
 msgstr[1] "%s и %lu месяца назад"
 msgstr[2] "%s и %lu месяцев назад"
+msgstr[3] "%s и %lu месяцев назад"
 
 #: date.c:154 date.c:159
 #, c-format
 msgid "%lu year ago"
 msgid_plural "%lu years ago"
 msgstr[0] "%lu год назад"
 msgstr[1] "%lu года назад"
 msgstr[2] "%lu лет назад"
+msgstr[3] "%lu лет назад"
 
 #: diffcore-order.c:24
 #, c-format
 msgid "failed to read orderfile '%s'"
 msgstr "сбой чтения orderfile «%s»"
 
@@ -502,33 +513,41 @@
 #, c-format
 msgid ""
 "Found errors in 'diff.dirstat' config variable:\n"
 "%s"
 msgstr "Найдены ошибки в переменной «diff.dirstat»:\n%s"
 
-#: diff.c:2956
+#: diff.c:2997
 #, c-format
 msgid "external diff died, stopping at %s"
 msgstr "критическая ошибка при внешнем сравнении, останов на %s"
 
-#: diff.c:3351
+#: diff.c:3393
 msgid "--follow requires exactly one pathspec"
 msgstr "--follow требует ровно одной спецификации пути"
 
-#: diff.c:3514
+#: diff.c:3556
 #, c-format
 msgid ""
 "Failed to parse --dirstat/-X option parameter:\n"
 "%s"
 msgstr "Сбой разбора параметра опции --dirstat/-X :\n%s"
 
-#: diff.c:3528
+#: diff.c:3570
 #, c-format
 msgid "Failed to parse --submodule option parameter: '%s'"
 msgstr "Сбой разбора параметра опции --submodule: «%s»"
 
+#: dir.c:1852
+msgid "failed to get kernel name and information"
+msgstr "не удалось получить имя ядра и информацию"
+
+#: dir.c:1945
+msgid "Untracked cache is disabled on this system."
+msgstr "Кэш неотслеживаемых файлов отключен на этой системе."
+
 #: gpg-interface.c:129 gpg-interface.c:200
 msgid "could not run gpg."
 msgstr "не удалось запустить gpg."
 
 #: gpg-interface.c:141
 msgid "gpg did not accept the data"
@@ -569,74 +588,75 @@
 msgstr "доступные команды git в «%s»"
 
 #: help.c:214
 msgid "git commands available from elsewhere on your $PATH"
 msgstr "команды git, доступные в других местах вашего $PATH"
 
-#: help.c:230
-msgid "The most commonly used git commands are:"
-msgstr "Самые часто используемые команды git:"
+#: help.c:246
+msgid "These are common Git commands used in various situations:"
+msgstr "Стандартные команды Git используемые в различных ситуациях:"
 
-#: help.c:289
+#: help.c:311
 #, c-format
 msgid ""
 "'%s' appears to be a git command, but we were not\n"
 "able to execute it. Maybe git-%s is broken?"
 msgstr "«%s» похоже на команду git, но нам не удалось ее запустить. Возможно, git-%s  не работает?"
 
-#: help.c:346
+#: help.c:368
 msgid "Uh oh. Your system reports no Git commands at all."
 msgstr "Ой-ёй! Ваша система не сообщает ни о каких командах Git вообще."
 
-#: help.c:368
+#: help.c:390
 #, c-format
 msgid ""
 "WARNING: You called a Git command named '%s', which does not exist.\n"
 "Continuing under the assumption that you meant '%s'"
 msgstr "ВНИМАНИЕ: Вы вызвали команду Git «%s», но такой не существует.\nПродолжаем с предположением, что вы имели в виду «%s»"
 
-#: help.c:373
+#: help.c:395
 #, c-format
 msgid "in %0.1f seconds automatically..."
 msgstr "через %0.1f секунд автоматически…"
 
-#: help.c:380
+#: help.c:402
 #, c-format
 msgid "git: '%s' is not a git command. See 'git --help'."
 msgstr "git: «%s» не является командой git. Смотрите «git --help»."
 
-#: help.c:384 help.c:444
+#: help.c:406 help.c:466
 msgid ""
 "\n"
 "Did you mean this?"
 msgid_plural ""
 "\n"
 "Did you mean one of these?"
 msgstr[0] "\nВозможно, вы имели в виду это?"
 msgstr[1] "\nВозможно, вы имели в виду что-то из этого?"
 msgstr[2] "\nВозможно, вы имели в виду что-то из этого?"
+msgstr[3] "\nВозможно, вы имели в виду что-то из этого?"
 
-#: help.c:440
+#: help.c:462
 #, c-format
 msgid "%s: %s - %s"
 msgstr "%s: %s — %s"
 
-#: lockfile.c:283
+#: lockfile.c:345
 msgid "BUG: reopen a lockfile that is still open"
 msgstr "БАГ: повторное открытие файла блокировки, который уже открыт"
 
-#: lockfile.c:285
+#: lockfile.c:347
 msgid "BUG: reopen a lockfile that has been committed"
 msgstr "БАГ: повторное открытие файла блокировки, который уже был закоммичен"
 
 #: merge.c:41
 msgid "failed to read the cache"
 msgstr "сбой чтения кэша"
 
-#: merge.c:94 builtin/checkout.c:374 builtin/checkout.c:580
-#: builtin/clone.c:662
+#: merge.c:94 builtin/checkout.c:376 builtin/checkout.c:587
+#: builtin/clone.c:647
 msgid "unable to write new index file"
 msgstr "не удалось записать новый файл индекса"
 
 #: merge-recursive.c:189
 #, c-format
 msgid "(bad commit)\n"
@@ -648,241 +668,242 @@
 msgstr "сбой addinfo_cache для пути «%s»"
 
 #: merge-recursive.c:270
 msgid "error building trees"
 msgstr "ошибка при построении деревьев"
 
-#: merge-recursive.c:688
+#: merge-recursive.c:687
 #, c-format
 msgid "failed to create path '%s'%s"
 msgstr "не удалось создать путь «%s»%s"
 
-#: merge-recursive.c:699
+#: merge-recursive.c:698
 #, c-format
 msgid "Removing %s to make room for subdirectory\n"
 msgstr "Удаление %s, чтобы освободить место для подкаталогов\n"
 
-#: merge-recursive.c:713 merge-recursive.c:734
+#: merge-recursive.c:712 merge-recursive.c:733
 msgid ": perhaps a D/F conflict?"
 msgstr ": возможно, конфликт каталогов/файлов?"
 
-#: merge-recursive.c:724
+#: merge-recursive.c:723
 #, c-format
 msgid "refusing to lose untracked file at '%s'"
 msgstr "отказ потери неотслеживаемого файла в «%s»"
 
-#: merge-recursive.c:764
+#: merge-recursive.c:763
 #, c-format
 msgid "cannot read object %s '%s'"
 msgstr "невозможно прочитать объект %s «%s»"
 
-#: merge-recursive.c:766
+#: merge-recursive.c:765
 #, c-format
 msgid "blob expected for %s '%s'"
 msgstr "ожидается двоичный объект для %s «%s»"
 
-#: merge-recursive.c:789 builtin/clone.c:321
+#: merge-recursive.c:788 builtin/clone.c:306
 #, c-format
 msgid "failed to open '%s'"
 msgstr "не удалось открыть «%s»"
 
-#: merge-recursive.c:797
+#: merge-recursive.c:796
 #, c-format
 msgid "failed to symlink '%s'"
 msgstr "не удалось создать символьную ссылку «%s»"
 
-#: merge-recursive.c:800
+#: merge-recursive.c:799
 #, c-format
 msgid "do not know what to do with %06o %s '%s'"
 msgstr "не понятно, что делать с %06o %s «%s»"
 
-#: merge-recursive.c:938
+#: merge-recursive.c:937
 msgid "Failed to execute internal merge"
 msgstr "Не удалось запустить внутреннее слияние"
 
-#: merge-recursive.c:942
+#: merge-recursive.c:941
 #, c-format
 msgid "Unable to add %s to database"
 msgstr "Не удалось добавить %s в базу данных"
 
-#: merge-recursive.c:958
+#: merge-recursive.c:957
 msgid "unsupported object type in the tree"
 msgstr "объект неподдерживаемого типа в дереве"
 
-#: merge-recursive.c:1033 merge-recursive.c:1047
+#: merge-recursive.c:1032 merge-recursive.c:1046
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree."
 msgstr "КОНФЛИКТ (%s/удаление): %s удалено в %s и %s в %s. Версия %s из %s оставлена в дереве."
 
-#: merge-recursive.c:1039 merge-recursive.c:1052
+#: merge-recursive.c:1038 merge-recursive.c:1051
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree at %s."
 msgstr "КОНФЛИКТ (%s/удаление): %s удалено в %s и %s в %s. Версия %s из %s оставлена в дереве на %s."
 
-#: merge-recursive.c:1093
+#: merge-recursive.c:1092
 msgid "rename"
 msgstr "переименование"
 
-#: merge-recursive.c:1093
+#: merge-recursive.c:1092
 msgid "renamed"
 msgstr "переименовано"
 
-#: merge-recursive.c:1149
+#: merge-recursive.c:1148
 #, c-format
 msgid "%s is a directory in %s adding as %s instead"
 msgstr "%s — это каталог в %s, добавляем как %s вместо этого"
 
-#: merge-recursive.c:1171
+#: merge-recursive.c:1170
 #, c-format
 msgid ""
 "CONFLICT (rename/rename): Rename \"%s\"->\"%s\" in branch \"%s\" rename "
 "\"%s\"->\"%s\" in \"%s\"%s"
 msgstr "КОНФЛИКТ (переименование/переименование): Переименование «%s»→«%s» в ветке «%s» и переименование «%s»→«%s» в ветке «%s»%s"
 
-#: merge-recursive.c:1176
+#: merge-recursive.c:1175
 msgid " (left unresolved)"
 msgstr " (оставлено неразрешенным)"
 
-#: merge-recursive.c:1230
+#: merge-recursive.c:1229
 #, c-format
 msgid "CONFLICT (rename/rename): Rename %s->%s in %s. Rename %s->%s in %s"
 msgstr "КОНФЛИКТ (переименование/переименование): Переименование «%s»→«%s» в ветке «%s» и переименование «%s»→«%s» в ветке «%s»"
 
-#: merge-recursive.c:1260
+#: merge-recursive.c:1259
 #, c-format
 msgid "Renaming %s to %s and %s to %s instead"
 msgstr "Переименовываю %s в %s и %s в %s вместо этого"
 
-#: merge-recursive.c:1459
+#: merge-recursive.c:1458
 #, c-format
 msgid "CONFLICT (rename/add): Rename %s->%s in %s. %s added in %s"
 msgstr "КОНФЛИКТ (переименование/добавление): Переименование «%s»→«%s» в ветке «%s» и добавление «%s» в ветке «%s»"
 
-#: merge-recursive.c:1469
+#: merge-recursive.c:1468
 #, c-format
 msgid "Adding merged %s"
 msgstr "Добавление слитого %s"
 
-#: merge-recursive.c:1474 merge-recursive.c:1672
+#: merge-recursive.c:1473 merge-recursive.c:1671
 #, c-format
 msgid "Adding as %s instead"
 msgstr "Добавление вместо этого как %s"
 
-#: merge-recursive.c:1525
+#: merge-recursive.c:1524
 #, c-format
 msgid "cannot read object %s"
 msgstr "невозможно прочитать объект «%s»"
 
-#: merge-recursive.c:1528
+#: merge-recursive.c:1527
 #, c-format
 msgid "object %s is not a blob"
 msgstr "объект %s не является двоичным объектом"
 
-#: merge-recursive.c:1576
+#: merge-recursive.c:1575
 msgid "modify"
 msgstr "изменение"
 
-#: merge-recursive.c:1576
+#: merge-recursive.c:1575
 msgid "modified"
 msgstr "изменено"
 
-#: merge-recursive.c:1586
+#: merge-recursive.c:1585
 msgid "content"
 msgstr "содержимое"
 
-#: merge-recursive.c:1593
+#: merge-recursive.c:1592
 msgid "add/add"
 msgstr "добавление/добавление"
 
-#: merge-recursive.c:1627
+#: merge-recursive.c:1626
 #, c-format
 msgid "Skipped %s (merged same as existing)"
 msgstr "Пропуск %s (слиты одинаковые изменения как существующие)"
 
-#: merge-recursive.c:1641
+#: merge-recursive.c:1640
 #, c-format
 msgid "Auto-merging %s"
 msgstr "Автослияние %s"
 
-#: merge-recursive.c:1645 git-submodule.sh:1150
+#: merge-recursive.c:1644 git-submodule.sh:1150
 msgid "submodule"
 msgstr "подмодуль"
 
-#: merge-recursive.c:1646
+#: merge-recursive.c:1645
 #, c-format
 msgid "CONFLICT (%s): Merge conflict in %s"
 msgstr "КОНФЛИКТ (%s): Конфликт слияния в %s"
 
-#: merge-recursive.c:1732
+#: merge-recursive.c:1731
 #, c-format
 msgid "Removing %s"
 msgstr "Удаление %s"
 
-#: merge-recursive.c:1757
+#: merge-recursive.c:1756
 msgid "file/directory"
 msgstr "файл/каталог"
 
-#: merge-recursive.c:1763
+#: merge-recursive.c:1762
 msgid "directory/file"
 msgstr "каталог/файл"
 
-#: merge-recursive.c:1768
+#: merge-recursive.c:1767
 #, c-format
 msgid ""
 "CONFLICT (%s): There is a directory with name %s in %s. Adding %s as %s"
 msgstr "КОНФЛИКТ (%s): Уже существует каталог с именем «%s» в «%s». Добавление «%s» как «%s»"
 
-#: merge-recursive.c:1778
+#: merge-recursive.c:1777
 #, c-format
 msgid "Adding %s"
 msgstr "Добавление %s"
 
-#: merge-recursive.c:1795
+#: merge-recursive.c:1794
 msgid "Fatal merge failure, shouldn't happen."
 msgstr "Критическая ошибка слияния, такого не должно случаться."
 
-#: merge-recursive.c:1814
+#: merge-recursive.c:1813
 msgid "Already up-to-date!"
 msgstr "Уже обновлено!"
 
-#: merge-recursive.c:1823
+#: merge-recursive.c:1822
 #, c-format
 msgid "merging of trees %s and %s failed"
 msgstr "сбой слияния деревьев «%s» и «%s»"
 
-#: merge-recursive.c:1853
+#: merge-recursive.c:1852
 #, c-format
 msgid "Unprocessed path??? %s"
 msgstr "Необработанный путь??? %s"
 
-#: merge-recursive.c:1901
+#: merge-recursive.c:1900
 msgid "Merging:"
 msgstr "Слияние:"
 
-#: merge-recursive.c:1914
+#: merge-recursive.c:1913
 #, c-format
 msgid "found %u common ancestor:"
 msgid_plural "found %u common ancestors:"
 msgstr[0] "найден %u общий предок:"
 msgstr[1] "найдено %u общих предка:"
 msgstr[2] "найдено %u общих предков:"
+msgstr[3] "найдено %u общих предков:"
 
-#: merge-recursive.c:1951
+#: merge-recursive.c:1950
 msgid "merge returned no commit"
 msgstr "слияние не вернуло коммит"
 
-#: merge-recursive.c:2008
+#: merge-recursive.c:2007
 #, c-format
 msgid "Could not parse object '%s'"
 msgstr "Не удалось разобрать объект «%s»"
 
-#: merge-recursive.c:2019 builtin/merge.c:667
+#: merge-recursive.c:2018 builtin/merge.c:645
 msgid "Unable to write index."
 msgstr "Не удается записать индекс."
 
 #: notes-utils.c:41
 msgid "Cannot commit uninitialized/unreferenced notes tree"
 msgstr "Нельзя закоммитить неинициализированное или не имеющее ссылок дерево заметок"
@@ -901,13 +922,13 @@
 #. environment variable, the second %s is its value
 #: notes-utils.c:119
 #, c-format
 msgid "Bad %s value: '%s'"
 msgstr "Неправильное значение переменной %s: «%s»"
 
-#: object.c:241
+#: object.c:242
 #, c-format
 msgid "unable to parse object: %s"
 msgstr "не удалось разобрать объект: %s"
 
 #: parse-options.c:546
 msgid "..."
@@ -995,105 +1016,150 @@
 msgstr "Не указан шаблон для исключения с помощью :(exclude).\nВозможно, вы забыли «:/» или «.» ?"
 
 #: pretty.c:968
 msgid "unable to parse --pretty format"
 msgstr "не удалось разобрать формат для --pretty"
 
-#: progress.c:225
+#: progress.c:236
 msgid "done"
 msgstr "готово"
 
-#: read-cache.c:1275
+#: read-cache.c:1295
 #, c-format
 msgid ""
 "index.version set, but the value is invalid.\n"
 "Using version %i"
 msgstr "index.version указан, но значение недействительное.\nИспользую версию %i"
 
-#: read-cache.c:1285
+#: read-cache.c:1305
 #, c-format
 msgid ""
 "GIT_INDEX_VERSION set, but the value is invalid.\n"
 "Using version %i"
 msgstr "GIT_INDEX_VERSION указан, но значение недействительное.\nИспользую версию %i"
 
-#: remote.c:782
+#: remote.c:792
 #, c-format
 msgid "Cannot fetch both %s and %s to %s"
 msgstr "Нельзя извлечь одновременно %s и %s в %s"
 
-#: remote.c:786
+#: remote.c:796
 #, c-format
 msgid "%s usually tracks %s, not %s"
 msgstr "%s обычно отслеживает %s, а не %s"
 
-#: remote.c:790
+#: remote.c:800
 #, c-format
 msgid "%s tracks both %s and %s"
 msgstr "%s отслеживает и %s и %s"
 
-#: remote.c:798
+#: remote.c:808
 msgid "Internal error"
 msgstr "Внутренняя ошибка"
 
-#: remote.c:1980
+#: remote.c:1723 remote.c:1766
+msgid "HEAD does not point to a branch"
+msgstr "HEAD не указывает на ветку"
+
+#: remote.c:1732
+#, c-format
+msgid "no such branch: '%s'"
+msgstr "нет такой ветки: «%s»"
+
+#: remote.c:1735
+#, c-format
+msgid "no upstream configured for branch '%s'"
+msgstr "вышестоящая ветка не настроена для ветки «%s»"
+
+#: remote.c:1741
+#, c-format
+msgid "upstream branch '%s' not stored as a remote-tracking branch"
+msgstr "вышестоящая ветка «%s» не сохранена как отслеживаемая ветка"
+
+#: remote.c:1756
+#, c-format
+msgid "push destination '%s' on remote '%s' has no local tracking branch"
+msgstr "назначение для отправки «%s» на внешнем сервере «%s» не имеет локальной отслеживаемой ветки"
+
+#: remote.c:1771
+#, c-format
+msgid "branch '%s' has no remote for pushing"
+msgstr "ветка «%s» не имеет внешнего сервера для отправки"
+
+#: remote.c:1782
+#, c-format
+msgid "push refspecs for '%s' do not include '%s'"
+msgstr "спецификации пути для отправки «%s» не включают в себя «%s»"
+
+#: remote.c:1795
+msgid "push has no destination (push.default is 'nothing')"
+msgstr "отправка не имеет точки назначения (push.default выставлен в «nothing»)"
+
+#: remote.c:1817
+msgid "cannot resolve 'simple' push to a single destination"
+msgstr "не удалось выполнить «simple» отправку в единственную точку назначения"
+
+#: remote.c:2124
 #, c-format
 msgid "Your branch is based on '%s', but the upstream is gone.\n"
 msgstr "Ваша ветка базируется на «%s», но вышестоящий репозиторий исчез.\n"
 
-#: remote.c:1984
+#: remote.c:2128
 msgid "  (use \"git branch --unset-upstream\" to fixup)\n"
 msgstr "(для исправления запустите «git branch --unset-upstream»)\n"
 
-#: remote.c:1987
+#: remote.c:2131
 #, c-format
 msgid "Your branch is up-to-date with '%s'.\n"
 msgstr "Ваша ветка обновлена в соответствии с «%s».\n"
 
-#: remote.c:1991
+#: remote.c:2135
 #, c-format
 msgid "Your branch is ahead of '%s' by %d commit.\n"
 msgid_plural "Your branch is ahead of '%s' by %d commits.\n"
 msgstr[0] "Ваша ветка опережает «%s» на %d коммит.\n"
 msgstr[1] "Ваша ветка опережает «%s» на %d коммита.\n"
 msgstr[2] "Ваша ветка опережает «%s» на %d коммитов.\n"
+msgstr[3] "Ваша ветка опережает «%s» на %d коммитов.\n"
 
-#: remote.c:1997
+#: remote.c:2141
 msgid "  (use \"git push\" to publish your local commits)\n"
 msgstr "  (используйте «git push», чтобы опубликовать ваши локальные коммиты)\n"
 
-#: remote.c:2000
+#: remote.c:2144
 #, c-format
 msgid "Your branch is behind '%s' by %d commit, and can be fast-forwarded.\n"
 msgid_plural ""
 "Your branch is behind '%s' by %d commits, and can be fast-forwarded.\n"
 msgstr[0] "Ваша ветка отстает от «%s» на %d коммит и может быть перемотана вперед.\n"
 msgstr[1] "Ваша ветка отстает от «%s» на %d коммита и может быть перемотана вперед.\n"
 msgstr[2] "Ваша ветка отстает от «%s» на %d коммитов и может быть перемотана вперед.\n"
+msgstr[3] "Ваша ветка отстает от «%s» на %d коммитов и может быть перемотана вперед.\n"
 
-#: remote.c:2008
+#: remote.c:2152
 msgid "  (use \"git pull\" to update your local branch)\n"
 msgstr "  (используйте «git pull», чтобы обновить вашу локальную ветку)\n"
 
-#: remote.c:2011
+#: remote.c:2155
 #, c-format
 msgid ""
 "Your branch and '%s' have diverged,\n"
 "and have %d and %d different commit each, respectively.\n"
 msgid_plural ""
 "Your branch and '%s' have diverged,\n"
 "and have %d and %d different commits each, respectively.\n"
 msgstr[0] "Ваша ветка и «%s» разошлись\nи теперь имеют %d и %d разный коммит в каждой соответственно.\n"
 msgstr[1] "Ваша ветка и «%s» разошлись\nи теперь имеют %d и %d разных коммита в каждой соответственно.\n"
 msgstr[2] "Ваша ветка и «%s» разошлись\nи теперь имеют %d и %d разных коммитов в каждой соответственно.\n"
+msgstr[3] "Ваша ветка и «%s» разошлись\nи теперь имеют %d и %d разных коммитов в каждой соответственно.\n"
 
-#: remote.c:2021
+#: remote.c:2165
 msgid "  (use \"git pull\" to merge the remote branch into yours)\n"
 msgstr "  (используйте «git pull», чтобы слить внешнюю ветку в вашу)\n"
 
-#: revision.c:2348
+#: revision.c:2366
 msgid "--first-parent is incompatible with --bisect"
 msgstr "опцию --first-parent нельзя использовать одновременно с --bisect"
 
 #: run-command.c:83
 msgid "open /dev/null failed"
 msgstr "сбой открытия /dev/null"
@@ -1104,28 +1170,28 @@
 msgstr "dup2(%d,%d) сбой"
 
 #: send-pack.c:272
 msgid "failed to sign the push certificate"
 msgstr "сбой подписания сертификата отправки"
 
-#: send-pack.c:356
+#: send-pack.c:378
 msgid "the receiving end does not support --signed push"
 msgstr "принимающая сторона не поддерживает отправку с опцией --signed"
 
-#: send-pack.c:366
+#: send-pack.c:389
 msgid "the receiving end does not support --atomic push"
 msgstr "принимающая сторона не поддерживает отправку с опцией --atomic"
 
-#: sequencer.c:172 builtin/merge.c:782 builtin/merge.c:893 builtin/merge.c:995
-#: builtin/merge.c:1005
+#: sequencer.c:172 builtin/merge.c:760 builtin/merge.c:871 builtin/merge.c:973
+#: builtin/merge.c:983
 #, c-format
 msgid "Could not open '%s' for writing"
 msgstr "Не удалось открыть «%s» для записи"
 
-#: sequencer.c:174 builtin/merge.c:344 builtin/merge.c:785 builtin/merge.c:997
-#: builtin/merge.c:1010
+#: sequencer.c:174 builtin/merge.c:344 builtin/merge.c:763 builtin/merge.c:975
+#: builtin/merge.c:988
 #, c-format
 msgid "Could not write to '%s'"
 msgstr "Не удалось записать в «%s»"
 
 #: sequencer.c:195
 msgid ""
@@ -1312,13 +1378,13 @@
 msgstr "не удалось определить HEAD"
 
 #: sequencer.c:886
 msgid "cannot abort from a branch yet to be born"
 msgstr "нельзя отменить изменения с ветки, которая еще не создана"
 
-#: sequencer.c:908 builtin/apply.c:4288
+#: sequencer.c:908 builtin/apply.c:4291
 #, c-format
 msgid "cannot open %s: %s"
 msgstr "не удалось открыть %s: %s"
 
 #: sequencer.c:911
 #, c-format
@@ -1354,44 +1420,30 @@
 msgstr "Нельзя возвратить изначальный коммит"
 
 #: sequencer.c:1124
 msgid "Can't cherry-pick into empty head"
 msgstr "Нельзя отобрать лучшее в пустой HEAD"
 
-#: sha1_name.c:440
+#: setup.c:243
+#, c-format
+msgid "failed to read %s"
+msgstr "не удалось прочитать %s"
+
+#: sha1_name.c:453
 msgid ""
 "Git normally never creates a ref that ends with 40 hex characters\n"
 "because it will be ignored when you just specify 40-hex. These refs\n"
 "may be created by mistake. For example,\n"
 "\n"
 "  git checkout -b $br $(git rev-parse ...)\n"
 "\n"
 "where \"$br\" is somehow empty and a 40-hex ref is created. Please\n"
 "examine these refs and maybe delete them. Turn this message off by\n"
 "running \"git config advice.objectNameWarning false\""
 msgstr "Обычно Git не создает ссылки, оканчивающиеся на 40 шестнадцатеричных\nсимволов, потому, что они будут игнорироваться, когда вы просто\nукажете это 40-символьное шестнадцатеричное число. Такие ссылки\nмогли быть созданы по ошибке. Например, с помощью:\n\n  git checkout -b $br $(git rev-parse …)\n\n, если «$br» оказался пустым, то ссылка с 40-символьным\nшестнадцатеричным числом будет создана. Пожалуйста, просмотрите эти\nссылки и, возможно, удалите их. Вы можете отключить это сообщение\nзапустив «git config advice.objectNameWarning false»"
 
-#: sha1_name.c:1068
-msgid "HEAD does not point to a branch"
-msgstr "HEAD не указывает на ветку"
-
-#: sha1_name.c:1071
-#, c-format
-msgid "No such branch: '%s'"
-msgstr "Нет такой ветки: «%s»"
-
-#: sha1_name.c:1073
-#, c-format
-msgid "No upstream configured for branch '%s'"
-msgstr "Вышестоящий репозиторий не настроен для ветки «%s»"
-
-#: sha1_name.c:1077
-#, c-format
-msgid "Upstream branch '%s' not stored as a remote-tracking branch"
-msgstr "Вышестоящая ветка «%s» не сохранена как отслеживаемая ветка"
-
 #: submodule.c:64 submodule.c:98
 msgid "Cannot change unmerged .gitmodules, resolve merge conflicts first"
 msgstr "Не удалось изменить не слитый .gitmodules, сначала разрешите конфликты"
 
 #: submodule.c:68 submodule.c:102
 #, c-format
@@ -1409,18 +1461,13 @@
 msgstr "Не удалось удалить запись в .gitmodules для %s"
 
 #: submodule.c:120
 msgid "staging updated .gitmodules failed"
 msgstr "сбой индексирования обновленного .gitmodules"
 
-#: submodule.c:1109 builtin/init-db.c:371
-#, c-format
-msgid "Could not create git link %s"
-msgstr "Не удалось создать git ссылку %s"
-
-#: submodule.c:1120
+#: submodule.c:1115
 #, c-format
 msgid "Could not set core.worktree in %s"
 msgstr "Не удалось установить core.worktree в %s"
 
 #: trailer.c:491 trailer.c:495 trailer.c:499 trailer.c:553 trailer.c:557
 #: trailer.c:561
@@ -1444,13 +1491,13 @@
 msgstr "не удалось прочитать входной файл «%s»"
 
 #: trailer.c:704
 msgid "could not read from stdin"
 msgstr "не удалось прочитать из стандартного ввода"
 
-#: unpack-trees.c:202
+#: unpack-trees.c:203
 msgid "Checking out files"
 msgstr "Распаковка файлов"
 
 #: urlmatch.c:120
 msgid "invalid URL scheme name or missing '://' suffix"
 msgstr "Неправильная имя URL схемы или пропущен суффикс «://»"
@@ -1500,12 +1547,27 @@
 msgstr "нет такого пользователя"
 
 #: wrapper.c:564
 msgid "unable to get current working directory"
 msgstr "не удалось получить текущий рабочий каталог"
 
+#: wrapper.c:575
+#, c-format
+msgid "could not open %s for writing"
+msgstr "не удалось открыть «%s» для записи"
+
+#: wrapper.c:587
+#, c-format
+msgid "could not write to %s"
+msgstr "не удалось записать в %s"
+
+#: wrapper.c:593
+#, c-format
+msgid "could not close %s"
+msgstr "не удалось закрыть %s"
+
 #: wt-status.c:150
 msgid "Unmerged paths:"
 msgstr "Не слитые пути:"
 
 #: wt-status.c:177 wt-status.c:204
 #, c-format
@@ -1525,17 +1587,17 @@
 msgstr "  (используйте «git add/rm <файл>…», чтобы пометить выбранное разрешение конфликта)"
 
 #: wt-status.c:187
 msgid "  (use \"git rm <file>...\" to mark resolution)"
 msgstr "  (используйте «git rm <файл>…», чтобы пометить разрешение конфликта)"
 
-#: wt-status.c:198 wt-status.c:878
+#: wt-status.c:198 wt-status.c:881
 msgid "Changes to be committed:"
 msgstr "Изменения, которые будут включены в коммит:"
 
-#: wt-status.c:216 wt-status.c:887
+#: wt-status.c:216 wt-status.c:890
 msgid "Changes not staged for commit:"
 msgstr "Изменения, которые не в индексе для коммита:"
 
 #: wt-status.c:220
 msgid "  (use \"git add <file>...\" to update what will be committed)"
 msgstr "  (используйте «git add <файл>…», чтобы добавить файл в индекс)"
@@ -1638,277 +1700,277 @@
 
 #: wt-status.c:391
 #, c-format
 msgid "bug: unhandled diff status %c"
 msgstr "ошибка: необработанный статус изменений %c"
 
-#: wt-status.c:753
+#: wt-status.c:755
 msgid "Submodules changed but not updated:"
 msgstr "Измененные, но не обновленные подмодули:"
 
-#: wt-status.c:755
+#: wt-status.c:757
 msgid "Submodule changes to be committed:"
 msgstr "Изменения в подмодулях, которые будут закоммичены:"
 
-#: wt-status.c:835
+#: wt-status.c:838
 msgid ""
 "Do not touch the line above.\n"
 "Everything below will be removed."
 msgstr "Не трогайте строку выше этой.\nВсё, что ниже — будет удалено."
 
-#: wt-status.c:946
+#: wt-status.c:949
 msgid "You have unmerged paths."
 msgstr "У вас есть не слитые пути."
 
-#: wt-status.c:949
+#: wt-status.c:952
 msgid "  (fix conflicts and run \"git commit\")"
 msgstr "  (разрешите конфликты, затем запустите «git commit»)"
 
-#: wt-status.c:952
+#: wt-status.c:955
 msgid "All conflicts fixed but you are still merging."
 msgstr "Все конфликты исправлены, но вы все еще в процессе слияния."
 
-#: wt-status.c:955
+#: wt-status.c:958
 msgid "  (use \"git commit\" to conclude merge)"
 msgstr "  (используйте «git commit», чтобы завершить слияние)"
 
-#: wt-status.c:965
+#: wt-status.c:968
 msgid "You are in the middle of an am session."
 msgstr "Вы в процессе сессии am."
 
-#: wt-status.c:968
+#: wt-status.c:971
 msgid "The current patch is empty."
 msgstr "Текущий патч пустой."
 
-#: wt-status.c:972
+#: wt-status.c:975
 msgid "  (fix conflicts and then run \"git am --continue\")"
 msgstr "  (разрешите конфликты, затем запустите «git am --continue»)"
 
-#: wt-status.c:974
+#: wt-status.c:977
 msgid "  (use \"git am --skip\" to skip this patch)"
 msgstr "  (используйте «git am --skip», чтобы пропустить этот патч)"
 
-#: wt-status.c:976
+#: wt-status.c:979
 msgid "  (use \"git am --abort\" to restore the original branch)"
 msgstr "  (используйте «git am --abort», чтобы восстановить оригинальную ветку)"
 
-#: wt-status.c:1036 wt-status.c:1053
+#: wt-status.c:1039 wt-status.c:1056
 #, c-format
 msgid "You are currently rebasing branch '%s' on '%s'."
 msgstr "Вы сейчас перемещаете ветку «%s» над «%s»."
 
-#: wt-status.c:1041 wt-status.c:1058
+#: wt-status.c:1044 wt-status.c:1061
 msgid "You are currently rebasing."
 msgstr "Вы сейчас перемещаете ветку."
 
-#: wt-status.c:1044
+#: wt-status.c:1047
 msgid "  (fix conflicts and then run \"git rebase --continue\")"
 msgstr "  (разрешите конфликты, затем запустите «git rebase --continue»)"
 
-#: wt-status.c:1046
+#: wt-status.c:1049
 msgid "  (use \"git rebase --skip\" to skip this patch)"
 msgstr "  (используйте «git rebase --skip», чтобы пропустить этот патч)"
 
-#: wt-status.c:1048
+#: wt-status.c:1051
 msgid "  (use \"git rebase --abort\" to check out the original branch)"
 msgstr "  (используйте «git rebase --abort», чтобы перейти на оригинальную ветку)"
 
-#: wt-status.c:1061
+#: wt-status.c:1064
 msgid "  (all conflicts fixed: run \"git rebase --continue\")"
 msgstr "  (все конфликты разрешены: запустите «git rebase --continue»)"
 
-#: wt-status.c:1065
+#: wt-status.c:1068
 #, c-format
 msgid ""
 "You are currently splitting a commit while rebasing branch '%s' on '%s'."
 msgstr "Вы сейчас разделяете коммит при перемещении ветки  «%s» над «%s»."
 
-#: wt-status.c:1070
+#: wt-status.c:1073
 msgid "You are currently splitting a commit during a rebase."
 msgstr "Вы сейчас разделяете коммит при перемещении ветки."
 
-#: wt-status.c:1073
+#: wt-status.c:1076
 msgid "  (Once your working directory is clean, run \"git rebase --continue\")"
 msgstr "(Как только ваш рабочий каталог будет чистый, запустите «git rebase --continue»)"
 
-#: wt-status.c:1077
+#: wt-status.c:1080
 #, c-format
 msgid "You are currently editing a commit while rebasing branch '%s' on '%s'."
 msgstr "Вы сейчас редактируете коммит при перемещении ветки  «%s» над «%s»."
 
-#: wt-status.c:1082
+#: wt-status.c:1085
 msgid "You are currently editing a commit during a rebase."
 msgstr "Вы сейчас редактируете коммит при перемещении ветки."
 
-#: wt-status.c:1085
+#: wt-status.c:1088
 msgid "  (use \"git commit --amend\" to amend the current commit)"
 msgstr "  (используйте «git commit --amend», чтобы исправить текущий коммит)"
 
-#: wt-status.c:1087
+#: wt-status.c:1090
 msgid "  (use \"git rebase --continue\" once you are satisfied with your changes)"
 msgstr "  (используйте «git rebase --continue», когда будете довольны изменениями)"
 
-#: wt-status.c:1097
+#: wt-status.c:1100
 #, c-format
 msgid "You are currently cherry-picking commit %s."
 msgstr "Вы сейчас отбираете лучший коммит %s."
 
-#: wt-status.c:1102
+#: wt-status.c:1105
 msgid "  (fix conflicts and run \"git cherry-pick --continue\")"
 msgstr "  (разрешите конфликты, затем запустите «git cherry-pick --continue»)"
 
-#: wt-status.c:1105
+#: wt-status.c:1108
 msgid "  (all conflicts fixed: run \"git cherry-pick --continue\")"
 msgstr "  (все конфликты разрешены: запустите «git cherry-pick --continue»)"
 
-#: wt-status.c:1107
+#: wt-status.c:1110
 msgid "  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)"
 msgstr "  (используйте «git cherry-pick --abort», чтобы отменить операцию отбора лучшего)"
 
-#: wt-status.c:1116
+#: wt-status.c:1119
 #, c-format
 msgid "You are currently reverting commit %s."
 msgstr "Вы сейчас возвращаете коммит %s."
 
-#: wt-status.c:1121
+#: wt-status.c:1124
 msgid "  (fix conflicts and run \"git revert --continue\")"
 msgstr "  (разрешите конфликты, затем запустите «git revert --continue»)"
 
-#: wt-status.c:1124
+#: wt-status.c:1127
 msgid "  (all conflicts fixed: run \"git revert --continue\")"
 msgstr "  (все конфликты разрешены: запустите «git revert --continue»)"
 
-#: wt-status.c:1126
+#: wt-status.c:1129
 msgid "  (use \"git revert --abort\" to cancel the revert operation)"
 msgstr "  (используйте «git revert --abort», чтобы отменить операцию возврата)"
 
-#: wt-status.c:1137
+#: wt-status.c:1140
 #, c-format
 msgid "You are currently bisecting, started from branch '%s'."
 msgstr "Вы сейчас в процессе двоичного поиска, начатого с ветки «%s»."
 
-#: wt-status.c:1141
+#: wt-status.c:1144
 msgid "You are currently bisecting."
 msgstr "Вы сейчас в процессе двоичного поиска."
 
-#: wt-status.c:1144
+#: wt-status.c:1147
 msgid "  (use \"git bisect reset\" to get back to the original branch)"
 msgstr "  (используйте «git bisect reset», чтобы вернуться на исходную ветку)"
 
-#: wt-status.c:1321
+#: wt-status.c:1324
 msgid "On branch "
 msgstr "На ветке "
 
-#: wt-status.c:1328
+#: wt-status.c:1331
 msgid "rebase in progress; onto "
 msgstr "перемещение в процессе; над "
 
-#: wt-status.c:1333
+#: wt-status.c:1336
 msgid "HEAD detached at "
 msgstr "HEAD отделен на "
 
-#: wt-status.c:1335
+#: wt-status.c:1338
 msgid "HEAD detached from "
 msgstr "HEAD отделен начиная с "
 
-#: wt-status.c:1338
+#: wt-status.c:1341
 msgid "Not currently on any branch."
 msgstr "Сейчас ни на одной из веток"
 
-#: wt-status.c:1355
+#: wt-status.c:1358
 msgid "Initial commit"
 msgstr "Начальный коммит"
 
-#: wt-status.c:1369
+#: wt-status.c:1372
 msgid "Untracked files"
 msgstr "Неотслеживаемые файлы"
 
-#: wt-status.c:1371
+#: wt-status.c:1374
 msgid "Ignored files"
 msgstr "Игнорируемые файлы"
 
-#: wt-status.c:1375
+#: wt-status.c:1378
 #, c-format
 msgid ""
 "It took %.2f seconds to enumerate untracked files. 'status -uno'\n"
 "may speed it up, but you have to be careful not to forget to add\n"
 "new files yourself (see 'git help status')."
 msgstr "%.2f секунды занял вывод списка неотслеживаемых файлов. «status -uno» возможно может ускорить это, но будьте внимательны, и не забудьте добавить новые файлы вручную (смотрите «git help status» для подробностей)."
 
-#: wt-status.c:1381
+#: wt-status.c:1384
 #, c-format
 msgid "Untracked files not listed%s"
 msgstr "Неотслеживаемые файлы не показаны%s"
 
-#: wt-status.c:1383
+#: wt-status.c:1386
 msgid " (use -u option to show untracked files)"
 msgstr "(используйте опцию «-u», чтобы показать неотслеживаемые файлы)"
 
-#: wt-status.c:1389
+#: wt-status.c:1392
 msgid "No changes"
 msgstr "Нет изменений"
 
-#: wt-status.c:1394
+#: wt-status.c:1397
 #, c-format
 msgid "no changes added to commit (use \"git add\" and/or \"git commit -a\")\n"
 msgstr "нет изменений добавленных для коммита\n(используйте «git add» и/или «git commit -a»)\n"
 
-#: wt-status.c:1397
+#: wt-status.c:1400
 #, c-format
 msgid "no changes added to commit\n"
 msgstr "нет изменений добавленных для коммита\n"
 
-#: wt-status.c:1400
+#: wt-status.c:1403
 #, c-format
 msgid ""
 "nothing added to commit but untracked files present (use \"git add\" to "
 "track)\n"
 msgstr "ничего не добавлено в коммит, но есть неотслеживаемые файлы (используйте \"git add\", чтобы отслеживать их)\n"
 
-#: wt-status.c:1403
+#: wt-status.c:1406
 #, c-format
 msgid "nothing added to commit but untracked files present\n"
 msgstr "ничего не добавлено в коммит, но есть неотслеживаемые файлы\n"
 
-#: wt-status.c:1406
+#: wt-status.c:1409
 #, c-format
 msgid "nothing to commit (create/copy files and use \"git add\" to track)\n"
 msgstr "нечего коммитить (создайте/скопируйте файлы, затем запустите «git add», чтобы отслеживать их)\n"
 
-#: wt-status.c:1409 wt-status.c:1414
+#: wt-status.c:1412 wt-status.c:1417
 #, c-format
 msgid "nothing to commit\n"
 msgstr "нечего коммитить\n"
 
-#: wt-status.c:1412
+#: wt-status.c:1415
 #, c-format
 msgid "nothing to commit (use -u to show untracked files)\n"
 msgstr "нечего коммитить (используйте опцию «-u», чтобы показать неотслеживаемые файлы)\n"
 
-#: wt-status.c:1416
+#: wt-status.c:1419
 #, c-format
 msgid "nothing to commit, working directory clean\n"
 msgstr "нечего коммитить, нет изменений в рабочем каталоге\n"
 
-#: wt-status.c:1525
+#: wt-status.c:1528
 msgid "HEAD (no branch)"
 msgstr "HEAD (нет ветки)"
 
-#: wt-status.c:1531
+#: wt-status.c:1534
 msgid "Initial commit on "
 msgstr "Начальный коммит на "
 
-#: wt-status.c:1563
+#: wt-status.c:1561
 msgid "gone"
 msgstr "исчез"
 
-#: wt-status.c:1565 wt-status.c:1573
+#: wt-status.c:1563 wt-status.c:1571
 msgid "behind "
 msgstr "позади"
 
-#: compat/precompose_utf8.c:55 builtin/clone.c:360
+#: compat/precompose_utf8.c:55 builtin/clone.c:345
 #, c-format
 msgid "failed to unlink '%s'"
 msgstr "сбой отсоединения «%s»"
 
 #: builtin/add.c:22
 msgid "git add [<options>] [--] <pathspec>..."
@@ -1929,132 +1991,136 @@
 msgstr "удалить «%s»\n"
 
 #: builtin/add.c:134
 msgid "Unstaged changes after refreshing the index:"
 msgstr "Непроиндексированные изменения после обновления индекса:"
 
-#: builtin/add.c:194 builtin/rev-parse.c:785
+#: builtin/add.c:194 builtin/rev-parse.c:796
 msgid "Could not read the index"
 msgstr "Не удалось прочитать индекс"
 
 #: builtin/add.c:205
 #, c-format
 msgid "Could not open '%s' for writing."
 msgstr "Не удалось открыть «%s» для записи."
 
 #: builtin/add.c:209
 msgid "Could not write patch"
 msgstr "Не удалось записать патч"
 
-#: builtin/add.c:214
+#: builtin/add.c:212
+msgid "editing patch failed"
+msgstr "сбой при редактировании патча"
+
+#: builtin/add.c:215
 #, c-format
 msgid "Could not stat '%s'"
 msgstr "Не удалось выполнить stat для «%s»"
 
-#: builtin/add.c:216
+#: builtin/add.c:217
 msgid "Empty patch. Aborted."
 msgstr "Пустой патч. Операция прервана."
 
-#: builtin/add.c:221
+#: builtin/add.c:222
 #, c-format
 msgid "Could not apply '%s'"
 msgstr "Не удалось применить «%s»"
 
-#: builtin/add.c:231
+#: builtin/add.c:232
 msgid "The following paths are ignored by one of your .gitignore files:\n"
 msgstr "Следующие пути игнорируются одним из ваших файлов .gitignore:\n"
 
-#: builtin/add.c:248 builtin/clean.c:876 builtin/fetch.c:107 builtin/mv.c:110
-#: builtin/prune-packed.c:55 builtin/push.c:508 builtin/remote.c:1372
-#: builtin/rm.c:269
+#: builtin/add.c:249 builtin/clean.c:874 builtin/fetch.c:107 builtin/mv.c:110
+#: builtin/prune-packed.c:55 builtin/push.c:508 builtin/remote.c:1369
+#: builtin/rm.c:268
 msgid "dry run"
 msgstr "пробный запуск"
 
-#: builtin/add.c:249 builtin/apply.c:4577 builtin/check-ignore.c:19
-#: builtin/commit.c:1322 builtin/count-objects.c:63 builtin/fsck.c:608
+#: builtin/add.c:250 builtin/apply.c:4580 builtin/check-ignore.c:19
+#: builtin/commit.c:1322 builtin/count-objects.c:63 builtin/fsck.c:616
 #: builtin/log.c:1617 builtin/mv.c:109 builtin/read-tree.c:114
 msgid "be verbose"
 msgstr "быть многословнее"
 
-#: builtin/add.c:251
+#: builtin/add.c:252
 msgid "interactive picking"
 msgstr "интерактивный выбор"
 
-#: builtin/add.c:252 builtin/checkout.c:1126 builtin/reset.c:286
+#: builtin/add.c:253 builtin/checkout.c:1221 builtin/reset.c:286
 msgid "select hunks interactively"
 msgstr "интерактивный выбор блоков"
 
-#: builtin/add.c:253
+#: builtin/add.c:254
 msgid "edit current diff and apply"
 msgstr "отредактировать текущий файл различий и применить его"
 
-#: builtin/add.c:254
+#: builtin/add.c:255
 msgid "allow adding otherwise ignored files"
 msgstr "разрешить добавление игнорируемых иначе файлов"
 
-#: builtin/add.c:255
+#: builtin/add.c:256
 msgid "update tracked files"
 msgstr "обновить отслеживаемые файлы"
 
-#: builtin/add.c:256
+#: builtin/add.c:257
 msgid "record only the fact that the path will be added later"
 msgstr "записать только факт, что путь будет добавлен позже"
 
-#: builtin/add.c:257
+#: builtin/add.c:258
 msgid "add changes from all tracked and untracked files"
 msgstr "добавить изменения из всех отслеживаемых и неотслеживаемых файлов"
 
-#: builtin/add.c:260
+#: builtin/add.c:261
 msgid "ignore paths removed in the working tree (same as --no-all)"
 msgstr "игнорировать пути удаленные из рабочего каталога (тоже, что и --no-all)"
 
-#: builtin/add.c:262
+#: builtin/add.c:263
 msgid "don't add, only refresh the index"
 msgstr "не добавлять, только обновить индекс"
 
-#: builtin/add.c:263
+#: builtin/add.c:264
 msgid "just skip files which cannot be added because of errors"
 msgstr "пропускать файлы, которые не могут быть добавлены из-за ошибок"
 
-#: builtin/add.c:264
+#: builtin/add.c:265
 msgid "check if - even missing - files are ignored in dry run"
 msgstr "удостовериться, что даже недостающие файлы будут проигнорированы при  пробном запуске"
 
-#: builtin/add.c:286
+#: builtin/add.c:287
 #, c-format
 msgid "Use -f if you really want to add them.\n"
 msgstr "Используйте -f, если вы действительно хотите добавить их.\n"
 
-#: builtin/add.c:293
+#: builtin/add.c:294
 msgid "adding files failed"
 msgstr "ошибка при добавлении файлов"
 
-#: builtin/add.c:329
+#: builtin/add.c:330
 msgid "-A and -u are mutually incompatible"
 msgstr "-A и -u нельзя использовать одновременно"
 
-#: builtin/add.c:336
+#: builtin/add.c:337
 msgid "Option --ignore-missing can only be used together with --dry-run"
 msgstr "Опция --ignore-missing может использоваться только вместе с --dry-run"
 
-#: builtin/add.c:357
+#: builtin/add.c:358
 #, c-format
 msgid "Nothing specified, nothing added.\n"
 msgstr "Ничего не указано, ничего не добавлено.\n"
 
-#: builtin/add.c:358
+#: builtin/add.c:359
 #, c-format
 msgid "Maybe you wanted to say 'git add .'?\n"
 msgstr "Возможно, вы имели в виду «git add .»?\n"
 
-#: builtin/add.c:363 builtin/check-ignore.c:172 builtin/clean.c:920
-#: builtin/commit.c:335 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:299
+#: builtin/add.c:364 builtin/check-ignore.c:172 builtin/clean.c:918
+#: builtin/commit.c:335 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:298
 msgid "index file corrupt"
 msgstr "файл индекса поврежден"
 
-#: builtin/add.c:446 builtin/apply.c:4675 builtin/mv.c:279 builtin/rm.c:431
+#: builtin/add.c:447 builtin/apply.c:4678 builtin/mv.c:279 builtin/rm.c:430
 msgid "Unable to write new index file"
 msgstr "Не удалось записать новый файл индекса"
 
 #: builtin/apply.c:59
 msgid "git apply [<options>] [<patch>...]"
 msgstr "git apply [<опции>] [<патч>…]"
@@ -2122,429 +2188,434 @@
 msgid_plural ""
 "git diff header lacks filename information when removing %d leading pathname"
 " components (line %d)"
 msgstr[0] "заголовок git diff не нашел информацию об имени файла при удалении %d ведущего компонента пути к файлу (строка %d)"
 msgstr[1] "заголовок git diff не нашел информацию об имени файла при удалении %d ведущих компонент пути к файлу (строка %d)"
 msgstr[2] "заголовок git diff не нашел информацию об имени файла при удалении %d ведущих компонент пути к файлу (строка %d)"
+msgstr[3] "заголовок git diff не нашел информацию об имени файла при удалении %d ведущих компонент пути к файлу (строка %d)"
 
-#: builtin/apply.c:1656
+#: builtin/apply.c:1659
 msgid "new file depends on old contents"
 msgstr "новый файл зависит от старого содержимого"
 
-#: builtin/apply.c:1658
+#: builtin/apply.c:1661
 msgid "deleted file still has contents"
 msgstr "удаленный файл все еще имеет содержимое"
 
-#: builtin/apply.c:1684
+#: builtin/apply.c:1687
 #, c-format
 msgid "corrupt patch at line %d"
 msgstr "патч поврежден на строке %d"
 
-#: builtin/apply.c:1720
+#: builtin/apply.c:1723
 #, c-format
 msgid "new file %s depends on old contents"
 msgstr "новый файл %s зависит от старого содержимого"
 
-#: builtin/apply.c:1722
+#: builtin/apply.c:1725
 #, c-format
 msgid "deleted file %s still has contents"
 msgstr "удаленный файл %s все еще имеет содержимое"
 
-#: builtin/apply.c:1725
+#: builtin/apply.c:1728
 #, c-format
 msgid "** warning: file %s becomes empty but is not deleted"
 msgstr "** предупреждение: файл %s становится пустым, но не удаляется"
 
-#: builtin/apply.c:1871
+#: builtin/apply.c:1874
 #, c-format
 msgid "corrupt binary patch at line %d: %.*s"
 msgstr "поврежденный двоичный патч на строке %d: %.*s"
 
-#: builtin/apply.c:1900
+#: builtin/apply.c:1903
 #, c-format
 msgid "unrecognized binary patch at line %d"
 msgstr "неопознанный двоичный патч на строке %d"
 
-#: builtin/apply.c:2051
+#: builtin/apply.c:2054
 #, c-format
 msgid "patch with only garbage at line %d"
 msgstr "патч с мусором на строке %d"
 
-#: builtin/apply.c:2141
+#: builtin/apply.c:2144
 #, c-format
 msgid "unable to read symlink %s"
 msgstr "не удалось прочитать символьную ссылку %s"
 
-#: builtin/apply.c:2145
+#: builtin/apply.c:2148
 #, c-format
 msgid "unable to open or read %s"
 msgstr "не удалось открыть или прочесть %s"
 
-#: builtin/apply.c:2778
+#: builtin/apply.c:2781
 #, c-format
 msgid "invalid start of line: '%c'"
 msgstr "неправильное начало строки: «%c»"
 
-#: builtin/apply.c:2897
+#: builtin/apply.c:2900
 #, c-format
 msgid "Hunk #%d succeeded at %d (offset %d line)."
 msgid_plural "Hunk #%d succeeded at %d (offset %d lines)."
 msgstr[0] "Часть #%d успешно применена на %d (со сдвигом в %d строку)."
 msgstr[1] "Часть #%d успешно применена на %d (со сдвигом в %d строки)."
 msgstr[2] "Часть #%d успешно применена на %d (со сдвигом в %d строк)."
+msgstr[3] "Часть #%d успешно применена на %d (со сдвигом в %d строк)."
 
-#: builtin/apply.c:2909
+#: builtin/apply.c:2912
 #, c-format
 msgid "Context reduced to (%ld/%ld) to apply fragment at %d"
 msgstr "Контекст сужен до (%ld/%ld), чтобы применить фрагмент на %d строке"
 
-#: builtin/apply.c:2915
+#: builtin/apply.c:2918
 #, c-format
 msgid ""
 "while searching for:\n"
 "%.*s"
 msgstr "при поиске:\n%.*s"
 
-#: builtin/apply.c:2935
+#: builtin/apply.c:2938
 #, c-format
 msgid "missing binary patch data for '%s'"
 msgstr "пропущены данные двоичного патча для «%s»"
 
-#: builtin/apply.c:3036
+#: builtin/apply.c:3039
 #, c-format
 msgid "binary patch does not apply to '%s'"
 msgstr "не удалось применить двоичный патч к «%s»"
 
-#: builtin/apply.c:3042
+#: builtin/apply.c:3045
 #, c-format
 msgid "binary patch to '%s' creates incorrect result (expecting %s, got %s)"
 msgstr "после применения двоичного патча для «%s» был получен неправильный результат (ожидалось %s, получено %s)"
 
-#: builtin/apply.c:3063
+#: builtin/apply.c:3066
 #, c-format
 msgid "patch failed: %s:%ld"
 msgstr "ошибка применения изменений: %s:%ld"
 
-#: builtin/apply.c:3187
+#: builtin/apply.c:3190
 #, c-format
 msgid "cannot checkout %s"
 msgstr "не удалось перейти на %s"
 
-#: builtin/apply.c:3232 builtin/apply.c:3243 builtin/apply.c:3288
+#: builtin/apply.c:3235 builtin/apply.c:3246 builtin/apply.c:3291
 #, c-format
 msgid "read of %s failed"
 msgstr "ошибка чтения %s"
 
-#: builtin/apply.c:3240
+#: builtin/apply.c:3243
 #, c-format
 msgid "reading from '%s' beyond a symbolic link"
 msgstr "чтение из «%s» за символической ссылкой"
 
-#: builtin/apply.c:3268 builtin/apply.c:3490
+#: builtin/apply.c:3271 builtin/apply.c:3493
 #, c-format
 msgid "path %s has been renamed/deleted"
 msgstr "путь %s был переименован/удален"
 
-#: builtin/apply.c:3349 builtin/apply.c:3504
+#: builtin/apply.c:3352 builtin/apply.c:3507
 #, c-format
 msgid "%s: does not exist in index"
 msgstr "%s: нет в индексе"
 
-#: builtin/apply.c:3353 builtin/apply.c:3496 builtin/apply.c:3518
+#: builtin/apply.c:3356 builtin/apply.c:3499 builtin/apply.c:3521
 #, c-format
 msgid "%s: %s"
 msgstr "%s: %s"
 
-#: builtin/apply.c:3358 builtin/apply.c:3512
+#: builtin/apply.c:3361 builtin/apply.c:3515
 #, c-format
 msgid "%s: does not match index"
 msgstr "%s: не совпадает с индексом"
 
-#: builtin/apply.c:3460
+#: builtin/apply.c:3463
 msgid "removal patch leaves file contents"
 msgstr "патч удаления не удалил содержимое файла"
 
-#: builtin/apply.c:3529
+#: builtin/apply.c:3532
 #, c-format
 msgid "%s: wrong type"
 msgstr "%s: неправильный тип"
 
-#: builtin/apply.c:3531
+#: builtin/apply.c:3534
 #, c-format
 msgid "%s has type %o, expected %o"
 msgstr "%s имеет тип %o, а ожидался %o"
 
-#: builtin/apply.c:3690 builtin/apply.c:3692
+#: builtin/apply.c:3693 builtin/apply.c:3695
 #, c-format
 msgid "invalid path '%s'"
 msgstr "неправильный путь «%s»"
 
-#: builtin/apply.c:3747
+#: builtin/apply.c:3750
 #, c-format
 msgid "%s: already exists in index"
 msgstr "%s: уже содержится в индексе"
 
-#: builtin/apply.c:3750
+#: builtin/apply.c:3753
 #, c-format
 msgid "%s: already exists in working directory"
 msgstr "%s: уже содержится в рабочем каталоге"
 
-#: builtin/apply.c:3770
+#: builtin/apply.c:3773
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o)"
 msgstr "новый режим доступа (%o) для %s не соответствует старому режиму доступа (%o)"
 
-#: builtin/apply.c:3775
+#: builtin/apply.c:3778
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o) of %s"
 msgstr "новый режим доступа (%o) для %s не соответствует старому режиму доступа (%o) для %s"
 
-#: builtin/apply.c:3795
+#: builtin/apply.c:3798
 #, c-format
 msgid "affected file '%s' is beyond a symbolic link"
 msgstr "затронутый файл «%s» находится за символической ссылкой"
 
-#: builtin/apply.c:3799
+#: builtin/apply.c:3802
 #, c-format
 msgid "%s: patch does not apply"
 msgstr "%s: не удалось применить патч"
 
-#: builtin/apply.c:3813
+#: builtin/apply.c:3816
 #, c-format
 msgid "Checking patch %s..."
 msgstr "Проверка патча %s…"
 
-#: builtin/apply.c:3906 builtin/checkout.c:231 builtin/reset.c:135
+#: builtin/apply.c:3909 builtin/checkout.c:233 builtin/reset.c:135
 #, c-format
 msgid "make_cache_entry failed for path '%s'"
 msgstr "сбой make_cache_entry для пути «%s»"
 
-#: builtin/apply.c:4049
+#: builtin/apply.c:4052
 #, c-format
 msgid "unable to remove %s from index"
 msgstr "не удалось удалить %s из индекса"
 
-#: builtin/apply.c:4078
+#: builtin/apply.c:4081
 #, c-format
 msgid "corrupt patch for submodule %s"
 msgstr "поврежденный патч для подмодуля %s"
 
-#: builtin/apply.c:4082
+#: builtin/apply.c:4085
 #, c-format
 msgid "unable to stat newly created file '%s'"
 msgstr "не удалось выполнить stat для созданного файла «%s»"
 
-#: builtin/apply.c:4087
+#: builtin/apply.c:4090
 #, c-format
 msgid "unable to create backing store for newly created file %s"
 msgstr "не удалось создать вспомогательный файл для созданного файла %s"
 
-#: builtin/apply.c:4090 builtin/apply.c:4198
+#: builtin/apply.c:4093 builtin/apply.c:4201
 #, c-format
 msgid "unable to add cache entry for %s"
 msgstr "не удалось создать запись в кэше для %s"
 
-#: builtin/apply.c:4123
+#: builtin/apply.c:4126
 #, c-format
 msgid "closing file '%s'"
 msgstr "закрытие файла «%s»"
 
-#: builtin/apply.c:4172
+#: builtin/apply.c:4175
 #, c-format
 msgid "unable to write file '%s' mode %o"
 msgstr "не удалось записать файл «%s» с режимом доступа %o"
 
-#: builtin/apply.c:4259
+#: builtin/apply.c:4262
 #, c-format
 msgid "Applied patch %s cleanly."
 msgstr "Патч %s применен без ошибок."
 
-#: builtin/apply.c:4267
+#: builtin/apply.c:4270
 msgid "internal error"
 msgstr "внутренняя ошибка"
 
-#: builtin/apply.c:4270
+#: builtin/apply.c:4273
 #, c-format
 msgid "Applying patch %%s with %d reject..."
 msgid_plural "Applying patch %%s with %d rejects..."
 msgstr[0] "Применение патча %%s с %d отказом…"
 msgstr[1] "Применение патча %%s с %d отказами…"
 msgstr[2] "Применение патча %%s с %d отказами…"
+msgstr[3] "Применение патча %%s с %d отказами…"
 
-#: builtin/apply.c:4280
+#: builtin/apply.c:4283
 #, c-format
 msgid "truncating .rej filename to %.*s.rej"
 msgstr "усечение имени .rej файла до %.*s.rej"
 
-#: builtin/apply.c:4301
+#: builtin/apply.c:4304
 #, c-format
 msgid "Hunk #%d applied cleanly."
 msgstr "Блок №%d применен без ошибок."
 
-#: builtin/apply.c:4304
+#: builtin/apply.c:4307
 #, c-format
 msgid "Rejected hunk #%d."
 msgstr "Блок №%d отклонен."
 
-#: builtin/apply.c:4394
+#: builtin/apply.c:4397
 msgid "unrecognized input"
 msgstr "не распознанный ввод"
 
-#: builtin/apply.c:4405
+#: builtin/apply.c:4408
 msgid "unable to read index file"
 msgstr "не удалось прочитать файл индекса"
 
-#: builtin/apply.c:4522 builtin/apply.c:4525 builtin/clone.c:92
+#: builtin/apply.c:4525 builtin/apply.c:4528 builtin/clone.c:85
 #: builtin/fetch.c:92
 msgid "path"
 msgstr "путь"
 
-#: builtin/apply.c:4523
+#: builtin/apply.c:4526
 msgid "don't apply changes matching the given path"
 msgstr "не применять изменения по указанному пути"
 
-#: builtin/apply.c:4526
+#: builtin/apply.c:4529
 msgid "apply changes matching the given path"
 msgstr "применять изменения по указанному пути"
 
-#: builtin/apply.c:4528
+#: builtin/apply.c:4531
 msgid "num"
 msgstr "количество"
 
-#: builtin/apply.c:4529
+#: builtin/apply.c:4532
 msgid "remove <num> leading slashes from traditional diff paths"
 msgstr "удалить <количество> ведущих косых черт из традиционных путей списка изменений"
 
-#: builtin/apply.c:4532
+#: builtin/apply.c:4535
 msgid "ignore additions made by the patch"
 msgstr "игнорировать добавления, сделанные этим патчем"
 
-#: builtin/apply.c:4534
+#: builtin/apply.c:4537
 msgid "instead of applying the patch, output diffstat for the input"
 msgstr "вместо применения патча вывести статистику добавлений и удалений для ввода"
 
-#: builtin/apply.c:4538
+#: builtin/apply.c:4541
 msgid "show number of added and deleted lines in decimal notation"
 msgstr "показать количество добавленных и удаленных строк в десятичном представлении"
 
-#: builtin/apply.c:4540
+#: builtin/apply.c:4543
 msgid "instead of applying the patch, output a summary for the input"
 msgstr "вместо применения патча вывести статистику изменений для ввода"
 
-#: builtin/apply.c:4542
+#: builtin/apply.c:4545
 msgid "instead of applying the patch, see if the patch is applicable"
 msgstr "вместо применения патча проверить подходит ли он"
 
-#: builtin/apply.c:4544
+#: builtin/apply.c:4547
 msgid "make sure the patch is applicable to the current index"
 msgstr "проверить, что патч применяется к текущему индексу"
 
-#: builtin/apply.c:4546
+#: builtin/apply.c:4549
 msgid "apply a patch without touching the working tree"
 msgstr "применить патч, не изменяя рабочий каталог"
 
-#: builtin/apply.c:4548
+#: builtin/apply.c:4551
 msgid "accept a patch that touches outside the working area"
 msgstr "принять патч, который затрагивает файлы за рабочим каталогом"
 
-#: builtin/apply.c:4550
+#: builtin/apply.c:4553
 msgid "also apply the patch (use with --stat/--summary/--check)"
 msgstr "а также применить патч (используйте с --stat/--summary/--check)"
 
-#: builtin/apply.c:4552
+#: builtin/apply.c:4555
 msgid "attempt three-way merge if a patch does not apply"
 msgstr "попытаться сделать трехходовое слияние, если патч не применяется"
 
-#: builtin/apply.c:4554
+#: builtin/apply.c:4557
 msgid "build a temporary index based on embedded index information"
 msgstr "построить временный индекс, основанный на встроенной информации об индексе"
 
-#: builtin/apply.c:4556 builtin/checkout-index.c:198 builtin/ls-files.c:412
+#: builtin/apply.c:4559 builtin/checkout-index.c:198 builtin/ls-files.c:412
 msgid "paths are separated with NUL character"
 msgstr "пути, отделенные НУЛЕВЫМ символом"
 
-#: builtin/apply.c:4559
+#: builtin/apply.c:4562
 msgid "ensure at least <n> lines of context match"
 msgstr "удостовериться, что по крайней мере <n> строк контекста совпадают"
 
-#: builtin/apply.c:4560
+#: builtin/apply.c:4563
 msgid "action"
 msgstr "действие"
 
-#: builtin/apply.c:4561
+#: builtin/apply.c:4564
 msgid "detect new or modified lines that have whitespace errors"
 msgstr "определять новые или модифицированные строки, у которых есть ошибки в пробельных символах"
 
-#: builtin/apply.c:4564 builtin/apply.c:4567
+#: builtin/apply.c:4567 builtin/apply.c:4570
 msgid "ignore changes in whitespace when finding context"
 msgstr "игнорировать изменения в пробельных символах при поиске контекста"
 
-#: builtin/apply.c:4570
+#: builtin/apply.c:4573
 msgid "apply the patch in reverse"
 msgstr "применить патч с обращением изменений"
 
-#: builtin/apply.c:4572
+#: builtin/apply.c:4575
 msgid "don't expect at least one line of context"
 msgstr "не ожидать как минимум одной строки контекста"
 
-#: builtin/apply.c:4574
+#: builtin/apply.c:4577
 msgid "leave the rejected hunks in corresponding *.rej files"
 msgstr "оставить отклоненные блоки изменений в соответствующих *.rej файлах"
 
-#: builtin/apply.c:4576
+#: builtin/apply.c:4579
 msgid "allow overlapping hunks"
 msgstr "разрешить перекрывающиеся блоки изменений"
 
-#: builtin/apply.c:4579
+#: builtin/apply.c:4582
 msgid "tolerate incorrectly detected missing new-line at the end of file"
 msgstr "разрешить некорректно определенные пропущенные пустые строки в конце файла"
 
-#: builtin/apply.c:4582
+#: builtin/apply.c:4585
 msgid "do not trust the line counts in the hunk headers"
 msgstr "не доверять количеству строк из заголовка блока изменений"
 
-#: builtin/apply.c:4584
+#: builtin/apply.c:4587
 msgid "root"
 msgstr "корень"
 
-#: builtin/apply.c:4585
+#: builtin/apply.c:4588
 msgid "prepend <root> to all filenames"
 msgstr "добавить <корень> спереди ко всем именам файлов"
 
-#: builtin/apply.c:4607
+#: builtin/apply.c:4610
 msgid "--3way outside a repository"
 msgstr "--3way вне репозитория"
 
-#: builtin/apply.c:4615
+#: builtin/apply.c:4618
 msgid "--index outside a repository"
 msgstr "--index вне репозитория"
 
-#: builtin/apply.c:4618
+#: builtin/apply.c:4621
 msgid "--cached outside a repository"
 msgstr "--cached вне репозитория"
 
-#: builtin/apply.c:4637
+#: builtin/apply.c:4640
 #, c-format
 msgid "can't open patch '%s'"
 msgstr "не удалось открыть патч «%s»"
 
-#: builtin/apply.c:4651
+#: builtin/apply.c:4654
 #, c-format
 msgid "squelched %d whitespace error"
 msgid_plural "squelched %d whitespace errors"
 msgstr[0] "пропущена %d ошибка в пробельных символах"
 msgstr[1] "пропущено %d ошибки в пробельных символах"
 msgstr[2] "пропущено %d ошибок в пробельных символах"
+msgstr[3] "пропущено %d ошибок в пробельных символах"
 
-#: builtin/apply.c:4657 builtin/apply.c:4667
+#: builtin/apply.c:4660 builtin/apply.c:4670
 #, c-format
 msgid "%d line adds whitespace errors."
 msgid_plural "%d lines add whitespace errors."
 msgstr[0] "%d строка добавила ошибки в пробельных символах."
 msgstr[1] "%d строки добавили ошибки в пробельных символах."
 msgstr[2] "%d строк добавили ошибки в пробельных символах."
+msgstr[3] "%d строк добавили ошибки в пробельных символах."
 
 #: builtin/archive.c:17
 #, c-format
 msgid "could not create archive file '%s'"
 msgstr "не удалось создать файл архива «%s»"
 
@@ -2587,17 +2658,17 @@
 msgstr "выполнить «git bisect next»"
 
 #: builtin/bisect--helper.c:19
 msgid "update BISECT_HEAD instead of checking out the current commit"
 msgstr "обновить BISECT_HEAD вместо перехода на текущий коммит"
 
-#: builtin/blame.c:30
-msgid "git blame [<options>] [<rev-opts>] [<rev>] [--] file"
-msgstr "git blame [<опции>] [<опции-rev-list>] [<редакция>] [--] файл"
+#: builtin/blame.c:31
+msgid "git blame [<options>] [<rev-opts>] [<rev>] [--] <file>"
+msgstr "git blame [<опции>] [<опции-редакции>] [<редакция>] [--] <файл>"
 
-#: builtin/blame.c:35
+#: builtin/blame.c:36
 msgid "<rev-opts> are documented in git-rev-list(1)"
 msgstr "<опции-rev-list> документированы в git-rev-list(1)"
 
 #: builtin/blame.c:2500
 msgid "Show blame entries as we find them, incrementally"
 msgstr "Показать записи авторства постепенно, в процессе нахождения"
@@ -2713,452 +2784,464 @@
 msgstr "git branch [<опции>] [-r] (-d | -D) <имя-ветки>…"
 
 #: builtin/branch.c:27
 msgid "git branch [<options>] (-m | -M) [<old-branch>] <new-branch>"
 msgstr "git branch [<опции>] (-m | -M) [<старая-ветка>] <новая-ветка>"
 
-#: builtin/branch.c:152
+#: builtin/branch.c:150
 #, c-format
 msgid ""
 "deleting branch '%s' that has been merged to\n"
 "         '%s', but not yet merged to HEAD."
 msgstr "удаление ветки «%s», которая была слита с\n         «%s», но не слита с HEAD."
 
-#: builtin/branch.c:156
+#: builtin/branch.c:154
 #, c-format
 msgid ""
 "not deleting branch '%s' that is not yet merged to\n"
 "         '%s', even though it is merged to HEAD."
 msgstr "не удаление ветки «%s», которая еще не слита с\n         «%s», хотя уже слита с HEAD."
 
-#: builtin/branch.c:170
+#: builtin/branch.c:168
 #, c-format
 msgid "Couldn't look up commit object for '%s'"
 msgstr "Не удалось найти объект коммита для «%s»"
 
-#: builtin/branch.c:174
+#: builtin/branch.c:172
 #, c-format
 msgid ""
 "The branch '%s' is not fully merged.\n"
 "If you are sure you want to delete it, run 'git branch -D %s'."
 msgstr "Ветка «%s» не слита полностью.\nЕсли вы уверены, что хотите ее удалить, запустите «git branch -D %s»."
 
-#: builtin/branch.c:187
+#: builtin/branch.c:185
 msgid "Update of config-file failed"
 msgstr "Не удалось обновить файл конфигурации"
 
-#: builtin/branch.c:215
+#: builtin/branch.c:213
 msgid "cannot use -a with -d"
 msgstr "нельзя использовать одновременно ключи -a и -d"
 
-#: builtin/branch.c:221
+#: builtin/branch.c:219
 msgid "Couldn't look up commit object for HEAD"
 msgstr "Не удалось найти объект коммита для HEAD"
 
-#: builtin/branch.c:229
+#: builtin/branch.c:227
 #, c-format
 msgid "Cannot delete the branch '%s' which you are currently on."
 msgstr "Нельзя удалить ветку «%s», так как вы сейчас на ней находитесь."
 
-#: builtin/branch.c:245
+#: builtin/branch.c:243
 #, c-format
-msgid "remote branch '%s' not found."
-msgstr "внешняя ветка «%s» не найдена."
+msgid "remote-tracking branch '%s' not found."
+msgstr "внешняя отслеживаемая ветка «%s» не найдена."
 
-#: builtin/branch.c:246
+#: builtin/branch.c:244
 #, c-format
 msgid "branch '%s' not found."
 msgstr "ветка «%s» не найдена."
 
-#: builtin/branch.c:260
+#: builtin/branch.c:258
 #, c-format
-msgid "Error deleting remote branch '%s'"
-msgstr "Ошибка удаления внешней ветки «%s»"
+msgid "Error deleting remote-tracking branch '%s'"
+msgstr "Ошибка удаления внешней отслеживаемой ветки «%s»"
 
-#: builtin/branch.c:261
+#: builtin/branch.c:259
 #, c-format
 msgid "Error deleting branch '%s'"
 msgstr "Ошибка удаления ветки «%s»"
 
-#: builtin/branch.c:268
+#: builtin/branch.c:266
 #, c-format
-msgid "Deleted remote branch %s (was %s).\n"
-msgstr "Внешняя ветка %s удалена (была %s).\n"
+msgid "Deleted remote-tracking branch %s (was %s).\n"
+msgstr "Внешняя отслеживаемая ветка %s удалена (была %s).\n"
 
-#: builtin/branch.c:269
+#: builtin/branch.c:267
 #, c-format
 msgid "Deleted branch %s (was %s).\n"
 msgstr "Ветка %s удалена (была %s).\n"
 
-#: builtin/branch.c:370
+#: builtin/branch.c:368
 #, c-format
 msgid "branch '%s' does not point at a commit"
 msgstr "ветка «%s» не указывает на коммит"
 
-#: builtin/branch.c:459
+#: builtin/branch.c:451
 #, c-format
 msgid "[%s: gone]"
 msgstr "[%s: пропал]"
 
-#: builtin/branch.c:464
+#: builtin/branch.c:456
 #, c-format
 msgid "[%s]"
 msgstr "[%s]"
 
-#: builtin/branch.c:469
+#: builtin/branch.c:461
 #, c-format
 msgid "[%s: behind %d]"
 msgstr "[%s: позади %d]"
 
-#: builtin/branch.c:471
+#: builtin/branch.c:463
 #, c-format
 msgid "[behind %d]"
 msgstr "[позади %d]"
 
-#: builtin/branch.c:475
+#: builtin/branch.c:467
 #, c-format
 msgid "[%s: ahead %d]"
 msgstr "[%s: впереди %d]"
 
-#: builtin/branch.c:477
+#: builtin/branch.c:469
 #, c-format
 msgid "[ahead %d]"
 msgstr "[впереди %d]"
 
-#: builtin/branch.c:480
+#: builtin/branch.c:472
 #, c-format
 msgid "[%s: ahead %d, behind %d]"
 msgstr "[%s: впереди %d, позади %d]"
 
-#: builtin/branch.c:483
+#: builtin/branch.c:475
 #, c-format
 msgid "[ahead %d, behind %d]"
 msgstr "[впереди %d, позади %d]"
 
-#: builtin/branch.c:496
+#: builtin/branch.c:488
 msgid " **** invalid ref ****"
 msgstr " **** недействительная ссылка ****"
 
-#: builtin/branch.c:587
+#: builtin/branch.c:579
 #, c-format
 msgid "(no branch, rebasing %s)"
 msgstr "(нет ветки, перемещение %s)"
 
-#: builtin/branch.c:590
+#: builtin/branch.c:582
 #, c-format
 msgid "(no branch, bisect started on %s)"
 msgstr "(нет ветки, двоичный поиск начат на %s)"
 
-#: builtin/branch.c:596
+#: builtin/branch.c:588
 #, c-format
 msgid "(HEAD detached at %s)"
 msgstr "(HEAD отделён на %s)"
 
-#: builtin/branch.c:599
+#: builtin/branch.c:591
 #, c-format
 msgid "(HEAD detached from %s)"
 msgstr "(HEAD отделён начиная с %s)"
 
-#: builtin/branch.c:603
+#: builtin/branch.c:595
 msgid "(no branch)"
 msgstr "(нет ветки)"
 
-#: builtin/branch.c:650
+#: builtin/branch.c:642
 #, c-format
 msgid "object '%s' does not point to a commit"
 msgstr "объект «%s» не указывает на коммит"
 
-#: builtin/branch.c:698
+#: builtin/branch.c:690
 msgid "some refs could not be read"
 msgstr "не удается прочитать некоторые ссылки"
 
-#: builtin/branch.c:711
+#: builtin/branch.c:703
 msgid "cannot rename the current branch while not on any."
 msgstr "невозможно переименовать текущую ветку, если вы не находитесь ни на одной из них."
 
-#: builtin/branch.c:721
+#: builtin/branch.c:713
 #, c-format
 msgid "Invalid branch name: '%s'"
 msgstr "Недействительное имя ветки: «%s»"
 
-#: builtin/branch.c:736
+#: builtin/branch.c:728
 msgid "Branch rename failed"
 msgstr "Сбой переименования ветки"
 
-#: builtin/branch.c:740
+#: builtin/branch.c:732
 #, c-format
 msgid "Renamed a misnamed branch '%s' away"
 msgstr "Переименована неправильно названная ветка «%s»"
 
-#: builtin/branch.c:744
+#: builtin/branch.c:736
 #, c-format
 msgid "Branch renamed to %s, but HEAD is not updated!"
 msgstr "Ветка переименована в %s, но HEAD не обновлен!"
 
-#: builtin/branch.c:751
+#: builtin/branch.c:743
 msgid "Branch is renamed, but update of config-file failed"
 msgstr "Ветка переименована, но произошел сбой обновления файла конфигурации"
 
-#: builtin/branch.c:766
+#: builtin/branch.c:758
 #, c-format
 msgid "malformed object name %s"
 msgstr "плохое имя объекта %s"
 
-#: builtin/branch.c:790
+#: builtin/branch.c:780
 #, c-format
 msgid "could not write branch description template: %s"
 msgstr "не удалось записать шаблон описания ветки: %s"
 
-#: builtin/branch.c:820
+#: builtin/branch.c:810
 msgid "Generic options"
 msgstr "Общие параметры"
 
-#: builtin/branch.c:822
+#: builtin/branch.c:812
 msgid "show hash and subject, give twice for upstream branch"
 msgstr "показывать хеш-сумму и тему, укажите дважды для вышестоящей ветки"
 
-#: builtin/branch.c:823
+#: builtin/branch.c:813
 msgid "suppress informational messages"
 msgstr "не выводить информационные сообщения"
 
-#: builtin/branch.c:824
+#: builtin/branch.c:814
 msgid "set up tracking mode (see git-pull(1))"
 msgstr "установить режим отслеживания вышестоящей ветки (см. git-pull(1))"
 
-#: builtin/branch.c:826
+#: builtin/branch.c:816
 msgid "change upstream info"
 msgstr "изменить информацию о вышестоящей ветке"
 
-#: builtin/branch.c:830
+#: builtin/branch.c:820
 msgid "use colored output"
 msgstr "использовать цветной вывод"
 
-#: builtin/branch.c:831
+#: builtin/branch.c:821
 msgid "act on remote-tracking branches"
 msgstr "выполнить действия на отслеживаемых внешних ветках"
 
-#: builtin/branch.c:834 builtin/branch.c:840 builtin/branch.c:861
-#: builtin/branch.c:867 builtin/commit.c:1582 builtin/commit.c:1583
-#: builtin/commit.c:1584 builtin/commit.c:1585 builtin/tag.c:616
+#: builtin/branch.c:824 builtin/branch.c:830 builtin/branch.c:851
+#: builtin/branch.c:857 builtin/commit.c:1581 builtin/commit.c:1582
+#: builtin/commit.c:1583 builtin/commit.c:1584 builtin/tag.c:616
 #: builtin/tag.c:622
 msgid "commit"
 msgstr "коммит"
 
-#: builtin/branch.c:835 builtin/branch.c:841
+#: builtin/branch.c:825 builtin/branch.c:831
 msgid "print only branches that contain the commit"
 msgstr "вывод только веток, которые содержат коммит"
 
-#: builtin/branch.c:847
+#: builtin/branch.c:837
 msgid "Specific git-branch actions:"
 msgstr "Специфичные для git-branch действия:"
 
-#: builtin/branch.c:848
+#: builtin/branch.c:838
 msgid "list both remote-tracking and local branches"
 msgstr "показать список и отслеживаемых и локальных веток"
 
-#: builtin/branch.c:850
+#: builtin/branch.c:840
 msgid "delete fully merged branch"
 msgstr "удалить полностью слитую ветку"
 
-#: builtin/branch.c:851
+#: builtin/branch.c:841
 msgid "delete branch (even if not merged)"
 msgstr "удалить ветку (даже никуда не слитую)"
 
-#: builtin/branch.c:852
+#: builtin/branch.c:842
 msgid "move/rename a branch and its reflog"
 msgstr "переместить/переименовать ветки и ее журнал ссылок"
 
-#: builtin/branch.c:853
+#: builtin/branch.c:843
 msgid "move/rename a branch, even if target exists"
 msgstr "переместить/переименовать ветку, даже если целевое имя уже существует"
 
-#: builtin/branch.c:854
+#: builtin/branch.c:844
 msgid "list branch names"
 msgstr "показать список имен веток"
 
-#: builtin/branch.c:855
+#: builtin/branch.c:845
 msgid "create the branch's reflog"
 msgstr "создать журнал ссылок ветки"
 
-#: builtin/branch.c:857
+#: builtin/branch.c:847
 msgid "edit the description for the branch"
 msgstr "изменить описание ветки"
 
-#: builtin/branch.c:858
+#: builtin/branch.c:848
 msgid "force creation, move/rename, deletion"
 msgstr "принудительное создание, перемещение или удаление ветки"
 
-#: builtin/branch.c:861
+#: builtin/branch.c:851
 msgid "print only not merged branches"
 msgstr "вывод только не слитых веток"
 
-#: builtin/branch.c:867
+#: builtin/branch.c:857
 msgid "print only merged branches"
 msgstr "вывод только слитых веток"
 
-#: builtin/branch.c:871
+#: builtin/branch.c:861
 msgid "list branches in columns"
 msgstr "показать список веток по столбцам"
 
-#: builtin/branch.c:884
+#: builtin/branch.c:874
 msgid "Failed to resolve HEAD as a valid ref."
 msgstr "Не удалось определить HEAD как действительную ссылку."
 
-#: builtin/branch.c:888 builtin/clone.c:637
+#: builtin/branch.c:878 builtin/clone.c:622
 msgid "HEAD not found below refs/heads!"
 msgstr "HEAD не найден в refs/heads!"
 
-#: builtin/branch.c:910
+#: builtin/branch.c:900
 msgid "--column and --verbose are incompatible"
 msgstr "--column и --verbose нельзя использовать одновременно"
 
-#: builtin/branch.c:921 builtin/branch.c:960
+#: builtin/branch.c:911 builtin/branch.c:950
 msgid "branch name required"
 msgstr "требуется имя ветки"
 
-#: builtin/branch.c:936
+#: builtin/branch.c:926
 msgid "Cannot give description to detached HEAD"
 msgstr "Нельзя дать описание отделенному HEAD"
 
-#: builtin/branch.c:941
+#: builtin/branch.c:931
 msgid "cannot edit description of more than one branch"
 msgstr "нельзя изменить описание более одной ветки за раз"
 
-#: builtin/branch.c:948
+#: builtin/branch.c:938
 #, c-format
 msgid "No commit on branch '%s' yet."
 msgstr "Еще нет коммита на ветке «%s»."
 
-#: builtin/branch.c:951
+#: builtin/branch.c:941
 #, c-format
 msgid "No branch named '%s'."
 msgstr "Нет ветки с именем «%s»."
 
-#: builtin/branch.c:966
+#: builtin/branch.c:956
 msgid "too many branches for a rename operation"
 msgstr "слишком много веток для операции переименования"
 
-#: builtin/branch.c:971
+#: builtin/branch.c:961
 msgid "too many branches to set new upstream"
 msgstr "слишком много веток для указания новых вышестоящих"
 
-#: builtin/branch.c:975
+#: builtin/branch.c:965
 #, c-format
 msgid ""
 "could not set upstream of HEAD to %s when it does not point to any branch."
 msgstr "невозможно установить вышестоящий репозиторий для HEAD на %s, когда он не указывает ни на одну ветку."
 
-#: builtin/branch.c:978 builtin/branch.c:1000 builtin/branch.c:1021
+#: builtin/branch.c:968 builtin/branch.c:990 builtin/branch.c:1011
 #, c-format
 msgid "no such branch '%s'"
 msgstr "нет такой ветки «%s»"
 
-#: builtin/branch.c:982
+#: builtin/branch.c:972
 #, c-format
 msgid "branch '%s' does not exist"
 msgstr "ветка «%s» не существует"
 
-#: builtin/branch.c:994
+#: builtin/branch.c:984
 msgid "too many branches to unset upstream"
 msgstr "слишком много веток для убирания вышестоящих"
 
-#: builtin/branch.c:998
+#: builtin/branch.c:988
 msgid "could not unset upstream of HEAD when it does not point to any branch."
 msgstr "невозможно убрать вышестоящий репозиторий для HEAD, когда он не указывает ни на одну ветку."
 
-#: builtin/branch.c:1004
+#: builtin/branch.c:994
 #, c-format
 msgid "Branch '%s' has no upstream information"
 msgstr "Ветка «%s» не имеет информации о вышестоящей ветке"
 
-#: builtin/branch.c:1018
+#: builtin/branch.c:1008
 msgid "it does not make sense to create 'HEAD' manually"
 msgstr "не имеет смысла создавать «HEAD» вручную"
 
-#: builtin/branch.c:1024
+#: builtin/branch.c:1014
 msgid "-a and -r options to 'git branch' do not make sense with a branch name"
 msgstr "параметры -a и -r для «git branch» не имеют смысла с указанием имени ветки"
 
-#: builtin/branch.c:1027
+#: builtin/branch.c:1017
 #, c-format
 msgid ""
 "The --set-upstream flag is deprecated and will be removed. Consider using "
 "--track or --set-upstream-to\n"
 msgstr "Флаг --set-upstream устарел и будет удален в будущем. Вместо него используйте --track или --set-upstream-to\n"
 
-#: builtin/branch.c:1044
+#: builtin/branch.c:1034
 #, c-format
 msgid ""
 "\n"
 "If you wanted to make '%s' track '%s', do this:\n"
 "\n"
 msgstr "\nЕсли вы хотите, чтобы «%s» отслеживала «%s», сделайте следующее:\n\n"
 
-#: builtin/branch.c:1045
+#: builtin/branch.c:1035
 #, c-format
 msgid "    git branch -d %s\n"
 msgstr "git branch -d %s\n"
 
-#: builtin/branch.c:1046
+#: builtin/branch.c:1036
 #, c-format
 msgid "    git branch --set-upstream-to %s\n"
 msgstr "    git branch --set-upstream-to %s\n"
 
-#: builtin/bundle.c:47
+#: builtin/bundle.c:51
 #, c-format
 msgid "%s is okay\n"
 msgstr "%s в порядке\n"
 
-#: builtin/bundle.c:56
+#: builtin/bundle.c:64
 msgid "Need a repository to create a bundle."
 msgstr "Требуется репозиторий для создания пакета."
 
-#: builtin/bundle.c:60
+#: builtin/bundle.c:68
 msgid "Need a repository to unbundle."
 msgstr "Требуется репозиторий для распаковки."
 
-#: builtin/cat-file.c:326
-msgid "git cat-file (-t | -s | -e | -p | <type> | --textconv) <object>"
-msgstr "git cat-file (-t | -s | -e | -p | <тип> | --textconv) <объект>"
-
-#: builtin/cat-file.c:327
-msgid "git cat-file (--batch | --batch-check) < <list-of-objects>"
-msgstr "git cat-file (--batch | --batch-check) < <список-объектов>"
+#: builtin/cat-file.c:369
+msgid ""
+"git cat-file (-t [--allow-unknown-type]|-s [--allow-unknown-"
+"type]|-e|-p|<type>|--textconv) <object>"
+msgstr "git cat-file (-t [--allow-unknown-type]|-s [--allow-unknown-type]|-e|-p|<тип>|--textconv) <объект>"
+
+#: builtin/cat-file.c:370
+msgid ""
+"git cat-file (--batch | --batch-check) [--follow-symlinks] < <list-of-"
+"objects>"
+msgstr "git cat-file (--batch | --batch-check) [--follow-symlinks] < <список-объектов>"
 
-#: builtin/cat-file.c:364
+#: builtin/cat-file.c:407
 msgid "<type> can be one of: blob, tree, commit, tag"
 msgstr "<тип> может быть одним из: blob, tree, commit, tag"
 
-#: builtin/cat-file.c:365
+#: builtin/cat-file.c:408
 msgid "show object type"
 msgstr "показать тип объекта"
 
-#: builtin/cat-file.c:366
+#: builtin/cat-file.c:409
 msgid "show object size"
 msgstr "показать размер объекта"
 
-#: builtin/cat-file.c:368
+#: builtin/cat-file.c:411
 msgid "exit with zero when there's no error"
 msgstr "выйти с нулевым кодом возврата, если нет ошибки"
 
-#: builtin/cat-file.c:369
+#: builtin/cat-file.c:412
 msgid "pretty-print object's content"
 msgstr "структурированный вывод содержимого объекта"
 
-#: builtin/cat-file.c:371
+#: builtin/cat-file.c:414
 msgid "for blob objects, run textconv on object's content"
 msgstr "запустить texconv на содержимом двоичных объектов "
 
-#: builtin/cat-file.c:373
+#: builtin/cat-file.c:416
+msgid "allow -s and -t to work with broken/corrupt objects"
+msgstr "разрешить -s и -t работать с повреждёнными объектами"
+
+#: builtin/cat-file.c:418
 msgid "show info and content of objects fed from the standard input"
 msgstr "показать информацию и содержимое объектов, переданных из стандартного ввода"
 
-#: builtin/cat-file.c:376
+#: builtin/cat-file.c:421
 msgid "show info about objects fed from the standard input"
 msgstr "показать информацию об объектах, переданных из стандартного ввода"
 
+#: builtin/cat-file.c:424
+msgid "follow in-tree symlinks (used with --batch or --batch-check)"
+msgstr "переходить по символьным ссылкам внутри дерева (используется с опциями --batch и --batch-check)"
+
 #: builtin/check-attr.c:11
 msgid "git check-attr [-a | --all | <attr>...] [--] <pathname>..."
 msgstr "git check-attr [-a | --all | <атрибут>…] [--] <путь>…"
 
 #: builtin/check-attr.c:12
 msgid "git check-attr --stdin [-z] [-a | --all | <attr>...] < <list-of-paths>"
@@ -3169,21 +3252,21 @@
 msgstr "вывести все атрибуты установленные для файла"
 
 #: builtin/check-attr.c:20
 msgid "use .gitattributes only from the index"
 msgstr "использовать только .gitattributes из индекса"
 
-#: builtin/check-attr.c:21 builtin/check-ignore.c:22 builtin/hash-object.c:98
+#: builtin/check-attr.c:21 builtin/check-ignore.c:22 builtin/hash-object.c:96
 msgid "read file names from stdin"
 msgstr "прочитать имена файлов из стандартного ввода"
 
 #: builtin/check-attr.c:23 builtin/check-ignore.c:24
 msgid "terminate input and output records by a NUL character"
 msgstr "окончание ввода и вывода записей по НУЛЕВОМУ символу"
 
-#: builtin/check-ignore.c:18 builtin/checkout.c:1107 builtin/gc.c:274
+#: builtin/check-ignore.c:18 builtin/checkout.c:1202 builtin/gc.c:279
 msgid "suppress progress reporting"
 msgstr "не выводить прогресс выполнения"
 
 #: builtin/check-ignore.c:26
 msgid "show non-matching input paths"
 msgstr "показать не совпадающие введенные пути"
@@ -3274,119 +3357,119 @@
 msgstr "добавить спереди <строку> при создании файлов"
 
 #: builtin/checkout-index.c:208
 msgid "copy out the files from named stage"
 msgstr "копировать файлы из указанного индекса"
 
-#: builtin/checkout.c:25
+#: builtin/checkout.c:24
 msgid "git checkout [<options>] <branch>"
 msgstr "git checkout [<опции>] <ветка>"
 
-#: builtin/checkout.c:26
+#: builtin/checkout.c:25
 msgid "git checkout [<options>] [<branch>] -- <file>..."
 msgstr "git checkout [<опции>] [<ветка>] -- <файл>…"
 
-#: builtin/checkout.c:132 builtin/checkout.c:165
+#: builtin/checkout.c:134 builtin/checkout.c:167
 #, c-format
 msgid "path '%s' does not have our version"
 msgstr "путь «%s» не имеет нашей версии"
 
-#: builtin/checkout.c:134 builtin/checkout.c:167
+#: builtin/checkout.c:136 builtin/checkout.c:169
 #, c-format
 msgid "path '%s' does not have their version"
 msgstr "путь «%s» не имеет их версии"
 
-#: builtin/checkout.c:150
+#: builtin/checkout.c:152
 #, c-format
 msgid "path '%s' does not have all necessary versions"
 msgstr "путь «%s» не имеет всех необходимых версий"
 
-#: builtin/checkout.c:194
+#: builtin/checkout.c:196
 #, c-format
 msgid "path '%s' does not have necessary versions"
 msgstr "путь «%s» не имеет необходимых версий"
 
-#: builtin/checkout.c:211
+#: builtin/checkout.c:213
 #, c-format
 msgid "path '%s': cannot merge"
 msgstr "путь «%s»: не удалось слить"
 
-#: builtin/checkout.c:228
+#: builtin/checkout.c:230
 #, c-format
 msgid "Unable to add merge result for '%s'"
 msgstr "Не удалось добавить результат слияния «%s»"
 
-#: builtin/checkout.c:249 builtin/checkout.c:252 builtin/checkout.c:255
-#: builtin/checkout.c:258
+#: builtin/checkout.c:251 builtin/checkout.c:254 builtin/checkout.c:257
+#: builtin/checkout.c:260
 #, c-format
 msgid "'%s' cannot be used with updating paths"
 msgstr "«%s» нельзя использовать при обновлении путей"
 
-#: builtin/checkout.c:261 builtin/checkout.c:264
+#: builtin/checkout.c:263 builtin/checkout.c:266
 #, c-format
 msgid "'%s' cannot be used with %s"
 msgstr "«%s» нельзя использовать одновременно с %s"
 
-#: builtin/checkout.c:267
+#: builtin/checkout.c:269
 #, c-format
 msgid "Cannot update paths and switch to branch '%s' at the same time."
 msgstr "Нельзя обновлять пути и переключаться на ветку «%s» одновременно."
 
-#: builtin/checkout.c:278 builtin/checkout.c:467
+#: builtin/checkout.c:280 builtin/checkout.c:474
 msgid "corrupt index file"
 msgstr "файл индекса поврежден"
 
-#: builtin/checkout.c:338 builtin/checkout.c:345
+#: builtin/checkout.c:340 builtin/checkout.c:347
 #, c-format
 msgid "path '%s' is unmerged"
 msgstr "путь «%s» не слит"
 
-#: builtin/checkout.c:489
+#: builtin/checkout.c:496
 msgid "you need to resolve your current index first"
 msgstr "сначала нужно разрешить конфликты в вашем текущем индексе"
 
-#: builtin/checkout.c:615
+#: builtin/checkout.c:627
 #, c-format
 msgid "Can not do reflog for '%s'\n"
 msgstr "Не удалось создать журнал ссылок для «%s»\n"
 
-#: builtin/checkout.c:653
+#: builtin/checkout.c:663
 msgid "HEAD is now at"
 msgstr "HEAD сейчас на"
 
-#: builtin/checkout.c:660
+#: builtin/checkout.c:670
 #, c-format
 msgid "Reset branch '%s'\n"
 msgstr "Сброс ветки «%s»\n"
 
-#: builtin/checkout.c:663
+#: builtin/checkout.c:673
 #, c-format
 msgid "Already on '%s'\n"
 msgstr "Уже на «%s»\n"
 
-#: builtin/checkout.c:667
+#: builtin/checkout.c:677
 #, c-format
 msgid "Switched to and reset branch '%s'\n"
 msgstr "Переключение и сброс ветки «%s»\n"
 
-#: builtin/checkout.c:669 builtin/checkout.c:1050
+#: builtin/checkout.c:679 builtin/checkout.c:1134
 #, c-format
 msgid "Switched to a new branch '%s'\n"
 msgstr "Переключено на новую ветку «%s»\n"
 
-#: builtin/checkout.c:671
+#: builtin/checkout.c:681
 #, c-format
 msgid "Switched to branch '%s'\n"
 msgstr "Переключено на ветку «%s»\n"
 
-#: builtin/checkout.c:723
+#: builtin/checkout.c:733
 #, c-format
 msgid " ... and %d more.\n"
 msgstr " … и еще %d.\n"
 
-#: builtin/checkout.c:729
+#: builtin/checkout.c:739
 #, c-format
 msgid ""
 "Warning: you are leaving %d commit behind, not connected to\n"
 "any of your branches:\n"
 "\n"
 "%s\n"
@@ -3395,168 +3478,188 @@
 "any of your branches:\n"
 "\n"
 "%s\n"
 msgstr[0] "Предупреждение: вы оставляете позади %d коммит не соединенную ни с одной из ваших веток:\n\n%s\n"
 msgstr[1] "Предупреждение: вы оставляете позади %d коммита не соединенные ни с одной из ваших веток:\n\n%s\n"
 msgstr[2] "Предупреждение: вы оставляете позади %d коммитов не соединенные ни с одной из ваших веток:\n\n%s\n"
+msgstr[3] "Предупреждение: вы оставляете позади %d коммитов не соединенные ни с одной из ваших веток:\n\n%s\n"
 
-#: builtin/checkout.c:747
+#: builtin/checkout.c:758
 #, c-format
 msgid ""
+"If you want to keep it by creating a new branch, this may be a good time\n"
+"to do so with:\n"
+"\n"
+" git branch <new-branch-name> %s\n"
+"\n"
+msgid_plural ""
 "If you want to keep them by creating a new branch, this may be a good time\n"
 "to do so with:\n"
 "\n"
 " git branch <new-branch-name> %s\n"
 "\n"
-msgstr "Если вы хотите сохранить их с помощью создания новой ветки, то сейчас самое время\nсделать это с помощью:\n\n git branch <имя-новой-ветки> %s\n"
+msgstr[0] "Если вы хотите сохранить их с помощью создания новой ветки, то сейчас самое время\nсделать это с помощью:\n\n git branch <имя-новой-ветки> %s\n\n"
+msgstr[1] "Если вы хотите сохранить их с помощью создания новой ветки, то сейчас самое время\nсделать это с помощью:\n\n git branch <имя-новой-ветки> %s\n\n"
+msgstr[2] "Если вы хотите сохранить их с помощью создания новой ветки, то сейчас самое время\nсделать это с помощью:\n\n git branch <имя-новой-ветки> %s\n\n"
+msgstr[3] "Если вы хотите сохранить их с помощью создания новой ветки, то сейчас самое время\nсделать это с помощью:\n\n git branch <имя-новой-ветки> %s\n\n"
 
-#: builtin/checkout.c:777
+#: builtin/checkout.c:794
 msgid "internal error in revision walk"
 msgstr "внутренняя ошибка при хождении по редакциям"
 
-#: builtin/checkout.c:781
+#: builtin/checkout.c:798
 msgid "Previous HEAD position was"
 msgstr "Предыдущая позиция HEAD была"
 
-#: builtin/checkout.c:808 builtin/checkout.c:1045
+#: builtin/checkout.c:825 builtin/checkout.c:1129
 msgid "You are on a branch yet to be born"
 msgstr "Вы находитесь на еще не созданной ветке"
 
-#: builtin/checkout.c:952
+#: builtin/checkout.c:931
+#, c-format
+msgid "'%s' is already checked out at '%s'"
+msgstr "«%s» уже находится на «%s»"
+
+#: builtin/checkout.c:1036
 #, c-format
 msgid "only one reference expected, %d given."
 msgstr "ожидается только одна ссылка, а передано %d."
 
-#: builtin/checkout.c:991
+#: builtin/checkout.c:1075
 #, c-format
 msgid "invalid reference: %s"
 msgstr "неправильная ссылка: %s"
 
-#: builtin/checkout.c:1020
+#: builtin/checkout.c:1104
 #, c-format
 msgid "reference is not a tree: %s"
 msgstr "в дереве нет такой ссылки: %s"
 
-#: builtin/checkout.c:1059
+#: builtin/checkout.c:1143
 msgid "paths cannot be used with switching branches"
 msgstr "нельзя использовать пути при переключении веток"
 
-#: builtin/checkout.c:1062 builtin/checkout.c:1066
+#: builtin/checkout.c:1146 builtin/checkout.c:1150
 #, c-format
 msgid "'%s' cannot be used with switching branches"
 msgstr "нельзя использовать «%s» при переключении веток"
 
-#: builtin/checkout.c:1070 builtin/checkout.c:1073 builtin/checkout.c:1078
-#: builtin/checkout.c:1081
+#: builtin/checkout.c:1154 builtin/checkout.c:1157 builtin/checkout.c:1162
+#: builtin/checkout.c:1165
 #, c-format
 msgid "'%s' cannot be used with '%s'"
 msgstr "«%s» нельзя использовать одновременно с «%s»"
 
-#: builtin/checkout.c:1086
+#: builtin/checkout.c:1170
 #, c-format
 msgid "Cannot switch branch to a non-commit '%s'"
 msgstr "Нельзя переключить ветку на не коммит «%s»"
 
-#: builtin/checkout.c:1108 builtin/checkout.c:1110 builtin/clone.c:90
-#: builtin/remote.c:159 builtin/remote.c:161
+#: builtin/checkout.c:1203 builtin/checkout.c:1205 builtin/clone.c:83
+#: builtin/remote.c:159 builtin/remote.c:161 builtin/worktree.c:282
+#: builtin/worktree.c:284
 msgid "branch"
 msgstr "ветка"
 
-#: builtin/checkout.c:1109
+#: builtin/checkout.c:1204
 msgid "create and checkout a new branch"
 msgstr "создать и перейти на новую ветку"
 
-#: builtin/checkout.c:1111
+#: builtin/checkout.c:1206
 msgid "create/reset and checkout a branch"
 msgstr "создать/сбросить и перейти на новую ветку"
 
-#: builtin/checkout.c:1112
+#: builtin/checkout.c:1207
 msgid "create reflog for new branch"
 msgstr "создать журнал ссылок для новой ветки"
 
-#: builtin/checkout.c:1113
+#: builtin/checkout.c:1208
 msgid "detach the HEAD at named commit"
 msgstr "отсоединить HEAD на указанном коммите"
 
-#: builtin/checkout.c:1114
+#: builtin/checkout.c:1209
 msgid "set upstream info for new branch"
 msgstr "установить информацию о вышестоящей ветке для новой ветки"
 
-#: builtin/checkout.c:1116
+#: builtin/checkout.c:1211
 msgid "new-branch"
 msgstr "новая-ветка"
 
-#: builtin/checkout.c:1116
+#: builtin/checkout.c:1211
 msgid "new unparented branch"
 msgstr "новая ветка без родителей"
 
-#: builtin/checkout.c:1117
+#: builtin/checkout.c:1212
 msgid "checkout our version for unmerged files"
 msgstr "перейти на нашу версию для не слитых файлов"
 
-#: builtin/checkout.c:1119
+#: builtin/checkout.c:1214
 msgid "checkout their version for unmerged files"
 msgstr "перейти на их версию для не слитых файлов"
 
-#: builtin/checkout.c:1121
+#: builtin/checkout.c:1216
 msgid "force checkout (throw away local modifications)"
 msgstr "принудительный переход (отбрасывает все локальные изменения)"
 
-#: builtin/checkout.c:1122
+#: builtin/checkout.c:1217
 msgid "perform a 3-way merge with the new branch"
 msgstr "выполнить трехходовое слияние с новой веткой"
 
-#: builtin/checkout.c:1123 builtin/merge.c:227
+#: builtin/checkout.c:1218 builtin/merge.c:227
 msgid "update ignored files (default)"
 msgstr "обновить игнорируемые файлы (по умолчанию)"
 
-#: builtin/checkout.c:1124 builtin/log.c:1239 parse-options.h:245
+#: builtin/checkout.c:1219 builtin/log.c:1239 parse-options.h:244
 msgid "style"
 msgstr "стиль"
 
-#: builtin/checkout.c:1125
+#: builtin/checkout.c:1220
 msgid "conflict style (merge or diff3)"
 msgstr "стиль конфликтов слияния (merge или diff3)"
 
-#: builtin/checkout.c:1128
+#: builtin/checkout.c:1223
 msgid "do not limit pathspecs to sparse entries only"
 msgstr "не ограничивать спецификаторы пути только частичными записями"
 
-#: builtin/checkout.c:1130
+#: builtin/checkout.c:1225
 msgid "second guess 'git checkout <no-such-branch>'"
 msgstr "пересмотр «git checkout <no-such-branch>»"
 
-#: builtin/checkout.c:1153
+#: builtin/checkout.c:1227
+msgid "do not check if another worktree is holding the given ref"
+msgstr "не проверять, что другое дерево уже содержит указанную ссылку"
+
+#: builtin/checkout.c:1252
 msgid "-b, -B and --orphan are mutually exclusive"
 msgstr "-b, -B и --orphan нельзя использовать одновременно"
 
-#: builtin/checkout.c:1170
+#: builtin/checkout.c:1269
 msgid "--track needs a branch name"
 msgstr "--track требует имя ветки"
 
-#: builtin/checkout.c:1175
+#: builtin/checkout.c:1274
 msgid "Missing branch name; try -b"
 msgstr "Пропущено имя ветки; попробуйте -b"
 
-#: builtin/checkout.c:1212
+#: builtin/checkout.c:1310
 msgid "invalid path specification"
 msgstr "неправильная спецификация пути"
 
-#: builtin/checkout.c:1219
+#: builtin/checkout.c:1317
 #, c-format
 msgid ""
 "Cannot update paths and switch to branch '%s' at the same time.\n"
 "Did you intend to checkout '%s' which can not be resolved as commit?"
 msgstr "Нельзя обновить пути и одновременно переключить на ветку «%s».\nВы хотели переключиться на «%s», что не может быть определено как коммит?"
 
-#: builtin/checkout.c:1224
+#: builtin/checkout.c:1322
 #, c-format
 msgid "git checkout: --detach does not take a path argument '%s'"
 msgstr "git checkout: --detach не принимает путь «%s» как аргумент"
 
-#: builtin/checkout.c:1228
+#: builtin/checkout.c:1326
 msgid ""
 "git checkout: --ours/--theirs, --force and --merge are incompatible when\n"
 "checking out of the index."
 msgstr "git checkout: --ours/--theirs, --force and --merge нельзя использовать одновременно при применении состояния индекса."
 
 #: builtin/clean.c:26
@@ -3606,388 +3709,390 @@
 "foo        - select item based on unique prefix\n"
 "-...       - unselect specified items\n"
 "*          - choose all items\n"
 "           - (empty) finish selecting"
 msgstr "Справка по выделению:\n1          - выбрать один элемент\n3-5        - выбрать диапазон элементов\n2-3,6-9    - выбрать несколько диапазонов\nfoo        - выбрать элемент с указанным префиксом\n-…       - убрать выделение с указанных элементов\n*          - выбрать все элементы\n           - (пусто) завершить выделение"
 
-#: builtin/clean.c:517
+#: builtin/clean.c:515
 #, c-format
 msgid "Huh (%s)?"
 msgstr "Хм (%s)?"
 
-#: builtin/clean.c:659
+#: builtin/clean.c:657
 #, c-format
 msgid "Input ignore patterns>> "
 msgstr "Шаблоны игнорирования ввода>> "
 
-#: builtin/clean.c:696
+#: builtin/clean.c:694
 #, c-format
 msgid "WARNING: Cannot find items matched by: %s"
 msgstr "ПРЕДУПРЕЖДЕНИЕ: Не удалось найти элементы соответствующие: %s"
 
-#: builtin/clean.c:717
+#: builtin/clean.c:715
 msgid "Select items to delete"
 msgstr "Укажите элементы для удаления"
 
 #. TRANSLATORS: Make sure to keep [y/N] as is
-#: builtin/clean.c:758
+#: builtin/clean.c:756
 #, c-format
 msgid "Remove %s [y/N]? "
 msgstr "Удалить %s [y - да/N - нет]? "
 
-#: builtin/clean.c:783
+#: builtin/clean.c:781
 msgid "Bye."
 msgstr "До свидания."
 
-#: builtin/clean.c:791
+#: builtin/clean.c:789
 msgid ""
 "clean               - start cleaning\n"
 "filter by pattern   - exclude items from deletion\n"
 "select by numbers   - select items to be deleted by numbers\n"
 "ask each            - confirm each deletion (like \"rm -i\")\n"
 "quit                - stop cleaning\n"
 "help                - this screen\n"
 "?                   - help for prompt selection"
 msgstr "clean               - начать очистку\nfilter by pattern   - исключить удаление элементов\nselect by numbers   - исключить удаление элементов по номерам\nask each            - запрашивать подтверждение на удаление каждого элемента (как «rm -i»)\nquit                - прекратить очистку\nhelp                - этот экран\n?                   - справка по выделению"
 
-#: builtin/clean.c:818
+#: builtin/clean.c:816
 msgid "*** Commands ***"
 msgstr "*** Команды ***"
 
-#: builtin/clean.c:819
+#: builtin/clean.c:817
 msgid "What now"
 msgstr "Что теперь"
 
-#: builtin/clean.c:827
+#: builtin/clean.c:825
 msgid "Would remove the following item:"
 msgid_plural "Would remove the following items:"
 msgstr[0] "Удалить следующие элементы:"
 msgstr[1] "Удалить следующие элементы:"
 msgstr[2] "Удалить следующие элементы:"
+msgstr[3] "Удалить следующие элементы:"
 
-#: builtin/clean.c:844
+#: builtin/clean.c:842
 msgid "No more files to clean, exiting."
 msgstr "Больше нет файлов для очистки, выходим."
 
-#: builtin/clean.c:875
+#: builtin/clean.c:873
 msgid "do not print names of files removed"
 msgstr "не выводить имена удаляемых файлов"
 
-#: builtin/clean.c:877
+#: builtin/clean.c:875
 msgid "force"
 msgstr "принудительно"
 
-#: builtin/clean.c:878
+#: builtin/clean.c:876
 msgid "interactive cleaning"
 msgstr "интерактивная очистка"
 
-#: builtin/clean.c:880
+#: builtin/clean.c:878
 msgid "remove whole directories"
 msgstr "удалить каталоги полностью"
 
-#: builtin/clean.c:881 builtin/describe.c:407 builtin/grep.c:714
-#: builtin/ls-files.c:443 builtin/name-rev.c:311 builtin/show-ref.c:185
+#: builtin/clean.c:879 builtin/describe.c:407 builtin/grep.c:714
+#: builtin/ls-files.c:443 builtin/name-rev.c:311 builtin/show-ref.c:187
 msgid "pattern"
 msgstr "шаблон"
 
-#: builtin/clean.c:882
+#: builtin/clean.c:880
 msgid "add <pattern> to ignore rules"
 msgstr "добавить <шаблон> в правила игнорирования"
 
-#: builtin/clean.c:883
+#: builtin/clean.c:881
 msgid "remove ignored files, too"
 msgstr "также удалить игнорируемые файлы"
 
-#: builtin/clean.c:885
+#: builtin/clean.c:883
 msgid "remove only ignored files"
 msgstr "удалить только игнорируемые файлы"
 
-#: builtin/clean.c:903
+#: builtin/clean.c:901
 msgid "-x and -X cannot be used together"
 msgstr "нельзя использовать одновременно -x и -X"
 
-#: builtin/clean.c:907
+#: builtin/clean.c:905
 msgid ""
 "clean.requireForce set to true and neither -i, -n, nor -f given; refusing to"
 " clean"
 msgstr "clean.requireForce установлен как true и ни одна из опций -i, -n или -f не указана; отказ очистки"
 
-#: builtin/clean.c:910
+#: builtin/clean.c:908
 msgid ""
 "clean.requireForce defaults to true and neither -i, -n, nor -f given; "
 "refusing to clean"
 msgstr "clean.requireForce установлен по умолчанию как true и ни одна из опций -i, -n или -f не указана; отказ очистки"
 
 #: builtin/clone.c:37
 msgid "git clone [<options>] [--] <repo> [<dir>]"
 msgstr "git clone [<опции>] [--] <репозиторий> [<каталог>]"
 
-#: builtin/clone.c:66 builtin/fetch.c:111 builtin/merge.c:224
+#: builtin/clone.c:57 builtin/fetch.c:111 builtin/merge.c:224
 #: builtin/push.c:523
 msgid "force progress reporting"
 msgstr "принудительно выводить прогресс"
 
-#: builtin/clone.c:68
+#: builtin/clone.c:59
 msgid "don't create a checkout"
 msgstr "не переключать рабочую копию на HEAD"
 
-#: builtin/clone.c:69 builtin/clone.c:71 builtin/init-db.c:496
+#: builtin/clone.c:60 builtin/clone.c:62 builtin/init-db.c:503
 msgid "create a bare repository"
 msgstr "создать голый репозиторий"
 
-#: builtin/clone.c:73
+#: builtin/clone.c:64
 msgid "create a mirror repository (implies bare)"
 msgstr "создать зеркало репозитория (включает в себя и параметр bare)"
 
-#: builtin/clone.c:75
+#: builtin/clone.c:66
 msgid "to clone from a local repository"
 msgstr "для клонирования из локального репозитория"
 
-#: builtin/clone.c:77
+#: builtin/clone.c:68
 msgid "don't use local hardlinks, always copy"
 msgstr "не использовать жесткие ссылки, всегда копировать файлы"
 
-#: builtin/clone.c:79
+#: builtin/clone.c:70
 msgid "setup as shared repository"
 msgstr "настроить как общедоступный репозиторий"
 
-#: builtin/clone.c:81 builtin/clone.c:83
+#: builtin/clone.c:72 builtin/clone.c:74
 msgid "initialize submodules in the clone"
 msgstr "инициализировать подмодули в клоне"
 
-#: builtin/clone.c:84 builtin/init-db.c:493
+#: builtin/clone.c:75 builtin/init-db.c:500
 msgid "template-directory"
 msgstr "каталог-шаблонов"
 
-#: builtin/clone.c:85 builtin/init-db.c:494
+#: builtin/clone.c:76 builtin/init-db.c:501
 msgid "directory from which templates will be used"
 msgstr "каталог, шаблоны из которого будут использованы"
 
-#: builtin/clone.c:87
+#: builtin/clone.c:78
 msgid "reference repository"
 msgstr "ссылаемый репозиторий"
 
-#: builtin/clone.c:88 builtin/column.c:26 builtin/merge-file.c:44
+#: builtin/clone.c:80
+msgid "use --reference only while cloning"
+msgstr "используйте --reference только при клонировании"
+
+#: builtin/clone.c:81 builtin/column.c:26 builtin/merge-file.c:44
 msgid "name"
 msgstr "имя"
 
-#: builtin/clone.c:89
+#: builtin/clone.c:82
 msgid "use <name> instead of 'origin' to track upstream"
 msgstr "использовать <имя> вместо «origin» для отслеживания вышестоящего репозитория"
 
-#: builtin/clone.c:91
+#: builtin/clone.c:84
 msgid "checkout <branch> instead of the remote's HEAD"
 msgstr "перейти на <ветку>, вместо HEAD внешнего репозитория"
 
-#: builtin/clone.c:93
+#: builtin/clone.c:86
 msgid "path to git-upload-pack on the remote"
 msgstr "путь к git-upload-pack на внешнем репозитории"
 
-#: builtin/clone.c:94 builtin/fetch.c:112 builtin/grep.c:659
+#: builtin/clone.c:87 builtin/fetch.c:112 builtin/grep.c:659
 msgid "depth"
 msgstr "глубина"
 
-#: builtin/clone.c:95
+#: builtin/clone.c:88
 msgid "create a shallow clone of that depth"
 msgstr "сделать частичный клон указанной глубины"
 
-#: builtin/clone.c:97
+#: builtin/clone.c:90
 msgid "clone only one branch, HEAD or --branch"
 msgstr "клонировать только одну ветку, HEAD или --branch"
 
-#: builtin/clone.c:99
-msgid "use --reference only while cloning"
-msgstr "используйте --reference только при клонировании"
-
-#: builtin/clone.c:100 builtin/init-db.c:502
+#: builtin/clone.c:91 builtin/init-db.c:509
 msgid "gitdir"
 msgstr "каталог-git"
 
-#: builtin/clone.c:101 builtin/init-db.c:503
+#: builtin/clone.c:92 builtin/init-db.c:510
 msgid "separate git dir from working tree"
 msgstr "разместить каталог git отдельно от рабочей копии"
 
-#: builtin/clone.c:102
+#: builtin/clone.c:93
 msgid "key=value"
 msgstr "ключ=значение"
 
-#: builtin/clone.c:103
+#: builtin/clone.c:94
 msgid "set config inside the new repository"
 msgstr "установить параметры внутри нового репозитория"
 
-#: builtin/clone.c:256
+#: builtin/clone.c:240
 #, c-format
 msgid "reference repository '%s' is not a local repository."
 msgstr "ссылаемый репозиторий «%s» не является локальным."
 
-#: builtin/clone.c:260
+#: builtin/clone.c:244
 #, c-format
 msgid "reference repository '%s' is shallow"
 msgstr "ссылаемый репозиторий «%s» является частичным"
 
-#: builtin/clone.c:263
+#: builtin/clone.c:247
 #, c-format
 msgid "reference repository '%s' is grafted"
 msgstr "ссылаемый репозиторий «%s» является сращенным"
 
-#: builtin/clone.c:325
+#: builtin/clone.c:310
 #, c-format
 msgid "failed to create directory '%s'"
 msgstr "не удалось создать каталог «%s»"
 
-#: builtin/clone.c:327 builtin/diff.c:84
+#: builtin/clone.c:312 builtin/diff.c:84
 #, c-format
 msgid "failed to stat '%s'"
 msgstr "не удалось выполнить stat «%s»"
 
-#: builtin/clone.c:329
+#: builtin/clone.c:314
 #, c-format
 msgid "%s exists and is not a directory"
 msgstr "%s уже существует и не является каталогом"
 
-#: builtin/clone.c:343
+#: builtin/clone.c:328
 #, c-format
 msgid "failed to stat %s\n"
 msgstr "не удалось выполнить stat %s\n"
 
-#: builtin/clone.c:365
+#: builtin/clone.c:350
 #, c-format
 msgid "failed to create link '%s'"
 msgstr "не удалось создать ссылку «%s»"
 
-#: builtin/clone.c:369
+#: builtin/clone.c:354
 #, c-format
 msgid "failed to copy file to '%s'"
 msgstr "не удалось копировать файл в «%s»"
 
-#: builtin/clone.c:392 builtin/clone.c:566
+#: builtin/clone.c:377 builtin/clone.c:551
 #, c-format
 msgid "done.\n"
 msgstr "готово.\n"
 
-#: builtin/clone.c:404
+#: builtin/clone.c:389
 msgid ""
 "Clone succeeded, but checkout failed.\n"
 "You can inspect what was checked out with 'git status'\n"
 "and retry the checkout with 'git checkout -f HEAD'\n"
 msgstr "Клонирование прошло успешно, но во время перехода на версию произошла ошибка.\nС помощь команды «git status» вы можете просмотреть, какие файлы были обновлены, а повторить попытку перехода на версию с помощью «git checkout -f HEAD»\n"
 
-#: builtin/clone.c:481
+#: builtin/clone.c:466
 #, c-format
 msgid "Could not find remote branch %s to clone."
 msgstr "Не удалось найти внешнюю ветку %s для клонирования."
 
-#: builtin/clone.c:561
+#: builtin/clone.c:546
 #, c-format
 msgid "Checking connectivity... "
 msgstr "Проверка соединения… "
 
-#: builtin/clone.c:564
+#: builtin/clone.c:549
 msgid "remote did not send all necessary objects"
 msgstr "внешний репозиторий прислал не все необходимые объекты"
 
-#: builtin/clone.c:628
+#: builtin/clone.c:613
 msgid "remote HEAD refers to nonexistent ref, unable to checkout.\n"
 msgstr "внешний HEAD ссылается на несуществующую ссылку, нельзя перейти на такую версию.\n"
 
-#: builtin/clone.c:659
+#: builtin/clone.c:644
 msgid "unable to checkout working tree"
 msgstr "не удалось перейти на версию в рабочем каталоге"
 
-#: builtin/clone.c:746
+#: builtin/clone.c:731
 msgid "cannot repack to clean up"
 msgstr "не удалось выполнить перепаковку для очистки"
 
-#: builtin/clone.c:748
+#: builtin/clone.c:733
 msgid "cannot unlink temporary alternates file"
 msgstr "не удалось отсоединить временные альтернативные файлы"
 
-#: builtin/clone.c:778
+#: builtin/clone.c:763
 msgid "Too many arguments."
 msgstr "Слишком много аргументов."
 
-#: builtin/clone.c:782
+#: builtin/clone.c:767
 msgid "You must specify a repository to clone."
 msgstr "Вы должны указать репозиторий для клонирования."
 
-#: builtin/clone.c:793
+#: builtin/clone.c:778
 #, c-format
 msgid "--bare and --origin %s options are incompatible."
 msgstr "--bare и --origin %s нельзя использовать одновременно."
 
-#: builtin/clone.c:796
+#: builtin/clone.c:781
 msgid "--bare and --separate-git-dir are incompatible."
 msgstr "--bare и --separate-git-dir нельзя использовать одновременно."
 
-#: builtin/clone.c:809
+#: builtin/clone.c:794
 #, c-format
 msgid "repository '%s' does not exist"
 msgstr "репозиторий «%s» не существует"
 
-#: builtin/clone.c:815 builtin/fetch.c:1156
+#: builtin/clone.c:800 builtin/fetch.c:1160
 #, c-format
 msgid "depth %s is not a positive number"
 msgstr "глубина %s не является положительным числом"
 
-#: builtin/clone.c:825
+#: builtin/clone.c:810
 #, c-format
 msgid "destination path '%s' already exists and is not an empty directory."
 msgstr "целевой путь «%s» уже существует и не является пустым каталогом."
 
-#: builtin/clone.c:835
+#: builtin/clone.c:820
 #, c-format
 msgid "working tree '%s' already exists."
 msgstr "рабочий каталог «%s» уже существует."
 
-#: builtin/clone.c:850 builtin/clone.c:861
+#: builtin/clone.c:835 builtin/clone.c:846 builtin/worktree.c:193
+#: builtin/worktree.c:220
 #, c-format
 msgid "could not create leading directories of '%s'"
 msgstr "не удалось создать родительские каталоги для «%s»"
 
-#: builtin/clone.c:853
+#: builtin/clone.c:838
 #, c-format
 msgid "could not create work tree dir '%s'"
 msgstr "не удалось создать рабочий каталог «%s»"
 
-#: builtin/clone.c:871
+#: builtin/clone.c:856
 #, c-format
 msgid "Cloning into bare repository '%s'...\n"
 msgstr "Клонирование в голый репозиторий «%s»…\n"
 
-#: builtin/clone.c:873
+#: builtin/clone.c:858
 #, c-format
 msgid "Cloning into '%s'...\n"
 msgstr "Клонирование в «%s»…\n"
 
-#: builtin/clone.c:898
+#: builtin/clone.c:883
 msgid "--dissociate given, but there is no --reference"
 msgstr "передана опция --dissociate, но не передана --reference"
 
-#: builtin/clone.c:913
+#: builtin/clone.c:900
 msgid "--depth is ignored in local clones; use file:// instead."
 msgstr "--depth игнорируется на локальных клонах; вместо этого используйте file://."
 
-#: builtin/clone.c:916
+#: builtin/clone.c:903
 msgid "source repository is shallow, ignoring --local"
 msgstr "исходный репозиторий является частичным, --local игнорируется"
 
-#: builtin/clone.c:921
+#: builtin/clone.c:908
 msgid "--local is ignored"
 msgstr "--local игнорируется"
 
-#: builtin/clone.c:925
+#: builtin/clone.c:912
 #, c-format
 msgid "Don't know how to clone %s"
 msgstr "Не знаю как клонировать %s"
 
-#: builtin/clone.c:976 builtin/clone.c:984
+#: builtin/clone.c:961 builtin/clone.c:969
 #, c-format
 msgid "Remote branch %s not found in upstream %s"
 msgstr "Внешняя ветка %s не найдена в вышестоящем репозитории %s"
 
-#: builtin/clone.c:987
+#: builtin/clone.c:972
 msgid "You appear to have cloned an empty repository."
 msgstr "Похоже, что вы клонировали пустой репозиторий."
 
 #: builtin/column.c:9
 msgid "git column [<options>]"
 msgstr "git column [<опции>]"
@@ -4180,13 +4285,13 @@
 msgstr "не удалось прочитать MERGE_MSG"
 
 #: builtin/commit.c:734
 msgid "could not read SQUASH_MSG"
 msgstr "не удалось прочитать SQUASH_MSG"
 
-#: builtin/commit.c:738
+#: builtin/commit.c:738 builtin/merge.c:1079
 #, c-format
 msgid "could not read '%s'"
 msgstr "не удалось прочитать «%s»"
 
 #: builtin/commit.c:785
 msgid "could not write commit template"
@@ -4323,46 +4428,46 @@
 msgstr "Неправильное значение режима очистки %s"
 
 #: builtin/commit.c:1214
 msgid "Paths with -a does not make sense."
 msgstr "С опцией -a указание пути не имеет смысла."
 
-#: builtin/commit.c:1324 builtin/commit.c:1604
+#: builtin/commit.c:1324 builtin/commit.c:1603
 msgid "show status concisely"
 msgstr "кратко показать статус"
 
-#: builtin/commit.c:1326 builtin/commit.c:1606
+#: builtin/commit.c:1326 builtin/commit.c:1605
 msgid "show branch information"
 msgstr "показать информацию о версии"
 
-#: builtin/commit.c:1328 builtin/commit.c:1608 builtin/push.c:509
+#: builtin/commit.c:1328 builtin/commit.c:1607 builtin/push.c:509
 msgid "machine-readable output"
 msgstr "машиночитаемый вывод"
 
-#: builtin/commit.c:1331 builtin/commit.c:1610
+#: builtin/commit.c:1331 builtin/commit.c:1609
 msgid "show status in long format (default)"
 msgstr "показать статус в длинном формате (по умолчанию)"
 
-#: builtin/commit.c:1334 builtin/commit.c:1613
+#: builtin/commit.c:1334 builtin/commit.c:1612
 msgid "terminate entries with NUL"
 msgstr "завершать записи НУЛЕВЫМ байтом"
 
-#: builtin/commit.c:1336 builtin/commit.c:1616 builtin/fast-export.c:980
+#: builtin/commit.c:1336 builtin/commit.c:1615 builtin/fast-export.c:980
 #: builtin/fast-export.c:983 builtin/tag.c:603
 msgid "mode"
 msgstr "режим"
 
-#: builtin/commit.c:1337 builtin/commit.c:1616
+#: builtin/commit.c:1337 builtin/commit.c:1615
 msgid "show untracked files, optional modes: all, normal, no. (Default: all)"
 msgstr "показать неотслеживаемые файлы, опциональные режимы: all (все), normal (как обычно), no (нет). (По умолчанию: all)"
 
 #: builtin/commit.c:1340
 msgid "show ignored files"
 msgstr "показать игнорируемые файлы"
 
-#: builtin/commit.c:1341 parse-options.h:153
+#: builtin/commit.c:1341 parse-options.h:152
 msgid "when"
 msgstr "когда"
 
 #: builtin/commit.c:1342
 msgid ""
 "ignore changes to submodules, optional when: all, dirty, untracked. "
@@ -4370,208 +4475,208 @@
 msgstr "игнорировать изменения в подмодулях, опционально когда: all (всегда), dirty (измененные), untracked (неотслеживаемые). (По умолчанию: all)"
 
 #: builtin/commit.c:1344
 msgid "list untracked files in columns"
 msgstr "показать неотслеживаемые файлы по столбцам"
 
-#: builtin/commit.c:1431
+#: builtin/commit.c:1430
 msgid "couldn't look up newly created commit"
 msgstr "нельзя запросить новосозданный коммит"
 
-#: builtin/commit.c:1433
+#: builtin/commit.c:1432
 msgid "could not parse newly created commit"
 msgstr "нельзя разобрать новосозданный коммит"
 
-#: builtin/commit.c:1478
+#: builtin/commit.c:1477
 msgid "detached HEAD"
 msgstr "отделенный HEAD"
 
-#: builtin/commit.c:1481
+#: builtin/commit.c:1480
 msgid " (root-commit)"
 msgstr " (корневой коммит)"
 
-#: builtin/commit.c:1574
+#: builtin/commit.c:1573
 msgid "suppress summary after successful commit"
 msgstr "не выводить сводку после успешного коммита"
 
-#: builtin/commit.c:1575
+#: builtin/commit.c:1574
 msgid "show diff in commit message template"
 msgstr "добавить список изменений в шаблон сообщения коммита"
 
-#: builtin/commit.c:1577
+#: builtin/commit.c:1576
 msgid "Commit message options"
 msgstr "Опции сообщения коммита"
 
-#: builtin/commit.c:1578 builtin/tag.c:601
+#: builtin/commit.c:1577 builtin/tag.c:601
 msgid "read message from file"
 msgstr "прочитать сообщение из файла"
 
-#: builtin/commit.c:1579
+#: builtin/commit.c:1578
 msgid "author"
 msgstr "автор"
 
-#: builtin/commit.c:1579
+#: builtin/commit.c:1578
 msgid "override author for commit"
 msgstr "подменить автора коммита"
 
-#: builtin/commit.c:1580 builtin/gc.c:275
+#: builtin/commit.c:1579 builtin/gc.c:280
 msgid "date"
 msgstr "дата"
 
-#: builtin/commit.c:1580
+#: builtin/commit.c:1579
 msgid "override date for commit"
 msgstr "подменить дату коммита"
 
-#: builtin/commit.c:1581 builtin/merge.c:218 builtin/notes.c:391
+#: builtin/commit.c:1580 builtin/merge.c:218 builtin/notes.c:391
 #: builtin/notes.c:554 builtin/tag.c:599
 msgid "message"
 msgstr "сообщение"
 
-#: builtin/commit.c:1581
+#: builtin/commit.c:1580
 msgid "commit message"
 msgstr "сообщение коммита"
 
-#: builtin/commit.c:1582
+#: builtin/commit.c:1581
 msgid "reuse and edit message from specified commit"
 msgstr "использовать и отредактировать сообщение от указанного коммита"
 
-#: builtin/commit.c:1583
+#: builtin/commit.c:1582
 msgid "reuse message from specified commit"
 msgstr "использовать сообщение указанного коммита"
 
-#: builtin/commit.c:1584
+#: builtin/commit.c:1583
 msgid "use autosquash formatted message to fixup specified commit"
 msgstr "использовать форматированное сообщение автоуплотнения для исправления указанного коммита"
 
-#: builtin/commit.c:1585
+#: builtin/commit.c:1584
 msgid "use autosquash formatted message to squash specified commit"
 msgstr "использовать форматированное сообщение автоуплотнения для уплотнения указанного коммита"
 
-#: builtin/commit.c:1586
+#: builtin/commit.c:1585
 msgid "the commit is authored by me now (used with -C/-c/--amend)"
 msgstr "коммит теперь за моим авторством (с использованием -C/-c/--amend)"
 
-#: builtin/commit.c:1587 builtin/log.c:1191 builtin/revert.c:86
+#: builtin/commit.c:1586 builtin/log.c:1191 builtin/revert.c:86
 msgid "add Signed-off-by:"
 msgstr "добавить Signed-off-by:"
 
-#: builtin/commit.c:1588
+#: builtin/commit.c:1587
 msgid "use specified template file"
 msgstr "использовать указанный файл шаблона"
 
-#: builtin/commit.c:1589
+#: builtin/commit.c:1588
 msgid "force edit of commit"
 msgstr "принудительно редактировать коммит"
 
-#: builtin/commit.c:1590
+#: builtin/commit.c:1589
 msgid "default"
 msgstr "по-умолчанию"
 
-#: builtin/commit.c:1590 builtin/tag.c:604
+#: builtin/commit.c:1589 builtin/tag.c:604
 msgid "how to strip spaces and #comments from message"
 msgstr "как удалять пробелы и #комментарии из сообщения коммита"
 
-#: builtin/commit.c:1591
+#: builtin/commit.c:1590
 msgid "include status in commit message template"
 msgstr "включить статус файлов в шаблон сообщения коммита"
 
-#: builtin/commit.c:1592 builtin/merge.c:225 builtin/revert.c:92
+#: builtin/commit.c:1591 builtin/merge.c:225 builtin/revert.c:92
 #: builtin/tag.c:605
 msgid "key-id"
 msgstr "key-id"
 
-#: builtin/commit.c:1593 builtin/merge.c:226 builtin/revert.c:93
+#: builtin/commit.c:1592 builtin/merge.c:226 builtin/revert.c:93
 msgid "GPG sign commit"
 msgstr "подписать коммит с помощью GPG"
 
-#: builtin/commit.c:1596
+#: builtin/commit.c:1595
 msgid "Commit contents options"
 msgstr "Опции содержимого коммита"
 
-#: builtin/commit.c:1597
+#: builtin/commit.c:1596
 msgid "commit all changed files"
 msgstr "закоммитить все измененные файлы"
 
-#: builtin/commit.c:1598
+#: builtin/commit.c:1597
 msgid "add specified files to index for commit"
 msgstr "добавить указанные файлы в индекс для коммита"
 
-#: builtin/commit.c:1599
+#: builtin/commit.c:1598
 msgid "interactively add files"
 msgstr "интерактивное добавление файлов"
 
-#: builtin/commit.c:1600
+#: builtin/commit.c:1599
 msgid "interactively add changes"
 msgstr "интерактивное добавление изменений"
 
-#: builtin/commit.c:1601
+#: builtin/commit.c:1600
 msgid "commit only specified files"
 msgstr "закоммитить только указанные файлы"
 
-#: builtin/commit.c:1602
+#: builtin/commit.c:1601
 msgid "bypass pre-commit hook"
 msgstr "пропустить перехватчик перед-коммитом"
 
-#: builtin/commit.c:1603
+#: builtin/commit.c:1602
 msgid "show what would be committed"
 msgstr "показать, что будет закоммичено"
 
-#: builtin/commit.c:1614
+#: builtin/commit.c:1613
 msgid "amend previous commit"
 msgstr "исправить предыдущий коммит"
 
-#: builtin/commit.c:1615
+#: builtin/commit.c:1614
 msgid "bypass post-rewrite hook"
 msgstr "пропустить перехватчик после-перезаписи"
 
-#: builtin/commit.c:1620
+#: builtin/commit.c:1619
 msgid "ok to record an empty change"
 msgstr "разрешить запись пустого коммита"
 
-#: builtin/commit.c:1622
+#: builtin/commit.c:1621
 msgid "ok to record a change with an empty message"
 msgstr "разрешить запись изменений с пустым сообщением"
 
-#: builtin/commit.c:1651
+#: builtin/commit.c:1650
 msgid "could not parse HEAD commit"
 msgstr "не удалось разобрать HEAD коммит"
 
-#: builtin/commit.c:1690 builtin/merge.c:519
+#: builtin/commit.c:1689 builtin/merge.c:1076
 #, c-format
 msgid "could not open '%s' for reading"
 msgstr "не удалось открыть «%s» для чтения"
 
-#: builtin/commit.c:1697
+#: builtin/commit.c:1696
 #, c-format
 msgid "Corrupt MERGE_HEAD file (%s)"
 msgstr "Файл MERGE_HEAD поврежден (%s)"
 
-#: builtin/commit.c:1704
+#: builtin/commit.c:1703
 msgid "could not read MERGE_MODE"
 msgstr "не удалось прочитать MERGE_MODE"
 
-#: builtin/commit.c:1723
+#: builtin/commit.c:1722
 #, c-format
 msgid "could not read commit message: %s"
 msgstr "не удалось открыть сообщение коммита: %s"
 
-#: builtin/commit.c:1734
+#: builtin/commit.c:1733
 #, c-format
 msgid "Aborting commit; you did not edit the message.\n"
 msgstr "Отмена коммита; вы не изменили сообщение.\n"
 
-#: builtin/commit.c:1739
+#: builtin/commit.c:1738
 #, c-format
 msgid "Aborting commit due to empty commit message.\n"
 msgstr "Отмена коммита из-за пустого сообщения коммита.\n"
 
-#: builtin/commit.c:1754 builtin/merge.c:851 builtin/merge.c:876
+#: builtin/commit.c:1753 builtin/merge.c:829 builtin/merge.c:854
 msgid "failed to write commit object"
 msgstr "сбой записи объекта коммита"
 
-#: builtin/commit.c:1787
+#: builtin/commit.c:1786
 msgid ""
 "Repository has been updated, but unable to write\n"
 "new_index file. Check that disk is not full and quota is\n"
 "not exceeded, and then \"git reset HEAD\" to recover."
 msgstr "Репозиторий был обновлен, но не удалось записать файл new_index. Удостоверьтесь, что на диске есть свободное место и квота не исчерпана, а после этого запустите «git reset HEAD» для восстановления."
 
@@ -4704,19 +4809,19 @@
 msgstr "не удалось разобрать значение цвета по умолчанию"
 
 #: builtin/config.c:457
 #, c-format
 msgid ""
 "# This is Git's per-user configuration file.\n"
-"[core]\n"
+"[user]\n"
 "# Please adapt and uncomment the following lines:\n"
-"#\tuser = %s\n"
+"#\tname = %s\n"
 "#\temail = %s\n"
-msgstr "# Это файл конфигурации пользователя Git.\n[core]\n# Пожалуйста, адаптируйте и раскомментируйте следующие строки:\n#\tuser = %s\n#\temail = %s\n"
+msgstr "# Это файл конфигурации пользователя Git.\n[user]\n# Пожалуйста, адаптируйте и раскомментируйте следующие строки:\n#\tuser = %s\n#\temail = %s\n"
 
-#: builtin/config.c:589
+#: builtin/config.c:587
 #, c-format
 msgid "cannot create configuration file %s"
 msgstr "не удалось создать файл конфигурации %s"
 
 #: builtin/count-objects.c:55
 msgid "git count-objects [-v] [-H | --human-readable]"
@@ -5034,360 +5139,360 @@
 msgstr "соответствие-ссылок"
 
 #: builtin/fetch.c:125
 msgid "specify fetch refmap"
 msgstr "указать соответствие ссылок при извлечении"
 
-#: builtin/fetch.c:375
+#: builtin/fetch.c:377
 msgid "Couldn't find remote ref HEAD"
 msgstr "Не удалось найти ссылку HEAD на внешнем репозитории"
 
-#: builtin/fetch.c:455
+#: builtin/fetch.c:457
 #, c-format
 msgid "object %s not found"
 msgstr "объект %s не найден"
 
-#: builtin/fetch.c:460
+#: builtin/fetch.c:462
 msgid "[up to date]"
 msgstr "[актуально]"
 
-#: builtin/fetch.c:474
+#: builtin/fetch.c:476
 #, c-format
 msgid "! %-*s %-*s -> %s  (can't fetch in current branch)"
 msgstr "! %-*s %-*s → %s  (не удалось извлечь в текущую ветку)"
 
-#: builtin/fetch.c:475 builtin/fetch.c:561
+#: builtin/fetch.c:477 builtin/fetch.c:563
 msgid "[rejected]"
 msgstr "[отклонено]"
 
-#: builtin/fetch.c:486
+#: builtin/fetch.c:488
 msgid "[tag update]"
 msgstr "[обновление метки]"
 
-#: builtin/fetch.c:488 builtin/fetch.c:523 builtin/fetch.c:541
+#: builtin/fetch.c:490 builtin/fetch.c:525 builtin/fetch.c:543
 msgid "  (unable to update local ref)"
 msgstr "  (не удалось обновить локальную ссылку)"
 
-#: builtin/fetch.c:506
+#: builtin/fetch.c:508
 msgid "[new tag]"
 msgstr "[новая метка]"
 
-#: builtin/fetch.c:509
+#: builtin/fetch.c:511
 msgid "[new branch]"
 msgstr "[новая ветка]"
 
-#: builtin/fetch.c:512
+#: builtin/fetch.c:514
 msgid "[new ref]"
 msgstr "[новая ссылка]"
 
-#: builtin/fetch.c:557
+#: builtin/fetch.c:559
 msgid "unable to update local ref"
 msgstr "не удалось обновить локальную ссылку"
 
-#: builtin/fetch.c:557
+#: builtin/fetch.c:559
 msgid "forced update"
 msgstr "принудительное обновление"
 
-#: builtin/fetch.c:563
+#: builtin/fetch.c:565
 msgid "(non-fast-forward)"
 msgstr "(без перемотки вперед)"
 
-#: builtin/fetch.c:596 builtin/fetch.c:829
+#: builtin/fetch.c:599 builtin/fetch.c:832
 #, c-format
 msgid "cannot open %s: %s\n"
 msgstr "не удалось открыть %s: %s\n"
 
-#: builtin/fetch.c:605
+#: builtin/fetch.c:608
 #, c-format
 msgid "%s did not send all necessary objects\n"
 msgstr "%s не отправил все необходимые объекты\n"
 
-#: builtin/fetch.c:623
+#: builtin/fetch.c:626
 #, c-format
 msgid "reject %s because shallow roots are not allowed to be updated"
 msgstr "%s отклонено из-за того, что частичные корни не разрешено обновлять"
 
-#: builtin/fetch.c:711 builtin/fetch.c:794
+#: builtin/fetch.c:714 builtin/fetch.c:797
 #, c-format
 msgid "From %.*s\n"
 msgstr "Из %.*s\n"
 
-#: builtin/fetch.c:722
+#: builtin/fetch.c:725
 #, c-format
 msgid ""
 "some local refs could not be updated; try running\n"
 " 'git remote prune %s' to remove any old, conflicting branches"
 msgstr "не удалось обновить некоторые локальные ссылки; попробуйте запустить «git remote prune %s», чтобы почистить старые, конфликтующие ветки"
 
-#: builtin/fetch.c:774
+#: builtin/fetch.c:777
 #, c-format
 msgid "   (%s will become dangling)"
 msgstr "   (%s будет висящей веткой)"
 
-#: builtin/fetch.c:775
+#: builtin/fetch.c:778
 #, c-format
 msgid "   (%s has become dangling)"
 msgstr "   (%s стала висящей веткой)"
 
-#: builtin/fetch.c:799
+#: builtin/fetch.c:802
 msgid "[deleted]"
 msgstr "[удалено]"
 
-#: builtin/fetch.c:800 builtin/remote.c:1060
+#: builtin/fetch.c:803 builtin/remote.c:1057
 msgid "(none)"
 msgstr "(нет)"
 
-#: builtin/fetch.c:819
+#: builtin/fetch.c:822
 #, c-format
 msgid "Refusing to fetch into current branch %s of non-bare repository"
 msgstr "Отказ получения в текущую ветку %s не голого репозитория"
 
-#: builtin/fetch.c:838
+#: builtin/fetch.c:841
 #, c-format
 msgid "Option \"%s\" value \"%s\" is not valid for %s"
 msgstr "Неправильное значение «%2$s» для параметра «%1$s» для %3$s"
 
-#: builtin/fetch.c:841
+#: builtin/fetch.c:844
 #, c-format
 msgid "Option \"%s\" is ignored for %s\n"
 msgstr "Параметр «%s» игнорируется для %s\n"
 
-#: builtin/fetch.c:897
+#: builtin/fetch.c:900
 #, c-format
 msgid "Don't know how to fetch from %s"
 msgstr "Не знаю как извлечь с %s"
 
-#: builtin/fetch.c:1059
+#: builtin/fetch.c:1063
 #, c-format
 msgid "Fetching %s\n"
 msgstr "Извлечение из %s\n"
 
-#: builtin/fetch.c:1061 builtin/remote.c:90
+#: builtin/fetch.c:1065 builtin/remote.c:90
 #, c-format
 msgid "Could not fetch %s"
 msgstr "Не удалось извлечь %s"
 
-#: builtin/fetch.c:1079
+#: builtin/fetch.c:1083
 msgid ""
 "No remote repository specified.  Please, specify either a URL or a\n"
 "remote name from which new revisions should be fetched."
 msgstr "Не указан внешний репозиторий. Укажите URL или имя внешнего репозитория из которого должны извлекаться новые редакции."
 
-#: builtin/fetch.c:1102
+#: builtin/fetch.c:1106
 msgid "You need to specify a tag name."
 msgstr "Вам нужно указать имя метки."
 
-#: builtin/fetch.c:1144
+#: builtin/fetch.c:1148
 msgid "--depth and --unshallow cannot be used together"
 msgstr "нельзя использовать одновременно --depth и --unshallow"
 
-#: builtin/fetch.c:1146
+#: builtin/fetch.c:1150
 msgid "--unshallow on a complete repository does not make sense"
 msgstr "--unshallow не имеет смысла на полном репозитории"
 
-#: builtin/fetch.c:1169
+#: builtin/fetch.c:1173
 msgid "fetch --all does not take a repository argument"
 msgstr "fetch --all не принимает имя репозитория как аргумент"
 
-#: builtin/fetch.c:1171
+#: builtin/fetch.c:1175
 msgid "fetch --all does not make sense with refspecs"
 msgstr "fetch --all не имеет смысла при указании спецификаций ссылок"
 
-#: builtin/fetch.c:1182
+#: builtin/fetch.c:1186
 #, c-format
 msgid "No such remote or remote group: %s"
 msgstr "Нет такого внешнего репозитория или группы: %s"
 
-#: builtin/fetch.c:1190
+#: builtin/fetch.c:1194
 msgid "Fetching a group and specifying refspecs does not make sense"
 msgstr "Получение группы и указание спецификаций ссылок не имеет смысла"
 
 #: builtin/fmt-merge-msg.c:13
 msgid ""
 "git fmt-merge-msg [-m <message>] [--log[=<n>] | --no-log] [--file <file>]"
 msgstr "git fmt-merge-msg [-m <сообщение>] [--log[=<n>] | --no-log] [--file <файл>]"
 
-#: builtin/fmt-merge-msg.c:662 builtin/fmt-merge-msg.c:665 builtin/grep.c:698
+#: builtin/fmt-merge-msg.c:668 builtin/fmt-merge-msg.c:671 builtin/grep.c:698
 #: builtin/merge.c:198 builtin/repack.c:178 builtin/repack.c:182
-#: builtin/show-branch.c:657 builtin/show-ref.c:178 builtin/tag.c:590
-#: parse-options.h:132 parse-options.h:239
+#: builtin/show-branch.c:664 builtin/show-ref.c:180 builtin/tag.c:590
+#: parse-options.h:131 parse-options.h:238
 msgid "n"
 msgstr "n"
 
-#: builtin/fmt-merge-msg.c:663
+#: builtin/fmt-merge-msg.c:669
 msgid "populate log with at most <n> entries from shortlog"
 msgstr "отправить в журнал <n> записей из короткого журнала"
 
-#: builtin/fmt-merge-msg.c:666
+#: builtin/fmt-merge-msg.c:672
 msgid "alias for --log (deprecated)"
 msgstr "сокращение для --log (устаревшее)"
 
-#: builtin/fmt-merge-msg.c:669
+#: builtin/fmt-merge-msg.c:675
 msgid "text"
 msgstr "текст"
 
-#: builtin/fmt-merge-msg.c:670
+#: builtin/fmt-merge-msg.c:676
 msgid "use <text> as start of message"
 msgstr "использовать <текст> как начальное сообщение"
 
-#: builtin/fmt-merge-msg.c:671
+#: builtin/fmt-merge-msg.c:677
 msgid "file to read from"
 msgstr "файл для чтения"
 
-#: builtin/for-each-ref.c:675
+#: builtin/for-each-ref.c:687
 msgid "unable to parse format"
 msgstr "не удалось разобрать формат"
 
-#: builtin/for-each-ref.c:1063
+#: builtin/for-each-ref.c:1083
 msgid "git for-each-ref [<options>] [<pattern>]"
 msgstr "git for-each-ref [<опции>] [<шаблон>]"
 
-#: builtin/for-each-ref.c:1078
+#: builtin/for-each-ref.c:1098
 msgid "quote placeholders suitably for shells"
 msgstr "выводить указатели места заполнения в подходящем формате для командного процессора"
 
-#: builtin/for-each-ref.c:1080
+#: builtin/for-each-ref.c:1100
 msgid "quote placeholders suitably for perl"
 msgstr "выводить указатели места заполнения в подходящем формате для perl"
 
-#: builtin/for-each-ref.c:1082
+#: builtin/for-each-ref.c:1102
 msgid "quote placeholders suitably for python"
 msgstr "выводить указатели места заполнения в подходящем формате для python"
 
-#: builtin/for-each-ref.c:1084
+#: builtin/for-each-ref.c:1104
 msgid "quote placeholders suitably for Tcl"
 msgstr "выводить указатели места заполнения в подходящем формате для Tcl"
 
-#: builtin/for-each-ref.c:1087
+#: builtin/for-each-ref.c:1107
 msgid "show only <n> matched refs"
 msgstr "показать только <n> совпадающих ссылок"
 
-#: builtin/for-each-ref.c:1088 builtin/replace.c:438
+#: builtin/for-each-ref.c:1108 builtin/replace.c:438
 msgid "format"
 msgstr "формат"
 
-#: builtin/for-each-ref.c:1088
+#: builtin/for-each-ref.c:1108
 msgid "format to use for the output"
 msgstr "использовать формат для вывода"
 
-#: builtin/for-each-ref.c:1089
+#: builtin/for-each-ref.c:1109
 msgid "key"
 msgstr "ключ"
 
-#: builtin/for-each-ref.c:1090
+#: builtin/for-each-ref.c:1110
 msgid "field name to sort on"
 msgstr "имя поля, по которому выполнить сортировку"
 
 #: builtin/fsck.c:147 builtin/prune.c:137
 msgid "Checking connectivity"
 msgstr "Проверка соединения"
 
-#: builtin/fsck.c:540
+#: builtin/fsck.c:548
 msgid "Checking object directories"
 msgstr "Проверка каталогов объектов"
 
-#: builtin/fsck.c:603
+#: builtin/fsck.c:611
 msgid "git fsck [<options>] [<object>...]"
 msgstr "git fsck [<опции>] [<объект>…]"
 
-#: builtin/fsck.c:609
+#: builtin/fsck.c:617
 msgid "show unreachable objects"
 msgstr "показать недоступные объекты"
 
-#: builtin/fsck.c:610
+#: builtin/fsck.c:618
 msgid "show dangling objects"
 msgstr "показать объекты, на которые нет ссылок"
 
-#: builtin/fsck.c:611
+#: builtin/fsck.c:619
 msgid "report tags"
 msgstr "вывести отчет по меткам"
 
-#: builtin/fsck.c:612
+#: builtin/fsck.c:620
 msgid "report root nodes"
 msgstr "вывести отчет по корневым узлам"
 
-#: builtin/fsck.c:613
+#: builtin/fsck.c:621
 msgid "make index objects head nodes"
 msgstr "воспринимать объекты в индексе как корневые узлы"
 
-#: builtin/fsck.c:614
+#: builtin/fsck.c:622
 msgid "make reflogs head nodes (default)"
 msgstr "создать корневые узлы журналов ссылок (по умолчанию)"
 
-#: builtin/fsck.c:615
+#: builtin/fsck.c:623
 msgid "also consider packs and alternate objects"
 msgstr "также проверять пакеты и альтернативные объекты"
 
-#: builtin/fsck.c:616
+#: builtin/fsck.c:624
 msgid "enable more strict checking"
 msgstr "использовать более строгую проверку"
 
-#: builtin/fsck.c:618
+#: builtin/fsck.c:626
 msgid "write dangling objects in .git/lost-found"
 msgstr "записать объекты на которые нет ссылок в .git/lost-found"
 
-#: builtin/fsck.c:619 builtin/prune.c:108
+#: builtin/fsck.c:627 builtin/prune.c:107
 msgid "show progress"
 msgstr "показать прогресс выполнения"
 
-#: builtin/fsck.c:669
+#: builtin/fsck.c:677
 msgid "Checking objects"
 msgstr "Проверка объектов"
 
 #: builtin/gc.c:24
 msgid "git gc [<options>]"
 msgstr "git gc [<опции>]"
 
-#: builtin/gc.c:79
+#: builtin/gc.c:67
 #, c-format
-msgid "Invalid gc.pruneexpire: '%s'"
-msgstr "Неправильный gc.pruneexpire: «%s»"
+msgid "Invalid %s: '%s'"
+msgstr "Недействительный %s: «%s»"
 
-#: builtin/gc.c:107
+#: builtin/gc.c:112
 #, c-format
 msgid "insanely long object directory %.*s"
 msgstr "слишком длинный путь к каталогу объекта %.*s"
 
-#: builtin/gc.c:276
+#: builtin/gc.c:281
 msgid "prune unreferenced objects"
 msgstr "почистить объекты, на которые нет ссылок"
 
-#: builtin/gc.c:278
+#: builtin/gc.c:283
 msgid "be more thorough (increased runtime)"
 msgstr "проверять более внимательно (занимает больше времени)"
 
-#: builtin/gc.c:279
+#: builtin/gc.c:284
 msgid "enable auto-gc mode"
 msgstr "включить режим auto-gc"
 
-#: builtin/gc.c:280
+#: builtin/gc.c:285
 msgid "force running gc even if there may be another gc running"
 msgstr "принудительно запустить gc, даже есть другая копия gc уже запущена"
 
-#: builtin/gc.c:321
+#: builtin/gc.c:327
 #, c-format
 msgid "Auto packing the repository in background for optimum performance.\n"
 msgstr "Автоматическая упаковка репозитория в фоне, для оптимальной производительности.\n"
 
-#: builtin/gc.c:323
+#: builtin/gc.c:329
 #, c-format
 msgid "Auto packing the repository for optimum performance.\n"
 msgstr "Автоматическая упаковка репозитория, для оптимальной производительности.\n"
 
-#: builtin/gc.c:324
+#: builtin/gc.c:330
 #, c-format
 msgid "See \"git help gc\" for manual housekeeping.\n"
 msgstr "Смотрите «git help gc» руководства по ручной очистке.\n"
 
-#: builtin/gc.c:342
+#: builtin/gc.c:348
 #, c-format
 msgid ""
 "gc is already running on machine '%s' pid %<PRIuMAX> (use --force if not)"
 msgstr "gc уже запущен на этом компьютере «%s» pid %<PRIuMAX> (если нет, используйте --force)"
 
-#: builtin/gc.c:364
+#: builtin/gc.c:376
 msgid ""
 "There are too many unreachable loose objects; run 'git prune' to remove "
 "them."
 msgstr "Имеется слишком много объектов, на которые нет ссылок; запустите «git prune» для их удаления."
 
 #: builtin/grep.c:23
@@ -5584,13 +5689,13 @@
 msgstr "показать совпадающие файлы с помощью программы-пейджера"
 
 #: builtin/grep.c:740
 msgid "allow calling of grep(1) (ignored by this build)"
 msgstr "разрешить вызов grep(1) (игнорируется в этой сборке)"
 
-#: builtin/grep.c:741 builtin/show-ref.c:187
+#: builtin/grep.c:741 builtin/show-ref.c:189
 msgid "show usage"
 msgstr "показать использование"
 
 #: builtin/grep.c:808
 msgid "no pattern given."
 msgstr "не задан шаблон."
@@ -5612,48 +5717,48 @@
 msgstr "--[no-]exclude-standard не может использоваться для отслеживаемого содержимого."
 
 #: builtin/grep.c:908
 msgid "both --cached and trees are given."
 msgstr "указано одновременно --cached и дерево."
 
-#: builtin/hash-object.c:82
+#: builtin/hash-object.c:80
 msgid ""
 "git hash-object [-t <type>] [-w] [--path=<file> | --no-filters] [--stdin] "
 "[--] <file>..."
 msgstr "git hash-object [-t <тип>] [-w] [--path=<файл> | --no-filters] [--stdin] [--] <файл>…"
 
-#: builtin/hash-object.c:83
+#: builtin/hash-object.c:81
 msgid "git hash-object  --stdin-paths < <list-of-paths>"
 msgstr "git hash-object  --stdin-paths < <список-путей>"
 
-#: builtin/hash-object.c:94 builtin/tag.c:612
+#: builtin/hash-object.c:92 builtin/tag.c:612
 msgid "type"
 msgstr "тип"
 
-#: builtin/hash-object.c:94
+#: builtin/hash-object.c:92
 msgid "object type"
 msgstr "тип объекта"
 
-#: builtin/hash-object.c:95
+#: builtin/hash-object.c:93
 msgid "write the object into the object database"
 msgstr "запись объекта в базу данных объектов"
 
-#: builtin/hash-object.c:97
+#: builtin/hash-object.c:95
 msgid "read the object from stdin"
 msgstr "прочитать объект из стандартного ввода"
 
-#: builtin/hash-object.c:99
+#: builtin/hash-object.c:97
 msgid "store file as is without filters"
 msgstr "сохранить файл без использования фильтров"
 
-#: builtin/hash-object.c:100
+#: builtin/hash-object.c:98
 msgid ""
 "just hash any random garbage to create corrupt objects for debugging Git"
 msgstr "хешировать любой мусор и создавать поврежденные объекты для отладки Git"
 
-#: builtin/hash-object.c:101
+#: builtin/hash-object.c:99
 msgid "process file as it were from this path"
 msgstr "обработать файл так, будто он находится по указанному пути"
 
 #: builtin/help.c:41
 msgid "print all available commands"
 msgstr "вывести список всех доступных команд"
@@ -5771,302 +5876,307 @@
 
 #: builtin/help.c:501
 #, c-format
 msgid "`git %s' is aliased to `%s'"
 msgstr "«git %s» — это сокращение для «%s»"
 
-#: builtin/index-pack.c:150
+#: builtin/index-pack.c:151
 #, c-format
 msgid "unable to open %s"
 msgstr "не удалось открыть %s"
 
-#: builtin/index-pack.c:200
+#: builtin/index-pack.c:201
 #, c-format
 msgid "object type mismatch at %s"
 msgstr "несоответствие типа объекта на %s"
 
-#: builtin/index-pack.c:220
+#: builtin/index-pack.c:221
 #, c-format
 msgid "did not receive expected object %s"
 msgstr "ожидаемый объект не получен на %s"
 
-#: builtin/index-pack.c:223
+#: builtin/index-pack.c:224
 #, c-format
 msgid "object %s: expected type %s, found %s"
 msgstr "объект %s: ожидаемый тип %s, получен %s"
 
-#: builtin/index-pack.c:265
+#: builtin/index-pack.c:266
 #, c-format
 msgid "cannot fill %d byte"
 msgid_plural "cannot fill %d bytes"
 msgstr[0] "не удалось заполнить %d байт"
 msgstr[1] "не удалось заполнить %d байта"
 msgstr[2] "не удалось заполнить %d байтов"
+msgstr[3] "не удалось заполнить %d байтов"
 
-#: builtin/index-pack.c:275
+#: builtin/index-pack.c:276
 msgid "early EOF"
 msgstr "неожиданный конец файла"
 
-#: builtin/index-pack.c:276
+#: builtin/index-pack.c:277
 msgid "read error on input"
 msgstr "ошибка чтения ввода"
 
-#: builtin/index-pack.c:288
+#: builtin/index-pack.c:289
 msgid "used more bytes than were available"
 msgstr "использовано больше байт, чем было доступно"
 
-#: builtin/index-pack.c:295
+#: builtin/index-pack.c:296
 msgid "pack too large for current definition of off_t"
 msgstr "пакет слишком большой для текущего определения off_t"
 
-#: builtin/index-pack.c:311
+#: builtin/index-pack.c:312
 #, c-format
 msgid "unable to create '%s'"
 msgstr "не удалось создать «%s»"
 
-#: builtin/index-pack.c:316
+#: builtin/index-pack.c:317
 #, c-format
 msgid "cannot open packfile '%s'"
 msgstr "не удалось открыть файл пакета «%s»"
 
-#: builtin/index-pack.c:330
+#: builtin/index-pack.c:331
 msgid "pack signature mismatch"
 msgstr "несоответствие подписи пакета"
 
-#: builtin/index-pack.c:332
+#: builtin/index-pack.c:333
 #, c-format
 msgid "pack version %<PRIu32> unsupported"
 msgstr "версия пакета %<PRIu32> не поддерживается"
 
-#: builtin/index-pack.c:350
+#: builtin/index-pack.c:351
 #, c-format
 msgid "pack has bad object at offset %lu: %s"
 msgstr "в пакете содержится поврежденный объект по смещению %lu: %s"
 
-#: builtin/index-pack.c:471
+#: builtin/index-pack.c:472
 #, c-format
 msgid "inflate returned %d"
 msgstr "программа сжатия вернула %d"
 
-#: builtin/index-pack.c:520
+#: builtin/index-pack.c:521
 msgid "offset value overflow for delta base object"
 msgstr "переполнение значения смещения у базового объекта дельты"
 
-#: builtin/index-pack.c:528
+#: builtin/index-pack.c:529
 msgid "delta base offset is out of bound"
 msgstr "смещение базовой дельты вышло за допустимые пределы"
 
-#: builtin/index-pack.c:536
+#: builtin/index-pack.c:537
 #, c-format
 msgid "unknown object type %d"
 msgstr "неизвестный тип объекта %d"
 
-#: builtin/index-pack.c:567
+#: builtin/index-pack.c:568
 msgid "cannot pread pack file"
 msgstr "не удалось выполнить pread для файла пакета"
 
-#: builtin/index-pack.c:569
+#: builtin/index-pack.c:570
 #, c-format
 msgid "premature end of pack file, %lu byte missing"
 msgid_plural "premature end of pack file, %lu bytes missing"
 msgstr[0] "преждевременное окончание файла пакета, %lu байт отсутствует"
 msgstr[1] "преждевременное окончание файла пакета, %lu байта отсутствует"
 msgstr[2] "преждевременное окончание файла пакета, %lu байтов отсутствует"
+msgstr[3] "преждевременное окончание файла пакета, %lu байтов отсутствует"
 
-#: builtin/index-pack.c:595
+#: builtin/index-pack.c:596
 msgid "serious inflate inconsistency"
 msgstr "серьезное несоответствие при распаковке"
 
-#: builtin/index-pack.c:686 builtin/index-pack.c:692 builtin/index-pack.c:715
-#: builtin/index-pack.c:749 builtin/index-pack.c:758
+#: builtin/index-pack.c:742 builtin/index-pack.c:748 builtin/index-pack.c:771
+#: builtin/index-pack.c:805 builtin/index-pack.c:814
 #, c-format
 msgid "SHA1 COLLISION FOUND WITH %s !"
 msgstr "НАЙДЕНА КОЛЛИЗИЯ SHA1 С %s !"
 
-#: builtin/index-pack.c:689 builtin/pack-objects.c:162
+#: builtin/index-pack.c:745 builtin/pack-objects.c:162
 #: builtin/pack-objects.c:254
 #, c-format
 msgid "unable to read %s"
 msgstr "не удалось прочитать %s"
 
-#: builtin/index-pack.c:755
+#: builtin/index-pack.c:811
 #, c-format
 msgid "cannot read existing object %s"
 msgstr "не удалось прочитать существующий объект %s"
 
-#: builtin/index-pack.c:769
+#: builtin/index-pack.c:825
 #, c-format
 msgid "invalid blob object %s"
 msgstr "неправильный файл двоичного объекта %s"
 
-#: builtin/index-pack.c:783
+#: builtin/index-pack.c:839
 #, c-format
 msgid "invalid %s"
 msgstr "неправильный %s"
 
-#: builtin/index-pack.c:787
+#: builtin/index-pack.c:843
 msgid "Error in object"
 msgstr "Ошибка в объекте"
 
-#: builtin/index-pack.c:789
+#: builtin/index-pack.c:845
 #, c-format
 msgid "Not all child objects of %s are reachable"
 msgstr "Не все дочерние объекты %s достижимы"
 
-#: builtin/index-pack.c:861 builtin/index-pack.c:890
+#: builtin/index-pack.c:917 builtin/index-pack.c:948
 msgid "failed to apply delta"
 msgstr "сбой при применении дельты"
 
-#: builtin/index-pack.c:1055
+#: builtin/index-pack.c:1118
 msgid "Receiving objects"
 msgstr "Получение объектов"
 
-#: builtin/index-pack.c:1055
+#: builtin/index-pack.c:1118
 msgid "Indexing objects"
 msgstr "Индексирование объектов"
 
-#: builtin/index-pack.c:1081
+#: builtin/index-pack.c:1150
 msgid "pack is corrupted (SHA1 mismatch)"
 msgstr "пакет поврежден (несоответствие SHA1)"
 
-#: builtin/index-pack.c:1086
+#: builtin/index-pack.c:1155
 msgid "cannot fstat packfile"
 msgstr "не удалось выполнить fstat для файла пакета"
 
-#: builtin/index-pack.c:1089
+#: builtin/index-pack.c:1158
 msgid "pack has junk at the end"
 msgstr "файл пакета содержит мусор в конце"
 
-#: builtin/index-pack.c:1100
+#: builtin/index-pack.c:1169
 msgid "confusion beyond insanity in parse_pack_objects()"
 msgstr "безумная путаница в parse_pack_objects()"
 
-#: builtin/index-pack.c:1123
+#: builtin/index-pack.c:1194
 msgid "Resolving deltas"
 msgstr "Определение изменений"
 
-#: builtin/index-pack.c:1133
+#: builtin/index-pack.c:1205
 #, c-format
 msgid "unable to create thread: %s"
 msgstr "не удалось создать поток: %s"
 
-#: builtin/index-pack.c:1175
+#: builtin/index-pack.c:1247
 msgid "confusion beyond insanity"
 msgstr "безумная путаница"
 
-#: builtin/index-pack.c:1181
+#: builtin/index-pack.c:1253
 #, c-format
 msgid "completed with %d local objects"
 msgstr "завершено с %d локальными объектами"
 
-#: builtin/index-pack.c:1191
+#: builtin/index-pack.c:1263
 #, c-format
 msgid "Unexpected tail checksum for %s (disk corruption?)"
 msgstr "Неожиданная контрольная сумма в конце %s (диск поврежден?)"
 
-#: builtin/index-pack.c:1195
+#: builtin/index-pack.c:1267
 #, c-format
 msgid "pack has %d unresolved delta"
 msgid_plural "pack has %d unresolved deltas"
 msgstr[0] "пакет содержит %d неразрешенную дельту"
 msgstr[1] "пакет содержит %d неразрешенные дельты"
 msgstr[2] "пакет содержит %d неразрешенных дельт"
+msgstr[3] "пакет содержит %d неразрешенных дельт"
 
-#: builtin/index-pack.c:1219
+#: builtin/index-pack.c:1291
 #, c-format
 msgid "unable to deflate appended object (%d)"
 msgstr "нельзя сжать присоединенный объект (%d)"
 
-#: builtin/index-pack.c:1298
+#: builtin/index-pack.c:1367
 #, c-format
 msgid "local object %s is corrupt"
 msgstr "локальный объект %s поврежден"
 
-#: builtin/index-pack.c:1322
+#: builtin/index-pack.c:1391
 msgid "error while closing pack file"
 msgstr "ошибка при закрытии файла пакета"
 
-#: builtin/index-pack.c:1335
+#: builtin/index-pack.c:1404
 #, c-format
 msgid "cannot write keep file '%s'"
 msgstr "не удалось записать файл удержания «%s»"
 
-#: builtin/index-pack.c:1343
+#: builtin/index-pack.c:1412
 #, c-format
 msgid "cannot close written keep file '%s'"
 msgstr "не удалось закрыть записанный файл удержания «%s»"
 
-#: builtin/index-pack.c:1356
+#: builtin/index-pack.c:1425
 msgid "cannot store pack file"
 msgstr "не удалось сохранить файл пакета"
 
-#: builtin/index-pack.c:1367
+#: builtin/index-pack.c:1436
 msgid "cannot store index file"
 msgstr "не удалось сохранить файл индекса"
 
-#: builtin/index-pack.c:1400
+#: builtin/index-pack.c:1469
 #, c-format
 msgid "bad pack.indexversion=%<PRIu32>"
 msgstr "плохой pack.indexversion=%<PRIu32>"
 
-#: builtin/index-pack.c:1406
+#: builtin/index-pack.c:1475
 #, c-format
 msgid "invalid number of threads specified (%d)"
 msgstr "указано неправильное количество потоков (%d)"
 
-#: builtin/index-pack.c:1410 builtin/index-pack.c:1589
+#: builtin/index-pack.c:1479 builtin/index-pack.c:1658
 #, c-format
 msgid "no threads support, ignoring %s"
 msgstr "нет поддержки потоков, игнорирование %s"
 
-#: builtin/index-pack.c:1468
+#: builtin/index-pack.c:1537
 #, c-format
 msgid "Cannot open existing pack file '%s'"
 msgstr "Не удалось открыть существующий файл пакета «%s»"
 
-#: builtin/index-pack.c:1470
+#: builtin/index-pack.c:1539
 #, c-format
 msgid "Cannot open existing pack idx file for '%s'"
 msgstr "Не удалось открыть существующий файл индекса для «%s»"
 
-#: builtin/index-pack.c:1517
+#: builtin/index-pack.c:1586
 #, c-format
 msgid "non delta: %d object"
 msgid_plural "non delta: %d objects"
 msgstr[0] "не дельты: %d объект"
 msgstr[1] "не дельты: %d объекта"
 msgstr[2] "не дельты: %d объектов"
+msgstr[3] "не дельты: %d объектов"
 
-#: builtin/index-pack.c:1524
+#: builtin/index-pack.c:1593
 #, c-format
 msgid "chain length = %d: %lu object"
 msgid_plural "chain length = %d: %lu objects"
 msgstr[0] "длина цепочки = %d: %lu объект"
 msgstr[1] "длина цепочки = %d: %lu объекта"
 msgstr[2] "длина цепочки = %d: %lu объектов"
+msgstr[3] "длина цепочки = %d: %lu объектов"
 
-#: builtin/index-pack.c:1553
+#: builtin/index-pack.c:1622
 msgid "Cannot come back to cwd"
 msgstr "Не удалось вернуться в текущий рабочий каталог"
 
-#: builtin/index-pack.c:1601 builtin/index-pack.c:1604
-#: builtin/index-pack.c:1616 builtin/index-pack.c:1620
+#: builtin/index-pack.c:1670 builtin/index-pack.c:1673
+#: builtin/index-pack.c:1685 builtin/index-pack.c:1689
 #, c-format
 msgid "bad %s"
 msgstr "плохой %s"
 
-#: builtin/index-pack.c:1634
+#: builtin/index-pack.c:1703
 msgid "--fix-thin cannot be used without --stdin"
 msgstr "--fix-thin нельзя использовать без --stdin"
 
-#: builtin/index-pack.c:1638 builtin/index-pack.c:1647
+#: builtin/index-pack.c:1707 builtin/index-pack.c:1716
 #, c-format
 msgid "packfile name '%s' does not end with '.pack'"
 msgstr "имя пакета «%s» не оканчивается на «.pack»"
 
-#: builtin/index-pack.c:1655
+#: builtin/index-pack.c:1724
 msgid "--verify with no packfile name given"
 msgstr "--verify без указания имени файла пакета"
 
 #: builtin/init-db.c:35
 #, c-format
 msgid "Could not make %s writable by group"
@@ -6129,88 +6239,88 @@
 
 #: builtin/init-db.c:157
 #, c-format
 msgid "not copying templates of a wrong format version %d from '%s'"
 msgstr "не копирую шаблоны в неправильной версии формата %d из «%s»"
 
-#: builtin/init-db.c:197
+#: builtin/init-db.c:211
 #, c-format
 msgid "insane git directory %s"
 msgstr "слишком длинный путь к каталогу git %s"
 
-#: builtin/init-db.c:331 builtin/init-db.c:334
+#: builtin/init-db.c:343 builtin/init-db.c:346
 #, c-format
 msgid "%s already exists"
 msgstr "%s уже существует"
 
-#: builtin/init-db.c:363
+#: builtin/init-db.c:374
 #, c-format
 msgid "unable to handle file type %d"
 msgstr "не удается обработать файл типа %d"
 
-#: builtin/init-db.c:366
+#: builtin/init-db.c:377
 #, c-format
 msgid "unable to move %s to %s"
 msgstr "не удается переместить файл %s в %s"
 
 #. TRANSLATORS: The first '%s' is either "Reinitialized
 #. existing" or "Initialized empty", the second " shared" or
 #. "", and the last '%s%s' is the verbatim directory name.
-#: builtin/init-db.c:426
+#: builtin/init-db.c:433
 #, c-format
 msgid "%s%s Git repository in %s%s\n"
 msgstr "%s%s репозиторий Git в %s%s\n"
 
-#: builtin/init-db.c:427
+#: builtin/init-db.c:434
 msgid "Reinitialized existing"
 msgstr "Реинициализация существующего"
 
-#: builtin/init-db.c:427
+#: builtin/init-db.c:434
 msgid "Initialized empty"
 msgstr "Инициализирован пустой"
 
-#: builtin/init-db.c:428
+#: builtin/init-db.c:435
 msgid " shared"
 msgstr " общий"
 
-#: builtin/init-db.c:475
+#: builtin/init-db.c:482
 msgid ""
 "git init [-q | --quiet] [--bare] [--template=<template-directory>] "
 "[--shared[=<permissions>]] [<directory>]"
 msgstr "git init [-q | --quiet] [--bare] [--template=<каталог-шаблонов>] [--shared[=<права-доступа>]] [<каталог>]"
 
-#: builtin/init-db.c:498
+#: builtin/init-db.c:505
 msgid "permissions"
 msgstr "права-доступа"
 
-#: builtin/init-db.c:499
+#: builtin/init-db.c:506
 msgid "specify that the git repository is to be shared amongst several users"
 msgstr "укажите, если репозиторий git будет использоваться несколькими пользователями"
 
-#: builtin/init-db.c:501 builtin/prune-packed.c:57 builtin/repack.c:171
+#: builtin/init-db.c:508 builtin/prune-packed.c:57 builtin/repack.c:171
 msgid "be quiet"
 msgstr "тихий режим"
 
-#: builtin/init-db.c:533 builtin/init-db.c:538
+#: builtin/init-db.c:540 builtin/init-db.c:545
 #, c-format
 msgid "cannot mkdir %s"
 msgstr "не удалось выполнить mkdir %s"
 
-#: builtin/init-db.c:542
+#: builtin/init-db.c:549
 #, c-format
 msgid "cannot chdir to %s"
 msgstr "не удалось выполнить chdir в %s"
 
-#: builtin/init-db.c:563
+#: builtin/init-db.c:570
 #, c-format
 msgid ""
 "%s (or --work-tree=<directory>) not allowed without specifying %s (or --git-"
 "dir=<directory>)"
 msgstr "%s (или --work-tree=<каталог>) нельзя использовать без указания %s (или --git-dir=<каталог>)"
 
-#: builtin/init-db.c:591
+#: builtin/init-db.c:598
 #, c-format
 msgid "Cannot access work tree '%s'"
 msgstr "Не удалось получить доступ к рабочему каталогу «%s»"
 
 #: builtin/interpret-trailers.c:15
 msgid ""
@@ -6228,13 +6338,13 @@
 
 #: builtin/interpret-trailers.c:27
 msgid "trailer(s) to add"
 msgstr "завершители для добавления"
 
 #: builtin/log.c:41
-msgid "git log [<options>] [<revision range>] [[--] <path>...]"
+msgid "git log [<options>] [<revision-range>] [[--] <path>...]"
 msgstr "git log [<опции>] [<диапазон-редакций>] [[--] <путь>…]"
 
 #: builtin/log.c:42
 msgid "git show [<options>] <object>..."
 msgstr "git show [<опции>] <объект>…"
 
@@ -6297,13 +6407,13 @@
 msgstr "Ну удалось открыть файл изменений %s"
 
 #: builtin/log.c:803
 msgid "Need exactly one range."
 msgstr "Нужен только один диапазон."
 
-#: builtin/log.c:811
+#: builtin/log.c:813
 msgid "Not a range."
 msgstr "Не является диапазоном."
 
 #: builtin/log.c:919
 msgid "Cover letter needs email format"
 msgstr "Сопроводительное письмо должно быть в формате электронной почты"
@@ -6497,20 +6607,20 @@
 msgstr "Сбой при создании выходных файлов"
 
 #: builtin/log.c:1583
 msgid "git cherry [-v] [<upstream> [<head> [<limit>]]]"
 msgstr "git cherry [-v] [<вышестоящая-ветка> [<голова> [<ограничение>]]]"
 
-#: builtin/log.c:1638
+#: builtin/log.c:1637
 #, c-format
 msgid ""
 "Could not find a tracked remote branch, please specify <upstream> "
 "manually.\n"
 msgstr "Не удалось найти отслеживаемую внешнюю ветку, укажите <вышестоящую-ветку> вручную.\n"
 
-#: builtin/log.c:1651 builtin/log.c:1653 builtin/log.c:1665
+#: builtin/log.c:1648 builtin/log.c:1650 builtin/log.c:1662
 #, c-format
 msgid "Unknown commit %s"
 msgstr "Неизвестный коммит %s"
 
 #: builtin/ls-files.c:358
 msgid "git ls-files [<options>] [<file>...]"
@@ -6776,205 +6886,210 @@
 
 #: builtin/merge.c:447
 #, c-format
 msgid "'%s' does not point to a commit"
 msgstr "«%s» не указывает на коммит"
 
-#: builtin/merge.c:559
+#: builtin/merge.c:537
 #, c-format
 msgid "Bad branch.%s.mergeoptions string: %s"
 msgstr "Неправильная строка branch.%s.mergeoptions: %s"
 
-#: builtin/merge.c:654
+#: builtin/merge.c:632
 msgid "git write-tree failed to write a tree"
 msgstr "git write-tree не удалось записать дерево"
 
-#: builtin/merge.c:678
+#: builtin/merge.c:656
 msgid "Not handling anything other than two heads merge."
 msgstr "Не обрабатываю ничего, кроме слияния двух указателей на коммиты."
 
-#: builtin/merge.c:692
+#: builtin/merge.c:670
 #, c-format
 msgid "Unknown option for merge-recursive: -X%s"
 msgstr "Неизвестный параметр merge-recursive: -X%s"
 
-#: builtin/merge.c:705
+#: builtin/merge.c:683
 #, c-format
 msgid "unable to write %s"
 msgstr "не удалось записать %s"
 
-#: builtin/merge.c:794
+#: builtin/merge.c:772
 #, c-format
 msgid "Could not read from '%s'"
 msgstr "Не удалось прочесть из «%s»"
 
-#: builtin/merge.c:803
+#: builtin/merge.c:781
 #, c-format
 msgid "Not committing merge; use 'git commit' to complete the merge.\n"
 msgstr "Не выполняю коммит слияния; используйте «git commit» для завершения слияния.\n"
 
-#: builtin/merge.c:809
+#: builtin/merge.c:787
 #, c-format
 msgid ""
 "Please enter a commit message to explain why this merge is necessary,\n"
 "especially if it merges an updated upstream into a topic branch.\n"
 "\n"
 "Lines starting with '%c' will be ignored, and an empty message aborts\n"
 "the commit.\n"
 msgstr "Пожалуйста, введите сообщение коммита, для объяснения, зачем нужно\nэто слияние, особенно, если это слияние обновленной вышестоящей\nветки в тематическую ветку.\n\nСтроки, начинающиеся с «%c» будут проигнорированы, а пустое\nсообщение отменяет процесс коммита.\n"
 
-#: builtin/merge.c:833
+#: builtin/merge.c:811
 msgid "Empty commit message."
 msgstr "Пустое сообщение коммита."
 
-#: builtin/merge.c:845
+#: builtin/merge.c:823
 #, c-format
 msgid "Wonderful.\n"
 msgstr "Прекрасно.\n"
 
-#: builtin/merge.c:900
+#: builtin/merge.c:878
 #, c-format
 msgid "Automatic merge failed; fix conflicts and then commit the result.\n"
 msgstr "Не удалось провести автоматическое слияние; исправьте конфликты и сделайте коммит результата.\n"
 
-#: builtin/merge.c:916
+#: builtin/merge.c:894
 #, c-format
 msgid "'%s' is not a commit"
 msgstr "«%s» не является коммитом"
 
-#: builtin/merge.c:957
+#: builtin/merge.c:935
 msgid "No current branch."
 msgstr "Нет текущей ветки."
 
-#: builtin/merge.c:959
+#: builtin/merge.c:937
 msgid "No remote for the current branch."
 msgstr "У текущей ветки нет внешнего репозитория."
 
-#: builtin/merge.c:961
+#: builtin/merge.c:939
 msgid "No default upstream defined for the current branch."
 msgstr "Для текущей ветки не указана вышестоящая ветка по умолчанию."
 
-#: builtin/merge.c:966
+#: builtin/merge.c:944
 #, c-format
 msgid "No remote-tracking branch for %s from %s"
 msgstr "Не указана внешняя отслеживаемая ветка для %s на %s"
 
-#: builtin/merge.c:1122
+#: builtin/merge.c:1081
+#, c-format
+msgid "could not close '%s'"
+msgstr "не удалось закрыть «%s»"
+
+#: builtin/merge.c:1208
 msgid "There is no merge to abort (MERGE_HEAD missing)."
 msgstr "Нет слияния, которое можно отменить (отсутствует файл MERGE_HEAD)."
 
-#: builtin/merge.c:1138
+#: builtin/merge.c:1224
 msgid ""
 "You have not concluded your merge (MERGE_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr "Вы не завершили слияние (присутствует файл MERGE_HEAD).\nВыполните коммит ваших изменений, перед слиянием."
 
-#: builtin/merge.c:1141 git-pull.sh:34
+#: builtin/merge.c:1227 git-pull.sh:74
 msgid "You have not concluded your merge (MERGE_HEAD exists)."
 msgstr "Вы не завершили слияние (присутствует файл MERGE_HEAD)."
 
-#: builtin/merge.c:1145
+#: builtin/merge.c:1231
 msgid ""
 "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr "Вы не завершили отбор лучшего (присутствует файл CHERRY_PICK_HEAD).\nПожалуйста, выполните коммит ваших изменений, перед слиянием."
 
-#: builtin/merge.c:1148
+#: builtin/merge.c:1234
 msgid "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists)."
 msgstr "Вы не завершили отбор лучшего (присутствует файл CHERRY_PICK_HEAD)."
 
-#: builtin/merge.c:1157
+#: builtin/merge.c:1243
 msgid "You cannot combine --squash with --no-ff."
 msgstr "Нельзя использовать одновременно --squash и --no-ff."
 
-#: builtin/merge.c:1166
+#: builtin/merge.c:1251
 msgid "No commit specified and merge.defaultToUpstream not set."
 msgstr "Коммит не указан и параметр merge.defaultToUpstream не установлен."
 
-#: builtin/merge.c:1198
-msgid "Can merge only exactly one commit into empty head"
-msgstr "Можно слить строго один коммит в пустой HEAD."
-
-#: builtin/merge.c:1201
+#: builtin/merge.c:1268
 msgid "Squash commit into empty head not supported yet"
 msgstr "Уплотнение коммита в пустой HEAD еще не поддерживается"
 
-#: builtin/merge.c:1203
+#: builtin/merge.c:1270
 msgid "Non-fast-forward commit does not make sense into an empty head"
 msgstr "Коммит, не являющийся перемоткой вперед, нет смысла делать в пустой HEAD."
 
-#: builtin/merge.c:1208
+#: builtin/merge.c:1276
 #, c-format
 msgid "%s - not something we can merge"
 msgstr "%s не является тем, что можно слить"
 
-#: builtin/merge.c:1259
+#: builtin/merge.c:1278
+msgid "Can merge only exactly one commit into empty head"
+msgstr "Можно слить строго один коммит в пустой HEAD."
+
+#: builtin/merge.c:1333
 #, c-format
 msgid "Commit %s has an untrusted GPG signature, allegedly by %s."
 msgstr "Коммит %s содержит не доверенную GPG подпись, предположительно от %s."
 
-#: builtin/merge.c:1262
+#: builtin/merge.c:1336
 #, c-format
 msgid "Commit %s has a bad GPG signature allegedly by %s."
 msgstr "Коммит %s содержит плохую GPG подпись, предположительно от %s."
 
-#: builtin/merge.c:1265
+#: builtin/merge.c:1339
 #, c-format
 msgid "Commit %s does not have a GPG signature."
 msgstr "Коммит %s не содержит GPG подпись."
 
-#: builtin/merge.c:1268
+#: builtin/merge.c:1342
 #, c-format
 msgid "Commit %s has a good GPG signature by %s\n"
 msgstr "Коммит %s содержит действительную GPG подпись, от %s.\n"
 
-#: builtin/merge.c:1349
+#: builtin/merge.c:1423
 #, c-format
 msgid "Updating %s..%s\n"
 msgstr "Обновление %s..%s\n"
 
-#: builtin/merge.c:1388
+#: builtin/merge.c:1462
 #, c-format
 msgid "Trying really trivial in-index merge...\n"
 msgstr "Попытка тривиального слияния в индексе…\n"
 
-#: builtin/merge.c:1395
+#: builtin/merge.c:1469
 #, c-format
 msgid "Nope.\n"
 msgstr "Не вышло.\n"
 
-#: builtin/merge.c:1427
+#: builtin/merge.c:1501
 msgid "Not possible to fast-forward, aborting."
 msgstr "Перемотка вперед не возможна, отмена."
 
-#: builtin/merge.c:1450 builtin/merge.c:1529
+#: builtin/merge.c:1524 builtin/merge.c:1603
 #, c-format
 msgid "Rewinding the tree to pristine...\n"
 msgstr "Перемотка дерева к исходному состоянию…\n"
 
-#: builtin/merge.c:1454
+#: builtin/merge.c:1528
 #, c-format
 msgid "Trying merge strategy %s...\n"
 msgstr "Попытка слияния с помощью стратегии %s…\n"
 
-#: builtin/merge.c:1520
+#: builtin/merge.c:1594
 #, c-format
 msgid "No merge strategy handled the merge.\n"
 msgstr "Ни одна стратегия слияния не обработала слияние.\n"
 
-#: builtin/merge.c:1522
+#: builtin/merge.c:1596
 #, c-format
 msgid "Merge with strategy %s failed.\n"
 msgstr "Сбой при слиянии с помощью стратегии %s.\n"
 
-#: builtin/merge.c:1531
+#: builtin/merge.c:1605
 #, c-format
 msgid "Using the %s to prepare resolving by hand.\n"
 msgstr "Использую %s для подготовки ручного разрешения конфликтов.\n"
 
-#: builtin/merge.c:1543
+#: builtin/merge.c:1617
 #, c-format
 msgid "Automatic merge went well; stopped before committing as requested\n"
 msgstr "Автоматическое слияние прошло успешно; как и запрашивали, остановлено перед выполнением коммита\n"
 
 #: builtin/merge-base.c:29
 msgid "git merge-base [-a | --all] <commit> <commit>..."
@@ -7154,13 +7269,13 @@
 
 #: builtin/mv.c:253
 #, c-format
 msgid "Renaming %s to %s\n"
 msgstr "Переименование %s в %s\n"
 
-#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:359
+#: builtin/mv.c:256 builtin/remote.c:725 builtin/repack.c:361
 #, c-format
 msgid "renaming '%s' failed"
 msgstr "сбой при переименовании «%s»"
 
 #: builtin/name-rev.c:255
 msgid "git name-rev [<options>] <commit>..."
@@ -7513,13 +7628,13 @@
 msgstr "ссылка-на-заметку"
 
 #: builtin/notes.c:954
 msgid "use notes from <notes-ref>"
 msgstr "использовать заметку из <ссылка-на-заметку>"
 
-#: builtin/notes.c:989 builtin/remote.c:1621
+#: builtin/notes.c:989 builtin/remote.c:1618
 #, c-format
 msgid "Unknown subcommand: %s"
 msgstr "Неизвестная подкоманда: %s"
 
 #: builtin/pack-objects.c:28
 msgid "git pack-objects --stdout [options...] [< ref-list | < object-list]"
@@ -7535,177 +7650,177 @@
 msgstr "ошибка сжатия (%d)"
 
 #: builtin/pack-objects.c:771
 msgid "Writing objects"
 msgstr "Запись объектов"
 
-#: builtin/pack-objects.c:1013
+#: builtin/pack-objects.c:1011
 msgid "disabling bitmap writing, as some objects are not being packed"
 msgstr "отключение записи битовых карт, так как некоторые объекты не были упакованы"
 
-#: builtin/pack-objects.c:2173
+#: builtin/pack-objects.c:2171
 msgid "Compressing objects"
 msgstr "Сжатие объектов"
 
-#: builtin/pack-objects.c:2570
+#: builtin/pack-objects.c:2568
 #, c-format
 msgid "unsupported index version %s"
 msgstr "неподдерживаемая версия индекса %s"
 
-#: builtin/pack-objects.c:2574
+#: builtin/pack-objects.c:2572
 #, c-format
 msgid "bad index version '%s'"
 msgstr "плохая версия индекса «%s»"
 
-#: builtin/pack-objects.c:2597
+#: builtin/pack-objects.c:2595
 #, c-format
 msgid "option %s does not accept negative form"
 msgstr "опция %s не принимает отрицательные значения"
 
-#: builtin/pack-objects.c:2601
+#: builtin/pack-objects.c:2599
 #, c-format
 msgid "unable to parse value '%s' for option %s"
 msgstr "не удалось разобрать значение «%s» для опции %s"
 
-#: builtin/pack-objects.c:2621
+#: builtin/pack-objects.c:2619
 msgid "do not show progress meter"
 msgstr "не выводить прогресс выполнения"
 
-#: builtin/pack-objects.c:2623
+#: builtin/pack-objects.c:2621
 msgid "show progress meter"
 msgstr "показать прогресс выполнения"
 
-#: builtin/pack-objects.c:2625
+#: builtin/pack-objects.c:2623
 msgid "show progress meter during object writing phase"
 msgstr "показать прогресс выполнения во время записи объектов"
 
-#: builtin/pack-objects.c:2628
+#: builtin/pack-objects.c:2626
 msgid "similar to --all-progress when progress meter is shown"
 msgstr "похоже на --all-progress при включенном прогрессе выполнения"
 
-#: builtin/pack-objects.c:2629
+#: builtin/pack-objects.c:2627
 msgid "version[,offset]"
 msgstr "версия[,смещение]"
 
-#: builtin/pack-objects.c:2630
+#: builtin/pack-objects.c:2628
 msgid "write the pack index file in the specified idx format version"
 msgstr "записать файл индекса пакета в указанной версии формата"
 
-#: builtin/pack-objects.c:2633
+#: builtin/pack-objects.c:2631
 msgid "maximum size of each output pack file"
 msgstr "максимальный размер каждого выходного файла пакета"
 
-#: builtin/pack-objects.c:2635
+#: builtin/pack-objects.c:2633
 msgid "ignore borrowed objects from alternate object store"
 msgstr "игнорировать чужие объекты, взятые из альтернативного хранилища объектов"
 
-#: builtin/pack-objects.c:2637
+#: builtin/pack-objects.c:2635
 msgid "ignore packed objects"
 msgstr "игнорировать упакованные объекты"
 
-#: builtin/pack-objects.c:2639
+#: builtin/pack-objects.c:2637
 msgid "limit pack window by objects"
 msgstr "ограничить окно пакета по количеству объектов"
 
-#: builtin/pack-objects.c:2641
+#: builtin/pack-objects.c:2639
 msgid "limit pack window by memory in addition to object limit"
 msgstr "дополнительно к количеству объектов ограничить окно пакета по памяти"
 
-#: builtin/pack-objects.c:2643
+#: builtin/pack-objects.c:2641
 msgid "maximum length of delta chain allowed in the resulting pack"
 msgstr "максимальная разрешенная длина цепочки дельт в результирующем пакете"
 
-#: builtin/pack-objects.c:2645
+#: builtin/pack-objects.c:2643
 msgid "reuse existing deltas"
 msgstr "использовать повторно существующие дельты"
 
-#: builtin/pack-objects.c:2647
+#: builtin/pack-objects.c:2645
 msgid "reuse existing objects"
 msgstr "использовать повторно существующие объекты"
 
-#: builtin/pack-objects.c:2649
+#: builtin/pack-objects.c:2647
 msgid "use OFS_DELTA objects"
 msgstr "использовать объекты OFS_DELTA"
 
-#: builtin/pack-objects.c:2651
+#: builtin/pack-objects.c:2649
 msgid "use threads when searching for best delta matches"
 msgstr "использовать многопоточность при поиске лучших совпадений дельт"
 
-#: builtin/pack-objects.c:2653
+#: builtin/pack-objects.c:2651
 msgid "do not create an empty pack output"
 msgstr "не создавать пустые выходные пакеты"
 
-#: builtin/pack-objects.c:2655
+#: builtin/pack-objects.c:2653
 msgid "read revision arguments from standard input"
 msgstr "прочитать аргументы редакций из стандартного ввода"
 
-#: builtin/pack-objects.c:2657
+#: builtin/pack-objects.c:2655
 msgid "limit the objects to those that are not yet packed"
 msgstr "ограничиться объектами, которые еще не упакованы"
 
-#: builtin/pack-objects.c:2660
+#: builtin/pack-objects.c:2658
 msgid "include objects reachable from any reference"
 msgstr "включить объекты, которые достижимы по любой из ссылок"
 
-#: builtin/pack-objects.c:2663
+#: builtin/pack-objects.c:2661
 msgid "include objects referred by reflog entries"
 msgstr "включить объекты, на которые ссылаются записи журнала ссылок"
 
-#: builtin/pack-objects.c:2666
+#: builtin/pack-objects.c:2664
 msgid "include objects referred to by the index"
 msgstr "включить объекты, на которые ссылается индекс"
 
-#: builtin/pack-objects.c:2669
+#: builtin/pack-objects.c:2667
 msgid "output pack to stdout"
 msgstr "вывести пакет на  стандартный вывод"
 
-#: builtin/pack-objects.c:2671
+#: builtin/pack-objects.c:2669
 msgid "include tag objects that refer to objects to be packed"
 msgstr "включить объекты меток, которые ссылаются на упаковываемые объекты"
 
-#: builtin/pack-objects.c:2673
+#: builtin/pack-objects.c:2671
 msgid "keep unreachable objects"
 msgstr "сохранять ссылки на недоступные объекты"
 
-#: builtin/pack-objects.c:2674 parse-options.h:140
+#: builtin/pack-objects.c:2672 parse-options.h:139
 msgid "time"
 msgstr "время"
 
-#: builtin/pack-objects.c:2675
+#: builtin/pack-objects.c:2673
 msgid "unpack unreachable objects newer than <time>"
 msgstr "распаковать недоступные объекты, которые новее, чем <время>"
 
-#: builtin/pack-objects.c:2678
+#: builtin/pack-objects.c:2676
 msgid "create thin packs"
 msgstr "создавать тонкие пакеты"
 
-#: builtin/pack-objects.c:2680
+#: builtin/pack-objects.c:2678
 msgid "create packs suitable for shallow fetches"
 msgstr "создавать пакеты, подходящие для частичных извлечений"
 
-#: builtin/pack-objects.c:2682
+#: builtin/pack-objects.c:2680
 msgid "ignore packs that have companion .keep file"
 msgstr "игнорировать пакеты, рядом с которыми лежит .keep файл"
 
-#: builtin/pack-objects.c:2684
+#: builtin/pack-objects.c:2682
 msgid "pack compression level"
 msgstr "уровень сжатия пакета"
 
-#: builtin/pack-objects.c:2686
+#: builtin/pack-objects.c:2684
 msgid "do not hide commits by grafts"
 msgstr "не скрывать коммиты сращениями"
 
-#: builtin/pack-objects.c:2688
+#: builtin/pack-objects.c:2686
 msgid "use a bitmap index if available to speed up counting objects"
 msgstr "по возможности использовать индекс в битовых картах, для ускорения подсчета объектов"
 
-#: builtin/pack-objects.c:2690
+#: builtin/pack-objects.c:2688
 msgid "write a bitmap index together with the pack index"
 msgstr "запись индекса в битовых картах вместе с индексом пакета"
 
-#: builtin/pack-objects.c:2781
+#: builtin/pack-objects.c:2779
 msgid "Counting objects"
 msgstr "Подсчет объектов"
 
 #: builtin/pack-refs.c:6
 msgid "git pack-refs [<options>]"
 msgstr "git pack-refs [<опции>]"
@@ -7723,25 +7838,25 @@
 msgstr "git prune-packed [-n | --dry-run] [-q | --quiet]"
 
 #: builtin/prune-packed.c:40
 msgid "Removing duplicate objects"
 msgstr "Удаление дублирующихся объектов"
 
-#: builtin/prune.c:12
+#: builtin/prune.c:11
 msgid "git prune [-n] [-v] [--expire <time>] [--] [<head>...]"
 msgstr "git prune [-n] [-v] [--expire <время>] [--] [<имя-ветки>…]"
 
-#: builtin/prune.c:106
+#: builtin/prune.c:105 builtin/worktree.c:112
 msgid "do not remove, show only"
 msgstr "не удалять, только показать список"
 
-#: builtin/prune.c:107
+#: builtin/prune.c:106 builtin/worktree.c:113
 msgid "report pruned objects"
 msgstr "вывести список удаленных объектов"
 
-#: builtin/prune.c:110
+#: builtin/prune.c:109 builtin/worktree.c:115
 msgid "expire objects older than <time>"
 msgstr "удалить объекты старее чем <дата-окончания>"
 
 #: builtin/push.c:14
 msgid "git push [<options>] [<repository> [<refspec>...]]"
 msgstr "git push [<опции>] [<репозиторий> [<спецификация-ссылки>…]]"
@@ -8063,18 +8178,18 @@
 msgstr "пропустить применение фильтра частичного перехода"
 
 #: builtin/read-tree.c:139
 msgid "debug unpack-trees"
 msgstr "отладка unpack-trees"
 
-#: builtin/reflog.c:429
+#: builtin/reflog.c:430
 #, c-format
 msgid "%s' for '%s' is not a valid timestamp"
 msgstr "«%s» для «%s» не является допустимой меткой даты/времени"
 
-#: builtin/reflog.c:546 builtin/reflog.c:551
+#: builtin/reflog.c:547 builtin/reflog.c:552
 #, c-format
 msgid "'%s' is not a valid timestamp"
 msgstr "«%s» не является допустимой меткой даты/времени"
 
 #: builtin/remote.c:12
 msgid "git remote [-v | --verbose]"
@@ -8200,18 +8315,18 @@
 msgstr "указание мастер ветки не имеет смысла с параметром --mirror"
 
 #: builtin/remote.c:177
 msgid "specifying branches to track makes sense only with fetch mirrors"
 msgstr "указание отслеживаемых веток имеет смысл только при зеркальном извлечении"
 
-#: builtin/remote.c:187 builtin/remote.c:643
+#: builtin/remote.c:187 builtin/remote.c:640
 #, c-format
 msgid "remote %s already exists."
 msgstr "внешний репозиторий %s уже существует"
 
-#: builtin/remote.c:191 builtin/remote.c:647
+#: builtin/remote.c:191 builtin/remote.c:644
 #, c-format
 msgid "'%s' is not a valid remote name"
 msgstr "«%s» не является допустимым именем внешнего репозитория."
 
 #: builtin/remote.c:235
 #, c-format
@@ -8228,334 +8343,338 @@
 msgstr "(соответствующая)"
 
 #: builtin/remote.c:448
 msgid "(delete)"
 msgstr "(удаленная)"
 
-#: builtin/remote.c:592 builtin/remote.c:598 builtin/remote.c:604
+#: builtin/remote.c:589 builtin/remote.c:595 builtin/remote.c:601
 #, c-format
 msgid "Could not append '%s' to '%s'"
 msgstr "Не удалось добавить «%s» к «%s»"
 
-#: builtin/remote.c:636 builtin/remote.c:795 builtin/remote.c:895
+#: builtin/remote.c:633 builtin/remote.c:792 builtin/remote.c:892
 #, c-format
 msgid "No such remote: %s"
 msgstr "Нет такого внешнего репозитория: %s"
 
-#: builtin/remote.c:653
+#: builtin/remote.c:650
 #, c-format
 msgid "Could not rename config section '%s' to '%s'"
 msgstr "Не удалось переименовать секцию конфигурации с «%s» на «%s»"
 
-#: builtin/remote.c:659 builtin/remote.c:847
+#: builtin/remote.c:656 builtin/remote.c:844
 #, c-format
 msgid "Could not remove config section '%s'"
 msgstr "Не удалось удалить секцию файла конфигурации «%s»"
 
-#: builtin/remote.c:674
+#: builtin/remote.c:671
 #, c-format
 msgid ""
 "Not updating non-default fetch refspec\n"
 "\t%s\n"
 "\tPlease update the configuration manually if necessary."
 msgstr "Не обновляю нестандартную спецификацию ссылки для извлечения\n\t%s\n\tПожалуйста, если требуется, обновите конфигурацию вручную."
 
-#: builtin/remote.c:680
+#: builtin/remote.c:677
 #, c-format
 msgid "Could not append '%s'"
 msgstr "Не удалось добавить «%s»"
 
-#: builtin/remote.c:691
+#: builtin/remote.c:688
 #, c-format
 msgid "Could not set '%s'"
 msgstr "Не удалось установить «%s»"
 
-#: builtin/remote.c:713
+#: builtin/remote.c:710
 #, c-format
 msgid "deleting '%s' failed"
 msgstr "не удалось удалить «%s»"
 
-#: builtin/remote.c:747
+#: builtin/remote.c:744
 #, c-format
 msgid "creating '%s' failed"
 msgstr "не удалось создать «%s»"
 
-#: builtin/remote.c:766
+#: builtin/remote.c:763
 #, c-format
 msgid "Could not remove branch %s"
 msgstr "Не удалось удалить ветку «%s»"
 
-#: builtin/remote.c:833
+#: builtin/remote.c:830
 msgid ""
 "Note: A branch outside the refs/remotes/ hierarchy was not removed;\n"
 "to delete it, use:"
 msgid_plural ""
 "Note: Some branches outside the refs/remotes/ hierarchy were not removed;\n"
 "to delete them, use:"
 msgstr[0] "Примечание: Некоторые ветки вне иерархии refs/remotes/ не будут удалены;\nчтобы удалить их, используйте:"
 msgstr[1] "Примечание: Некоторые ветки вне иерархии refs/remotes/ не будут удалены;\nчтобы удалить их, используйте:"
 msgstr[2] "Примечание: Некоторые ветки вне иерархии refs/remotes/ не будут удалены;\nчтобы удалить их, используйте:"
+msgstr[3] "Примечание: Некоторые ветки вне иерархии refs/remotes/ не будут удалены;\nчтобы удалить их, используйте:"
 
-#: builtin/remote.c:948
+#: builtin/remote.c:945
 #, c-format
 msgid " new (next fetch will store in remotes/%s)"
 msgstr " новая (следующее извлечение сохранит ее в remotes/%s)"
 
-#: builtin/remote.c:951
+#: builtin/remote.c:948
 msgid " tracked"
 msgstr " отслеживается"
 
-#: builtin/remote.c:953
+#: builtin/remote.c:950
 msgid " stale (use 'git remote prune' to remove)"
 msgstr " недействительна (используйте «git remote prune», чтобы удалить)"
 
-#: builtin/remote.c:955
+#: builtin/remote.c:952
 msgid " ???"
 msgstr " ???"
 
-#: builtin/remote.c:996
+#: builtin/remote.c:993
 #, c-format
 msgid "invalid branch.%s.merge; cannot rebase onto > 1 branch"
 msgstr "неправильный параметр конфигурации branch.%s.merge; невозможно переместить более чем над 1 веткой"
 
-#: builtin/remote.c:1003
+#: builtin/remote.c:1000
 #, c-format
 msgid "rebases onto remote %s"
 msgstr "будет перемещена над внешней веткой %s"
 
-#: builtin/remote.c:1006
+#: builtin/remote.c:1003
 #, c-format
 msgid " merges with remote %s"
 msgstr " будет слита с внешней веткой %s"
 
-#: builtin/remote.c:1007
+#: builtin/remote.c:1004
 msgid "    and with remote"
 msgstr "    и с внешней веткой"
 
-#: builtin/remote.c:1009
+#: builtin/remote.c:1006
 #, c-format
 msgid "merges with remote %s"
 msgstr "будет слита с внешней веткой %s"
 
-#: builtin/remote.c:1010
+#: builtin/remote.c:1007
 msgid "   and with remote"
 msgstr "   и с внешней веткой"
 
-#: builtin/remote.c:1056
+#: builtin/remote.c:1053
 msgid "create"
 msgstr "создана"
 
-#: builtin/remote.c:1059
+#: builtin/remote.c:1056
 msgid "delete"
 msgstr "удалена"
 
-#: builtin/remote.c:1063
+#: builtin/remote.c:1060
 msgid "up to date"
 msgstr "уже актуальна"
 
-#: builtin/remote.c:1066
+#: builtin/remote.c:1063
 msgid "fast-forwardable"
 msgstr "возможна перемотка вперед"
 
-#: builtin/remote.c:1069
+#: builtin/remote.c:1066
 msgid "local out of date"
 msgstr "локальная ветка устарела"
 
-#: builtin/remote.c:1076
+#: builtin/remote.c:1073
 #, c-format
 msgid "    %-*s forces to %-*s (%s)"
 msgstr "    %-*s будет принудительно отправлена в %-*s (%s)"
 
-#: builtin/remote.c:1079
+#: builtin/remote.c:1076
 #, c-format
 msgid "    %-*s pushes to %-*s (%s)"
 msgstr "    %-*s будет отправлена в %-*s (%s)"
 
-#: builtin/remote.c:1083
+#: builtin/remote.c:1080
 #, c-format
 msgid "    %-*s forces to %s"
 msgstr "    %-*s будет принудительно отправлена в %s"
 
-#: builtin/remote.c:1086
+#: builtin/remote.c:1083
 #, c-format
 msgid "    %-*s pushes to %s"
 msgstr "    %-*s будет отправлена в %s"
 
-#: builtin/remote.c:1154
+#: builtin/remote.c:1151
 msgid "do not query remotes"
 msgstr "не опрашивать внешние репозитории"
 
-#: builtin/remote.c:1181
+#: builtin/remote.c:1178
 #, c-format
 msgid "* remote %s"
 msgstr "* внешний репозиторий %s"
 
-#: builtin/remote.c:1182
+#: builtin/remote.c:1179
 #, c-format
 msgid "  Fetch URL: %s"
 msgstr "  URL для извлечения: %s"
 
-#: builtin/remote.c:1183 builtin/remote.c:1334
+#: builtin/remote.c:1180 builtin/remote.c:1331
 msgid "(no URL)"
 msgstr "(нет URL)"
 
-#: builtin/remote.c:1192 builtin/remote.c:1194
+#: builtin/remote.c:1189 builtin/remote.c:1191
 #, c-format
 msgid "  Push  URL: %s"
 msgstr "  URL для отправки: %s"
 
-#: builtin/remote.c:1196 builtin/remote.c:1198 builtin/remote.c:1200
+#: builtin/remote.c:1193 builtin/remote.c:1195 builtin/remote.c:1197
 #, c-format
 msgid "  HEAD branch: %s"
 msgstr "  HEAD ветка: %s"
 
-#: builtin/remote.c:1202
+#: builtin/remote.c:1199
 #, c-format
 msgid "  HEAD branch (remote HEAD is ambiguous, may be one of the following):\n"
 msgstr "  HEAD ветка (HEAD внешнего репозитория неоднозначный, может быть одним из):\n"
 
-#: builtin/remote.c:1214
+#: builtin/remote.c:1211
 #, c-format
 msgid "  Remote branch:%s"
 msgid_plural "  Remote branches:%s"
 msgstr[0] "    Внешняя ветка:%s"
 msgstr[1] "    Внешние ветки:%s"
 msgstr[2] "    Внешние ветки:%s"
+msgstr[3] "    Внешние ветки:%s"
 
-#: builtin/remote.c:1217 builtin/remote.c:1244
+#: builtin/remote.c:1214 builtin/remote.c:1241
 msgid " (status not queried)"
 msgstr " (статус не запрошен)"
 
-#: builtin/remote.c:1226
+#: builtin/remote.c:1223
 msgid "  Local branch configured for 'git pull':"
 msgid_plural "  Local branches configured for 'git pull':"
 msgstr[0] "  Локальная ветка, настроенная для «git pull»:"
 msgstr[1] "  Локальные ветки, настроенные для «git pull»:"
 msgstr[2] "  Локальные ветки, настроенные для «git pull»:"
+msgstr[3] "  Локальные ветки, настроенные для «git pull»:"
 
-#: builtin/remote.c:1234
+#: builtin/remote.c:1231
 msgid "  Local refs will be mirrored by 'git push'"
 msgstr " Локальные ссылки, зеркалируемые с помощью «git push»"
 
-#: builtin/remote.c:1241
+#: builtin/remote.c:1238
 #, c-format
 msgid "  Local ref configured for 'git push'%s:"
 msgid_plural "  Local refs configured for 'git push'%s:"
 msgstr[0] "  Локальная ссылка, настроенная для «git push»%s:"
 msgstr[1] "  Локальные ссылки, настроенные для «git push»%s:"
 msgstr[2] "  Локальные ссылки, настроенные для «git push»%s:"
+msgstr[3] "  Локальные ссылки, настроенные для «git push»%s:"
 
-#: builtin/remote.c:1262
+#: builtin/remote.c:1259
 msgid "set refs/remotes/<name>/HEAD according to remote"
 msgstr "установить refs/remotes/<имя>/HEAD в зависимости от внешнего репозитория"
 
-#: builtin/remote.c:1264
+#: builtin/remote.c:1261
 msgid "delete refs/remotes/<name>/HEAD"
 msgstr "удалить refs/remotes/<имя>/HEAD"
 
-#: builtin/remote.c:1279
+#: builtin/remote.c:1276
 msgid "Cannot determine remote HEAD"
 msgstr "Не удалось определить внешний HEAD"
 
-#: builtin/remote.c:1281
+#: builtin/remote.c:1278
 msgid "Multiple remote HEAD branches. Please choose one explicitly with:"
 msgstr "Несколько внешних HEAD веток. Укажите явно одну из них:"
 
-#: builtin/remote.c:1291
+#: builtin/remote.c:1288
 #, c-format
 msgid "Could not delete %s"
 msgstr "Не удалось удалить %s"
 
-#: builtin/remote.c:1299
+#: builtin/remote.c:1296
 #, c-format
 msgid "Not a valid ref: %s"
 msgstr "Неправильная ссылка: %s"
 
-#: builtin/remote.c:1301
+#: builtin/remote.c:1298
 #, c-format
 msgid "Could not setup %s"
 msgstr "Не удалось настроить %s"
 
-#: builtin/remote.c:1319
+#: builtin/remote.c:1316
 #, c-format
 msgid " %s will become dangling!"
 msgstr " %s будет висящей веткой!"
 
-#: builtin/remote.c:1320
+#: builtin/remote.c:1317
 #, c-format
 msgid " %s has become dangling!"
 msgstr " %s стала висящей веткой!"
 
-#: builtin/remote.c:1330
+#: builtin/remote.c:1327
 #, c-format
 msgid "Pruning %s"
 msgstr "Удаление %s"
 
-#: builtin/remote.c:1331
+#: builtin/remote.c:1328
 #, c-format
 msgid "URL: %s"
 msgstr "URL: %s"
 
-#: builtin/remote.c:1354
+#: builtin/remote.c:1351
 #, c-format
 msgid " * [would prune] %s"
 msgstr " * [будет удалена] %s"
 
-#: builtin/remote.c:1357
+#: builtin/remote.c:1354
 #, c-format
 msgid " * [pruned] %s"
 msgstr " * [удалена] %s"
 
-#: builtin/remote.c:1402
+#: builtin/remote.c:1399
 msgid "prune remotes after fetching"
 msgstr "почистить внешние репозитории после извлечения"
 
-#: builtin/remote.c:1468 builtin/remote.c:1542
+#: builtin/remote.c:1465 builtin/remote.c:1539
 #, c-format
 msgid "No such remote '%s'"
 msgstr "Нет такого внешнего репозитория «%s»"
 
-#: builtin/remote.c:1488
+#: builtin/remote.c:1485
 msgid "add branch"
 msgstr "добавить ветку"
 
-#: builtin/remote.c:1495
+#: builtin/remote.c:1492
 msgid "no remote specified"
 msgstr "не указан внешний репозиторий"
 
-#: builtin/remote.c:1517
+#: builtin/remote.c:1514
 msgid "manipulate push URLs"
 msgstr "управление URL отправки"
 
-#: builtin/remote.c:1519
+#: builtin/remote.c:1516
 msgid "add URL"
 msgstr "добавить URL"
 
-#: builtin/remote.c:1521
+#: builtin/remote.c:1518
 msgid "delete URLs"
 msgstr "удалить URL"
 
-#: builtin/remote.c:1528
+#: builtin/remote.c:1525
 msgid "--add --delete doesn't make sense"
 msgstr "--add нельзя использовать одновременно с --delete"
 
-#: builtin/remote.c:1568
+#: builtin/remote.c:1565
 #, c-format
 msgid "Invalid old URL pattern: %s"
 msgstr "Неправильный шаблон старого URL: %s"
 
-#: builtin/remote.c:1576
+#: builtin/remote.c:1573
 #, c-format
 msgid "No such URL found: %s"
 msgstr "Не найдены совпадения URL: %s"
 
-#: builtin/remote.c:1578
+#: builtin/remote.c:1575
 msgid "Will not delete all non-push URLs"
 msgstr "Нельзя удалить все URL не-отправки"
 
-#: builtin/remote.c:1592
+#: builtin/remote.c:1589
 msgid "be verbose; must be placed before a subcommand"
 msgstr "быть многословнее; должно стоять перед подкомандой"
 
 #: builtin/repack.c:17
 msgid "git repack [<options>]"
 msgstr "git repack [<опции>]"
@@ -8621,13 +8740,13 @@
 msgstr "максимальный размер каждого из файлов пакета"
 
 #: builtin/repack.c:187
 msgid "repack objects in packs marked with .keep"
 msgstr "переупаковать объекты в пакеты, помеченные файлом .keep"
 
-#: builtin/repack.c:375
+#: builtin/repack.c:377
 #, c-format
 msgid "removing '%s' failed"
 msgstr "не удалось удалить «%s»"
 
 #: builtin/replace.c:19
 msgid "git replace [-f] <object> <replacement>"
@@ -8976,86 +9095,90 @@
 msgid_plural ""
 "the following submodules (or one of their nested submodules)\n"
 "use a .git directory:"
 msgstr[0] "следующий подмодуль (или один из вложенных подмодулей)\nиспользует каталог .git:"
 msgstr[1] "следующие подмодули (или один из вложенных подмодулей)\nиспользуют каталог .git:"
 msgstr[2] "следующие подмодули (или один из вложенных подмодулей)\nиспользуют каталог .git:"
+msgstr[3] "следующие подмодули (или один из вложенных подмодулей)\nиспользуют каталог .git:"
 
 #: builtin/rm.c:71
 msgid ""
 "\n"
 "(use 'rm -rf' if you really want to remove it including all of its history)"
 msgstr "\n(используйте «rm -rf», если вы действительно хотите удалить его, включая всю его историю)"
 
-#: builtin/rm.c:231
+#: builtin/rm.c:230
 msgid ""
 "the following file has staged content different from both the\n"
 "file and the HEAD:"
 msgid_plural ""
 "the following files have staged content different from both the\n"
 "file and the HEAD:"
 msgstr[0] "следующие файлы содержат проиндексированные изменения отличающиеся и от файла, и от HEAD:"
 msgstr[1] "следующие файлы содержат проиндексированные изменения отличающиеся и от файла, и от HEAD:"
 msgstr[2] "следующие файлы содержат проиндексированные изменения отличающиеся и от файла, и от HEAD:"
+msgstr[3] "следующие файлы содержат проиндексированные изменения отличающиеся и от файла, и от HEAD:"
 
-#: builtin/rm.c:236
+#: builtin/rm.c:235
 msgid ""
 "\n"
 "(use -f to force removal)"
 msgstr "\n(используйте опцию «-f» для принудительного удаления)"
 
-#: builtin/rm.c:240
+#: builtin/rm.c:239
 msgid "the following file has changes staged in the index:"
 msgid_plural "the following files have changes staged in the index:"
 msgstr[0] "следующие файлы содержат проиндексированные изменения в индексе:"
 msgstr[1] "следующие файлы содержат проиндексированные изменения в индексе:"
 msgstr[2] "следующие файлы содержат проиндексированные изменения в индексе:"
+msgstr[3] "следующие файлы содержат проиндексированные изменения в индексе:"
 
-#: builtin/rm.c:244 builtin/rm.c:255
+#: builtin/rm.c:243 builtin/rm.c:254
 msgid ""
 "\n"
 "(use --cached to keep the file, or -f to force removal)"
 msgstr "\n(используйте опцию «--cached» для оставления файла, или «-f» для принудительного удаления)"
 
-#: builtin/rm.c:252
+#: builtin/rm.c:251
 msgid "the following file has local modifications:"
 msgid_plural "the following files have local modifications:"
 msgstr[0] "следующие файлы содержат локальные изменения:"
 msgstr[1] "следующие файлы содержат локальные изменения:"
 msgstr[2] "следующие файлы содержат локальные изменения:"
+msgstr[3] "следующие файлы содержат локальные изменения:"
 
-#: builtin/rm.c:270
+#: builtin/rm.c:269
 msgid "do not list removed files"
 msgstr "не выводить список удаленных файлов"
 
-#: builtin/rm.c:271
+#: builtin/rm.c:270
 msgid "only remove from the index"
 msgstr "удалить только из индекса"
 
-#: builtin/rm.c:272
+#: builtin/rm.c:271
 msgid "override the up-to-date check"
 msgstr "пропустить проверку актуальности"
 
-#: builtin/rm.c:273
+#: builtin/rm.c:272
 msgid "allow recursive removal"
 msgstr "разрешить рекурсивное удаление"
 
-#: builtin/rm.c:275
+#: builtin/rm.c:274
 msgid "exit with a zero status even if nothing matched"
 msgstr "выход с нулевым кодом возврата, даже если ничего не найдено"
 
-#: builtin/rm.c:318
+#: builtin/rm.c:317
 msgid "Please, stage your changes to .gitmodules or stash them to proceed"
 msgstr "Пожалуйста, проиндексируйте ваши изменения в .gitmodules или спрячьте их, чтобы продолжить"
 
-#: builtin/rm.c:336
+#: builtin/rm.c:335
 #, c-format
 msgid "not removing '%s' recursively without -r"
 msgstr "не удаляю рекурсивно «%s» без указания опции -r"
 
-#: builtin/rm.c:375
+#: builtin/rm.c:374
 #, c-format
 msgid "git rm: unable to remove %s"
 msgstr "git rm: не удалось удалить %s"
 
 #: builtin/shortlog.c:13
 msgid "git shortlog [<options>] [<revision-range>] [[--] [<path>...]]"
@@ -9095,73 +9218,73 @@
 msgstr "git show-branch [-a | --all] [-r | --remotes] [--topo-order | --date-order]\n\t\t[--current] [--color[=<когда>] | --no-color] [--sparse]\n\t\t[--more=<n> | --list | --independent | --merge-base]\n\t\t[--no-name | --sha1-name] [--topics] [(<редакция> | <шаблон>)...]"
 
 #: builtin/show-branch.c:13
 msgid "git show-branch (-g | --reflog)[=<n>[,<base>]] [--list] [<ref>]"
 msgstr "git show-branch (-g | --reflog)[=<n>[,<база>]] [--list] [<ссылка>]"
 
-#: builtin/show-branch.c:652
+#: builtin/show-branch.c:659
 msgid "show remote-tracking and local branches"
 msgstr "показать список и отслеживаемых внешних и локальных веток"
 
-#: builtin/show-branch.c:654
+#: builtin/show-branch.c:661
 msgid "show remote-tracking branches"
 msgstr "показать список отслеживаемых внешних веток"
 
-#: builtin/show-branch.c:656
+#: builtin/show-branch.c:663
 msgid "color '*!+-' corresponding to the branch"
 msgstr "окрашивать «*!+-» в соответствии с веткой"
 
-#: builtin/show-branch.c:658
+#: builtin/show-branch.c:665
 msgid "show <n> more commits after the common ancestor"
 msgstr "показать <n> коммитов после общего предка"
 
-#: builtin/show-branch.c:660
+#: builtin/show-branch.c:667
 msgid "synonym to more=-1"
 msgstr "синоним для more=-1"
 
-#: builtin/show-branch.c:661
+#: builtin/show-branch.c:668
 msgid "suppress naming strings"
 msgstr "не выводить именованые строки"
 
-#: builtin/show-branch.c:663
+#: builtin/show-branch.c:670
 msgid "include the current branch"
 msgstr "включить в вывод текущую ветку"
 
-#: builtin/show-branch.c:665
+#: builtin/show-branch.c:672
 msgid "name commits with their object names"
 msgstr "именовать коммиты их именами объектов"
 
-#: builtin/show-branch.c:667
+#: builtin/show-branch.c:674
 msgid "show possible merge bases"
 msgstr "вывести возможные базы слияния"
 
-#: builtin/show-branch.c:669
+#: builtin/show-branch.c:676
 msgid "show refs unreachable from any other ref"
 msgstr "вывести ссылки, недоступные из любых других ссылок"
 
-#: builtin/show-branch.c:671
+#: builtin/show-branch.c:678
 msgid "show commits in topological order"
 msgstr "вывести коммиты в топологическом порядке"
 
-#: builtin/show-branch.c:674
+#: builtin/show-branch.c:681
 msgid "show only commits not on the first branch"
 msgstr "вывести только коммиты, отсуцтвующие в первой ветке"
 
-#: builtin/show-branch.c:676
+#: builtin/show-branch.c:683
 msgid "show merges reachable from only one tip"
 msgstr "вывести слияния, достижимые только из одной из верхушек"
 
-#: builtin/show-branch.c:678
+#: builtin/show-branch.c:685
 msgid "topologically sort, maintaining date order where possible"
 msgstr "топологическая сортировка, с сохранением порядка дат, если возможно"
 
-#: builtin/show-branch.c:681
+#: builtin/show-branch.c:688
 msgid "<n>[,<base>]"
 msgstr "<n>[,<база>]"
 
-#: builtin/show-branch.c:682
+#: builtin/show-branch.c:689
 msgid "show <n> most recent ref-log entries starting at base"
 msgstr "показать <n> последних записей в журнале ссылок, начиная с базы"
 
 #: builtin/show-ref.c:10
 msgid ""
 "git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | "
@@ -9169,41 +9292,41 @@
 msgstr "git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | --hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<шаблон>…]"
 
 #: builtin/show-ref.c:11
 msgid "git show-ref --exclude-existing[=pattern] < ref-list"
 msgstr "git show-ref --exclude-existing[=шаблон] < ref-list"
 
-#: builtin/show-ref.c:168
+#: builtin/show-ref.c:170
 msgid "only show tags (can be combined with heads)"
 msgstr "вывести только метки (можно использовать одновременно с --heads)"
 
-#: builtin/show-ref.c:169
+#: builtin/show-ref.c:171
 msgid "only show heads (can be combined with tags)"
 msgstr "вывести только головы (можно использовать одновременно с --tags)"
 
-#: builtin/show-ref.c:170
+#: builtin/show-ref.c:172
 msgid "stricter reference checking, requires exact ref path"
 msgstr "более строгая проверка ссылок, требует точный путь ссылки"
 
-#: builtin/show-ref.c:173 builtin/show-ref.c:175
+#: builtin/show-ref.c:175 builtin/show-ref.c:177
 msgid "show the HEAD reference, even if it would be filtered out"
 msgstr "вывести ссылку HEAD, даже если она будет отфильтрована"
 
-#: builtin/show-ref.c:177
+#: builtin/show-ref.c:179
 msgid "dereference tags into object IDs"
 msgstr "разыменовать метки в идентификаторы объектов"
 
-#: builtin/show-ref.c:179
+#: builtin/show-ref.c:181
 msgid "only show SHA1 hash using <n> digits"
 msgstr "использовать <n> цифр для вывода SHA-1"
 
-#: builtin/show-ref.c:183
+#: builtin/show-ref.c:185
 msgid "do not print results to stdout (useful with --verify)"
 msgstr "не печатать результат на стандартный вывод (полезно с опцией «--verify»)"
 
-#: builtin/show-ref.c:185
+#: builtin/show-ref.c:187
 msgid "show refs from stdin that aren't in local repository"
 msgstr "вывести ссылки со стандартного ввода, которых нет в локальном репозитории"
 
 #: builtin/symbolic-ref.c:7
 msgid "git symbolic-ref [<options>] <name> [<ref>]"
 msgstr "git symbolic-ref [<опции>] <имя> [<ссылка>]"
@@ -9443,128 +9566,194 @@
 msgstr "Метка «%s» обновлена (была %s)\n"
 
 #: builtin/unpack-objects.c:489
 msgid "Unpacking objects"
 msgstr "Распаковка объектов"
 
-#: builtin/update-index.c:403
+#: builtin/update-index.c:70
+#, c-format
+msgid "failed to create directory %s"
+msgstr "не удалось создать каталог %s"
+
+#: builtin/update-index.c:76
+#, c-format
+msgid "failed to stat %s"
+msgstr "не удалось выполнить stat %s"
+
+#: builtin/update-index.c:86
+#, c-format
+msgid "failed to create file %s"
+msgstr "не удалось создать файл %s"
+
+#: builtin/update-index.c:94
+#, c-format
+msgid "failed to delete file %s"
+msgstr "не удалось удалить файл %s"
+
+#: builtin/update-index.c:101 builtin/update-index.c:203
+#, c-format
+msgid "failed to delete directory %s"
+msgstr "не удалось удалить каталог %s"
+
+#: builtin/update-index.c:124
+#, c-format
+msgid "Testing "
+msgstr "Тестирование"
+
+#: builtin/update-index.c:136
+msgid "directory stat info does not change after adding a new file"
+msgstr "информация статистики каталога не изменяется после добавления нового файла"
+
+#: builtin/update-index.c:149
+msgid "directory stat info does not change after adding a new directory"
+msgstr "информация статистики каталога не изменяется после добавления нового каталога"
+
+#: builtin/update-index.c:162
+msgid "directory stat info changes after updating a file"
+msgstr "информация статистики каталога изменяется после добавления нового файла"
+
+#: builtin/update-index.c:173
+msgid "directory stat info changes after adding a file inside subdirectory"
+msgstr "информация статистики каталога изменяется после добавления нового файла внутри подкаталога"
+
+#: builtin/update-index.c:184
+msgid "directory stat info does not change after deleting a file"
+msgstr "информация статистики каталога не изменяется после удаления файла"
+
+#: builtin/update-index.c:197
+msgid "directory stat info does not change after deleting a directory"
+msgstr "информация статистики каталога не изменяется после удаления каталога"
+
+#: builtin/update-index.c:204
+msgid " OK"
+msgstr " OK"
+
+#: builtin/update-index.c:564
 msgid "git update-index [<options>] [--] [<file>...]"
 msgstr "git update-index [<опции>] [--] [<файл>…]"
 
-#: builtin/update-index.c:757
+#: builtin/update-index.c:918
 msgid "continue refresh even when index needs update"
 msgstr "продолжить обновление, даже если индекс требует обновления"
 
-#: builtin/update-index.c:760
+#: builtin/update-index.c:921
 msgid "refresh: ignore submodules"
 msgstr "обновление: игнорировать подмодули"
 
-#: builtin/update-index.c:763
+#: builtin/update-index.c:924
 msgid "do not ignore new files"
 msgstr "не игнорировать новые файлы"
 
-#: builtin/update-index.c:765
+#: builtin/update-index.c:926
 msgid "let files replace directories and vice-versa"
 msgstr "разрешить файлам заменять каталоги и наоборот"
 
-#: builtin/update-index.c:767
+#: builtin/update-index.c:928
 msgid "notice files missing from worktree"
 msgstr "замечать файлы отсутствующие в рабочем каталоге"
 
-#: builtin/update-index.c:769
+#: builtin/update-index.c:930
 msgid "refresh even if index contains unmerged entries"
 msgstr "обновить, даже если в индексе имеются не слитые записи"
 
-#: builtin/update-index.c:772
+#: builtin/update-index.c:933
 msgid "refresh stat information"
 msgstr "обновить информацию о статусе файлов"
 
-#: builtin/update-index.c:776
+#: builtin/update-index.c:937
 msgid "like --refresh, but ignore assume-unchanged setting"
 msgstr "как --refresh, но игнорировать настройку assume-unchanged"
 
-#: builtin/update-index.c:780
+#: builtin/update-index.c:941
 msgid "<mode>,<object>,<path>"
 msgstr "<режим доступа>,<объект>,<путь>"
 
-#: builtin/update-index.c:781
+#: builtin/update-index.c:942
 msgid "add the specified entry to the index"
 msgstr "добавить указанную запись в индекс"
 
-#: builtin/update-index.c:785
+#: builtin/update-index.c:946
 msgid "(+/-)x"
 msgstr "(+/-)x"
 
-#: builtin/update-index.c:786
+#: builtin/update-index.c:947
 msgid "override the executable bit of the listed files"
 msgstr "переопределить бит выполнения на указанных файлах"
 
-#: builtin/update-index.c:790
+#: builtin/update-index.c:951
 msgid "mark files as \"not changing\""
 msgstr "пометить файлы как \"не измененные\""
 
-#: builtin/update-index.c:793
+#: builtin/update-index.c:954
 msgid "clear assumed-unchanged bit"
 msgstr "убрать пометку assumed-unchanged"
 
-#: builtin/update-index.c:796
+#: builtin/update-index.c:957
 msgid "mark files as \"index-only\""
 msgstr "пометить файлы как \"только в индексе\""
 
-#: builtin/update-index.c:799
+#: builtin/update-index.c:960
 msgid "clear skip-worktree bit"
 msgstr "убрать пометку skip-worktree"
 
-#: builtin/update-index.c:802
+#: builtin/update-index.c:963
 msgid "add to index only; do not add content to object database"
 msgstr "только добавить в индекс; не добавлять содержимое в базу данных объектов"
 
-#: builtin/update-index.c:804
+#: builtin/update-index.c:965
 msgid "remove named paths even if present in worktree"
 msgstr "удалить указанные пути, даже если они существуют в рабочем каталоге"
 
-#: builtin/update-index.c:806
+#: builtin/update-index.c:967
 msgid "with --stdin: input lines are terminated by null bytes"
 msgstr "с опцией --stdin: строки на вводе отделяются НУЛЕВЫМ байтом"
 
-#: builtin/update-index.c:808
+#: builtin/update-index.c:969
 msgid "read list of paths to be updated from standard input"
 msgstr "прочитать список обновляемых путей из стандартного ввода"
 
-#: builtin/update-index.c:812
+#: builtin/update-index.c:973
 msgid "add entries from standard input to the index"
 msgstr "добавить записи из стандатрного ввода в индекс"
 
-#: builtin/update-index.c:816
+#: builtin/update-index.c:977
 msgid "repopulate stages #2 and #3 for the listed paths"
 msgstr "заново заполнить индекс #2 и #3 для указанных путей"
 
-#: builtin/update-index.c:820
+#: builtin/update-index.c:981
 msgid "only update entries that differ from HEAD"
 msgstr "обновить только записи, которые отличаются от HEAD"
 
-#: builtin/update-index.c:824
+#: builtin/update-index.c:985
 msgid "ignore files missing from worktree"
 msgstr "игнорировать файлы, отсутствующие в рабочем каталоге"
 
-#: builtin/update-index.c:827
+#: builtin/update-index.c:988
 msgid "report actions to standard output"
 msgstr "вывести выполняемые действия на стандартный вывод"
 
-#: builtin/update-index.c:829
+#: builtin/update-index.c:990
 msgid "(for porcelains) forget saved unresolved conflicts"
 msgstr "(для машинной обработки) забыть сохраненные неразрешенные конфликты"
 
-#: builtin/update-index.c:833
+#: builtin/update-index.c:994
 msgid "write index in this format"
 msgstr "записать индекс в указанном формате"
 
-#: builtin/update-index.c:835
+#: builtin/update-index.c:996
 msgid "enable or disable split index"
 msgstr "разрешить или запретить раздельный индекс"
 
+#: builtin/update-index.c:998
+msgid "enable/disable untracked cache"
+msgstr "включить/отключить кэш неотслеживаемых файлов"
+
+#: builtin/update-index.c:1000
+msgid "enable untracked cache without testing the filesystem"
+msgstr "включить кэш неотслеживаемых файлов без проверки файловой системы"
+
 #: builtin/update-ref.c:9
 msgid "git update-ref [<options>] -d <refname> [<old-val>]"
 msgstr "git update-ref [<опции>] -d <имя-ссылки> [<старое-значение>]"
 
 #: builtin/update-ref.c:10
 msgid "git update-ref [<options>]    <refname> <new-val> [<old-val>]"
@@ -9623,12 +9812,89 @@
 msgstr "git verify-tag [-v | --verbose] <метка>…"
 
 #: builtin/verify-tag.c:73
 msgid "print tag contents"
 msgstr "вывести содержимое метки"
 
+#: builtin/worktree.c:11
+msgid "git worktree add [<options>] <path> <branch>"
+msgstr "git worktree add [<опции>] <путь> <ветка>"
+
+#: builtin/worktree.c:12
+msgid "git worktree prune [<options>]"
+msgstr "git worktree prune [<опции>]"
+
+#: builtin/worktree.c:27
+#, c-format
+msgid "Removing worktrees/%s: not a valid directory"
+msgstr "Удаление рабочих каталогов/%s: не является каталогом"
+
+#: builtin/worktree.c:33
+#, c-format
+msgid "Removing worktrees/%s: gitdir file does not exist"
+msgstr "Удаление рабочих каталогов/%s: файл gitdir не существует"
+
+#: builtin/worktree.c:38
+#, c-format
+msgid "Removing worktrees/%s: unable to read gitdir file (%s)"
+msgstr "Удаление рабочих каталогов/%s: не удалось прочитать файл gitdir (%s)"
+
+#: builtin/worktree.c:49
+#, c-format
+msgid "Removing worktrees/%s: invalid gitdir file"
+msgstr "Удаление рабочих каталогов/%s: недействительный файл gitdir"
+
+#: builtin/worktree.c:65
+#, c-format
+msgid "Removing worktrees/%s: gitdir file points to non-existent location"
+msgstr "Удаление рабочих каталогов/%s: gitdir указывает на несуществующее расположение"
+
+#: builtin/worktree.c:100
+#, c-format
+msgid "failed to remove: %s"
+msgstr "не удалось удалить: %s"
+
+#: builtin/worktree.c:186
+#, c-format
+msgid "'%s' already exists"
+msgstr "«%s» уже существует"
+
+#: builtin/worktree.c:207
+#, c-format
+msgid "could not create directory of '%s'"
+msgstr "не удалось создать каталог «%s»"
+
+#: builtin/worktree.c:241
+msgid "unable to resolve HEAD"
+msgstr "не удалось определить HEAD"
+
+#: builtin/worktree.c:249
+#, c-format
+msgid "Enter %s (identifier %s)"
+msgstr "Вход в %s (идентификатор %s)"
+
+#: builtin/worktree.c:281
+msgid "checkout <branch> even if already checked out in other worktree"
+msgstr "перейти на <ветка> даже если она уже активна в другом рабочесм каталоге"
+
+#: builtin/worktree.c:283
+msgid "create a new branch"
+msgstr "создать новую ветку"
+
+#: builtin/worktree.c:285
+msgid "create or reset a branch"
+msgstr "создать или перейти на ветку"
+
+#: builtin/worktree.c:286
+msgid "detach HEAD at named commit"
+msgstr "отсоединить HEAD на указанном коммите"
+
+#: builtin/worktree.c:292
+msgid "-b and -B are mutually exclusive"
+msgstr "-b и -B нельзя использовать одновременно"
+
 #: builtin/write-tree.c:13
 msgid "git write-tree [--missing-ok] [--prefix=<prefix>/]"
 msgstr "git write-tree [--missing-ok] [--prefix=<префикс>/]"
 
 #: builtin/write-tree.c:26
 msgid "<prefix>/"
@@ -9650,270 +9916,290 @@
 msgid ""
 "'git help -a' and 'git help -g' list available subcommands and some\n"
 "concept guides. See 'git help <command>' or 'git help <concept>'\n"
 "to read about a specific subcommand or concept."
 msgstr "«git help -а» и «git help -g» выводит список доступных подкоманд и\nнекоторые руководства по темам. Запустите «git help <команда>» или\n«git help <термин>», чтобы прочесть о конкретных подкоманде или теме."
 
-#: common-cmds.h:8
+#: common-cmds.h:10
+msgid "start a working area (see also: git help tutorial)"
+msgstr "создать рабочую область (смотрите также: git help tutorial)"
+
+#: common-cmds.h:11
+msgid "work on the current change (see also: git help everyday)"
+msgstr "работа с текущими изменениями (смотрите также: git help everyday)"
+
+#: common-cmds.h:12
+msgid "examine the history and state (see also: git help revisions)"
+msgstr "просмотр истории и текущего состояния (смотрите также: git help revisions)"
+
+#: common-cmds.h:13
+msgid "grow, mark and tweak your common history"
+msgstr "выращивание, отметка и настройка вашей общей истории"
+
+#: common-cmds.h:14
+msgid "collaborate (see also: git help workflows)"
+msgstr "совместная работа (смотрите также: git help workflows)"
+
+#: common-cmds.h:18
 msgid "Add file contents to the index"
 msgstr "Добавление содержимого файла в индекс"
 
-#: common-cmds.h:9
+#: common-cmds.h:19
 msgid "Find by binary search the change that introduced a bug"
 msgstr "Двоичный поиск изменения, которое вносит ошибку"
 
-#: common-cmds.h:10
+#: common-cmds.h:20
 msgid "List, create, or delete branches"
 msgstr "Вывод списка, создание или удаление веток"
 
-#: common-cmds.h:11
-msgid "Checkout a branch or paths to the working tree"
-msgstr "Переход на ветку или коммит по пути в рабочем каталоге"
+#: common-cmds.h:21
+msgid "Switch branches or restore working tree files"
+msgstr "Переключение веток или восстановление файлов в рабочем каталоге"
 
-#: common-cmds.h:12
+#: common-cmds.h:22
 msgid "Clone a repository into a new directory"
 msgstr "Клонирование репозитория в новый каталог"
 
-#: common-cmds.h:13
+#: common-cmds.h:23
 msgid "Record changes to the repository"
 msgstr "Запись изменений в репозиторий"
 
-#: common-cmds.h:14
+#: common-cmds.h:24
 msgid "Show changes between commits, commit and working tree, etc"
 msgstr "Вывод разницы между коммитами, коммитом и рабочим каталогом и т.д."
 
-#: common-cmds.h:15
+#: common-cmds.h:25
 msgid "Download objects and refs from another repository"
 msgstr "Загрузка объектов и ссылок из другого репозитория"
 
-#: common-cmds.h:16
+#: common-cmds.h:26
 msgid "Print lines matching a pattern"
 msgstr "Вывод строк, соответствующих шаблону"
 
-#: common-cmds.h:17
+#: common-cmds.h:27
 msgid "Create an empty Git repository or reinitialize an existing one"
 msgstr "Создание пустого репозитория Git или реинициализация существующего"
 
-#: common-cmds.h:18
+#: common-cmds.h:28
 msgid "Show commit logs"
 msgstr "Вывод истории коммитов"
 
-#: common-cmds.h:19
+#: common-cmds.h:29
 msgid "Join two or more development histories together"
 msgstr "Объединение одной или нескольких историй разработки вместе"
 
-#: common-cmds.h:20
+#: common-cmds.h:30
 msgid "Move or rename a file, a directory, or a symlink"
 msgstr "Перемещение или переименование файла, каталога или символьной ссылки"
 
-#: common-cmds.h:21
+#: common-cmds.h:31
 msgid "Fetch from and integrate with another repository or a local branch"
 msgstr "Извлечение изменений и объединение с другим репозиторием или локальной веткой"
 
-#: common-cmds.h:22
+#: common-cmds.h:32
 msgid "Update remote refs along with associated objects"
 msgstr "Обновление внешних ссылок и связанных объектов"
 
-#: common-cmds.h:23
+#: common-cmds.h:33
 msgid "Forward-port local commits to the updated upstream head"
 msgstr "Перемещение локальных коммитов над обновленной вышестоящей веткой"
 
-#: common-cmds.h:24
+#: common-cmds.h:34
 msgid "Reset current HEAD to the specified state"
 msgstr "Сброс текущего состояния HEAD на указанное состояние"
 
-#: common-cmds.h:25
+#: common-cmds.h:35
 msgid "Remove files from the working tree and from the index"
 msgstr "Удаление файлов из рабочего каталога и индекса"
 
-#: common-cmds.h:26
+#: common-cmds.h:36
 msgid "Show various types of objects"
 msgstr "Вывод различных типов объектов"
 
-#: common-cmds.h:27
+#: common-cmds.h:37
 msgid "Show the working tree status"
 msgstr "Вывод состояния рабочего каталога"
 
-#: common-cmds.h:28
+#: common-cmds.h:38
 msgid "Create, list, delete or verify a tag object signed with GPG"
 msgstr "Создание, вывод списка, удаление или проверка метки, подписанной с помощью GPG"
 
-#: parse-options.h:143
+#: parse-options.h:142
 msgid "expiry-date"
 msgstr "дата-окончания"
 
-#: parse-options.h:158
+#: parse-options.h:157
 msgid "no-op (backward compatibility)"
 msgstr "ничего не делает (оставлено для обратной совместимости)"
 
-#: parse-options.h:232
+#: parse-options.h:231
 msgid "be more verbose"
 msgstr "быть многословнее"
 
-#: parse-options.h:234
+#: parse-options.h:233
 msgid "be more quiet"
 msgstr "тихий режим"
 
-#: parse-options.h:240
+#: parse-options.h:239
 msgid "use <n> digits to display SHA-1s"
 msgstr "использовать <n> цифр для вывода SHA-1"
 
 #: rerere.h:27
 msgid "update the index with reused conflict resolution if possible"
 msgstr "обновить индекс с помощью переиспользования разрешения конфликта, если возможно"
 
 #: git-am.sh:53
 msgid "You need to set your committer info first"
 msgstr "Сначала нужно указать вашу информацию о коммитере"
 
-#: git-am.sh:98
+#: git-am.sh:100
 msgid ""
 "You seem to have moved HEAD since the last 'am' failure.\n"
 "Not rewinding to ORIG_HEAD"
 msgstr "Похоже, что вы переместили HEAD с момента последней ошибки выполнения «am».\nПеремотка на ORIG_HEAD не выполняется"
 
-#: git-am.sh:108
+#: git-am.sh:110
 #, sh-format
 msgid ""
 "When you have resolved this problem, run \"$cmdline --continue\".\n"
 "If you prefer to skip this patch, run \"$cmdline --skip\" instead.\n"
 "To restore the original branch and stop patching, run \"$cmdline --abort\"."
 msgstr "Когда вы разрешите этот конфликт, запустите «$cmdline --continue».\nЕсли вы хотите пропустить этот патч, то запустите «$cmdline --skip».\nЧтобы перейти на оригинальную ветку и остановить применение изменений, запустите «$cmdline --abort»."
 
-#: git-am.sh:124
+#: git-am.sh:126
 msgid "Cannot fall back to three-way merge."
 msgstr "Не удалось откатиться к трехходовому слиянию."
 
-#: git-am.sh:140
+#: git-am.sh:142
 msgid "Repository lacks necessary blobs to fall back on 3-way merge."
 msgstr "В репозитории отсутствуют двоичные объекты, необходимые для отката к трехходовому слиянию."
 
-#: git-am.sh:142
+#: git-am.sh:144
 msgid "Using index info to reconstruct a base tree..."
 msgstr "Использую индекс для реконструкции базового дерева…"
 
-#: git-am.sh:157
+#: git-am.sh:159
 msgid ""
 "Did you hand edit your patch?\n"
 "It does not apply to blobs recorded in its index."
 msgstr "Вы вручную изменяли патч?\nОн не накладывается без ошибок на двоичные объекты, записанные в его заголовке."
 
-#: git-am.sh:166
+#: git-am.sh:168
 msgid "Falling back to patching base and 3-way merge..."
 msgstr "Откат к применению изменений к базовому коммиту с помощью трехходового слияния…"
 
-#: git-am.sh:182
+#: git-am.sh:185
 msgid "Failed to merge in the changes."
 msgstr "Не удалось слить изменения."
 
-#: git-am.sh:277
+#: git-am.sh:280
 msgid "Only one StGIT patch series can be applied at once"
 msgstr "Только серия патчей StGIT может быть применена за раз"
 
-#: git-am.sh:364
+#: git-am.sh:367
 #, sh-format
 msgid "Patch format $patch_format is not supported."
 msgstr "Неподдерживаемый формат патча $patch_format."
 
-#: git-am.sh:366
+#: git-am.sh:369
 msgid "Patch format detection failed."
 msgstr "Сбой определения формата патча."
 
-#: git-am.sh:398
+#: git-am.sh:407
 msgid ""
 "The -b/--binary option has been a no-op for long time, and\n"
 "it will be removed. Please do not use it anymore."
 msgstr "Опция -b/--binary уже долгое время ничего не делает и будет удалена с следующих версиях Git. Пожалуйста, не используйте ее."
 
-#: git-am.sh:496
+#: git-am.sh:507
 #, sh-format
 msgid "previous rebase directory $dotest still exists but mbox given."
 msgstr "предыдущий каталог перемещения $dotest еще существует, но передан mbox."
 
-#: git-am.sh:501
+#: git-am.sh:512
 msgid "Please make up your mind. --skip or --abort?"
 msgstr "Пожалуйста, определитесь: --skip или --abort?"
 
-#: git-am.sh:537
+#: git-am.sh:560
 #, sh-format
 msgid ""
 "Stray $dotest directory found.\n"
 "Use \"git am --abort\" to remove it."
 msgstr "Найден забытый каталог $dotest.\nИспользуйте «git am --abort», чтобы удалить его."
 
-#: git-am.sh:545
+#: git-am.sh:568
 msgid "Resolve operation not in progress, we are not resuming."
 msgstr "Операция разрешения конфликтов не в процессе выполнения, не продолжаем."
 
-#: git-am.sh:612
+#: git-am.sh:635
 #, sh-format
 msgid "Dirty index: cannot apply patches (dirty: $files)"
 msgstr "Индекс не пустой: нельзя применять патчи (в индексе: $files)"
 
-#: git-am.sh:722
+#: git-am.sh:747
 #, sh-format
 msgid ""
 "Patch is empty.  Was it split wrong?\n"
 "If you would prefer to skip this patch, instead run \"$cmdline --skip\".\n"
 "To restore the original branch and stop patching run \"$cmdline --abort\"."
 msgstr "Патч пуст. Возможно, он был неправильно разделен?\nЕсли вы хотите пропустить этот патч, то вместо этого запустите «$cmdline --skip».\nЧтобы перейти на оригинальную ветку и остановить применение изменений, запустите «$cmdline --abort»."
 
-#: git-am.sh:749
+#: git-am.sh:774
 msgid "Patch does not have a valid e-mail address."
 msgstr "Патч не содержит действительный адрес электронной почты."
 
-#: git-am.sh:796
+#: git-am.sh:821
 msgid "cannot be interactive without stdin connected to a terminal."
 msgstr "не удалось использовать интерактивное поведение, без stdin подключенного к терминалу."
 
-#: git-am.sh:800
+#: git-am.sh:825
 msgid "Commit Body is:"
 msgstr "Тело коммита:"
 
 #. TRANSLATORS: Make sure to include [y], [n], [e], [v] and [a]
 #. in your translation. The program will only accept English
 #. input at this point.
-#: git-am.sh:807
+#: git-am.sh:832
 msgid "Apply? [y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all "
 msgstr "Применить? [y] - да/[n] - нет/[e] - редактировать/[v] - просмотреть патч/[a] - применить все "
 
-#: git-am.sh:843
+#: git-am.sh:868
 #, sh-format
 msgid "Applying: $FIRSTLINE"
 msgstr "Применение: $FIRSTLINE"
 
-#: git-am.sh:864
+#: git-am.sh:889
 msgid ""
 "No changes - did you forget to use 'git add'?\n"
 "If there is nothing left to stage, chances are that something else\n"
 "already introduced the same changes; you might want to skip this patch."
 msgstr "Нет изменений — возможно, вы забыли вызвать «git add»?\nЕсли ничего не осталось для индексации, то, скорее всего, что-то другое уже сделало те же изменения; возможно, вам следует пропустить этот патч."
 
-#: git-am.sh:872
+#: git-am.sh:897
 msgid ""
 "You still have unmerged paths in your index\n"
 "did you forget to use 'git add'?"
 msgstr "У вас все еще имеются не слитые пути в индексе.\nВозможно, вы забыли вызвать «git add»?"
 
-#: git-am.sh:888
+#: git-am.sh:913
 msgid "No changes -- Patch already applied."
 msgstr "Нет изменений — Патч уже применен."
 
-#: git-am.sh:898
+#: git-am.sh:923
 #, sh-format
 msgid "Patch failed at $msgnum $FIRSTLINE"
 msgstr "Ошибка применения изменений на строке $msgnum $FIRSTLINE"
 
-#: git-am.sh:901
+#: git-am.sh:926
 #, sh-format
 msgid ""
 "The copy of the patch that failed is found in:\n"
 "   $dotest/patch"
 msgstr "Копию изменений, которые не удалось применить, вы можете найти в:\n   $dotest/patch"
 
-#: git-am.sh:919
+#: git-am.sh:945
 msgid "applying to an empty history"
 msgstr "применение к пустой истории"
 
 #: git-bisect.sh:48
 msgid "You need to start by \"git bisect start\""
 msgstr "Вам нужно начать с помощью «git bisect start»"
@@ -10053,46 +10339,46 @@
 msgstr "не удалось выполнить двоичный поиск:\n«bisect_state $state» завершился с кодом ошибки $res"
 
 #: git-bisect.sh:485
 msgid "bisect run success"
 msgstr "bisect run выполнен успешно"
 
-#: git-pull.sh:21
+#: git-pull.sh:61
 msgid ""
 "Pull is not possible because you have unmerged files.\n"
 "Please, fix them up in the work tree, and then use 'git add/rm <file>'\n"
 "as appropriate to mark resolution and make a commit."
 msgstr "Невозможно выполнить получение, так как у вас имеются не слитые файлы.\nИсправьте их в рабочем каталоге, затем запустите «git add/rm <файл>»,\nчтобы пометить исправление и сделайте коммит."
 
-#: git-pull.sh:25
+#: git-pull.sh:65
 msgid "Pull is not possible because you have unmerged files."
 msgstr "Невозможно выполнить получение, так как у вас имеются не слитые файлы."
 
-#: git-pull.sh:31
+#: git-pull.sh:71
 msgid ""
 "You have not concluded your merge (MERGE_HEAD exists).\n"
 "Please, commit your changes before you can merge."
 msgstr "Вы не завершили слияние (присутствует файл MERGE_HEAD).\nВыполните коммит ваших изменений, перед слиянием."
 
-#: git-pull.sh:245
+#: git-pull.sh:285
 msgid "updating an unborn branch with changes added to the index"
 msgstr "обновление еще не начавшейся ветки с изменениями, добавленными в индекс"
 
-#: git-pull.sh:269
+#: git-pull.sh:311
 #, sh-format
 msgid ""
 "Warning: fetch updated the current branch head.\n"
 "Warning: fast-forwarding your working tree from\n"
 "Warning: commit $orig_head."
 msgstr "Предупреждение: извлечение обновило голову вашей текущей ветки.\nПредупреждение: перемотка вашего рабочего каталога\nПредупреждение: с коммита $orig_head."
 
-#: git-pull.sh:294
+#: git-pull.sh:336
 msgid "Cannot merge multiple branches into empty head"
 msgstr "Нельзя слить несколько веток в пустую указатель на коммит"
 
-#: git-pull.sh:298
+#: git-pull.sh:340
 msgid "Cannot rebase onto multiple branches"
 msgstr "Невозможно переместить над несколькими ветками"
 
 #: git-rebase.sh:57
 msgid ""
 "When you have resolved this problem, run \"git rebase --continue\".\n"
@@ -10265,98 +10551,103 @@
 #. up the second line with however many characters the
 #. translation of "error: " takes in your language. E.g. in
 #. English this is:
 #. $ git stash save --blah-blah 2>&1 | head -n 2
 #. error: unknown option for 'stash save': --blah-blah
 #. To provide a message, use git stash save -- '--blah-blah'
-#: git-stash.sh:238
+#: git-stash.sh:241
 #, sh-format
 msgid ""
 "error: unknown option for 'stash save': $option\n"
 "       To provide a message, use git stash save -- '$option'"
-msgstr "ошибка: неизвестная опция для «stash save»: $option\n        Для предоставления сообщения, используйте git stash save -- '$option'"
+msgstr "ошибка: неизвестная опция для «stash save»: $option\n        Для предоставления сообщения, используйте git stash save -- «$option»"
 
-#: git-stash.sh:259
+#: git-stash.sh:262
 msgid "No local changes to save"
 msgstr "Нет локальных изменений для сохранения"
 
-#: git-stash.sh:263
+#: git-stash.sh:266
 msgid "Cannot initialize stash"
 msgstr "Не удалось инициализировать спрятанные изменения"
 
-#: git-stash.sh:267
+#: git-stash.sh:270
 msgid "Cannot save the current status"
 msgstr "Не удалось сохранить текущий статус"
 
-#: git-stash.sh:285
+#: git-stash.sh:288
 msgid "Cannot remove worktree changes"
 msgstr "Не удалось удалить изменения рабочего каталога"
 
-#: git-stash.sh:384
+#: git-stash.sh:389
+#, sh-format
+msgid "unknown option: $opt"
+msgstr "неизвестная опция: $opt"
+
+#: git-stash.sh:399
 msgid "No stash found."
 msgstr "Не найдены спрятанные изменения."
 
-#: git-stash.sh:391
+#: git-stash.sh:406
 #, sh-format
 msgid "Too many revisions specified: $REV"
 msgstr "Передано слишком много редакций: $REV"
 
-#: git-stash.sh:397
+#: git-stash.sh:412
 #, sh-format
 msgid "$reference is not a valid reference"
 msgstr "$reference не является действительной ссылкой"
 
-#: git-stash.sh:425
+#: git-stash.sh:440
 #, sh-format
 msgid "'$args' is not a stash-like commit"
 msgstr "«$args» не похоже на коммит со спрятанными изменениями"
 
-#: git-stash.sh:436
+#: git-stash.sh:451
 #, sh-format
 msgid "'$args' is not a stash reference"
 msgstr "«$args» не является ссылкой на спрятанные изменения"
 
-#: git-stash.sh:444
+#: git-stash.sh:459
 msgid "unable to refresh index"
 msgstr "не удалось обновить индекс"
 
-#: git-stash.sh:448
+#: git-stash.sh:463
 msgid "Cannot apply a stash in the middle of a merge"
 msgstr "Нельзя применить спрятанные изменения во время выполнения слияния"
 
-#: git-stash.sh:456
+#: git-stash.sh:471
 msgid "Conflicts in index. Try without --index."
 msgstr "Конфликты в индексе. Попробуйте без --index."
 
-#: git-stash.sh:458
+#: git-stash.sh:473
 msgid "Could not save index tree"
 msgstr "Не удалось сохранить дерево индекса"
 
-#: git-stash.sh:492
+#: git-stash.sh:507
 msgid "Cannot unstage modified files"
 msgstr "Невозможно убрать из индекса измененные файлы"
 
-#: git-stash.sh:507
+#: git-stash.sh:522
 msgid "Index was not unstashed."
 msgstr "Индекс не был достат из спрятанных изменений."
 
-#: git-stash.sh:530
+#: git-stash.sh:545
 #, sh-format
 msgid "Dropped ${REV} ($s)"
 msgstr "Отброшено ${REV} ($s)"
 
-#: git-stash.sh:531
+#: git-stash.sh:546
 #, sh-format
 msgid "${REV}: Could not drop stash entry"
 msgstr "${REV}: Не удалось отбросить запись из спрятанных изменений"
 
-#: git-stash.sh:539
+#: git-stash.sh:554
 msgid "No branch name specified"
 msgstr "Не указано имя ветки"
 
-#: git-stash.sh:611
+#: git-stash.sh:626
 msgid "(To restore them type \"git stash apply\")"
 msgstr "(Чтобы восстановить их, наберите «git stash apply»)"
 
 #: git-submodule.sh:95
 #, sh-format
 msgid "cannot strip one component off url '$remoteurl'"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/sv.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/sv.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/sv.po	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/sv.po	2015-07-28 04:34:56.000000000 +0800
@@ -2,16 +2,16 @@
 # Copyright (C) 2010-2015 Peter krefting <peter@softwolves.pp.se>
 # This file is distributed under the same license as the Git package.
 # Peter Krefting <peter@softwolves.pp.se>, 2010, 2011, 2012, 2013, 2014, 2015.
 #
 msgid ""
 msgstr ""
-"Project-Id-Version: git 2.4.0\n"
+"Project-Id-Version: git 2.5.0\n"
 "Report-Msgid-Bugs-To: Git Mailing List <git@vger.kernel.org>\n"
-"POT-Creation-Date: 2015-04-03 08:13+0800\n"
-"PO-Revision-Date: 2015-04-07 08:44+0100\n"
+"POT-Creation-Date: 2015-07-14 07:19+0800\n"
+"PO-Revision-Date: 2015-07-15 12:51+0100\n"
 "Last-Translator: Peter Krefting <peter@softwolves.pp.se>\n"
 "Language-Team: Swedish <tp-sv@listor.tp-sv.se>\n"
 "Language: sv\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
@@ -47,13 +47,13 @@
 "[<sökväg>...]"
 
 #: archive.c:14
 msgid "git archive --remote <repo> [--exec <cmd>] --list"
 msgstr "git archive --remote <arkiv> [--exec <kmd>] --list"
 
-#: archive.c:342 builtin/add.c:137 builtin/add.c:427 builtin/rm.c:328
+#: archive.c:342 builtin/add.c:137 builtin/add.c:428 builtin/rm.c:327
 #, c-format
 msgid "pathspec '%s' did not match any files"
 msgstr "sökvägsangivelsen \"%s\" motsvarade inte några filer"
 
 #: archive.c:427
 msgid "fmt"
@@ -70,15 +70,15 @@
 #: archive.c:429
 msgid "prepend prefix to each pathname in the archive"
 msgstr "lägg till prefix till varje sökväg i arkivet"
 
 #: archive.c:430 builtin/archive.c:88 builtin/blame.c:2516
 #: builtin/blame.c:2517 builtin/config.c:57 builtin/fast-export.c:986
-#: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:101
+#: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:99
 #: builtin/ls-files.c:446 builtin/ls-files.c:449 builtin/notes.c:394
-#: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:151
+#: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:150
 msgid "file"
 msgstr "fil"
 
 #: archive.c:431 builtin/archive.c:89
 msgid "write the archive to this file"
 msgstr "skriv arkivet till filen"
@@ -104,13 +104,13 @@
 msgstr "komprimera bättre"
 
 #: archive.c:447
 msgid "list supported archive formats"
 msgstr "visa understödda arkivformat"
 
-#: archive.c:449 builtin/archive.c:90 builtin/clone.c:86
+#: archive.c:449 builtin/archive.c:90 builtin/clone.c:77
 msgid "repo"
 msgstr "arkiv"
 
 #: archive.c:450 builtin/archive.c:91
 msgid "retrieve the archive from remote repository <repo>"
 msgstr "hämta arkivet från fjärrarkivet <arkiv>"
@@ -120,13 +120,13 @@
 msgstr "kommando"
 
 #: archive.c:452 builtin/archive.c:93
 msgid "path to the remote git-upload-archive command"
 msgstr "sökväg till kommandot git-upload-archive på fjärren"
 
-#: attr.c:264
+#: attr.c:265
 msgid ""
 "Negative patterns are ignored in git attributes\n"
 "Use '\\!' for literal leading exclamation."
 msgstr ""
 "Negativa mönster ignoreras i git-attribut\n"
 "Använd '\\!' för att inleda med ett utropstecken."
@@ -259,14 +259,14 @@
 
 #: bundle.c:139
 msgid "Repository lacks these prerequisite commits:"
 msgstr "Arkivet saknar dessa nödvändiga incheckningar:"
 
 #: bundle.c:163 sequencer.c:650 sequencer.c:1105 builtin/blame.c:2705
-#: builtin/branch.c:659 builtin/commit.c:1045 builtin/log.c:330
-#: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:358
+#: builtin/branch.c:651 builtin/commit.c:1045 builtin/log.c:330
+#: builtin/log.c:825 builtin/log.c:1432 builtin/log.c:1666 builtin/merge.c:358
 #: builtin/shortlog.c:158
 msgid "revision walk setup failed"
 msgstr "misslyckades skapa revisionstraversering"
 
 #: bundle.c:185
 #, c-format
@@ -505,35 +505,43 @@
 "Found errors in 'diff.dirstat' config variable:\n"
 "%s"
 msgstr ""
 "Hittade fel i konfigurationsvariabeln \"diff.dirstat\":\n"
 "%s"
 
-#: diff.c:2956
+#: diff.c:2997
 #, c-format
 msgid "external diff died, stopping at %s"
 msgstr "extern diff dog, stannar vid %s"
 
-#: diff.c:3351
+#: diff.c:3393
 msgid "--follow requires exactly one pathspec"
 msgstr "--follow kräver exakt en sökvägsangivelse"
 
-#: diff.c:3514
+#: diff.c:3556
 #, c-format
 msgid ""
 "Failed to parse --dirstat/-X option parameter:\n"
 "%s"
 msgstr ""
 "Misslyckades tolka argument till flaggan --dirstat/-X;\n"
 "%s"
 
-#: diff.c:3528
+#: diff.c:3570
 #, c-format
 msgid "Failed to parse --submodule option parameter: '%s'"
 msgstr "Misslyckades tolka argument till flaggan --submodule: \"%s\""
 
+#: dir.c:1852
+msgid "failed to get kernel name and information"
+msgstr "misslyckades hämta kärnans namn och information"
+
+#: dir.c:1945
+msgid "Untracked cache is disabled on this system."
+msgstr "Ospårad cache är inaktiverad på detta system."
+
 #: gpg-interface.c:129 gpg-interface.c:200
 msgid "could not run gpg."
 msgstr "kunde inte köra gpg."
 
 #: gpg-interface.c:141
 msgid "gpg did not accept the data"
@@ -574,49 +582,49 @@
 msgstr "git-kommandon tillgängliga i \"%s\""
 
 #: help.c:214
 msgid "git commands available from elsewhere on your $PATH"
 msgstr "git-kommandon från andra platser i din $PATH"
 
-#: help.c:230
-msgid "The most commonly used git commands are:"
-msgstr "De mest använda git-kommandona är:"
+#: help.c:246
+msgid "These are common Git commands used in various situations:"
+msgstr "Dessa vanliga Git-kommandon används i olika situationer:"
 
-#: help.c:289
+#: help.c:311
 #, c-format
 msgid ""
 "'%s' appears to be a git command, but we were not\n"
 "able to execute it. Maybe git-%s is broken?"
 msgstr ""
 "\"%s\" verkar vara ett git-kommando, men vi kan inte\n"
 "köra det. Kanske git-%s är trasigt?"
 
-#: help.c:346
+#: help.c:368
 msgid "Uh oh. Your system reports no Git commands at all."
 msgstr "Oj då. Ditt system rapporterar inga Git-kommandon alls."
 
-#: help.c:368
+#: help.c:390
 #, c-format
 msgid ""
 "WARNING: You called a Git command named '%s', which does not exist.\n"
 "Continuing under the assumption that you meant '%s'"
 msgstr ""
 "VARNING: Du anropade ett Git-kommando vid namn \"%s\", som inte finns.\n"
 "Fortsätter under förutsättningen att du menade \"%s\""
 
-#: help.c:373
+#: help.c:395
 #, c-format
 msgid "in %0.1f seconds automatically..."
 msgstr "automatiskt om %0.1f sekunder..."
 
-#: help.c:380
+#: help.c:402
 #, c-format
 msgid "git: '%s' is not a git command. See 'git --help'."
 msgstr "git: \"%s\" är inte ett git-kommando. Se \"git --help\"."
 
-#: help.c:384 help.c:444
+#: help.c:406 help.c:466
 msgid ""
 "\n"
 "Did you mean this?"
 msgid_plural ""
 "\n"
 "Did you mean one of these?"
@@ -624,31 +632,31 @@
 "\n"
 "Menade du detta?"
 msgstr[1] ""
 "\n"
 "Menade du ett av dessa?"
 
-#: help.c:440
+#: help.c:462
 #, c-format
 msgid "%s: %s - %s"
 msgstr "%s: %s - %s"
 
-#: lockfile.c:283
+#: lockfile.c:345
 msgid "BUG: reopen a lockfile that is still open"
 msgstr "FEL: återöppna en låsfil som fortfarande är öppen"
 
-#: lockfile.c:285
+#: lockfile.c:347
 msgid "BUG: reopen a lockfile that has been committed"
 msgstr "FEL: återöppna en låsfil som har överlämnats"
 
 #: merge.c:41
 msgid "failed to read the cache"
 msgstr "misslyckades läsa cachen"
 
-#: merge.c:94 builtin/checkout.c:374 builtin/checkout.c:580
-#: builtin/clone.c:662
+#: merge.c:94 builtin/checkout.c:376 builtin/checkout.c:587
+#: builtin/clone.c:647
 msgid "unable to write new index file"
 msgstr "kunde inte skriva ny indexfil"
 
 #: merge-recursive.c:189
 #, c-format
 msgid "(bad commit)\n"
@@ -660,247 +668,247 @@
 msgstr "addinfo_cache misslyckades för sökvägen \"%s\""
 
 #: merge-recursive.c:270
 msgid "error building trees"
 msgstr "fel vid byggande av träd"
 
-#: merge-recursive.c:688
+#: merge-recursive.c:687
 #, c-format
 msgid "failed to create path '%s'%s"
 msgstr "misslyckades skapa sökvägen \"%s\"%s"
 
-#: merge-recursive.c:699
+#: merge-recursive.c:698
 #, c-format
 msgid "Removing %s to make room for subdirectory\n"
 msgstr "Tar bort %s för att göra plats för underkatalog\n"
 
-#: merge-recursive.c:713 merge-recursive.c:734
+#: merge-recursive.c:712 merge-recursive.c:733
 msgid ": perhaps a D/F conflict?"
 msgstr ": kanske en K/F-konflikt?"
 
-#: merge-recursive.c:724
+#: merge-recursive.c:723
 #, c-format
 msgid "refusing to lose untracked file at '%s'"
 msgstr "vägrar förlora ospårad fil vid \"%s\""
 
-#: merge-recursive.c:764
+#: merge-recursive.c:763
 #, c-format
 msgid "cannot read object %s '%s'"
 msgstr "kan inte läsa objektet %s: \"%s\""
 
-#: merge-recursive.c:766
+#: merge-recursive.c:765
 #, c-format
 msgid "blob expected for %s '%s'"
 msgstr "blob förväntades för %s \"%s\""
 
-#: merge-recursive.c:789 builtin/clone.c:321
+#: merge-recursive.c:788 builtin/clone.c:306
 #, c-format
 msgid "failed to open '%s'"
 msgstr "misslyckades öppna \"%s\""
 
-#: merge-recursive.c:797
+#: merge-recursive.c:796
 #, c-format
 msgid "failed to symlink '%s'"
 msgstr "misslyckades skapa symboliska länken \"%s\""
 
-#: merge-recursive.c:800
+#: merge-recursive.c:799
 #, c-format
 msgid "do not know what to do with %06o %s '%s'"
 msgstr "vet inte hur %06o %s \"%s\" skall hanteras"
 
-#: merge-recursive.c:938
+#: merge-recursive.c:937
 msgid "Failed to execute internal merge"
 msgstr "Misslyckades exekvera intern sammanslagning"
 
-#: merge-recursive.c:942
+#: merge-recursive.c:941
 #, c-format
 msgid "Unable to add %s to database"
 msgstr "Kunde inte lägga till %s till databasen"
 
-#: merge-recursive.c:958
+#: merge-recursive.c:957
 msgid "unsupported object type in the tree"
 msgstr "objekttyp som ej stöds upptäcktes i trädet"
 
-#: merge-recursive.c:1033 merge-recursive.c:1047
+#: merge-recursive.c:1032 merge-recursive.c:1046
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree."
 msgstr ""
 "KONFLIKT (%s/radera): %s raderad i %s och %s i %s. Versionen %s av %s lämnad "
 "i trädet."
 
-#: merge-recursive.c:1039 merge-recursive.c:1052
+#: merge-recursive.c:1038 merge-recursive.c:1051
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree at %s."
 msgstr ""
 "KONFLIKT (%s/radera): %s raderad i %s och %s i %s. Versionen %s av %s lämnad "
 "i trädet vid %s."
 
-#: merge-recursive.c:1093
+#: merge-recursive.c:1092
 msgid "rename"
 msgstr "namnbyte"
 
-#: merge-recursive.c:1093
+#: merge-recursive.c:1092
 msgid "renamed"
 msgstr "namnbytt"
 
-#: merge-recursive.c:1149
+#: merge-recursive.c:1148
 #, c-format
 msgid "%s is a directory in %s adding as %s instead"
 msgstr "%s är en katalog i %s lägger till som %s istället"
 
-#: merge-recursive.c:1171
+#: merge-recursive.c:1170
 #, c-format
 msgid ""
 "CONFLICT (rename/rename): Rename \"%s\"->\"%s\" in branch \"%s\" rename \"%s"
 "\"->\"%s\" in \"%s\"%s"
 msgstr ""
 "KONFLIKT (namnbyte/namnbyte): Namnbyte \"%s\"->\"%s\" på grenen \"%s\" "
 "namnbyte \"%s\"->\"%s\" i \"%s\"%s"
 
-#: merge-recursive.c:1176
+#: merge-recursive.c:1175
 msgid " (left unresolved)"
 msgstr " (lämnad olöst)"
 
-#: merge-recursive.c:1230
+#: merge-recursive.c:1229
 #, c-format
 msgid "CONFLICT (rename/rename): Rename %s->%s in %s. Rename %s->%s in %s"
 msgstr ""
 "KONFLIKT (namnbyte/namnbyte): Namnbyte %s->%s i %s. Namnbyte %s->%s i %s"
 
-#: merge-recursive.c:1260
+#: merge-recursive.c:1259
 #, c-format
 msgid "Renaming %s to %s and %s to %s instead"
 msgstr "Byter namn på %s till %s och %s till %s istället"
 
-#: merge-recursive.c:1459
+#: merge-recursive.c:1458
 #, c-format
 msgid "CONFLICT (rename/add): Rename %s->%s in %s. %s added in %s"
 msgstr "KONFLIKT (namnbyte/tillägg): Namnbyte %s->%s i %s. %s tillagd i %s"
 
-#: merge-recursive.c:1469
+#: merge-recursive.c:1468
 #, c-format
 msgid "Adding merged %s"
 msgstr "Lägger till sammanslagen %s"
 
-#: merge-recursive.c:1474 merge-recursive.c:1672
+#: merge-recursive.c:1473 merge-recursive.c:1671
 #, c-format
 msgid "Adding as %s instead"
 msgstr "Lägger till som %s istället"
 
-#: merge-recursive.c:1525
+#: merge-recursive.c:1524
 #, c-format
 msgid "cannot read object %s"
 msgstr "kan inte läsa objektet %s"
 
-#: merge-recursive.c:1528
+#: merge-recursive.c:1527
 #, c-format
 msgid "object %s is not a blob"
 msgstr "objektet %s är inte en blob"
 
-#: merge-recursive.c:1576
+#: merge-recursive.c:1575
 msgid "modify"
 msgstr "ändra"
 
-#: merge-recursive.c:1576
+#: merge-recursive.c:1575
 msgid "modified"
 msgstr "ändrad"
 
-#: merge-recursive.c:1586
+#: merge-recursive.c:1585
 msgid "content"
 msgstr "innehåll"
 
-#: merge-recursive.c:1593
+#: merge-recursive.c:1592
 msgid "add/add"
 msgstr "tillägg/tillägg"
 
-#: merge-recursive.c:1627
+#: merge-recursive.c:1626
 #, c-format
 msgid "Skipped %s (merged same as existing)"
 msgstr "Hoppade över %s (sammanslagen samma som befintlig)"
 
-#: merge-recursive.c:1641
+#: merge-recursive.c:1640
 #, c-format
 msgid "Auto-merging %s"
 msgstr "Slår ihop %s automatiskt"
 
-#: merge-recursive.c:1645 git-submodule.sh:1150
+#: merge-recursive.c:1644 git-submodule.sh:1150
 msgid "submodule"
 msgstr "undermodul"
 
-#: merge-recursive.c:1646
+#: merge-recursive.c:1645
 #, c-format
 msgid "CONFLICT (%s): Merge conflict in %s"
 msgstr "KONFLIKT (%s): Sammanslagningskonflikt i %s"
 
-#: merge-recursive.c:1732
+#: merge-recursive.c:1731
 #, c-format
 msgid "Removing %s"
 msgstr "Tar bort %s"
 
-#: merge-recursive.c:1757
+#: merge-recursive.c:1756
 msgid "file/directory"
 msgstr "fil/katalog"
 
-#: merge-recursive.c:1763
+#: merge-recursive.c:1762
 msgid "directory/file"
 msgstr "katalog/fil"
 
-#: merge-recursive.c:1768
+#: merge-recursive.c:1767
 #, c-format
 msgid "CONFLICT (%s): There is a directory with name %s in %s. Adding %s as %s"
 msgstr ""
 "KONFLIKT (%s): Det finns en katalog med namnet %s i %s. Lägger till %s som %s"
 
-#: merge-recursive.c:1778
+#: merge-recursive.c:1777
 #, c-format
 msgid "Adding %s"
 msgstr "Lägger till %s"
 
-#: merge-recursive.c:1795
+#: merge-recursive.c:1794
 msgid "Fatal merge failure, shouldn't happen."
 msgstr "Ödesdigert sammanslagningsfel, borde inte inträffa."
 
-#: merge-recursive.c:1814
+#: merge-recursive.c:1813
 msgid "Already up-to-date!"
 msgstr "Redan à jour!"
 
-#: merge-recursive.c:1823
+#: merge-recursive.c:1822
 #, c-format
 msgid "merging of trees %s and %s failed"
 msgstr "sammanslagning av träden %s och %s misslyckades"
 
-#: merge-recursive.c:1853
+#: merge-recursive.c:1852
 #, c-format
 msgid "Unprocessed path??? %s"
 msgstr "Obehandlad sökväg??? %s"
 
-#: merge-recursive.c:1901
+#: merge-recursive.c:1900
 msgid "Merging:"
 msgstr "Slår ihop:"
 
-#: merge-recursive.c:1914
+#: merge-recursive.c:1913
 #, c-format
 msgid "found %u common ancestor:"
 msgid_plural "found %u common ancestors:"
 msgstr[0] "hittade %u gemensam förfader:"
 msgstr[1] "hittade %u gemensamma förfäder:"
 
-#: merge-recursive.c:1951
+#: merge-recursive.c:1950
 msgid "merge returned no commit"
 msgstr "sammanslagningen returnerade ingen incheckning"
 
-#: merge-recursive.c:2008
+#: merge-recursive.c:2007
 #, c-format
 msgid "Could not parse object '%s'"
 msgstr "Kunde inte tolka objektet \"%s\""
 
-#: merge-recursive.c:2019 builtin/merge.c:667
+#: merge-recursive.c:2018 builtin/merge.c:645
 msgid "Unable to write index."
 msgstr "Kunde inte skriva indexet."
 
 #: notes-utils.c:41
 msgid "Cannot commit uninitialized/unreferenced notes tree"
 msgstr "Kan inte checka in oinitierat/orefererat anteckningsträd"
@@ -919,13 +927,13 @@
 #. environment variable, the second %s is its value
 #: notes-utils.c:119
 #, c-format
 msgid "Bad %s value: '%s'"
 msgstr "Felaktigt värde på %s: \"%s\""
 
-#: object.c:241
+#: object.c:242
 #, c-format
 msgid "unable to parse object: %s"
 msgstr "kunde inte tolka objektet: %s"
 
 #: parse-options.c:546
 msgid "..."
@@ -1018,93 +1026,135 @@
 "Glömde du kanske att antingen lägga till \":/\" eller \".\"?"
 
 #: pretty.c:968
 msgid "unable to parse --pretty format"
 msgstr "kunde inte tolka format för --pretty"
 
-#: progress.c:225
+#: progress.c:236
 msgid "done"
 msgstr "klart"
 
-#: read-cache.c:1275
+#: read-cache.c:1295
 #, c-format
 msgid ""
 "index.version set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "index.version satt, men värdet är ogiltigt.\n"
 "Använder version %i"
 
-#: read-cache.c:1285
+#: read-cache.c:1305
 #, c-format
 msgid ""
 "GIT_INDEX_VERSION set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "GIT_INDEX_VERSION satt, men värdet är ogiltigt.\n"
 "Använder version %i"
 
-#: remote.c:782
+#: remote.c:792
 #, c-format
 msgid "Cannot fetch both %s and %s to %s"
 msgstr "Kan inte hämta både %s och %s till %s"
 
-#: remote.c:786
+#: remote.c:796
 #, c-format
 msgid "%s usually tracks %s, not %s"
 msgstr "%s spårar vanligtvis %s, inte %s"
 
-#: remote.c:790
+#: remote.c:800
 #, c-format
 msgid "%s tracks both %s and %s"
 msgstr "%s spårar både %s och %s"
 
-#: remote.c:798
+#: remote.c:808
 msgid "Internal error"
 msgstr "Internt fel"
 
-#: remote.c:1980
+#: remote.c:1723 remote.c:1766
+msgid "HEAD does not point to a branch"
+msgstr "HEAD pekar inte på en gren"
+
+#: remote.c:1732
+#, c-format
+msgid "no such branch: '%s'"
+msgstr "okänd gren: \"%s\""
+
+#: remote.c:1735
+#, c-format
+msgid "no upstream configured for branch '%s'"
+msgstr "ingen standarduppström angiven för grenen \"%s\""
+
+#: remote.c:1741
+#, c-format
+msgid "upstream branch '%s' not stored as a remote-tracking branch"
+msgstr "uppströmsgrenen \"%s\" är inte lagrad som en fjärrspårande gren"
+
+#: remote.c:1756
+#, c-format
+msgid "push destination '%s' on remote '%s' has no local tracking branch"
+msgstr "push-målet \"%s\" på fjärren \"%s\" har ingen lokalt spårande gren"
+
+#: remote.c:1771
+#, c-format
+msgid "branch '%s' has no remote for pushing"
+msgstr "grenen \"%s\" har ingen fjärr för \"push\""
+
+#: remote.c:1782
+#, c-format
+msgid "push refspecs for '%s' do not include '%s'"
+msgstr "\"push\"-referensspecifikation för \"%s\" innehåller inte \"%s\""
+
+#: remote.c:1795
+msgid "push has no destination (push.default is 'nothing')"
+msgstr "\"push\" har inget mål (push.default är \"ingenting\")"
+
+#: remote.c:1817
+msgid "cannot resolve 'simple' push to a single destination"
+msgstr "\"enkel push\" motsvarar flera olika mål"
+
+#: remote.c:2124
 #, c-format
 msgid "Your branch is based on '%s', but the upstream is gone.\n"
 msgstr "Din gren är baserad på \"%s\", men den har försvunnit uppströms.\n"
 
-#: remote.c:1984
+#: remote.c:2128
 msgid "  (use \"git branch --unset-upstream\" to fixup)\n"
 msgstr "  (använd \"git branch --unset-upstream\" för att rätta)\n"
 
-#: remote.c:1987
+#: remote.c:2131
 #, c-format
 msgid "Your branch is up-to-date with '%s'.\n"
 msgstr "Din gren är à jour med \"%s\".\n"
 
-#: remote.c:1991
+#: remote.c:2135
 #, c-format
 msgid "Your branch is ahead of '%s' by %d commit.\n"
 msgid_plural "Your branch is ahead of '%s' by %d commits.\n"
 msgstr[0] "Din gren ligger före \"%s\" med %d incheckning.\n"
 msgstr[1] "Din gren ligger före \"%s\" med %d incheckningar.\n"
 
-#: remote.c:1997
+#: remote.c:2141
 msgid "  (use \"git push\" to publish your local commits)\n"
 msgstr "  (använd \"git push\" för att publicera dina lokala incheckningar)\n"
 
-#: remote.c:2000
+#: remote.c:2144
 #, c-format
 msgid "Your branch is behind '%s' by %d commit, and can be fast-forwarded.\n"
 msgid_plural ""
 "Your branch is behind '%s' by %d commits, and can be fast-forwarded.\n"
 msgstr[0] ""
 "Din gren ligger efter \"%s\" med %d incheckning, och kan snabbspolas.\n"
 msgstr[1] ""
 "Din gren ligger efter \"%s\" med %d incheckningar, och kan snabbspolas.\n"
 
-#: remote.c:2008
+#: remote.c:2152
 msgid "  (use \"git pull\" to update your local branch)\n"
 msgstr "  (använd \"git pull\" för att uppdatera din lokala gren)\n"
 
-#: remote.c:2011
+#: remote.c:2155
 #, c-format
 msgid ""
 "Your branch and '%s' have diverged,\n"
 "and have %d and %d different commit each, respectively.\n"
 msgid_plural ""
 "Your branch and '%s' have diverged,\n"
@@ -1113,17 +1163,17 @@
 "Din gren och \"%s\" har divergerat,\n"
 "och har %d respektive %d olika incheckning.\n"
 msgstr[1] ""
 "Din gren och \"%s\" har divergerat,\n"
 "och har %d respektive %d olika incheckningar.\n"
 
-#: remote.c:2021
+#: remote.c:2165
 msgid "  (use \"git pull\" to merge the remote branch into yours)\n"
 msgstr "  (använd \"git pull\" för att slå ihop fjärrgrenen med din egen)\n"
 
-#: revision.c:2348
+#: revision.c:2366
 msgid "--first-parent is incompatible with --bisect"
 msgstr "--first-parent är inkompatibelt med --bisect"
 
 #: run-command.c:83
 msgid "open /dev/null failed"
 msgstr "misslyckades öppna /dev/null"
@@ -1134,28 +1184,28 @@
 msgstr "dup2(%d,%d) misslyckades"
 
 #: send-pack.c:272
 msgid "failed to sign the push certificate"
 msgstr "misslyckades underteckna push-certifikatet"
 
-#: send-pack.c:356
+#: send-pack.c:378
 msgid "the receiving end does not support --signed push"
 msgstr "mottagarsidan stöder inte push med --signed"
 
-#: send-pack.c:366
+#: send-pack.c:389
 msgid "the receiving end does not support --atomic push"
 msgstr "mottagarsidan stöder inte push med --atomic"
 
-#: sequencer.c:172 builtin/merge.c:782 builtin/merge.c:893 builtin/merge.c:995
-#: builtin/merge.c:1005
+#: sequencer.c:172 builtin/merge.c:760 builtin/merge.c:871 builtin/merge.c:973
+#: builtin/merge.c:983
 #, c-format
 msgid "Could not open '%s' for writing"
 msgstr "Kunde inte öppna \"%s\" för skrivning"
 
-#: sequencer.c:174 builtin/merge.c:344 builtin/merge.c:785 builtin/merge.c:997
-#: builtin/merge.c:1010
+#: sequencer.c:174 builtin/merge.c:344 builtin/merge.c:763 builtin/merge.c:975
+#: builtin/merge.c:988
 #, c-format
 msgid "Could not write to '%s'"
 msgstr "Kunde inte skriva till \"%s\""
 
 #: sequencer.c:195
 msgid ""
@@ -1347,13 +1397,13 @@
 msgstr "kan inte bestämma HEAD"
 
 #: sequencer.c:886
 msgid "cannot abort from a branch yet to be born"
 msgstr "kan inte avbryta från en gren som ännu inte är född"
 
-#: sequencer.c:908 builtin/apply.c:4288
+#: sequencer.c:908 builtin/apply.c:4291
 #, c-format
 msgid "cannot open %s: %s"
 msgstr "kan inte öppna %s: %s"
 
 #: sequencer.c:911
 #, c-format
@@ -1389,13 +1439,18 @@
 msgstr "Kan inte ångra som första incheckning"
 
 #: sequencer.c:1124
 msgid "Can't cherry-pick into empty head"
 msgstr "Kan inte göra \"cherry-pick\" i ett tomt huvud"
 
-#: sha1_name.c:440
+#: setup.c:243
+#, c-format
+msgid "failed to read %s"
+msgstr "misslyckades läsa %s"
+
+#: sha1_name.c:453
 msgid ""
 "Git normally never creates a ref that ends with 40 hex characters\n"
 "because it will be ignored when you just specify 40-hex. These refs\n"
 "may be created by mistake. For example,\n"
 "\n"
 "  git checkout -b $br $(git rev-parse ...)\n"
@@ -1411,31 +1466,12 @@
 "  git checkout -b $br $(git rev-parse ...)\n"
 "\n"
 "där \"$br\" på något sätt blivit tomt och en 40-hex-referens skapats.\n"
 "Undersök referenserna och ta kanske bort dem. Stäng av meddelandet\n"
 "genom att köra \"git config advice.objectNameWarning false\""
 
-#: sha1_name.c:1068
-msgid "HEAD does not point to a branch"
-msgstr "HEAD pekar inte på en gren"
-
-#: sha1_name.c:1071
-#, c-format
-msgid "No such branch: '%s'"
-msgstr "Okänd gren: \"%s\""
-
-#: sha1_name.c:1073
-#, c-format
-msgid "No upstream configured for branch '%s'"
-msgstr "Ingen standarduppström angiven för grenen \"%s\""
-
-#: sha1_name.c:1077
-#, c-format
-msgid "Upstream branch '%s' not stored as a remote-tracking branch"
-msgstr "Uppströmsgrenen \"%s\" är inte lagrad som en fjärrspårande gren"
-
 #: submodule.c:64 submodule.c:98
 msgid "Cannot change unmerged .gitmodules, resolve merge conflicts first"
 msgstr ""
 "Kan inte ändra .gitmodules-fil som inte slagits ihop, lös "
 "sammanslagningskonflikter först"
 
@@ -1455,18 +1491,13 @@
 msgstr "Kunde inte ta bort .gitmodules-posten för %s"
 
 #: submodule.c:120
 msgid "staging updated .gitmodules failed"
 msgstr "misslyckades köa uppdaterad .gitmodules"
 
-#: submodule.c:1109 builtin/init-db.c:371
-#, c-format
-msgid "Could not create git link %s"
-msgstr "Kunde inte skapa gitlänk %s"
-
-#: submodule.c:1120
+#: submodule.c:1115
 #, c-format
 msgid "Could not set core.worktree in %s"
 msgstr "Kunde inte sätta core.worktree i %s"
 
 #: trailer.c:491 trailer.c:495 trailer.c:499 trailer.c:553 trailer.c:557
 #: trailer.c:561
@@ -1490,13 +1521,13 @@
 msgstr "kunde inte läsa indatafilen \"%s\""
 
 #: trailer.c:704
 msgid "could not read from stdin"
 msgstr "Kunde inte läsa från standard in"
 
-#: unpack-trees.c:202
+#: unpack-trees.c:203
 msgid "Checking out files"
 msgstr "Checkar ut filer"
 
 #: urlmatch.c:120
 msgid "invalid URL scheme name or missing '://' suffix"
 msgstr "ogiltig URL-schemanamn eller saknat \"://\"-suffix"
@@ -1546,12 +1577,27 @@
 msgstr "okänd användare"
 
 #: wrapper.c:564
 msgid "unable to get current working directory"
 msgstr "kan inte hämta aktuell arbetskatalog"
 
+#: wrapper.c:575
+#, c-format
+msgid "could not open %s for writing"
+msgstr "kunde inte öppna %s för skrivning"
+
+#: wrapper.c:587
+#, c-format
+msgid "could not write to %s"
+msgstr "kunde inte skriva till %s"
+
+#: wrapper.c:593
+#, c-format
+msgid "could not close %s"
+msgstr "kunde inte stänga %s"
+
 #: wt-status.c:150
 msgid "Unmerged paths:"
 msgstr "Ej sammanslagna sökvägar:"
 
 #: wt-status.c:177 wt-status.c:204
 #, c-format
@@ -1571,17 +1617,17 @@
 msgstr "  (använd \"git add/rm <fil>...\" som lämpligt för att ange lösning)"
 
 #: wt-status.c:187
 msgid "  (use \"git rm <file>...\" to mark resolution)"
 msgstr "  (använd \"git rm <fil>...\" för att ange lösning)"
 
-#: wt-status.c:198 wt-status.c:878
+#: wt-status.c:198 wt-status.c:881
 msgid "Changes to be committed:"
 msgstr "Ändringar att checka in:"
 
-#: wt-status.c:216 wt-status.c:887
+#: wt-status.c:216 wt-status.c:890
 msgid "Changes not staged for commit:"
 msgstr "Ändringar ej i incheckningskön:"
 
 #: wt-status.c:220
 msgid "  (use \"git add <file>...\" to update what will be committed)"
 msgstr ""
@@ -1689,296 +1735,296 @@
 
 #: wt-status.c:391
 #, c-format
 msgid "bug: unhandled diff status %c"
 msgstr "programfel: diff-status %c ej hanterad"
 
-#: wt-status.c:753
+#: wt-status.c:755
 msgid "Submodules changed but not updated:"
 msgstr "Undermoduler ändrade men inte uppdaterade:"
 
-#: wt-status.c:755
+#: wt-status.c:757
 msgid "Submodule changes to be committed:"
 msgstr "Undermodulers ändringar att checka in:"
 
-#: wt-status.c:835
+#: wt-status.c:838
 msgid ""
 "Do not touch the line above.\n"
 "Everything below will be removed."
 msgstr ""
 "Rör inte raden ovan.\n"
 "Allt nedan kommer tas bort."
 
-#: wt-status.c:946
+#: wt-status.c:949
 msgid "You have unmerged paths."
 msgstr "Du har ej sammanslagna sökvägar."
 
-#: wt-status.c:949
+#: wt-status.c:952
 msgid "  (fix conflicts and run \"git commit\")"
 msgstr "  (rätta konflikter och kör \"git commit\")"
 
-#: wt-status.c:952
+#: wt-status.c:955
 msgid "All conflicts fixed but you are still merging."
 msgstr "Alla konflikter har rättats men du är fortfarande i en sammanslagning."
 
-#: wt-status.c:955
+#: wt-status.c:958
 msgid "  (use \"git commit\" to conclude merge)"
 msgstr "  (använd \"git commit\" för att slutföra sammanslagningen)"
 
-#: wt-status.c:965
+#: wt-status.c:968
 msgid "You are in the middle of an am session."
 msgstr "Du är i mitten av en körning av \"git am\"."
 
-#: wt-status.c:968
+#: wt-status.c:971
 msgid "The current patch is empty."
 msgstr "Aktuell patch är tom."
 
-#: wt-status.c:972
+#: wt-status.c:975
 msgid "  (fix conflicts and then run \"git am --continue\")"
 msgstr "  (rätta konflikter och kör sedan \"git am --continue\")"
 
-#: wt-status.c:974
+#: wt-status.c:977
 msgid "  (use \"git am --skip\" to skip this patch)"
 msgstr "  (använd \"git am --skip\" för att hoppa över patchen)"
 
-#: wt-status.c:976
+#: wt-status.c:979
 msgid "  (use \"git am --abort\" to restore the original branch)"
 msgstr "  (använd \"git am --abort\" för att återställa ursprungsgrenen)"
 
-#: wt-status.c:1036 wt-status.c:1053
+#: wt-status.c:1039 wt-status.c:1056
 #, c-format
 msgid "You are currently rebasing branch '%s' on '%s'."
 msgstr "Du håller på att ombasera grenen \"%s\" ovanpå \"%s\"."
 
-#: wt-status.c:1041 wt-status.c:1058
+#: wt-status.c:1044 wt-status.c:1061
 msgid "You are currently rebasing."
 msgstr "Du håller på med en ombasering."
 
-#: wt-status.c:1044
+#: wt-status.c:1047
 msgid "  (fix conflicts and then run \"git rebase --continue\")"
 msgstr "  (rätta konflikter och kör sedan \"git rebase --continue\")"
 
-#: wt-status.c:1046
+#: wt-status.c:1049
 msgid "  (use \"git rebase --skip\" to skip this patch)"
 msgstr "  (använd \"git rebase --skip\" för att hoppa över patchen)"
 
-#: wt-status.c:1048
+#: wt-status.c:1051
 msgid "  (use \"git rebase --abort\" to check out the original branch)"
 msgstr "  (använd \"git rebase --abort\" för att checka ut ursprungsgrenen)"
 
-#: wt-status.c:1061
+#: wt-status.c:1064
 msgid "  (all conflicts fixed: run \"git rebase --continue\")"
 msgstr "  (alla konflikter rättade: kör \"git rebase --continue\")"
 
-#: wt-status.c:1065
+#: wt-status.c:1068
 #, c-format
 msgid ""
 "You are currently splitting a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "Du håller på att dela upp en incheckning medan du ombaserar grenen \"%s\" "
 "ovanpå \"%s\"."
 
-#: wt-status.c:1070
+#: wt-status.c:1073
 msgid "You are currently splitting a commit during a rebase."
 msgstr "Du håller på att dela upp en incheckning i en ombasering."
 
-#: wt-status.c:1073
+#: wt-status.c:1076
 msgid "  (Once your working directory is clean, run \"git rebase --continue\")"
 msgstr "  (Så fort din arbetskatalog är ren, kör \"git rebase --continue\")"
 
-#: wt-status.c:1077
+#: wt-status.c:1080
 #, c-format
 msgid "You are currently editing a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "Du håller på att redigera en incheckning medan du ombaserar grenen \"%s\" "
 "ovanpå \"%s\"."
 
-#: wt-status.c:1082
+#: wt-status.c:1085
 msgid "You are currently editing a commit during a rebase."
 msgstr "Du håller på att redigera en incheckning under en ombasering."
 
-#: wt-status.c:1085
+#: wt-status.c:1088
 msgid "  (use \"git commit --amend\" to amend the current commit)"
 msgstr ""
 "  (använd \"git commit --amend\" för att lägga till på aktuell incheckning)"
 
-#: wt-status.c:1087
+#: wt-status.c:1090
 msgid ""
 "  (use \"git rebase --continue\" once you are satisfied with your changes)"
 msgstr "  (använd \"git rebase --continue\" när du är nöjd med dina ändringar)"
 
-#: wt-status.c:1097
+#: wt-status.c:1100
 #, c-format
 msgid "You are currently cherry-picking commit %s."
 msgstr "Du håller på med en \"cherry-pick\" av incheckningen %s."
 
-#: wt-status.c:1102
+#: wt-status.c:1105
 msgid "  (fix conflicts and run \"git cherry-pick --continue\")"
 msgstr "  (rätta konflikter och kör sedan \"git cherry-pick --continue\")"
 
-#: wt-status.c:1105
+#: wt-status.c:1108
 msgid "  (all conflicts fixed: run \"git cherry-pick --continue\")"
 msgstr "  (alla konflikter rättade: kör \"git cherry-pick --continue\")"
 
-#: wt-status.c:1107
+#: wt-status.c:1110
 msgid "  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)"
 msgstr ""
 "  (använd \"git cherry-pick --abort\" för att avbryta \"cherry-pick\"-"
 "operationen)"
 
-#: wt-status.c:1116
+#: wt-status.c:1119
 #, c-format
 msgid "You are currently reverting commit %s."
 msgstr "Du håller på med att ångra incheckningen %s."
 
-#: wt-status.c:1121
+#: wt-status.c:1124
 msgid "  (fix conflicts and run \"git revert --continue\")"
 msgstr "  (rätta konflikter och kör sedan \"git revert --continue\")"
 
-#: wt-status.c:1124
+#: wt-status.c:1127
 msgid "  (all conflicts fixed: run \"git revert --continue\")"
 msgstr "  (alla konflikter rättade: kör \"git revert --continue\")"
 
-#: wt-status.c:1126
+#: wt-status.c:1129
 msgid "  (use \"git revert --abort\" to cancel the revert operation)"
 msgstr "  (använd \"git revert --abort\" för att avbryta ångrandet)"
 
-#: wt-status.c:1137
+#: wt-status.c:1140
 #, c-format
 msgid "You are currently bisecting, started from branch '%s'."
 msgstr "Du håller på med en \"bisect\", startad från grenen \"%s\"."
 
-#: wt-status.c:1141
+#: wt-status.c:1144
 msgid "You are currently bisecting."
 msgstr "Du håller på med en \"bisect\"."
 
-#: wt-status.c:1144
+#: wt-status.c:1147
 msgid "  (use \"git bisect reset\" to get back to the original branch)"
 msgstr ""
 "  (använd \"git bisect reset\" för att komma tillbaka till ursprungsgrenen)"
 
-#: wt-status.c:1321
+#: wt-status.c:1324
 msgid "On branch "
 msgstr "På grenen "
 
-#: wt-status.c:1328
+#: wt-status.c:1331
 msgid "rebase in progress; onto "
 msgstr "ombasering pågår; ovanpå"
 
-#: wt-status.c:1333
+#: wt-status.c:1336
 msgid "HEAD detached at "
 msgstr "HEAD frånkopplad vid "
 
-#: wt-status.c:1335
+#: wt-status.c:1338
 msgid "HEAD detached from "
 msgstr "HEAD frånkopplad från "
 
-#: wt-status.c:1338
+#: wt-status.c:1341
 msgid "Not currently on any branch."
 msgstr "Inte på någon gren för närvarande."
 
-#: wt-status.c:1355
+#: wt-status.c:1358
 msgid "Initial commit"
 msgstr "Första incheckning"
 
-#: wt-status.c:1369
+#: wt-status.c:1372
 msgid "Untracked files"
 msgstr "Ospårade filer"
 
-#: wt-status.c:1371
+#: wt-status.c:1374
 msgid "Ignored files"
 msgstr "Ignorerade filer"
 
-#: wt-status.c:1375
+#: wt-status.c:1378
 #, c-format
 msgid ""
 "It took %.2f seconds to enumerate untracked files. 'status -uno'\n"
 "may speed it up, but you have to be careful not to forget to add\n"
 "new files yourself (see 'git help status')."
 msgstr ""
 "Det tog %.2f sekunder att räkna upp ospårade filer. \"status -uno\"\n"
 "kan gå snabbare, men du måste vara försiktig så du inte glömmer\n"
 "lägga till nya filer själv (se \"git help status\")."
 
 # %s är nästa sträng eller tom.
-#: wt-status.c:1381
+#: wt-status.c:1384
 #, c-format
 msgid "Untracked files not listed%s"
 msgstr "Ospårade filer visas ej%s"
 
-#: wt-status.c:1383
+#: wt-status.c:1386
 msgid " (use -u option to show untracked files)"
 msgstr " (använd flaggan -u för att visa ospårade filer)"
 
-#: wt-status.c:1389
+#: wt-status.c:1392
 msgid "No changes"
 msgstr "Inga ändringar"
 
-#: wt-status.c:1394
+#: wt-status.c:1397
 #, c-format
 msgid "no changes added to commit (use \"git add\" and/or \"git commit -a\")\n"
 msgstr ""
 "inga ändringar att checka in (använd \"git add\" och/eller \"git commit -a"
 "\")\n"
 
-#: wt-status.c:1397
+#: wt-status.c:1400
 #, c-format
 msgid "no changes added to commit\n"
 msgstr "inga ändringar att checka in\n"
 
-#: wt-status.c:1400
+#: wt-status.c:1403
 #, c-format
 msgid ""
 "nothing added to commit but untracked files present (use \"git add\" to "
 "track)\n"
 msgstr ""
 "inget köat för incheckning, men ospårade filer finns (spåra med \"git add"
 "\")\n"
 
-#: wt-status.c:1403
+#: wt-status.c:1406
 #, c-format
 msgid "nothing added to commit but untracked files present\n"
 msgstr "inget köat för incheckning, men ospårade filer finns\n"
 
-#: wt-status.c:1406
+#: wt-status.c:1409
 #, c-format
 msgid "nothing to commit (create/copy files and use \"git add\" to track)\n"
 msgstr "inget att checka in (skapa/kopiera filer och spåra med \"git add\")\n"
 
-#: wt-status.c:1409 wt-status.c:1414
+#: wt-status.c:1412 wt-status.c:1417
 #, c-format
 msgid "nothing to commit\n"
 msgstr "inget att checka in\n"
 
-#: wt-status.c:1412
+#: wt-status.c:1415
 #, c-format
 msgid "nothing to commit (use -u to show untracked files)\n"
 msgstr "inget att checka in (använd -u för att visa ospårade filer)\n"
 
-#: wt-status.c:1416
+#: wt-status.c:1419
 #, c-format
 msgid "nothing to commit, working directory clean\n"
 msgstr "inget att checka in, arbetskatalogen ren\n"
 
-#: wt-status.c:1525
+#: wt-status.c:1528
 msgid "HEAD (no branch)"
 msgstr "HEAD (ingen gren)"
 
-#: wt-status.c:1531
+#: wt-status.c:1534
 msgid "Initial commit on "
 msgstr "Första incheckning på "
 
-#: wt-status.c:1563
+#: wt-status.c:1561
 msgid "gone"
 msgstr "försvunnen"
 
-#: wt-status.c:1565 wt-status.c:1573
+#: wt-status.c:1563 wt-status.c:1571
 msgid "behind "
 msgstr "efter "
 
-#: compat/precompose_utf8.c:55 builtin/clone.c:360
+#: compat/precompose_utf8.c:55 builtin/clone.c:345
 #, c-format
 msgid "failed to unlink '%s'"
 msgstr "misslyckades ta bort länken \"%s\""
 
 #: builtin/add.c:22
 msgid "git add [<options>] [--] <pathspec>..."
@@ -1999,132 +2045,136 @@
 msgstr "ta bort \"%s\"\n"
 
 #: builtin/add.c:134
 msgid "Unstaged changes after refreshing the index:"
 msgstr "Ospårade ändringar efter att ha uppdaterat indexet:"
 
-#: builtin/add.c:194 builtin/rev-parse.c:785
+#: builtin/add.c:194 builtin/rev-parse.c:796
 msgid "Could not read the index"
 msgstr "Kunde inte läsa indexet"
 
 #: builtin/add.c:205
 #, c-format
 msgid "Could not open '%s' for writing."
 msgstr "Kunde inte öppna \"%s\" för skrivning"
 
 #: builtin/add.c:209
 msgid "Could not write patch"
 msgstr "Kunde inte skriva patch"
 
-#: builtin/add.c:214
+#: builtin/add.c:212
+msgid "editing patch failed"
+msgstr "redigering av patch misslyckades"
+
+#: builtin/add.c:215
 #, c-format
 msgid "Could not stat '%s'"
 msgstr "Kunde inte ta status på \"%s\""
 
-#: builtin/add.c:216
+#: builtin/add.c:217
 msgid "Empty patch. Aborted."
 msgstr "Tom patch. Avbryter."
 
-#: builtin/add.c:221
+#: builtin/add.c:222
 #, c-format
 msgid "Could not apply '%s'"
 msgstr "Kunde inte tillämpa \"%s\""
 
-#: builtin/add.c:231
+#: builtin/add.c:232
 msgid "The following paths are ignored by one of your .gitignore files:\n"
 msgstr "Följande sökvägar ignoreras av en av dina .gitignore-filer:\n"
 
-#: builtin/add.c:248 builtin/clean.c:876 builtin/fetch.c:107 builtin/mv.c:110
-#: builtin/prune-packed.c:55 builtin/push.c:508 builtin/remote.c:1372
-#: builtin/rm.c:269
+#: builtin/add.c:249 builtin/clean.c:874 builtin/fetch.c:107 builtin/mv.c:110
+#: builtin/prune-packed.c:55 builtin/push.c:508 builtin/remote.c:1369
+#: builtin/rm.c:268
 msgid "dry run"
 msgstr "testkörning"
 
-#: builtin/add.c:249 builtin/apply.c:4577 builtin/check-ignore.c:19
-#: builtin/commit.c:1322 builtin/count-objects.c:63 builtin/fsck.c:608
+#: builtin/add.c:250 builtin/apply.c:4580 builtin/check-ignore.c:19
+#: builtin/commit.c:1322 builtin/count-objects.c:63 builtin/fsck.c:616
 #: builtin/log.c:1617 builtin/mv.c:109 builtin/read-tree.c:114
 msgid "be verbose"
 msgstr "var pratsam"
 
-#: builtin/add.c:251
+#: builtin/add.c:252
 msgid "interactive picking"
 msgstr "plocka interaktivt"
 
-#: builtin/add.c:252 builtin/checkout.c:1126 builtin/reset.c:286
+#: builtin/add.c:253 builtin/checkout.c:1221 builtin/reset.c:286
 msgid "select hunks interactively"
 msgstr "välj stycken interaktivt"
 
-#: builtin/add.c:253
+#: builtin/add.c:254
 msgid "edit current diff and apply"
 msgstr "redigera aktuell diff och applicera"
 
-#: builtin/add.c:254
+#: builtin/add.c:255
 msgid "allow adding otherwise ignored files"
 msgstr "tillåt lägga till annars ignorerade filer"
 
-#: builtin/add.c:255
+#: builtin/add.c:256
 msgid "update tracked files"
 msgstr "uppdatera spårade filer"
 
-#: builtin/add.c:256
+#: builtin/add.c:257
 msgid "record only the fact that the path will be added later"
 msgstr "registrera endast att sökvägen kommer läggas till senare"
 
-#: builtin/add.c:257
+#: builtin/add.c:258
 msgid "add changes from all tracked and untracked files"
 msgstr "lägg till ändringar från alla spårade och ospårade filer"
 
-#: builtin/add.c:260
+#: builtin/add.c:261
 msgid "ignore paths removed in the working tree (same as --no-all)"
 msgstr "ignorera sökvägar borttagna i arbetskatalogen (samma som --no-all)"
 
-#: builtin/add.c:262
+#: builtin/add.c:263
 msgid "don't add, only refresh the index"
 msgstr "lägg inte till, uppdatera endast indexet"
 
-#: builtin/add.c:263
+#: builtin/add.c:264
 msgid "just skip files which cannot be added because of errors"
 msgstr "hoppa bara över filer som inte kan läggas till på grund av fel"
 
-#: builtin/add.c:264
+#: builtin/add.c:265
 msgid "check if - even missing - files are ignored in dry run"
 msgstr "se om - även saknade - filer ignoreras i testkörning"
 
-#: builtin/add.c:286
+#: builtin/add.c:287
 #, c-format
 msgid "Use -f if you really want to add them.\n"
 msgstr "Använd -f om du verkligen vill lägga till dem.\n"
 
-#: builtin/add.c:293
+#: builtin/add.c:294
 msgid "adding files failed"
 msgstr "misslyckades lägga till filer"
 
-#: builtin/add.c:329
+#: builtin/add.c:330
 msgid "-A and -u are mutually incompatible"
 msgstr "-A och -u är ömsesidigt inkompatibla"
 
-#: builtin/add.c:336
+#: builtin/add.c:337
 msgid "Option --ignore-missing can only be used together with --dry-run"
 msgstr "Flaggan --ignore-missing kan endast användas tillsammans med --dry-run"
 
-#: builtin/add.c:357
+#: builtin/add.c:358
 #, c-format
 msgid "Nothing specified, nothing added.\n"
 msgstr "Inget angivet, inget tillagt.\n"
 
-#: builtin/add.c:358
+#: builtin/add.c:359
 #, c-format
 msgid "Maybe you wanted to say 'git add .'?\n"
 msgstr "Kanske menade du att skriva \"git add .\"?\n"
 
-#: builtin/add.c:363 builtin/check-ignore.c:172 builtin/clean.c:920
-#: builtin/commit.c:335 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:299
+#: builtin/add.c:364 builtin/check-ignore.c:172 builtin/clean.c:918
+#: builtin/commit.c:335 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:298
 msgid "index file corrupt"
 msgstr "indexfilen trasig"
 
-#: builtin/add.c:446 builtin/apply.c:4675 builtin/mv.c:279 builtin/rm.c:431
+#: builtin/add.c:447 builtin/apply.c:4678 builtin/mv.c:279 builtin/rm.c:430
 msgid "Unable to write new index file"
 msgstr "Kunde inte skriva ny indexfil"
 
 #: builtin/apply.c:59
 msgid "git apply [<options>] [<patch>...]"
 msgstr "git apply [<flaggor>] [<patch>...]"
@@ -2197,421 +2247,421 @@
 "tas bort (rad %d)"
 msgstr[1] ""
 "git-diff-huvudet saknar filnamnsinformation när %d ledande "
 "sökvägskomponenter\n"
 "tas bort (rad %d)"
 
-#: builtin/apply.c:1656
+#: builtin/apply.c:1659
 msgid "new file depends on old contents"
 msgstr "ny fil beror på gammalt innehåll"
 
-#: builtin/apply.c:1658
+#: builtin/apply.c:1661
 msgid "deleted file still has contents"
 msgstr "borttagen fil har fortfarande innehåll"
 
-#: builtin/apply.c:1684
+#: builtin/apply.c:1687
 #, c-format
 msgid "corrupt patch at line %d"
 msgstr "trasig patch på rad %d"
 
-#: builtin/apply.c:1720
+#: builtin/apply.c:1723
 #, c-format
 msgid "new file %s depends on old contents"
 msgstr "nya filen %s beror på gammalt innehåll"
 
-#: builtin/apply.c:1722
+#: builtin/apply.c:1725
 #, c-format
 msgid "deleted file %s still has contents"
 msgstr "borttagna filen %s har fortfarande innehåll"
 
-#: builtin/apply.c:1725
+#: builtin/apply.c:1728
 #, c-format
 msgid "** warning: file %s becomes empty but is not deleted"
 msgstr "** varning: filen %s blir tom men har inte tagits bort"
 
-#: builtin/apply.c:1871
+#: builtin/apply.c:1874
 #, c-format
 msgid "corrupt binary patch at line %d: %.*s"
 msgstr "trasig binärpatch på rad %d: %.*s"
 
-#: builtin/apply.c:1900
+#: builtin/apply.c:1903
 #, c-format
 msgid "unrecognized binary patch at line %d"
 msgstr "binärpatchen på rad %d känns inte igen"
 
-#: builtin/apply.c:2051
+#: builtin/apply.c:2054
 #, c-format
 msgid "patch with only garbage at line %d"
 msgstr "patch med bara skräp på rad %d"
 
-#: builtin/apply.c:2141
+#: builtin/apply.c:2144
 #, c-format
 msgid "unable to read symlink %s"
 msgstr "kunde inte läsa symboliska länken %s"
 
-#: builtin/apply.c:2145
+#: builtin/apply.c:2148
 #, c-format
 msgid "unable to open or read %s"
 msgstr "kunde inte öppna eller läsa %s"
 
-#: builtin/apply.c:2778
+#: builtin/apply.c:2781
 #, c-format
 msgid "invalid start of line: '%c'"
 msgstr "felaktig inledning på rad: \"%c\""
 
-#: builtin/apply.c:2897
+#: builtin/apply.c:2900
 #, c-format
 msgid "Hunk #%d succeeded at %d (offset %d line)."
 msgid_plural "Hunk #%d succeeded at %d (offset %d lines)."
 msgstr[0] "Stycke %d lyckades på %d (offset %d rad)."
 msgstr[1] "Stycke %d lyckades på %d (offset %d rader)."
 
-#: builtin/apply.c:2909
+#: builtin/apply.c:2912
 #, c-format
 msgid "Context reduced to (%ld/%ld) to apply fragment at %d"
 msgstr "Sammanhang reducerat till (%ld/%ld) för att tillämpa fragment vid %d"
 
-#: builtin/apply.c:2915
+#: builtin/apply.c:2918
 #, c-format
 msgid ""
 "while searching for:\n"
 "%.*s"
 msgstr ""
 "vid sökning efter:\n"
 "%.*s"
 
-#: builtin/apply.c:2935
+#: builtin/apply.c:2938
 #, c-format
 msgid "missing binary patch data for '%s'"
 msgstr "saknar binära patchdata för \"%s\""
 
-#: builtin/apply.c:3036
+#: builtin/apply.c:3039
 #, c-format
 msgid "binary patch does not apply to '%s'"
 msgstr "binärpatchen kan inte tillämpas på \"%s\""
 
-#: builtin/apply.c:3042
+#: builtin/apply.c:3045
 #, c-format
 msgid "binary patch to '%s' creates incorrect result (expecting %s, got %s)"
 msgstr "binärpatchen på \"%s\" ger felaktigt resultat (förväntade %s, fick %s)"
 
-#: builtin/apply.c:3063
+#: builtin/apply.c:3066
 #, c-format
 msgid "patch failed: %s:%ld"
 msgstr "patch misslyckades: %s:%ld"
 
-#: builtin/apply.c:3187
+#: builtin/apply.c:3190
 #, c-format
 msgid "cannot checkout %s"
 msgstr "kan inte checka ut %s"
 
-#: builtin/apply.c:3232 builtin/apply.c:3243 builtin/apply.c:3288
+#: builtin/apply.c:3235 builtin/apply.c:3246 builtin/apply.c:3291
 #, c-format
 msgid "read of %s failed"
 msgstr "misslyckades läsa %s"
 
-#: builtin/apply.c:3240
+#: builtin/apply.c:3243
 #, c-format
 msgid "reading from '%s' beyond a symbolic link"
 msgstr "läser från \"%s\" som är på andra sidan av en symbolisk länk"
 
-#: builtin/apply.c:3268 builtin/apply.c:3490
+#: builtin/apply.c:3271 builtin/apply.c:3493
 #, c-format
 msgid "path %s has been renamed/deleted"
 msgstr "sökvägen %s har ändrat namn/tagits bort"
 
-#: builtin/apply.c:3349 builtin/apply.c:3504
+#: builtin/apply.c:3352 builtin/apply.c:3507
 #, c-format
 msgid "%s: does not exist in index"
 msgstr "%s: finns inte i indexet"
 
-#: builtin/apply.c:3353 builtin/apply.c:3496 builtin/apply.c:3518
+#: builtin/apply.c:3356 builtin/apply.c:3499 builtin/apply.c:3521
 #, c-format
 msgid "%s: %s"
 msgstr "%s: %s"
 
-#: builtin/apply.c:3358 builtin/apply.c:3512
+#: builtin/apply.c:3361 builtin/apply.c:3515
 #, c-format
 msgid "%s: does not match index"
 msgstr "%s: motsvarar inte indexet"
 
-#: builtin/apply.c:3460
+#: builtin/apply.c:3463
 msgid "removal patch leaves file contents"
 msgstr "patch för borttagning lämnar kvar filinnehåll"
 
-#: builtin/apply.c:3529
+#: builtin/apply.c:3532
 #, c-format
 msgid "%s: wrong type"
 msgstr "%s: fel typ"
 
-#: builtin/apply.c:3531
+#: builtin/apply.c:3534
 #, c-format
 msgid "%s has type %o, expected %o"
 msgstr "%s har typen %o, förväntade %o"
 
-#: builtin/apply.c:3690 builtin/apply.c:3692
+#: builtin/apply.c:3693 builtin/apply.c:3695
 #, c-format
 msgid "invalid path '%s'"
 msgstr "ogiltig sökväg: %s"
 
-#: builtin/apply.c:3747
+#: builtin/apply.c:3750
 #, c-format
 msgid "%s: already exists in index"
 msgstr "%s: finns redan i indexet"
 
-#: builtin/apply.c:3750
+#: builtin/apply.c:3753
 #, c-format
 msgid "%s: already exists in working directory"
 msgstr "%s: finns redan i arbetskatalogen"
 
-#: builtin/apply.c:3770
+#: builtin/apply.c:3773
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o)"
 msgstr "nytt läge (%o) för %s motsvarar inte gammalt läge (%o)"
 
-#: builtin/apply.c:3775
+#: builtin/apply.c:3778
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o) of %s"
 msgstr "nytt läge (%o) för %s motsvarar inte gammalt läge (%o) för %s"
 
-#: builtin/apply.c:3795
+#: builtin/apply.c:3798
 #, c-format
 msgid "affected file '%s' is beyond a symbolic link"
 msgstr "den berörda filen \"%s\" är på andra sidan av en symbolisk länk"
 
-#: builtin/apply.c:3799
+#: builtin/apply.c:3802
 #, c-format
 msgid "%s: patch does not apply"
 msgstr "%s: patchen kan inte tillämpas"
 
-#: builtin/apply.c:3813
+#: builtin/apply.c:3816
 #, c-format
 msgid "Checking patch %s..."
 msgstr "Kontrollerar patchen %s..."
 
-#: builtin/apply.c:3906 builtin/checkout.c:231 builtin/reset.c:135
+#: builtin/apply.c:3909 builtin/checkout.c:233 builtin/reset.c:135
 #, c-format
 msgid "make_cache_entry failed for path '%s'"
 msgstr "make_cache_entry misslyckades för sökvägen \"%s\""
 
-#: builtin/apply.c:4049
+#: builtin/apply.c:4052
 #, c-format
 msgid "unable to remove %s from index"
 msgstr "kan inte ta bort %s från indexet"
 
-#: builtin/apply.c:4078
+#: builtin/apply.c:4081
 #, c-format
 msgid "corrupt patch for submodule %s"
 msgstr "trasig patch för undermodulen %s"
 
-#: builtin/apply.c:4082
+#: builtin/apply.c:4085
 #, c-format
 msgid "unable to stat newly created file '%s'"
 msgstr "kan inte ta status på nyligen skapade filen \"%s\""
 
-#: builtin/apply.c:4087
+#: builtin/apply.c:4090
 #, c-format
 msgid "unable to create backing store for newly created file %s"
 msgstr "kan inte skapa säkerhetsminne för nyligen skapade filen %s"
 
-#: builtin/apply.c:4090 builtin/apply.c:4198
+#: builtin/apply.c:4093 builtin/apply.c:4201
 #, c-format
 msgid "unable to add cache entry for %s"
 msgstr "kan inte lägga till cachepost för %s"
 
-#: builtin/apply.c:4123
+#: builtin/apply.c:4126
 #, c-format
 msgid "closing file '%s'"
 msgstr "stänger filen \"%s\""
 
-#: builtin/apply.c:4172
+#: builtin/apply.c:4175
 #, c-format
 msgid "unable to write file '%s' mode %o"
 msgstr "kan inte skriva filen \"%s\" läge %o"
 
-#: builtin/apply.c:4259
+#: builtin/apply.c:4262
 #, c-format
 msgid "Applied patch %s cleanly."
 msgstr "Tillämpade patchen %s rent."
 
-#: builtin/apply.c:4267
+#: builtin/apply.c:4270
 msgid "internal error"
 msgstr "internt fel"
 
-#: builtin/apply.c:4270
+#: builtin/apply.c:4273
 #, c-format
 msgid "Applying patch %%s with %d reject..."
 msgid_plural "Applying patch %%s with %d rejects..."
 msgstr[0] "Tillämpade patchen %%s med %d refuserad..."
 msgstr[1] "Tillämpade patchen %%s med %d refuserade..."
 
-#: builtin/apply.c:4280
+#: builtin/apply.c:4283
 #, c-format
 msgid "truncating .rej filename to %.*s.rej"
 msgstr "trunkerar .rej-filnamnet till %.*s.rej"
 
-#: builtin/apply.c:4301
+#: builtin/apply.c:4304
 #, c-format
 msgid "Hunk #%d applied cleanly."
 msgstr "Stycke %d tillämpades rent."
 
-#: builtin/apply.c:4304
+#: builtin/apply.c:4307
 #, c-format
 msgid "Rejected hunk #%d."
 msgstr "Refuserar stycke %d."
 
-#: builtin/apply.c:4394
+#: builtin/apply.c:4397
 msgid "unrecognized input"
 msgstr "indata känns inte igen"
 
-#: builtin/apply.c:4405
+#: builtin/apply.c:4408
 msgid "unable to read index file"
 msgstr "kan inte läsa indexfilen"
 
-#: builtin/apply.c:4522 builtin/apply.c:4525 builtin/clone.c:92
+#: builtin/apply.c:4525 builtin/apply.c:4528 builtin/clone.c:85
 #: builtin/fetch.c:92
 msgid "path"
 msgstr "sökväg"
 
-#: builtin/apply.c:4523
+#: builtin/apply.c:4526
 msgid "don't apply changes matching the given path"
 msgstr "tillämpa inte ändringar som motsvarar given sökväg"
 
-#: builtin/apply.c:4526
+#: builtin/apply.c:4529
 msgid "apply changes matching the given path"
 msgstr "tillämpa ändringar som motsvarar given sökväg"
 
-#: builtin/apply.c:4528
+#: builtin/apply.c:4531
 msgid "num"
 msgstr "antal"
 
-#: builtin/apply.c:4529
+#: builtin/apply.c:4532
 msgid "remove <num> leading slashes from traditional diff paths"
 msgstr "ta bort <antal> inledande snedstreck från traditionella diff-sökvägar"
 
-#: builtin/apply.c:4532
+#: builtin/apply.c:4535
 msgid "ignore additions made by the patch"
 msgstr "ignorera tillägg gjorda av patchen"
 
-#: builtin/apply.c:4534
+#: builtin/apply.c:4537
 msgid "instead of applying the patch, output diffstat for the input"
 msgstr "istället för att tillämpa patchen, skriv ut diffstat för indata"
 
-#: builtin/apply.c:4538
+#: builtin/apply.c:4541
 msgid "show number of added and deleted lines in decimal notation"
 msgstr "visa antal tillagda och borttagna rader decimalt"
 
-#: builtin/apply.c:4540
+#: builtin/apply.c:4543
 msgid "instead of applying the patch, output a summary for the input"
 msgstr "istället för att tillämpa patchen, skriv ut en summering av indata"
 
-#: builtin/apply.c:4542
+#: builtin/apply.c:4545
 msgid "instead of applying the patch, see if the patch is applicable"
 msgstr "istället för att tillämpa patchen, se om patchen kan tillämpas"
 
-#: builtin/apply.c:4544
+#: builtin/apply.c:4547
 msgid "make sure the patch is applicable to the current index"
 msgstr "se till att patchen kan tillämpas på aktuellt index"
 
-#: builtin/apply.c:4546
+#: builtin/apply.c:4549
 msgid "apply a patch without touching the working tree"
 msgstr "tillämpa en patch utan att röra arbetskatalogen"
 
-#: builtin/apply.c:4548
+#: builtin/apply.c:4551
 msgid "accept a patch that touches outside the working area"
 msgstr "godta en patch som rör filer utanför arbetskatalogen"
 
-#: builtin/apply.c:4550
+#: builtin/apply.c:4553
 msgid "also apply the patch (use with --stat/--summary/--check)"
 msgstr "tillämpa också patchen (använd med --stat/--summary/--check)"
 
-#: builtin/apply.c:4552
+#: builtin/apply.c:4555
 msgid "attempt three-way merge if a patch does not apply"
 msgstr "försök en trevägssammanslagning om patchen inte kan tillämpas"
 
-#: builtin/apply.c:4554
+#: builtin/apply.c:4557
 msgid "build a temporary index based on embedded index information"
 msgstr "bygg ett temporärt index baserat på inbyggd indexinformation"
 
-#: builtin/apply.c:4556 builtin/checkout-index.c:198 builtin/ls-files.c:412
+#: builtin/apply.c:4559 builtin/checkout-index.c:198 builtin/ls-files.c:412
 msgid "paths are separated with NUL character"
 msgstr "sökvägar avdelas med NUL-tecken"
 
-#: builtin/apply.c:4559
+#: builtin/apply.c:4562
 msgid "ensure at least <n> lines of context match"
 msgstr "se till att åtminstone <n> rader sammanhang är lika"
 
-#: builtin/apply.c:4560
+#: builtin/apply.c:4563
 msgid "action"
 msgstr "åtgärd"
 
-#: builtin/apply.c:4561
+#: builtin/apply.c:4564
 msgid "detect new or modified lines that have whitespace errors"
 msgstr "detektera nya eller ändrade rader som har fel i blanktecken"
 
-#: builtin/apply.c:4564 builtin/apply.c:4567
+#: builtin/apply.c:4567 builtin/apply.c:4570
 msgid "ignore changes in whitespace when finding context"
 msgstr "ignorera ändringar i blanktecken för sammanhang"
 
-#: builtin/apply.c:4570
+#: builtin/apply.c:4573
 msgid "apply the patch in reverse"
 msgstr "tillämpa patchen baklänges"
 
-#: builtin/apply.c:4572
+#: builtin/apply.c:4575
 msgid "don't expect at least one line of context"
 msgstr "förvänta inte minst en rad sammanhang"
 
-#: builtin/apply.c:4574
+#: builtin/apply.c:4577
 msgid "leave the rejected hunks in corresponding *.rej files"
 msgstr "lämna refuserade stycken i motsvarande *.rej-filer"
 
-#: builtin/apply.c:4576
+#: builtin/apply.c:4579
 msgid "allow overlapping hunks"
 msgstr "tillåt överlappande stycken"
 
-#: builtin/apply.c:4579
+#: builtin/apply.c:4582
 msgid "tolerate incorrectly detected missing new-line at the end of file"
 msgstr "tolerera felaktigt detekterade saknade nyradstecken vid filslut"
 
-#: builtin/apply.c:4582
+#: builtin/apply.c:4585
 msgid "do not trust the line counts in the hunk headers"
 msgstr "lite inte på antalet linjer i styckehuvuden"
 
-#: builtin/apply.c:4584
+#: builtin/apply.c:4587
 msgid "root"
 msgstr "rot"
 
-#: builtin/apply.c:4585
+#: builtin/apply.c:4588
 msgid "prepend <root> to all filenames"
 msgstr "lägg till <rot> i alla filnamn"
 
-#: builtin/apply.c:4607
+#: builtin/apply.c:4610
 msgid "--3way outside a repository"
 msgstr "--3way utanför arkiv"
 
-#: builtin/apply.c:4615
+#: builtin/apply.c:4618
 msgid "--index outside a repository"
 msgstr "--index utanför arkiv"
 
-#: builtin/apply.c:4618
+#: builtin/apply.c:4621
 msgid "--cached outside a repository"
 msgstr "--cached utanför arkiv"
 
-#: builtin/apply.c:4637
+#: builtin/apply.c:4640
 #, c-format
 msgid "can't open patch '%s'"
 msgstr "kan inte öppna patchen \"%s\""
 
-#: builtin/apply.c:4651
+#: builtin/apply.c:4654
 #, c-format
 msgid "squelched %d whitespace error"
 msgid_plural "squelched %d whitespace errors"
 msgstr[0] "undertryckte %d fel i blanksteg"
 msgstr[1] "undertryckte %d fel i blanksteg"
 
-#: builtin/apply.c:4657 builtin/apply.c:4667
+#: builtin/apply.c:4660 builtin/apply.c:4670
 #, c-format
 msgid "%d line adds whitespace errors."
 msgid_plural "%d lines add whitespace errors."
 msgstr[0] "%d rad lägger till fel i blanksteg."
 msgstr[1] "%d rader lägger till fel i blanksteg."
 
@@ -2659,17 +2709,17 @@
 msgstr "utför 'git bisect next'"
 
 #: builtin/bisect--helper.c:19
 msgid "update BISECT_HEAD instead of checking out the current commit"
 msgstr "uppdatera BISECT_HEAD istället för att checka ut aktuell incheckning"
 
-#: builtin/blame.c:30
-msgid "git blame [<options>] [<rev-opts>] [<rev>] [--] file"
-msgstr "git blame [<flaggor>] [<rev-flaggor>] [<rev>] [--] fil"
+#: builtin/blame.c:31
+msgid "git blame [<options>] [<rev-opts>] [<rev>] [--] <file>"
+msgstr "git blame [<flaggor>] [<rev-flaggor>] [<rev>] [--] <fil>"
 
-#: builtin/blame.c:35
+#: builtin/blame.c:36
 msgid "<rev-opts> are documented in git-rev-list(1)"
 msgstr "<rev-flaggor> dokumenteras i git-rev-list(1)"
 
 #: builtin/blame.c:2500
 msgid "Show blame entries as we find them, incrementally"
 msgstr "Visa klandringsposter när vi hittar dem, interaktivt"
@@ -2785,468 +2835,484 @@
 msgstr "git branch [<flaggor>] [-r] (-d | -D) <grennamn>..."
 
 #: builtin/branch.c:27
 msgid "git branch [<options>] (-m | -M) [<old-branch>] <new-branch>"
 msgstr "git branch [<flaggor>] (-m | -M) [<gammal_gren>] <ny_gren>"
 
-#: builtin/branch.c:152
+#: builtin/branch.c:150
 #, c-format
 msgid ""
 "deleting branch '%s' that has been merged to\n"
 "         '%s', but not yet merged to HEAD."
 msgstr ""
 "tar bort grenen \"%s\" som har slagits ihop med\n"
 "         \"%s\", men ännu inte slagits ihop med HEAD."
 
-#: builtin/branch.c:156
+#: builtin/branch.c:154
 #, c-format
 msgid ""
 "not deleting branch '%s' that is not yet merged to\n"
 "         '%s', even though it is merged to HEAD."
 msgstr ""
 "tar inte bort grenen \"%s\" som inte har slagits ihop med\n"
 "         \"%s\", trots att den har slagits ihop med HEAD."
 
-#: builtin/branch.c:170
+#: builtin/branch.c:168
 #, c-format
 msgid "Couldn't look up commit object for '%s'"
 msgstr "Kunde inte slå upp incheckningsobjekt för \"%s\""
 
-#: builtin/branch.c:174
+#: builtin/branch.c:172
 #, c-format
 msgid ""
 "The branch '%s' is not fully merged.\n"
 "If you are sure you want to delete it, run 'git branch -D %s'."
 msgstr ""
 "Grenen \"%s\" har inte slagits samman i sin helhet.\n"
 "Om du är säker på att du vill ta bort den, kör \"git branch -D %s\"."
 
-#: builtin/branch.c:187
+#: builtin/branch.c:185
 msgid "Update of config-file failed"
 msgstr "Misslyckades uppdatera konfigurationsfil"
 
-#: builtin/branch.c:215
+#: builtin/branch.c:213
 msgid "cannot use -a with -d"
 msgstr "kan inte ange -a med -d"
 
-#: builtin/branch.c:221
+#: builtin/branch.c:219
 msgid "Couldn't look up commit object for HEAD"
 msgstr "Kunde inte slå upp incheckningsobjekt för HEAD"
 
-#: builtin/branch.c:229
+#: builtin/branch.c:227
 #, c-format
 msgid "Cannot delete the branch '%s' which you are currently on."
 msgstr "Kan inte ta bort grenen \"%s\" som du befinner dig på för närvarande."
 
-#: builtin/branch.c:245
+#: builtin/branch.c:243
 #, c-format
-msgid "remote branch '%s' not found."
-msgstr "fjärrgrenen \"%s\" hittades inte."
+msgid "remote-tracking branch '%s' not found."
+msgstr "fjärrspårande grenen \"%s\" hittades inte."
 
-#: builtin/branch.c:246
+#: builtin/branch.c:244
 #, c-format
 msgid "branch '%s' not found."
 msgstr "grenen \"%s\" hittades inte."
 
-#: builtin/branch.c:260
+#: builtin/branch.c:258
 #, c-format
-msgid "Error deleting remote branch '%s'"
-msgstr "Fel vid borttagning av fjärrgrenen \"%s\""
+msgid "Error deleting remote-tracking branch '%s'"
+msgstr "Fel vid borttagning av fjärrspårande grenen \"%s\""
 
-#: builtin/branch.c:261
+#: builtin/branch.c:259
 #, c-format
 msgid "Error deleting branch '%s'"
 msgstr "Fel vid borttagning av grenen \"%s\""
 
-#: builtin/branch.c:268
+#: builtin/branch.c:266
 #, c-format
-msgid "Deleted remote branch %s (was %s).\n"
-msgstr "Tog bort fjärrgrenen %s (var %s).\n"
+msgid "Deleted remote-tracking branch %s (was %s).\n"
+msgstr "Tog bort fjärrspårande grenen %s (var %s).\n"
 
-#: builtin/branch.c:269
+#: builtin/branch.c:267
 #, c-format
 msgid "Deleted branch %s (was %s).\n"
 msgstr "Tog bort grenen %s (var %s).\n"
 
-#: builtin/branch.c:370
+#: builtin/branch.c:368
 #, c-format
 msgid "branch '%s' does not point at a commit"
 msgstr "grenen \"%s\" pekar inte på en incheckning"
 
-#: builtin/branch.c:459
+#: builtin/branch.c:451
 #, c-format
 msgid "[%s: gone]"
 msgstr "[%s: försvunnen]"
 
-#: builtin/branch.c:464
+#: builtin/branch.c:456
 #, c-format
 msgid "[%s]"
 msgstr "[%s]"
 
-#: builtin/branch.c:469
+#: builtin/branch.c:461
 #, c-format
 msgid "[%s: behind %d]"
 msgstr "[%s: bakom %d] "
 
-#: builtin/branch.c:471
+#: builtin/branch.c:463
 #, c-format
 msgid "[behind %d]"
 msgstr "[bakom %d] "
 
-#: builtin/branch.c:475
+#: builtin/branch.c:467
 #, c-format
 msgid "[%s: ahead %d]"
 msgstr "[%s: före %d] "
 
-#: builtin/branch.c:477
+#: builtin/branch.c:469
 #, c-format
 msgid "[ahead %d]"
 msgstr "[före %d] "
 
-#: builtin/branch.c:480
+#: builtin/branch.c:472
 #, c-format
 msgid "[%s: ahead %d, behind %d]"
 msgstr "[%s: före %d, bakom %d] "
 
-#: builtin/branch.c:483
+#: builtin/branch.c:475
 #, c-format
 msgid "[ahead %d, behind %d]"
 msgstr "[före %d, bakom %d] "
 
-#: builtin/branch.c:496
+#: builtin/branch.c:488
 msgid " **** invalid ref ****"
 msgstr " **** ogiltig ref ****"
 
-#: builtin/branch.c:587
+#: builtin/branch.c:579
 #, c-format
 msgid "(no branch, rebasing %s)"
 msgstr "(ingen gren, ombaserar %s)"
 
-#: builtin/branch.c:590
+#: builtin/branch.c:582
 #, c-format
 msgid "(no branch, bisect started on %s)"
 msgstr "(ingen gren, \"bisect\" startad på %s)"
 
-#: builtin/branch.c:596
+#: builtin/branch.c:588
 #, c-format
 msgid "(HEAD detached at %s)"
 msgstr "(HEAD frånkopplat vid %s)"
 
-#: builtin/branch.c:599
+#: builtin/branch.c:591
 #, c-format
 msgid "(HEAD detached from %s)"
 msgstr "(HEAD frånkopplat från %s)"
 
-#: builtin/branch.c:603
+#: builtin/branch.c:595
 msgid "(no branch)"
 msgstr "(ingen gren)"
 
-#: builtin/branch.c:650
+#: builtin/branch.c:642
 #, c-format
 msgid "object '%s' does not point to a commit"
 msgstr "objektet \"%s\" pekar på en incheckning"
 
-#: builtin/branch.c:698
+#: builtin/branch.c:690
 msgid "some refs could not be read"
 msgstr "vissa referenser kunde inte läsas"
 
-#: builtin/branch.c:711
+#: builtin/branch.c:703
 msgid "cannot rename the current branch while not on any."
 msgstr ""
 "kunde inte byta namn på aktuell gren när du inte befinner dig på någon."
 
-#: builtin/branch.c:721
+#: builtin/branch.c:713
 #, c-format
 msgid "Invalid branch name: '%s'"
 msgstr "Felaktigt namn på gren: \"%s\""
 
-#: builtin/branch.c:736
+#: builtin/branch.c:728
 msgid "Branch rename failed"
 msgstr "Misslyckades byta namn på gren"
 
-#: builtin/branch.c:740
+#: builtin/branch.c:732
 #, c-format
 msgid "Renamed a misnamed branch '%s' away"
 msgstr "Bytte bort namn på en felaktigt namngiven gren \"%s\""
 
-#: builtin/branch.c:744
+#: builtin/branch.c:736
 #, c-format
 msgid "Branch renamed to %s, but HEAD is not updated!"
 msgstr "Grenen namnbytt till %s, men HEAD har inte uppdaterats!"
 
-#: builtin/branch.c:751
+#: builtin/branch.c:743
 msgid "Branch is renamed, but update of config-file failed"
 msgstr "Grenen namnbytt, men misslyckades uppdatera konfigurationsfilen"
 
-#: builtin/branch.c:766
+#: builtin/branch.c:758
 #, c-format
 msgid "malformed object name %s"
 msgstr "felformat objektnamn %s"
 
-#: builtin/branch.c:790
+#: builtin/branch.c:780
 #, c-format
 msgid "could not write branch description template: %s"
 msgstr "kunde inte skriva grenbeskrivningsmall: %s"
 
-#: builtin/branch.c:820
+#: builtin/branch.c:810
 msgid "Generic options"
 msgstr "Allmänna flaggor"
 
-#: builtin/branch.c:822
+#: builtin/branch.c:812
 msgid "show hash and subject, give twice for upstream branch"
 msgstr "visa hash och ärenderad, ange två gånger för uppströmsgren"
 
-#: builtin/branch.c:823
+#: builtin/branch.c:813
 msgid "suppress informational messages"
 msgstr "undertryck informationsmeddelanden"
 
-#: builtin/branch.c:824
+#: builtin/branch.c:814
 msgid "set up tracking mode (see git-pull(1))"
 msgstr "ställ in spårningsläge (se git-pull(1))"
 
-#: builtin/branch.c:826
+#: builtin/branch.c:816
 msgid "change upstream info"
 msgstr "ändra uppströmsinformation"
 
-#: builtin/branch.c:830
+#: builtin/branch.c:820
 msgid "use colored output"
 msgstr "använd färgad utdata"
 
-#: builtin/branch.c:831
+#: builtin/branch.c:821
 msgid "act on remote-tracking branches"
 msgstr "arbeta på fjärrspårande grenar"
 
-#: builtin/branch.c:834 builtin/branch.c:840 builtin/branch.c:861
-#: builtin/branch.c:867 builtin/commit.c:1582 builtin/commit.c:1583
-#: builtin/commit.c:1584 builtin/commit.c:1585 builtin/tag.c:616
+#: builtin/branch.c:824 builtin/branch.c:830 builtin/branch.c:851
+#: builtin/branch.c:857 builtin/commit.c:1581 builtin/commit.c:1582
+#: builtin/commit.c:1583 builtin/commit.c:1584 builtin/tag.c:616
 #: builtin/tag.c:622
 msgid "commit"
 msgstr "incheckning"
 
-#: builtin/branch.c:835 builtin/branch.c:841
+#: builtin/branch.c:825 builtin/branch.c:831
 msgid "print only branches that contain the commit"
 msgstr "visa endast grenar som innehåller incheckningen"
 
-#: builtin/branch.c:847
+#: builtin/branch.c:837
 msgid "Specific git-branch actions:"
 msgstr "Specifika git-branch-åtgärder:"
 
-#: builtin/branch.c:848
+#: builtin/branch.c:838
 msgid "list both remote-tracking and local branches"
 msgstr "visa både fjärrspårande och lokala grenar"
 
-#: builtin/branch.c:850
+#: builtin/branch.c:840
 msgid "delete fully merged branch"
 msgstr "ta bort helt sammanslagen gren"
 
-#: builtin/branch.c:851
+#: builtin/branch.c:841
 msgid "delete branch (even if not merged)"
 msgstr "ta bort gren (även om inte helt sammanslagen)"
 
-#: builtin/branch.c:852
+#: builtin/branch.c:842
 msgid "move/rename a branch and its reflog"
 msgstr "flytta/ta bort en gren och dess reflogg"
 
-#: builtin/branch.c:853
+#: builtin/branch.c:843
 msgid "move/rename a branch, even if target exists"
 msgstr "flytta/ta bort en gren, även om målet finns"
 
-#: builtin/branch.c:854
+#: builtin/branch.c:844
 msgid "list branch names"
 msgstr "lista namn på grenar"
 
-#: builtin/branch.c:855
+#: builtin/branch.c:845
 msgid "create the branch's reflog"
 msgstr "skapa grenens reflogg"
 
-#: builtin/branch.c:857
+#: builtin/branch.c:847
 msgid "edit the description for the branch"
 msgstr "redigera beskrivning för grenen"
 
-#: builtin/branch.c:858
+#: builtin/branch.c:848
 msgid "force creation, move/rename, deletion"
 msgstr "tvinga skapande, flytt/namnändring, borttagande"
 
-#: builtin/branch.c:861
+#: builtin/branch.c:851
 msgid "print only not merged branches"
 msgstr "visa endast ej sammanslagna grenar"
 
-#: builtin/branch.c:867
+#: builtin/branch.c:857
 msgid "print only merged branches"
 msgstr "visa endast sammanslagna grenar"
 
-#: builtin/branch.c:871
+#: builtin/branch.c:861
 msgid "list branches in columns"
 msgstr "visa grenar i spalter"
 
-#: builtin/branch.c:884
+#: builtin/branch.c:874
 msgid "Failed to resolve HEAD as a valid ref."
 msgstr "Misslyckades slå upp HEAD som giltig referens"
 
-#: builtin/branch.c:888 builtin/clone.c:637
+#: builtin/branch.c:878 builtin/clone.c:622
 msgid "HEAD not found below refs/heads!"
 msgstr "HEAD hittades inte under refs/heads!"
 
-#: builtin/branch.c:910
+#: builtin/branch.c:900
 msgid "--column and --verbose are incompatible"
 msgstr "--column och --verbose är inkompatibla"
 
-#: builtin/branch.c:921 builtin/branch.c:960
+#: builtin/branch.c:911 builtin/branch.c:950
 msgid "branch name required"
 msgstr "grennamn krävs"
 
-#: builtin/branch.c:936
+#: builtin/branch.c:926
 msgid "Cannot give description to detached HEAD"
 msgstr "Kan inte beskriva frånkopplad HEAD"
 
-#: builtin/branch.c:941
+#: builtin/branch.c:931
 msgid "cannot edit description of more than one branch"
 msgstr "kan inte redigera beskrivning för mer än en gren"
 
-#: builtin/branch.c:948
+#: builtin/branch.c:938
 #, c-format
 msgid "No commit on branch '%s' yet."
 msgstr "Inga incheckningar på grenen \"%s\" ännu"
 
-#: builtin/branch.c:951
+#: builtin/branch.c:941
 #, c-format
 msgid "No branch named '%s'."
 msgstr "Ingen gren vid namnet \"%s\"."
 
-#: builtin/branch.c:966
+#: builtin/branch.c:956
 msgid "too many branches for a rename operation"
 msgstr "för många grenar för namnbyte"
 
-#: builtin/branch.c:971
+#: builtin/branch.c:961
 msgid "too many branches to set new upstream"
 msgstr "för många grenar för att byta uppström"
 
-#: builtin/branch.c:975
+#: builtin/branch.c:965
 #, c-format
 msgid ""
 "could not set upstream of HEAD to %s when it does not point to any branch."
 msgstr ""
 "kunde inte sätta uppström för HEAD till %s när det inte pekar mot någon gren."
 
-#: builtin/branch.c:978 builtin/branch.c:1000 builtin/branch.c:1021
+#: builtin/branch.c:968 builtin/branch.c:990 builtin/branch.c:1011
 #, c-format
 msgid "no such branch '%s'"
 msgstr "okänd gren \"%s\""
 
-#: builtin/branch.c:982
+#: builtin/branch.c:972
 #, c-format
 msgid "branch '%s' does not exist"
 msgstr "grenen \"%s\" finns inte"
 
-#: builtin/branch.c:994
+#: builtin/branch.c:984
 msgid "too many branches to unset upstream"
 msgstr "för många grenar för att ta bort uppström"
 
-#: builtin/branch.c:998
+#: builtin/branch.c:988
 msgid "could not unset upstream of HEAD when it does not point to any branch."
 msgstr ""
 "kunde inte ta bort uppström för HEAD när det inte pekar mot någon gren."
 
-#: builtin/branch.c:1004
+#: builtin/branch.c:994
 #, c-format
 msgid "Branch '%s' has no upstream information"
 msgstr "Grenen \"%s\" har ingen uppströmsinformation"
 
-#: builtin/branch.c:1018
+#: builtin/branch.c:1008
 msgid "it does not make sense to create 'HEAD' manually"
 msgstr "kan inte skapa \"HEAD\" manuellt"
 
-#: builtin/branch.c:1024
+#: builtin/branch.c:1014
 msgid "-a and -r options to 'git branch' do not make sense with a branch name"
 msgstr ""
 "flaggorna -a och -r på \"git branch\" kan inte anges tillsammans med ett "
 "grennamn"
 
-#: builtin/branch.c:1027
+#: builtin/branch.c:1017
 #, c-format
 msgid ""
 "The --set-upstream flag is deprecated and will be removed. Consider using --"
 "track or --set-upstream-to\n"
 msgstr ""
 "Flaggan --set-upstream rekommenderas ej och kommer tas bort. Använd --track "
 "eller --set-upstream-to\n"
 
-#: builtin/branch.c:1044
+#: builtin/branch.c:1034
 #, c-format
 msgid ""
 "\n"
 "If you wanted to make '%s' track '%s', do this:\n"
 "\n"
 msgstr ""
 "\n"
 "Om du vill göra så att \"%s\" spårar \"%s\" gör du så här:\n"
 "\n"
 
-#: builtin/branch.c:1045
+#: builtin/branch.c:1035
 #, c-format
 msgid "    git branch -d %s\n"
 msgstr "    git branch -d %s\n"
 
-#: builtin/branch.c:1046
+#: builtin/branch.c:1036
 #, c-format
 msgid "    git branch --set-upstream-to %s\n"
 msgstr "    git branch --set-upstream-to %s\n"
 
-#: builtin/bundle.c:47
+#: builtin/bundle.c:51
 #, c-format
 msgid "%s is okay\n"
 msgstr "%s är okej\n"
 
-#: builtin/bundle.c:56
+#: builtin/bundle.c:64
 msgid "Need a repository to create a bundle."
 msgstr "Behöver ett arkiv för att skapa ett paket (bundle)."
 
-#: builtin/bundle.c:60
+#: builtin/bundle.c:68
 msgid "Need a repository to unbundle."
 msgstr "Behöver ett arkiv för att packa upp ett paket (bundle)."
 
-#: builtin/cat-file.c:326
-msgid "git cat-file (-t | -s | -e | -p | <type> | --textconv) <object>"
-msgstr "git cat-file (-t | -s | -e | -p | <typ> | --textconv) <objekt>"
-
-#: builtin/cat-file.c:327
-msgid "git cat-file (--batch | --batch-check) < <list-of-objects>"
-msgstr "git cat-file (--batch | --batch-check) < <objektlista>"
+#: builtin/cat-file.c:369
+msgid ""
+"git cat-file (-t [--allow-unknown-type]|-s [--allow-unknown-type]|-e|-p|"
+"<type>|--textconv) <object>"
+msgstr ""
+"git cat-file (-t [--allow-unknown-type]|-s [--allow-unknown-type]|-e|-p|"
+"<typ>|--textconv) <objekt>"
+
+#: builtin/cat-file.c:370
+msgid ""
+"git cat-file (--batch | --batch-check) [--follow-symlinks] < <list-of-"
+"objects>"
+msgstr ""
+"git cat-file (--batch | --batch-check) [--follow-symlinks] < <objektlista>"
 
-#: builtin/cat-file.c:364
+#: builtin/cat-file.c:407
 msgid "<type> can be one of: blob, tree, commit, tag"
 msgstr "<typ> kan vara en av: blob, tree, commit, tag"
 
-#: builtin/cat-file.c:365
+#: builtin/cat-file.c:408
 msgid "show object type"
 msgstr "visa objekttyp"
 
-#: builtin/cat-file.c:366
+#: builtin/cat-file.c:409
 msgid "show object size"
 msgstr "visa objektstorlek"
 
-#: builtin/cat-file.c:368
+#: builtin/cat-file.c:411
 msgid "exit with zero when there's no error"
 msgstr "avsluta med noll när det inte uppstått något fel"
 
-#: builtin/cat-file.c:369
+#: builtin/cat-file.c:412
 msgid "pretty-print object's content"
 msgstr "visa objektets innehåll snyggt"
 
-#: builtin/cat-file.c:371
+#: builtin/cat-file.c:414
 msgid "for blob objects, run textconv on object's content"
 msgstr "för blob-objekt, kör textconv på objektets innehåll"
 
-#: builtin/cat-file.c:373
+#: builtin/cat-file.c:416
+msgid "allow -s and -t to work with broken/corrupt objects"
+msgstr "låter -s och -t att fungera med trasiga/sönderskrivna objekt"
+
+#: builtin/cat-file.c:418
 msgid "show info and content of objects fed from the standard input"
 msgstr "visa information och innehåll för objekt som listas på standard in"
 
-#: builtin/cat-file.c:376
+#: builtin/cat-file.c:421
 msgid "show info about objects fed from the standard input"
 msgstr "visa information för objekt som listas på standard in"
 
+#: builtin/cat-file.c:424
+msgid "follow in-tree symlinks (used with --batch or --batch-check)"
+msgstr ""
+"följ symboliska länkar i trädet (använd med --batch eller --batch-check)"
+
 #: builtin/check-attr.c:11
 msgid "git check-attr [-a | --all | <attr>...] [--] <pathname>..."
 msgstr "git check-attr [-a | --all | <attr>...] [--] <sökväg>..."
 
 #: builtin/check-attr.c:12
 msgid "git check-attr --stdin [-z] [-a | --all | <attr>...] < <list-of-paths>"
@@ -3257,21 +3323,21 @@
 msgstr "visa alla attribut som satts på filen"
 
 #: builtin/check-attr.c:20
 msgid "use .gitattributes only from the index"
 msgstr "använd .gitattributes endast från indexet"
 
-#: builtin/check-attr.c:21 builtin/check-ignore.c:22 builtin/hash-object.c:98
+#: builtin/check-attr.c:21 builtin/check-ignore.c:22 builtin/hash-object.c:96
 msgid "read file names from stdin"
 msgstr "läs filnamn från standard in"
 
 #: builtin/check-attr.c:23 builtin/check-ignore.c:24
 msgid "terminate input and output records by a NUL character"
 msgstr "avsluta in- och utdataposter med NUL-tecken"
 
-#: builtin/check-ignore.c:18 builtin/checkout.c:1107 builtin/gc.c:274
+#: builtin/check-ignore.c:18 builtin/checkout.c:1202 builtin/gc.c:279
 msgid "suppress progress reporting"
 msgstr "undertryck förloppsrapportering"
 
 #: builtin/check-ignore.c:26
 msgid "show non-matching input paths"
 msgstr "visa indatasökvägar som inte träffas"
@@ -3362,119 +3428,119 @@
 msgstr "när filer skapas, lägg till <sträng> först"
 
 #: builtin/checkout-index.c:208
 msgid "copy out the files from named stage"
 msgstr "kopiera ut filer från namngiven etapp"
 
-#: builtin/checkout.c:25
+#: builtin/checkout.c:24
 msgid "git checkout [<options>] <branch>"
 msgstr "git checkout [<flaggor>] <gren>"
 
-#: builtin/checkout.c:26
+#: builtin/checkout.c:25
 msgid "git checkout [<options>] [<branch>] -- <file>..."
 msgstr "git checkout [<flaggor>] [<gren>] -- <fil>..."
 
-#: builtin/checkout.c:132 builtin/checkout.c:165
+#: builtin/checkout.c:134 builtin/checkout.c:167
 #, c-format
 msgid "path '%s' does not have our version"
 msgstr "sökvägen \"%s\" har inte vår version"
 
-#: builtin/checkout.c:134 builtin/checkout.c:167
+#: builtin/checkout.c:136 builtin/checkout.c:169
 #, c-format
 msgid "path '%s' does not have their version"
 msgstr "sökvägen \"%s\" har inte deras version"
 
-#: builtin/checkout.c:150
+#: builtin/checkout.c:152
 #, c-format
 msgid "path '%s' does not have all necessary versions"
 msgstr "sökvägen \"%s\" innehåller inte alla nödvändiga versioner"
 
-#: builtin/checkout.c:194
+#: builtin/checkout.c:196
 #, c-format
 msgid "path '%s' does not have necessary versions"
 msgstr "sökvägen \"%s\" innehåller inte nödvändiga versioner"
 
-#: builtin/checkout.c:211
+#: builtin/checkout.c:213
 #, c-format
 msgid "path '%s': cannot merge"
 msgstr "sökväg \"%s\": kan inte slå ihop"
 
-#: builtin/checkout.c:228
+#: builtin/checkout.c:230
 #, c-format
 msgid "Unable to add merge result for '%s'"
 msgstr "Kunde inte lägga till sammanslagningsresultat för \"%s\""
 
-#: builtin/checkout.c:249 builtin/checkout.c:252 builtin/checkout.c:255
-#: builtin/checkout.c:258
+#: builtin/checkout.c:251 builtin/checkout.c:254 builtin/checkout.c:257
+#: builtin/checkout.c:260
 #, c-format
 msgid "'%s' cannot be used with updating paths"
 msgstr "\"%s\" kan inte användas vid uppdatering av sökvägar"
 
-#: builtin/checkout.c:261 builtin/checkout.c:264
+#: builtin/checkout.c:263 builtin/checkout.c:266
 #, c-format
 msgid "'%s' cannot be used with %s"
 msgstr "\"%s\" kan inte användas med %s"
 
-#: builtin/checkout.c:267
+#: builtin/checkout.c:269
 #, c-format
 msgid "Cannot update paths and switch to branch '%s' at the same time."
 msgstr "Kan inte uppdatera sökvägar och växla till grenen \"%s\" samtidigt."
 
-#: builtin/checkout.c:278 builtin/checkout.c:467
+#: builtin/checkout.c:280 builtin/checkout.c:474
 msgid "corrupt index file"
 msgstr "indexfilen är trasig"
 
-#: builtin/checkout.c:338 builtin/checkout.c:345
+#: builtin/checkout.c:340 builtin/checkout.c:347
 #, c-format
 msgid "path '%s' is unmerged"
 msgstr "sökvägen \"%s\" har inte slagits ihop"
 
-#: builtin/checkout.c:489
+#: builtin/checkout.c:496
 msgid "you need to resolve your current index first"
 msgstr "du måste lösa ditt befintliga index först"
 
-#: builtin/checkout.c:615
+#: builtin/checkout.c:627
 #, c-format
 msgid "Can not do reflog for '%s'\n"
 msgstr "Kan inte skapa referenslog för \"%s\"\n"
 
-#: builtin/checkout.c:653
+#: builtin/checkout.c:663
 msgid "HEAD is now at"
 msgstr "HEAD är nu på"
 
-#: builtin/checkout.c:660
+#: builtin/checkout.c:670
 #, c-format
 msgid "Reset branch '%s'\n"
 msgstr "Återställ gren \"%s\"\n"
 
-#: builtin/checkout.c:663
+#: builtin/checkout.c:673
 #, c-format
 msgid "Already on '%s'\n"
 msgstr "Redan på \"%s\"\n"
 
-#: builtin/checkout.c:667
+#: builtin/checkout.c:677
 #, c-format
 msgid "Switched to and reset branch '%s'\n"
 msgstr "Växlade till och nollställde grenen \"%s\"\n"
 
-#: builtin/checkout.c:669 builtin/checkout.c:1050
+#: builtin/checkout.c:679 builtin/checkout.c:1134
 #, c-format
 msgid "Switched to a new branch '%s'\n"
 msgstr "Växlade till en ny gren \"%s\"\n"
 
-#: builtin/checkout.c:671
+#: builtin/checkout.c:681
 #, c-format
 msgid "Switched to branch '%s'\n"
 msgstr "Växlade till grenen \"%s\"\n"
 
-#: builtin/checkout.c:723
+#: builtin/checkout.c:733
 #, c-format
 msgid " ... and %d more.\n"
 msgstr " ... och %d till.\n"
 
-#: builtin/checkout.c:729
+#: builtin/checkout.c:739
 #, c-format
 msgid ""
 "Warning: you are leaving %d commit behind, not connected to\n"
 "any of your branches:\n"
 "\n"
 "%s\n"
@@ -3491,174 +3557,197 @@
 msgstr[1] ""
 "Varning: du lämnar %d incheckningar bakom dig som inte är ansluta till\n"
 "någon av dina grenar:\n"
 "\n"
 "%s\n"
 
-#: builtin/checkout.c:747
+#: builtin/checkout.c:758
 #, c-format
 msgid ""
+"If you want to keep it by creating a new branch, this may be a good time\n"
+"to do so with:\n"
+"\n"
+" git branch <new-branch-name> %s\n"
+"\n"
+msgid_plural ""
 "If you want to keep them by creating a new branch, this may be a good time\n"
 "to do so with:\n"
 "\n"
 " git branch <new-branch-name> %s\n"
 "\n"
-msgstr ""
+msgstr[0] ""
+"Om du vill behålla den genom att skapa en ny gren är nu en bra tidpunkt\n"
+"att göra så, med:\n"
+"\n"
+" git branch <nytt_grennamn> %s\n"
+"\n"
+msgstr[1] ""
 "Om du vill behålla dem genom att skapa en ny gren är nu en bra tidpunkt\n"
 "att göra så, med:\n"
 "\n"
 " git branch <nytt_grennamn> %s\n"
 "\n"
 
-#: builtin/checkout.c:777
+#: builtin/checkout.c:794
 msgid "internal error in revision walk"
 msgstr "internt fel vid genomgång av revisioner (revision walk)"
 
-#: builtin/checkout.c:781
+#: builtin/checkout.c:798
 msgid "Previous HEAD position was"
 msgstr "Tidigare position för HEAD var"
 
-#: builtin/checkout.c:808 builtin/checkout.c:1045
+#: builtin/checkout.c:825 builtin/checkout.c:1129
 msgid "You are on a branch yet to be born"
 msgstr "Du är på en gren som ännu inte är född"
 
-#: builtin/checkout.c:952
+#: builtin/checkout.c:931
+#, c-format
+msgid "'%s' is already checked out at '%s'"
+msgstr "\"%s\" är redan utcheckad på \"%s\""
+
+#: builtin/checkout.c:1036
 #, c-format
 msgid "only one reference expected, %d given."
 msgstr "endast en referens förväntades, %d gavs."
 
-#: builtin/checkout.c:991
+#: builtin/checkout.c:1075
 #, c-format
 msgid "invalid reference: %s"
 msgstr "felaktig referens: %s"
 
-#: builtin/checkout.c:1020
+#: builtin/checkout.c:1104
 #, c-format
 msgid "reference is not a tree: %s"
 msgstr "referensen är inte ett träd: %s"
 
-#: builtin/checkout.c:1059
+#: builtin/checkout.c:1143
 msgid "paths cannot be used with switching branches"
 msgstr "sökvägar kan inte användas vid byte av gren"
 
-#: builtin/checkout.c:1062 builtin/checkout.c:1066
+#: builtin/checkout.c:1146 builtin/checkout.c:1150
 #, c-format
 msgid "'%s' cannot be used with switching branches"
 msgstr "\"%s\" kan inte användas vid byte av gren"
 
-#: builtin/checkout.c:1070 builtin/checkout.c:1073 builtin/checkout.c:1078
-#: builtin/checkout.c:1081
+#: builtin/checkout.c:1154 builtin/checkout.c:1157 builtin/checkout.c:1162
+#: builtin/checkout.c:1165
 #, c-format
 msgid "'%s' cannot be used with '%s'"
 msgstr "\"%s\" kan inte användas med \"%s\""
 
-#: builtin/checkout.c:1086
+#: builtin/checkout.c:1170
 #, c-format
 msgid "Cannot switch branch to a non-commit '%s'"
 msgstr "Kan inte växla gren till icke-incheckningen \"%s\""
 
-#: builtin/checkout.c:1108 builtin/checkout.c:1110 builtin/clone.c:90
-#: builtin/remote.c:159 builtin/remote.c:161
+#: builtin/checkout.c:1203 builtin/checkout.c:1205 builtin/clone.c:83
+#: builtin/remote.c:159 builtin/remote.c:161 builtin/worktree.c:282
+#: builtin/worktree.c:284
 msgid "branch"
 msgstr "gren"
 
-#: builtin/checkout.c:1109
+#: builtin/checkout.c:1204
 msgid "create and checkout a new branch"
 msgstr "skapa och checka ut en ny gren"
 
-#: builtin/checkout.c:1111
+#: builtin/checkout.c:1206
 msgid "create/reset and checkout a branch"
 msgstr "skapa/nollställ och checka ut en gren"
 
-#: builtin/checkout.c:1112
+#: builtin/checkout.c:1207
 msgid "create reflog for new branch"
 msgstr "skapa reflogg för ny gren"
 
-#: builtin/checkout.c:1113
+#: builtin/checkout.c:1208
 msgid "detach the HEAD at named commit"
 msgstr "koppla från HEAD vid namngiven incheckning"
 
-#: builtin/checkout.c:1114
+#: builtin/checkout.c:1209
 msgid "set upstream info for new branch"
 msgstr "sätt uppströmsinformation för ny gren"
 
-#: builtin/checkout.c:1116
+#: builtin/checkout.c:1211
 msgid "new-branch"
 msgstr "ny-gren"
 
-#: builtin/checkout.c:1116
+#: builtin/checkout.c:1211
 msgid "new unparented branch"
 msgstr "ny gren utan förälder"
 
-#: builtin/checkout.c:1117
+#: builtin/checkout.c:1212
 msgid "checkout our version for unmerged files"
 msgstr "checka ut vår version för ej sammanslagna filer"
 
-#: builtin/checkout.c:1119
+#: builtin/checkout.c:1214
 msgid "checkout their version for unmerged files"
 msgstr "checka ut deras version för ej sammanslagna filer"
 
-#: builtin/checkout.c:1121
+#: builtin/checkout.c:1216
 msgid "force checkout (throw away local modifications)"
 msgstr "tvinga utcheckning (kasta bort lokala ändringar)"
 
-#: builtin/checkout.c:1122
+#: builtin/checkout.c:1217
 msgid "perform a 3-way merge with the new branch"
 msgstr "utför en 3-vägssammanslagning för den nya grenen"
 
-#: builtin/checkout.c:1123 builtin/merge.c:227
+#: builtin/checkout.c:1218 builtin/merge.c:227
 msgid "update ignored files (default)"
 msgstr "uppdatera ignorerade filer (standard)"
 
-#: builtin/checkout.c:1124 builtin/log.c:1239 parse-options.h:245
+#: builtin/checkout.c:1219 builtin/log.c:1239 parse-options.h:244
 msgid "style"
 msgstr "stil"
 
-#: builtin/checkout.c:1125
+#: builtin/checkout.c:1220
 msgid "conflict style (merge or diff3)"
 msgstr "konfliktstil (merge eller diff3)"
 
-#: builtin/checkout.c:1128
+#: builtin/checkout.c:1223
 msgid "do not limit pathspecs to sparse entries only"
 msgstr "begränsa inte sökvägar till endast glesa poster"
 
-#: builtin/checkout.c:1130
+#: builtin/checkout.c:1225
 msgid "second guess 'git checkout <no-such-branch>'"
 msgstr "förutspå \"git checkout <gren-saknas>\""
 
-#: builtin/checkout.c:1153
+#: builtin/checkout.c:1227
+msgid "do not check if another worktree is holding the given ref"
+msgstr ""
+"kontrollera inte om en annan arbetskatalog håller den angivna referensen"
+
+#: builtin/checkout.c:1252
 msgid "-b, -B and --orphan are mutually exclusive"
 msgstr "-b, -B och --orphan är ömsesidigt uteslutande"
 
-#: builtin/checkout.c:1170
+#: builtin/checkout.c:1269
 msgid "--track needs a branch name"
 msgstr "--track behöver ett namn på en gren"
 
-#: builtin/checkout.c:1175
+#: builtin/checkout.c:1274
 msgid "Missing branch name; try -b"
 msgstr "Grennamn saknas; försök med -b"
 
-#: builtin/checkout.c:1212
+#: builtin/checkout.c:1310
 msgid "invalid path specification"
 msgstr "felaktig sökvägsangivelse"
 
-#: builtin/checkout.c:1219
+#: builtin/checkout.c:1317
 #, c-format
 msgid ""
 "Cannot update paths and switch to branch '%s' at the same time.\n"
 "Did you intend to checkout '%s' which can not be resolved as commit?"
 msgstr ""
 "Kan inte uppdatera sökvägar och växla till grenen \"%s\" samtidigt.\n"
 "Ville du checka ut \"%s\" som inte kan lösas som en utcheckning?"
 
-#: builtin/checkout.c:1224
+#: builtin/checkout.c:1322
 #, c-format
 msgid "git checkout: --detach does not take a path argument '%s'"
 msgstr "git checkout: --detach tar inte en sökväg som argument \"%s\""
 
-#: builtin/checkout.c:1228
+#: builtin/checkout.c:1326
 msgid ""
 "git checkout: --ours/--theirs, --force and --merge are incompatible when\n"
 "checking out of the index."
 msgstr ""
 "git checkout: --ours/--theirs, --force och --merge är inkompatibla när\n"
 "du checkar ut från indexet."
@@ -3724,42 +3813,42 @@
 "2-3,6-9    - markera flera intervall\n"
 "foo        - markera post baserad på unikt prefix\n"
 "-...       - avmarkera specifika poster\n"
 "*          - välj alla poster\n"
 "           - (tomt) avsluta markering"
 
-#: builtin/clean.c:517
+#: builtin/clean.c:515
 #, c-format
 msgid "Huh (%s)?"
 msgstr "Vadå (%s)?"
 
-#: builtin/clean.c:659
+#: builtin/clean.c:657
 #, c-format
 msgid "Input ignore patterns>> "
 msgstr "Ange ignoreringsmönster>>"
 
-#: builtin/clean.c:696
+#: builtin/clean.c:694
 #, c-format
 msgid "WARNING: Cannot find items matched by: %s"
 msgstr "VARNING: Hittar inte poster som motsvarar: %s"
 
-#: builtin/clean.c:717
+#: builtin/clean.c:715
 msgid "Select items to delete"
 msgstr "Välj poster att ta bort"
 
 #. TRANSLATORS: Make sure to keep [y/N] as is
-#: builtin/clean.c:758
+#: builtin/clean.c:756
 #, c-format
 msgid "Remove %s [y/N]? "
 msgstr "Ta bort %s [Y=ja / N=nej]?"
 
-#: builtin/clean.c:783
+#: builtin/clean.c:781
 msgid "Bye."
 msgstr "Hej då."
 
-#: builtin/clean.c:791
+#: builtin/clean.c:789
 msgid ""
 "clean               - start cleaning\n"
 "filter by pattern   - exclude items from deletion\n"
 "select by numbers   - select items to be deleted by numbers\n"
 "ask each            - confirm each deletion (like \"rm -i\")\n"
 "quit                - stop cleaning\n"
@@ -3771,357 +3860,358 @@
 "select by numbers   - markera poster som ska tas bort med siffror\n"
 "ask each            - bekräfta varje borttagning (som \"rm -i\")\n"
 "quit                - sluta städa\n"
 "help                - denna skärm\n"
 "?                   - hjälp för kommandoval"
 
-#: builtin/clean.c:818
+#: builtin/clean.c:816
 msgid "*** Commands ***"
 msgstr "*** Kommandon ***"
 
-#: builtin/clean.c:819
+#: builtin/clean.c:817
 msgid "What now"
 msgstr "Vad nu"
 
-#: builtin/clean.c:827
+#: builtin/clean.c:825
 msgid "Would remove the following item:"
 msgid_plural "Would remove the following items:"
 msgstr[0] "Skulle ta bort följande post:"
 msgstr[1] "Skulle ta bort följande poster:"
 
-#: builtin/clean.c:844
+#: builtin/clean.c:842
 msgid "No more files to clean, exiting."
 msgstr "Inga fler filer att städa, avslutar."
 
-#: builtin/clean.c:875
+#: builtin/clean.c:873
 msgid "do not print names of files removed"
 msgstr "skriv inte ut namn på borttagna filer"
 
-#: builtin/clean.c:877
+#: builtin/clean.c:875
 msgid "force"
 msgstr "tvinga"
 
-#: builtin/clean.c:878
+#: builtin/clean.c:876
 msgid "interactive cleaning"
 msgstr "städa interaktivt"
 
-#: builtin/clean.c:880
+#: builtin/clean.c:878
 msgid "remove whole directories"
 msgstr "ta bort hela kataloger"
 
-#: builtin/clean.c:881 builtin/describe.c:407 builtin/grep.c:714
-#: builtin/ls-files.c:443 builtin/name-rev.c:311 builtin/show-ref.c:185
+#: builtin/clean.c:879 builtin/describe.c:407 builtin/grep.c:714
+#: builtin/ls-files.c:443 builtin/name-rev.c:311 builtin/show-ref.c:187
 msgid "pattern"
 msgstr "mönster"
 
-#: builtin/clean.c:882
+#: builtin/clean.c:880
 msgid "add <pattern> to ignore rules"
 msgstr "lägg till <mönster> till ignoreringsregler"
 
-#: builtin/clean.c:883
+#: builtin/clean.c:881
 msgid "remove ignored files, too"
 msgstr "ta även bort ignorerade filer"
 
-#: builtin/clean.c:885
+#: builtin/clean.c:883
 msgid "remove only ignored files"
 msgstr "ta endast bort ignorerade filer"
 
-#: builtin/clean.c:903
+#: builtin/clean.c:901
 msgid "-x and -X cannot be used together"
 msgstr "-x och -X kan inte användas samtidigt"
 
-#: builtin/clean.c:907
+#: builtin/clean.c:905
 msgid ""
 "clean.requireForce set to true and neither -i, -n, nor -f given; refusing to "
 "clean"
 msgstr ""
 "clean.requireForce satt till true, men varken -i, -n eller -f angavs; vägrar "
 "städa"
 
-#: builtin/clean.c:910
+#: builtin/clean.c:908
 msgid ""
 "clean.requireForce defaults to true and neither -i, -n, nor -f given; "
 "refusing to clean"
 msgstr ""
 "clean.requireForce har standardvärdet true och varken -i, -n eller -f "
 "angavs; vägrar städa"
 
 #: builtin/clone.c:37
 msgid "git clone [<options>] [--] <repo> [<dir>]"
 msgstr "git clone [<flaggor>] [--] <arkiv> [<kat>]"
 
-#: builtin/clone.c:66 builtin/fetch.c:111 builtin/merge.c:224
+#: builtin/clone.c:57 builtin/fetch.c:111 builtin/merge.c:224
 #: builtin/push.c:523
 msgid "force progress reporting"
 msgstr "tvinga förloppsrapportering"
 
-#: builtin/clone.c:68
+#: builtin/clone.c:59
 msgid "don't create a checkout"
 msgstr "skapa inte någon utcheckning"
 
-#: builtin/clone.c:69 builtin/clone.c:71 builtin/init-db.c:496
+#: builtin/clone.c:60 builtin/clone.c:62 builtin/init-db.c:503
 msgid "create a bare repository"
 msgstr "skapa ett naket (\"bare\") arkiv"
 
-#: builtin/clone.c:73
+#: builtin/clone.c:64
 msgid "create a mirror repository (implies bare)"
 msgstr "skapa ett spegelarkiv (implicerar \"bare\")"
 
-#: builtin/clone.c:75
+#: builtin/clone.c:66
 msgid "to clone from a local repository"
 msgstr "för att klona från ett lokalt arkiv"
 
-#: builtin/clone.c:77
+#: builtin/clone.c:68
 msgid "don't use local hardlinks, always copy"
 msgstr "skapa inte lokala hårda länkar, kopiera alltid"
 
-#: builtin/clone.c:79
+#: builtin/clone.c:70
 msgid "setup as shared repository"
 msgstr "skapa som ett delat arkiv"
 
-#: builtin/clone.c:81 builtin/clone.c:83
+#: builtin/clone.c:72 builtin/clone.c:74
 msgid "initialize submodules in the clone"
 msgstr "initiera undermoduler i klonen"
 
-#: builtin/clone.c:84 builtin/init-db.c:493
+#: builtin/clone.c:75 builtin/init-db.c:500
 msgid "template-directory"
 msgstr "mallkatalog"
 
-#: builtin/clone.c:85 builtin/init-db.c:494
+#: builtin/clone.c:76 builtin/init-db.c:501
 msgid "directory from which templates will be used"
 msgstr "katalog att använda mallar från"
 
-#: builtin/clone.c:87
+#: builtin/clone.c:78
 msgid "reference repository"
 msgstr "referensarkiv"
 
-#: builtin/clone.c:88 builtin/column.c:26 builtin/merge-file.c:44
+#: builtin/clone.c:80
+msgid "use --reference only while cloning"
+msgstr "använd --reference endast under kloningen"
+
+#: builtin/clone.c:81 builtin/column.c:26 builtin/merge-file.c:44
 msgid "name"
 msgstr "namn"
 
-#: builtin/clone.c:89
+#: builtin/clone.c:82
 msgid "use <name> instead of 'origin' to track upstream"
 msgstr "använd <namn> istället för \"origin\" för att spåra uppströms"
 
-#: builtin/clone.c:91
+#: builtin/clone.c:84
 msgid "checkout <branch> instead of the remote's HEAD"
 msgstr "checka ut <gren> istället för fjärrens HEAD"
 
-#: builtin/clone.c:93
+#: builtin/clone.c:86
 msgid "path to git-upload-pack on the remote"
 msgstr "sökväg till git-upload-pack på fjärren"
 
-#: builtin/clone.c:94 builtin/fetch.c:112 builtin/grep.c:659
+#: builtin/clone.c:87 builtin/fetch.c:112 builtin/grep.c:659
 msgid "depth"
 msgstr "djup"
 
-#: builtin/clone.c:95
+#: builtin/clone.c:88
 msgid "create a shallow clone of that depth"
 msgstr "skapa en grund klon på detta djup"
 
-#: builtin/clone.c:97
+#: builtin/clone.c:90
 msgid "clone only one branch, HEAD or --branch"
 msgstr "klona endast en gren, HEAD eller --branch"
 
-#: builtin/clone.c:99
-msgid "use --reference only while cloning"
-msgstr "använd --reference endast under kloningen"
-
-#: builtin/clone.c:100 builtin/init-db.c:502
+#: builtin/clone.c:91 builtin/init-db.c:509
 msgid "gitdir"
 msgstr "gitkat"
 
-#: builtin/clone.c:101 builtin/init-db.c:503
+#: builtin/clone.c:92 builtin/init-db.c:510
 msgid "separate git dir from working tree"
 msgstr "separera gitkatalogen från arbetskatalogen"
 
-#: builtin/clone.c:102
+#: builtin/clone.c:93
 msgid "key=value"
 msgstr "nyckel=värde"
 
-#: builtin/clone.c:103
+#: builtin/clone.c:94
 msgid "set config inside the new repository"
 msgstr "ställ in konfiguration i det nya arkivet"
 
-#: builtin/clone.c:256
+#: builtin/clone.c:240
 #, c-format
 msgid "reference repository '%s' is not a local repository."
 msgstr "referensarkivet \"%s\" är inte ett lokalt arkiv."
 
-#: builtin/clone.c:260
+#: builtin/clone.c:244
 #, c-format
 msgid "reference repository '%s' is shallow"
 msgstr "referensarkivet \"%s\" är grunt"
 
-#: builtin/clone.c:263
+#: builtin/clone.c:247
 #, c-format
 msgid "reference repository '%s' is grafted"
 msgstr "referensarkivet \"%s\" är ympat"
 
-#: builtin/clone.c:325
+#: builtin/clone.c:310
 #, c-format
 msgid "failed to create directory '%s'"
 msgstr "misslyckades skapa katalogen \"%s\""
 
-#: builtin/clone.c:327 builtin/diff.c:84
+#: builtin/clone.c:312 builtin/diff.c:84
 #, c-format
 msgid "failed to stat '%s'"
 msgstr "misslyckades ta status på \"%s\""
 
-#: builtin/clone.c:329
+#: builtin/clone.c:314
 #, c-format
 msgid "%s exists and is not a directory"
 msgstr "%s finns och är ingen katalog"
 
-#: builtin/clone.c:343
+#: builtin/clone.c:328
 #, c-format
 msgid "failed to stat %s\n"
 msgstr "misslyckades ta status på %s\n"
 
-#: builtin/clone.c:365
+#: builtin/clone.c:350
 #, c-format
 msgid "failed to create link '%s'"
 msgstr "misslyckades skapa länken \"%s\""
 
-#: builtin/clone.c:369
+#: builtin/clone.c:354
 #, c-format
 msgid "failed to copy file to '%s'"
 msgstr "misslyckades kopiera filen till \"%s\""
 
-#: builtin/clone.c:392 builtin/clone.c:566
+#: builtin/clone.c:377 builtin/clone.c:551
 #, c-format
 msgid "done.\n"
 msgstr "klart.\n"
 
-#: builtin/clone.c:404
+#: builtin/clone.c:389
 msgid ""
 "Clone succeeded, but checkout failed.\n"
 "You can inspect what was checked out with 'git status'\n"
 "and retry the checkout with 'git checkout -f HEAD'\n"
 msgstr ""
 "Klonen lyckades, men utcheckningen misslyckades.\n"
 "Du kan inspektera det som checkades ut med \"git status\"\n"
 "och försöka checka ut igen med \"git checkout -f HEAD\"\n"
 
-#: builtin/clone.c:481
+#: builtin/clone.c:466
 #, c-format
 msgid "Could not find remote branch %s to clone."
 msgstr "Kunde inte hitta fjärrgrenen %s för att klona."
 
 # Vague original, not networking-related, but rather related to the actual
-# objects in the database.
-#: builtin/clone.c:561
+# objects downloaded.
+#: builtin/clone.c:546
 #, c-format
 msgid "Checking connectivity... "
-msgstr "Kontrollerar konnektivitet..."
+msgstr "Kontrollerar om vi fick alla objekt..."
 
-#: builtin/clone.c:564
+#: builtin/clone.c:549
 msgid "remote did not send all necessary objects"
 msgstr "fjärren sände inte alla nödvändiga objekt"
 
-#: builtin/clone.c:628
+#: builtin/clone.c:613
 msgid "remote HEAD refers to nonexistent ref, unable to checkout.\n"
 msgstr ""
 "HEAD hos fjärren pekar på en obefintlig referens, kan inte checka ut.\n"
 
-#: builtin/clone.c:659
+#: builtin/clone.c:644
 msgid "unable to checkout working tree"
 msgstr "kunde inte checka ut arbetskatalogen"
 
-#: builtin/clone.c:746
+#: builtin/clone.c:731
 msgid "cannot repack to clean up"
 msgstr "kan inte packa om för att städa upp"
 
-#: builtin/clone.c:748
+#: builtin/clone.c:733
 msgid "cannot unlink temporary alternates file"
 msgstr "kunde inte ta bort temporär \"alternates\"-fil"
 
-#: builtin/clone.c:778
+#: builtin/clone.c:763
 msgid "Too many arguments."
 msgstr "För många argument."
 
-#: builtin/clone.c:782
+#: builtin/clone.c:767
 msgid "You must specify a repository to clone."
 msgstr "Du måste ange ett arkiv att klona."
 
-#: builtin/clone.c:793
+#: builtin/clone.c:778
 #, c-format
 msgid "--bare and --origin %s options are incompatible."
 msgstr "flaggorna --bare och --origin %s är inkompatibla."
 
-#: builtin/clone.c:796
+#: builtin/clone.c:781
 msgid "--bare and --separate-git-dir are incompatible."
 msgstr "flaggorna --bare och --separate-git-dir är inkompatibla."
 
-#: builtin/clone.c:809
+#: builtin/clone.c:794
 #, c-format
 msgid "repository '%s' does not exist"
 msgstr "arkivet \"%s\" finns inte"
 
-#: builtin/clone.c:815 builtin/fetch.c:1156
+#: builtin/clone.c:800 builtin/fetch.c:1160
 #, c-format
 msgid "depth %s is not a positive number"
 msgstr "djupet %s är inte ett positivt tal"
 
-#: builtin/clone.c:825
+#: builtin/clone.c:810
 #, c-format
 msgid "destination path '%s' already exists and is not an empty directory."
 msgstr "destinationssökvägen \"%s\" finns redan och är inte en tom katalog."
 
-#: builtin/clone.c:835
+#: builtin/clone.c:820
 #, c-format
 msgid "working tree '%s' already exists."
 msgstr "arbetsträdet \"%s\" finns redan."
 
-#: builtin/clone.c:850 builtin/clone.c:861
+#: builtin/clone.c:835 builtin/clone.c:846 builtin/worktree.c:193
+#: builtin/worktree.c:220
 #, c-format
 msgid "could not create leading directories of '%s'"
 msgstr "kunde inte skapa inledande kataloger för \"%s\""
 
-#: builtin/clone.c:853
+#: builtin/clone.c:838
 #, c-format
 msgid "could not create work tree dir '%s'"
 msgstr "kunde inte skapa arbetskatalogen \"%s\""
 
-#: builtin/clone.c:871
+#: builtin/clone.c:856
 #, c-format
 msgid "Cloning into bare repository '%s'...\n"
 msgstr "Klonar till ett naket arkiv \"%s\"...\n"
 
-#: builtin/clone.c:873
+#: builtin/clone.c:858
 #, c-format
 msgid "Cloning into '%s'...\n"
 msgstr "Klonar till \"%s\"...\n"
 
-#: builtin/clone.c:898
+#: builtin/clone.c:883
 msgid "--dissociate given, but there is no --reference"
 msgstr "--dissociate angavs, men --reference har inte angivits"
 
-#: builtin/clone.c:913
+#: builtin/clone.c:900
 msgid "--depth is ignored in local clones; use file:// instead."
 msgstr "--depth ignoreras i lokala kloningar; använd file:// istället"
 
-#: builtin/clone.c:916
+#: builtin/clone.c:903
 msgid "source repository is shallow, ignoring --local"
 msgstr "källarkivet är grunt, ignorerar --local"
 
-#: builtin/clone.c:921
+#: builtin/clone.c:908
 msgid "--local is ignored"
 msgstr "--local ignoreras"
 
-#: builtin/clone.c:925
+#: builtin/clone.c:912
 #, c-format
 msgid "Don't know how to clone %s"
 msgstr "Vet inte hur man klonar %s"
 
-#: builtin/clone.c:976 builtin/clone.c:984
+#: builtin/clone.c:961 builtin/clone.c:969
 #, c-format
 msgid "Remote branch %s not found in upstream %s"
 msgstr "Fjärrgrenen %s hittades inte i uppströmsarkivet %s"
 
-#: builtin/clone.c:987
+#: builtin/clone.c:972
 msgid "You appear to have cloned an empty repository."
 msgstr "Du verkar ha klonat ett tomt arkiv."
 
 #: builtin/column.c:9
 msgid "git column [<options>]"
 msgstr "git column [<flaggor>]"
@@ -4353,13 +4443,13 @@
 msgstr "kunde inte läsa MERGE_MSG"
 
 #: builtin/commit.c:734
 msgid "could not read SQUASH_MSG"
 msgstr "kunde inte läsa SQUASH_MSG"
 
-#: builtin/commit.c:738
+#: builtin/commit.c:738 builtin/merge.c:1079
 #, c-format
 msgid "could not read '%s'"
 msgstr "kunde inte läsa \"%s\""
 
 #: builtin/commit.c:785
 msgid "could not write commit template"
@@ -4514,46 +4604,46 @@
 msgstr "Felaktigt städningsläge %s"
 
 #: builtin/commit.c:1214
 msgid "Paths with -a does not make sense."
 msgstr "Kan inte ange sökvägar med -a."
 
-#: builtin/commit.c:1324 builtin/commit.c:1604
+#: builtin/commit.c:1324 builtin/commit.c:1603
 msgid "show status concisely"
 msgstr "visa koncis status"
 
-#: builtin/commit.c:1326 builtin/commit.c:1606
+#: builtin/commit.c:1326 builtin/commit.c:1605
 msgid "show branch information"
 msgstr "visa information om gren"
 
-#: builtin/commit.c:1328 builtin/commit.c:1608 builtin/push.c:509
+#: builtin/commit.c:1328 builtin/commit.c:1607 builtin/push.c:509
 msgid "machine-readable output"
 msgstr "maskinläsbar utdata"
 
-#: builtin/commit.c:1331 builtin/commit.c:1610
+#: builtin/commit.c:1331 builtin/commit.c:1609
 msgid "show status in long format (default)"
 msgstr "visa status i långt format (standard)"
 
-#: builtin/commit.c:1334 builtin/commit.c:1613
+#: builtin/commit.c:1334 builtin/commit.c:1612
 msgid "terminate entries with NUL"
 msgstr "terminera poster med NUL"
 
-#: builtin/commit.c:1336 builtin/commit.c:1616 builtin/fast-export.c:980
+#: builtin/commit.c:1336 builtin/commit.c:1615 builtin/fast-export.c:980
 #: builtin/fast-export.c:983 builtin/tag.c:603
 msgid "mode"
 msgstr "läge"
 
-#: builtin/commit.c:1337 builtin/commit.c:1616
+#: builtin/commit.c:1337 builtin/commit.c:1615
 msgid "show untracked files, optional modes: all, normal, no. (Default: all)"
 msgstr "visa ospårade filer, valfria lägen: alla, normal, no. (Standard: all)"
 
 #: builtin/commit.c:1340
 msgid "show ignored files"
 msgstr "visa ignorerade filer"
 
-#: builtin/commit.c:1341 parse-options.h:153
+#: builtin/commit.c:1341 parse-options.h:152
 msgid "when"
 msgstr "när"
 
 #: builtin/commit.c:1342
 msgid ""
 "ignore changes to submodules, optional when: all, dirty, untracked. "
@@ -4563,211 +4653,211 @@
 "(Default: all)"
 
 #: builtin/commit.c:1344
 msgid "list untracked files in columns"
 msgstr "visa ospårade filer i spalter"
 
-#: builtin/commit.c:1431
+#: builtin/commit.c:1430
 msgid "couldn't look up newly created commit"
 msgstr "kunde inte slå upp en precis skapad incheckning"
 
-#: builtin/commit.c:1433
+#: builtin/commit.c:1432
 msgid "could not parse newly created commit"
 msgstr "kunde inte tolka en precis skapad incheckning"
 
-#: builtin/commit.c:1478
+#: builtin/commit.c:1477
 msgid "detached HEAD"
 msgstr "frånkopplad HEAD"
 
-#: builtin/commit.c:1481
+#: builtin/commit.c:1480
 msgid " (root-commit)"
 msgstr " (rotincheckning)"
 
-#: builtin/commit.c:1574
+#: builtin/commit.c:1573
 msgid "suppress summary after successful commit"
 msgstr "undertryck sammanfattning efter framgångsrik incheckning"
 
-#: builtin/commit.c:1575
+#: builtin/commit.c:1574
 msgid "show diff in commit message template"
 msgstr "visa diff i mallen för incheckningsmeddelandet"
 
-#: builtin/commit.c:1577
+#: builtin/commit.c:1576
 msgid "Commit message options"
 msgstr "Alternativ för incheckningsmeddelande"
 
-#: builtin/commit.c:1578 builtin/tag.c:601
+#: builtin/commit.c:1577 builtin/tag.c:601
 msgid "read message from file"
 msgstr "läs meddelande från fil"
 
-#: builtin/commit.c:1579
+#: builtin/commit.c:1578
 msgid "author"
 msgstr "författare"
 
-#: builtin/commit.c:1579
+#: builtin/commit.c:1578
 msgid "override author for commit"
 msgstr "överstyr författare för incheckningen"
 
-#: builtin/commit.c:1580 builtin/gc.c:275
+#: builtin/commit.c:1579 builtin/gc.c:280
 msgid "date"
 msgstr "datum"
 
-#: builtin/commit.c:1580
+#: builtin/commit.c:1579
 msgid "override date for commit"
 msgstr "överstyr datum för incheckningen"
 
-#: builtin/commit.c:1581 builtin/merge.c:218 builtin/notes.c:391
+#: builtin/commit.c:1580 builtin/merge.c:218 builtin/notes.c:391
 #: builtin/notes.c:554 builtin/tag.c:599
 msgid "message"
 msgstr "meddelande"
 
-#: builtin/commit.c:1581
+#: builtin/commit.c:1580
 msgid "commit message"
 msgstr "incheckningsmeddelande"
 
-#: builtin/commit.c:1582
+#: builtin/commit.c:1581
 msgid "reuse and edit message from specified commit"
 msgstr "återanvänd och redigera meddelande från angiven incheckning"
 
-#: builtin/commit.c:1583
+#: builtin/commit.c:1582
 msgid "reuse message from specified commit"
 msgstr "återanvänd meddelande från angiven incheckning"
 
-#: builtin/commit.c:1584
+#: builtin/commit.c:1583
 msgid "use autosquash formatted message to fixup specified commit"
 msgstr ""
 "använd autosquash-formaterat meddelande för att fixa angiven incheckning"
 
-#: builtin/commit.c:1585
+#: builtin/commit.c:1584
 msgid "use autosquash formatted message to squash specified commit"
 msgstr ""
 "använd autosquash-formaterat meddelande för att slå ihop med angiven "
 "incheckning"
 
-#: builtin/commit.c:1586
+#: builtin/commit.c:1585
 msgid "the commit is authored by me now (used with -C/-c/--amend)"
 msgstr "jag är nu författare av incheckningen (används med -C/-c/--amend)"
 
-#: builtin/commit.c:1587 builtin/log.c:1191 builtin/revert.c:86
+#: builtin/commit.c:1586 builtin/log.c:1191 builtin/revert.c:86
 msgid "add Signed-off-by:"
 msgstr "lägg till Signed-off-by:"
 
-#: builtin/commit.c:1588
+#: builtin/commit.c:1587
 msgid "use specified template file"
 msgstr "använd angiven mallfil"
 
-#: builtin/commit.c:1589
+#: builtin/commit.c:1588
 msgid "force edit of commit"
 msgstr "tvinga redigering av incheckning"
 
-#: builtin/commit.c:1590
+#: builtin/commit.c:1589
 msgid "default"
 msgstr "standard"
 
-#: builtin/commit.c:1590 builtin/tag.c:604
+#: builtin/commit.c:1589 builtin/tag.c:604
 msgid "how to strip spaces and #comments from message"
 msgstr "hur blanksteg och #kommentarer skall tas bort från meddelande"
 
-#: builtin/commit.c:1591
+#: builtin/commit.c:1590
 msgid "include status in commit message template"
 msgstr "inkludera status i mallen för incheckningsmeddelandet"
 
-#: builtin/commit.c:1592 builtin/merge.c:225 builtin/revert.c:92
+#: builtin/commit.c:1591 builtin/merge.c:225 builtin/revert.c:92
 #: builtin/tag.c:605
 msgid "key-id"
 msgstr "nyckel-id"
 
-#: builtin/commit.c:1593 builtin/merge.c:226 builtin/revert.c:93
+#: builtin/commit.c:1592 builtin/merge.c:226 builtin/revert.c:93
 msgid "GPG sign commit"
 msgstr "GPG-signera incheckning"
 
-#: builtin/commit.c:1596
+#: builtin/commit.c:1595
 msgid "Commit contents options"
 msgstr "Alternativ för incheckningens innehåll"
 
-#: builtin/commit.c:1597
+#: builtin/commit.c:1596
 msgid "commit all changed files"
 msgstr "checka in alla ändrade filer"
 
-#: builtin/commit.c:1598
+#: builtin/commit.c:1597
 msgid "add specified files to index for commit"
 msgstr "lägg till angivna filer till indexet för incheckning"
 
-#: builtin/commit.c:1599
+#: builtin/commit.c:1598
 msgid "interactively add files"
 msgstr "lägg till filer interaktivt"
 
-#: builtin/commit.c:1600
+#: builtin/commit.c:1599
 msgid "interactively add changes"
 msgstr "lägg till ändringar interaktivt"
 
-#: builtin/commit.c:1601
+#: builtin/commit.c:1600
 msgid "commit only specified files"
 msgstr "checka endast in angivna filer"
 
-#: builtin/commit.c:1602
+#: builtin/commit.c:1601
 msgid "bypass pre-commit hook"
 msgstr "förbigå pre-commit-krok"
 
-#: builtin/commit.c:1603
+#: builtin/commit.c:1602
 msgid "show what would be committed"
 msgstr "visa vad som skulle checkas in"
 
-#: builtin/commit.c:1614
+#: builtin/commit.c:1613
 msgid "amend previous commit"
 msgstr "lägg till föregående incheckning"
 
-#: builtin/commit.c:1615
+#: builtin/commit.c:1614
 msgid "bypass post-rewrite hook"
 msgstr "förbigå post-rewrite-krok"
 
-#: builtin/commit.c:1620
+#: builtin/commit.c:1619
 msgid "ok to record an empty change"
 msgstr "ok att registrera en tom ändring"
 
-#: builtin/commit.c:1622
+#: builtin/commit.c:1621
 msgid "ok to record a change with an empty message"
 msgstr "ok att registrera en ändring med tomt meddelande"
 
-#: builtin/commit.c:1651
+#: builtin/commit.c:1650
 msgid "could not parse HEAD commit"
 msgstr "kunde inte tolka HEAD:s incheckning"
 
-#: builtin/commit.c:1690 builtin/merge.c:519
+#: builtin/commit.c:1689 builtin/merge.c:1076
 #, c-format
 msgid "could not open '%s' for reading"
 msgstr "kunde inte öppna \"%s\" för läsning"
 
-#: builtin/commit.c:1697
+#: builtin/commit.c:1696
 #, c-format
 msgid "Corrupt MERGE_HEAD file (%s)"
 msgstr "Trasig MERGE_HEAD-fil (%s)"
 
-#: builtin/commit.c:1704
+#: builtin/commit.c:1703
 msgid "could not read MERGE_MODE"
 msgstr "kunde inte läsa MERGE_MODE"
 
-#: builtin/commit.c:1723
+#: builtin/commit.c:1722
 #, c-format
 msgid "could not read commit message: %s"
 msgstr "kunde inte läsa incheckningsmeddelande: %s"
 
-#: builtin/commit.c:1734
+#: builtin/commit.c:1733
 #, c-format
 msgid "Aborting commit; you did not edit the message.\n"
 msgstr "Avbryter incheckning; meddelandet inte redigerat.\n"
 
-#: builtin/commit.c:1739
+#: builtin/commit.c:1738
 #, c-format
 msgid "Aborting commit due to empty commit message.\n"
 msgstr "Avbryter på grund av tomt incheckningsmeddelande.\n"
 
-#: builtin/commit.c:1754 builtin/merge.c:851 builtin/merge.c:876
+#: builtin/commit.c:1753 builtin/merge.c:829 builtin/merge.c:854
 msgid "failed to write commit object"
 msgstr "kunde inte skriva incheckningsobjekt"
 
-#: builtin/commit.c:1787
+#: builtin/commit.c:1786
 msgid ""
 "Repository has been updated, but unable to write\n"
 "new_index file. Check that disk is not full and quota is\n"
 "not exceeded, and then \"git reset HEAD\" to recover."
 msgstr ""
 "Arkivet har uppdaterats, men kunde inte skriva filen\n"
@@ -4904,24 +4994,24 @@
 msgstr "kan inte tolka standardfärgvärde"
 
 #: builtin/config.c:457
 #, c-format
 msgid ""
 "# This is Git's per-user configuration file.\n"
-"[core]\n"
+"[user]\n"
 "# Please adapt and uncomment the following lines:\n"
-"#\tuser = %s\n"
+"#\tname = %s\n"
 "#\temail = %s\n"
 msgstr ""
 "# Detta är Gits användarspecifika konfigurationsfil\n"
-"[core]\n"
+"[user]\n"
 "# Justera och ta bort kommenteringsmärket från följande rader:\n"
-"#\tuser = %s\n"
+"#\tname = %s\n"
 "#\temail = %s\n"
 
-#: builtin/config.c:589
+#: builtin/config.c:587
 #, c-format
 msgid "cannot create configuration file %s"
 msgstr "kan inte skapa konfigurationsfilen \"%s\""
 
 #: builtin/count-objects.c:55
 msgid "git count-objects [-v] [-H | --human-readable]"
@@ -5245,369 +5335,369 @@
 msgstr "referenskarta"
 
 #: builtin/fetch.c:125
 msgid "specify fetch refmap"
 msgstr "ange referenskarta för \"fetch\""
 
-#: builtin/fetch.c:375
+#: builtin/fetch.c:377
 msgid "Couldn't find remote ref HEAD"
 msgstr "Kunde inte hitta fjärr-referensen HEAD"
 
-#: builtin/fetch.c:455
+#: builtin/fetch.c:457
 #, c-format
 msgid "object %s not found"
 msgstr "objektet %s hittades inte"
 
-#: builtin/fetch.c:460
+#: builtin/fetch.c:462
 msgid "[up to date]"
 msgstr "[àjour]"
 
-#: builtin/fetch.c:474
+#: builtin/fetch.c:476
 #, c-format
 msgid "! %-*s %-*s -> %s  (can't fetch in current branch)"
 msgstr "! %-*s %-*s -> %s  (kan inte hämta i aktuell gren)"
 
-#: builtin/fetch.c:475 builtin/fetch.c:561
+#: builtin/fetch.c:477 builtin/fetch.c:563
 msgid "[rejected]"
 msgstr "[refuserad]"
 
-#: builtin/fetch.c:486
+#: builtin/fetch.c:488
 msgid "[tag update]"
 msgstr "[uppdaterad tagg]"
 
-#: builtin/fetch.c:488 builtin/fetch.c:523 builtin/fetch.c:541
+#: builtin/fetch.c:490 builtin/fetch.c:525 builtin/fetch.c:543
 msgid "  (unable to update local ref)"
 msgstr "  (kunde inte uppdatera lokal ref)"
 
-#: builtin/fetch.c:506
+#: builtin/fetch.c:508
 msgid "[new tag]"
 msgstr "[ny tagg]"
 
-#: builtin/fetch.c:509
+#: builtin/fetch.c:511
 msgid "[new branch]"
 msgstr "[ny gren]"
 
-#: builtin/fetch.c:512
+#: builtin/fetch.c:514
 msgid "[new ref]"
 msgstr "[ny ref]"
 
-#: builtin/fetch.c:557
+#: builtin/fetch.c:559
 msgid "unable to update local ref"
 msgstr "kunde inte uppdatera lokal ref"
 
-#: builtin/fetch.c:557
+#: builtin/fetch.c:559
 msgid "forced update"
 msgstr "tvingad uppdatering"
 
-#: builtin/fetch.c:563
+#: builtin/fetch.c:565
 msgid "(non-fast-forward)"
 msgstr "(ej snabbspolad)"
 
-#: builtin/fetch.c:596 builtin/fetch.c:829
+#: builtin/fetch.c:599 builtin/fetch.c:832
 #, c-format
 msgid "cannot open %s: %s\n"
 msgstr "kan inte öppna %s: %s\n"
 
-#: builtin/fetch.c:605
+#: builtin/fetch.c:608
 #, c-format
 msgid "%s did not send all necessary objects\n"
 msgstr "%s sände inte alla nödvändiga objekt\n"
 
-#: builtin/fetch.c:623
+#: builtin/fetch.c:626
 #, c-format
 msgid "reject %s because shallow roots are not allowed to be updated"
 msgstr "avvisa %s då grunda rötter inte kan uppdateras"
 
-#: builtin/fetch.c:711 builtin/fetch.c:794
+#: builtin/fetch.c:714 builtin/fetch.c:797
 #, c-format
 msgid "From %.*s\n"
 msgstr "Från %.*s\n"
 
-#: builtin/fetch.c:722
+#: builtin/fetch.c:725
 #, c-format
 msgid ""
 "some local refs could not be updated; try running\n"
 " 'git remote prune %s' to remove any old, conflicting branches"
 msgstr ""
 "vissa lokala referenser kunde inte uppdateras; testa att köra\n"
 " \"git remote prune %s\" för att ta bort gamla grenar som står i konflikt"
 
-#: builtin/fetch.c:774
+#: builtin/fetch.c:777
 #, c-format
 msgid "   (%s will become dangling)"
 msgstr "   (%s kommer bli dinglande)"
 
-#: builtin/fetch.c:775
+#: builtin/fetch.c:778
 #, c-format
 msgid "   (%s has become dangling)"
 msgstr "   (%s har blivit dinglande)"
 
-#: builtin/fetch.c:799
+#: builtin/fetch.c:802
 msgid "[deleted]"
 msgstr "[borttagen]"
 
-#: builtin/fetch.c:800 builtin/remote.c:1060
+#: builtin/fetch.c:803 builtin/remote.c:1057
 msgid "(none)"
 msgstr "(ingen)"
 
-#: builtin/fetch.c:819
+#: builtin/fetch.c:822
 #, c-format
 msgid "Refusing to fetch into current branch %s of non-bare repository"
 msgstr "Vägrar hämta till aktuell gren %s i ett icke-naket arkiv"
 
-#: builtin/fetch.c:838
+#: builtin/fetch.c:841
 #, c-format
 msgid "Option \"%s\" value \"%s\" is not valid for %s"
 msgstr "Flaggan \"%s\" och värdet \"%s\" är inte giltigt för %s"
 
-#: builtin/fetch.c:841
+#: builtin/fetch.c:844
 #, c-format
 msgid "Option \"%s\" is ignored for %s\n"
 msgstr "Flaggan \"%s\" ignoreras för %s\n"
 
-#: builtin/fetch.c:897
+#: builtin/fetch.c:900
 #, c-format
 msgid "Don't know how to fetch from %s"
 msgstr "Vet inte hur man hämtar från %s"
 
-#: builtin/fetch.c:1059
+#: builtin/fetch.c:1063
 #, c-format
 msgid "Fetching %s\n"
 msgstr "Hämtar %s\n"
 
-#: builtin/fetch.c:1061 builtin/remote.c:90
+#: builtin/fetch.c:1065 builtin/remote.c:90
 #, c-format
 msgid "Could not fetch %s"
 msgstr "Kunde inte hämta %s"
 
-#: builtin/fetch.c:1079
+#: builtin/fetch.c:1083
 msgid ""
 "No remote repository specified.  Please, specify either a URL or a\n"
 "remote name from which new revisions should be fetched."
 msgstr ""
 "Inget fjärrarkiv angavs. Ange antingen en URL eller namnet på ett\n"
 "fjärrarkiv som nya incheckningar skall hämtas från."
 
-#: builtin/fetch.c:1102
+#: builtin/fetch.c:1106
 msgid "You need to specify a tag name."
 msgstr "Du måste ange namnet på en tagg."
 
-#: builtin/fetch.c:1144
+#: builtin/fetch.c:1148
 msgid "--depth and --unshallow cannot be used together"
 msgstr "--depth och --unshallow kan inte användas samtidigt"
 
-#: builtin/fetch.c:1146
+#: builtin/fetch.c:1150
 msgid "--unshallow on a complete repository does not make sense"
 msgstr "--unshallow kan inte användas på ett komplett arkiv"
 
-#: builtin/fetch.c:1169
+#: builtin/fetch.c:1173
 msgid "fetch --all does not take a repository argument"
 msgstr "fetch --all tar inte namnet på ett arkiv som argument"
 
-#: builtin/fetch.c:1171
+#: builtin/fetch.c:1175
 msgid "fetch --all does not make sense with refspecs"
 msgstr "fetch --all kan inte anges med referensspecifikationer"
 
-#: builtin/fetch.c:1182
+#: builtin/fetch.c:1186
 #, c-format
 msgid "No such remote or remote group: %s"
 msgstr "Fjärren eller fjärrgruppen finns inte: %s"
 
-#: builtin/fetch.c:1190
+#: builtin/fetch.c:1194
 msgid "Fetching a group and specifying refspecs does not make sense"
 msgstr "Kan inte hämta från grupp och ange referensspecifikationer"
 
 #: builtin/fmt-merge-msg.c:13
 msgid ""
 "git fmt-merge-msg [-m <message>] [--log[=<n>] | --no-log] [--file <file>]"
 msgstr ""
 "git fmt-merge-msg [-m <meddelande>] [--log[=<n>] | --no-log] [--file <fil>]"
 
-#: builtin/fmt-merge-msg.c:662 builtin/fmt-merge-msg.c:665 builtin/grep.c:698
+#: builtin/fmt-merge-msg.c:668 builtin/fmt-merge-msg.c:671 builtin/grep.c:698
 #: builtin/merge.c:198 builtin/repack.c:178 builtin/repack.c:182
-#: builtin/show-branch.c:657 builtin/show-ref.c:178 builtin/tag.c:590
-#: parse-options.h:132 parse-options.h:239
+#: builtin/show-branch.c:664 builtin/show-ref.c:180 builtin/tag.c:590
+#: parse-options.h:131 parse-options.h:238
 msgid "n"
 msgstr "n"
 
-#: builtin/fmt-merge-msg.c:663
+#: builtin/fmt-merge-msg.c:669
 msgid "populate log with at most <n> entries from shortlog"
 msgstr "fyll i loggen med som mest <n> poster från shortlog"
 
-#: builtin/fmt-merge-msg.c:666
+#: builtin/fmt-merge-msg.c:672
 msgid "alias for --log (deprecated)"
 msgstr "alias för --log (avråds)"
 
-#: builtin/fmt-merge-msg.c:669
+#: builtin/fmt-merge-msg.c:675
 msgid "text"
 msgstr "text"
 
-#: builtin/fmt-merge-msg.c:670
+#: builtin/fmt-merge-msg.c:676
 msgid "use <text> as start of message"
 msgstr "inled meddelande med <text>"
 
-#: builtin/fmt-merge-msg.c:671
+#: builtin/fmt-merge-msg.c:677
 msgid "file to read from"
 msgstr "fil att läsa från"
 
-#: builtin/for-each-ref.c:675
+#: builtin/for-each-ref.c:687
 msgid "unable to parse format"
 msgstr "kan inte tolka formatet"
 
-#: builtin/for-each-ref.c:1063
+#: builtin/for-each-ref.c:1083
 msgid "git for-each-ref [<options>] [<pattern>]"
 msgstr "git for-each-ref [<flaggor>] [<mönster>]"
 
-#: builtin/for-each-ref.c:1078
+#: builtin/for-each-ref.c:1098
 msgid "quote placeholders suitably for shells"
 msgstr "citera platshållare passande för skal"
 
-#: builtin/for-each-ref.c:1080
+#: builtin/for-each-ref.c:1100
 msgid "quote placeholders suitably for perl"
 msgstr "citera platshållare passande för perl"
 
-#: builtin/for-each-ref.c:1082
+#: builtin/for-each-ref.c:1102
 msgid "quote placeholders suitably for python"
 msgstr "citera platshållare passande för python"
 
-#: builtin/for-each-ref.c:1084
+#: builtin/for-each-ref.c:1104
 msgid "quote placeholders suitably for Tcl"
 msgstr "citera platshållare passande för Tcl"
 
-#: builtin/for-each-ref.c:1087
+#: builtin/for-each-ref.c:1107
 msgid "show only <n> matched refs"
 msgstr "visa endast <n> träffade refs"
 
-#: builtin/for-each-ref.c:1088 builtin/replace.c:438
+#: builtin/for-each-ref.c:1108 builtin/replace.c:438
 msgid "format"
 msgstr "format"
 
-#: builtin/for-each-ref.c:1088
+#: builtin/for-each-ref.c:1108
 msgid "format to use for the output"
 msgstr "format att använda för utdata"
 
-#: builtin/for-each-ref.c:1089
+#: builtin/for-each-ref.c:1109
 msgid "key"
 msgstr "nyckel"
 
-#: builtin/for-each-ref.c:1090
+#: builtin/for-each-ref.c:1110
 msgid "field name to sort on"
 msgstr "fältnamn att sortera på"
 
 # Vague original, not networking-related, but rather related to the actual
 # objects in the database.
 #: builtin/fsck.c:147 builtin/prune.c:137
 msgid "Checking connectivity"
 msgstr "Kontrollerar konnektivitet"
 
-#: builtin/fsck.c:540
+#: builtin/fsck.c:548
 msgid "Checking object directories"
 msgstr "Kontrollerar objektkataloger"
 
-#: builtin/fsck.c:603
+#: builtin/fsck.c:611
 msgid "git fsck [<options>] [<object>...]"
 msgstr "git fsck [<flaggor>] [<objekt>...]"
 
-#: builtin/fsck.c:609
+#: builtin/fsck.c:617
 msgid "show unreachable objects"
 msgstr "visa onåbara objekt"
 
-#: builtin/fsck.c:610
+#: builtin/fsck.c:618
 msgid "show dangling objects"
 msgstr "visa dinglande objekt"
 
-#: builtin/fsck.c:611
+#: builtin/fsck.c:619
 msgid "report tags"
 msgstr "rapportera taggar"
 
-#: builtin/fsck.c:612
+#: builtin/fsck.c:620
 msgid "report root nodes"
 msgstr "rapportera rotnoder"
 
-#: builtin/fsck.c:613
+#: builtin/fsck.c:621
 msgid "make index objects head nodes"
 msgstr "gör indexojekt till huvudnoder"
 
-#: builtin/fsck.c:614
+#: builtin/fsck.c:622
 msgid "make reflogs head nodes (default)"
 msgstr "gör refloggar till huvudnoder (standard)"
 
-#: builtin/fsck.c:615
+#: builtin/fsck.c:623
 msgid "also consider packs and alternate objects"
 msgstr "ta även hänsyn till paket och alternativa objekt"
 
-#: builtin/fsck.c:616
+#: builtin/fsck.c:624
 msgid "enable more strict checking"
 msgstr "aktivera striktare kontroll"
 
-#: builtin/fsck.c:618
+#: builtin/fsck.c:626
 msgid "write dangling objects in .git/lost-found"
 msgstr "skriv dinglande objekt i .git/lost-found"
 
-#: builtin/fsck.c:619 builtin/prune.c:108
+#: builtin/fsck.c:627 builtin/prune.c:107
 msgid "show progress"
 msgstr "visa förlopp"
 
-#: builtin/fsck.c:669
+#: builtin/fsck.c:677
 msgid "Checking objects"
 msgstr "Kontrollerar objekt"
 
 #: builtin/gc.c:24
 msgid "git gc [<options>]"
 msgstr "git gc [<flaggor>]"
 
-#: builtin/gc.c:79
+#: builtin/gc.c:67
 #, c-format
-msgid "Invalid gc.pruneexpire: '%s'"
-msgstr "Ogiltig gc.pruneexpire: '%s'"
+msgid "Invalid %s: '%s'"
+msgstr "Felaktigt %s: \"%s\""
 
-#: builtin/gc.c:107
+#: builtin/gc.c:112
 #, c-format
 msgid "insanely long object directory %.*s"
 msgstr "tokigt lång objektkatalog %.*s"
 
-#: builtin/gc.c:276
+#: builtin/gc.c:281
 msgid "prune unreferenced objects"
 msgstr "rensa ej refererade objekt"
 
-#: builtin/gc.c:278
+#: builtin/gc.c:283
 msgid "be more thorough (increased runtime)"
 msgstr "var mer grundlig (ökar körtiden)"
 
-#: builtin/gc.c:279
+#: builtin/gc.c:284
 msgid "enable auto-gc mode"
 msgstr "aktivera auto-gc-läge"
 
-#: builtin/gc.c:280
+#: builtin/gc.c:285
 msgid "force running gc even if there may be another gc running"
 msgstr "tvinga gc-körning även om en annan gc kanske körs"
 
-#: builtin/gc.c:321
+#: builtin/gc.c:327
 #, c-format
 msgid "Auto packing the repository in background for optimum performance.\n"
 msgstr "Packar arkivet automatiskt i bakgrunden för optimal prestanda.\n"
 
-#: builtin/gc.c:323
+#: builtin/gc.c:329
 #, c-format
 msgid "Auto packing the repository for optimum performance.\n"
 msgstr "Packar arkivet automatiskt för optimal prestanda.\n"
 
-#: builtin/gc.c:324
+#: builtin/gc.c:330
 #, c-format
 msgid "See \"git help gc\" for manual housekeeping.\n"
 msgstr "Se \"git help gc\" för manuell hushållning.\n"
 
-#: builtin/gc.c:342
+#: builtin/gc.c:348
 #, c-format
 msgid ""
 "gc is already running on machine '%s' pid %<PRIuMAX> (use --force if not)"
 msgstr ""
 "gc körs redan på maskinen \"%s\" pid %<PRIuMAX> (använd --force om så inte "
 "är fallet)"
 
-#: builtin/gc.c:364
+#: builtin/gc.c:376
 msgid ""
 "There are too many unreachable loose objects; run 'git prune' to remove them."
 msgstr ""
 "Det finns för många onåbara lösa objekt; kör \"git prune\" för att ta bort "
 "dem."
 
@@ -5805,13 +5895,13 @@
 msgstr "visa träffade filer i filbläddraren"
 
 #: builtin/grep.c:740
 msgid "allow calling of grep(1) (ignored by this build)"
 msgstr "tillåt anropa grep(1) (ignoreras av detta bygge)"
 
-#: builtin/grep.c:741 builtin/show-ref.c:187
+#: builtin/grep.c:741 builtin/show-ref.c:189
 msgid "show usage"
 msgstr "visa användning"
 
 #: builtin/grep.c:808
 msgid "no pattern given."
 msgstr "inget mönster angavs."
@@ -5833,51 +5923,51 @@
 msgstr "--[no-]exclude-standard kan inte användas för spårat innehåll."
 
 #: builtin/grep.c:908
 msgid "both --cached and trees are given."
 msgstr "både --cached och träd angavs."
 
-#: builtin/hash-object.c:82
+#: builtin/hash-object.c:80
 msgid ""
 "git hash-object [-t <type>] [-w] [--path=<file> | --no-filters] [--stdin] "
 "[--] <file>..."
 msgstr ""
 "git hash-object [-t <typ>] [-w] [--path=<fil> | --no-filters] [--stdin] [--] "
 "<fil>..."
 
-#: builtin/hash-object.c:83
+#: builtin/hash-object.c:81
 msgid "git hash-object  --stdin-paths < <list-of-paths>"
 msgstr "git hash-object  --stdin-paths < <sökvägslista>"
 
-#: builtin/hash-object.c:94 builtin/tag.c:612
+#: builtin/hash-object.c:92 builtin/tag.c:612
 msgid "type"
 msgstr "typ"
 
-#: builtin/hash-object.c:94
+#: builtin/hash-object.c:92
 msgid "object type"
 msgstr "objekttyp"
 
-#: builtin/hash-object.c:95
+#: builtin/hash-object.c:93
 msgid "write the object into the object database"
 msgstr "skriv objektet till objektdatabasen"
 
-#: builtin/hash-object.c:97
+#: builtin/hash-object.c:95
 msgid "read the object from stdin"
 msgstr "läs objektet från standard in"
 
-#: builtin/hash-object.c:99
+#: builtin/hash-object.c:97
 msgid "store file as is without filters"
 msgstr "spara filen som den är utan filer"
 
-#: builtin/hash-object.c:100
+#: builtin/hash-object.c:98
 msgid ""
 "just hash any random garbage to create corrupt objects for debugging Git"
 msgstr ""
 "hasha slumpmässigt skräp för att skapa korrupta objekt för felsökning av Git"
 
-#: builtin/hash-object.c:101
+#: builtin/hash-object.c:99
 msgid "process file as it were from this path"
 msgstr "hantera filen som om den kom från sökvägen"
 
 #: builtin/help.c:41
 msgid "print all available commands"
 msgstr "visa alla tillgängliga kommandon"
@@ -5999,297 +6089,297 @@
 
 #: builtin/help.c:501
 #, c-format
 msgid "`git %s' is aliased to `%s'"
 msgstr "\"git %s\" är ett alias för \"%s\""
 
-#: builtin/index-pack.c:150
+#: builtin/index-pack.c:151
 #, c-format
 msgid "unable to open %s"
 msgstr "kunde inte öppna %s"
 
-#: builtin/index-pack.c:200
+#: builtin/index-pack.c:201
 #, c-format
 msgid "object type mismatch at %s"
 msgstr "objekttyp stämmer inte överens vid %s"
 
-#: builtin/index-pack.c:220
+#: builtin/index-pack.c:221
 #, c-format
 msgid "did not receive expected object %s"
 msgstr "emottog inte det förväntade objektet %s"
 
-#: builtin/index-pack.c:223
+#: builtin/index-pack.c:224
 #, c-format
 msgid "object %s: expected type %s, found %s"
 msgstr "objektet %s: förväntad typ %s, såg %s"
 
-#: builtin/index-pack.c:265
+#: builtin/index-pack.c:266
 #, c-format
 msgid "cannot fill %d byte"
 msgid_plural "cannot fill %d bytes"
 msgstr[0] "kan inte fylla %d byte"
 msgstr[1] "kan inte fylla %d byte"
 
-#: builtin/index-pack.c:275
+#: builtin/index-pack.c:276
 msgid "early EOF"
 msgstr "tidigt filslut"
 
-#: builtin/index-pack.c:276
+#: builtin/index-pack.c:277
 msgid "read error on input"
 msgstr "indataläsfel"
 
-#: builtin/index-pack.c:288
+#: builtin/index-pack.c:289
 msgid "used more bytes than were available"
 msgstr "använde fler byte än tillgängligt"
 
-#: builtin/index-pack.c:295
+#: builtin/index-pack.c:296
 msgid "pack too large for current definition of off_t"
 msgstr "paket för stort för nuvarande definition av off_t"
 
-#: builtin/index-pack.c:311
+#: builtin/index-pack.c:312
 #, c-format
 msgid "unable to create '%s'"
 msgstr "kunde inte skapa \"%s\""
 
-#: builtin/index-pack.c:316
+#: builtin/index-pack.c:317
 #, c-format
 msgid "cannot open packfile '%s'"
 msgstr "kan inte öppna paketfilen \"%s\""
 
-#: builtin/index-pack.c:330
+#: builtin/index-pack.c:331
 msgid "pack signature mismatch"
 msgstr "paketsignatur stämmer inte överens"
 
-#: builtin/index-pack.c:332
+#: builtin/index-pack.c:333
 #, c-format
 msgid "pack version %<PRIu32> unsupported"
 msgstr "paketversion %<PRIu32> stöds ej"
 
-#: builtin/index-pack.c:350
+#: builtin/index-pack.c:351
 #, c-format
 msgid "pack has bad object at offset %lu: %s"
 msgstr "paketet har felaktigt objekt vid index %lu: %s"
 
-#: builtin/index-pack.c:471
+#: builtin/index-pack.c:472
 #, c-format
 msgid "inflate returned %d"
 msgstr "inflate returnerade %d"
 
-#: builtin/index-pack.c:520
+#: builtin/index-pack.c:521
 msgid "offset value overflow for delta base object"
 msgstr "indexvärdespill för deltabasobjekt"
 
-#: builtin/index-pack.c:528
+#: builtin/index-pack.c:529
 msgid "delta base offset is out of bound"
 msgstr "deltabasindex utanför gränsen"
 
-#: builtin/index-pack.c:536
+#: builtin/index-pack.c:537
 #, c-format
 msgid "unknown object type %d"
 msgstr "okänd objekttyp %d"
 
-#: builtin/index-pack.c:567
+#: builtin/index-pack.c:568
 msgid "cannot pread pack file"
 msgstr "kan inte utföra \"pread\" på paketfil"
 
-#: builtin/index-pack.c:569
+#: builtin/index-pack.c:570
 #, c-format
 msgid "premature end of pack file, %lu byte missing"
 msgid_plural "premature end of pack file, %lu bytes missing"
 msgstr[0] "för tidigt slut på paketfilen, %lu byte saknas"
 msgstr[1] "för tidigt slut på paketfilen, %lu byte saknas"
 
-#: builtin/index-pack.c:595
+#: builtin/index-pack.c:596
 msgid "serious inflate inconsistency"
 msgstr "allvarlig inflate-inkonsekvens"
 
-#: builtin/index-pack.c:686 builtin/index-pack.c:692 builtin/index-pack.c:715
-#: builtin/index-pack.c:749 builtin/index-pack.c:758
+#: builtin/index-pack.c:742 builtin/index-pack.c:748 builtin/index-pack.c:771
+#: builtin/index-pack.c:805 builtin/index-pack.c:814
 #, c-format
 msgid "SHA1 COLLISION FOUND WITH %s !"
 msgstr "SHA1-KOLLISION UPPTÄCKT VID %s !"
 
-#: builtin/index-pack.c:689 builtin/pack-objects.c:162
+#: builtin/index-pack.c:745 builtin/pack-objects.c:162
 #: builtin/pack-objects.c:254
 #, c-format
 msgid "unable to read %s"
 msgstr "kunde inte läsa %s"
 
-#: builtin/index-pack.c:755
+#: builtin/index-pack.c:811
 #, c-format
 msgid "cannot read existing object %s"
 msgstr "kan inte läsa befintligt objekt %s"
 
-#: builtin/index-pack.c:769
+#: builtin/index-pack.c:825
 #, c-format
 msgid "invalid blob object %s"
 msgstr "ogiltigt blob-objekt %s"
 
-#: builtin/index-pack.c:783
+#: builtin/index-pack.c:839
 #, c-format
 msgid "invalid %s"
 msgstr "ogiltigt %s"
 
-#: builtin/index-pack.c:787
+#: builtin/index-pack.c:843
 msgid "Error in object"
 msgstr "Fel i objekt"
 
-#: builtin/index-pack.c:789
+#: builtin/index-pack.c:845
 #, c-format
 msgid "Not all child objects of %s are reachable"
 msgstr "Inte alla barnobjekt för %s kan nås"
 
-#: builtin/index-pack.c:861 builtin/index-pack.c:890
+#: builtin/index-pack.c:917 builtin/index-pack.c:948
 msgid "failed to apply delta"
 msgstr "misslyckades tillämpa delta"
 
-#: builtin/index-pack.c:1055
+#: builtin/index-pack.c:1118
 msgid "Receiving objects"
 msgstr "Tar emot objekt"
 
-#: builtin/index-pack.c:1055
+#: builtin/index-pack.c:1118
 msgid "Indexing objects"
 msgstr "Skapar index för objekt"
 
-#: builtin/index-pack.c:1081
+#: builtin/index-pack.c:1150
 msgid "pack is corrupted (SHA1 mismatch)"
 msgstr "paketet är trasigt (SHA1 stämmer inte)"
 
-#: builtin/index-pack.c:1086
+#: builtin/index-pack.c:1155
 msgid "cannot fstat packfile"
 msgstr "kan inte utföra \"fstat\" på paketfil"
 
-#: builtin/index-pack.c:1089
+#: builtin/index-pack.c:1158
 msgid "pack has junk at the end"
 msgstr "paket har skräp i slutet"
 
-#: builtin/index-pack.c:1100
+#: builtin/index-pack.c:1169
 msgid "confusion beyond insanity in parse_pack_objects()"
 msgstr "förvirrad bortom vanvett i parse_pack_objects()"
 
-#: builtin/index-pack.c:1123
+#: builtin/index-pack.c:1194
 msgid "Resolving deltas"
 msgstr "Analyserar delta"
 
-#: builtin/index-pack.c:1133
+#: builtin/index-pack.c:1205
 #, c-format
 msgid "unable to create thread: %s"
 msgstr "kunde inte skapa tråd: %s"
 
-#: builtin/index-pack.c:1175
+#: builtin/index-pack.c:1247
 msgid "confusion beyond insanity"
 msgstr "förvirrad bortom vanvett"
 
-#: builtin/index-pack.c:1181
+#: builtin/index-pack.c:1253
 #, c-format
 msgid "completed with %d local objects"
 msgstr "slutfördes med %d lokala objekt"
 
-#: builtin/index-pack.c:1191
+#: builtin/index-pack.c:1263
 #, c-format
 msgid "Unexpected tail checksum for %s (disk corruption?)"
 msgstr "Oväntad svanschecksumma för %s (trasig disk?)"
 
-#: builtin/index-pack.c:1195
+#: builtin/index-pack.c:1267
 #, c-format
 msgid "pack has %d unresolved delta"
 msgid_plural "pack has %d unresolved deltas"
 msgstr[0] "paketet har %d oanalyserat delta"
 msgstr[1] "paketet har %d oanalyserade delta"
 
-#: builtin/index-pack.c:1219
+#: builtin/index-pack.c:1291
 #, c-format
 msgid "unable to deflate appended object (%d)"
 msgstr "kunde inte utföra \"deflate\" på tillagt objekt (%d)"
 
-#: builtin/index-pack.c:1298
+#: builtin/index-pack.c:1367
 #, c-format
 msgid "local object %s is corrupt"
 msgstr "lokalt objekt %s är trasigt"
 
-#: builtin/index-pack.c:1322
+#: builtin/index-pack.c:1391
 msgid "error while closing pack file"
 msgstr "fel vid stängning av paketfil"
 
-#: builtin/index-pack.c:1335
+#: builtin/index-pack.c:1404
 #, c-format
 msgid "cannot write keep file '%s'"
 msgstr "kan inte ta skriva \"keep\"-fil \"%s\""
 
-#: builtin/index-pack.c:1343
+#: builtin/index-pack.c:1412
 #, c-format
 msgid "cannot close written keep file '%s'"
 msgstr "akn inte stänga skriven \"keep\"-fil \"%s\""
 
-#: builtin/index-pack.c:1356
+#: builtin/index-pack.c:1425
 msgid "cannot store pack file"
 msgstr "kan inte spara paketfil"
 
-#: builtin/index-pack.c:1367
+#: builtin/index-pack.c:1436
 msgid "cannot store index file"
 msgstr "kan inte spara indexfil"
 
-#: builtin/index-pack.c:1400
+#: builtin/index-pack.c:1469
 #, c-format
 msgid "bad pack.indexversion=%<PRIu32>"
 msgstr "felaktig pack.indexversion=%<PRIu32>"
 
-#: builtin/index-pack.c:1406
+#: builtin/index-pack.c:1475
 #, c-format
 msgid "invalid number of threads specified (%d)"
 msgstr "felaktigt antal trådar angivet (%d)"
 
-#: builtin/index-pack.c:1410 builtin/index-pack.c:1589
+#: builtin/index-pack.c:1479 builtin/index-pack.c:1658
 #, c-format
 msgid "no threads support, ignoring %s"
 msgstr "trådstöd saknas, ignorerar %s"
 
-#: builtin/index-pack.c:1468
+#: builtin/index-pack.c:1537
 #, c-format
 msgid "Cannot open existing pack file '%s'"
 msgstr "Kan inte öppna befintlig paketfil \"%s\""
 
-#: builtin/index-pack.c:1470
+#: builtin/index-pack.c:1539
 #, c-format
 msgid "Cannot open existing pack idx file for '%s'"
 msgstr "Kan inte öppna befintlig paket-idx-fil för \"%s\""
 
-#: builtin/index-pack.c:1517
+#: builtin/index-pack.c:1586
 #, c-format
 msgid "non delta: %d object"
 msgid_plural "non delta: %d objects"
 msgstr[0] "icke-delta: %d objekt"
 msgstr[1] "icke-delta: %d objekt"
 
-#: builtin/index-pack.c:1524
+#: builtin/index-pack.c:1593
 #, c-format
 msgid "chain length = %d: %lu object"
 msgid_plural "chain length = %d: %lu objects"
 msgstr[0] "kedjelängd = %d: %lu objekt"
 msgstr[1] "kedjelängd = %d: %lu objekt"
 
-#: builtin/index-pack.c:1553
+#: builtin/index-pack.c:1622
 msgid "Cannot come back to cwd"
 msgstr "Kan inte gå tillbaka till arbetskatalogen (cwd)"
 
-#: builtin/index-pack.c:1601 builtin/index-pack.c:1604
-#: builtin/index-pack.c:1616 builtin/index-pack.c:1620
+#: builtin/index-pack.c:1670 builtin/index-pack.c:1673
+#: builtin/index-pack.c:1685 builtin/index-pack.c:1689
 #, c-format
 msgid "bad %s"
 msgstr "felaktig %s"
 
-#: builtin/index-pack.c:1634
+#: builtin/index-pack.c:1703
 msgid "--fix-thin cannot be used without --stdin"
 msgstr "--fix-thin kan inte användas med --stdin"
 
-#: builtin/index-pack.c:1638 builtin/index-pack.c:1647
+#: builtin/index-pack.c:1707 builtin/index-pack.c:1716
 #, c-format
 msgid "packfile name '%s' does not end with '.pack'"
 msgstr "paketfilnamnet \"%s\" slutar inte med \".pack\""
 
-#: builtin/index-pack.c:1655
+#: builtin/index-pack.c:1724
 msgid "--verify with no packfile name given"
 msgstr "--verify angavs utan paketfilnamn"
 
 #: builtin/init-db.c:35
 #, c-format
 msgid "Could not make %s writable by group"
@@ -6352,103 +6442,103 @@
 
 #: builtin/init-db.c:157
 #, c-format
 msgid "not copying templates of a wrong format version %d from '%s'"
 msgstr "kopierade inte mallar från felaktig formatversion %d från \"%s\""
 
-#: builtin/init-db.c:197
+#: builtin/init-db.c:211
 #, c-format
 msgid "insane git directory %s"
 msgstr "tokig git-katalog %s"
 
-#: builtin/init-db.c:331 builtin/init-db.c:334
+#: builtin/init-db.c:343 builtin/init-db.c:346
 #, c-format
 msgid "%s already exists"
 msgstr "%s finns redan"
 
-#: builtin/init-db.c:363
+#: builtin/init-db.c:374
 #, c-format
 msgid "unable to handle file type %d"
 msgstr "kan inte hantera filtyp %d"
 
-#: builtin/init-db.c:366
+#: builtin/init-db.c:377
 #, c-format
 msgid "unable to move %s to %s"
 msgstr "kan inte flytta %s till %s"
 
 #. TRANSLATORS: The first '%s' is either "Reinitialized
 #. existing" or "Initialized empty", the second " shared" or
 #. "", and the last '%s%s' is the verbatim directory name.
-#: builtin/init-db.c:426
+#: builtin/init-db.c:433
 #, c-format
 msgid "%s%s Git repository in %s%s\n"
 msgstr "%s%s Git-arkiv i %s%s\n"
 
-#: builtin/init-db.c:427
+#: builtin/init-db.c:434
 msgid "Reinitialized existing"
 msgstr "Ominitierade befintligt"
 
-#: builtin/init-db.c:427
+#: builtin/init-db.c:434
 msgid "Initialized empty"
 msgstr "Initierade tomt"
 
-#: builtin/init-db.c:428
+#: builtin/init-db.c:435
 msgid " shared"
 msgstr " delat"
 
-#: builtin/init-db.c:475
+#: builtin/init-db.c:482
 msgid ""
-"git init [-q | --quiet] [--bare] [--template=<template-directory>] [--shared"
-"[=<permissions>]] [<directory>]"
+"git init [-q | --quiet] [--bare] [--template=<template-directory>] [--"
+"shared[=<permissions>]] [<directory>]"
 msgstr ""
-"git init [-q | --quiet] [--bare] [--template=<mallkatalog>] [--shared"
-"[=<behörigheter>]] [<katalog>]"
+"git init [-q | --quiet] [--bare] [--template=<mallkatalog>] [--"
+"shared[=<behörigheter>]] [<katalog>]"
 
-#: builtin/init-db.c:498
+#: builtin/init-db.c:505
 msgid "permissions"
 msgstr "behörigheter"
 
-#: builtin/init-db.c:499
+#: builtin/init-db.c:506
 msgid "specify that the git repository is to be shared amongst several users"
 msgstr "ange att git-arkivet skall delas bland flera användare"
 
-#: builtin/init-db.c:501 builtin/prune-packed.c:57 builtin/repack.c:171
+#: builtin/init-db.c:508 builtin/prune-packed.c:57 builtin/repack.c:171
 msgid "be quiet"
 msgstr "var tyst"
 
-#: builtin/init-db.c:533 builtin/init-db.c:538
+#: builtin/init-db.c:540 builtin/init-db.c:545
 #, c-format
 msgid "cannot mkdir %s"
 msgstr "kan inte skapa katalogen (mkdir) %s"
 
-#: builtin/init-db.c:542
+#: builtin/init-db.c:549
 #, c-format
 msgid "cannot chdir to %s"
 msgstr "kan inte byta katalog (chdir) till %s"
 
-#: builtin/init-db.c:563
+#: builtin/init-db.c:570
 #, c-format
 msgid ""
 "%s (or --work-tree=<directory>) not allowed without specifying %s (or --git-"
 "dir=<directory>)"
 msgstr ""
 "%s (eller --work-tree=<katalog>) inte tillåtet utan att ange %s (eller --git-"
 "dir=<katalog>)"
 
-#: builtin/init-db.c:591
+#: builtin/init-db.c:598
 #, c-format
 msgid "Cannot access work tree '%s'"
 msgstr "Kan inte komma åt arbetskatalogen \"%s\""
 
 #: builtin/interpret-trailers.c:15
 msgid ""
 "git interpret-trailers [--trim-empty] [(--trailer <token>[(=|:)<value>])...] "
 "[<file>...]"
 msgstr ""
-"git interpret-trailers [--trim-empty] [(--trailer <symbol>[(=|:)"
-"<värde>])...] [<fil>...]"
+"git interpret-trailers [--trim-empty] [(--trailer "
+"<symbol>[(=|:)<värde>])...] [<fil>...]"
 
 #: builtin/interpret-trailers.c:25
 msgid "trim empty trailers"
 msgstr "ta bort tomma släprader"
 
 #: builtin/interpret-trailers.c:26
@@ -6457,13 +6547,13 @@
 
 #: builtin/interpret-trailers.c:27
 msgid "trailer(s) to add"
 msgstr "släprad(er) att lägga till"
 
 #: builtin/log.c:41
-msgid "git log [<options>] [<revision range>] [[--] <path>...]"
+msgid "git log [<options>] [<revision-range>] [[--] <path>...]"
 msgstr "git log [<flaggor>] [<versionsintervall>] [[--] <sökväg>...]"
 
 #: builtin/log.c:42
 msgid "git show [<options>] <object>..."
 msgstr "git show [<flaggor>] <objekt>..."
 
@@ -6526,13 +6616,13 @@
 msgstr "Kan inte öppna patchfilen %s"
 
 #: builtin/log.c:803
 msgid "Need exactly one range."
 msgstr "Behöver precis ett intervall."
 
-#: builtin/log.c:811
+#: builtin/log.c:813
 msgid "Not a range."
 msgstr "Inte ett intervall."
 
 #: builtin/log.c:919
 msgid "Cover letter needs email format"
 msgstr "Omslagsbrevet behöver e-postformat"
@@ -6726,19 +6816,19 @@
 msgstr "Misslyckades skapa utdatafiler"
 
 #: builtin/log.c:1583
 msgid "git cherry [-v] [<upstream> [<head> [<limit>]]]"
 msgstr "git cherry [-v] [<uppström> [<huvud> [<gräns>]]]"
 
-#: builtin/log.c:1638
+#: builtin/log.c:1637
 #, c-format
 msgid ""
 "Could not find a tracked remote branch, please specify <upstream> manually.\n"
 msgstr "Kunde inte hitta en spårad fjärrgren, ange <uppström> manuellt.\n"
 
-#: builtin/log.c:1651 builtin/log.c:1653 builtin/log.c:1665
+#: builtin/log.c:1648 builtin/log.c:1650 builtin/log.c:1662
 #, c-format
 msgid "Unknown commit %s"
 msgstr "Okänd incheckning %s"
 
 #: builtin/ls-files.c:358
 msgid "git ls-files [<options>] [<file>...]"
@@ -7005,48 +7095,48 @@
 
 #: builtin/merge.c:447
 #, c-format
 msgid "'%s' does not point to a commit"
 msgstr "\"%s\" verkar inte peka på en incheckning"
 
-#: builtin/merge.c:559
+#: builtin/merge.c:537
 #, c-format
 msgid "Bad branch.%s.mergeoptions string: %s"
 msgstr "Felaktig branch.%s.mergeoptions-sträng: %s"
 
-#: builtin/merge.c:654
+#: builtin/merge.c:632
 msgid "git write-tree failed to write a tree"
 msgstr "git write-tree misslyckades skriva ett träd"
 
-#: builtin/merge.c:678
+#: builtin/merge.c:656
 msgid "Not handling anything other than two heads merge."
 msgstr "Hanterar inte något annat än en sammanslagning av två huvuden."
 
-#: builtin/merge.c:692
+#: builtin/merge.c:670
 #, c-format
 msgid "Unknown option for merge-recursive: -X%s"
 msgstr "Felaktig flagga för merge-recursive: -X%s"
 
-#: builtin/merge.c:705
+#: builtin/merge.c:683
 #, c-format
 msgid "unable to write %s"
 msgstr "kunde inte skriva %s"
 
-#: builtin/merge.c:794
+#: builtin/merge.c:772
 #, c-format
 msgid "Could not read from '%s'"
 msgstr "Kunde inte läsa från \"%s\""
 
-#: builtin/merge.c:803
+#: builtin/merge.c:781
 #, c-format
 msgid "Not committing merge; use 'git commit' to complete the merge.\n"
 msgstr ""
 "Checkar inte in sammanslagningen; använd \"git commit\" för att slutföra "
 "den.\n"
 
-#: builtin/merge.c:809
+#: builtin/merge.c:787
 #, c-format
 msgid ""
 "Please enter a commit message to explain why this merge is necessary,\n"
 "especially if it merges an updated upstream into a topic branch.\n"
 "\n"
 "Lines starting with '%c' will be ignored, and an empty message aborts\n"
@@ -7056,169 +7146,174 @@
 "är nödvändig, speciellt om den slår in en uppdaterad uppström i en\n"
 "temagren.\n"
 "\n"
 "Rader som inleds med \"%c\" kommer ignoreras, och ett tomt meddelande\n"
 "avbryter incheckningen.\n"
 
-#: builtin/merge.c:833
+#: builtin/merge.c:811
 msgid "Empty commit message."
 msgstr "Tomt incheckningsmeddelande."
 
-#: builtin/merge.c:845
+#: builtin/merge.c:823
 #, c-format
 msgid "Wonderful.\n"
 msgstr "Underbart.\n"
 
-#: builtin/merge.c:900
+#: builtin/merge.c:878
 #, c-format
 msgid "Automatic merge failed; fix conflicts and then commit the result.\n"
 msgstr ""
 "Kunde inte slå ihop automatiskt; fixa konflikter och checka in resultatet.\n"
 
-#: builtin/merge.c:916
+#: builtin/merge.c:894
 #, c-format
 msgid "'%s' is not a commit"
 msgstr "\"%s\" är inte en incheckning"
 
-#: builtin/merge.c:957
+#: builtin/merge.c:935
 msgid "No current branch."
 msgstr "Inte på någon gren."
 
-#: builtin/merge.c:959
+#: builtin/merge.c:937
 msgid "No remote for the current branch."
 msgstr "Ingen fjärr för aktuell gren."
 
-#: builtin/merge.c:961
+#: builtin/merge.c:939
 msgid "No default upstream defined for the current branch."
 msgstr "Ingen standarduppström angiven för aktuell gren."
 
-#: builtin/merge.c:966
+#: builtin/merge.c:944
 #, c-format
 msgid "No remote-tracking branch for %s from %s"
 msgstr "Ingen fjärrspårande gren för %s från %s"
 
-#: builtin/merge.c:1122
+#: builtin/merge.c:1081
+#, c-format
+msgid "could not close '%s'"
+msgstr "kunde inte stänga \"%s\""
+
+#: builtin/merge.c:1208
 msgid "There is no merge to abort (MERGE_HEAD missing)."
 msgstr "Det finns ingen sammanslagning att avbryta (MERGE_HEAD saknas)."
 
-#: builtin/merge.c:1138
+#: builtin/merge.c:1224
 msgid ""
 "You have not concluded your merge (MERGE_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 "Du har inte avslutat sammanslagningen (MERGE_HEAD finns).\n"
 "Checka in dina ändringar innan du slår ihop."
 
-#: builtin/merge.c:1141 git-pull.sh:34
+#: builtin/merge.c:1227 git-pull.sh:74
 msgid "You have not concluded your merge (MERGE_HEAD exists)."
 msgstr "Du har inte avslutat sammanslagningen (MERGE_HEAD finns)."
 
-#: builtin/merge.c:1145
+#: builtin/merge.c:1231
 msgid ""
 "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 "Du har inte avslutat din \"cherry-pick\" (CHERRY_PICK_HEAD finns).\n"
 "Checka in dina ändringar innan du slår ihop."
 
-#: builtin/merge.c:1148
+#: builtin/merge.c:1234
 msgid "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists)."
 msgstr "Du har inte avslutat din \"cherry-pick\" (CHERRY_PICK_HEAD finns)."
 
-#: builtin/merge.c:1157
+#: builtin/merge.c:1243
 msgid "You cannot combine --squash with --no-ff."
 msgstr "Du kan inte kombinera --squash med --no-ff."
 
-#: builtin/merge.c:1166
+#: builtin/merge.c:1251
 msgid "No commit specified and merge.defaultToUpstream not set."
 msgstr "Ingen incheckning angiven och merge.defaultToUpstream är ej satt."
 
-#: builtin/merge.c:1198
-msgid "Can merge only exactly one commit into empty head"
-msgstr "Kan endast slå ihop en enda incheckning i ett tomt huvud."
-
-#: builtin/merge.c:1201
+#: builtin/merge.c:1268
 msgid "Squash commit into empty head not supported yet"
 msgstr "Stöder inte en tillplattningsincheckning på ett tomt huvud ännu"
 
-#: builtin/merge.c:1203
+#: builtin/merge.c:1270
 msgid "Non-fast-forward commit does not make sense into an empty head"
 msgstr "Icke-snabbspolad incheckning kan inte användas med ett tomt huvud"
 
-#: builtin/merge.c:1208
+#: builtin/merge.c:1276
 #, c-format
 msgid "%s - not something we can merge"
 msgstr "%s - inte något vi kan slå ihop"
 
-#: builtin/merge.c:1259
+#: builtin/merge.c:1278
+msgid "Can merge only exactly one commit into empty head"
+msgstr "Kan endast slå ihop en enda incheckning i ett tomt huvud."
+
+#: builtin/merge.c:1333
 #, c-format
 msgid "Commit %s has an untrusted GPG signature, allegedly by %s."
 msgstr ""
 "Incheckningen %s har en obetrodd GPG-signatur som påstås vara gjord av %s."
 
-#: builtin/merge.c:1262
+#: builtin/merge.c:1336
 #, c-format
 msgid "Commit %s has a bad GPG signature allegedly by %s."
 msgstr ""
 "Incheckningen %s har en felaktig GPG-signatur som påstås vara gjord av %s."
 
-#: builtin/merge.c:1265
+#: builtin/merge.c:1339
 #, c-format
 msgid "Commit %s does not have a GPG signature."
 msgstr "Incheckning %s har inte någon GPG-signatur."
 
-#: builtin/merge.c:1268
+#: builtin/merge.c:1342
 #, c-format
 msgid "Commit %s has a good GPG signature by %s\n"
 msgstr "Incheckningen %s har en korrekt GPG-signatur av %s\n"
 
-#: builtin/merge.c:1349
+#: builtin/merge.c:1423
 #, c-format
 msgid "Updating %s..%s\n"
 msgstr "Uppdaterar %s..%s\n"
 
-#: builtin/merge.c:1388
+#: builtin/merge.c:1462
 #, c-format
 msgid "Trying really trivial in-index merge...\n"
 msgstr "Försöker riktigt enkel sammanslagning i indexet...\n"
 
-#: builtin/merge.c:1395
+#: builtin/merge.c:1469
 #, c-format
 msgid "Nope.\n"
 msgstr "Nej.\n"
 
-#: builtin/merge.c:1427
+#: builtin/merge.c:1501
 msgid "Not possible to fast-forward, aborting."
 msgstr "Kan inte snabbspola, avbryter."
 
-#: builtin/merge.c:1450 builtin/merge.c:1529
+#: builtin/merge.c:1524 builtin/merge.c:1603
 #, c-format
 msgid "Rewinding the tree to pristine...\n"
 msgstr "Återspolar trädet till orört...\n"
 
-#: builtin/merge.c:1454
+#: builtin/merge.c:1528
 #, c-format
 msgid "Trying merge strategy %s...\n"
 msgstr "Försöker sammanslagningsstrategin %s...\n"
 
-#: builtin/merge.c:1520
+#: builtin/merge.c:1594
 #, c-format
 msgid "No merge strategy handled the merge.\n"
 msgstr "Ingen sammanslagningsstrategi hanterade sammanslagningen.\n"
 
-#: builtin/merge.c:1522
+#: builtin/merge.c:1596
 #, c-format
 msgid "Merge with strategy %s failed.\n"
 msgstr "Sammanslagning med strategin %s misslyckades.\n"
 
-#: builtin/merge.c:1531
+#: builtin/merge.c:1605
 #, c-format
 msgid "Using the %s to prepare resolving by hand.\n"
 msgstr "Använder %s för att förbereda lösning för hand.\n"
 
-#: builtin/merge.c:1543
+#: builtin/merge.c:1617
 #, c-format
 msgid "Automatic merge went well; stopped before committing as requested\n"
 msgstr ""
 "Automatisk sammanslagning lyckades; stoppar före incheckning som önskat\n"
 
 #: builtin/merge-base.c:29
@@ -7402,13 +7497,13 @@
 
 #: builtin/mv.c:253
 #, c-format
 msgid "Renaming %s to %s\n"
 msgstr "Byter namn på %s till %s\n"
 
-#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:359
+#: builtin/mv.c:256 builtin/remote.c:725 builtin/repack.c:361
 #, c-format
 msgid "renaming '%s' failed"
 msgstr "misslyckades byta namn på \"%s\""
 
 #: builtin/name-rev.c:255
 msgid "git name-rev [<options>] <commit>..."
@@ -7778,13 +7873,13 @@
 msgstr "anteckningar-ref"
 
 #: builtin/notes.c:954
 msgid "use notes from <notes-ref>"
 msgstr "använd anteckningar från <anteckningsref>"
 
-#: builtin/notes.c:989 builtin/remote.c:1621
+#: builtin/notes.c:989 builtin/remote.c:1618
 #, c-format
 msgid "Unknown subcommand: %s"
 msgstr "Okänt underkommando: %s"
 
 #: builtin/pack-objects.c:28
 msgid "git pack-objects --stdout [options...] [< ref-list | < object-list]"
@@ -7800,177 +7895,177 @@
 msgstr "fel i deflate (%d)"
 
 #: builtin/pack-objects.c:771
 msgid "Writing objects"
 msgstr "Skriver objekt"
 
-#: builtin/pack-objects.c:1013
+#: builtin/pack-objects.c:1011
 msgid "disabling bitmap writing, as some objects are not being packed"
 msgstr "inaktiverar skrivning av bitkarta då några objekt inte packas"
 
-#: builtin/pack-objects.c:2173
+#: builtin/pack-objects.c:2171
 msgid "Compressing objects"
 msgstr "Komprimerar objekt"
 
-#: builtin/pack-objects.c:2570
+#: builtin/pack-objects.c:2568
 #, c-format
 msgid "unsupported index version %s"
 msgstr "indexversionen %s stöds ej"
 
-#: builtin/pack-objects.c:2574
+#: builtin/pack-objects.c:2572
 #, c-format
 msgid "bad index version '%s'"
 msgstr "felaktig indexversion \"%s\""
 
-#: builtin/pack-objects.c:2597
+#: builtin/pack-objects.c:2595
 #, c-format
 msgid "option %s does not accept negative form"
 msgstr "flaggan %s godtar inte negativ form"
 
-#: builtin/pack-objects.c:2601
+#: builtin/pack-objects.c:2599
 #, c-format
 msgid "unable to parse value '%s' for option %s"
 msgstr "kunde inte tolka värdet \"%s\" för flaggan %s"
 
-#: builtin/pack-objects.c:2621
+#: builtin/pack-objects.c:2619
 msgid "do not show progress meter"
 msgstr "visa inte förloppsindikator"
 
-#: builtin/pack-objects.c:2623
+#: builtin/pack-objects.c:2621
 msgid "show progress meter"
 msgstr "visa förloppsindikator"
 
-#: builtin/pack-objects.c:2625
+#: builtin/pack-objects.c:2623
 msgid "show progress meter during object writing phase"
 msgstr "visa förloppsindikator under objektskrivningsfasen"
 
-#: builtin/pack-objects.c:2628
+#: builtin/pack-objects.c:2626
 msgid "similar to --all-progress when progress meter is shown"
 msgstr "som --all-progress när förloppsmätaren visas"
 
-#: builtin/pack-objects.c:2629
+#: builtin/pack-objects.c:2627
 msgid "version[,offset]"
 msgstr "version[,offset]"
 
-#: builtin/pack-objects.c:2630
+#: builtin/pack-objects.c:2628
 msgid "write the pack index file in the specified idx format version"
 msgstr "skriv paketindexfilen i angiven indexformatversion"
 
-#: builtin/pack-objects.c:2633
+#: builtin/pack-objects.c:2631
 msgid "maximum size of each output pack file"
 msgstr "maximal storlek på varje utdatapaketfil"
 
-#: builtin/pack-objects.c:2635
+#: builtin/pack-objects.c:2633
 msgid "ignore borrowed objects from alternate object store"
 msgstr "ignorera lånade objekt från alternativa objektlager"
 
-#: builtin/pack-objects.c:2637
+#: builtin/pack-objects.c:2635
 msgid "ignore packed objects"
 msgstr "ignorera packade objekt"
 
-#: builtin/pack-objects.c:2639
+#: builtin/pack-objects.c:2637
 msgid "limit pack window by objects"
 msgstr "begränsa paketfönster efter objekt"
 
-#: builtin/pack-objects.c:2641
+#: builtin/pack-objects.c:2639
 msgid "limit pack window by memory in addition to object limit"
 msgstr "begränsa paketfönster efter minne förutom objektgräns"
 
-#: builtin/pack-objects.c:2643
+#: builtin/pack-objects.c:2641
 msgid "maximum length of delta chain allowed in the resulting pack"
 msgstr "maximal längd på deltakedja tillåten i slutligt paket"
 
-#: builtin/pack-objects.c:2645
+#: builtin/pack-objects.c:2643
 msgid "reuse existing deltas"
 msgstr "återanvänd befintliga delta"
 
-#: builtin/pack-objects.c:2647
+#: builtin/pack-objects.c:2645
 msgid "reuse existing objects"
 msgstr "återanvänd befintliga objekt"
 
-#: builtin/pack-objects.c:2649
+#: builtin/pack-objects.c:2647
 msgid "use OFS_DELTA objects"
 msgstr "använd OFS_DELTA-objekt"
 
-#: builtin/pack-objects.c:2651
+#: builtin/pack-objects.c:2649
 msgid "use threads when searching for best delta matches"
 msgstr "använd trådar vid sökning efter bästa deltaträffar"
 
-#: builtin/pack-objects.c:2653
+#: builtin/pack-objects.c:2651
 msgid "do not create an empty pack output"
 msgstr "försök inte skapa tom paketutdata"
 
-#: builtin/pack-objects.c:2655
+#: builtin/pack-objects.c:2653
 msgid "read revision arguments from standard input"
 msgstr "läs revisionsargument från standard in"
 
-#: builtin/pack-objects.c:2657
+#: builtin/pack-objects.c:2655
 msgid "limit the objects to those that are not yet packed"
 msgstr "begränsa objekt till de som ännu inte packats"
 
-#: builtin/pack-objects.c:2660
+#: builtin/pack-objects.c:2658
 msgid "include objects reachable from any reference"
 msgstr "inkludera objekt som kan nås från någon referens"
 
-#: builtin/pack-objects.c:2663
+#: builtin/pack-objects.c:2661
 msgid "include objects referred by reflog entries"
 msgstr "inkludera objekt som refereras från referensloggposter"
 
-#: builtin/pack-objects.c:2666
+#: builtin/pack-objects.c:2664
 msgid "include objects referred to by the index"
 msgstr "inkludera objekt som refereras från indexet"
 
-#: builtin/pack-objects.c:2669
+#: builtin/pack-objects.c:2667
 msgid "output pack to stdout"
 msgstr "skriv paket på standard ut"
 
-#: builtin/pack-objects.c:2671
+#: builtin/pack-objects.c:2669
 msgid "include tag objects that refer to objects to be packed"
 msgstr "inkludera taggobjekt som refererar objekt som skall packas"
 
-#: builtin/pack-objects.c:2673
+#: builtin/pack-objects.c:2671
 msgid "keep unreachable objects"
 msgstr "behåll onåbara objekt"
 
-#: builtin/pack-objects.c:2674 parse-options.h:140
+#: builtin/pack-objects.c:2672 parse-options.h:139
 msgid "time"
 msgstr "tid"
 
-#: builtin/pack-objects.c:2675
+#: builtin/pack-objects.c:2673
 msgid "unpack unreachable objects newer than <time>"
 msgstr "packa upp onåbara objekt nyare än <tid>"
 
-#: builtin/pack-objects.c:2678
+#: builtin/pack-objects.c:2676
 msgid "create thin packs"
 msgstr "skapa tunna paket"
 
-#: builtin/pack-objects.c:2680
+#: builtin/pack-objects.c:2678
 msgid "create packs suitable for shallow fetches"
 msgstr "skapa packfiler lämpade för grunda hämtningar"
 
-#: builtin/pack-objects.c:2682
+#: builtin/pack-objects.c:2680
 msgid "ignore packs that have companion .keep file"
 msgstr "ignorera paket som har tillhörande .keep-fil"
 
-#: builtin/pack-objects.c:2684
+#: builtin/pack-objects.c:2682
 msgid "pack compression level"
 msgstr "komprimeringsgrad för paket"
 
-#: builtin/pack-objects.c:2686
+#: builtin/pack-objects.c:2684
 msgid "do not hide commits by grafts"
 msgstr "göm inte incheckningar med ympningar (\"grafts\")"
 
-#: builtin/pack-objects.c:2688
+#: builtin/pack-objects.c:2686
 msgid "use a bitmap index if available to speed up counting objects"
 msgstr "använd bitkartindex om tillgängligt för att räkna objekt snabbare"
 
-#: builtin/pack-objects.c:2690
+#: builtin/pack-objects.c:2688
 msgid "write a bitmap index together with the pack index"
 msgstr "använd bitkartindex tillsammans med packindexet"
 
-#: builtin/pack-objects.c:2781
+#: builtin/pack-objects.c:2779
 msgid "Counting objects"
 msgstr "Räknar objekt"
 
 #: builtin/pack-refs.c:6
 msgid "git pack-refs [<options>]"
 msgstr "git pack-refs [<flaggor>]"
@@ -7988,25 +8083,25 @@
 msgstr "git prune-packed [-n | --dry-run] [-q | --quiet]"
 
 #: builtin/prune-packed.c:40
 msgid "Removing duplicate objects"
 msgstr "Tar bort duplicerade objekt"
 
-#: builtin/prune.c:12
+#: builtin/prune.c:11
 msgid "git prune [-n] [-v] [--expire <time>] [--] [<head>...]"
 msgstr "git prune [-n] [-v] [--expire <tid>] [--] [<huvud>...]"
 
-#: builtin/prune.c:106
+#: builtin/prune.c:105 builtin/worktree.c:112
 msgid "do not remove, show only"
 msgstr "ta inte bort, bara visa"
 
-#: builtin/prune.c:107
+#: builtin/prune.c:106 builtin/worktree.c:113
 msgid "report pruned objects"
 msgstr "rapportera borttagna objekt"
 
-#: builtin/prune.c:110
+#: builtin/prune.c:109 builtin/worktree.c:115
 msgid "expire objects older than <time>"
 msgstr "låt tid gå ut för objekt äldre än <tid>"
 
 #: builtin/push.c:14
 msgid "git push [<options>] [<repository> [<refspec>...]]"
 msgstr "git push [<flaggor>] [<arkiv> [<refspec>...]]"
@@ -8408,18 +8503,18 @@
 msgstr "hoppa över att applicera filter för gles utcheckning"
 
 #: builtin/read-tree.c:139
 msgid "debug unpack-trees"
 msgstr "felsök unpack-trees"
 
-#: builtin/reflog.c:429
+#: builtin/reflog.c:430
 #, c-format
 msgid "%s' for '%s' is not a valid timestamp"
 msgstr "\"%s\" för \"%s\" är inte en giltig tidsstämpel"
 
-#: builtin/reflog.c:546 builtin/reflog.c:551
+#: builtin/reflog.c:547 builtin/reflog.c:552
 #, c-format
 msgid "'%s' is not a valid timestamp"
 msgstr "\"%s\" är inte en giltig tidsstämpel"
 
 #: builtin/remote.c:12
 msgid "git remote [-v | --verbose]"
@@ -8550,18 +8645,18 @@
 msgstr "att ange en master-gren ger ingen mening med --mirror"
 
 #: builtin/remote.c:177
 msgid "specifying branches to track makes sense only with fetch mirrors"
 msgstr "att ange grenar att spåra ger mening bara med hämtningsspeglar"
 
-#: builtin/remote.c:187 builtin/remote.c:643
+#: builtin/remote.c:187 builtin/remote.c:640
 #, c-format
 msgid "remote %s already exists."
 msgstr "fjärrarkivet %s finns redan."
 
-#: builtin/remote.c:191 builtin/remote.c:647
+#: builtin/remote.c:191 builtin/remote.c:644
 #, c-format
 msgid "'%s' is not a valid remote name"
 msgstr "\"%s\" är inte ett giltigt namn på fjärrarkiv"
 
 #: builtin/remote.c:235
 #, c-format
@@ -8578,69 +8673,69 @@
 msgstr "(matchande)"
 
 #: builtin/remote.c:448
 msgid "(delete)"
 msgstr "(ta bort)"
 
-#: builtin/remote.c:592 builtin/remote.c:598 builtin/remote.c:604
+#: builtin/remote.c:589 builtin/remote.c:595 builtin/remote.c:601
 #, c-format
 msgid "Could not append '%s' to '%s'"
 msgstr "Kunde inte tillämpa \"%s\" på \"%s\""
 
-#: builtin/remote.c:636 builtin/remote.c:795 builtin/remote.c:895
+#: builtin/remote.c:633 builtin/remote.c:792 builtin/remote.c:892
 #, c-format
 msgid "No such remote: %s"
 msgstr "Inget sådant fjärrarkiv: %s"
 
-#: builtin/remote.c:653
+#: builtin/remote.c:650
 #, c-format
 msgid "Could not rename config section '%s' to '%s'"
 msgstr "Kunde inte byta namn på konfigurationssektionen \"%s\" till \"%s\""
 
-#: builtin/remote.c:659 builtin/remote.c:847
+#: builtin/remote.c:656 builtin/remote.c:844
 #, c-format
 msgid "Could not remove config section '%s'"
 msgstr "Kunde inte ta bort konfigurationssektionen \"%s\""
 
-#: builtin/remote.c:674
+#: builtin/remote.c:671
 #, c-format
 msgid ""
 "Not updating non-default fetch refspec\n"
 "\t%s\n"
 "\tPlease update the configuration manually if necessary."
 msgstr ""
 "Uppdaterar inte icke-standard hämtningsreferensspecifikation\n"
 "\t%s\n"
 "\tUppdatera konfigurationen manuellt om nödvändigt."
 
-#: builtin/remote.c:680
+#: builtin/remote.c:677
 #, c-format
 msgid "Could not append '%s'"
 msgstr "Kunde inte lägga till på \"%s\""
 
-#: builtin/remote.c:691
+#: builtin/remote.c:688
 #, c-format
 msgid "Could not set '%s'"
 msgstr "Kunde inte sätta \"%s\""
 
-#: builtin/remote.c:713
+#: builtin/remote.c:710
 #, c-format
 msgid "deleting '%s' failed"
 msgstr "misslyckades ta bort \"%s\""
 
-#: builtin/remote.c:747
+#: builtin/remote.c:744
 #, c-format
 msgid "creating '%s' failed"
 msgstr "misslyckades skapa \"%s\""
 
-#: builtin/remote.c:766
+#: builtin/remote.c:763
 #, c-format
 msgid "Could not remove branch %s"
 msgstr "Kunde inte ta bort grenen %s"
 
-#: builtin/remote.c:833
+#: builtin/remote.c:830
 msgid ""
 "Note: A branch outside the refs/remotes/ hierarchy was not removed;\n"
 "to delete it, use:"
 msgid_plural ""
 "Note: Some branches outside the refs/remotes/ hierarchy were not removed;\n"
 "to delete them, use:"
@@ -8648,268 +8743,268 @@
 "Observera: En gren utanför hierarkin refs/remotes/ togs inte bort;\n"
 "för att ta bort den, använd:"
 msgstr[1] ""
 "Observera: Några grenar utanför hierarkin refs/remotes/ togs inte bort;\n"
 "för att ta bort dem, använd:"
 
-#: builtin/remote.c:948
+#: builtin/remote.c:945
 #, c-format
 msgid " new (next fetch will store in remotes/%s)"
 msgstr " ny (nästa hämtning sparar i remotes/%s)"
 
-#: builtin/remote.c:951
+#: builtin/remote.c:948
 msgid " tracked"
 msgstr " spårad"
 
-#: builtin/remote.c:953
+#: builtin/remote.c:950
 msgid " stale (use 'git remote prune' to remove)"
 msgstr " förlegad (använd \"git remote prune\" för att ta bort)"
 
-#: builtin/remote.c:955
+#: builtin/remote.c:952
 msgid " ???"
 msgstr " ???"
 
-#: builtin/remote.c:996
+#: builtin/remote.c:993
 #, c-format
 msgid "invalid branch.%s.merge; cannot rebase onto > 1 branch"
 msgstr "ogiltig branch.%s.merge; kan inte ombasera över > 1 gren"
 
-#: builtin/remote.c:1003
+#: builtin/remote.c:1000
 #, c-format
 msgid "rebases onto remote %s"
 msgstr "ombaseras på fjärren %s"
 
-#: builtin/remote.c:1006
+#: builtin/remote.c:1003
 #, c-format
 msgid " merges with remote %s"
 msgstr " sammanslås med fjärren %s"
 
-#: builtin/remote.c:1007
+#: builtin/remote.c:1004
 msgid "    and with remote"
 msgstr "    och med fjärren"
 
-#: builtin/remote.c:1009
+#: builtin/remote.c:1006
 #, c-format
 msgid "merges with remote %s"
 msgstr "sammanslås med fjärren %s"
 
-#: builtin/remote.c:1010
+#: builtin/remote.c:1007
 msgid "   and with remote"
 msgstr "   och med fjärren"
 
-#: builtin/remote.c:1056
+#: builtin/remote.c:1053
 msgid "create"
 msgstr "skapa"
 
-#: builtin/remote.c:1059
+#: builtin/remote.c:1056
 msgid "delete"
 msgstr "ta bort"
 
-#: builtin/remote.c:1063
+#: builtin/remote.c:1060
 msgid "up to date"
 msgstr "àjour"
 
-#: builtin/remote.c:1066
+#: builtin/remote.c:1063
 msgid "fast-forwardable"
 msgstr "kan snabbspolas"
 
-#: builtin/remote.c:1069
+#: builtin/remote.c:1066
 msgid "local out of date"
 msgstr "lokal föråldrad"
 
-#: builtin/remote.c:1076
+#: builtin/remote.c:1073
 #, c-format
 msgid "    %-*s forces to %-*s (%s)"
 msgstr "    %-*s tvingar till %-*s (%s)"
 
-#: builtin/remote.c:1079
+#: builtin/remote.c:1076
 #, c-format
 msgid "    %-*s pushes to %-*s (%s)"
 msgstr "    %-*s sänder till %-*s (%s)"
 
-#: builtin/remote.c:1083
+#: builtin/remote.c:1080
 #, c-format
 msgid "    %-*s forces to %s"
 msgstr "    %-*s tvingar till %s"
 
-#: builtin/remote.c:1086
+#: builtin/remote.c:1083
 #, c-format
 msgid "    %-*s pushes to %s"
 msgstr "    %-*s sänder till %s"
 
-#: builtin/remote.c:1154
+#: builtin/remote.c:1151
 msgid "do not query remotes"
 msgstr "fråga inte fjärrar"
 
-#: builtin/remote.c:1181
+#: builtin/remote.c:1178
 #, c-format
 msgid "* remote %s"
 msgstr "* fjärr %s"
 
-#: builtin/remote.c:1182
+#: builtin/remote.c:1179
 #, c-format
 msgid "  Fetch URL: %s"
 msgstr "  Hämt-URL: %s"
 
-#: builtin/remote.c:1183 builtin/remote.c:1334
+#: builtin/remote.c:1180 builtin/remote.c:1331
 msgid "(no URL)"
 msgstr "(ingen URL)"
 
-#: builtin/remote.c:1192 builtin/remote.c:1194
+#: builtin/remote.c:1189 builtin/remote.c:1191
 #, c-format
 msgid "  Push  URL: %s"
 msgstr "  Sänd-URL: %s"
 
-#: builtin/remote.c:1196 builtin/remote.c:1198 builtin/remote.c:1200
+#: builtin/remote.c:1193 builtin/remote.c:1195 builtin/remote.c:1197
 #, c-format
 msgid "  HEAD branch: %s"
 msgstr "  HEAD-gren: %s"
 
-#: builtin/remote.c:1202
+#: builtin/remote.c:1199
 #, c-format
 msgid ""
 "  HEAD branch (remote HEAD is ambiguous, may be one of the following):\n"
 msgstr "  HEAD-gren (HEAD på fjärr är tvetydig, kan vara en av följande):\n"
 
-#: builtin/remote.c:1214
+#: builtin/remote.c:1211
 #, c-format
 msgid "  Remote branch:%s"
 msgid_plural "  Remote branches:%s"
 msgstr[0] "  Fjärrgren:%s"
 msgstr[1] "  Fjärrgrenar:%s"
 
-#: builtin/remote.c:1217 builtin/remote.c:1244
+#: builtin/remote.c:1214 builtin/remote.c:1241
 msgid " (status not queried)"
 msgstr " (status inte förfrågad)"
 
-#: builtin/remote.c:1226
+#: builtin/remote.c:1223
 msgid "  Local branch configured for 'git pull':"
 msgid_plural "  Local branches configured for 'git pull':"
 msgstr[0] "  Lokal gren konfigurerad för \"git pull\":"
 msgstr[1] "  Lokala grenar konfigurerade för \"git pull\":"
 
-#: builtin/remote.c:1234
+#: builtin/remote.c:1231
 msgid "  Local refs will be mirrored by 'git push'"
 msgstr "  Lokala referenser speglas av \"git push\""
 
-#: builtin/remote.c:1241
+#: builtin/remote.c:1238
 #, c-format
 msgid "  Local ref configured for 'git push'%s:"
 msgid_plural "  Local refs configured for 'git push'%s:"
 msgstr[0] "  Lokal referens konfigurerad för \"git push\"%s:"
 msgstr[1] "  Lokala referenser konfigurerade för \"git push\"%s:"
 
-#: builtin/remote.c:1262
+#: builtin/remote.c:1259
 msgid "set refs/remotes/<name>/HEAD according to remote"
 msgstr "sätt refs/remotes/<namn>/HEAD enligt fjärren"
 
-#: builtin/remote.c:1264
+#: builtin/remote.c:1261
 msgid "delete refs/remotes/<name>/HEAD"
 msgstr "ta bort refs/remotes/<namn>/HEAD"
 
-#: builtin/remote.c:1279
+#: builtin/remote.c:1276
 msgid "Cannot determine remote HEAD"
 msgstr "Kan inte bestämma HEAD på fjärren"
 
-#: builtin/remote.c:1281
+#: builtin/remote.c:1278
 msgid "Multiple remote HEAD branches. Please choose one explicitly with:"
 msgstr "Flera HEAD-grenar på fjärren. Välj en explicit med:"
 
-#: builtin/remote.c:1291
+#: builtin/remote.c:1288
 #, c-format
 msgid "Could not delete %s"
 msgstr "Kunde inte ta bort %s"
 
-#: builtin/remote.c:1299
+#: builtin/remote.c:1296
 #, c-format
 msgid "Not a valid ref: %s"
 msgstr "Inte en giltig referens: %s"
 
-#: builtin/remote.c:1301
+#: builtin/remote.c:1298
 #, c-format
 msgid "Could not setup %s"
 msgstr "Kunde inte ställa in %s"
 
-#: builtin/remote.c:1319
+#: builtin/remote.c:1316
 #, c-format
 msgid " %s will become dangling!"
 msgstr " %s kommer bli dinglande!"
 
-#: builtin/remote.c:1320
+#: builtin/remote.c:1317
 #, c-format
 msgid " %s has become dangling!"
 msgstr " %s har blivit dinglande!"
 
-#: builtin/remote.c:1330
+#: builtin/remote.c:1327
 #, c-format
 msgid "Pruning %s"
 msgstr "Rensar %s"
 
-#: builtin/remote.c:1331
+#: builtin/remote.c:1328
 #, c-format
 msgid "URL: %s"
 msgstr "URL: %s"
 
-#: builtin/remote.c:1354
+#: builtin/remote.c:1351
 #, c-format
 msgid " * [would prune] %s"
 msgstr " * [skulle rensa] %s"
 
-#: builtin/remote.c:1357
+#: builtin/remote.c:1354
 #, c-format
 msgid " * [pruned] %s"
 msgstr " * [rensad] %s"
 
-#: builtin/remote.c:1402
+#: builtin/remote.c:1399
 msgid "prune remotes after fetching"
 msgstr "rensa fjärrar efter hämtning"
 
-#: builtin/remote.c:1468 builtin/remote.c:1542
+#: builtin/remote.c:1465 builtin/remote.c:1539
 #, c-format
 msgid "No such remote '%s'"
 msgstr "Ingen sådan fjärr \"%s\""
 
-#: builtin/remote.c:1488
+#: builtin/remote.c:1485
 msgid "add branch"
 msgstr "lägg till gren"
 
-#: builtin/remote.c:1495
+#: builtin/remote.c:1492
 msgid "no remote specified"
 msgstr "ingen fjärr angavs"
 
-#: builtin/remote.c:1517
+#: builtin/remote.c:1514
 msgid "manipulate push URLs"
 msgstr "manipulera URL:ar för sändning"
 
-#: builtin/remote.c:1519
+#: builtin/remote.c:1516
 msgid "add URL"
 msgstr "lägg till URL"
 
-#: builtin/remote.c:1521
+#: builtin/remote.c:1518
 msgid "delete URLs"
 msgstr "ta bort URL:ar"
 
-#: builtin/remote.c:1528
+#: builtin/remote.c:1525
 msgid "--add --delete doesn't make sense"
 msgstr "--add --delete ger ingen mening"
 
-#: builtin/remote.c:1568
+#: builtin/remote.c:1565
 #, c-format
 msgid "Invalid old URL pattern: %s"
 msgstr "Felaktig gammalt URL-mönster: %s"
 
-#: builtin/remote.c:1576
+#: builtin/remote.c:1573
 #, c-format
 msgid "No such URL found: %s"
 msgstr "Ingen sådan URL hittades: %s"
 
-#: builtin/remote.c:1578
+#: builtin/remote.c:1575
 msgid "Will not delete all non-push URLs"
 msgstr "Kommer inte ta bort alla icke-sänd-URL:er"
 
-#: builtin/remote.c:1592
+#: builtin/remote.c:1589
 msgid "be verbose; must be placed before a subcommand"
 msgstr "var pratsam; måste skrivas före ett underkommando"
 
 #: builtin/repack.c:17
 msgid "git repack [<options>]"
 msgstr "git repack [<flaggor>]"
@@ -8975,13 +9070,13 @@
 msgstr "maximal storlek på varje paketfil"
 
 #: builtin/repack.c:187
 msgid "repack objects in packs marked with .keep"
 msgstr "packa om objekt i paket märkta med .keep"
 
-#: builtin/repack.c:375
+#: builtin/repack.c:377
 #, c-format
 msgid "removing '%s' failed"
 msgstr "misslyckades ta bort \"%s\""
 
 #: builtin/replace.c:19
 msgid "git replace [-f] <object> <replacement>"
@@ -9352,83 +9447,83 @@
 "\n"
 "(use 'rm -rf' if you really want to remove it including all of its history)"
 msgstr ""
 "\n"
 "(använd \"rm -rf\" om du verkligen vill ta bort den och all dess historik)"
 
-#: builtin/rm.c:231
+#: builtin/rm.c:230
 msgid ""
 "the following file has staged content different from both the\n"
 "file and the HEAD:"
 msgid_plural ""
 "the following files have staged content different from both the\n"
 "file and the HEAD:"
 msgstr[0] ""
 "följande fil har köat innehåll som skiljer sig både från filen och HEAD:"
 msgstr[1] ""
 "följande filer har köat innehåll som skiljer sig både från filen och HEAD:"
 
-#: builtin/rm.c:236
+#: builtin/rm.c:235
 msgid ""
 "\n"
 "(use -f to force removal)"
 msgstr ""
 "\n"
 "(använd -f för att tvinga borttagning)"
 
-#: builtin/rm.c:240
+#: builtin/rm.c:239
 msgid "the following file has changes staged in the index:"
 msgid_plural "the following files have changes staged in the index:"
 msgstr[0] "följande fil har ändringar köade i indexet:"
 msgstr[1] "följande filer har ändringar köade i indexet:"
 
-#: builtin/rm.c:244 builtin/rm.c:255
+#: builtin/rm.c:243 builtin/rm.c:254
 msgid ""
 "\n"
 "(use --cached to keep the file, or -f to force removal)"
 msgstr ""
 "\n"
 "(använd --cached för att behålla filen eller -f för att tvinga borttagning)"
 
-#: builtin/rm.c:252
+#: builtin/rm.c:251
 msgid "the following file has local modifications:"
 msgid_plural "the following files have local modifications:"
 msgstr[0] "följande fil har lokala ändringar:"
 msgstr[1] "följande filer har lokala ändringar:"
 
-#: builtin/rm.c:270
+#: builtin/rm.c:269
 msgid "do not list removed files"
 msgstr "lista inte borttagna filer"
 
-#: builtin/rm.c:271
+#: builtin/rm.c:270
 msgid "only remove from the index"
 msgstr "ta bara bort från indexet"
 
-#: builtin/rm.c:272
+#: builtin/rm.c:271
 msgid "override the up-to-date check"
 msgstr "överstyr àjour-testet"
 
-#: builtin/rm.c:273
+#: builtin/rm.c:272
 msgid "allow recursive removal"
 msgstr "tillåt rekursiv borttagning"
 
-#: builtin/rm.c:275
+#: builtin/rm.c:274
 msgid "exit with a zero status even if nothing matched"
 msgstr "avsluta med nollstatus även om inget träffades"
 
-#: builtin/rm.c:318
+#: builtin/rm.c:317
 msgid "Please, stage your changes to .gitmodules or stash them to proceed"
 msgstr ""
 "Köa dina ändringar i .gitmodules eller använd \"stash\" för att fortsätta"
 
-#: builtin/rm.c:336
+#: builtin/rm.c:335
 #, c-format
 msgid "not removing '%s' recursively without -r"
 msgstr "tar inte bort \"%s\" rekursivt utan -r"
 
-#: builtin/rm.c:375
+#: builtin/rm.c:374
 #, c-format
 msgid "git rm: unable to remove %s"
 msgstr "git rm: kan inte ta bort %s"
 
 #: builtin/shortlog.c:13
 msgid "git shortlog [<options>] [<revision-range>] [[--] [<path>...]]"
@@ -9472,73 +9567,73 @@
 "\t\t[--no-name | --sha1-name] [--topics] [(<rev> | <mönster>)...]"
 
 #: builtin/show-branch.c:13
 msgid "git show-branch (-g | --reflog)[=<n>[,<base>]] [--list] [<ref>]"
 msgstr "git show-branch (-g | --reflog)[=<n>[,<bas>]] [--list] [<ref>]"
 
-#: builtin/show-branch.c:652
+#: builtin/show-branch.c:659
 msgid "show remote-tracking and local branches"
 msgstr "visa fjärrspårande och lokala grenar"
 
-#: builtin/show-branch.c:654
+#: builtin/show-branch.c:661
 msgid "show remote-tracking branches"
 msgstr "visa fjärrspårande grenar"
 
-#: builtin/show-branch.c:656
+#: builtin/show-branch.c:663
 msgid "color '*!+-' corresponding to the branch"
 msgstr "färga \"*!+-\" enligt grenen"
 
-#: builtin/show-branch.c:658
+#: builtin/show-branch.c:665
 msgid "show <n> more commits after the common ancestor"
 msgstr "visa <n> ytterligare incheckningar efter gemensam anfader"
 
-#: builtin/show-branch.c:660
+#: builtin/show-branch.c:667
 msgid "synonym to more=-1"
 msgstr "synonym till more=-1"
 
-#: builtin/show-branch.c:661
+#: builtin/show-branch.c:668
 msgid "suppress naming strings"
 msgstr "undertyck namnsträngar"
 
-#: builtin/show-branch.c:663
+#: builtin/show-branch.c:670
 msgid "include the current branch"
 msgstr "inkludera aktuell gren"
 
-#: builtin/show-branch.c:665
+#: builtin/show-branch.c:672
 msgid "name commits with their object names"
 msgstr "namnge incheckningar med deras objektnamn"
 
-#: builtin/show-branch.c:667
+#: builtin/show-branch.c:674
 msgid "show possible merge bases"
 msgstr "visa möjliga sammanslagningsbaser"
 
-#: builtin/show-branch.c:669
+#: builtin/show-branch.c:676
 msgid "show refs unreachable from any other ref"
 msgstr "visa referenser som inte kan nås från någon annan referens"
 
-#: builtin/show-branch.c:671
+#: builtin/show-branch.c:678
 msgid "show commits in topological order"
 msgstr "visa incheckningar i topologisk ordning"
 
-#: builtin/show-branch.c:674
+#: builtin/show-branch.c:681
 msgid "show only commits not on the first branch"
 msgstr "visa endast incheckningar inte på den första grenen"
 
-#: builtin/show-branch.c:676
+#: builtin/show-branch.c:683
 msgid "show merges reachable from only one tip"
 msgstr "visa sammanslagningar som endast kan nås från en spets"
 
-#: builtin/show-branch.c:678
+#: builtin/show-branch.c:685
 msgid "topologically sort, maintaining date order where possible"
 msgstr "sortera topologiskt, behåll datumordning när möjligt"
 
-#: builtin/show-branch.c:681
+#: builtin/show-branch.c:688
 msgid "<n>[,<base>]"
 msgstr "<n>[,<bas>]"
 
-#: builtin/show-branch.c:682
+#: builtin/show-branch.c:689
 msgid "show <n> most recent ref-log entries starting at base"
 msgstr "visa <n> nyaste refloggposter med början på bas"
 
 #: builtin/show-ref.c:10
 msgid ""
 "git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | --"
@@ -9548,41 +9643,41 @@
 "hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<mönster>...]"
 
 #: builtin/show-ref.c:11
 msgid "git show-ref --exclude-existing[=pattern] < ref-list"
 msgstr "git show-ref --exclude-existing[=mönster] < reflista"
 
-#: builtin/show-ref.c:168
+#: builtin/show-ref.c:170
 msgid "only show tags (can be combined with heads)"
 msgstr "visa endast taggar (kan kombineras med huvuden)"
 
-#: builtin/show-ref.c:169
+#: builtin/show-ref.c:171
 msgid "only show heads (can be combined with tags)"
 msgstr "visa endast huvuden (kan kombineras med taggar)"
 
-#: builtin/show-ref.c:170
+#: builtin/show-ref.c:172
 msgid "stricter reference checking, requires exact ref path"
 msgstr "striktare referenskontroll, kräver exakt referenssökväg"
 
-#: builtin/show-ref.c:173 builtin/show-ref.c:175
+#: builtin/show-ref.c:175 builtin/show-ref.c:177
 msgid "show the HEAD reference, even if it would be filtered out"
 msgstr "visa HEAD-refrens, även när den skulle filtreras ut"
 
-#: builtin/show-ref.c:177
+#: builtin/show-ref.c:179
 msgid "dereference tags into object IDs"
 msgstr "avreferera taggar till objekt-id"
 
-#: builtin/show-ref.c:179
+#: builtin/show-ref.c:181
 msgid "only show SHA1 hash using <n> digits"
 msgstr "visa SHA1-hash endast med <n> siffror"
 
-#: builtin/show-ref.c:183
+#: builtin/show-ref.c:185
 msgid "do not print results to stdout (useful with --verify)"
 msgstr "visa inte resultat på standard ut (användbart med --verify)"
 
-#: builtin/show-ref.c:185
+#: builtin/show-ref.c:187
 msgid "show refs from stdin that aren't in local repository"
 msgstr "visa referenser från standard in som inte finns i lokalt arkiv"
 
 #: builtin/symbolic-ref.c:7
 msgid "git symbolic-ref [<options>] <name> [<ref>]"
 msgstr "git symbolic-ref [<flaggor>] <namn> [<ref>]"
@@ -9837,128 +9932,197 @@
 msgstr "Uppdaterad tagg \"%s\" (var %s)\n"
 
 #: builtin/unpack-objects.c:489
 msgid "Unpacking objects"
 msgstr "Packar upp objekt"
 
-#: builtin/update-index.c:403
+#: builtin/update-index.c:70
+#, c-format
+msgid "failed to create directory %s"
+msgstr "misslyckades skapa katalogen %s"
+
+#: builtin/update-index.c:76
+#, c-format
+msgid "failed to stat %s"
+msgstr "misslyckades ta status på %s"
+
+#: builtin/update-index.c:86
+#, c-format
+msgid "failed to create file %s"
+msgstr "misslyckades skapa filen %s"
+
+#: builtin/update-index.c:94
+#, c-format
+msgid "failed to delete file %s"
+msgstr "misslyckades ta bort filen %s"
+
+#: builtin/update-index.c:101 builtin/update-index.c:203
+#, c-format
+msgid "failed to delete directory %s"
+msgstr "misslyckades ta bort katalogen %s"
+
+#: builtin/update-index.c:124
+#, c-format
+msgid "Testing "
+msgstr "Testar"
+
+#: builtin/update-index.c:136
+msgid "directory stat info does not change after adding a new file"
+msgstr "stat-informationen för en katalog ändras inte när nya filer läggs till"
+
+#: builtin/update-index.c:149
+msgid "directory stat info does not change after adding a new directory"
+msgstr ""
+"stat-informationen för en katalog ändras inte när nya kataloger läggs till"
+
+#: builtin/update-index.c:162
+msgid "directory stat info changes after updating a file"
+msgstr "stat-informationen för en katalog ändras när filer uppdateras"
+
+#: builtin/update-index.c:173
+msgid "directory stat info changes after adding a file inside subdirectory"
+msgstr ""
+"stat-informationen för en katalog ändras när filer läggs till i en "
+"underkatalog"
+
+#: builtin/update-index.c:184
+msgid "directory stat info does not change after deleting a file"
+msgstr "stat-informationen för en katalog ändras inte när en fil tas bort"
+
+#: builtin/update-index.c:197
+msgid "directory stat info does not change after deleting a directory"
+msgstr "stat-informationen för en katalog ändras inte när en katalog tas bort"
+
+#: builtin/update-index.c:204
+msgid " OK"
+msgstr " OK"
+
+#: builtin/update-index.c:564
 msgid "git update-index [<options>] [--] [<file>...]"
 msgstr "git update-index [<flaggor>] [--] [<fil>...]"
 
-#: builtin/update-index.c:757
+#: builtin/update-index.c:918
 msgid "continue refresh even when index needs update"
 msgstr "fortsätt uppdatera även när index inte är àjour"
 
-#: builtin/update-index.c:760
+#: builtin/update-index.c:921
 msgid "refresh: ignore submodules"
 msgstr "refresh: ignorera undermoduler"
 
-#: builtin/update-index.c:763
+#: builtin/update-index.c:924
 msgid "do not ignore new files"
 msgstr "ignorera inte nya filer"
 
-#: builtin/update-index.c:765
+#: builtin/update-index.c:926
 msgid "let files replace directories and vice-versa"
 msgstr "låt filer ersätta kataloger och omvänt"
 
-#: builtin/update-index.c:767
+#: builtin/update-index.c:928
 msgid "notice files missing from worktree"
 msgstr "lägg märke till filer som saknas i arbetskatalogen"
 
-#: builtin/update-index.c:769
+#: builtin/update-index.c:930
 msgid "refresh even if index contains unmerged entries"
 msgstr "uppdatera även om indexet innehåller ej sammanslagna poster"
 
-#: builtin/update-index.c:772
+#: builtin/update-index.c:933
 msgid "refresh stat information"
 msgstr "uppdatera statusinformation"
 
-#: builtin/update-index.c:776
+#: builtin/update-index.c:937
 msgid "like --refresh, but ignore assume-unchanged setting"
 msgstr "som --refresh, men ignorera assume-unchanged-inställning"
 
-#: builtin/update-index.c:780
+#: builtin/update-index.c:941
 msgid "<mode>,<object>,<path>"
 msgstr "<läge>,<objekt>,<sökväg>"
 
-#: builtin/update-index.c:781
+#: builtin/update-index.c:942
 msgid "add the specified entry to the index"
 msgstr "lägg till angiven post i indexet"
 
-#: builtin/update-index.c:785
+#: builtin/update-index.c:946
 msgid "(+/-)x"
 msgstr "(+/-)x"
 
-#: builtin/update-index.c:786
+#: builtin/update-index.c:947
 msgid "override the executable bit of the listed files"
 msgstr "överstyr exekveringsbiten för angivna filer"
 
-#: builtin/update-index.c:790
+#: builtin/update-index.c:951
 msgid "mark files as \"not changing\""
 msgstr "markera filer som \"ändras inte\""
 
-#: builtin/update-index.c:793
+#: builtin/update-index.c:954
 msgid "clear assumed-unchanged bit"
 msgstr "rensa \"assume-unchanged\"-biten"
 
-#: builtin/update-index.c:796
+#: builtin/update-index.c:957
 msgid "mark files as \"index-only\""
 msgstr "markera filer som \"endast index\""
 
-#: builtin/update-index.c:799
+#: builtin/update-index.c:960
 msgid "clear skip-worktree bit"
 msgstr "töm \"skip-worktree\"-biten"
 
-#: builtin/update-index.c:802
+#: builtin/update-index.c:963
 msgid "add to index only; do not add content to object database"
 msgstr "lägg endast till indexet; lägg inte till innehållet i objektdatabasen"
 
-#: builtin/update-index.c:804
+#: builtin/update-index.c:965
 msgid "remove named paths even if present in worktree"
 msgstr "ta bort namngivna sökvägar även om de finns i arbetskatalogen"
 
-#: builtin/update-index.c:806
+#: builtin/update-index.c:967
 msgid "with --stdin: input lines are terminated by null bytes"
 msgstr "med --stdin: indatarader termineras med null-byte"
 
-#: builtin/update-index.c:808
+#: builtin/update-index.c:969
 msgid "read list of paths to be updated from standard input"
 msgstr "läs lista över sökvägar att uppdatera från standard in"
 
-#: builtin/update-index.c:812
+#: builtin/update-index.c:973
 msgid "add entries from standard input to the index"
 msgstr "lägg poster från standard in till indexet"
 
-#: builtin/update-index.c:816
+#: builtin/update-index.c:977
 msgid "repopulate stages #2 and #3 for the listed paths"
 msgstr "återfyll etapp 2 och 3 från angivna sökvägar"
 
-#: builtin/update-index.c:820
+#: builtin/update-index.c:981
 msgid "only update entries that differ from HEAD"
 msgstr "uppdatera endast poster som skiljer sig från HEAD"
 
-#: builtin/update-index.c:824
+#: builtin/update-index.c:985
 msgid "ignore files missing from worktree"
 msgstr "ignorera filer som saknas i arbetskatalogen"
 
-#: builtin/update-index.c:827
+#: builtin/update-index.c:988
 msgid "report actions to standard output"
 msgstr "rapportera åtgärder på standard ut"
 
-#: builtin/update-index.c:829
+#: builtin/update-index.c:990
 msgid "(for porcelains) forget saved unresolved conflicts"
 msgstr "(för porslin) glöm sparade olösta konflikter"
 
-#: builtin/update-index.c:833
+#: builtin/update-index.c:994
 msgid "write index in this format"
 msgstr "skriv index i detta format"
 
-#: builtin/update-index.c:835
+#: builtin/update-index.c:996
 msgid "enable or disable split index"
 msgstr "aktivera eller inaktivera delat index"
 
+#: builtin/update-index.c:998
+msgid "enable/disable untracked cache"
+msgstr "aktivera/inaktivera ospårad cache"
+
+#: builtin/update-index.c:1000
+msgid "enable untracked cache without testing the filesystem"
+msgstr "aktivera ospårad cache utan att testa filsystemet"
+
 #: builtin/update-ref.c:9
 msgid "git update-ref [<options>] -d <refname> [<old-val>]"
 msgstr "git update-ref [<flaggor>] -d <refnamn> [<gammaltvärde>]"
 
 #: builtin/update-ref.c:10
 msgid "git update-ref [<options>]    <refname> <new-val> [<old-val>]"
@@ -10017,12 +10181,90 @@
 msgstr "git verify-tag [-v | --verbose] <tagg>..."
 
 #: builtin/verify-tag.c:73
 msgid "print tag contents"
 msgstr "visa innehåll för tag"
 
+#: builtin/worktree.c:11
+msgid "git worktree add [<options>] <path> <branch>"
+msgstr "git worktree add [<flaggor>] <sökväg> <gren>"
+
+#: builtin/worktree.c:12
+msgid "git worktree prune [<options>]"
+msgstr "git worktree prune [<flaggor>]"
+
+#: builtin/worktree.c:27
+#, c-format
+msgid "Removing worktrees/%s: not a valid directory"
+msgstr "Tar bort worktrees/%s: inte en giltig katalog"
+
+#: builtin/worktree.c:33
+#, c-format
+msgid "Removing worktrees/%s: gitdir file does not exist"
+msgstr "Tar bort worktrees/%s: gitdir-filen existerar inte"
+
+#: builtin/worktree.c:38
+#, c-format
+msgid "Removing worktrees/%s: unable to read gitdir file (%s)"
+msgstr "Tar bort worktrees/%s: kan inte läsa gitdir-filen (%s)"
+
+#: builtin/worktree.c:49
+#, c-format
+msgid "Removing worktrees/%s: invalid gitdir file"
+msgstr "Tar bort worktrees/%s: felaktig gitdir-fil"
+
+#: builtin/worktree.c:65
+#, c-format
+msgid "Removing worktrees/%s: gitdir file points to non-existent location"
+msgstr "Tar bort worktrees/%s: gitdir-filen pekar på en ickeexisterande plats"
+
+#: builtin/worktree.c:100
+#, c-format
+msgid "failed to remove: %s"
+msgstr "misslyckades ta bort: %s"
+
+#: builtin/worktree.c:186
+#, c-format
+msgid "'%s' already exists"
+msgstr "\"%s\" finns redan"
+
+#: builtin/worktree.c:207
+#, c-format
+msgid "could not create directory of '%s'"
+msgstr "kunde inte skapa katalogen \"%s\""
+
+#: builtin/worktree.c:241
+msgid "unable to resolve HEAD"
+msgstr "kan inte bestämma HEAD"
+
+#: builtin/worktree.c:249
+#, c-format
+msgid "Enter %s (identifier %s)"
+msgstr "Går in i %s (identifieraren %s)"
+
+#: builtin/worktree.c:281
+msgid "checkout <branch> even if already checked out in other worktree"
+msgstr ""
+"checka ut <gren> även om den redan är utcheckad i en annan arbetskatalog"
+
+#: builtin/worktree.c:283
+msgid "create a new branch"
+msgstr "skapa en ny gren"
+
+#: builtin/worktree.c:285
+msgid "create or reset a branch"
+msgstr "skapa eller återställ en gren"
+
+#: builtin/worktree.c:286
+msgid "detach HEAD at named commit"
+msgstr "koppla från HEAD vid namngiven incheckning"
+
+#: builtin/worktree.c:292
+msgid "-b and -B are mutually exclusive"
+msgstr "-b och -B kan inte användas samtidigt"
+
 #: builtin/write-tree.c:13
 msgid "git write-tree [--missing-ok] [--prefix=<prefix>/]"
 msgstr "git write-tree [--missing-ok] [--prefix=<prefix>/]"
 
 #: builtin/write-tree.c:26
 msgid "<prefix>/"
@@ -10047,295 +10289,315 @@
 "to read about a specific subcommand or concept."
 msgstr ""
 "\"git help -a\" och \"git help -g\" visar tillgängliga underkommandon och\n"
 "några konceptvägledningar. Se \"git help <kommando>\" eller \"git help\n"
 "<koncept>\" för att läsa mer om specifika underkommandon och koncept."
 
-#: common-cmds.h:8
+#: common-cmds.h:10
+msgid "start a working area (see also: git help tutorial)"
+msgstr "starta arbetskatalog (se också: git help tutorial)"
+
+#: common-cmds.h:11
+msgid "work on the current change (see also: git help everyday)"
+msgstr "jobba med aktuell förändring (se också: git help everyday)"
+
+#: common-cmds.h:12
+msgid "examine the history and state (see also: git help revisions)"
+msgstr "utforska historiken och tillståndet (se också: git help revisions)"
+
+#: common-cmds.h:13
+msgid "grow, mark and tweak your common history"
+msgstr "utöka, markera och justera din gemensamma historik"
+
+#: common-cmds.h:14
+msgid "collaborate (see also: git help workflows)"
+msgstr "samarbeta (se också: git help workflows)"
+
+#: common-cmds.h:18
 msgid "Add file contents to the index"
 msgstr "Lägg filinnehåll till indexet"
 
-#: common-cmds.h:9
+#: common-cmds.h:19
 msgid "Find by binary search the change that introduced a bug"
 msgstr "Binärsök för att hitta ändringen som introducerade ett fel"
 
-#: common-cmds.h:10
+#: common-cmds.h:20
 msgid "List, create, or delete branches"
 msgstr "Visa, skapa eller ta bort grenar"
 
-#: common-cmds.h:11
-msgid "Checkout a branch or paths to the working tree"
-msgstr "Checka ut en gren eller filer i arbetskatalogen"
+#: common-cmds.h:21
+msgid "Switch branches or restore working tree files"
+msgstr "Byt till en ny gren eller återställ filer i arbetskatalogen"
 
-#: common-cmds.h:12
+#: common-cmds.h:22
 msgid "Clone a repository into a new directory"
 msgstr "Klona ett arkiv till en ny katalog"
 
-#: common-cmds.h:13
+#: common-cmds.h:23
 msgid "Record changes to the repository"
 msgstr "Protokollför ändringar i arkivet"
 
-#: common-cmds.h:14
+#: common-cmds.h:24
 msgid "Show changes between commits, commit and working tree, etc"
 msgstr "Visa ändringar mellan incheckningar, med arbetskatalogen, osv"
 
-#: common-cmds.h:15
+#: common-cmds.h:25
 msgid "Download objects and refs from another repository"
 msgstr "Hämta objekt och referenser från annat arkiv"
 
-#: common-cmds.h:16
+#: common-cmds.h:26
 msgid "Print lines matching a pattern"
 msgstr "Visa rader som motsvarar mönster"
 
-#: common-cmds.h:17
+#: common-cmds.h:27
 msgid "Create an empty Git repository or reinitialize an existing one"
 msgstr "Skapa tomt Git-arkiv eller ominitiera ett befintligt"
 
-#: common-cmds.h:18
+#: common-cmds.h:28
 msgid "Show commit logs"
 msgstr "Visa incheckningsloggar"
 
-#: common-cmds.h:19
+#: common-cmds.h:29
 msgid "Join two or more development histories together"
 msgstr "Slå ihop två eller flera utvecklingshistorier"
 
-#: common-cmds.h:20
+#: common-cmds.h:30
 msgid "Move or rename a file, a directory, or a symlink"
 msgstr "Flytta eller byt namn på en fil, katalog eller symbolisk länk"
 
-#: common-cmds.h:21
+#: common-cmds.h:31
 msgid "Fetch from and integrate with another repository or a local branch"
 msgstr "Hämta från och integrera med annat arkiv eller en lokal gren"
 
-#: common-cmds.h:22
+#: common-cmds.h:32
 msgid "Update remote refs along with associated objects"
 msgstr "Uppdatera fjärr-referenser och tillhörande objekt"
 
-#: common-cmds.h:23
+#: common-cmds.h:33
 msgid "Forward-port local commits to the updated upstream head"
 msgstr "Framåtanpassa lokala kommandon på uppdaterat uppströmshuvud"
 
-#: common-cmds.h:24
+#: common-cmds.h:34
 msgid "Reset current HEAD to the specified state"
 msgstr "Återställ aktuell HEAD till angivet tillstånd"
 
-#: common-cmds.h:25
+#: common-cmds.h:35
 msgid "Remove files from the working tree and from the index"
 msgstr "Ta bort filer från arbetskatalogen och från indexet"
 
-#: common-cmds.h:26
+#: common-cmds.h:36
 msgid "Show various types of objects"
 msgstr "Visa olika sorters objekt"
 
-#: common-cmds.h:27
+#: common-cmds.h:37
 msgid "Show the working tree status"
 msgstr "Visa status för arbetskatalogen"
 
-#: common-cmds.h:28
+#: common-cmds.h:38
 msgid "Create, list, delete or verify a tag object signed with GPG"
 msgstr "Skapa, visa, ta bort eller verifiera GPG-signerat taggobjekt"
 
-#: parse-options.h:143
+#: parse-options.h:142
 msgid "expiry-date"
 msgstr "giltig-till"
 
-#: parse-options.h:158
+#: parse-options.h:157
 msgid "no-op (backward compatibility)"
 msgstr "ingen funktion (bakåtkompatibilitet)"
 
-#: parse-options.h:232
+#: parse-options.h:231
 msgid "be more verbose"
 msgstr "var mer pratsam"
 
-#: parse-options.h:234
+#: parse-options.h:233
 msgid "be more quiet"
 msgstr "var mer tyst"
 
-#: parse-options.h:240
+#: parse-options.h:239
 msgid "use <n> digits to display SHA-1s"
 msgstr "använd <n> siffror för att visa SHA-1:or"
 
 #: rerere.h:27
 msgid "update the index with reused conflict resolution if possible"
 msgstr "uppdatera indexet med återanvänd konfliktlösning om möjligt"
 
 #: git-am.sh:53
 msgid "You need to set your committer info first"
 msgstr "Du måste ställa in din incheckarinformation först"
 
-#: git-am.sh:98
+#: git-am.sh:100
 msgid ""
 "You seem to have moved HEAD since the last 'am' failure.\n"
 "Not rewinding to ORIG_HEAD"
 msgstr ""
 "Du verkar ha flyttat HEAD sedan \"am\" sist misslyckades.\n"
 "Återställer inte till ORIG_HEAD"
 
-#: git-am.sh:108
+#: git-am.sh:110
 #, sh-format
 msgid ""
 "When you have resolved this problem, run \"$cmdline --continue\".\n"
 "If you prefer to skip this patch, run \"$cmdline --skip\" instead.\n"
 "To restore the original branch and stop patching, run \"$cmdline --abort\"."
 msgstr ""
 "När du har löst problemet kör du \"$cmdline --continue\".\n"
 "Om du vill hoppa över patchen kör du istället \"$cmdline --skip\".\n"
 "För att återställa originalgrenen och avbryta kör du \"$cmdline --abort\"."
 
-#: git-am.sh:124
+#: git-am.sh:126
 msgid "Cannot fall back to three-way merge."
 msgstr "Kan inte falla tillbaka på trevägssammanslagning."
 
-#: git-am.sh:140
+#: git-am.sh:142
 msgid "Repository lacks necessary blobs to fall back on 3-way merge."
 msgstr ""
 "Arkivet saknar objekt som behövs för att falla tillbaka på 3-"
 "vägssammanslagning."
 
-#: git-am.sh:142
+#: git-am.sh:144
 msgid "Using index info to reconstruct a base tree..."
 msgstr "Använder indexinfo för att återskapa ett basträd..."
 
-#: git-am.sh:157
+#: git-am.sh:159
 msgid ""
 "Did you hand edit your patch?\n"
 "It does not apply to blobs recorded in its index."
 msgstr ""
 "Har du handredigerat din patch?\n"
 "Den kan inte tillämpas på blobbar som antecknats i dess index."
 
-#: git-am.sh:166
+#: git-am.sh:168
 msgid "Falling back to patching base and 3-way merge..."
 msgstr ""
 "Faller tillbaka på att patcha grundversionen och trevägssammanslagning..."
 
-#: git-am.sh:182
+#: git-am.sh:185
 msgid "Failed to merge in the changes."
 msgstr "Misslyckades slå ihop ändringarna."
 
-#: git-am.sh:277
+#: git-am.sh:280
 msgid "Only one StGIT patch series can be applied at once"
 msgstr "Endast en StGIT-patchserie kan tillämpas åt gången"
 
-#: git-am.sh:364
+#: git-am.sh:367
 #, sh-format
 msgid "Patch format $patch_format is not supported."
 msgstr "Patchformatet $patch_format stöds inte."
 
-#: git-am.sh:366
+#: git-am.sh:369
 msgid "Patch format detection failed."
 msgstr "Misslyckades detektera patchformat."
 
-#: git-am.sh:398
+#: git-am.sh:407
 msgid ""
 "The -b/--binary option has been a no-op for long time, and\n"
 "it will be removed. Please do not use it anymore."
 msgstr ""
 "Flaggan -b/--binary har varit utan funktion länge, och\n"
 "kommer tas bort. Vi ber dig att inte använda den längre."
 
-#: git-am.sh:496
+#: git-am.sh:507
 #, sh-format
 msgid "previous rebase directory $dotest still exists but mbox given."
 msgstr "tidigare rebase-katalog $dotest finns fortfarande, men mbox angavs."
 
-#: git-am.sh:501
+#: git-am.sh:512
 msgid "Please make up your mind. --skip or --abort?"
 msgstr "Bestäm dig. --skip eller --abort?"
 
-#: git-am.sh:537
+#: git-am.sh:560
 #, sh-format
 msgid ""
 "Stray $dotest directory found.\n"
 "Use \"git am --abort\" to remove it."
 msgstr ""
 "Kvarbliven katalog $dotest hittades.\n"
 "Använd \"git am --abort\" för att ta bort den."
 
-#: git-am.sh:545
+#: git-am.sh:568
 msgid "Resolve operation not in progress, we are not resuming."
 msgstr "Lösningsoperation pågår inte, vi återupptar inte."
 
-#: git-am.sh:612
+#: git-am.sh:635
 #, sh-format
 msgid "Dirty index: cannot apply patches (dirty: $files)"
 msgstr "Smutsigt index: kan inte tillämpa patchar (smutsiga: $files)"
 
-#: git-am.sh:722
+#: git-am.sh:747
 #, sh-format
 msgid ""
 "Patch is empty.  Was it split wrong?\n"
 "If you would prefer to skip this patch, instead run \"$cmdline --skip\".\n"
 "To restore the original branch and stop patching run \"$cmdline --abort\"."
 msgstr ""
 "Patchen är tom. Delades den upp felaktigt?\n"
 "Om du vill hoppa över patchen kör du istället \"$cmdline --skip\".\n"
 "För att återställa originalgrenen och avbryta kör du \"$cmdline --abort\"."
 
-#: git-am.sh:749
+#: git-am.sh:774
 msgid "Patch does not have a valid e-mail address."
 msgstr "Patchen har inte någon giltig e-postadress."
 
-#: git-am.sh:796
+#: git-am.sh:821
 msgid "cannot be interactive without stdin connected to a terminal."
 msgstr ""
 "kan inte vara interaktiv om standard in inte är ansluten till en terminal."
 
-#: git-am.sh:800
+#: git-am.sh:825
 msgid "Commit Body is:"
 msgstr "Incheckningskroppen är:"
 
 #. TRANSLATORS: Make sure to include [y], [n], [e], [v] and [a]
 #. in your translation. The program will only accept English
 #. input at this point.
-#: git-am.sh:807
+#: git-am.sh:832
 msgid "Apply? [y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all "
 msgstr "Tillämpa? Y=ja/N=nej/E=redigera/V=visa patch/A=godta alla "
 
-#: git-am.sh:843
+#: git-am.sh:868
 #, sh-format
 msgid "Applying: $FIRSTLINE"
 msgstr "Tillämpar: $FIRSTLINE"
 
-#: git-am.sh:864
+#: git-am.sh:889
 msgid ""
 "No changes - did you forget to use 'git add'?\n"
 "If there is nothing left to stage, chances are that something else\n"
 "already introduced the same changes; you might want to skip this patch."
 msgstr ""
 "Inga ändringar - glömde du använda \"git add\"?\n"
 "Om det inte är något kvar att köa kan det hända att något annat redan\n"
 "introducerat samma ändringar; kanske du bör hoppa över patchen."
 
-#: git-am.sh:872
+#: git-am.sh:897
 msgid ""
 "You still have unmerged paths in your index\n"
 "did you forget to use 'git add'?"
 msgstr ""
 "Du har fortfarande sökvägar som inte slagits samman i ditt index\n"
 "glömde du använda \"git add\"?"
 
-#: git-am.sh:888
+#: git-am.sh:913
 msgid "No changes -- Patch already applied."
 msgstr "Inga ändringar -- Patchen har redan tillämpats."
 
-#: git-am.sh:898
+#: git-am.sh:923
 #, sh-format
 msgid "Patch failed at $msgnum $FIRSTLINE"
 msgstr "Patchen misslyckades vid $msgnum $FIRSTLINE"
 
-#: git-am.sh:901
+#: git-am.sh:926
 #, sh-format
 msgid ""
 "The copy of the patch that failed is found in:\n"
 "   $dotest/patch"
 msgstr ""
 "En kopia av patchen som misslyckades finns i:\n"
 "   $dotest/patch"
 
-#: git-am.sh:919
+#: git-am.sh:945
 msgid "applying to an empty history"
 msgstr "tillämpar på en tom historik"
 
 #: git-bisect.sh:48
 msgid "You need to start by \"git bisect start\""
 msgstr "Du måste starta med \"git bisect start\""
@@ -10489,54 +10751,54 @@
 "\"bisect_state $state\" avslutades med felkoden $res"
 
 #: git-bisect.sh:485
 msgid "bisect run success"
 msgstr "\"bisect\"-körningen lyckades"
 
-#: git-pull.sh:21
+#: git-pull.sh:61
 msgid ""
 "Pull is not possible because you have unmerged files.\n"
 "Please, fix them up in the work tree, and then use 'git add/rm <file>'\n"
 "as appropriate to mark resolution and make a commit."
 msgstr ""
 "Du kan inte göra en \"pull\" då du har ändringar som inte checkats in.\n"
 "Rätta dem i din arbetskatalog och använd sedan \"git add/rm <fil>\"\n"
 "där det är lämpligt för att ange lösning och checka in."
 
-#: git-pull.sh:25
+#: git-pull.sh:65
 msgid "Pull is not possible because you have unmerged files."
 msgstr "Du kan inte göra en \"pull\" då du har ändringar som inte checkats in."
 
-#: git-pull.sh:31
+#: git-pull.sh:71
 msgid ""
 "You have not concluded your merge (MERGE_HEAD exists).\n"
 "Please, commit your changes before you can merge."
 msgstr ""
 "Du har inte avslutat sammanslagningen (MERGE_HEAD finns).\n"
 "Checka in dina ändringar innan du kan slå ihop."
 
-#: git-pull.sh:245
+#: git-pull.sh:285
 msgid "updating an unborn branch with changes added to the index"
 msgstr "uppdaterar en ofödd gren med ändringar som lagts till i indexet"
 
-#: git-pull.sh:269
+#: git-pull.sh:311
 #, sh-format
 msgid ""
 "Warning: fetch updated the current branch head.\n"
 "Warning: fast-forwarding your working tree from\n"
 "Warning: commit $orig_head."
 msgstr ""
 "Varning: fetch uppdaterade huvudet för aktuell gren.\n"
 "Varning: snabbspolar din arbetskatalog från\n"
 "Varning: incheckningen $orig_head."
 
-#: git-pull.sh:294
+#: git-pull.sh:336
 msgid "Cannot merge multiple branches into empty head"
 msgstr "Kan inte slå ihop flera grenar i ett tomt huvud."
 
-#: git-pull.sh:298
+#: git-pull.sh:340
 msgid "Cannot rebase onto multiple branches"
 msgstr "Kan inte utföra en \"rebase\" ovanpå flera grenar"
 
 #: git-rebase.sh:57
 msgid ""
 "When you have resolved this problem, run \"git rebase --continue\".\n"
@@ -10728,100 +10990,105 @@
 #. translation of "error: " takes in your language. E.g. in
 #. English this is:
 #.
 #. $ git stash save --blah-blah 2>&1 | head -n 2
 #. error: unknown option for 'stash save': --blah-blah
 #. To provide a message, use git stash save -- '--blah-blah'
-#: git-stash.sh:238
+#: git-stash.sh:241
 #, sh-format
 msgid ""
 "error: unknown option for 'stash save': $option\n"
 "       To provide a message, use git stash save -- '$option'"
 msgstr ""
 "fel: felaktig flagga för \"stash save\": $option\n"
 "     För att ange ett meddelande, använd git stash save -- \"$option\""
 
-#: git-stash.sh:259
+#: git-stash.sh:262
 msgid "No local changes to save"
 msgstr "Inga lokala ändringar att spara"
 
-#: git-stash.sh:263
+#: git-stash.sh:266
 msgid "Cannot initialize stash"
 msgstr "Kan inte initiera \"stash\""
 
-#: git-stash.sh:267
+#: git-stash.sh:270
 msgid "Cannot save the current status"
 msgstr "Kan inte spara aktuell status"
 
-#: git-stash.sh:285
+#: git-stash.sh:288
 msgid "Cannot remove worktree changes"
 msgstr "Kan inte ta bort ändringar i arbetskatalogen"
 
-#: git-stash.sh:384
+#: git-stash.sh:389
+#, sh-format
+msgid "unknown option: $opt"
+msgstr "okänd flagga: $opt"
+
+#: git-stash.sh:399
 msgid "No stash found."
 msgstr "Ingen \"stash\" hittades."
 
-#: git-stash.sh:391
+#: git-stash.sh:406
 #, sh-format
 msgid "Too many revisions specified: $REV"
 msgstr "För många revisioner angivna: $REV"
 
-#: git-stash.sh:397
+#: git-stash.sh:412
 #, sh-format
 msgid "$reference is not a valid reference"
 msgstr "$reference är inte en giltig referens"
 
-#: git-stash.sh:425
+#: git-stash.sh:440
 #, sh-format
 msgid "'$args' is not a stash-like commit"
 msgstr "\"$args\" är inte en \"stash\"-liknande incheckning"
 
-#: git-stash.sh:436
+#: git-stash.sh:451
 #, sh-format
 msgid "'$args' is not a stash reference"
 msgstr "\"$args\" är inte en \"stash\"-referens"
 
-#: git-stash.sh:444
+#: git-stash.sh:459
 msgid "unable to refresh index"
 msgstr "kan inte uppdatera indexet"
 
-#: git-stash.sh:448
+#: git-stash.sh:463
 msgid "Cannot apply a stash in the middle of a merge"
 msgstr "Kan inte tillämpa en \"stash\" mitt i en sammanslagning"
 
-#: git-stash.sh:456
+#: git-stash.sh:471
 msgid "Conflicts in index. Try without --index."
 msgstr "Konflikter i indexet. Testa utan --index."
 
-#: git-stash.sh:458
+#: git-stash.sh:473
 msgid "Could not save index tree"
 msgstr "Kunde inte spara indexträd"
 
-#: git-stash.sh:492
+#: git-stash.sh:507
 msgid "Cannot unstage modified files"
 msgstr "Kan inte ta bort ändrade filer ur kön"
 
-#: git-stash.sh:507
+#: git-stash.sh:522
 msgid "Index was not unstashed."
 msgstr "Indexet har inte tagits ur kön."
 
-#: git-stash.sh:530
+#: git-stash.sh:545
 #, sh-format
 msgid "Dropped ${REV} ($s)"
 msgstr "Kastade ${REV} ($s)"
 
-#: git-stash.sh:531
+#: git-stash.sh:546
 #, sh-format
 msgid "${REV}: Could not drop stash entry"
 msgstr "${REV}: Kunde inte kasta \"stash\"-post"
 
-#: git-stash.sh:539
+#: git-stash.sh:554
 msgid "No branch name specified"
 msgstr "Inget grennamn angavs"
 
-#: git-stash.sh:611
+#: git-stash.sh:626
 msgid "(To restore them type \"git stash apply\")"
 msgstr "(För att återställa dem, skriv \"git stash apply\")"
 
 #: git-submodule.sh:95
 #, sh-format
 msgid "cannot strip one component off url '$remoteurl'"
@@ -11119,12 +11386,36 @@
 
 #: git-submodule.sh:1331
 #, sh-format
 msgid "Synchronizing submodule url for '$displaypath'"
 msgstr "Synkroniserar undermodul-url för \"$displaypath\""
 
+#~ msgid "no branch specified"
+#~ msgstr "inget grennamn angavs"
+
+#~ msgid "check a branch out in a separate working directory"
+#~ msgstr "checka ut en gren i separat arbetskatalog"
+
+#~ msgid "prune .git/worktrees"
+#~ msgstr "rensa .git/worktrees"
+
+#~ msgid "--worktrees does not take extra arguments"
+#~ msgstr "--worktrees tar inte ytterligare argument"
+
+#~ msgid "The most commonly used git commands are:"
+#~ msgstr "De mest använda git-kommandona är:"
+
+#~ msgid "No such branch: '%s'"
+#~ msgstr "Okänd gren: \"%s\""
+
+#~ msgid "Could not create git link %s"
+#~ msgstr "Kunde inte skapa gitlänk %s"
+
+#~ msgid "Invalid gc.pruneexpire: '%s'"
+#~ msgstr "Ogiltig gc.pruneexpire: '%s'"
+
 #~ msgid "server does not support --atomic push"
 #~ msgstr "servern stöder inte push med --atomic"
 
 #~ msgid "(detached from %s)"
 #~ msgstr "(frånkopplad från %s)"
 
@@ -11164,15 +11455,12 @@
 #~ msgid "cannot lock HEAD ref"
 #~ msgstr "kunde inte låsa HEAD-referens"
 
 #~ msgid "cannot update HEAD ref"
 #~ msgstr "kunde inte uppdatera HEAD-referens"
 
-#~ msgid "Invalid %s: '%s'"
-#~ msgstr "Felaktigt %s: \"%s\""
-
 #~ msgid "cannot tell cwd"
 #~ msgstr "kan inte läsa aktuell katalog (cwd)"
 
 #~ msgid "%s: cannot lock the ref"
 #~ msgstr "%s: kan inte låsa referensen"
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/vi.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/vi.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/vi.po	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/vi.po	2015-07-28 04:34:56.000000000 +0800
@@ -3,27 +3,27 @@
 # This file is distributed under the same license as the git-core package.
 # Nguyễn Thái Ngọc Duy <pclouds@gmail.com>, 2012.
 # Trần Ngọc Quân <vnwildman@gmail.com>, 2012, 2013, 2014, 2015.
 #
 msgid ""
 msgstr ""
-"Project-Id-Version: git v2.4.0\n"
+"Project-Id-Version: git v2.5.0\n"
 "Report-Msgid-Bugs-To: Git Mailing List <git@vger.kernel.org>\n"
-"POT-Creation-Date: 2015-04-03 08:13+0800\n"
-"PO-Revision-Date: 2015-04-03 08:51+0700\n"
+"POT-Creation-Date: 2015-07-14 07:19+0800\n"
+"PO-Revision-Date: 2015-07-14 07:29+0700\n"
 "Last-Translator: Trần Ngọc Quân <vnwildman@gmail.com>\n"
 "Language-Team: Vietnamese <translation-team-vi@lists.sourceforge.net>\n"
 "Language: vi\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
 "Plural-Forms: nplurals=1; plural=0;\n"
 "X-Language-Team-Website: <http://translationproject.org/team/vi.html>\n"
 "X-Poedit-SourceCharset: UTF-8\n"
 "X-Poedit-Basepath: ../\n"
-"X-Generator: Poedit 1.5.5\n"
+"X-Generator: Gtranslator 2.91.7\n"
 
 #: advice.c:55
 #, c-format
 msgid "hint: %.*s\n"
 msgstr "gợi ý: %.*s\n"
 
@@ -52,13 +52,13 @@
 "[<đường-dẫn>…]"
 
 #: archive.c:14
 msgid "git archive --remote <repo> [--exec <cmd>] --list"
 msgstr "git archive --remote <kho> [--exec <lệnh>] --list"
 
-#: archive.c:342 builtin/add.c:137 builtin/add.c:427 builtin/rm.c:328
+#: archive.c:342 builtin/add.c:137 builtin/add.c:428 builtin/rm.c:327
 #, c-format
 msgid "pathspec '%s' did not match any files"
 msgstr "đặc tả đường dẫn “%s” không khớp với bất kỳ tập tin nào"
 
 #: archive.c:427
 msgid "fmt"
@@ -75,15 +75,15 @@
 #: archive.c:429
 msgid "prepend prefix to each pathname in the archive"
 msgstr "nối thêm tiền tố vào từng đường dẫn tập tin trong kho lưu"
 
 #: archive.c:430 builtin/archive.c:88 builtin/blame.c:2516
 #: builtin/blame.c:2517 builtin/config.c:57 builtin/fast-export.c:986
-#: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:101
+#: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:99
 #: builtin/ls-files.c:446 builtin/ls-files.c:449 builtin/notes.c:394
-#: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:151
+#: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:150
 msgid "file"
 msgstr "tập_tin"
 
 #: archive.c:431 builtin/archive.c:89
 msgid "write the archive to this file"
 msgstr "ghi kho lưu vào tập tin này"
@@ -109,13 +109,13 @@
 msgstr "nén nhỏ hơn"
 
 #: archive.c:447
 msgid "list supported archive formats"
 msgstr "liệt kê các kiểu nén được hỗ trợ"
 
-#: archive.c:449 builtin/archive.c:90 builtin/clone.c:86
+#: archive.c:449 builtin/archive.c:90 builtin/clone.c:77
 msgid "repo"
 msgstr "kho"
 
 #: archive.c:450 builtin/archive.c:91
 msgid "retrieve the archive from remote repository <repo>"
 msgstr "nhận kho nén từ kho chứa <kho> trên máy chủ"
@@ -125,13 +125,13 @@
 msgstr "lệnh"
 
 #: archive.c:452 builtin/archive.c:93
 msgid "path to the remote git-upload-archive command"
 msgstr "đường dẫn đến lệnh git-upload-pack trên máy chủ"
 
-#: attr.c:264
+#: attr.c:265
 msgid ""
 "Negative patterns are ignored in git attributes\n"
 "Use '\\!' for literal leading exclamation."
 msgstr ""
 "Các mẫu dạng phủ định bị cấm dùng cho các thuộc tính của git\n"
 "Dùng “\\!” cho các chuỗi văn bản có dấu chấm than dẫn đầu."
@@ -265,14 +265,14 @@
 
 #: bundle.c:139
 msgid "Repository lacks these prerequisite commits:"
 msgstr "Kho chứa thiếu những lần chuyển giao tiên quyết này:"
 
 #: bundle.c:163 sequencer.c:650 sequencer.c:1105 builtin/blame.c:2705
-#: builtin/branch.c:659 builtin/commit.c:1045 builtin/log.c:330
-#: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:358
+#: builtin/branch.c:651 builtin/commit.c:1045 builtin/log.c:330
+#: builtin/log.c:825 builtin/log.c:1432 builtin/log.c:1666 builtin/merge.c:358
 #: builtin/shortlog.c:158
 msgid "revision walk setup failed"
 msgstr "cài đặt việc di chuyển qua các điểm xét duyệt gặp lỗi"
 
 #: bundle.c:185
 #, c-format
@@ -500,35 +500,43 @@
 "Found errors in 'diff.dirstat' config variable:\n"
 "%s"
 msgstr ""
 "Tìm thấy các lỗi trong biến cấu hình “diff.dirstat”:\n"
 "%s"
 
-#: diff.c:2956
+#: diff.c:2997
 #, c-format
 msgid "external diff died, stopping at %s"
 msgstr "phần mềm diff ở bên ngoài đã chết, dừng tại %s"
 
-#: diff.c:3351
+#: diff.c:3393
 msgid "--follow requires exactly one pathspec"
 msgstr "--follow cần chính xác một đặc tả đường dẫn"
 
-#: diff.c:3514
+#: diff.c:3556
 #, c-format
 msgid ""
 "Failed to parse --dirstat/-X option parameter:\n"
 "%s"
 msgstr ""
 "Gặp lỗi khi phân tích đối số tùy chọn --dirstat/-X:\n"
 "%s"
 
-#: diff.c:3528
+#: diff.c:3570
 #, c-format
 msgid "Failed to parse --submodule option parameter: '%s'"
 msgstr "Gặp lỗi khi phân tích đối số tùy chọn --submodule: “%s”"
 
+#: dir.c:1852
+msgid "failed to get kernel name and information"
+msgstr "gặp lỗi khi lấy tên và thông tin của nhân"
+
+#: dir.c:1945
+msgid "Untracked cache is disabled on this system."
+msgstr "Bộ nhớ tạm không theo vết bị tắt trên hệ thống này."
+
 #: gpg-interface.c:129 gpg-interface.c:200
 msgid "could not run gpg."
 msgstr "không thể chạy gpg."
 
 #: gpg-interface.c:141
 msgid "gpg did not accept the data"
@@ -569,78 +577,78 @@
 msgstr "các lệnh git sẵn có trong thư mục “%s”:"
 
 #: help.c:214
 msgid "git commands available from elsewhere on your $PATH"
 msgstr "các lệnh git sẵn có từ một nơi khác trong $PATH của bạn"
 
-#: help.c:230
-msgid "The most commonly used git commands are:"
-msgstr "Những lệnh git hay được dùng nhất là:"
+#: help.c:246
+msgid "These are common Git commands used in various situations:"
+msgstr "Có các lệnh Git chung được sử dụng trong các tình huống khác nhau:"
 
-#: help.c:289
+#: help.c:311
 #, c-format
 msgid ""
 "'%s' appears to be a git command, but we were not\n"
 "able to execute it. Maybe git-%s is broken?"
 msgstr ""
 "“%s” trông như là một lệnh git, nhưng chúng tôi không\n"
 "thể thực thi nó. Có lẽ là lệnh git-%s đã bị hỏng?"
 
-#: help.c:346
+#: help.c:368
 msgid "Uh oh. Your system reports no Git commands at all."
 msgstr "Ối chà. Hệ thống của bạn báo rằng chẳng có lệnh Git nào cả."
 
-#: help.c:368
+#: help.c:390
 #, c-format
 msgid ""
 "WARNING: You called a Git command named '%s', which does not exist.\n"
 "Continuing under the assumption that you meant '%s'"
 msgstr ""
 "CẢNH BÁO: Bạn đã gọi lệnh Git có tên “%s”, mà nó lại không có sẵn.\n"
 "Tiếp tục và coi rằng ý bạn là “%s”"
 
-#: help.c:373
+#: help.c:395
 #, c-format
 msgid "in %0.1f seconds automatically..."
 msgstr "trong %0.1f giây một cách tự động…"
 
-#: help.c:380
+#: help.c:402
 #, c-format
 msgid "git: '%s' is not a git command. See 'git --help'."
 msgstr "git: “%s” không phải là một lệnh của git. Xem “git --help”."
 
-#: help.c:384 help.c:444
+#: help.c:406 help.c:466
 msgid ""
 "\n"
 "Did you mean this?"
 msgid_plural ""
 "\n"
 "Did you mean one of these?"
 msgstr[0] ""
 "\n"
 "Có phải ý bạn là một trong số những cái này không?"
 
-#: help.c:440
+#: help.c:462
 #, c-format
 msgid "%s: %s - %s"
 msgstr "%s: %s - %s"
 
-#: lockfile.c:283
+#: lockfile.c:345
 msgid "BUG: reopen a lockfile that is still open"
 msgstr "LỖI: mở lại tập tin khóa mà nó lại đang được mở"
 
-#: lockfile.c:285
+#: lockfile.c:347
 msgid "BUG: reopen a lockfile that has been committed"
 msgstr "LỖI: mở lại tập tin khóa mà nó đã được chuyển giao"
 
 #: merge.c:41
 msgid "failed to read the cache"
 msgstr "gặp lỗi khi đọc bộ nhớ đệm"
 
-#: merge.c:94 builtin/checkout.c:374 builtin/checkout.c:580
-#: builtin/clone.c:662
+#: merge.c:94 builtin/checkout.c:376 builtin/checkout.c:587
+#: builtin/clone.c:647
 msgid "unable to write new index file"
 msgstr "không thể ghi tập tin lưu bảng mục lục mới"
 
 #: merge-recursive.c:189
 #, c-format
 msgid "(bad commit)\n"
@@ -652,248 +660,248 @@
 msgstr "addinfo_cache gặp lỗi đối với đường dẫn “%s”"
 
 #: merge-recursive.c:270
 msgid "error building trees"
 msgstr "gặp lỗi khi xây dựng cây"
 
-#: merge-recursive.c:688
+#: merge-recursive.c:687
 #, c-format
 msgid "failed to create path '%s'%s"
 msgstr "gặp lỗi khi tạo đường dẫn “%s”%s"
 
-#: merge-recursive.c:699
+#: merge-recursive.c:698
 #, c-format
 msgid "Removing %s to make room for subdirectory\n"
 msgstr "Gỡ bỏ %s để tạo chỗ (room) cho thư mục con\n"
 
-#: merge-recursive.c:713 merge-recursive.c:734
+#: merge-recursive.c:712 merge-recursive.c:733
 msgid ": perhaps a D/F conflict?"
 msgstr ": có lẽ là một xung đột D/F?"
 
-#: merge-recursive.c:724
+#: merge-recursive.c:723
 #, c-format
 msgid "refusing to lose untracked file at '%s'"
 msgstr "từ chối đóng tập tin không được theo dõi tại “%s”"
 
-#: merge-recursive.c:764
+#: merge-recursive.c:763
 #, c-format
 msgid "cannot read object %s '%s'"
 msgstr "không thể đọc đối tượng %s “%s”"
 
-#: merge-recursive.c:766
+#: merge-recursive.c:765
 #, c-format
 msgid "blob expected for %s '%s'"
 msgstr "đối tượng blob được mong đợi cho %s “%s”"
 
-#: merge-recursive.c:789 builtin/clone.c:321
+#: merge-recursive.c:788 builtin/clone.c:306
 #, c-format
 msgid "failed to open '%s'"
 msgstr "gặp lỗi khi mở “%s”"
 
-#: merge-recursive.c:797
+#: merge-recursive.c:796
 #, c-format
 msgid "failed to symlink '%s'"
 msgstr "gặp lỗi khi tạo liên kết mềm (symlink) “%s”"
 
-#: merge-recursive.c:800
+#: merge-recursive.c:799
 #, c-format
 msgid "do not know what to do with %06o %s '%s'"
 msgstr "không hiểu phải làm gì với %06o %s “%s”"
 
-#: merge-recursive.c:938
+#: merge-recursive.c:937
 msgid "Failed to execute internal merge"
 msgstr "Gặp lỗi khi thực hiện trộn nội bộ"
 
-#: merge-recursive.c:942
+#: merge-recursive.c:941
 #, c-format
 msgid "Unable to add %s to database"
 msgstr "Không thể thêm %s vào cơ sở dữ liệu"
 
-#: merge-recursive.c:958
+#: merge-recursive.c:957
 msgid "unsupported object type in the tree"
 msgstr "kiểu đối tượng không được hỗ trợ trong cây (tree)"
 
-#: merge-recursive.c:1033 merge-recursive.c:1047
+#: merge-recursive.c:1032 merge-recursive.c:1046
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree."
 msgstr ""
 "XUNG ĐỘT (%s/xóa): %s bị xóa trong %s và %s trong %s. Phiên bản %s của %s "
 "còn lại trong cây (tree)."
 
-#: merge-recursive.c:1039 merge-recursive.c:1052
+#: merge-recursive.c:1038 merge-recursive.c:1051
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree at %s."
 msgstr ""
 "XUNG ĐỘT (%s/xóa): %s bị xóa trong %s và %s trong %s. Phiên bản %s của %s "
 "còn lại trong cây (tree) tại %s."
 
-#: merge-recursive.c:1093
+#: merge-recursive.c:1092
 msgid "rename"
 msgstr "đổi tên"
 
-#: merge-recursive.c:1093
+#: merge-recursive.c:1092
 msgid "renamed"
 msgstr "đã đổi tên"
 
-#: merge-recursive.c:1149
+#: merge-recursive.c:1148
 #, c-format
 msgid "%s is a directory in %s adding as %s instead"
 msgstr "%s là một thư mục trong %s thay vào đó thêm vào như là %s"
 
-#: merge-recursive.c:1171
+#: merge-recursive.c:1170
 #, c-format
 msgid ""
 "CONFLICT (rename/rename): Rename \"%s\"->\"%s\" in branch \"%s\" rename \"%s"
 "\"->\"%s\" in \"%s\"%s"
 msgstr ""
 "XUNG ĐỘT (đổi-tên/đổi-tên): Đổi tên \"%s\"->\"%s\" trong nhánh \"%s\" đổi "
 "tên \"%s\"->\"%s\" trong \"%s\"%s"
 
-#: merge-recursive.c:1176
+#: merge-recursive.c:1175
 msgid " (left unresolved)"
 msgstr " (cần giải quyết)"
 
-#: merge-recursive.c:1230
+#: merge-recursive.c:1229
 #, c-format
 msgid "CONFLICT (rename/rename): Rename %s->%s in %s. Rename %s->%s in %s"
 msgstr ""
 "XUNG ĐỘT (đổi-tên/đổi-tên): Đổi tên %s->%s trong %s. Đổi tên %s->%s trong %s"
 
-#: merge-recursive.c:1260
+#: merge-recursive.c:1259
 #, c-format
 msgid "Renaming %s to %s and %s to %s instead"
 msgstr "Đang đổi tên %s thành %s thay vì %s thành %s"
 
-#: merge-recursive.c:1459
+#: merge-recursive.c:1458
 #, c-format
 msgid "CONFLICT (rename/add): Rename %s->%s in %s. %s added in %s"
 msgstr ""
 "XUNG ĐỘT (đổi-tên/thêm): Đổi tên %s->%s trong %s. %s được thêm vào trong %s"
 
-#: merge-recursive.c:1469
+#: merge-recursive.c:1468
 #, c-format
 msgid "Adding merged %s"
 msgstr "Thêm hòa trộn %s"
 
-#: merge-recursive.c:1474 merge-recursive.c:1672
+#: merge-recursive.c:1473 merge-recursive.c:1671
 #, c-format
 msgid "Adding as %s instead"
 msgstr "Thay vào đó thêm vào %s"
 
-#: merge-recursive.c:1525
+#: merge-recursive.c:1524
 #, c-format
 msgid "cannot read object %s"
 msgstr "không thể đọc đối tượng %s"
 
-#: merge-recursive.c:1528
+#: merge-recursive.c:1527
 #, c-format
 msgid "object %s is not a blob"
 msgstr "đối tượng %s không phải là một blob"
 
-#: merge-recursive.c:1576
+#: merge-recursive.c:1575
 msgid "modify"
 msgstr "sửa đổi"
 
-#: merge-recursive.c:1576
+#: merge-recursive.c:1575
 msgid "modified"
 msgstr "đã sửa"
 
-#: merge-recursive.c:1586
+#: merge-recursive.c:1585
 msgid "content"
 msgstr "nội dung"
 
-#: merge-recursive.c:1593
+#: merge-recursive.c:1592
 msgid "add/add"
 msgstr "thêm/thêm"
 
-#: merge-recursive.c:1627
+#: merge-recursive.c:1626
 #, c-format
 msgid "Skipped %s (merged same as existing)"
 msgstr "Đã bỏ qua %s (đã có sẵn lần hòa trộn này)"
 
-#: merge-recursive.c:1641
+#: merge-recursive.c:1640
 #, c-format
 msgid "Auto-merging %s"
 msgstr "Tự-động-hòa-trộn %s"
 
-#: merge-recursive.c:1645 git-submodule.sh:1150
+#: merge-recursive.c:1644 git-submodule.sh:1150
 msgid "submodule"
 msgstr "mô-đun-con"
 
-#: merge-recursive.c:1646
+#: merge-recursive.c:1645
 #, c-format
 msgid "CONFLICT (%s): Merge conflict in %s"
 msgstr "XUNG ĐỘT (%s): Xung đột hòa trộn trong %s"
 
-#: merge-recursive.c:1732
+#: merge-recursive.c:1731
 #, c-format
 msgid "Removing %s"
 msgstr "Đang xóa %s"
 
-#: merge-recursive.c:1757
+#: merge-recursive.c:1756
 msgid "file/directory"
 msgstr "tập-tin/thư-mục"
 
-#: merge-recursive.c:1763
+#: merge-recursive.c:1762
 msgid "directory/file"
 msgstr "thư-mục/tập-tin"
 
-#: merge-recursive.c:1768
+#: merge-recursive.c:1767
 #, c-format
 msgid "CONFLICT (%s): There is a directory with name %s in %s. Adding %s as %s"
 msgstr ""
 "XUNG ĐỘT (%s): Ở đây không có thư mục nào có tên %s trong %s. Thêm %s như là "
 "%s"
 
-#: merge-recursive.c:1778
+#: merge-recursive.c:1777
 #, c-format
 msgid "Adding %s"
 msgstr "Thêm \"%s\""
 
-#: merge-recursive.c:1795
+#: merge-recursive.c:1794
 msgid "Fatal merge failure, shouldn't happen."
 msgstr "Việc hòa trộn hỏng nghiêm trọng, không nên để xảy ra."
 
-#: merge-recursive.c:1814
+#: merge-recursive.c:1813
 msgid "Already up-to-date!"
 msgstr "Đã cập nhật rồi!"
 
-#: merge-recursive.c:1823
+#: merge-recursive.c:1822
 #, c-format
 msgid "merging of trees %s and %s failed"
 msgstr "hòa trộn cây (tree) %s và %s gặp lỗi"
 
-#: merge-recursive.c:1853
+#: merge-recursive.c:1852
 #, c-format
 msgid "Unprocessed path??? %s"
 msgstr "Đường dẫn chưa được xử lý??? %s"
 
-#: merge-recursive.c:1901
+#: merge-recursive.c:1900
 msgid "Merging:"
 msgstr "Đang trộn:"
 
-#: merge-recursive.c:1914
+#: merge-recursive.c:1913
 #, c-format
 msgid "found %u common ancestor:"
 msgid_plural "found %u common ancestors:"
 msgstr[0] "tìm thấy %u tổ tiên chung:"
 
-#: merge-recursive.c:1951
+#: merge-recursive.c:1950
 msgid "merge returned no commit"
 msgstr "hòa trộn không trả về lần chuyển giao nào"
 
-#: merge-recursive.c:2008
+#: merge-recursive.c:2007
 #, c-format
 msgid "Could not parse object '%s'"
 msgstr "Không thể phân tích đối tượng “%s”"
 
-#: merge-recursive.c:2019 builtin/merge.c:667
+#: merge-recursive.c:2018 builtin/merge.c:645
 msgid "Unable to write index."
 msgstr "Không thể ghi bảng mục lục"
 
 #: notes-utils.c:41
 msgid "Cannot commit uninitialized/unreferenced notes tree"
 msgstr ""
@@ -914,13 +922,13 @@
 #. environment variable, the second %s is its value
 #: notes-utils.c:119
 #, c-format
 msgid "Bad %s value: '%s'"
 msgstr "Giá trị %s sai: “%s”"
 
-#: object.c:241
+#: object.c:242
 #, c-format
 msgid "unable to parse object: %s"
 msgstr "không thể phân tích đối tượng: “%s”"
 
 #: parse-options.c:546
 msgid "..."
@@ -1013,111 +1021,154 @@
 "Có lẽ bạn đã quên thêm hoặc là “:/” hoặc là “.”?"
 
 #: pretty.c:968
 msgid "unable to parse --pretty format"
 msgstr "không thể phân tích định dạng --pretty"
 
-#: progress.c:225
+#: progress.c:236
 msgid "done"
 msgstr "xong"
 
-#: read-cache.c:1275
+#: read-cache.c:1295
 #, c-format
 msgid ""
 "index.version set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "index.version được đặt, nhưng giá trị của nó lại không hợp lệ.\n"
 "Dùng phiên bản %i"
 
-#: read-cache.c:1285
+#: read-cache.c:1305
 #, c-format
 msgid ""
 "GIT_INDEX_VERSION set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "GIT_INDEX_VERSION được đặt, nhưng giá trị của nó lại không hợp lệ.\n"
 "Dùng phiên bản %i"
 
-#: remote.c:782
+#: remote.c:792
 #, c-format
 msgid "Cannot fetch both %s and %s to %s"
 msgstr "Không thể lấy về cả %s và %s cho %s"
 
-#: remote.c:786
+#: remote.c:796
 #, c-format
 msgid "%s usually tracks %s, not %s"
 msgstr "%s thường theo dõi %s, không phải %s"
 
-#: remote.c:790
+#: remote.c:800
 #, c-format
 msgid "%s tracks both %s and %s"
 msgstr "%s theo dõi cả %s và %s"
 
-#: remote.c:798
+#: remote.c:808
 msgid "Internal error"
 msgstr "Lỗi nội bộ"
 
-#: remote.c:1980
+#: remote.c:1723 remote.c:1766
+msgid "HEAD does not point to a branch"
+msgstr "HEAD không chỉ đến một nhánh nào cả"
+
+#: remote.c:1732
+#, c-format
+msgid "no such branch: '%s'"
+msgstr "không có nhánh nào như thế: “%s”"
+
+#: remote.c:1735
+#, c-format
+msgid "no upstream configured for branch '%s'"
+msgstr "không có thượng nguồn được cấu hình cho nhánh “%s”"
+
+#: remote.c:1741
+#, c-format
+msgid "upstream branch '%s' not stored as a remote-tracking branch"
+msgstr ""
+"nhánh thượng nguồn “%s” không được lưu lại như là một nhánh theo dõi máy chủ"
+
+#: remote.c:1756
+#, c-format
+msgid "push destination '%s' on remote '%s' has no local tracking branch"
+msgstr "đẩy lên đích “%s” trên máy chủ “%s” không có nhánh theo dõi nội bộ"
+
+#: remote.c:1771
+#, c-format
+msgid "branch '%s' has no remote for pushing"
+msgstr "nhánh “%s” không có máy chủ để đẩy lên"
+
+#: remote.c:1782
+#, c-format
+msgid "push refspecs for '%s' do not include '%s'"
+msgstr "đẩy refspecs cho “%s” không bao gồm “%s”"
+
+#: remote.c:1795
+msgid "push has no destination (push.default is 'nothing')"
+msgstr "đẩy lên mà không có đích (push.default là “nothing”)"
+
+#: remote.c:1817
+msgid "cannot resolve 'simple' push to a single destination"
+msgstr "không thể phân giải đẩy “đơn giản” đến một đích đơn"
+
+#: remote.c:2124
 #, c-format
 msgid "Your branch is based on '%s', but the upstream is gone.\n"
 msgstr ""
 "Nhánh của bạn dựa trên cơ sở là “%s”, nhưng trên thượng nguồn không còn.\n"
 
-#: remote.c:1984
+#: remote.c:2128
 msgid "  (use \"git branch --unset-upstream\" to fixup)\n"
 msgstr "   (dùng \" git branch --unset-upstream\" để sửa)\n"
 
-#: remote.c:1987
+#: remote.c:2131
 #, c-format
 msgid "Your branch is up-to-date with '%s'.\n"
 msgstr "Nhánh của bạn đã cập nhật với “%s”.\n"
 
-#: remote.c:1991
+#: remote.c:2135
 #, c-format
 msgid "Your branch is ahead of '%s' by %d commit.\n"
 msgid_plural "Your branch is ahead of '%s' by %d commits.\n"
 msgstr[0] "Nhánh của bạn đứng trước “%s” %d lần chuyển giao.\n"
 
-#: remote.c:1997
+#: remote.c:2141
 msgid "  (use \"git push\" to publish your local commits)\n"
 msgstr "  (dùng \"git push\" để xuất bản các lần chuyển giao nội bộ của bạn)\n"
 
-#: remote.c:2000
+#: remote.c:2144
 #, c-format
 msgid "Your branch is behind '%s' by %d commit, and can be fast-forwarded.\n"
 msgid_plural ""
 "Your branch is behind '%s' by %d commits, and can be fast-forwarded.\n"
 msgstr[0] ""
-"Nhánh của bạn đứng đằng sau “%s” %d lần chuyển giao, và có thể được fast-"
-"forward.\n"
+"Nhánh của bạn đứng đằng sau “%s” %d lần chuyển giao, và có thể được chuyển-"
+"tiếp-nhanh.\n"
 
-#: remote.c:2008
+#: remote.c:2152
 msgid "  (use \"git pull\" to update your local branch)\n"
 msgstr "  (dùng \"git pull\" để cập nhật nhánh nội bộ của bạn)\n"
 
-#: remote.c:2011
+#: remote.c:2155
 #, c-format
 msgid ""
 "Your branch and '%s' have diverged,\n"
 "and have %d and %d different commit each, respectively.\n"
 msgid_plural ""
 "Your branch and '%s' have diverged,\n"
 "and have %d and %d different commits each, respectively.\n"
 msgstr[0] ""
 "Nhánh của bạn và “%s” bị phân kỳ,\n"
 "và có %d và %d lần chuyển giao khác nhau cho từng cái,\n"
 "tương ứng với mỗi lần.\n"
 
-#: remote.c:2021
+#: remote.c:2165
 msgid "  (use \"git pull\" to merge the remote branch into yours)\n"
 msgstr ""
 "  (dùng \"git pull\" để hòa trộn nhánh trên máy chủ vào trong nhánh của "
 "bạn)\n"
 
-#: revision.c:2348
+#: revision.c:2366
 msgid "--first-parent is incompatible with --bisect"
 msgstr "--first-parent xung khắc với --bisect"
 
 #: run-command.c:83
 msgid "open /dev/null failed"
 msgstr "gặp lỗi khi mở “/dev/null”"
@@ -1128,28 +1179,28 @@
 msgstr "dup2(%d,%d) gặp lỗi"
 
 #: send-pack.c:272
 msgid "failed to sign the push certificate"
 msgstr "gặp lỗi khi ký chứng thực đẩy"
 
-#: send-pack.c:356
+#: send-pack.c:378
 msgid "the receiving end does not support --signed push"
 msgstr "kết thúc nhận không hỗ trợ đẩy --signed"
 
-#: send-pack.c:366
+#: send-pack.c:389
 msgid "the receiving end does not support --atomic push"
 msgstr "kết thúc nhận không hỗ trợ đẩy --atomic"
 
-#: sequencer.c:172 builtin/merge.c:782 builtin/merge.c:893 builtin/merge.c:995
-#: builtin/merge.c:1005
+#: sequencer.c:172 builtin/merge.c:760 builtin/merge.c:871 builtin/merge.c:973
+#: builtin/merge.c:983
 #, c-format
 msgid "Could not open '%s' for writing"
 msgstr "Không thể mở “%s” để ghi"
 
-#: sequencer.c:174 builtin/merge.c:344 builtin/merge.c:785 builtin/merge.c:997
-#: builtin/merge.c:1010
+#: sequencer.c:174 builtin/merge.c:344 builtin/merge.c:763 builtin/merge.c:975
+#: builtin/merge.c:988
 #, c-format
 msgid "Could not write to '%s'"
 msgstr "Không thể ghi vào “%s”"
 
 #: sequencer.c:195
 msgid ""
@@ -1182,13 +1233,13 @@
 #: sequencer.c:229
 msgid "Your local changes would be overwritten by cherry-pick."
 msgstr "Các thay đổi nội bộ của bạn có thể bị ghi đè bởi lệnh cherry-pick."
 
 #: sequencer.c:231
 msgid "Your local changes would be overwritten by revert."
-msgstr "Các thay đổi nội bộ của bạn có thể bị ghi đè bởi lệnh revert."
+msgstr "Các thay đổi nội bộ của bạn có thể bị ghi đè bởi lệnh hoàn nguyên."
 
 #: sequencer.c:234
 msgid "Commit your changes or stash them to proceed."
 msgstr "Chuyển giao các thay đổi của bạn hay tạm cất (stash) chúng để xử lý."
 
 #. TRANSLATORS: %s will be "revert" or "cherry-pick"
@@ -1248,13 +1299,13 @@
 msgid "Cannot get commit message for %s"
 msgstr "Không thể lấy ghi chú lần chuyển giao cho %s"
 
 #: sequencer.c:616
 #, c-format
 msgid "could not revert %s... %s"
-msgstr "không thể revert %s… %s"
+msgstr "không thể hoàn nguyên %s… %s"
 
 #: sequencer.c:617
 #, c-format
 msgid "could not apply %s... %s"
 msgstr "không thể áp dụng miếng vá %s… %s"
 
@@ -1333,23 +1384,23 @@
 #, c-format
 msgid "Error wrapping up %s."
 msgstr "Lỗi bao bọc %s."
 
 #: sequencer.c:882 sequencer.c:1018
 msgid "no cherry-pick or revert in progress"
-msgstr "không cherry-pick hay revert trong tiến trình"
+msgstr "không cherry-pick hay hoàn nguyên trong tiến trình"
 
 #: sequencer.c:884
 msgid "cannot resolve HEAD"
 msgstr "không thể phân giải HEAD"
 
 #: sequencer.c:886
 msgid "cannot abort from a branch yet to be born"
 msgstr "không thể hủy bỏ từ một nhánh mà nó còn chưa được tạo ra"
 
-#: sequencer.c:908 builtin/apply.c:4288
+#: sequencer.c:908 builtin/apply.c:4291
 #, c-format
 msgid "cannot open %s: %s"
 msgstr "không thể mở %s: %s"
 
 #: sequencer.c:911
 #, c-format
@@ -1379,19 +1430,24 @@
 #, c-format
 msgid "%s: bad revision"
 msgstr "%s: điểm xét duyệt sai"
 
 #: sequencer.c:1123
 msgid "Can't revert as initial commit"
-msgstr "Không thể revert một lần chuyển giao khởi tạo"
+msgstr "Không thể hoàn nguyên một lần chuyển giao khởi tạo"
 
 #: sequencer.c:1124
 msgid "Can't cherry-pick into empty head"
 msgstr "Không thể cherry-pick vào một đầu (head) trống rỗng"
 
-#: sha1_name.c:440
+#: setup.c:243
+#, c-format
+msgid "failed to read %s"
+msgstr "gặp lỗi khi đọc %s"
+
+#: sha1_name.c:453
 msgid ""
 "Git normally never creates a ref that ends with 40 hex characters\n"
 "because it will be ignored when you just specify 40-hex. These refs\n"
 "may be created by mistake. For example,\n"
 "\n"
 "  git checkout -b $br $(git rev-parse ...)\n"
@@ -1409,32 +1465,12 @@
 "với \"$br\" không hiểu lý do vì sao trống rỗng và một tham chiếu 40-hex được "
 "tạo ra.\n"
 "Xin hãy kiểm tra những tham chiếu này và có thể xóa chúng đi. Tắt lời nhắn "
 "này\n"
 "bằng cách chạy lệnh \"git config advice.objectNameWarning false\""
 
-#: sha1_name.c:1068
-msgid "HEAD does not point to a branch"
-msgstr "HEAD không chỉ đến một nhánh nào cả"
-
-#: sha1_name.c:1071
-#, c-format
-msgid "No such branch: '%s'"
-msgstr "Không có nhánh nào như thế: “%s”"
-
-#: sha1_name.c:1073
-#, c-format
-msgid "No upstream configured for branch '%s'"
-msgstr "Không có thượng nguồn được cấu hình cho nhánh “%s”"
-
-#: sha1_name.c:1077
-#, c-format
-msgid "Upstream branch '%s' not stored as a remote-tracking branch"
-msgstr ""
-"Nhánh thượng nguồn “%s” không được lưu lại như là một nhánh “remote-tracking”"
-
 #: submodule.c:64 submodule.c:98
 msgid "Cannot change unmerged .gitmodules, resolve merge conflicts first"
 msgstr ""
 "Không thể thay đổi .gitmodules chưa hòa trộn, hãy giải quyết xung đột trộn "
 "trước"
 
@@ -1454,18 +1490,13 @@
 msgstr "Không thể gỡ bỏ mục .gitmodules dành cho %s"
 
 #: submodule.c:120
 msgid "staging updated .gitmodules failed"
 msgstr "gặp lỗi khi tổ chức .gitmodules đã cập nhật"
 
-#: submodule.c:1109 builtin/init-db.c:371
-#, c-format
-msgid "Could not create git link %s"
-msgstr "Không thể tạo liên kết git “%s”"
-
-#: submodule.c:1120
+#: submodule.c:1115
 #, c-format
 msgid "Could not set core.worktree in %s"
 msgstr "Không thể đặt “core.worktree” trong “%s”."
 
 #: trailer.c:491 trailer.c:495 trailer.c:499 trailer.c:553 trailer.c:557
 #: trailer.c:561
@@ -1489,13 +1520,13 @@
 msgstr "không đọc được tập tin đầu vào “%s”"
 
 #: trailer.c:704
 msgid "could not read from stdin"
 msgstr "không thể đọc từ đầu vào tiêu chuẩn"
 
-#: unpack-trees.c:202
+#: unpack-trees.c:203
 msgid "Checking out files"
 msgstr "Đang lấy ra các tập tin"
 
 #: urlmatch.c:120
 msgid "invalid URL scheme name or missing '://' suffix"
 msgstr "tên lược đồ URL không hợp lệ, hoặc thiếu hậu tố “://”"
@@ -1545,12 +1576,27 @@
 msgstr "không có người dùng như vậy"
 
 #: wrapper.c:564
 msgid "unable to get current working directory"
 msgstr "Không thể lấy thư mục làm việc hiện hành"
 
+#: wrapper.c:575
+#, c-format
+msgid "could not open %s for writing"
+msgstr "không thể mở %s để ghi"
+
+#: wrapper.c:587
+#, c-format
+msgid "could not write to %s"
+msgstr "không thể ghi vào %s"
+
+#: wrapper.c:593
+#, c-format
+msgid "could not close %s"
+msgstr "không thể đóng %s"
+
 #: wt-status.c:150
 msgid "Unmerged paths:"
 msgstr "Những đường dẫn chưa được hòa trộn:"
 
 #: wt-status.c:177 wt-status.c:204
 #, c-format
@@ -1572,17 +1618,17 @@
 "cần được giải quyết)"
 
 #: wt-status.c:187
 msgid "  (use \"git rm <file>...\" to mark resolution)"
 msgstr "  (dùng \"git rm <tập-tin>…\" để đánh dấu là cần giải quyết)"
 
-#: wt-status.c:198 wt-status.c:878
+#: wt-status.c:198 wt-status.c:881
 msgid "Changes to be committed:"
 msgstr "Những thay đổi sẽ được chuyển giao:"
 
-#: wt-status.c:216 wt-status.c:887
+#: wt-status.c:216 wt-status.c:890
 msgid "Changes not staged for commit:"
 msgstr "Các thay đổi chưa được đặt lên bệ phóng để chuyển giao:"
 
 #: wt-status.c:220
 msgid "  (use \"git add <file>...\" to update what will be committed)"
 msgstr "  (dùng \"git add <tập-tin>…\" để cập nhật những gì sẽ chuyển giao)"
@@ -1690,313 +1736,313 @@
 
 #: wt-status.c:391
 #, c-format
 msgid "bug: unhandled diff status %c"
 msgstr "lỗi: không thể tiếp nhận trạng thái lệnh diff %c"
 
-#: wt-status.c:753
+#: wt-status.c:755
 msgid "Submodules changed but not updated:"
 msgstr "Những mô-đun-con đã bị thay đổi nhưng chưa được cập nhật:"
 
-#: wt-status.c:755
+#: wt-status.c:757
 msgid "Submodule changes to be committed:"
 msgstr "Những mô-đun-con thay đổi đã được chuyển giao:"
 
-#: wt-status.c:835
+#: wt-status.c:838
 msgid ""
 "Do not touch the line above.\n"
 "Everything below will be removed."
 msgstr ""
 "Không động đến đường ở trên.\n"
 "Mọi thứ phía dưới sẽ được xóa bỏ."
 
-#: wt-status.c:946
+#: wt-status.c:949
 msgid "You have unmerged paths."
 msgstr "Bạn có những đường dẫn chưa được hòa trộn."
 
-#: wt-status.c:949
+#: wt-status.c:952
 msgid "  (fix conflicts and run \"git commit\")"
 msgstr "  (sửa các xung đột rồi chạy \"git commit\")"
 
-#: wt-status.c:952
+#: wt-status.c:955
 msgid "All conflicts fixed but you are still merging."
 msgstr "Tất cả các xung đột đã được giải quyết nhưng bạn vẫn đang hòa trộn."
 
-#: wt-status.c:955
+#: wt-status.c:958
 msgid "  (use \"git commit\" to conclude merge)"
 msgstr "  (dùng \"git commit\" để hoàn tất việc hòa trộn)"
 
-#: wt-status.c:965
+#: wt-status.c:968
 msgid "You are in the middle of an am session."
 msgstr "Bạn đang ở giữa của một phiên “am”."
 
-#: wt-status.c:968
+#: wt-status.c:971
 msgid "The current patch is empty."
 msgstr "Miếng vá hiện tại bị trống rỗng."
 
-#: wt-status.c:972
+#: wt-status.c:975
 msgid "  (fix conflicts and then run \"git am --continue\")"
 msgstr "  (sửa các xung đột và sau đó chạy lệnh \"git am --continue\")"
 
-#: wt-status.c:974
+#: wt-status.c:977
 msgid "  (use \"git am --skip\" to skip this patch)"
 msgstr "  (dùng \"git am --skip\" để bỏ qua miếng vá này)"
 
-#: wt-status.c:976
+#: wt-status.c:979
 msgid "  (use \"git am --abort\" to restore the original branch)"
 msgstr "  (dùng \"git am --abort\" để phục hồi lại nhánh nguyên thủy)"
 
-#: wt-status.c:1036 wt-status.c:1053
+#: wt-status.c:1039 wt-status.c:1056
 #, c-format
 msgid "You are currently rebasing branch '%s' on '%s'."
 msgstr "Bạn hiện nay đang thực hiện việc “rebase” nhánh “%s” trên “%s”."
 
-#: wt-status.c:1041 wt-status.c:1058
+#: wt-status.c:1044 wt-status.c:1061
 msgid "You are currently rebasing."
 msgstr "Bạn hiện nay đang thực hiện việc “rebase” (“cải tổ”)."
 
-#: wt-status.c:1044
+#: wt-status.c:1047
 msgid "  (fix conflicts and then run \"git rebase --continue\")"
 msgstr ""
 "  (sửa các xung đột và sau đó chạy lệnh “cải tổ” \"git rebase --continue\")"
 
-#: wt-status.c:1046
+#: wt-status.c:1049
 msgid "  (use \"git rebase --skip\" to skip this patch)"
 msgstr "  (dùng lệnh “cải tổ” \"git rebase --skip\" để bỏ qua lần vá này)"
 
-#: wt-status.c:1048
+#: wt-status.c:1051
 msgid "  (use \"git rebase --abort\" to check out the original branch)"
 msgstr ""
 "  (dùng lệnh “cải tổ” \"git rebase --abort\" để check-out nhánh nguyên thủy)"
 
-#: wt-status.c:1061
+#: wt-status.c:1064
 msgid "  (all conflicts fixed: run \"git rebase --continue\")"
 msgstr ""
 "  (khi tất cả các xung đột đã sửa xong: chạy lệnh “cải tổ” \"git rebase --"
 "continue\")"
 
-#: wt-status.c:1065
+#: wt-status.c:1068
 #, c-format
 msgid ""
 "You are currently splitting a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "Bạn hiện nay đang thực hiện việc chia tách một lần chuyển giao trong khi "
 "đang “rebase” nhánh “%s” trên “%s”."
 
-#: wt-status.c:1070
+#: wt-status.c:1073
 msgid "You are currently splitting a commit during a rebase."
 msgstr ""
 "Bạn hiện tại đang cắt đôi một lần chuyển giao trong khi đang thực hiện việc "
 "rebase."
 
-#: wt-status.c:1073
+#: wt-status.c:1076
 msgid "  (Once your working directory is clean, run \"git rebase --continue\")"
 msgstr ""
 "  (Một khi thư mục làm việc của bạn đã gọn gàng, chạy lệnh “cải tổ” \"git "
 "rebase --continue\")"
 
-#: wt-status.c:1077
+#: wt-status.c:1080
 #, c-format
 msgid "You are currently editing a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "Bạn hiện nay đang thực hiện việc sửa chữa một lần chuyển giao trong khi đang "
 "rebase nhánh “%s” trên “%s”."
 
-#: wt-status.c:1082
+#: wt-status.c:1085
 msgid "You are currently editing a commit during a rebase."
 msgstr "Bạn hiện đang sửa một lần chuyển giao trong khi bạn thực hiện rebase."
 
-#: wt-status.c:1085
+#: wt-status.c:1088
 msgid "  (use \"git commit --amend\" to amend the current commit)"
 msgstr "  (dùng \"git commit --amend\" để “tu bổ” lần chuyển giao hiện tại)"
 
-#: wt-status.c:1087
+#: wt-status.c:1090
 msgid ""
 "  (use \"git rebase --continue\" once you are satisfied with your changes)"
 msgstr ""
 "  (chạy lệnh “cải tổ” \"git rebase --continue\" một khi bạn cảm thấy hài "
 "lòng về những thay đổi của mình)"
 
-#: wt-status.c:1097
+#: wt-status.c:1100
 #, c-format
 msgid "You are currently cherry-picking commit %s."
 msgstr "Bạn hiện nay đang thực hiện việc cherry-pick lần chuyển giao %s."
 
-#: wt-status.c:1102
+#: wt-status.c:1105
 msgid "  (fix conflicts and run \"git cherry-pick --continue\")"
 msgstr ""
 "  (sửa các xung đột và sau đó chạy lệnh \"git cherry-pick --continue\")"
 
-#: wt-status.c:1105
+#: wt-status.c:1108
 msgid "  (all conflicts fixed: run \"git cherry-pick --continue\")"
 msgstr ""
 "  (khi tất cả các xung đột đã sửa xong: chạy lệnh \"git cherry-pick --"
 "continue\")"
 
-#: wt-status.c:1107
+#: wt-status.c:1110
 msgid "  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)"
 msgstr "  (dùng \"git cherry-pick --abort\" để hủy bỏ thao tác cherry-pick)"
 
-#: wt-status.c:1116
+#: wt-status.c:1119
 #, c-format
 msgid "You are currently reverting commit %s."
-msgstr "Bạn hiện nay đang thực hiện thao tác revert lần chuyển giao “%s”."
+msgstr "Bạn hiện nay đang thực hiện thao tác hoàn nguyên lần chuyển giao “%s”."
 
-#: wt-status.c:1121
+#: wt-status.c:1124
 msgid "  (fix conflicts and run \"git revert --continue\")"
 msgstr "  (sửa các xung đột và sau đó chạy lệnh \"git revert --continue\")"
 
-#: wt-status.c:1124
+#: wt-status.c:1127
 msgid "  (all conflicts fixed: run \"git revert --continue\")"
 msgstr ""
 "  (khi tất cả các xung đột đã sửa xong: chạy lệnh \"git revert --continue\")"
 
-#: wt-status.c:1126
+#: wt-status.c:1129
 msgid "  (use \"git revert --abort\" to cancel the revert operation)"
-msgstr "  (dùng \"git revert --abort\" để hủy bỏ thao tác revert)"
+msgstr "  (dùng \"git revert --abort\" để hủy bỏ thao tác hoàn nguyên)"
 
-#: wt-status.c:1137
+#: wt-status.c:1140
 #, c-format
 msgid "You are currently bisecting, started from branch '%s'."
 msgstr ""
 "Bạn hiện nay đang thực hiện thao tác di chuyển nửa bước (bisect), bắt đầu từ "
 "nhánh “%s”."
 
-#: wt-status.c:1141
+#: wt-status.c:1144
 msgid "You are currently bisecting."
 msgstr "Bạn hiện tại đang thực hiện việc bisect (di chuyển nửa bước)."
 
-#: wt-status.c:1144
+#: wt-status.c:1147
 msgid "  (use \"git bisect reset\" to get back to the original branch)"
 msgstr "  (dùng \"git bisect reset\" để quay trở lại nhánh nguyên thủy)"
 
-#: wt-status.c:1321
+#: wt-status.c:1324
 msgid "On branch "
 msgstr "Trên nhánh "
 
-#: wt-status.c:1328
+#: wt-status.c:1331
 msgid "rebase in progress; onto "
 msgstr "rebase đang được thực hiện: lên trên "
 
-#: wt-status.c:1333
+#: wt-status.c:1336
 msgid "HEAD detached at "
 msgstr "HEAD được tách rời tại "
 
-#: wt-status.c:1335
+#: wt-status.c:1338
 msgid "HEAD detached from "
 msgstr "HEAD được tách rời từ "
 
-#: wt-status.c:1338
+#: wt-status.c:1341
 msgid "Not currently on any branch."
 msgstr "Hiện tại chẳng ở nhánh nào cả."
 
-#: wt-status.c:1355
+#: wt-status.c:1358
 msgid "Initial commit"
 msgstr "Lần chuyển giao khởi tạo"
 
-#: wt-status.c:1369
+#: wt-status.c:1372
 msgid "Untracked files"
 msgstr "Những tập tin chưa được theo dõi"
 
-#: wt-status.c:1371
+#: wt-status.c:1374
 msgid "Ignored files"
 msgstr "Những tập tin bị lờ đi"
 
-#: wt-status.c:1375
+#: wt-status.c:1378
 #, c-format
 msgid ""
 "It took %.2f seconds to enumerate untracked files. 'status -uno'\n"
 "may speed it up, but you have to be careful not to forget to add\n"
 "new files yourself (see 'git help status')."
 msgstr ""
 "Cần %.2f giây để liệt kê tất cả các tập tin chưa được theo dõi. “status -"
 "uno”\n"
 "có lẽ làm nó nhanh hơn, nhưng bạn phải cẩn thận đừng quên mình phải\n"
 "tự thêm các tập tin mới (xem “git help status”.."
 
-#: wt-status.c:1381
+#: wt-status.c:1384
 #, c-format
 msgid "Untracked files not listed%s"
 msgstr "Những tập tin chưa được theo dõi không được liệt kê ra %s"
 
-#: wt-status.c:1383
+#: wt-status.c:1386
 msgid " (use -u option to show untracked files)"
 msgstr " (dùng tùy chọn -u để hiển thị các tập tin chưa được theo dõi)"
 
-#: wt-status.c:1389
+#: wt-status.c:1392
 msgid "No changes"
 msgstr "Không có thay đổi nào"
 
-#: wt-status.c:1394
+#: wt-status.c:1397
 #, c-format
 msgid "no changes added to commit (use \"git add\" and/or \"git commit -a\")\n"
 msgstr ""
 "không có thay đổi nào được thêm vào để chuyển giao (dùng \"git add\" và/hoặc "
 "\"git commit -a\")\n"
 
-#: wt-status.c:1397
+#: wt-status.c:1400
 #, c-format
 msgid "no changes added to commit\n"
 msgstr "không có thay đổi nào được thêm vào để chuyển giao\n"
 
-#: wt-status.c:1400
+#: wt-status.c:1403
 #, c-format
 msgid ""
 "nothing added to commit but untracked files present (use \"git add\" to "
 "track)\n"
 msgstr ""
 "không có gì được thêm vào lần chuyển giao nhưng có những tập tin chưa được "
 "theo dõi hiện diện (dùng \"git add\" để đưa vào theo dõi)\n"
 
-#: wt-status.c:1403
+#: wt-status.c:1406
 #, c-format
 msgid "nothing added to commit but untracked files present\n"
 msgstr ""
 "không có gì được thêm vào lần chuyển giao nhưng có những tập tin chưa được "
 "theo dõi hiện diện\n"
 
-#: wt-status.c:1406
+#: wt-status.c:1409
 #, c-format
 msgid "nothing to commit (create/copy files and use \"git add\" to track)\n"
 msgstr ""
 "không có gì để chuyển giao (tạo/sao-chép các tập tin và dùng \"git add\" để "
 "đưa vào theo dõi)\n"
 
-#: wt-status.c:1409 wt-status.c:1414
+#: wt-status.c:1412 wt-status.c:1417
 #, c-format
 msgid "nothing to commit\n"
 msgstr "không có gì để chuyển giao\n"
 
-#: wt-status.c:1412
+#: wt-status.c:1415
 #, c-format
 msgid "nothing to commit (use -u to show untracked files)\n"
 msgstr ""
 "không có gì để chuyển giao (dùng -u xem các tập tin chưa được theo dõi)\n"
 
-#: wt-status.c:1416
+#: wt-status.c:1419
 #, c-format
 msgid "nothing to commit, working directory clean\n"
 msgstr "không có gì để chuyển giao, thư mục làm việc sạch sẽ\n"
 
-#: wt-status.c:1525
+#: wt-status.c:1528
 msgid "HEAD (no branch)"
 msgstr "HEAD (không nhánh)"
 
-#: wt-status.c:1531
+#: wt-status.c:1534
 msgid "Initial commit on "
 msgstr "Lần chuyển giao khởi tạo trên "
 
-#: wt-status.c:1563
+#: wt-status.c:1561
 msgid "gone"
 msgstr "đã ra đi"
 
-#: wt-status.c:1565 wt-status.c:1573
+#: wt-status.c:1563 wt-status.c:1571
 msgid "behind "
 msgstr "đằng sau "
 
-#: compat/precompose_utf8.c:55 builtin/clone.c:360
+#: compat/precompose_utf8.c:55 builtin/clone.c:345
 #, c-format
 msgid "failed to unlink '%s'"
 msgstr "gặp lỗi khi bỏ liên kết (unlink) “%s”"
 
 #: builtin/add.c:22
 msgid "git add [<options>] [--] <pathspec>..."
@@ -2018,138 +2064,142 @@
 
 #: builtin/add.c:134
 msgid "Unstaged changes after refreshing the index:"
 msgstr ""
 "Đưa ra khỏi bệ phóng các thay đổi sau khi làm tươi mới lại bảng mục lục:"
 
-#: builtin/add.c:194 builtin/rev-parse.c:785
+#: builtin/add.c:194 builtin/rev-parse.c:796
 msgid "Could not read the index"
 msgstr "Không thể đọc bảng mục lục"
 
 #: builtin/add.c:205
 #, c-format
 msgid "Could not open '%s' for writing."
 msgstr "Không thể mở “%s” để ghi."
 
 #: builtin/add.c:209
 msgid "Could not write patch"
 msgstr "Không thể ghi ra miếng vá"
 
-#: builtin/add.c:214
+#: builtin/add.c:212
+msgid "editing patch failed"
+msgstr "gặp lỗi khi sửa miếng vá"
+
+#: builtin/add.c:215
 #, c-format
 msgid "Could not stat '%s'"
 msgstr "không thể lấy thông tin thống kê về “%s”"
 
-#: builtin/add.c:216
+#: builtin/add.c:217
 msgid "Empty patch. Aborted."
 msgstr "Miếng vá trống rỗng. Nên bỏ qua."
 
-#: builtin/add.c:221
+#: builtin/add.c:222
 #, c-format
 msgid "Could not apply '%s'"
 msgstr "Không thể áp dụng miếng vá “%s”"
 
-#: builtin/add.c:231
+#: builtin/add.c:232
 msgid "The following paths are ignored by one of your .gitignore files:\n"
 msgstr ""
 "Các đường dẫn theo sau đây sẽ bị lờ đi bởi một trong các tập tin .gitignore "
 "của bạn:\n"
 
-#: builtin/add.c:248 builtin/clean.c:876 builtin/fetch.c:107 builtin/mv.c:110
-#: builtin/prune-packed.c:55 builtin/push.c:508 builtin/remote.c:1372
-#: builtin/rm.c:269
+#: builtin/add.c:249 builtin/clean.c:874 builtin/fetch.c:107 builtin/mv.c:110
+#: builtin/prune-packed.c:55 builtin/push.c:508 builtin/remote.c:1369
+#: builtin/rm.c:268
 msgid "dry run"
 msgstr "chạy thử"
 
-#: builtin/add.c:249 builtin/apply.c:4577 builtin/check-ignore.c:19
-#: builtin/commit.c:1322 builtin/count-objects.c:63 builtin/fsck.c:608
+#: builtin/add.c:250 builtin/apply.c:4580 builtin/check-ignore.c:19
+#: builtin/commit.c:1322 builtin/count-objects.c:63 builtin/fsck.c:616
 #: builtin/log.c:1617 builtin/mv.c:109 builtin/read-tree.c:114
 msgid "be verbose"
 msgstr "chi tiết"
 
-#: builtin/add.c:251
+#: builtin/add.c:252
 msgid "interactive picking"
 msgstr "sửa bằng cách tương tác"
 
-#: builtin/add.c:252 builtin/checkout.c:1126 builtin/reset.c:286
+#: builtin/add.c:253 builtin/checkout.c:1221 builtin/reset.c:286
 msgid "select hunks interactively"
 msgstr "chọn “hunks” theo kiểu tương tác"
 
-#: builtin/add.c:253
+#: builtin/add.c:254
 msgid "edit current diff and apply"
 msgstr "sửa diff hiện nay và áp dụng nó"
 
-#: builtin/add.c:254
+#: builtin/add.c:255
 msgid "allow adding otherwise ignored files"
 msgstr "cho phép thêm các tập tin bị bỏ qua khác"
 
-#: builtin/add.c:255
+#: builtin/add.c:256
 msgid "update tracked files"
 msgstr "cập nhật các tập tin được theo dõi"
 
-#: builtin/add.c:256
+#: builtin/add.c:257
 msgid "record only the fact that the path will be added later"
 msgstr "chỉ ghi lại sự việc mà đường dẫn sẽ được thêm vào sau"
 
-#: builtin/add.c:257
+#: builtin/add.c:258
 msgid "add changes from all tracked and untracked files"
 msgstr ""
 "thêm các thay đổi từ tất cả các tập tin có cũng như không được theo dõi dấu "
 "vết"
 
-#: builtin/add.c:260
+#: builtin/add.c:261
 msgid "ignore paths removed in the working tree (same as --no-all)"
 msgstr ""
 "lờ đi các đường dẫn bị gỡ bỏ trong cây thư mục làm việc (giống với --no-all)"
 
-#: builtin/add.c:262
+#: builtin/add.c:263
 msgid "don't add, only refresh the index"
 msgstr "không thêm, chỉ làm tươi mới bảng mục lục"
 
-#: builtin/add.c:263
+#: builtin/add.c:264
 msgid "just skip files which cannot be added because of errors"
 msgstr "chie bỏ qua những tập tin mà nó không thể được thêm vào bởi vì gặp lỗi"
 
-#: builtin/add.c:264
+#: builtin/add.c:265
 msgid "check if - even missing - files are ignored in dry run"
 msgstr ""
 "kiểm tra xem - thậm chí thiếu - tập tin bị bỏ qua trong quá trình chạy thử"
 
-#: builtin/add.c:286
+#: builtin/add.c:287
 #, c-format
 msgid "Use -f if you really want to add them.\n"
 msgstr "Sử dụng tùy chọn -f nếu bạn thực sự muốn thêm chúng vào.\n"
 
-#: builtin/add.c:293
+#: builtin/add.c:294
 msgid "adding files failed"
 msgstr "thêm tập tin gặp lỗi"
 
-#: builtin/add.c:329
+#: builtin/add.c:330
 msgid "-A and -u are mutually incompatible"
 msgstr "-A và -u xung khắc nhau"
 
-#: builtin/add.c:336
+#: builtin/add.c:337
 msgid "Option --ignore-missing can only be used together with --dry-run"
 msgstr "Tùy chọn --ignore-missing chỉ có thể được dùng cùng với --dry-run"
 
-#: builtin/add.c:357
+#: builtin/add.c:358
 #, c-format
 msgid "Nothing specified, nothing added.\n"
 msgstr "Không có gì được chỉ ra, không có gì được thêm vào.\n"
 
-#: builtin/add.c:358
+#: builtin/add.c:359
 #, c-format
 msgid "Maybe you wanted to say 'git add .'?\n"
 msgstr "Có lẽ ý bạn là “git add .” phải không?\n"
 
-#: builtin/add.c:363 builtin/check-ignore.c:172 builtin/clean.c:920
-#: builtin/commit.c:335 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:299
+#: builtin/add.c:364 builtin/check-ignore.c:172 builtin/clean.c:918
+#: builtin/commit.c:335 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:298
 msgid "index file corrupt"
 msgstr "tập tin ghi bảng mục lục bị hỏng"
 
-#: builtin/add.c:446 builtin/apply.c:4675 builtin/mv.c:279 builtin/rm.c:431
+#: builtin/add.c:447 builtin/apply.c:4678 builtin/mv.c:279 builtin/rm.c:430
 msgid "Unable to write new index file"
 msgstr "Không thể ghi tập tin lưu bảng mục lục mới"
 
 #: builtin/apply.c:59
 msgid "git apply [<options>] [<patch>...]"
 msgstr "git apply [<các-tùy-chọn>] [<miếng-vá>…]"
@@ -2221,425 +2271,425 @@
 "git diff header lacks filename information when removing %d leading pathname "
 "components (line %d)"
 msgstr[0] ""
 "phần đầu diff cho git  thiếu thông tin tên tập tin khi gỡ bỏ đi %d trong "
 "thành phần dẫn đầu tên của đường dẫn (dòng %d)"
 
-#: builtin/apply.c:1656
+#: builtin/apply.c:1659
 msgid "new file depends on old contents"
 msgstr "tập tin mới phụ thuộc vào nội dung cũ"
 
-#: builtin/apply.c:1658
+#: builtin/apply.c:1661
 msgid "deleted file still has contents"
 msgstr "tập tin đã xóa vẫn còn nội dung"
 
-#: builtin/apply.c:1684
+#: builtin/apply.c:1687
 #, c-format
 msgid "corrupt patch at line %d"
 msgstr "miếng vá hỏng tại dòng %d"
 
-#: builtin/apply.c:1720
+#: builtin/apply.c:1723
 #, c-format
 msgid "new file %s depends on old contents"
 msgstr "tập tin mới %s phụ thuộc vào nội dung cũ"
 
-#: builtin/apply.c:1722
+#: builtin/apply.c:1725
 #, c-format
 msgid "deleted file %s still has contents"
 msgstr "tập tin đã xóa %s vẫn còn nội dung"
 
-#: builtin/apply.c:1725
+#: builtin/apply.c:1728
 #, c-format
 msgid "** warning: file %s becomes empty but is not deleted"
 msgstr "** cảnh báo: tập tin %s trở nên trống rỗng nhưng không bị xóa"
 
-#: builtin/apply.c:1871
+#: builtin/apply.c:1874
 #, c-format
 msgid "corrupt binary patch at line %d: %.*s"
 msgstr "miếng vá định dạng nhị phân sai hỏng tại dòng %d: %.*s"
 
-#: builtin/apply.c:1900
+#: builtin/apply.c:1903
 #, c-format
 msgid "unrecognized binary patch at line %d"
 msgstr "miếng vá định dạng nhị phân không được nhận ra tại dòng %d"
 
-#: builtin/apply.c:2051
+#: builtin/apply.c:2054
 #, c-format
 msgid "patch with only garbage at line %d"
 msgstr "vá chỉ với “rác” tại dòng %d"
 
-#: builtin/apply.c:2141
+#: builtin/apply.c:2144
 #, c-format
 msgid "unable to read symlink %s"
 msgstr "không thể đọc liên kết mềm %s"
 
-#: builtin/apply.c:2145
+#: builtin/apply.c:2148
 #, c-format
 msgid "unable to open or read %s"
 msgstr "không thể mở hay đọc %s"
 
-#: builtin/apply.c:2778
+#: builtin/apply.c:2781
 #, c-format
 msgid "invalid start of line: '%c'"
 msgstr "sai khởi đầu dòng: “%c”"
 
-#: builtin/apply.c:2897
+#: builtin/apply.c:2900
 #, c-format
 msgid "Hunk #%d succeeded at %d (offset %d line)."
 msgid_plural "Hunk #%d succeeded at %d (offset %d lines)."
 msgstr[0] "Khối dữ liệu #%d thành công tại %d (offset %d dòng)."
 
-#: builtin/apply.c:2909
+#: builtin/apply.c:2912
 #, c-format
 msgid "Context reduced to (%ld/%ld) to apply fragment at %d"
 msgstr "Nội dung bị giảm xuống còn (%ld/%ld) để áp dụng mảnh dữ liệu tại %d"
 
-#: builtin/apply.c:2915
+#: builtin/apply.c:2918
 #, c-format
 msgid ""
 "while searching for:\n"
 "%.*s"
 msgstr ""
 "trong khi đang tìm kiếm cho:\n"
 "%.*s"
 
-#: builtin/apply.c:2935
+#: builtin/apply.c:2938
 #, c-format
 msgid "missing binary patch data for '%s'"
 msgstr "thiếu dữ liệu của miếng vá định dạng nhị phân cho “%s”"
 
-#: builtin/apply.c:3036
+#: builtin/apply.c:3039
 #, c-format
 msgid "binary patch does not apply to '%s'"
 msgstr "miếng vá định dạng nhị phân không được áp dụng cho “%s”"
 
-#: builtin/apply.c:3042
+#: builtin/apply.c:3045
 #, c-format
 msgid "binary patch to '%s' creates incorrect result (expecting %s, got %s)"
 msgstr ""
 "vá nhị phân cho “%s” tạo ra kết quả không chính xác (mong chờ %s, lại nhận "
 "%s)"
 
-#: builtin/apply.c:3063
+#: builtin/apply.c:3066
 #, c-format
 msgid "patch failed: %s:%ld"
 msgstr "gặp lỗi khi vá: %s:%ld"
 
-#: builtin/apply.c:3187
+#: builtin/apply.c:3190
 #, c-format
 msgid "cannot checkout %s"
 msgstr "không thể lấy ra %s"
 
-#: builtin/apply.c:3232 builtin/apply.c:3243 builtin/apply.c:3288
+#: builtin/apply.c:3235 builtin/apply.c:3246 builtin/apply.c:3291
 #, c-format
 msgid "read of %s failed"
 msgstr "đọc %s gặp lỗi"
 
-#: builtin/apply.c:3240
+#: builtin/apply.c:3243
 #, c-format
 msgid "reading from '%s' beyond a symbolic link"
 msgstr "đọc từ “%s” vượt ra ngoài liên kết mềm"
 
-#: builtin/apply.c:3268 builtin/apply.c:3490
+#: builtin/apply.c:3271 builtin/apply.c:3493
 #, c-format
 msgid "path %s has been renamed/deleted"
 msgstr "đường dẫn %s đã bị xóa hoặc đổi tên"
 
-#: builtin/apply.c:3349 builtin/apply.c:3504
+#: builtin/apply.c:3352 builtin/apply.c:3507
 #, c-format
 msgid "%s: does not exist in index"
 msgstr "%s: không tồn tại trong bảng mục lục"
 
-#: builtin/apply.c:3353 builtin/apply.c:3496 builtin/apply.c:3518
+#: builtin/apply.c:3356 builtin/apply.c:3499 builtin/apply.c:3521
 #, c-format
 msgid "%s: %s"
 msgstr "%s: %s"
 
-#: builtin/apply.c:3358 builtin/apply.c:3512
+#: builtin/apply.c:3361 builtin/apply.c:3515
 #, c-format
 msgid "%s: does not match index"
 msgstr "%s: không khớp trong mục lục"
 
-#: builtin/apply.c:3460
+#: builtin/apply.c:3463
 msgid "removal patch leaves file contents"
 msgstr "loại bỏ miếng vá để lại nội dung tập tin"
 
-#: builtin/apply.c:3529
+#: builtin/apply.c:3532
 #, c-format
 msgid "%s: wrong type"
 msgstr "%s: sai kiểu"
 
-#: builtin/apply.c:3531
+#: builtin/apply.c:3534
 #, c-format
 msgid "%s has type %o, expected %o"
 msgstr "%s có kiểu %o, cần %o"
 
-#: builtin/apply.c:3690 builtin/apply.c:3692
+#: builtin/apply.c:3693 builtin/apply.c:3695
 #, c-format
 msgid "invalid path '%s'"
 msgstr "đường dẫn không hợp lệ “%s”"
 
-#: builtin/apply.c:3747
+#: builtin/apply.c:3750
 #, c-format
 msgid "%s: already exists in index"
 msgstr "%s: đã có từ trước trong bảng mục lục"
 
-#: builtin/apply.c:3750
+#: builtin/apply.c:3753
 #, c-format
 msgid "%s: already exists in working directory"
 msgstr "%s: đã sẵn có trong thư mục đang làm việc"
 
-#: builtin/apply.c:3770
+#: builtin/apply.c:3773
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o)"
 msgstr "chế độ mới (%o) của %s không khớp với chế độ cũ (%o)"
 
-#: builtin/apply.c:3775
+#: builtin/apply.c:3778
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o) of %s"
 msgstr "chế độ mới (%o) của %s không khớp với chế độ cũ (%o) của %s"
 
-#: builtin/apply.c:3795
+#: builtin/apply.c:3798
 #, c-format
 msgid "affected file '%s' is beyond a symbolic link"
 msgstr "tập tin chịu tác động “%s” vượt ra ngoài liên kết mềm"
 
-#: builtin/apply.c:3799
+#: builtin/apply.c:3802
 #, c-format
 msgid "%s: patch does not apply"
 msgstr "%s: miếng vá không được áp dụng"
 
-#: builtin/apply.c:3813
+#: builtin/apply.c:3816
 #, c-format
 msgid "Checking patch %s..."
 msgstr "Đang kiểm tra miếng vá %s…"
 
-#: builtin/apply.c:3906 builtin/checkout.c:231 builtin/reset.c:135
+#: builtin/apply.c:3909 builtin/checkout.c:233 builtin/reset.c:135
 #, c-format
 msgid "make_cache_entry failed for path '%s'"
 msgstr "make_cache_entry gặp lỗi đối với đường dẫn “%s”"
 
-#: builtin/apply.c:4049
+#: builtin/apply.c:4052
 #, c-format
 msgid "unable to remove %s from index"
 msgstr "không thể gỡ bỏ %s từ mục lục"
 
-#: builtin/apply.c:4078
+#: builtin/apply.c:4081
 #, c-format
 msgid "corrupt patch for submodule %s"
 msgstr "miếng vá sai hỏng cho mô-đun-con %s"
 
-#: builtin/apply.c:4082
+#: builtin/apply.c:4085
 #, c-format
 msgid "unable to stat newly created file '%s'"
 msgstr "không thể lấy thống kề về tập tin %s mới hơn đã được tạo"
 
-#: builtin/apply.c:4087
+#: builtin/apply.c:4090
 #, c-format
 msgid "unable to create backing store for newly created file %s"
 msgstr "không thể tạo “kho lưu đằng sau” cho tập tin được tạo mới hơn %s"
 
-#: builtin/apply.c:4090 builtin/apply.c:4198
+#: builtin/apply.c:4093 builtin/apply.c:4201
 #, c-format
 msgid "unable to add cache entry for %s"
 msgstr "không thể thêm mục nhớ đệm cho %s"
 
-#: builtin/apply.c:4123
+#: builtin/apply.c:4126
 #, c-format
 msgid "closing file '%s'"
 msgstr "đang đóng tập tin “%s”"
 
-#: builtin/apply.c:4172
+#: builtin/apply.c:4175
 #, c-format
 msgid "unable to write file '%s' mode %o"
 msgstr "không thể ghi vào tập tin “%s” chế độ %o"
 
-#: builtin/apply.c:4259
+#: builtin/apply.c:4262
 #, c-format
 msgid "Applied patch %s cleanly."
 msgstr "Đã áp dụng miếng vá %s một cách sạch sẽ."
 
-#: builtin/apply.c:4267
+#: builtin/apply.c:4270
 msgid "internal error"
 msgstr "lỗi nội bộ"
 
-#: builtin/apply.c:4270
+#: builtin/apply.c:4273
 #, c-format
 msgid "Applying patch %%s with %d reject..."
 msgid_plural "Applying patch %%s with %d rejects..."
 msgstr[0] "Đang áp dụng miếng vá %%s với %d lần từ chối…"
 
-#: builtin/apply.c:4280
+#: builtin/apply.c:4283
 #, c-format
 msgid "truncating .rej filename to %.*s.rej"
 msgstr "đang cắt ngắn tên tập tin .rej thành %.*s.rej"
 
-#: builtin/apply.c:4301
+#: builtin/apply.c:4304
 #, c-format
 msgid "Hunk #%d applied cleanly."
 msgstr "Khối nhớ #%d được áp dụng gọn gàng."
 
-#: builtin/apply.c:4304
+#: builtin/apply.c:4307
 #, c-format
 msgid "Rejected hunk #%d."
 msgstr "đoạn dữ liệu #%d bị từ chối."
 
-#: builtin/apply.c:4394
+#: builtin/apply.c:4397
 msgid "unrecognized input"
 msgstr "không thừa nhận đầu vào"
 
-#: builtin/apply.c:4405
+#: builtin/apply.c:4408
 msgid "unable to read index file"
 msgstr "không thể đọc tập tin lưu bảng mục lục"
 
-#: builtin/apply.c:4522 builtin/apply.c:4525 builtin/clone.c:92
+#: builtin/apply.c:4525 builtin/apply.c:4528 builtin/clone.c:85
 #: builtin/fetch.c:92
 msgid "path"
 msgstr "đường-dẫn"
 
-#: builtin/apply.c:4523
+#: builtin/apply.c:4526
 msgid "don't apply changes matching the given path"
 msgstr "không áp dụng các thay đổi khớp với đường dẫn đã cho"
 
-#: builtin/apply.c:4526
+#: builtin/apply.c:4529
 msgid "apply changes matching the given path"
 msgstr "áp dụng các thay đổi khớp với đường dẫn đã cho"
 
-#: builtin/apply.c:4528
+#: builtin/apply.c:4531
 msgid "num"
 msgstr "số"
 
-#: builtin/apply.c:4529
+#: builtin/apply.c:4532
 msgid "remove <num> leading slashes from traditional diff paths"
 msgstr "gỡ bỏ <số> dấu gạch chéo dẫn đầu từ đường dẫn diff cổ điển"
 
-#: builtin/apply.c:4532
+#: builtin/apply.c:4535
 msgid "ignore additions made by the patch"
 msgstr "lờ đi phần bổ xung được tạo ra bởi miếng vá"
 
-#: builtin/apply.c:4534
+#: builtin/apply.c:4537
 msgid "instead of applying the patch, output diffstat for the input"
 msgstr ""
 "thay vì áp dụng một miếng vá, kết xuất kết quả từ lệnh diffstat cho đầu ra"
 
-#: builtin/apply.c:4538
+#: builtin/apply.c:4541
 msgid "show number of added and deleted lines in decimal notation"
 msgstr ""
 "hiển thị số lượng các dòng được thêm vào và xóa đi theo ký hiệu thập phân"
 
-#: builtin/apply.c:4540
+#: builtin/apply.c:4543
 msgid "instead of applying the patch, output a summary for the input"
 msgstr "thay vì áp dụng một miếng vá, kết xuất kết quả cho đầu vào"
 
-#: builtin/apply.c:4542
+#: builtin/apply.c:4545
 msgid "instead of applying the patch, see if the patch is applicable"
 msgstr "thay vì áp dụng miếng vá, hãy xem xem miếng vá có thích hợp không"
 
-#: builtin/apply.c:4544
+#: builtin/apply.c:4547
 msgid "make sure the patch is applicable to the current index"
 msgstr "hãy chắc chắn là miếng vá thích hợp với bảng mục lục hiện hành"
 
-#: builtin/apply.c:4546
+#: builtin/apply.c:4549
 msgid "apply a patch without touching the working tree"
 msgstr "áp dụng một miếng vá mà không động chạm đến cây làm việc"
 
-#: builtin/apply.c:4548
+#: builtin/apply.c:4551
 msgid "accept a patch that touches outside the working area"
 msgstr "chấp nhận một miếng vá mà không động chạm đến cây làm việc"
 
-#: builtin/apply.c:4550
+#: builtin/apply.c:4553
 msgid "also apply the patch (use with --stat/--summary/--check)"
 msgstr ""
 "đồng thời áp dụng miếng vá (dùng với tùy chọn --stat/--summary/--check)"
 
-#: builtin/apply.c:4552
+#: builtin/apply.c:4555
 msgid "attempt three-way merge if a patch does not apply"
 msgstr "thử hòa trộn kiểu three-way nếu việc vá không thể thực hiện được"
 
-#: builtin/apply.c:4554
+#: builtin/apply.c:4557
 msgid "build a temporary index based on embedded index information"
 msgstr ""
 "xây dựng bảng mục lục tạm thời trên cơ sở thông tin bảng mục lục được nhúng"
 
-#: builtin/apply.c:4556 builtin/checkout-index.c:198 builtin/ls-files.c:412
+#: builtin/apply.c:4559 builtin/checkout-index.c:198 builtin/ls-files.c:412
 msgid "paths are separated with NUL character"
 msgstr "các đường dẫn bị ngăn cách bởi ký tự NULL"
 
-#: builtin/apply.c:4559
+#: builtin/apply.c:4562
 msgid "ensure at least <n> lines of context match"
 msgstr "đảm bảo rằng có ít nhất <n> dòng nội dung khớp"
 
-#: builtin/apply.c:4560
+#: builtin/apply.c:4563
 msgid "action"
 msgstr "hành động"
 
-#: builtin/apply.c:4561
+#: builtin/apply.c:4564
 msgid "detect new or modified lines that have whitespace errors"
 msgstr "tìm thấy một dòng mới hoặc bị sửa đổi mà nó có lỗi do khoảng trắng"
 
-#: builtin/apply.c:4564 builtin/apply.c:4567
+#: builtin/apply.c:4567 builtin/apply.c:4570
 msgid "ignore changes in whitespace when finding context"
 msgstr "lờ đi sự thay đổi do khoảng trắng gây ra khi quét nội dung"
 
-#: builtin/apply.c:4570
+#: builtin/apply.c:4573
 msgid "apply the patch in reverse"
 msgstr "áp dụng miếng vá theo chiều ngược"
 
-#: builtin/apply.c:4572
+#: builtin/apply.c:4575
 msgid "don't expect at least one line of context"
 msgstr "đừng hy vọng có ít nhất một dòng nội dung"
 
-#: builtin/apply.c:4574
+#: builtin/apply.c:4577
 msgid "leave the rejected hunks in corresponding *.rej files"
 msgstr "để lại khối dữ liệu bị từ chối trong các tập tin *.rej tương ứng"
 
-#: builtin/apply.c:4576
+#: builtin/apply.c:4579
 msgid "allow overlapping hunks"
 msgstr "cho phép chồng khối nhớ"
 
-#: builtin/apply.c:4579
+#: builtin/apply.c:4582
 msgid "tolerate incorrectly detected missing new-line at the end of file"
 msgstr ""
 "đã dò tìm thấy dung sai không chính xác thiếu dòng mới tại cuối tập tin"
 
-#: builtin/apply.c:4582
+#: builtin/apply.c:4585
 msgid "do not trust the line counts in the hunk headers"
 msgstr "không tin số lượng dòng trong phần đầu khối dữ liệu"
 
-#: builtin/apply.c:4584
+#: builtin/apply.c:4587
 msgid "root"
 msgstr "root"
 
-#: builtin/apply.c:4585
+#: builtin/apply.c:4588
 msgid "prepend <root> to all filenames"
 msgstr "treo thêm <root> vào tất cả các tên tập tin"
 
-#: builtin/apply.c:4607
+#: builtin/apply.c:4610
 msgid "--3way outside a repository"
 msgstr "--3way ở ngoài một kho chứa"
 
-#: builtin/apply.c:4615
+#: builtin/apply.c:4618
 msgid "--index outside a repository"
 msgstr "--index ở ngoài một kho chứa"
 
-#: builtin/apply.c:4618
+#: builtin/apply.c:4621
 msgid "--cached outside a repository"
 msgstr "--cached ở ngoài một kho chứa"
 
-#: builtin/apply.c:4637
+#: builtin/apply.c:4640
 #, c-format
 msgid "can't open patch '%s'"
 msgstr "không thể mở miếng vá “%s”"
 
-#: builtin/apply.c:4651
+#: builtin/apply.c:4654
 #, c-format
 msgid "squelched %d whitespace error"
 msgid_plural "squelched %d whitespace errors"
 msgstr[0] "đã chấm dứt %d lỗi khoảng trắng"
 
-#: builtin/apply.c:4657 builtin/apply.c:4667
+#: builtin/apply.c:4660 builtin/apply.c:4670
 #, c-format
 msgid "%d line adds whitespace errors."
 msgid_plural "%d lines add whitespace errors."
 msgstr[0] "%d dòng thêm khoảng trắng lỗi."
 
 #: builtin/archive.c:17
@@ -2687,17 +2737,17 @@
 
 #: builtin/bisect--helper.c:19
 msgid "update BISECT_HEAD instead of checking out the current commit"
 msgstr ""
 "cập nhật BISECT_HEAD thay vì lấy ra (checking out) lần chuyển giao hiện hành"
 
-#: builtin/blame.c:30
-msgid "git blame [<options>] [<rev-opts>] [<rev>] [--] file"
-msgstr "git blame [<các-tùy-chọn>] [rev-opts] [rev] [--] tập-tin"
+#: builtin/blame.c:31
+msgid "git blame [<options>] [<rev-opts>] [<rev>] [--] <file>"
+msgstr "git blame [<các-tùy-chọn>] [<rev-opts>] [<rev>] [--] <tập-tin>"
 
-#: builtin/blame.c:35
+#: builtin/blame.c:36
 msgid "<rev-opts> are documented in git-rev-list(1)"
 msgstr "<rev-opts> được mô tả trong tài liệu git-rev-list(1)"
 
 #: builtin/blame.c:2500
 msgid "Show blame entries as we find them, incrementally"
 msgstr "Hiển thị các mục “blame” như là chúng ta thấy chúng, tăng dần"
@@ -2815,468 +2865,484 @@
 msgstr "git branch [<các-tùy-chọn>] [-r] (-d | -D) <tên-nhánh> …"
 
 #: builtin/branch.c:27
 msgid "git branch [<options>] (-m | -M) [<old-branch>] <new-branch>"
 msgstr "git branch [<các-tùy-chọn>] (-m | -M) [<nhánh-cũ>] <nhánh-mới>"
 
-#: builtin/branch.c:152
+#: builtin/branch.c:150
 #, c-format
 msgid ""
 "deleting branch '%s' that has been merged to\n"
 "         '%s', but not yet merged to HEAD."
 msgstr ""
 "đang xóa nhánh “%s” mà nó lại đã được hòa trộn vào\n"
 "         “%s”, nhưng vẫn chưa được hòa trộn vào HEAD."
 
-#: builtin/branch.c:156
+#: builtin/branch.c:154
 #, c-format
 msgid ""
 "not deleting branch '%s' that is not yet merged to\n"
 "         '%s', even though it is merged to HEAD."
 msgstr ""
 "không xóa nhánh “%s” cái mà chưa được hòa trộn vào\n"
 "         “%s”, cho dù là nó đã được hòa trộn vào HEAD."
 
-#: builtin/branch.c:170
+#: builtin/branch.c:168
 #, c-format
 msgid "Couldn't look up commit object for '%s'"
 msgstr "Không thể tìm kiếm đối tượng chuyển giao cho “%s”"
 
-#: builtin/branch.c:174
+#: builtin/branch.c:172
 #, c-format
 msgid ""
 "The branch '%s' is not fully merged.\n"
 "If you are sure you want to delete it, run 'git branch -D %s'."
 msgstr ""
 "Nhánh “%s” không được trộn một cách đầy đủ.\n"
 "Nếu bạn thực sự muốn xóa nó, thì chạy lệnh “git branch -D %s”."
 
-#: builtin/branch.c:187
+#: builtin/branch.c:185
 msgid "Update of config-file failed"
 msgstr "Cập nhật tập tin cấu hình gặp lỗi"
 
-#: builtin/branch.c:215
+#: builtin/branch.c:213
 msgid "cannot use -a with -d"
 msgstr "không thể dùng tùy chọn -a với -d"
 
-#: builtin/branch.c:221
+#: builtin/branch.c:219
 msgid "Couldn't look up commit object for HEAD"
 msgstr "Không thể tìm kiếm đối tượng chuyển giao cho HEAD"
 
-#: builtin/branch.c:229
+#: builtin/branch.c:227
 #, c-format
 msgid "Cannot delete the branch '%s' which you are currently on."
 msgstr "Không thể xóa nhánh “%s” cái mà bạn hiện nay đang ở."
 
-#: builtin/branch.c:245
+#: builtin/branch.c:243
 #, c-format
-msgid "remote branch '%s' not found."
-msgstr "không tìm thấy nhánh máy chủ “%s”."
+msgid "remote-tracking branch '%s' not found."
+msgstr "không tìm thấy nhánh theo dõi máy chủ “%s”."
 
-#: builtin/branch.c:246
+#: builtin/branch.c:244
 #, c-format
 msgid "branch '%s' not found."
 msgstr "không tìm thấy nhánh “%s”."
 
-#: builtin/branch.c:260
+#: builtin/branch.c:258
 #, c-format
-msgid "Error deleting remote branch '%s'"
-msgstr "Gặp lỗi khi đang xóa nhánh trên máy chủ “%s”"
+msgid "Error deleting remote-tracking branch '%s'"
+msgstr "Gặp lỗi khi đang xóa nhánh theo dõi máy chủ “%s”"
 
-#: builtin/branch.c:261
+#: builtin/branch.c:259
 #, c-format
 msgid "Error deleting branch '%s'"
 msgstr "Gặp lỗi khi xóa bỏ nhánh “%s”"
 
-#: builtin/branch.c:268
+#: builtin/branch.c:266
 #, c-format
-msgid "Deleted remote branch %s (was %s).\n"
-msgstr "Nhánh trên máy chủ \"%s\" đã bị xóa (từng là %s).\n"
+msgid "Deleted remote-tracking branch %s (was %s).\n"
+msgstr "Đã xóa nhánh theo dõi máy chủ \"%s\" (từng là %s).\n"
 
-#: builtin/branch.c:269
+#: builtin/branch.c:267
 #, c-format
 msgid "Deleted branch %s (was %s).\n"
 msgstr "Nhánh “%s” đã bị xóa (từng là %s)\n"
 
-#: builtin/branch.c:370
+#: builtin/branch.c:368
 #, c-format
 msgid "branch '%s' does not point at a commit"
 msgstr "nhánh “%s” không chỉ đến một lần chuyển giao nào cả"
 
-#: builtin/branch.c:459
+#: builtin/branch.c:451
 #, c-format
 msgid "[%s: gone]"
 msgstr "[%s: đã ra đi]"
 
-#: builtin/branch.c:464
+#: builtin/branch.c:456
 #, c-format
 msgid "[%s]"
 msgstr "[%s]"
 
-#: builtin/branch.c:469
+#: builtin/branch.c:461
 #, c-format
 msgid "[%s: behind %d]"
 msgstr "[%s: đứng sau %d]"
 
-#: builtin/branch.c:471
+#: builtin/branch.c:463
 #, c-format
 msgid "[behind %d]"
 msgstr "[đằng sau %d]"
 
-#: builtin/branch.c:475
+#: builtin/branch.c:467
 #, c-format
 msgid "[%s: ahead %d]"
 msgstr "[%s: phía trước %d]"
 
-#: builtin/branch.c:477
+#: builtin/branch.c:469
 #, c-format
 msgid "[ahead %d]"
 msgstr "[phía trước %d]"
 
-#: builtin/branch.c:480
+#: builtin/branch.c:472
 #, c-format
 msgid "[%s: ahead %d, behind %d]"
 msgstr "[%s: trước %d, sau %d]"
 
-#: builtin/branch.c:483
+#: builtin/branch.c:475
 #, c-format
 msgid "[ahead %d, behind %d]"
 msgstr "[trước %d, sau %d]"
 
-#: builtin/branch.c:496
+#: builtin/branch.c:488
 msgid " **** invalid ref ****"
 msgstr " **** tham chiếu không hợp lệ ****"
 
-#: builtin/branch.c:587
+#: builtin/branch.c:579
 #, c-format
 msgid "(no branch, rebasing %s)"
 msgstr "(không nhánh, đang cải tổ %s)"
 
-#: builtin/branch.c:590
+#: builtin/branch.c:582
 #, c-format
 msgid "(no branch, bisect started on %s)"
 msgstr "(không nhánh, di chuyển nửa bước được bắt đầu tại %s)"
 
-#: builtin/branch.c:596
+#: builtin/branch.c:588
 #, c-format
 msgid "(HEAD detached at %s)"
 msgstr "(HEAD được tách rời tại %s)"
 
-#: builtin/branch.c:599
+#: builtin/branch.c:591
 #, c-format
 msgid "(HEAD detached from %s)"
 msgstr "(HEAD được tách rời từ %s)"
 
-#: builtin/branch.c:603
+#: builtin/branch.c:595
 msgid "(no branch)"
 msgstr "(không nhánh)"
 
-#: builtin/branch.c:650
+#: builtin/branch.c:642
 #, c-format
 msgid "object '%s' does not point to a commit"
 msgstr "đối tượng “%s” không chỉ đến một lần chuyển giao nào cả"
 
-#: builtin/branch.c:698
+#: builtin/branch.c:690
 msgid "some refs could not be read"
 msgstr "một số tham chiếu đã không thể đọc được"
 
-#: builtin/branch.c:711
+#: builtin/branch.c:703
 msgid "cannot rename the current branch while not on any."
 msgstr "không thể đổi tên nhánh hiện hành trong khi nó chẳng ở đâu cả."
 
-#: builtin/branch.c:721
+#: builtin/branch.c:713
 #, c-format
 msgid "Invalid branch name: '%s'"
 msgstr "Tên nhánh không hợp lệ: “%s”"
 
-#: builtin/branch.c:736
+#: builtin/branch.c:728
 msgid "Branch rename failed"
 msgstr "Gặp lỗi khi đổi tên nhánh"
 
-#: builtin/branch.c:740
+#: builtin/branch.c:732
 #, c-format
 msgid "Renamed a misnamed branch '%s' away"
 msgstr "Đã đổi tên nhánh khuyết danh “%s” đi"
 
-#: builtin/branch.c:744
+#: builtin/branch.c:736
 #, c-format
 msgid "Branch renamed to %s, but HEAD is not updated!"
 msgstr "Nhánh bị đổi tên thành %s, nhưng HEAD lại không được cập nhật!"
 
-#: builtin/branch.c:751
+#: builtin/branch.c:743
 msgid "Branch is renamed, but update of config-file failed"
 msgstr "Nhánh bị đổi tên, nhưng cập nhật tập tin cấu hình gặp lỗi"
 
-#: builtin/branch.c:766
+#: builtin/branch.c:758
 #, c-format
 msgid "malformed object name %s"
 msgstr "tên đối tượng dị hình %s"
 
-#: builtin/branch.c:790
+#: builtin/branch.c:780
 #, c-format
 msgid "could not write branch description template: %s"
 msgstr "không thể ghi vào mẫu mô tả nhánh: %s"
 
-#: builtin/branch.c:820
+#: builtin/branch.c:810
 msgid "Generic options"
 msgstr "Tùy chọn chung"
 
-#: builtin/branch.c:822
+#: builtin/branch.c:812
 msgid "show hash and subject, give twice for upstream branch"
 msgstr "hiển thị mã băm và chủ đề, đưa ra hai lần cho nhánh thượng nguồn"
 
-#: builtin/branch.c:823
+#: builtin/branch.c:813
 msgid "suppress informational messages"
 msgstr "không xuất các thông tin"
 
-#: builtin/branch.c:824
+#: builtin/branch.c:814
 msgid "set up tracking mode (see git-pull(1))"
 msgstr "cài đặt chế độ theo dõi (xem git-pull(1))"
 
-#: builtin/branch.c:826
+#: builtin/branch.c:816
 msgid "change upstream info"
 msgstr "thay đổi thông tin thượng nguồn"
 
-#: builtin/branch.c:830
+#: builtin/branch.c:820
 msgid "use colored output"
 msgstr "tô màu kết xuất"
 
-#: builtin/branch.c:831
+#: builtin/branch.c:821
 msgid "act on remote-tracking branches"
 msgstr "thao tác trên nhánh “remote-tracking”"
 
-#: builtin/branch.c:834 builtin/branch.c:840 builtin/branch.c:861
-#: builtin/branch.c:867 builtin/commit.c:1582 builtin/commit.c:1583
-#: builtin/commit.c:1584 builtin/commit.c:1585 builtin/tag.c:616
+#: builtin/branch.c:824 builtin/branch.c:830 builtin/branch.c:851
+#: builtin/branch.c:857 builtin/commit.c:1581 builtin/commit.c:1582
+#: builtin/commit.c:1583 builtin/commit.c:1584 builtin/tag.c:616
 #: builtin/tag.c:622
 msgid "commit"
 msgstr "lần_chuyển_giao"
 
-#: builtin/branch.c:835 builtin/branch.c:841
+#: builtin/branch.c:825 builtin/branch.c:831
 msgid "print only branches that contain the commit"
 msgstr "chỉ hiển thị những nhánh mà nó chứa lần chuyển giao"
 
-#: builtin/branch.c:847
+#: builtin/branch.c:837
 msgid "Specific git-branch actions:"
 msgstr "Hành động git-branch:"
 
-#: builtin/branch.c:848
+#: builtin/branch.c:838
 msgid "list both remote-tracking and local branches"
 msgstr "liệt kê cả nhánh “remote-tracking” và nội bộ"
 
-#: builtin/branch.c:850
+#: builtin/branch.c:840
 msgid "delete fully merged branch"
 msgstr "xóa một toàn bộ nhánh đã hòa trộn"
 
-#: builtin/branch.c:851
+#: builtin/branch.c:841
 msgid "delete branch (even if not merged)"
 msgstr "xóa nhánh (cho dù là chưa được hòa trộn)"
 
-#: builtin/branch.c:852
+#: builtin/branch.c:842
 msgid "move/rename a branch and its reflog"
 msgstr "di chuyển hay đổi tên một nhánh và reflog của nó"
 
-#: builtin/branch.c:853
+#: builtin/branch.c:843
 msgid "move/rename a branch, even if target exists"
 msgstr "di chuyển hoặc đổi tên một nhánh ngay cả khi đích đã có sẵn"
 
-#: builtin/branch.c:854
+#: builtin/branch.c:844
 msgid "list branch names"
 msgstr "liệt kê các tên nhánh"
 
-#: builtin/branch.c:855
+#: builtin/branch.c:845
 msgid "create the branch's reflog"
 msgstr "tạo reflog của nhánh"
 
-#: builtin/branch.c:857
+#: builtin/branch.c:847
 msgid "edit the description for the branch"
 msgstr "sửa mô tả cho nhánh"
 
-#: builtin/branch.c:858
+#: builtin/branch.c:848
 msgid "force creation, move/rename, deletion"
 msgstr "buộc tạo, di chuyển/đổi tên, xóa"
 
-#: builtin/branch.c:861
+#: builtin/branch.c:851
 msgid "print only not merged branches"
 msgstr "chỉ hiển thị các nhánh chưa được hòa trộn"
 
-#: builtin/branch.c:867
+#: builtin/branch.c:857
 msgid "print only merged branches"
 msgstr "chỉ hiển thị các nhánh đã hòa trộn"
 
-#: builtin/branch.c:871
+#: builtin/branch.c:861
 msgid "list branches in columns"
 msgstr "liệt kê các nhánh trong các cột"
 
-#: builtin/branch.c:884
+#: builtin/branch.c:874
 msgid "Failed to resolve HEAD as a valid ref."
 msgstr "Gặp lỗi khi phân giải HEAD như là một tham chiếu hợp lệ."
 
-#: builtin/branch.c:888 builtin/clone.c:637
+#: builtin/branch.c:878 builtin/clone.c:622
 msgid "HEAD not found below refs/heads!"
 msgstr "không tìm thấy HEAD ở dưới refs/heads!"
 
-#: builtin/branch.c:910
+#: builtin/branch.c:900
 msgid "--column and --verbose are incompatible"
 msgstr "tùy chọn --column và --verbose xung khắc nhau"
 
-#: builtin/branch.c:921 builtin/branch.c:960
+#: builtin/branch.c:911 builtin/branch.c:950
 msgid "branch name required"
 msgstr "cần chỉ ra tên nhánh"
 
-#: builtin/branch.c:936
+#: builtin/branch.c:926
 msgid "Cannot give description to detached HEAD"
 msgstr "Không thể đưa ra mô tả HEAD đã tách rời"
 
-#: builtin/branch.c:941
+#: builtin/branch.c:931
 msgid "cannot edit description of more than one branch"
 msgstr "không thể sửa mô tả cho nhiều hơn một nhánh"
 
-#: builtin/branch.c:948
+#: builtin/branch.c:938
 #, c-format
 msgid "No commit on branch '%s' yet."
 msgstr "Vẫn chưa chuyển giao trên nhánh “%s”."
 
-#: builtin/branch.c:951
+#: builtin/branch.c:941
 #, c-format
 msgid "No branch named '%s'."
 msgstr "Không có nhánh nào có tên “%s”."
 
-#: builtin/branch.c:966
+#: builtin/branch.c:956
 msgid "too many branches for a rename operation"
 msgstr "quá nhiều nhánh dành cho thao tác đổi tên"
 
-#: builtin/branch.c:971
+#: builtin/branch.c:961
 msgid "too many branches to set new upstream"
 msgstr "quá nhiều nhánh được đặt cho thượng nguồn mới"
 
-#: builtin/branch.c:975
+#: builtin/branch.c:965
 #, c-format
 msgid ""
 "could not set upstream of HEAD to %s when it does not point to any branch."
 msgstr ""
 "không thể đặt thượng nguồn của HEAD thành %s khi mà nó chẳng chỉ đến nhánh "
 "nào cả."
 
-#: builtin/branch.c:978 builtin/branch.c:1000 builtin/branch.c:1021
+#: builtin/branch.c:968 builtin/branch.c:990 builtin/branch.c:1011
 #, c-format
 msgid "no such branch '%s'"
 msgstr "không có nhánh nào như thế “%s”"
 
-#: builtin/branch.c:982
+#: builtin/branch.c:972
 #, c-format
 msgid "branch '%s' does not exist"
 msgstr "chưa có nhánh “%s”"
 
-#: builtin/branch.c:994
+#: builtin/branch.c:984
 msgid "too many branches to unset upstream"
 msgstr "quá nhiều nhánh để bỏ đặt thượng nguồn"
 
-#: builtin/branch.c:998
+#: builtin/branch.c:988
 msgid "could not unset upstream of HEAD when it does not point to any branch."
 msgstr "không thể bỏ đặt thượng nguồn của HEAD không chỉ đến một nhánh nào cả."
 
-#: builtin/branch.c:1004
+#: builtin/branch.c:994
 #, c-format
 msgid "Branch '%s' has no upstream information"
 msgstr "Nhánh “%s” không có thông tin thượng nguồn"
 
-#: builtin/branch.c:1018
+#: builtin/branch.c:1008
 msgid "it does not make sense to create 'HEAD' manually"
 msgstr "không hợp lý khi tạo “HEAD” thủ công"
 
-#: builtin/branch.c:1024
+#: builtin/branch.c:1014
 msgid "-a and -r options to 'git branch' do not make sense with a branch name"
 msgstr ""
 "hai tùy chọn -a và -r áp dụng cho lệnh “git branch” không hợp lý đối với tên "
 "nhánh"
 
-#: builtin/branch.c:1027
+#: builtin/branch.c:1017
 #, c-format
 msgid ""
 "The --set-upstream flag is deprecated and will be removed. Consider using --"
 "track or --set-upstream-to\n"
 msgstr ""
 "Cờ --set-upstream đã lạc hậu và sẽ bị xóa bỏ. Nên dùng --track hoặc --set-"
 "upstream-to\n"
 
-#: builtin/branch.c:1044
+#: builtin/branch.c:1034
 #, c-format
 msgid ""
 "\n"
 "If you wanted to make '%s' track '%s', do this:\n"
 "\n"
 msgstr ""
 "\n"
 "Nếu bạn muốn “%s” theo dõi “%s”, thực hiện lệnh sau:\n"
 "\n"
 
-#: builtin/branch.c:1045
+#: builtin/branch.c:1035
 #, c-format
 msgid "    git branch -d %s\n"
 msgstr "    git branch -d %s\n"
 
-#: builtin/branch.c:1046
+#: builtin/branch.c:1036
 #, c-format
 msgid "    git branch --set-upstream-to %s\n"
 msgstr "    git branch --set-upstream-to %s\n"
 
-#: builtin/bundle.c:47
+#: builtin/bundle.c:51
 #, c-format
 msgid "%s is okay\n"
 msgstr "“%s” tốt\n"
 
-#: builtin/bundle.c:56
+#: builtin/bundle.c:64
 msgid "Need a repository to create a bundle."
 msgstr "Cần một kho chứa để có thể tạo một bundle."
 
-#: builtin/bundle.c:60
+#: builtin/bundle.c:68
 msgid "Need a repository to unbundle."
 msgstr "Cần một kho chứa để có thể giải nén một bundle."
 
-#: builtin/cat-file.c:326
-msgid "git cat-file (-t | -s | -e | -p | <type> | --textconv) <object>"
-msgstr "git cat-file (-t | -s | -e | -p | <kiểu> | --textconv) <đối_tượng>"
-
-#: builtin/cat-file.c:327
-msgid "git cat-file (--batch | --batch-check) < <list-of-objects>"
-msgstr "git cat-file (--batch | --batch-check) < <danh-sách-đối-tượng>"
+#: builtin/cat-file.c:369
+msgid ""
+"git cat-file (-t [--allow-unknown-type]|-s [--allow-unknown-type]|-e|-p|"
+"<type>|--textconv) <object>"
+msgstr ""
+"git cat-file (-t [--allow-unknown-type]|-s [--allow-unknown-type]|-e|-p|"
+"<kiểu>|--textconv) <đối_tượng>"
+
+#: builtin/cat-file.c:370
+msgid ""
+"git cat-file (--batch | --batch-check) [--follow-symlinks] < <list-of-"
+"objects>"
+msgstr ""
+"git cat-file (--batch | --batch-check) [--follow-symlinks] < <danh-sách-đối-"
+"tượng>"
 
-#: builtin/cat-file.c:364
+#: builtin/cat-file.c:407
 msgid "<type> can be one of: blob, tree, commit, tag"
 msgstr "<kiểu> là một trong số: blob, tree, commit hoặc tag"
 
-#: builtin/cat-file.c:365
+#: builtin/cat-file.c:408
 msgid "show object type"
 msgstr "hiển thị kiểu đối tượng"
 
-#: builtin/cat-file.c:366
+#: builtin/cat-file.c:409
 msgid "show object size"
 msgstr "hiển thị kích thước đối tượng"
 
-#: builtin/cat-file.c:368
+#: builtin/cat-file.c:411
 msgid "exit with zero when there's no error"
 msgstr "thoát với 0 khi không có lỗi"
 
-#: builtin/cat-file.c:369
+#: builtin/cat-file.c:412
 msgid "pretty-print object's content"
 msgstr "in nội dung đối tượng dạng dễ đọc"
 
-#: builtin/cat-file.c:371
+#: builtin/cat-file.c:414
 msgid "for blob objects, run textconv on object's content"
 msgstr "với đối tượng blob, chạy lệnh textconv trên nội dung của đối tượng"
 
-#: builtin/cat-file.c:373
+#: builtin/cat-file.c:416
+msgid "allow -s and -t to work with broken/corrupt objects"
+msgstr "cho phép -s và -t để làm việc với các đối tượng sai/hỏng"
+
+#: builtin/cat-file.c:418
 msgid "show info and content of objects fed from the standard input"
 msgstr ""
 "hiển thị thông tin và nội dung của các đối tượng lấy từ đầu vào tiêu chuẩn"
 
-#: builtin/cat-file.c:376
+#: builtin/cat-file.c:421
 msgid "show info about objects fed from the standard input"
 msgstr "hiển thị các thông tin về đối tượng fed  từ đầu vào tiêu chuẩn"
 
+#: builtin/cat-file.c:424
+msgid "follow in-tree symlinks (used with --batch or --batch-check)"
+msgstr "theo liên kết mềm trong-cây (được dùng với --batch hay --batch-check)"
+
 #: builtin/check-attr.c:11
 msgid "git check-attr [-a | --all | <attr>...] [--] <pathname>..."
 msgstr "git check-attr [-a | --all | <attr>…] [--] tên-đường-dẫn…"
 
 #: builtin/check-attr.c:12
 msgid "git check-attr --stdin [-z] [-a | --all | <attr>...] < <list-of-paths>"
@@ -3288,21 +3354,21 @@
 msgstr "báo cáo tất cả các thuộc tính đặt trên tập tin"
 
 #: builtin/check-attr.c:20
 msgid "use .gitattributes only from the index"
 msgstr "chỉ dùng .gitattributes từ bảng mục lục"
 
-#: builtin/check-attr.c:21 builtin/check-ignore.c:22 builtin/hash-object.c:98
+#: builtin/check-attr.c:21 builtin/check-ignore.c:22 builtin/hash-object.c:96
 msgid "read file names from stdin"
 msgstr "đọc tên tập tin từ đầu vào tiêu chuẩn"
 
 #: builtin/check-attr.c:23 builtin/check-ignore.c:24
 msgid "terminate input and output records by a NUL character"
 msgstr "chấm dứt các bản ghi vào và ra bằng ký tự NULL"
 
-#: builtin/check-ignore.c:18 builtin/checkout.c:1107 builtin/gc.c:274
+#: builtin/check-ignore.c:18 builtin/checkout.c:1202 builtin/gc.c:279
 msgid "suppress progress reporting"
 msgstr "chặn các báo cáo tiến trình hoạt động"
 
 #: builtin/check-ignore.c:26
 msgid "show non-matching input paths"
 msgstr "hiển thị những đường dẫn đầu vào không khớp với mẫu"
@@ -3394,120 +3460,120 @@
 msgstr "khi tạo các tập tin, nối thêm <chuỗi>"
 
 #: builtin/checkout-index.c:208
 msgid "copy out the files from named stage"
 msgstr "sao chép ra các tập tin từ bệ phóng có tên"
 
-#: builtin/checkout.c:25
+#: builtin/checkout.c:24
 msgid "git checkout [<options>] <branch>"
 msgstr "git checkout [<các-tùy-chọn>] <nhánh>"
 
-#: builtin/checkout.c:26
+#: builtin/checkout.c:25
 msgid "git checkout [<options>] [<branch>] -- <file>..."
 msgstr "git checkout [<các-tùy-chọn>] [<nhánh>] -- <tập-tin>…"
 
-#: builtin/checkout.c:132 builtin/checkout.c:165
+#: builtin/checkout.c:134 builtin/checkout.c:167
 #, c-format
 msgid "path '%s' does not have our version"
 msgstr "đường dẫn “%s” không có các phiên bản của chúng ta"
 
-#: builtin/checkout.c:134 builtin/checkout.c:167
+#: builtin/checkout.c:136 builtin/checkout.c:169
 #, c-format
 msgid "path '%s' does not have their version"
 msgstr "đường dẫn “%s” không có các phiên bản của chúng"
 
-#: builtin/checkout.c:150
+#: builtin/checkout.c:152
 #, c-format
 msgid "path '%s' does not have all necessary versions"
 msgstr "đường dẫn “%s” không có tất cả các phiên bản cần thiết"
 
-#: builtin/checkout.c:194
+#: builtin/checkout.c:196
 #, c-format
 msgid "path '%s' does not have necessary versions"
 msgstr "đường dẫn “%s” không có các phiên bản cần thiết"
 
-#: builtin/checkout.c:211
+#: builtin/checkout.c:213
 #, c-format
 msgid "path '%s': cannot merge"
 msgstr "đường dẫn “%s”: không thể hòa trộn"
 
-#: builtin/checkout.c:228
+#: builtin/checkout.c:230
 #, c-format
 msgid "Unable to add merge result for '%s'"
 msgstr "Không thể thêm kết quả hòa trộn cho “%s”"
 
-#: builtin/checkout.c:249 builtin/checkout.c:252 builtin/checkout.c:255
-#: builtin/checkout.c:258
+#: builtin/checkout.c:251 builtin/checkout.c:254 builtin/checkout.c:257
+#: builtin/checkout.c:260
 #, c-format
 msgid "'%s' cannot be used with updating paths"
 msgstr "không được dùng “%s” với các đường dẫn cập nhật"
 
-#: builtin/checkout.c:261 builtin/checkout.c:264
+#: builtin/checkout.c:263 builtin/checkout.c:266
 #, c-format
 msgid "'%s' cannot be used with %s"
 msgstr "không được dùng “%s” với %s"
 
-#: builtin/checkout.c:267
+#: builtin/checkout.c:269
 #, c-format
 msgid "Cannot update paths and switch to branch '%s' at the same time."
 msgstr ""
 "Không thể cập nhật các đường dẫn và chuyển đến nhánh “%s” cùng một lúc."
 
-#: builtin/checkout.c:278 builtin/checkout.c:467
+#: builtin/checkout.c:280 builtin/checkout.c:474
 msgid "corrupt index file"
 msgstr "tập tin ghi bảng mục lục bị hỏng"
 
-#: builtin/checkout.c:338 builtin/checkout.c:345
+#: builtin/checkout.c:340 builtin/checkout.c:347
 #, c-format
 msgid "path '%s' is unmerged"
 msgstr "đường dẫn “%s” không được hòa trộn"
 
-#: builtin/checkout.c:489
+#: builtin/checkout.c:496
 msgid "you need to resolve your current index first"
 msgstr "bạn cần phải giải quyết bảng mục lục hiện tại của bạn trước đã"
 
-#: builtin/checkout.c:615
+#: builtin/checkout.c:627
 #, c-format
 msgid "Can not do reflog for '%s'\n"
 msgstr "Không thể thực hiện reflog cho “%s”\n"
 
-#: builtin/checkout.c:653
+#: builtin/checkout.c:663
 msgid "HEAD is now at"
 msgstr "HEAD hiện giờ tại"
 
-#: builtin/checkout.c:660
+#: builtin/checkout.c:670
 #, c-format
 msgid "Reset branch '%s'\n"
 msgstr "Đặt lại nhánh “%s”\n"
 
-#: builtin/checkout.c:663
+#: builtin/checkout.c:673
 #, c-format
 msgid "Already on '%s'\n"
 msgstr "Đã sẵn sàng trên “%s”\n"
 
-#: builtin/checkout.c:667
+#: builtin/checkout.c:677
 #, c-format
 msgid "Switched to and reset branch '%s'\n"
 msgstr "Đã chuyển tới và đặt lại nhánh “%s”\n"
 
-#: builtin/checkout.c:669 builtin/checkout.c:1050
+#: builtin/checkout.c:679 builtin/checkout.c:1134
 #, c-format
 msgid "Switched to a new branch '%s'\n"
 msgstr "Đã chuyển đến nhánh mới “%s”\n"
 
-#: builtin/checkout.c:671
+#: builtin/checkout.c:681
 #, c-format
 msgid "Switched to branch '%s'\n"
 msgstr "Đã chuyển đến nhánh “%s”\n"
 
-#: builtin/checkout.c:723
+#: builtin/checkout.c:733
 #, c-format
 msgid " ... and %d more.\n"
 msgstr " … và nhiều hơn %d.\n"
 
-#: builtin/checkout.c:729
+#: builtin/checkout.c:739
 #, c-format
 msgid ""
 "Warning: you are leaving %d commit behind, not connected to\n"
 "any of your branches:\n"
 "\n"
 "%s\n"
@@ -3520,177 +3586,193 @@
 "Cảnh báo: bạn đã rời bỏ %d lần chuyển giao lại đằng sau, không được kết nối "
 "đến\n"
 "bất kỳ nhánh nào của bạn:\n"
 "\n"
 "%s\n"
 
-#: builtin/checkout.c:747
+#: builtin/checkout.c:758
 #, c-format
 msgid ""
+"If you want to keep it by creating a new branch, this may be a good time\n"
+"to do so with:\n"
+"\n"
+" git branch <new-branch-name> %s\n"
+"\n"
+msgid_plural ""
 "If you want to keep them by creating a new branch, this may be a good time\n"
 "to do so with:\n"
 "\n"
 " git branch <new-branch-name> %s\n"
 "\n"
-msgstr ""
-"Nếu bạn muốn giữ chúng bằng cách tạo ra một nhánh mới, đây có lẽ là\n"
+msgstr[0] ""
+"Nếu bạn muốn giữ (chúng) nó bằng cách tạo ra một nhánh mới, đây có lẽ là\n"
 "một thời điểm thích hợp để làm thế bằng lệnh:\n"
 "\n"
 " git branch <tên_nhánh_mới> %s\n"
 "\n"
 
-#: builtin/checkout.c:777
+#: builtin/checkout.c:794
 msgid "internal error in revision walk"
 msgstr "lỗi nội bộ trong khi di chuyển qua các điểm xét duyệt"
 
-#: builtin/checkout.c:781
+#: builtin/checkout.c:798
 msgid "Previous HEAD position was"
 msgstr "Vị trí trước kia của HEAD là"
 
-#: builtin/checkout.c:808 builtin/checkout.c:1045
+#: builtin/checkout.c:825 builtin/checkout.c:1129
 msgid "You are on a branch yet to be born"
 msgstr "Bạn tại nhánh mà nó chưa hề được sinh ra"
 
-#: builtin/checkout.c:952
+#: builtin/checkout.c:931
+#, c-format
+msgid "'%s' is already checked out at '%s'"
+msgstr "“%s” đã sẵn được lấy ra tại “%s”"
+
+#: builtin/checkout.c:1036
 #, c-format
 msgid "only one reference expected, %d given."
 msgstr "chỉ cần một tham chiếu, nhưng lại đưa ra %d."
 
-#: builtin/checkout.c:991
+#: builtin/checkout.c:1075
 #, c-format
 msgid "invalid reference: %s"
 msgstr "tham chiếu không hợp lệ: %s"
 
-#: builtin/checkout.c:1020
+#: builtin/checkout.c:1104
 #, c-format
 msgid "reference is not a tree: %s"
 msgstr "tham chiếu không phải là một cây:%s"
 
-#: builtin/checkout.c:1059
+#: builtin/checkout.c:1143
 msgid "paths cannot be used with switching branches"
 msgstr "các đường dẫn không thể dùng cùng với các nhánh chuyển"
 
-#: builtin/checkout.c:1062 builtin/checkout.c:1066
+#: builtin/checkout.c:1146 builtin/checkout.c:1150
 #, c-format
 msgid "'%s' cannot be used with switching branches"
 msgstr "“%s” không thể được sử dụng với các nhánh chuyển"
 
-#: builtin/checkout.c:1070 builtin/checkout.c:1073 builtin/checkout.c:1078
-#: builtin/checkout.c:1081
+#: builtin/checkout.c:1154 builtin/checkout.c:1157 builtin/checkout.c:1162
+#: builtin/checkout.c:1165
 #, c-format
 msgid "'%s' cannot be used with '%s'"
 msgstr "“%s” không thể được dùng với “%s”"
 
-#: builtin/checkout.c:1086
+#: builtin/checkout.c:1170
 #, c-format
 msgid "Cannot switch branch to a non-commit '%s'"
 msgstr "Không thể chuyển nhánh đến một thứ không phải là lần chuyển giao “%s”"
 
-#: builtin/checkout.c:1108 builtin/checkout.c:1110 builtin/clone.c:90
-#: builtin/remote.c:159 builtin/remote.c:161
+#: builtin/checkout.c:1203 builtin/checkout.c:1205 builtin/clone.c:83
+#: builtin/remote.c:159 builtin/remote.c:161 builtin/worktree.c:282
+#: builtin/worktree.c:284
 msgid "branch"
 msgstr "nhánh"
 
-#: builtin/checkout.c:1109
+#: builtin/checkout.c:1204
 msgid "create and checkout a new branch"
 msgstr "tạo và checkout một nhánh mới"
 
-#: builtin/checkout.c:1111
+#: builtin/checkout.c:1206
 msgid "create/reset and checkout a branch"
 msgstr "tạo/đặt_lại và checkout một nhánh"
 
-#: builtin/checkout.c:1112
+#: builtin/checkout.c:1207
 msgid "create reflog for new branch"
 msgstr "tạo reflog cho nhánh mới"
 
-#: builtin/checkout.c:1113
+#: builtin/checkout.c:1208
 msgid "detach the HEAD at named commit"
 msgstr "rời bỏ HEAD tại lần chuyển giao danh nghĩa"
 
-#: builtin/checkout.c:1114
+#: builtin/checkout.c:1209
 msgid "set upstream info for new branch"
 msgstr "đặt thông tin thượng nguồn cho nhánh mới"
 
-#: builtin/checkout.c:1116
+#: builtin/checkout.c:1211
 msgid "new-branch"
 msgstr "nhánh-mới"
 
-#: builtin/checkout.c:1116
+#: builtin/checkout.c:1211
 msgid "new unparented branch"
 msgstr "nhánh không cha mới"
 
-#: builtin/checkout.c:1117
+#: builtin/checkout.c:1212
 msgid "checkout our version for unmerged files"
 msgstr ""
 "lấy ra (checkout) phiên bản của chúng ta cho các tập tin chưa được hòa trộn"
 
-#: builtin/checkout.c:1119
+#: builtin/checkout.c:1214
 msgid "checkout their version for unmerged files"
 msgstr ""
 "lấy ra (checkout) phiên bản của chúng họ cho các tập tin chưa được hòa trộn"
 
-#: builtin/checkout.c:1121
+#: builtin/checkout.c:1216
 msgid "force checkout (throw away local modifications)"
 msgstr "ép buộc lấy ra (bỏ đi những thay đổi nội bộ)"
 
-#: builtin/checkout.c:1122
+#: builtin/checkout.c:1217
 msgid "perform a 3-way merge with the new branch"
 msgstr "thực hiện hòa trộn kiểu 3-way với nhánh mới"
 
-#: builtin/checkout.c:1123 builtin/merge.c:227
+#: builtin/checkout.c:1218 builtin/merge.c:227
 msgid "update ignored files (default)"
 msgstr "cập nhật các tập tin bị bỏ qua (mặc định)"
 
-#: builtin/checkout.c:1124 builtin/log.c:1239 parse-options.h:245
+#: builtin/checkout.c:1219 builtin/log.c:1239 parse-options.h:244
 msgid "style"
 msgstr "kiểu"
 
-#: builtin/checkout.c:1125
+#: builtin/checkout.c:1220
 msgid "conflict style (merge or diff3)"
 msgstr "xung đột kiểu (hòa trộn hoặc diff3)"
 
-#: builtin/checkout.c:1128
+#: builtin/checkout.c:1223
 msgid "do not limit pathspecs to sparse entries only"
 msgstr "không giới hạn đặc tả đường dẫn thành chỉ các mục thưa thớt"
 
-#: builtin/checkout.c:1130
+#: builtin/checkout.c:1225
 msgid "second guess 'git checkout <no-such-branch>'"
 msgstr "gợi ý thứ hai \"git checkout <không-nhánh-nào-như-vậy>\""
 
-#: builtin/checkout.c:1153
+#: builtin/checkout.c:1227
+msgid "do not check if another worktree is holding the given ref"
+msgstr "không kiểm tra nếu cây làm việc khác đang giữ tham chiếu đã cho"
+
+#: builtin/checkout.c:1252
 msgid "-b, -B and --orphan are mutually exclusive"
 msgstr "Các tùy chọn -b, -B và --orphan loại từ lẫn nhau"
 
-#: builtin/checkout.c:1170
+#: builtin/checkout.c:1269
 msgid "--track needs a branch name"
 msgstr "--track cần tên một nhánh"
 
-#: builtin/checkout.c:1175
+#: builtin/checkout.c:1274
 msgid "Missing branch name; try -b"
 msgstr "Thiếu tên nhánh; hãy thử -b"
 
-#: builtin/checkout.c:1212
+#: builtin/checkout.c:1310
 msgid "invalid path specification"
 msgstr "đường dẫn đã cho không hợp lệ"
 
-#: builtin/checkout.c:1219
+#: builtin/checkout.c:1317
 #, c-format
 msgid ""
 "Cannot update paths and switch to branch '%s' at the same time.\n"
 "Did you intend to checkout '%s' which can not be resolved as commit?"
 msgstr ""
 "Không thể cập nhật và chuyển thành nhánh “%s” cùng lúc\n"
 "Bạn đã có ý định checkout “%s” cái mà không thể được phân giải như là lần "
 "chuyển giao?"
 
-#: builtin/checkout.c:1224
+#: builtin/checkout.c:1322
 #, c-format
 msgid "git checkout: --detach does not take a path argument '%s'"
 msgstr "git checkout: --detach không nhận một đối số đường dẫn “%s”"
 
-#: builtin/checkout.c:1228
+#: builtin/checkout.c:1326
 msgid ""
 "git checkout: --ours/--theirs, --force and --merge are incompatible when\n"
 "checking out of the index."
 msgstr ""
 "git checkout: --ours/--theirs, --force và --merge là xung khắc với nhau khi\n"
 "checkout bảng mục lục (index)."
@@ -3755,42 +3837,42 @@
 "2-3,6-9    - chọn nhiều vùng\n"
 "foo        - chọn mục dựa trên tiền tố duy nhất\n"
 "-…       - không chọn các mục đã chỉ ra\n"
 "*          - chọn tất\n"
 "           - (để trống) kết thúc việc chọn"
 
-#: builtin/clean.c:517
+#: builtin/clean.c:515
 #, c-format
 msgid "Huh (%s)?"
 msgstr "Hả (%s)?"
 
-#: builtin/clean.c:659
+#: builtin/clean.c:657
 #, c-format
 msgid "Input ignore patterns>> "
 msgstr "Mẫu để lọc các tập tin đầu vào cần lờ đi>> "
 
-#: builtin/clean.c:696
+#: builtin/clean.c:694
 #, c-format
 msgid "WARNING: Cannot find items matched by: %s"
 msgstr "CẢNH BÁO: Không tìm thấy các mục được khớp bởi: %s"
 
-#: builtin/clean.c:717
+#: builtin/clean.c:715
 msgid "Select items to delete"
 msgstr "Chọn mục muốn xóa"
 
 #. TRANSLATORS: Make sure to keep [y/N] as is
-#: builtin/clean.c:758
+#: builtin/clean.c:756
 #, c-format
 msgid "Remove %s [y/N]? "
 msgstr "Xóa bỏ “%s” [y/N]? "
 
-#: builtin/clean.c:783
+#: builtin/clean.c:781
 msgid "Bye."
 msgstr "Tạm biệt."
 
-#: builtin/clean.c:791
+#: builtin/clean.c:789
 msgid ""
 "clean               - start cleaning\n"
 "filter by pattern   - exclude items from deletion\n"
 "select by numbers   - select items to be deleted by numbers\n"
 "ask each            - confirm each deletion (like \"rm -i\")\n"
 "quit                - stop cleaning\n"
@@ -3802,353 +3884,354 @@
 "select by numbers   - chọn các mục cần xóa bằng số\n"
 "ask each            - xác nhận trước mỗi lần xóa (giống như \"rm -i\")\n"
 "quit                - dừng việc dọn dẹp lại\n"
 "help                - hiển thị chính trợ giúp này\n"
 "?                   - trợ giúp dành cho chọn bằng cách nhắc"
 
-#: builtin/clean.c:818
+#: builtin/clean.c:816
 msgid "*** Commands ***"
 msgstr "*** Lệnh ***"
 
-#: builtin/clean.c:819
+#: builtin/clean.c:817
 msgid "What now"
 msgstr "Giờ thì sao"
 
-#: builtin/clean.c:827
+#: builtin/clean.c:825
 msgid "Would remove the following item:"
 msgid_plural "Would remove the following items:"
 msgstr[0] "Có muốn gỡ bỏ (các) mục sau đây không:"
 
-#: builtin/clean.c:844
+#: builtin/clean.c:842
 msgid "No more files to clean, exiting."
 msgstr "Không còn tập-tin nào để dọn dẹp, đang thoát ra."
 
-#: builtin/clean.c:875
+#: builtin/clean.c:873
 msgid "do not print names of files removed"
 msgstr "không hiển thị tên của các tập tin đã gỡ bỏ"
 
-#: builtin/clean.c:877
+#: builtin/clean.c:875
 msgid "force"
 msgstr "ép buộc"
 
-#: builtin/clean.c:878
+#: builtin/clean.c:876
 msgid "interactive cleaning"
 msgstr "dọn bằng kiểu tương tác"
 
-#: builtin/clean.c:880
+#: builtin/clean.c:878
 msgid "remove whole directories"
 msgstr "gỡ bỏ toàn bộ thư mục"
 
-#: builtin/clean.c:881 builtin/describe.c:407 builtin/grep.c:714
-#: builtin/ls-files.c:443 builtin/name-rev.c:311 builtin/show-ref.c:185
+#: builtin/clean.c:879 builtin/describe.c:407 builtin/grep.c:714
+#: builtin/ls-files.c:443 builtin/name-rev.c:311 builtin/show-ref.c:187
 msgid "pattern"
 msgstr "mẫu"
 
-#: builtin/clean.c:882
+#: builtin/clean.c:880
 msgid "add <pattern> to ignore rules"
 msgstr "thêm <mẫu> vào trong qui tắc bỏ qua"
 
-#: builtin/clean.c:883
+#: builtin/clean.c:881
 msgid "remove ignored files, too"
 msgstr "đồng thời gỡ bỏ cả các tập tin bị bỏ qua"
 
-#: builtin/clean.c:885
+#: builtin/clean.c:883
 msgid "remove only ignored files"
 msgstr "chỉ gỡ bỏ những tập tin bị bỏ qua"
 
-#: builtin/clean.c:903
+#: builtin/clean.c:901
 msgid "-x and -X cannot be used together"
 msgstr "-x và -X không thể dùng cùng nhau"
 
-#: builtin/clean.c:907
+#: builtin/clean.c:905
 msgid ""
 "clean.requireForce set to true and neither -i, -n, nor -f given; refusing to "
 "clean"
 msgstr ""
 "clean.requireForce được đặt thành true và không đưa ra tùy chọn -i, -n mà "
 "cũng không -f; từ chối lệnh dọn dẹp (clean)"
 
-#: builtin/clean.c:910
+#: builtin/clean.c:908
 msgid ""
 "clean.requireForce defaults to true and neither -i, -n, nor -f given; "
 "refusing to clean"
 msgstr ""
 "clean.requireForce mặc định được đặt là true và không đưa ra tùy chọn -i, -n "
 "mà cũng không -f; từ chối lệnh dọn dẹp (clean)"
 
 #: builtin/clone.c:37
 msgid "git clone [<options>] [--] <repo> [<dir>]"
 msgstr "git clone [<các-tùy-chọn>] [--] <kho> [<t.mục>]"
 
-#: builtin/clone.c:66 builtin/fetch.c:111 builtin/merge.c:224
+#: builtin/clone.c:57 builtin/fetch.c:111 builtin/merge.c:224
 #: builtin/push.c:523
 msgid "force progress reporting"
 msgstr "ép buộc báo cáo tiến triển công việc"
 
-#: builtin/clone.c:68
+#: builtin/clone.c:59
 msgid "don't create a checkout"
 msgstr "không tạo một checkout"
 
-#: builtin/clone.c:69 builtin/clone.c:71 builtin/init-db.c:496
+#: builtin/clone.c:60 builtin/clone.c:62 builtin/init-db.c:503
 msgid "create a bare repository"
 msgstr "tạo kho thuần"
 
-#: builtin/clone.c:73
+#: builtin/clone.c:64
 msgid "create a mirror repository (implies bare)"
 msgstr "tạo kho bản sao (ý là kho thuần)"
 
-#: builtin/clone.c:75
+#: builtin/clone.c:66
 msgid "to clone from a local repository"
 msgstr "để nhân bản từ kho nội bộ"
 
-#: builtin/clone.c:77
+#: builtin/clone.c:68
 msgid "don't use local hardlinks, always copy"
 msgstr "không sử dụng liên kết cứng nội bộ, luôn sao chép"
 
-#: builtin/clone.c:79
+#: builtin/clone.c:70
 msgid "setup as shared repository"
 msgstr "cài đặt đây là kho chia sẻ"
 
-#: builtin/clone.c:81 builtin/clone.c:83
+#: builtin/clone.c:72 builtin/clone.c:74
 msgid "initialize submodules in the clone"
 msgstr "khởi tạo mô-đun-con trong bản sao"
 
-#: builtin/clone.c:84 builtin/init-db.c:493
+#: builtin/clone.c:75 builtin/init-db.c:500
 msgid "template-directory"
 msgstr "thư-mục-mẫu"
 
-#: builtin/clone.c:85 builtin/init-db.c:494
+#: builtin/clone.c:76 builtin/init-db.c:501
 msgid "directory from which templates will be used"
 msgstr "thư mục mà tại đó các mẫu sẽ được dùng"
 
-#: builtin/clone.c:87
+#: builtin/clone.c:78
 msgid "reference repository"
 msgstr "kho tham chiếu"
 
-#: builtin/clone.c:88 builtin/column.c:26 builtin/merge-file.c:44
+#: builtin/clone.c:80
+msgid "use --reference only while cloning"
+msgstr "chỉ dùng --reference khi nhân bản"
+
+#: builtin/clone.c:81 builtin/column.c:26 builtin/merge-file.c:44
 msgid "name"
 msgstr "tên"
 
-#: builtin/clone.c:89
+#: builtin/clone.c:82
 msgid "use <name> instead of 'origin' to track upstream"
 msgstr "dùng <tên> thay cho “origin” để theo dõi thượng nguồn"
 
-#: builtin/clone.c:91
+#: builtin/clone.c:84
 msgid "checkout <branch> instead of the remote's HEAD"
 msgstr "lấy ra <nhánh> thay cho HEAD của máy chủ"
 
-#: builtin/clone.c:93
+#: builtin/clone.c:86
 msgid "path to git-upload-pack on the remote"
 msgstr "đường dẫn đến git-upload-pack trên máy chủ"
 
-#: builtin/clone.c:94 builtin/fetch.c:112 builtin/grep.c:659
+#: builtin/clone.c:87 builtin/fetch.c:112 builtin/grep.c:659
 msgid "depth"
 msgstr "độ-sâu"
 
-#: builtin/clone.c:95
+#: builtin/clone.c:88
 msgid "create a shallow clone of that depth"
 msgstr "tạo bản sao không đầy đủ cho mức sâu đã cho"
 
-#: builtin/clone.c:97
+#: builtin/clone.c:90
 msgid "clone only one branch, HEAD or --branch"
 msgstr "chỉ nhân bản một nhánh, HEAD hoặc --branch"
 
-#: builtin/clone.c:99
-msgid "use --reference only while cloning"
-msgstr "chỉ dùng --reference khi nhân bản"
-
-#: builtin/clone.c:100 builtin/init-db.c:502
+#: builtin/clone.c:91 builtin/init-db.c:509
 msgid "gitdir"
 msgstr "gitdir"
 
-#: builtin/clone.c:101 builtin/init-db.c:503
+#: builtin/clone.c:92 builtin/init-db.c:510
 msgid "separate git dir from working tree"
 msgstr "không dùng chung thư mục dành riêng cho git và thư mục làm việc"
 
-#: builtin/clone.c:102
+#: builtin/clone.c:93
 msgid "key=value"
 msgstr "khóa=giá_trị"
 
-#: builtin/clone.c:103
+#: builtin/clone.c:94
 msgid "set config inside the new repository"
 msgstr "đặt cấu hình bên trong một kho chứa mới"
 
-#: builtin/clone.c:256
+#: builtin/clone.c:240
 #, c-format
 msgid "reference repository '%s' is not a local repository."
 msgstr "kho tham chiếu “%s” không phải là một kho nội bộ."
 
-#: builtin/clone.c:260
+#: builtin/clone.c:244
 #, c-format
 msgid "reference repository '%s' is shallow"
 msgstr "kho tham chiếu “%s” là nông"
 
-#: builtin/clone.c:263
+#: builtin/clone.c:247
 #, c-format
 msgid "reference repository '%s' is grafted"
 msgstr "kho tham chiếu “%s” bị cấy ghép"
 
-#: builtin/clone.c:325
+#: builtin/clone.c:310
 #, c-format
 msgid "failed to create directory '%s'"
 msgstr "tạo thư mục \"%s\" gặp lỗi"
 
-#: builtin/clone.c:327 builtin/diff.c:84
+#: builtin/clone.c:312 builtin/diff.c:84
 #, c-format
 msgid "failed to stat '%s'"
 msgstr "gặp lỗi khi lấy thống kê về “%s”"
 
-#: builtin/clone.c:329
+#: builtin/clone.c:314
 #, c-format
 msgid "%s exists and is not a directory"
 msgstr "%s có tồn tại nhưng lại không phải là một thư mục"
 
-#: builtin/clone.c:343
+#: builtin/clone.c:328
 #, c-format
 msgid "failed to stat %s\n"
 msgstr "gặp lỗi khi lấy thông tin thống kê về %s\n"
 
-#: builtin/clone.c:365
+#: builtin/clone.c:350
 #, c-format
 msgid "failed to create link '%s'"
 msgstr "gặp lỗi khi tạo được liên kết mềm %s"
 
-#: builtin/clone.c:369
+#: builtin/clone.c:354
 #, c-format
 msgid "failed to copy file to '%s'"
 msgstr "gặp lỗi khi sao chép tập tin và “%s”"
 
-#: builtin/clone.c:392 builtin/clone.c:566
+#: builtin/clone.c:377 builtin/clone.c:551
 #, c-format
 msgid "done.\n"
 msgstr "hoàn tất.\n"
 
-#: builtin/clone.c:404
+#: builtin/clone.c:389
 msgid ""
 "Clone succeeded, but checkout failed.\n"
 "You can inspect what was checked out with 'git status'\n"
 "and retry the checkout with 'git checkout -f HEAD'\n"
 msgstr ""
 "Việc nhân bản thành công, nhưng checkout gặp lỗi.\n"
 "Bạn kiểm tra kỹ xem cái gì được lấy ra bằng lệnh “git status”\n"
 "và thử lấy ra với lệnh “git checkout -f HEAD”\n"
 
-#: builtin/clone.c:481
+#: builtin/clone.c:466
 #, c-format
 msgid "Could not find remote branch %s to clone."
 msgstr "Không tìm thấy nhánh máy chủ %s để nhân bản (clone)."
 
-#: builtin/clone.c:561
+#: builtin/clone.c:546
 #, c-format
 msgid "Checking connectivity... "
 msgstr "Đang kiểm tra kết nối… "
 
-#: builtin/clone.c:564
+#: builtin/clone.c:549
 msgid "remote did not send all necessary objects"
 msgstr "máy chủ đã không gửi tất cả các đối tượng cần thiết"
 
-#: builtin/clone.c:628
+#: builtin/clone.c:613
 msgid "remote HEAD refers to nonexistent ref, unable to checkout.\n"
 msgstr "refers HEAD máy chủ  chỉ đến ref không tồn tại, không thể lấy ra.\n"
 
-#: builtin/clone.c:659
+#: builtin/clone.c:644
 msgid "unable to checkout working tree"
 msgstr "không thể lấy ra (checkout) cây làm việc"
 
-#: builtin/clone.c:746
+#: builtin/clone.c:731
 msgid "cannot repack to clean up"
 msgstr "không thể đóng gói để dọn dẹp"
 
-#: builtin/clone.c:748
+#: builtin/clone.c:733
 msgid "cannot unlink temporary alternates file"
 msgstr "không thể bỏ liên kết tập tin thay thế tạm thời"
 
-#: builtin/clone.c:778
+#: builtin/clone.c:763
 msgid "Too many arguments."
 msgstr "Có quá nhiều đối số."
 
-#: builtin/clone.c:782
+#: builtin/clone.c:767
 msgid "You must specify a repository to clone."
 msgstr "Bạn phải chỉ định một kho để mà nhân bản (clone)."
 
-#: builtin/clone.c:793
+#: builtin/clone.c:778
 #, c-format
 msgid "--bare and --origin %s options are incompatible."
 msgstr "tùy chọn --bare và --origin %s xung khắc nhau."
 
-#: builtin/clone.c:796
+#: builtin/clone.c:781
 msgid "--bare and --separate-git-dir are incompatible."
 msgstr "tùy chọn --bare và --separate-git-dir xung khắc nhau."
 
-#: builtin/clone.c:809
+#: builtin/clone.c:794
 #, c-format
 msgid "repository '%s' does not exist"
 msgstr "kho chứa “%s” chưa tồn tại"
 
-#: builtin/clone.c:815 builtin/fetch.c:1156
+#: builtin/clone.c:800 builtin/fetch.c:1160
 #, c-format
 msgid "depth %s is not a positive number"
 msgstr "độ sâu %s không phải là một số nguyên dương"
 
-#: builtin/clone.c:825
+#: builtin/clone.c:810
 #, c-format
 msgid "destination path '%s' already exists and is not an empty directory."
 msgstr "đường dẫn đích “%s” đã có từ trước và không phải là một thư mục rỗng."
 
-#: builtin/clone.c:835
+#: builtin/clone.c:820
 #, c-format
 msgid "working tree '%s' already exists."
 msgstr "cây làm việc “%s” đã sẵn tồn tại rồi."
 
-#: builtin/clone.c:850 builtin/clone.c:861
+#: builtin/clone.c:835 builtin/clone.c:846 builtin/worktree.c:193
+#: builtin/worktree.c:220
 #, c-format
 msgid "could not create leading directories of '%s'"
 msgstr "không thể tạo các thư mục dẫn đầu của “%s”"
 
-#: builtin/clone.c:853
+#: builtin/clone.c:838
 #, c-format
 msgid "could not create work tree dir '%s'"
 msgstr "không thể tạo cây thư mục làm việc dir “%s”"
 
-#: builtin/clone.c:871
+#: builtin/clone.c:856
 #, c-format
 msgid "Cloning into bare repository '%s'...\n"
 msgstr "Đang nhân bản thành kho chứa bare “%s”…\n"
 
-#: builtin/clone.c:873
+#: builtin/clone.c:858
 #, c-format
 msgid "Cloning into '%s'...\n"
 msgstr "Đang nhân bản thành “%s”…\n"
 
-#: builtin/clone.c:898
+#: builtin/clone.c:883
 msgid "--dissociate given, but there is no --reference"
 msgstr "đã đưa ra --dissociate, nhưng ở đây lại không có --reference"
 
-#: builtin/clone.c:913
+#: builtin/clone.c:900
 msgid "--depth is ignored in local clones; use file:// instead."
 msgstr "--depth bị lờ đi khi nhân bản nội bộ; hãy sử dụng file:// để thay thế."
 
-#: builtin/clone.c:916
+#: builtin/clone.c:903
 msgid "source repository is shallow, ignoring --local"
 msgstr "kho nguồn là nông, nên bỏ qua --local"
 
-#: builtin/clone.c:921
+#: builtin/clone.c:908
 msgid "--local is ignored"
 msgstr "--local bị lờ đi"
 
-#: builtin/clone.c:925
+#: builtin/clone.c:912
 #, c-format
 msgid "Don't know how to clone %s"
 msgstr "Không biết làm cách nào để nhân bản (clone) %s"
 
-#: builtin/clone.c:976 builtin/clone.c:984
+#: builtin/clone.c:961 builtin/clone.c:969
 #, c-format
 msgid "Remote branch %s not found in upstream %s"
 msgstr "Nhánh máy chủ %s không tìm thấy trong thượng nguồn %s"
 
-#: builtin/clone.c:987
+#: builtin/clone.c:972
 msgid "You appear to have cloned an empty repository."
 msgstr "Bạn hình như là đã nhân bản một kho trống rỗng."
 
 #: builtin/column.c:9
 msgid "git column [<options>]"
 msgstr "git column [<các-tùy-chọn>]"
@@ -4393,13 +4476,13 @@
 msgstr "không thể đọc MERGE_MSG"
 
 #: builtin/commit.c:734
 msgid "could not read SQUASH_MSG"
 msgstr "không thể đọc SQUASH_MSG"
 
-#: builtin/commit.c:738
+#: builtin/commit.c:738 builtin/merge.c:1079
 #, c-format
 msgid "could not read '%s'"
 msgstr "Không thể đọc “%s”."
 
 #: builtin/commit.c:785
 msgid "could not write commit template"
@@ -4565,48 +4648,48 @@
 msgstr "Chế độ dọn dẹp không hợp lệ %s"
 
 #: builtin/commit.c:1214
 msgid "Paths with -a does not make sense."
 msgstr "Các đường dẫn với tùy chọn -a không hợp lý."
 
-#: builtin/commit.c:1324 builtin/commit.c:1604
+#: builtin/commit.c:1324 builtin/commit.c:1603
 msgid "show status concisely"
 msgstr "hiển thị trạng thái ở dạng súc tích"
 
-#: builtin/commit.c:1326 builtin/commit.c:1606
+#: builtin/commit.c:1326 builtin/commit.c:1605
 msgid "show branch information"
 msgstr "hiển thị thông tin nhánh"
 
-#: builtin/commit.c:1328 builtin/commit.c:1608 builtin/push.c:509
+#: builtin/commit.c:1328 builtin/commit.c:1607 builtin/push.c:509
 msgid "machine-readable output"
 msgstr "kết xuất dạng máy-có-thể-đọc"
 
-#: builtin/commit.c:1331 builtin/commit.c:1610
+#: builtin/commit.c:1331 builtin/commit.c:1609
 msgid "show status in long format (default)"
 msgstr "hiển thị trạng thái ở định dạng dài (mặc định)"
 
-#: builtin/commit.c:1334 builtin/commit.c:1613
+#: builtin/commit.c:1334 builtin/commit.c:1612
 msgid "terminate entries with NUL"
 msgstr "chấm dứt các mục bằng NUL"
 
-#: builtin/commit.c:1336 builtin/commit.c:1616 builtin/fast-export.c:980
+#: builtin/commit.c:1336 builtin/commit.c:1615 builtin/fast-export.c:980
 #: builtin/fast-export.c:983 builtin/tag.c:603
 msgid "mode"
 msgstr "chế độ"
 
-#: builtin/commit.c:1337 builtin/commit.c:1616
+#: builtin/commit.c:1337 builtin/commit.c:1615
 msgid "show untracked files, optional modes: all, normal, no. (Default: all)"
 msgstr ""
 "hiển thị các tập tin chưa được theo dõi  dấu vết, các chế độ tùy chọn:  all, "
 "normal, no. (Mặc định: all)"
 
 #: builtin/commit.c:1340
 msgid "show ignored files"
 msgstr "hiển thị các tập tin ẩn"
 
-#: builtin/commit.c:1341 parse-options.h:153
+#: builtin/commit.c:1341 parse-options.h:152
 msgid "when"
 msgstr "khi"
 
 #: builtin/commit.c:1342
 msgid ""
 "ignore changes to submodules, optional when: all, dirty, untracked. "
@@ -4616,215 +4699,215 @@
 "(Mặc định: all)"
 
 #: builtin/commit.c:1344
 msgid "list untracked files in columns"
 msgstr "hiển thị danh sách các tập-tin chưa được theo dõi trong các cột"
 
-#: builtin/commit.c:1431
+#: builtin/commit.c:1430
 msgid "couldn't look up newly created commit"
 msgstr "không thể tìm thấy lần chuyển giao mới hơn đã được tạo"
 
-#: builtin/commit.c:1433
+#: builtin/commit.c:1432
 msgid "could not parse newly created commit"
 msgstr ""
 "không thể phân tích cú pháp của đối tượng chuyển giao mới hơn đã được tạo"
 
-#: builtin/commit.c:1478
+#: builtin/commit.c:1477
 msgid "detached HEAD"
 msgstr "đã rời khỏi HEAD"
 
-#: builtin/commit.c:1481
+#: builtin/commit.c:1480
 msgid " (root-commit)"
 msgstr " (root-commit)"
 
-#: builtin/commit.c:1574
+#: builtin/commit.c:1573
 msgid "suppress summary after successful commit"
 msgstr "không hiển thị tổng kết sau khi chuyển giao thành công"
 
-#: builtin/commit.c:1575
+#: builtin/commit.c:1574
 msgid "show diff in commit message template"
 msgstr "hiển thị sự khác biệt trong mẫu tin nhắn chuyển giao"
 
-#: builtin/commit.c:1577
+#: builtin/commit.c:1576
 msgid "Commit message options"
 msgstr "Các tùy chọn ghi chú commit"
 
-#: builtin/commit.c:1578 builtin/tag.c:601
+#: builtin/commit.c:1577 builtin/tag.c:601
 msgid "read message from file"
 msgstr "đọc chú thích từ tập tin"
 
-#: builtin/commit.c:1579
+#: builtin/commit.c:1578
 msgid "author"
 msgstr "tác giả"
 
-#: builtin/commit.c:1579
+#: builtin/commit.c:1578
 msgid "override author for commit"
 msgstr "ghi đè tác giả cho commit"
 
-#: builtin/commit.c:1580 builtin/gc.c:275
+#: builtin/commit.c:1579 builtin/gc.c:280
 msgid "date"
 msgstr "ngày tháng"
 
-#: builtin/commit.c:1580
+#: builtin/commit.c:1579
 msgid "override date for commit"
 msgstr "ghi đè ngày tháng cho lần chuyển giao"
 
-#: builtin/commit.c:1581 builtin/merge.c:218 builtin/notes.c:391
+#: builtin/commit.c:1580 builtin/merge.c:218 builtin/notes.c:391
 #: builtin/notes.c:554 builtin/tag.c:599
 msgid "message"
 msgstr "chú thích"
 
-#: builtin/commit.c:1581
+#: builtin/commit.c:1580
 msgid "commit message"
 msgstr "chú thích của lần chuyển giao"
 
-#: builtin/commit.c:1582
+#: builtin/commit.c:1581
 msgid "reuse and edit message from specified commit"
 msgstr "dùng lại các ghi chú từ lần chuyển giao đã cho nhưng có cho sửa chữa"
 
-#: builtin/commit.c:1583
+#: builtin/commit.c:1582
 msgid "reuse message from specified commit"
 msgstr "dùng lại các ghi chú từ lần chuyển giao đã cho"
 
-#: builtin/commit.c:1584
+#: builtin/commit.c:1583
 msgid "use autosquash formatted message to fixup specified commit"
 msgstr ""
 "dùng ghi chú có định dạng autosquash để sửa chữa lần chuyển giao đã chỉ ra"
 
-#: builtin/commit.c:1585
+#: builtin/commit.c:1584
 msgid "use autosquash formatted message to squash specified commit"
 msgstr ""
 "dùng lời nhắn có định dạng tự động nén để nén lại các lần chuyển giao đã chỉ "
 "ra"
 
-#: builtin/commit.c:1586
+#: builtin/commit.c:1585
 msgid "the commit is authored by me now (used with -C/-c/--amend)"
 msgstr ""
 "lần chuyển giao nhận tôi là tác giả (được dùng với tùy chọn -C/-c/--amend)"
 
-#: builtin/commit.c:1587 builtin/log.c:1191 builtin/revert.c:86
+#: builtin/commit.c:1586 builtin/log.c:1191 builtin/revert.c:86
 msgid "add Signed-off-by:"
 msgstr "(nên dùng) thêm dòng Signed-off-by:"
 
-#: builtin/commit.c:1588
+#: builtin/commit.c:1587
 msgid "use specified template file"
 msgstr "sử dụng tập tin mẫu đã cho"
 
-#: builtin/commit.c:1589
+#: builtin/commit.c:1588
 msgid "force edit of commit"
 msgstr "ép buộc sửa lần commit"
 
-#: builtin/commit.c:1590
+#: builtin/commit.c:1589
 msgid "default"
 msgstr "mặc định"
 
-#: builtin/commit.c:1590 builtin/tag.c:604
+#: builtin/commit.c:1589 builtin/tag.c:604
 msgid "how to strip spaces and #comments from message"
 msgstr "làm thế nào để cắt bỏ khoảng trắng và #ghichú từ mẩu tin nhắn"
 
-#: builtin/commit.c:1591
+#: builtin/commit.c:1590
 msgid "include status in commit message template"
 msgstr "bao gồm các trạng thái trong mẫu ghi chú chuyển giao"
 
-#: builtin/commit.c:1592 builtin/merge.c:225 builtin/revert.c:92
+#: builtin/commit.c:1591 builtin/merge.c:225 builtin/revert.c:92
 #: builtin/tag.c:605
 msgid "key-id"
 msgstr "mã-số-khóa"
 
-#: builtin/commit.c:1593 builtin/merge.c:226 builtin/revert.c:93
+#: builtin/commit.c:1592 builtin/merge.c:226 builtin/revert.c:93
 msgid "GPG sign commit"
 msgstr "ký lần chuyển giao dùng GPG"
 
-#: builtin/commit.c:1596
+#: builtin/commit.c:1595
 msgid "Commit contents options"
 msgstr "Các tùy nội dung ghi chú commit"
 
-#: builtin/commit.c:1597
+#: builtin/commit.c:1596
 msgid "commit all changed files"
 msgstr "chuyển giao tất cả các tập tin có thay đổi"
 
-#: builtin/commit.c:1598
+#: builtin/commit.c:1597
 msgid "add specified files to index for commit"
 msgstr "thêm các tập tin đã chỉ ra vào bảng mục lục để chuyển giao"
 
-#: builtin/commit.c:1599
+#: builtin/commit.c:1598
 msgid "interactively add files"
 msgstr "thêm các tập-tin bằng tương tác"
 
-#: builtin/commit.c:1600
+#: builtin/commit.c:1599
 msgid "interactively add changes"
 msgstr "thêm các thay đổi bằng tương tác"
 
-#: builtin/commit.c:1601
+#: builtin/commit.c:1600
 msgid "commit only specified files"
 msgstr "chỉ chuyển giao các tập tin đã chỉ ra"
 
-#: builtin/commit.c:1602
+#: builtin/commit.c:1601
 msgid "bypass pre-commit hook"
 msgstr "vòng qua móc (hook) pre-commit"
 
-#: builtin/commit.c:1603
+#: builtin/commit.c:1602
 msgid "show what would be committed"
 msgstr "hiển thị xem cái gì có thể được chuyển giao"
 
-#: builtin/commit.c:1614
+#: builtin/commit.c:1613
 msgid "amend previous commit"
 msgstr "“tu bổ” (amend) lần commit trước"
 
-#: builtin/commit.c:1615
+#: builtin/commit.c:1614
 msgid "bypass post-rewrite hook"
 msgstr "vòng qua móc (hook) post-rewrite"
 
-#: builtin/commit.c:1620
+#: builtin/commit.c:1619
 msgid "ok to record an empty change"
 msgstr "ok để ghi lại một thay đổi trống rỗng"
 
-#: builtin/commit.c:1622
+#: builtin/commit.c:1621
 msgid "ok to record a change with an empty message"
 msgstr "ok để ghi các thay đổi với lời nhắn trống rỗng"
 
-#: builtin/commit.c:1651
+#: builtin/commit.c:1650
 msgid "could not parse HEAD commit"
 msgstr "không thể phân tích commit (lần chuyển giao) HEAD"
 
-#: builtin/commit.c:1690 builtin/merge.c:519
+#: builtin/commit.c:1689 builtin/merge.c:1076
 #, c-format
 msgid "could not open '%s' for reading"
 msgstr "không thể mở “%s” để đọc"
 
-#: builtin/commit.c:1697
+#: builtin/commit.c:1696
 #, c-format
 msgid "Corrupt MERGE_HEAD file (%s)"
 msgstr "Tập tin MERGE_HEAD sai hỏng (%s)"
 
-#: builtin/commit.c:1704
+#: builtin/commit.c:1703
 msgid "could not read MERGE_MODE"
 msgstr "không thể đọc MERGE_MODE"
 
-#: builtin/commit.c:1723
+#: builtin/commit.c:1722
 #, c-format
 msgid "could not read commit message: %s"
 msgstr "không thể đọc phần chú thích (message) của llần chuyển giao: %s"
 
-#: builtin/commit.c:1734
+#: builtin/commit.c:1733
 #, c-format
 msgid "Aborting commit; you did not edit the message.\n"
 msgstr ""
 "Đang bỏ qua việc chuyển giao; bạn đã không biên soạn phần chú thích "
 "(message).\n"
 
-#: builtin/commit.c:1739
+#: builtin/commit.c:1738
 #, c-format
 msgid "Aborting commit due to empty commit message.\n"
 msgstr "Bãi bỏ việc chuyển giao bởi vì phần chú thích của nó trống rỗng.\n"
 
-#: builtin/commit.c:1754 builtin/merge.c:851 builtin/merge.c:876
+#: builtin/commit.c:1753 builtin/merge.c:829 builtin/merge.c:854
 msgid "failed to write commit object"
 msgstr "gặp lỗi khi ghi đối tượng chuyển giao"
 
-#: builtin/commit.c:1787
+#: builtin/commit.c:1786
 msgid ""
 "Repository has been updated, but unable to write\n"
 "new_index file. Check that disk is not full and quota is\n"
 "not exceeded, and then \"git reset HEAD\" to recover."
 msgstr ""
 "Kho chứa đã được cập nhật, nhưng không thể ghi vào\n"
@@ -4961,24 +5044,24 @@
 msgstr "không thể phân tích giá trị màu mặc định"
 
 #: builtin/config.c:457
 #, c-format
 msgid ""
 "# This is Git's per-user configuration file.\n"
-"[core]\n"
+"[user]\n"
 "# Please adapt and uncomment the following lines:\n"
-"#\tuser = %s\n"
+"#\tname = %s\n"
 "#\temail = %s\n"
 msgstr ""
 "# Đây là tập tin cấu hình cho từng người dùng Git.\n"
-"[core]\n"
+"[user]\n"
 "# Vui lòng sửa lại cho thích hợp và bỏ dấu ghi chú các dòng sau:\n"
-"#\tuser = %s\n"
+"#\tname = %s\n"
 "#\temail = %s\n"
 
-#: builtin/config.c:589
+#: builtin/config.c:587
 #, c-format
 msgid "cannot create configuration file %s"
 msgstr "không thể tạo tập tin cấu hình “%s”"
 
 #: builtin/count-objects.c:55
 msgid "git count-objects [-v] [-H | --human-readable]"
@@ -5304,372 +5387,372 @@
 msgstr "refmap"
 
 #: builtin/fetch.c:125
 msgid "specify fetch refmap"
 msgstr "chỉ ra refmap cần lấy về"
 
-#: builtin/fetch.c:375
+#: builtin/fetch.c:377
 msgid "Couldn't find remote ref HEAD"
 msgstr "Không thể tìm thấy máy chủ cho tham chiếu HEAD"
 
-#: builtin/fetch.c:455
+#: builtin/fetch.c:457
 #, c-format
 msgid "object %s not found"
 msgstr "Không tìm thấy đối tượng %s"
 
-#: builtin/fetch.c:460
+#: builtin/fetch.c:462
 msgid "[up to date]"
 msgstr "[đã cập nhật]"
 
-#: builtin/fetch.c:474
+#: builtin/fetch.c:476
 #, c-format
 msgid "! %-*s %-*s -> %s  (can't fetch in current branch)"
 msgstr "! %-*s %-*s -> %s  (không thể fetch (lấy) về nhánh hiện hành)"
 
-#: builtin/fetch.c:475 builtin/fetch.c:561
+#: builtin/fetch.c:477 builtin/fetch.c:563
 msgid "[rejected]"
 msgstr "[Bị từ chối]"
 
-#: builtin/fetch.c:486
+#: builtin/fetch.c:488
 msgid "[tag update]"
 msgstr "[cập nhật thẻ]"
 
-#: builtin/fetch.c:488 builtin/fetch.c:523 builtin/fetch.c:541
+#: builtin/fetch.c:490 builtin/fetch.c:525 builtin/fetch.c:543
 msgid "  (unable to update local ref)"
 msgstr "  (không thể cập nhật tham chiếu nội bộ)"
 
-#: builtin/fetch.c:506
+#: builtin/fetch.c:508
 msgid "[new tag]"
 msgstr "[thẻ mới]"
 
-#: builtin/fetch.c:509
+#: builtin/fetch.c:511
 msgid "[new branch]"
 msgstr "[nhánh mới]"
 
-#: builtin/fetch.c:512
+#: builtin/fetch.c:514
 msgid "[new ref]"
 msgstr "[ref (tham chiếu) mới]"
 
-#: builtin/fetch.c:557
+#: builtin/fetch.c:559
 msgid "unable to update local ref"
 msgstr "không thể cập nhật tham chiếu nội bộ"
 
-#: builtin/fetch.c:557
+#: builtin/fetch.c:559
 msgid "forced update"
 msgstr "cưỡng bức cập nhật"
 
-#: builtin/fetch.c:563
+#: builtin/fetch.c:565
 msgid "(non-fast-forward)"
-msgstr "(non-fast-forward)"
+msgstr "(không-chuyển-tiếp-nhanh)"
 
-#: builtin/fetch.c:596 builtin/fetch.c:829
+#: builtin/fetch.c:599 builtin/fetch.c:832
 #, c-format
 msgid "cannot open %s: %s\n"
 msgstr "không thể mở %s: %s\n"
 
-#: builtin/fetch.c:605
+#: builtin/fetch.c:608
 #, c-format
 msgid "%s did not send all necessary objects\n"
 msgstr "%s đã không gửi tất cả các đối tượng cần thiết\n"
 
-#: builtin/fetch.c:623
+#: builtin/fetch.c:626
 #, c-format
 msgid "reject %s because shallow roots are not allowed to be updated"
 msgstr "từ chối %s bởi vì các gốc nông thì không được phép cập nhật"
 
-#: builtin/fetch.c:711 builtin/fetch.c:794
+#: builtin/fetch.c:714 builtin/fetch.c:797
 #, c-format
 msgid "From %.*s\n"
 msgstr "Từ %.*s\n"
 
-#: builtin/fetch.c:722
+#: builtin/fetch.c:725
 #, c-format
 msgid ""
 "some local refs could not be updated; try running\n"
 " 'git remote prune %s' to remove any old, conflicting branches"
 msgstr ""
 "một số tham chiếu nội bộ không thể được cập nhật; hãy thử chạy\n"
 " “git remote prune %s” để bỏ đi những nhánh cũ, hay bị xung đột"
 
-#: builtin/fetch.c:774
+#: builtin/fetch.c:777
 #, c-format
 msgid "   (%s will become dangling)"
 msgstr "   (%s sẽ trở thành không đầu (không được quản lý))"
 
-#: builtin/fetch.c:775
+#: builtin/fetch.c:778
 #, c-format
 msgid "   (%s has become dangling)"
 msgstr "   (%s đã trở thành không đầu (không được quản lý))"
 
-#: builtin/fetch.c:799
+#: builtin/fetch.c:802
 msgid "[deleted]"
 msgstr "[đã xóa]"
 
-#: builtin/fetch.c:800 builtin/remote.c:1060
+#: builtin/fetch.c:803 builtin/remote.c:1057
 msgid "(none)"
 msgstr "(không)"
 
-#: builtin/fetch.c:819
+#: builtin/fetch.c:822
 #, c-format
 msgid "Refusing to fetch into current branch %s of non-bare repository"
 msgstr ""
 "Từ chối việc lấy vào trong nhánh hiện tại %s của một kho chứa không phải kho "
 "trần (bare)"
 
-#: builtin/fetch.c:838
+#: builtin/fetch.c:841
 #, c-format
 msgid "Option \"%s\" value \"%s\" is not valid for %s"
 msgstr "Tùy chọn \"%s\" có giá trị \"%s\" là không hợp lệ cho %s"
 
-#: builtin/fetch.c:841
+#: builtin/fetch.c:844
 #, c-format
 msgid "Option \"%s\" is ignored for %s\n"
 msgstr "Tùy chọn \"%s\" bị bỏ qua với %s\n"
 
-#: builtin/fetch.c:897
+#: builtin/fetch.c:900
 #, c-format
 msgid "Don't know how to fetch from %s"
 msgstr "Không biết làm cách nào để lấy về từ %s"
 
-#: builtin/fetch.c:1059
+#: builtin/fetch.c:1063
 #, c-format
 msgid "Fetching %s\n"
 msgstr "Đang lấy “%s” về\n"
 
-#: builtin/fetch.c:1061 builtin/remote.c:90
+#: builtin/fetch.c:1065 builtin/remote.c:90
 #, c-format
 msgid "Could not fetch %s"
 msgstr "không thể “%s” về"
 
-#: builtin/fetch.c:1079
+#: builtin/fetch.c:1083
 msgid ""
 "No remote repository specified.  Please, specify either a URL or a\n"
 "remote name from which new revisions should be fetched."
 msgstr ""
 "Chưa chỉ ra kho chứa máy chủ.  Xin hãy chỉ định hoặc là URL hoặc\n"
 "tên máy chủ từ cái mà những điểm xét duyệt mới có thể được fetch (lấy về)."
 
-#: builtin/fetch.c:1102
+#: builtin/fetch.c:1106
 msgid "You need to specify a tag name."
 msgstr "Bạn phải định rõ tên thẻ."
 
-#: builtin/fetch.c:1144
+#: builtin/fetch.c:1148
 msgid "--depth and --unshallow cannot be used together"
 msgstr "tùy chọn --depth và --unshallow không thể sử dụng cùng với nhau"
 
-#: builtin/fetch.c:1146
+#: builtin/fetch.c:1150
 msgid "--unshallow on a complete repository does not make sense"
 msgstr "--unshallow trên kho hoàn chỉnh là không hợp lý"
 
-#: builtin/fetch.c:1169
+#: builtin/fetch.c:1173
 msgid "fetch --all does not take a repository argument"
 msgstr "lệnh lấy về \"fetch --all\" không lấy đối số kho chứa"
 
-#: builtin/fetch.c:1171
+#: builtin/fetch.c:1175
 msgid "fetch --all does not make sense with refspecs"
 msgstr "lệnh lấy về \"fetch --all\" không hợp lý với refspecs"
 
-#: builtin/fetch.c:1182
+#: builtin/fetch.c:1186
 #, c-format
 msgid "No such remote or remote group: %s"
 msgstr "không có nhóm máy chủ hay máy chủ như thế: %s"
 
-#: builtin/fetch.c:1190
+#: builtin/fetch.c:1194
 msgid "Fetching a group and specifying refspecs does not make sense"
 msgstr "Việc lấy về cả một nhóm và chỉ định refspecs không hợp lý"
 
 #: builtin/fmt-merge-msg.c:13
 msgid ""
 "git fmt-merge-msg [-m <message>] [--log[=<n>] | --no-log] [--file <file>]"
 msgstr ""
 "git fmt-merge-msg [-m <chú_thích>] [--log[=<n>] | --no-log] [--file <tập-"
 "tin>]"
 
-#: builtin/fmt-merge-msg.c:662 builtin/fmt-merge-msg.c:665 builtin/grep.c:698
+#: builtin/fmt-merge-msg.c:668 builtin/fmt-merge-msg.c:671 builtin/grep.c:698
 #: builtin/merge.c:198 builtin/repack.c:178 builtin/repack.c:182
-#: builtin/show-branch.c:657 builtin/show-ref.c:178 builtin/tag.c:590
-#: parse-options.h:132 parse-options.h:239
+#: builtin/show-branch.c:664 builtin/show-ref.c:180 builtin/tag.c:590
+#: parse-options.h:131 parse-options.h:238
 msgid "n"
 msgstr "n"
 
-#: builtin/fmt-merge-msg.c:663
+#: builtin/fmt-merge-msg.c:669
 msgid "populate log with at most <n> entries from shortlog"
 msgstr "gắn nhật ký với ít nhất <n> mục từ lệnh “shortlog”"
 
-#: builtin/fmt-merge-msg.c:666
+#: builtin/fmt-merge-msg.c:672
 msgid "alias for --log (deprecated)"
 msgstr "bí danh cho --log (không được dùng)"
 
-#: builtin/fmt-merge-msg.c:669
+#: builtin/fmt-merge-msg.c:675
 msgid "text"
 msgstr "văn bản"
 
-#: builtin/fmt-merge-msg.c:670
+#: builtin/fmt-merge-msg.c:676
 msgid "use <text> as start of message"
 msgstr "dùng <văn bản thường> để bắt đầu ghi chú"
 
-#: builtin/fmt-merge-msg.c:671
+#: builtin/fmt-merge-msg.c:677
 msgid "file to read from"
 msgstr "tập tin để đọc dữ liệu từ đó"
 
-#: builtin/for-each-ref.c:675
+#: builtin/for-each-ref.c:687
 msgid "unable to parse format"
 msgstr "không thể phân tích định dạng"
 
-#: builtin/for-each-ref.c:1063
+#: builtin/for-each-ref.c:1083
 msgid "git for-each-ref [<options>] [<pattern>]"
 msgstr "git for-each-ref [<các-tùy-chọn>] [<mẫu>]"
 
-#: builtin/for-each-ref.c:1078
+#: builtin/for-each-ref.c:1098
 msgid "quote placeholders suitably for shells"
 msgstr "trích dẫn để phù hợp cho hệ vỏ (shell)"
 
-#: builtin/for-each-ref.c:1080
+#: builtin/for-each-ref.c:1100
 msgid "quote placeholders suitably for perl"
 msgstr "trích dẫn để phù hợp cho perl"
 
-#: builtin/for-each-ref.c:1082
+#: builtin/for-each-ref.c:1102
 msgid "quote placeholders suitably for python"
 msgstr "trích dẫn để phù hợp cho python"
 
-#: builtin/for-each-ref.c:1084
+#: builtin/for-each-ref.c:1104
 msgid "quote placeholders suitably for Tcl"
 msgstr "trích dẫn để phù hợp cho Tcl"
 
-#: builtin/for-each-ref.c:1087
+#: builtin/for-each-ref.c:1107
 msgid "show only <n> matched refs"
 msgstr "hiển thị chỉ <n> tham chiếu khớp"
 
-#: builtin/for-each-ref.c:1088 builtin/replace.c:438
+#: builtin/for-each-ref.c:1108 builtin/replace.c:438
 msgid "format"
 msgstr "định dạng"
 
-#: builtin/for-each-ref.c:1088
+#: builtin/for-each-ref.c:1108
 msgid "format to use for the output"
 msgstr "định dạng sẽ dùng cho đầu ra"
 
-#: builtin/for-each-ref.c:1089
+#: builtin/for-each-ref.c:1109
 msgid "key"
 msgstr "khóa"
 
-#: builtin/for-each-ref.c:1090
+#: builtin/for-each-ref.c:1110
 msgid "field name to sort on"
 msgstr "tên trường cần sắp xếp"
 
 #: builtin/fsck.c:147 builtin/prune.c:137
 msgid "Checking connectivity"
 msgstr "Đang kiểm tra kết nối"
 
-#: builtin/fsck.c:540
+#: builtin/fsck.c:548
 msgid "Checking object directories"
 msgstr "Đang kiểm tra các thư mục đối tượng"
 
-#: builtin/fsck.c:603
+#: builtin/fsck.c:611
 msgid "git fsck [<options>] [<object>...]"
 msgstr "git fsck [<các-tùy-chọn>] [<đối-tượng>…]"
 
-#: builtin/fsck.c:609
+#: builtin/fsck.c:617
 msgid "show unreachable objects"
 msgstr "hiển thị các đối tượng không thể đọc được"
 
-#: builtin/fsck.c:610
+#: builtin/fsck.c:618
 msgid "show dangling objects"
 msgstr "hiển thị các đối tượng không được quản lý"
 
-#: builtin/fsck.c:611
+#: builtin/fsck.c:619
 msgid "report tags"
 msgstr "báo cáo các thẻ"
 
-#: builtin/fsck.c:612
+#: builtin/fsck.c:620
 msgid "report root nodes"
 msgstr "báo cáo node gốc"
 
-#: builtin/fsck.c:613
+#: builtin/fsck.c:621
 msgid "make index objects head nodes"
 msgstr "tạo “index objects head nodes”"
 
-#: builtin/fsck.c:614
+#: builtin/fsck.c:622
 msgid "make reflogs head nodes (default)"
 msgstr "tạo “reflogs head nodes” (mặc định)"
 
-#: builtin/fsck.c:615
+#: builtin/fsck.c:623
 msgid "also consider packs and alternate objects"
 msgstr "cũng cân nhắc đến các đối tượng gói và thay thế"
 
-#: builtin/fsck.c:616
+#: builtin/fsck.c:624
 msgid "enable more strict checking"
 msgstr "cho phép kiểm tra hạn chế hơn"
 
-#: builtin/fsck.c:618
+#: builtin/fsck.c:626
 msgid "write dangling objects in .git/lost-found"
 msgstr "ghi các đối tượng không được quản lý trong .git/lost-found"
 
-#: builtin/fsck.c:619 builtin/prune.c:108
+#: builtin/fsck.c:627 builtin/prune.c:107
 msgid "show progress"
 msgstr "hiển thị quá trình"
 
-#: builtin/fsck.c:669
+#: builtin/fsck.c:677
 msgid "Checking objects"
 msgstr "Đang kiểm tra các đối tượng"
 
 #: builtin/gc.c:24
 msgid "git gc [<options>]"
 msgstr "git gc [<các-tùy-chọn>]"
 
-#: builtin/gc.c:79
+#: builtin/gc.c:67
 #, c-format
-msgid "Invalid gc.pruneexpire: '%s'"
-msgstr "gc.pruneexpire không hợp lệ: “%s”"
+msgid "Invalid %s: '%s'"
+msgstr "%s không hợp lệ: “%s”"
 
-#: builtin/gc.c:107
+#: builtin/gc.c:112
 #, c-format
 msgid "insanely long object directory %.*s"
 msgstr "thư mục đối tượng dài một cách điên rồ %.*s"
 
-#: builtin/gc.c:276
+#: builtin/gc.c:281
 msgid "prune unreferenced objects"
 msgstr "xóa bỏ các đối tượng không được tham chiếu"
 
-#: builtin/gc.c:278
+#: builtin/gc.c:283
 msgid "be more thorough (increased runtime)"
 msgstr "cẩn thận hơn nữa (tăng thời gian chạy)"
 
-#: builtin/gc.c:279
+#: builtin/gc.c:284
 msgid "enable auto-gc mode"
 msgstr "bật chế độ auto-gc"
 
-#: builtin/gc.c:280
+#: builtin/gc.c:285
 msgid "force running gc even if there may be another gc running"
 msgstr "buộc gc chạy ngay cả khi có tiến trình gc khác đang chạy"
 
-#: builtin/gc.c:321
+#: builtin/gc.c:327
 #, c-format
 msgid "Auto packing the repository in background for optimum performance.\n"
 msgstr ""
 "Tự động đóng gói kho chứa trên nền hệ thống để tối ưu hóa hiệu suất làm "
 "việc.\n"
 
-#: builtin/gc.c:323
+#: builtin/gc.c:329
 #, c-format
 msgid "Auto packing the repository for optimum performance.\n"
 msgstr "Tự động đóng gói kho chứa để tối ưu hóa hiệu suất làm việc.\n"
 
-#: builtin/gc.c:324
+#: builtin/gc.c:330
 #, c-format
 msgid "See \"git help gc\" for manual housekeeping.\n"
 msgstr "Xem \"git help gc\" để có hướng dẫn cụ thể về cách dọn dẹp kho git.\n"
 
-#: builtin/gc.c:342
+#: builtin/gc.c:348
 #, c-format
 msgid ""
 "gc is already running on machine '%s' pid %<PRIuMAX> (use --force if not)"
 msgstr ""
 "gc đang được thực hiện trên máy “%s” pid %<PRIuMAX> (dùng --force nếu không "
 "phải thế)"
 
-#: builtin/gc.c:364
+#: builtin/gc.c:376
 msgid ""
 "There are too many unreachable loose objects; run 'git prune' to remove them."
 msgstr ""
 "Có quá nhiều đối tượng tự do không được dùng đến; hãy chạy lệnh “git prune” "
 "để xóa bỏ chúng đi."
 
@@ -5868,13 +5951,13 @@
 msgstr "hiển thị các tập tin khớp trong trang giấy"
 
 #: builtin/grep.c:740
 msgid "allow calling of grep(1) (ignored by this build)"
 msgstr "cho phép gọi grep(1) (bị bỏ qua bởi lần dịch này)"
 
-#: builtin/grep.c:741 builtin/show-ref.c:187
+#: builtin/grep.c:741 builtin/show-ref.c:189
 msgid "show usage"
 msgstr "hiển thị cách dùng"
 
 #: builtin/grep.c:808
 msgid "no pattern given."
 msgstr "chưa chỉ ra mẫu."
@@ -5898,50 +5981,50 @@
 msgstr "--[no-]exclude-standard không thể sử dụng cho nội dung lưu dấu vết."
 
 #: builtin/grep.c:908
 msgid "both --cached and trees are given."
 msgstr "cả hai --cached và các cây phải được chỉ ra."
 
-#: builtin/hash-object.c:82
+#: builtin/hash-object.c:80
 msgid ""
 "git hash-object [-t <type>] [-w] [--path=<file> | --no-filters] [--stdin] "
 "[--] <file>..."
 msgstr ""
 "git hash-object [-t <kiểu>] [-w] [--path=<tập-tin> | --no-filters] [--stdin] "
 "[--] <tập-tin>…"
 
-#: builtin/hash-object.c:83
+#: builtin/hash-object.c:81
 msgid "git hash-object  --stdin-paths < <list-of-paths>"
 msgstr "git hash-object  --stdin-paths < <danh-sách-đường-dẫn>"
 
-#: builtin/hash-object.c:94 builtin/tag.c:612
+#: builtin/hash-object.c:92 builtin/tag.c:612
 msgid "type"
 msgstr "kiểu"
 
-#: builtin/hash-object.c:94
+#: builtin/hash-object.c:92
 msgid "object type"
 msgstr "kiểu đối tượng"
 
-#: builtin/hash-object.c:95
+#: builtin/hash-object.c:93
 msgid "write the object into the object database"
 msgstr "ghi đối tượng vào dữ liệu đối tượng"
 
-#: builtin/hash-object.c:97
+#: builtin/hash-object.c:95
 msgid "read the object from stdin"
 msgstr "đọc đối tượng từ đầu vào tiêu chuẩn stdin"
 
-#: builtin/hash-object.c:99
+#: builtin/hash-object.c:97
 msgid "store file as is without filters"
 msgstr "lưu các tập tin mà nó không có các bộ lọc"
 
-#: builtin/hash-object.c:100
+#: builtin/hash-object.c:98
 msgid ""
 "just hash any random garbage to create corrupt objects for debugging Git"
 msgstr "chỉ cần băm rác ngẫu nhiên để tạo một đối tượng hỏng để mà gỡ lỗi Git"
 
-#: builtin/hash-object.c:101
+#: builtin/hash-object.c:99
 msgid "process file as it were from this path"
 msgstr "xử lý tập tin như là nó đang ở thư mục này"
 
 #: builtin/help.c:41
 msgid "print all available commands"
 msgstr "hiển thị danh sách các câu lệnh người dùng có thể sử dụng"
@@ -6063,292 +6146,292 @@
 
 #: builtin/help.c:501
 #, c-format
 msgid "`git %s' is aliased to `%s'"
 msgstr "“git %s” được đặt bí danh thành “%s”"
 
-#: builtin/index-pack.c:150
+#: builtin/index-pack.c:151
 #, c-format
 msgid "unable to open %s"
 msgstr "không thể mở %s"
 
-#: builtin/index-pack.c:200
+#: builtin/index-pack.c:201
 #, c-format
 msgid "object type mismatch at %s"
 msgstr "kiểu đối tượng không khớp tại %s"
 
-#: builtin/index-pack.c:220
+#: builtin/index-pack.c:221
 #, c-format
 msgid "did not receive expected object %s"
 msgstr "Không thể lấy về đối tượng cần %s"
 
-#: builtin/index-pack.c:223
+#: builtin/index-pack.c:224
 #, c-format
 msgid "object %s: expected type %s, found %s"
 msgstr "đối tượng %s: cần kiểu %s nhưng lại nhận được %s"
 
-#: builtin/index-pack.c:265
+#: builtin/index-pack.c:266
 #, c-format
 msgid "cannot fill %d byte"
 msgid_plural "cannot fill %d bytes"
 msgstr[0] "không thể điền thêm vào %d byte"
 
-#: builtin/index-pack.c:275
+#: builtin/index-pack.c:276
 msgid "early EOF"
 msgstr "gặp kết thúc tập tin EOF quá sớm"
 
-#: builtin/index-pack.c:276
+#: builtin/index-pack.c:277
 msgid "read error on input"
 msgstr "lỗi đọc ở đầu vào"
 
-#: builtin/index-pack.c:288
+#: builtin/index-pack.c:289
 msgid "used more bytes than were available"
 msgstr "sử dụng nhiều hơn số lượng byte mà nó sẵn có"
 
-#: builtin/index-pack.c:295
+#: builtin/index-pack.c:296
 msgid "pack too large for current definition of off_t"
 msgstr "gói quá lớn so với định nghĩa hiện tại của kiểu off_t"
 
-#: builtin/index-pack.c:311
+#: builtin/index-pack.c:312
 #, c-format
 msgid "unable to create '%s'"
 msgstr "không thể tạo “%s”"
 
-#: builtin/index-pack.c:316
+#: builtin/index-pack.c:317
 #, c-format
 msgid "cannot open packfile '%s'"
 msgstr "không thể mở packfile “%s”"
 
-#: builtin/index-pack.c:330
+#: builtin/index-pack.c:331
 msgid "pack signature mismatch"
 msgstr "chữ ký cho gói không khớp"
 
-#: builtin/index-pack.c:332
+#: builtin/index-pack.c:333
 #, c-format
 msgid "pack version %<PRIu32> unsupported"
 msgstr "không hỗ trợ phiên bản gói %<PRIu32>"
 
-#: builtin/index-pack.c:350
+#: builtin/index-pack.c:351
 #, c-format
 msgid "pack has bad object at offset %lu: %s"
 msgstr "gói có đối tượng sai khoảng bù (offset) %lu: %s"
 
-#: builtin/index-pack.c:471
+#: builtin/index-pack.c:472
 #, c-format
 msgid "inflate returned %d"
 msgstr "xả nén trả về %d"
 
-#: builtin/index-pack.c:520
+#: builtin/index-pack.c:521
 msgid "offset value overflow for delta base object"
 msgstr "tràn giá trị khoảng bù cho đối tượng delta cơ sở"
 
-#: builtin/index-pack.c:528
+#: builtin/index-pack.c:529
 msgid "delta base offset is out of bound"
 msgstr "khoảng bù cơ sở cho delta nằm ngoài phạm vi"
 
-#: builtin/index-pack.c:536
+#: builtin/index-pack.c:537
 #, c-format
 msgid "unknown object type %d"
 msgstr "không hiểu kiểu đối tượng %d"
 
-#: builtin/index-pack.c:567
+#: builtin/index-pack.c:568
 msgid "cannot pread pack file"
 msgstr "không thể chạy hàm pread cho tập tin gói"
 
-#: builtin/index-pack.c:569
+#: builtin/index-pack.c:570
 #, c-format
 msgid "premature end of pack file, %lu byte missing"
 msgid_plural "premature end of pack file, %lu bytes missing"
 msgstr[0] "tập tin gói bị kết thúc sớm, thiếu %lu byte"
 
-#: builtin/index-pack.c:595
+#: builtin/index-pack.c:596
 msgid "serious inflate inconsistency"
 msgstr "sự mâu thuẫn xả nén nghiêm trọng"
 
-#: builtin/index-pack.c:686 builtin/index-pack.c:692 builtin/index-pack.c:715
-#: builtin/index-pack.c:749 builtin/index-pack.c:758
+#: builtin/index-pack.c:742 builtin/index-pack.c:748 builtin/index-pack.c:771
+#: builtin/index-pack.c:805 builtin/index-pack.c:814
 #, c-format
 msgid "SHA1 COLLISION FOUND WITH %s !"
 msgstr "SỰ VA CHẠM SHA1 ĐÃ XẢY RA VỚI %s!"
 
-#: builtin/index-pack.c:689 builtin/pack-objects.c:162
+#: builtin/index-pack.c:745 builtin/pack-objects.c:162
 #: builtin/pack-objects.c:254
 #, c-format
 msgid "unable to read %s"
 msgstr "không thể đọc %s"
 
-#: builtin/index-pack.c:755
+#: builtin/index-pack.c:811
 #, c-format
 msgid "cannot read existing object %s"
 msgstr "không thể đọc đối tượng đã tồn tại %s"
 
-#: builtin/index-pack.c:769
+#: builtin/index-pack.c:825
 #, c-format
 msgid "invalid blob object %s"
 msgstr "đối tượng blob không hợp lệ %s"
 
-#: builtin/index-pack.c:783
+#: builtin/index-pack.c:839
 #, c-format
 msgid "invalid %s"
 msgstr "%s không hợp lệ"
 
-#: builtin/index-pack.c:787
+#: builtin/index-pack.c:843
 msgid "Error in object"
 msgstr "Lỗi trong đối tượng"
 
-#: builtin/index-pack.c:789
+#: builtin/index-pack.c:845
 #, c-format
 msgid "Not all child objects of %s are reachable"
 msgstr "Không phải tất cả các đối tượng con của %s là có thể với tới được"
 
-#: builtin/index-pack.c:861 builtin/index-pack.c:890
+#: builtin/index-pack.c:917 builtin/index-pack.c:948
 msgid "failed to apply delta"
 msgstr "gặp lỗi khi áp dụng delta"
 
-#: builtin/index-pack.c:1055
+#: builtin/index-pack.c:1118
 msgid "Receiving objects"
 msgstr "Đang nhận về các đối tượng"
 
-#: builtin/index-pack.c:1055
+#: builtin/index-pack.c:1118
 msgid "Indexing objects"
 msgstr "Các đối tượng bảng mục lục"
 
-#: builtin/index-pack.c:1081
+#: builtin/index-pack.c:1150
 msgid "pack is corrupted (SHA1 mismatch)"
 msgstr "gói bị sai hỏng (SHA1 không khớp)"
 
-#: builtin/index-pack.c:1086
+#: builtin/index-pack.c:1155
 msgid "cannot fstat packfile"
 msgstr "không thể lấy thông tin thống kê packfile"
 
-#: builtin/index-pack.c:1089
+#: builtin/index-pack.c:1158
 msgid "pack has junk at the end"
 msgstr "pack có phần thừa ở cuối"
 
-#: builtin/index-pack.c:1100
+#: builtin/index-pack.c:1169
 msgid "confusion beyond insanity in parse_pack_objects()"
 msgstr "lộn xộn hơn cả điên rồ khi chạy hàm parse_pack_objects()"
 
-#: builtin/index-pack.c:1123
+#: builtin/index-pack.c:1194
 msgid "Resolving deltas"
 msgstr "Đang phân giải các delta"
 
-#: builtin/index-pack.c:1133
+#: builtin/index-pack.c:1205
 #, c-format
 msgid "unable to create thread: %s"
 msgstr "không thể tạo tuyến: %s"
 
-#: builtin/index-pack.c:1175
+#: builtin/index-pack.c:1247
 msgid "confusion beyond insanity"
 msgstr "lộn xộn hơn cả điên rồ"
 
-#: builtin/index-pack.c:1181
+#: builtin/index-pack.c:1253
 #, c-format
 msgid "completed with %d local objects"
 msgstr "đầy đủ với %d đối tượng nội bộ"
 
-#: builtin/index-pack.c:1191
+#: builtin/index-pack.c:1263
 #, c-format
 msgid "Unexpected tail checksum for %s (disk corruption?)"
 msgstr "Tổng kiểm tra tail không như mong đợi cho %s (đĩa hỏng?)"
 
-#: builtin/index-pack.c:1195
+#: builtin/index-pack.c:1267
 #, c-format
 msgid "pack has %d unresolved delta"
 msgid_plural "pack has %d unresolved deltas"
 msgstr[0] "gói có %d delta chưa được giải quyết"
 
-#: builtin/index-pack.c:1219
+#: builtin/index-pack.c:1291
 #, c-format
 msgid "unable to deflate appended object (%d)"
 msgstr "không thể xả nén đối tượng nối thêm (%d)"
 
-#: builtin/index-pack.c:1298
+#: builtin/index-pack.c:1367
 #, c-format
 msgid "local object %s is corrupt"
 msgstr "đối tượng nội bộ %s bị hỏng"
 
-#: builtin/index-pack.c:1322
+#: builtin/index-pack.c:1391
 msgid "error while closing pack file"
 msgstr "gặp lỗi trong khi đóng tập tin gói"
 
-#: builtin/index-pack.c:1335
+#: builtin/index-pack.c:1404
 #, c-format
 msgid "cannot write keep file '%s'"
 msgstr "không thể ghi tập tin giữ lại “%s”"
 
-#: builtin/index-pack.c:1343
+#: builtin/index-pack.c:1412
 #, c-format
 msgid "cannot close written keep file '%s'"
 msgstr "không thể đóng tập tin giữ lại đã được ghi “%s”"
 
-#: builtin/index-pack.c:1356
+#: builtin/index-pack.c:1425
 msgid "cannot store pack file"
 msgstr "không thể lưu tập tin gói"
 
-#: builtin/index-pack.c:1367
+#: builtin/index-pack.c:1436
 msgid "cannot store index file"
 msgstr "không thể lưu trữ tập tin ghi mục lục"
 
-#: builtin/index-pack.c:1400
+#: builtin/index-pack.c:1469
 #, c-format
 msgid "bad pack.indexversion=%<PRIu32>"
 msgstr "sai pack.indexversion=%<PRIu32>"
 
-#: builtin/index-pack.c:1406
+#: builtin/index-pack.c:1475
 #, c-format
 msgid "invalid number of threads specified (%d)"
 msgstr "số tuyến chỉ ra không hợp lệ (%d)"
 
-#: builtin/index-pack.c:1410 builtin/index-pack.c:1589
+#: builtin/index-pack.c:1479 builtin/index-pack.c:1658
 #, c-format
 msgid "no threads support, ignoring %s"
 msgstr "không hỗ trợ đa tuyến, bỏ qua %s"
 
-#: builtin/index-pack.c:1468
+#: builtin/index-pack.c:1537
 #, c-format
 msgid "Cannot open existing pack file '%s'"
 msgstr "Không thể mở tập tin gói đã sẵn có “%s”"
 
-#: builtin/index-pack.c:1470
+#: builtin/index-pack.c:1539
 #, c-format
 msgid "Cannot open existing pack idx file for '%s'"
 msgstr "Không thể mở tập tin idx của gói cho “%s”"
 
-#: builtin/index-pack.c:1517
+#: builtin/index-pack.c:1586
 #, c-format
 msgid "non delta: %d object"
 msgid_plural "non delta: %d objects"
 msgstr[0] "không delta: %d đối tượng"
 
-#: builtin/index-pack.c:1524
+#: builtin/index-pack.c:1593
 #, c-format
 msgid "chain length = %d: %lu object"
 msgid_plural "chain length = %d: %lu objects"
 msgstr[0] "chiều dài xích = %d: %lu đối tượng"
 
-#: builtin/index-pack.c:1553
+#: builtin/index-pack.c:1622
 msgid "Cannot come back to cwd"
 msgstr "Không thể quay lại cwd"
 
-#: builtin/index-pack.c:1601 builtin/index-pack.c:1604
-#: builtin/index-pack.c:1616 builtin/index-pack.c:1620
+#: builtin/index-pack.c:1670 builtin/index-pack.c:1673
+#: builtin/index-pack.c:1685 builtin/index-pack.c:1689
 #, c-format
 msgid "bad %s"
 msgstr "%s sai"
 
-#: builtin/index-pack.c:1634
+#: builtin/index-pack.c:1703
 msgid "--fix-thin cannot be used without --stdin"
 msgstr "--fix-thin không thể được dùng mà không có --stdin"
 
-#: builtin/index-pack.c:1638 builtin/index-pack.c:1647
+#: builtin/index-pack.c:1707 builtin/index-pack.c:1716
 #, c-format
 msgid "packfile name '%s' does not end with '.pack'"
 msgstr "tên tập tin tập tin gói “%s” không được kết thúc bằng đuôi “.pack”"
 
-#: builtin/index-pack.c:1655
+#: builtin/index-pack.c:1724
 msgid "--verify with no packfile name given"
 msgstr "dùng tùy chọn --verify mà không đưa ra tên packfile"
 
 #: builtin/init-db.c:35
 #, c-format
 msgid "Could not make %s writable by group"
@@ -6411,92 +6494,92 @@
 
 #: builtin/init-db.c:157
 #, c-format
 msgid "not copying templates of a wrong format version %d from '%s'"
 msgstr "không sao chép các mẫu của phiên bản sai định dạng %d từ “%s”"
 
-#: builtin/init-db.c:197
+#: builtin/init-db.c:211
 #, c-format
 msgid "insane git directory %s"
 msgstr "thư mục git điên rồ %s"
 
-#: builtin/init-db.c:331 builtin/init-db.c:334
+#: builtin/init-db.c:343 builtin/init-db.c:346
 #, c-format
 msgid "%s already exists"
 msgstr "%s đã có từ trước rồi"
 
-#: builtin/init-db.c:363
+#: builtin/init-db.c:374
 #, c-format
 msgid "unable to handle file type %d"
 msgstr "không thể xử lý (handle) tập tin kiểu %d"
 
-#: builtin/init-db.c:366
+#: builtin/init-db.c:377
 #, c-format
 msgid "unable to move %s to %s"
 msgstr "không di chuyển được %s vào %s"
 
 #. TRANSLATORS: The first '%s' is either "Reinitialized
 #. existing" or "Initialized empty", the second " shared" or
 #. "", and the last '%s%s' is the verbatim directory name.
-#: builtin/init-db.c:426
+#: builtin/init-db.c:433
 #, c-format
 msgid "%s%s Git repository in %s%s\n"
 msgstr "%s%s kho Git trong %s%s\n"
 
-#: builtin/init-db.c:427
+#: builtin/init-db.c:434
 msgid "Reinitialized existing"
 msgstr "Khởi tạo lại đã sẵn có rồi"
 
-#: builtin/init-db.c:427
+#: builtin/init-db.c:434
 msgid "Initialized empty"
 msgstr "Khởi tạo trống rỗng"
 
-#: builtin/init-db.c:428
+#: builtin/init-db.c:435
 msgid " shared"
 msgstr " đã chia sẻ"
 
-#: builtin/init-db.c:475
+#: builtin/init-db.c:482
 msgid ""
-"git init [-q | --quiet] [--bare] [--template=<template-directory>] [--shared"
-"[=<permissions>]] [<directory>]"
+"git init [-q | --quiet] [--bare] [--template=<template-directory>] [--"
+"shared[=<permissions>]] [<directory>]"
 msgstr ""
 "git init [-q | --quiet] [--bare] [--template=<thư-mục-tạm>] [--shared[=<các-"
 "quyền>]] [thư-mục]"
 
-#: builtin/init-db.c:498
+#: builtin/init-db.c:505
 msgid "permissions"
 msgstr "các quyền"
 
-#: builtin/init-db.c:499
+#: builtin/init-db.c:506
 msgid "specify that the git repository is to be shared amongst several users"
 msgstr "chỉ ra cái mà kho git được chia sẻ giữa nhiều người dùng"
 
-#: builtin/init-db.c:501 builtin/prune-packed.c:57 builtin/repack.c:171
+#: builtin/init-db.c:508 builtin/prune-packed.c:57 builtin/repack.c:171
 msgid "be quiet"
 msgstr "im lặng"
 
-#: builtin/init-db.c:533 builtin/init-db.c:538
+#: builtin/init-db.c:540 builtin/init-db.c:545
 #, c-format
 msgid "cannot mkdir %s"
 msgstr "không thể mkdir (tạo thư mục): %s"
 
-#: builtin/init-db.c:542
+#: builtin/init-db.c:549
 #, c-format
 msgid "cannot chdir to %s"
 msgstr "không thể chdir (chuyển đổi thư mục) sang %s"
 
-#: builtin/init-db.c:563
+#: builtin/init-db.c:570
 #, c-format
 msgid ""
 "%s (or --work-tree=<directory>) not allowed without specifying %s (or --git-"
 "dir=<directory>)"
 msgstr ""
 "%s (hoặc --work-tree=<thư-mục>) không cho phép không chỉ định %s (hoặc --git-"
 "dir=<thư-mục>)"
 
-#: builtin/init-db.c:591
+#: builtin/init-db.c:598
 #, c-format
 msgid "Cannot access work tree '%s'"
 msgstr "không thể truy cập cây (tree) làm việc “%s”"
 
 #: builtin/interpret-trailers.c:15
 msgid ""
@@ -6516,14 +6599,14 @@
 
 #: builtin/interpret-trailers.c:27
 msgid "trailer(s) to add"
 msgstr "bộ dò vết cần thêm"
 
 #: builtin/log.c:41
-msgid "git log [<options>] [<revision range>] [[--] <path>...]"
-msgstr "git log [<các-tùy-chọn>] [<vùng xem xét>] [[--] <đường-dẫn>…]"
+msgid "git log [<options>] [<revision-range>] [[--] <path>...]"
+msgstr "git log [<các-tùy-chọn>] [<vùng-xem-xét>] [[--] <đường-dẫn>…]"
 
 #: builtin/log.c:42
 msgid "git show [<options>] <object>..."
 msgstr "git show [<các-tùy-chọn>] <đối-tượng>…"
 
 #: builtin/log.c:81
@@ -6585,13 +6668,13 @@
 msgstr "Không thể mở tập tin miếng vá: %s"
 
 #: builtin/log.c:803
 msgid "Need exactly one range."
 msgstr "Cần chính xác một vùng."
 
-#: builtin/log.c:811
+#: builtin/log.c:813
 msgid "Not a range."
 msgstr "Không phải là một vùng."
 
 #: builtin/log.c:919
 msgid "Cover letter needs email format"
 msgstr "“Cover letter” cần cho định dạng thư"
@@ -6786,21 +6869,21 @@
 msgstr "Gặp lỗi khi tạo các tập tin kết xuất"
 
 #: builtin/log.c:1583
 msgid "git cherry [-v] [<upstream> [<head> [<limit>]]]"
 msgstr "git cherry [-v] [<thượng-nguồn> [<đầu> [<giới-hạn>]]]"
 
-#: builtin/log.c:1638
+#: builtin/log.c:1637
 #, c-format
 msgid ""
 "Could not find a tracked remote branch, please specify <upstream> manually.\n"
 msgstr ""
 "Không tìm thấy nhánh mạng được theo dõi, hãy chỉ định <thượng-nguồn> một "
 "cách thủ công.\n"
 
-#: builtin/log.c:1651 builtin/log.c:1653 builtin/log.c:1665
+#: builtin/log.c:1648 builtin/log.c:1650 builtin/log.c:1662
 #, c-format
 msgid "Unknown commit %s"
 msgstr "Không hiểu lần chuyển giao %s"
 
 #: builtin/ls-files.c:358
 msgid "git ls-files [<options>] [<file>...]"
@@ -6991,17 +7074,17 @@
 #: builtin/merge.c:206
 msgid "edit message before committing"
 msgstr "sửa chú thích trước khi chuyển giao"
 
 #: builtin/merge.c:207
 msgid "allow fast-forward (default)"
-msgstr "cho phép fast-forward (mặc định)"
+msgstr "cho phép chuyển-tiếp-nhanh (mặc định)"
 
 #: builtin/merge.c:209
 msgid "abort if fast-forward is not possible"
-msgstr "bỏ qua nếu fast-forward không thể được"
+msgstr "bỏ qua nếu chuyển-tiếp-nhanh không thể được"
 
 #: builtin/merge.c:213
 msgid "Verify that the named commit has a valid GPG signature"
 msgstr "Thẩm tra xem lần chuyển giao có tên đó có chữ ký GPG hợp lệ hay không"
 
 #: builtin/merge.c:214 builtin/notes.c:753 builtin/revert.c:89
@@ -7020,13 +7103,14 @@
 msgid "option for selected merge strategy"
 msgstr "tùy chọn cho chiến lược hòa trộn đã chọn"
 
 #: builtin/merge.c:219
 msgid "merge commit message (for a non-fast-forward merge)"
 msgstr ""
-"hòa trộn ghi chú của lần chuyển giao (dành cho hòa trộn non-fast-forward)"
+"hòa trộn ghi chú của lần chuyển giao (dành cho hòa trộn không-chuyển-tiếp-"
+"nhanh)"
 
 #: builtin/merge.c:223
 msgid "abort the current in-progress merge"
 msgstr "bãi bỏ quá trình hòa trộn hiện tại đang thực hiện"
 
 #: builtin/merge.c:251
@@ -7070,48 +7154,48 @@
 
 #: builtin/merge.c:447
 #, c-format
 msgid "'%s' does not point to a commit"
 msgstr "“%s” không chỉ đến một lần chuyển giao nào cả"
 
-#: builtin/merge.c:559
+#: builtin/merge.c:537
 #, c-format
 msgid "Bad branch.%s.mergeoptions string: %s"
 msgstr "Chuỗi branch.%s.mergeoptions sai: %s"
 
-#: builtin/merge.c:654
+#: builtin/merge.c:632
 msgid "git write-tree failed to write a tree"
 msgstr "lệnh git write-tree gặp lỗi khi ghi một cây"
 
-#: builtin/merge.c:678
+#: builtin/merge.c:656
 msgid "Not handling anything other than two heads merge."
 msgstr "Không cầm nắm gì ngoài hai head hòa trộn"
 
-#: builtin/merge.c:692
+#: builtin/merge.c:670
 #, c-format
 msgid "Unknown option for merge-recursive: -X%s"
 msgstr "Không hiểu tùy chọn cho merge-recursive: -X%s"
 
-#: builtin/merge.c:705
+#: builtin/merge.c:683
 #, c-format
 msgid "unable to write %s"
 msgstr "không thể ghi %s"
 
-#: builtin/merge.c:794
+#: builtin/merge.c:772
 #, c-format
 msgid "Could not read from '%s'"
 msgstr "Không thể đọc từ “%s”"
 
-#: builtin/merge.c:803
+#: builtin/merge.c:781
 #, c-format
 msgid "Not committing merge; use 'git commit' to complete the merge.\n"
 msgstr ""
 "Vẫn chưa hòa trộn các lần chuyển giao; sử dụng lệnh “git commit” để hoàn tất "
 "việc hòa trộn.\n"
 
-#: builtin/merge.c:809
+#: builtin/merge.c:787
 #, c-format
 msgid ""
 "Please enter a commit message to explain why this merge is necessary,\n"
 "especially if it merges an updated upstream into a topic branch.\n"
 "\n"
 "Lines starting with '%c' will be ignored, and an empty message aborts\n"
@@ -7123,172 +7207,177 @@
 "topic.\n"
 "\n"
 "Những dòng được bắt đầu bằng “%c” sẽ được bỏ qua, và phần chú thích này nếu "
 "rỗng\n"
 "sẽ hủy bỏ lần chuyển giao.\n"
 
-#: builtin/merge.c:833
+#: builtin/merge.c:811
 msgid "Empty commit message."
 msgstr "Chú thích của lần commit (chuyển giao) bị trống rỗng."
 
-#: builtin/merge.c:845
+#: builtin/merge.c:823
 #, c-format
 msgid "Wonderful.\n"
 msgstr "Thần kỳ.\n"
 
-#: builtin/merge.c:900
+#: builtin/merge.c:878
 #, c-format
 msgid "Automatic merge failed; fix conflicts and then commit the result.\n"
 msgstr ""
 "Việc tự động hòa trộn gặp lỗi; hãy sửa các xung đột sau đó chuyển giao kết "
 "quả.\n"
 
-#: builtin/merge.c:916
+#: builtin/merge.c:894
 #, c-format
 msgid "'%s' is not a commit"
 msgstr "%s không phải là một lần commit (chuyển giao)"
 
-#: builtin/merge.c:957
+#: builtin/merge.c:935
 msgid "No current branch."
 msgstr "không phải nhánh hiện hành"
 
-#: builtin/merge.c:959
+#: builtin/merge.c:937
 msgid "No remote for the current branch."
 msgstr "Không có máy chủ cho nhánh hiện hành."
 
-#: builtin/merge.c:961
+#: builtin/merge.c:939
 msgid "No default upstream defined for the current branch."
 msgstr "Không có thượng nguồn mặc định được định nghĩa cho nhánh hiện hành."
 
-#: builtin/merge.c:966
+#: builtin/merge.c:944
 #, c-format
 msgid "No remote-tracking branch for %s from %s"
 msgstr "Không nhánh mạng theo dõi cho %s từ %s"
 
-#: builtin/merge.c:1122
+#: builtin/merge.c:1081
+#, c-format
+msgid "could not close '%s'"
+msgstr "không thể đóng “%s”"
+
+#: builtin/merge.c:1208
 msgid "There is no merge to abort (MERGE_HEAD missing)."
 msgstr ""
 "Ở đây không có lần hòa trộn nào được hủy bỏ giữa chừng cả (thiếu MERGE_HEAD)."
 
-#: builtin/merge.c:1138
+#: builtin/merge.c:1224
 msgid ""
 "You have not concluded your merge (MERGE_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 "Bạn chưa kết thúc việc hòa trộn (MERGE_HEAD vẫn tồn tại).\n"
 "Hãy chuyển giao các thay đổi trước khi bạn có thể hòa trộn."
 
-#: builtin/merge.c:1141 git-pull.sh:34
+#: builtin/merge.c:1227 git-pull.sh:74
 msgid "You have not concluded your merge (MERGE_HEAD exists)."
 msgstr "Bạn chưa kết thúc việc hòa trộn (MERGE_HEAD vẫn tồn tại)."
 
-#: builtin/merge.c:1145
+#: builtin/merge.c:1231
 msgid ""
 "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 "Bạn chưa kết thúc việc cherry-pick (CHERRY_PICK_HEAD vẫn tồn tại).\n"
 "Hãy chuyển giao các thay đổi trước khi bạn có thể hòa trộn."
 
-#: builtin/merge.c:1148
+#: builtin/merge.c:1234
 msgid "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists)."
 msgstr "Bạn chưa kết thúc việc cherry-pick (CHERRY_PICK_HEAD vẫn tồn tại)."
 
-#: builtin/merge.c:1157
+#: builtin/merge.c:1243
 msgid "You cannot combine --squash with --no-ff."
 msgstr "Bạn không thể kết hợp --squash với --no-ff."
 
-#: builtin/merge.c:1166
+#: builtin/merge.c:1251
 msgid "No commit specified and merge.defaultToUpstream not set."
 msgstr "Không chỉ ra lần chuyển giao và merge.defaultToUpstream chưa được đặt."
 
-#: builtin/merge.c:1198
-msgid "Can merge only exactly one commit into empty head"
-msgstr ""
-"Không thể hòa trộn một cách đúng đắn một lần chuyển giao vào một head rỗng"
-
-#: builtin/merge.c:1201
+#: builtin/merge.c:1268
 msgid "Squash commit into empty head not supported yet"
 msgstr "Squash commit vào một head trống rỗng vẫn chưa được hỗ trợ"
 
-#: builtin/merge.c:1203
+#: builtin/merge.c:1270
 msgid "Non-fast-forward commit does not make sense into an empty head"
 msgstr ""
-"Chuyển giao không-fast-forward không hợp lý ở trong một head trống rỗng"
+"Chuyển giao không-chuyển-tiếp-nhanh không hợp lý ở trong một head trống rỗng"
 
-#: builtin/merge.c:1208
+#: builtin/merge.c:1276
 #, c-format
 msgid "%s - not something we can merge"
 msgstr "%s - không phải là một số thứ chúng tôi có thể hòa trộn"
 
-#: builtin/merge.c:1259
+#: builtin/merge.c:1278
+msgid "Can merge only exactly one commit into empty head"
+msgstr ""
+"Không thể hòa trộn một cách đúng đắn một lần chuyển giao vào một head rỗng"
+
+#: builtin/merge.c:1333
 #, c-format
 msgid "Commit %s has an untrusted GPG signature, allegedly by %s."
 msgstr ""
 "Lần chuyển giao %s có một chữ ký GPG không đáng tin, được cho là bởi %s."
 
-#: builtin/merge.c:1262
+#: builtin/merge.c:1336
 #, c-format
 msgid "Commit %s has a bad GPG signature allegedly by %s."
 msgstr "Lần chuyển giao %s có một chữ ký GPG sai, được cho là bởi %s."
 
-#: builtin/merge.c:1265
+#: builtin/merge.c:1339
 #, c-format
 msgid "Commit %s does not have a GPG signature."
 msgstr "Lần chuyển giao %s không có chữ ký GPG."
 
-#: builtin/merge.c:1268
+#: builtin/merge.c:1342
 #, c-format
 msgid "Commit %s has a good GPG signature by %s\n"
 msgstr "Lần chuyển giao %s có một chữ ký GPG tốt bởi %s\n"
 
-#: builtin/merge.c:1349
+#: builtin/merge.c:1423
 #, c-format
 msgid "Updating %s..%s\n"
 msgstr "Đang cập nhật %s..%s\n"
 
-#: builtin/merge.c:1388
+#: builtin/merge.c:1462
 #, c-format
 msgid "Trying really trivial in-index merge...\n"
 msgstr "Đang thử hòa trộn kiểu “trivial in-index”…\n"
 
-#: builtin/merge.c:1395
+#: builtin/merge.c:1469
 #, c-format
 msgid "Nope.\n"
 msgstr "Không.\n"
 
-#: builtin/merge.c:1427
+#: builtin/merge.c:1501
 msgid "Not possible to fast-forward, aborting."
-msgstr "Thực hiện lệnh fast-forward là không thể được, đang bỏ qua."
+msgstr "Thực hiện lệnh chuyển-tiếp-nhanh là không thể được, đang bỏ qua."
 
-#: builtin/merge.c:1450 builtin/merge.c:1529
+#: builtin/merge.c:1524 builtin/merge.c:1603
 #, c-format
 msgid "Rewinding the tree to pristine...\n"
 msgstr "Đang tua lại cây thành thời xa xưa…\n"
 
-#: builtin/merge.c:1454
+#: builtin/merge.c:1528
 #, c-format
 msgid "Trying merge strategy %s...\n"
 msgstr "Đang thử chiến lược hòa trộn %s…\n"
 
-#: builtin/merge.c:1520
+#: builtin/merge.c:1594
 #, c-format
 msgid "No merge strategy handled the merge.\n"
 msgstr "Không có chiến lược hòa trộn nào được nắm giữ (handle) sự hòa trộn.\n"
 
-#: builtin/merge.c:1522
+#: builtin/merge.c:1596
 #, c-format
 msgid "Merge with strategy %s failed.\n"
 msgstr "Hòa trộn với chiến lược %s gặp lỗi.\n"
 
-#: builtin/merge.c:1531
+#: builtin/merge.c:1605
 #, c-format
 msgid "Using the %s to prepare resolving by hand.\n"
 msgstr "Sử dụng %s để chuẩn bị giải quyết bằng tay.\n"
 
-#: builtin/merge.c:1543
+#: builtin/merge.c:1617
 #, c-format
 msgid "Automatic merge went well; stopped before committing as requested\n"
 msgstr ""
 "Hòa trộn tự động đã trở nên tốt; bị dừng trước khi việc chuyển giao được yêu "
 "cầu\n"
 
@@ -7473,13 +7562,13 @@
 
 #: builtin/mv.c:253
 #, c-format
 msgid "Renaming %s to %s\n"
 msgstr "Đổi tên %s thành %s\n"
 
-#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:359
+#: builtin/mv.c:256 builtin/remote.c:725 builtin/repack.c:361
 #, c-format
 msgid "renaming '%s' failed"
 msgstr "gặp lỗi khi đổi tên “%s”"
 
 #: builtin/name-rev.c:255
 msgid "git name-rev [<options>] <commit>..."
@@ -7849,13 +7938,13 @@
 msgstr "notes-ref"
 
 #: builtin/notes.c:954
 msgid "use notes from <notes-ref>"
 msgstr "dùng “notes” từ <notes-ref>"
 
-#: builtin/notes.c:989 builtin/remote.c:1621
+#: builtin/notes.c:989 builtin/remote.c:1618
 #, c-format
 msgid "Unknown subcommand: %s"
 msgstr "Không hiểu câu lệnh con: %s"
 
 #: builtin/pack-objects.c:28
 msgid "git pack-objects --stdout [options...] [< ref-list | < object-list]"
@@ -7875,178 +7964,178 @@
 msgstr "lỗi giải nén (%d)"
 
 #: builtin/pack-objects.c:771
 msgid "Writing objects"
 msgstr "Đang ghi lại các đối tượng"
 
-#: builtin/pack-objects.c:1013
+#: builtin/pack-objects.c:1011
 msgid "disabling bitmap writing, as some objects are not being packed"
 msgstr "tắt ghi bitmap, như vậy một số đối tượng sẽ không được đóng gói"
 
-#: builtin/pack-objects.c:2173
+#: builtin/pack-objects.c:2171
 msgid "Compressing objects"
 msgstr "Đang nén các đối tượng"
 
-#: builtin/pack-objects.c:2570
+#: builtin/pack-objects.c:2568
 #, c-format
 msgid "unsupported index version %s"
 msgstr "phiên bản mục lục không được hỗ trợ %s"
 
-#: builtin/pack-objects.c:2574
+#: builtin/pack-objects.c:2572
 #, c-format
 msgid "bad index version '%s'"
 msgstr "phiên bản mục lục sai “%s”"
 
-#: builtin/pack-objects.c:2597
+#: builtin/pack-objects.c:2595
 #, c-format
 msgid "option %s does not accept negative form"
 msgstr "tùy chọn %s không chấp nhận dạng thức âm"
 
-#: builtin/pack-objects.c:2601
+#: builtin/pack-objects.c:2599
 #, c-format
 msgid "unable to parse value '%s' for option %s"
 msgstr "không thể phân tích giá trị “%s” cho tùy chọn %s"
 
-#: builtin/pack-objects.c:2621
+#: builtin/pack-objects.c:2619
 msgid "do not show progress meter"
 msgstr "không hiển thị bộ đo tiến trình"
 
-#: builtin/pack-objects.c:2623
+#: builtin/pack-objects.c:2621
 msgid "show progress meter"
 msgstr "hiển thị bộ đo tiến trình"
 
-#: builtin/pack-objects.c:2625
+#: builtin/pack-objects.c:2623
 msgid "show progress meter during object writing phase"
 msgstr "hiển thị bộ đo tiến triển trong suốt pha ghi đối tượng"
 
-#: builtin/pack-objects.c:2628
+#: builtin/pack-objects.c:2626
 msgid "similar to --all-progress when progress meter is shown"
 msgstr "tương tự --all-progress khi bộ đo tiến trình được xuất hiện"
 
-#: builtin/pack-objects.c:2629
+#: builtin/pack-objects.c:2627
 msgid "version[,offset]"
 msgstr "phiên bản[,offset]"
 
-#: builtin/pack-objects.c:2630
+#: builtin/pack-objects.c:2628
 msgid "write the pack index file in the specified idx format version"
 msgstr "ghi tập tin bảng mục lục gói (pack) ở phiên bản định dạng idx đã cho"
 
-#: builtin/pack-objects.c:2633
+#: builtin/pack-objects.c:2631
 msgid "maximum size of each output pack file"
 msgstr "kcíh thước tối đa cho tập tin gói được tạo"
 
-#: builtin/pack-objects.c:2635
+#: builtin/pack-objects.c:2633
 msgid "ignore borrowed objects from alternate object store"
 msgstr "bỏ qua các đối tượng vay mượn từ kho đối tượng thay thế"
 
-#: builtin/pack-objects.c:2637
+#: builtin/pack-objects.c:2635
 msgid "ignore packed objects"
 msgstr "bỏ qua các đối tượng đóng gói"
 
-#: builtin/pack-objects.c:2639
+#: builtin/pack-objects.c:2637
 msgid "limit pack window by objects"
 msgstr "giới hạn cửa sổ đóng gói theo đối tượng"
 
-#: builtin/pack-objects.c:2641
+#: builtin/pack-objects.c:2639
 msgid "limit pack window by memory in addition to object limit"
 msgstr "giới hạn cửa sổ đóng gói theo bộ nhớ cộng thêm với giới hạn đối tượng"
 
-#: builtin/pack-objects.c:2643
+#: builtin/pack-objects.c:2641
 msgid "maximum length of delta chain allowed in the resulting pack"
 msgstr "độ dài tối đa của chuỗi móc xích “delta” được phép trong gói kết quả"
 
-#: builtin/pack-objects.c:2645
+#: builtin/pack-objects.c:2643
 msgid "reuse existing deltas"
 msgstr "dùng lại các delta sẵn có"
 
-#: builtin/pack-objects.c:2647
+#: builtin/pack-objects.c:2645
 msgid "reuse existing objects"
 msgstr "dùng lại các đối tượng sẵn có"
 
-#: builtin/pack-objects.c:2649
+#: builtin/pack-objects.c:2647
 msgid "use OFS_DELTA objects"
 msgstr "dùng các đối tượng OFS_DELTA"
 
-#: builtin/pack-objects.c:2651
+#: builtin/pack-objects.c:2649
 msgid "use threads when searching for best delta matches"
 msgstr "sử dụng các tuyến trình khi tìm kiếm cho các mẫu khớp delta tốt nhất"
 
-#: builtin/pack-objects.c:2653
+#: builtin/pack-objects.c:2651
 msgid "do not create an empty pack output"
 msgstr "không thể tạo kết xuất gói trống rỗng"
 
-#: builtin/pack-objects.c:2655
+#: builtin/pack-objects.c:2653
 msgid "read revision arguments from standard input"
 msgstr " đọc tham số “revision” từ thiết bị nhập chuẩn"
 
-#: builtin/pack-objects.c:2657
+#: builtin/pack-objects.c:2655
 msgid "limit the objects to those that are not yet packed"
 msgstr "giới hạn các đối tượng thành những cái mà chúng vẫn chưa được đóng gói"
 
-#: builtin/pack-objects.c:2660
+#: builtin/pack-objects.c:2658
 msgid "include objects reachable from any reference"
 msgstr "bao gồm các đối tượng có thể đọc được từ bất kỳ tham chiếu nào"
 
-#: builtin/pack-objects.c:2663
+#: builtin/pack-objects.c:2661
 msgid "include objects referred by reflog entries"
 msgstr "bao gồm các đối tượng được tham chiếu bởi các mục reflog"
 
-#: builtin/pack-objects.c:2666
+#: builtin/pack-objects.c:2664
 msgid "include objects referred to by the index"
 msgstr "bao gồm các đối tượng được tham chiếu bởi mục lục"
 
-#: builtin/pack-objects.c:2669
+#: builtin/pack-objects.c:2667
 msgid "output pack to stdout"
 msgstr "xuất gói ra đầu ra tiêu chuẩn"
 
-#: builtin/pack-objects.c:2671
+#: builtin/pack-objects.c:2669
 msgid "include tag objects that refer to objects to be packed"
 msgstr "bao gồm các đối tượng tham chiếu đến các đối tượng được đóng gói"
 
-#: builtin/pack-objects.c:2673
+#: builtin/pack-objects.c:2671
 msgid "keep unreachable objects"
 msgstr "giữ lại các đối tượng không thể đọc được"
 
-#: builtin/pack-objects.c:2674 parse-options.h:140
+#: builtin/pack-objects.c:2672 parse-options.h:139
 msgid "time"
 msgstr "thời-gian"
 
-#: builtin/pack-objects.c:2675
+#: builtin/pack-objects.c:2673
 msgid "unpack unreachable objects newer than <time>"
 msgstr ""
 "xả nén (gỡ khỏi gói) các đối tượng không thể đọc được mới hơn <thời-gian>"
 
-#: builtin/pack-objects.c:2678
+#: builtin/pack-objects.c:2676
 msgid "create thin packs"
 msgstr "tạo gói nhẹ"
 
-#: builtin/pack-objects.c:2680
+#: builtin/pack-objects.c:2678
 msgid "create packs suitable for shallow fetches"
 msgstr "tạo gói để phù hợp cho lấy về nông (shallow)"
 
-#: builtin/pack-objects.c:2682
+#: builtin/pack-objects.c:2680
 msgid "ignore packs that have companion .keep file"
 msgstr "bỏ qua các gói mà nó có tập tin .keep đi kèm"
 
-#: builtin/pack-objects.c:2684
+#: builtin/pack-objects.c:2682
 msgid "pack compression level"
 msgstr "mức nén gói"
 
-#: builtin/pack-objects.c:2686
+#: builtin/pack-objects.c:2684
 msgid "do not hide commits by grafts"
 msgstr "không ẩn các lần chuyển giao bởi “grafts”"
 
-#: builtin/pack-objects.c:2688
+#: builtin/pack-objects.c:2686
 msgid "use a bitmap index if available to speed up counting objects"
 msgstr "dùng mục lục ánh xạ nếu có thể được để nâng cao tốc độ đếm đối tượng"
 
-#: builtin/pack-objects.c:2690
+#: builtin/pack-objects.c:2688
 msgid "write a bitmap index together with the pack index"
 msgstr "ghi một mục lục ánh xạ cùng với mục lục gói"
 
-#: builtin/pack-objects.c:2781
+#: builtin/pack-objects.c:2779
 msgid "Counting objects"
 msgstr "Đang đếm các đối tượng"
 
 #: builtin/pack-refs.c:6
 msgid "git pack-refs [<options>]"
 msgstr "git pack-refs [<các-tùy-chọn>]"
@@ -8064,25 +8153,25 @@
 msgstr "git prune-packed [-n | --dry-run] [-q | --quiet]"
 
 #: builtin/prune-packed.c:40
 msgid "Removing duplicate objects"
 msgstr "Đang gỡ các đối tượng trùng lặp"
 
-#: builtin/prune.c:12
+#: builtin/prune.c:11
 msgid "git prune [-n] [-v] [--expire <time>] [--] [<head>...]"
 msgstr "git prune [-n] [-v] [--expire <thời-gian>] [--] [<head>…]"
 
-#: builtin/prune.c:106
+#: builtin/prune.c:105 builtin/worktree.c:112
 msgid "do not remove, show only"
 msgstr "không gỡ bỏ, chỉ hiển thị"
 
-#: builtin/prune.c:107
+#: builtin/prune.c:106 builtin/worktree.c:113
 msgid "report pruned objects"
 msgstr "báo cáo các đối tượng đã prune"
 
-#: builtin/prune.c:110
+#: builtin/prune.c:109 builtin/worktree.c:115
 msgid "expire objects older than <time>"
 msgstr "các đối tượng hết hạn cũ hơn khoảng <thời gian>"
 
 #: builtin/push.c:14
 msgid "git push [<options>] [<repository> [<refspec>...]]"
 msgstr "git push [<các-tùy-chọn>] [<kho-chứa> [<refspec>…]]"
@@ -8491,18 +8580,18 @@
 msgstr "bỏ qua áp dụng bộ lọc lấy ra (checkout) thưa thớt"
 
 #: builtin/read-tree.c:139
 msgid "debug unpack-trees"
 msgstr "gỡ lỗi “unpack-trees”"
 
-#: builtin/reflog.c:429
+#: builtin/reflog.c:430
 #, c-format
 msgid "%s' for '%s' is not a valid timestamp"
 msgstr "giá trị %s dành cho “%s” không phải là dấu vết thời gian hợp lệ"
 
-#: builtin/reflog.c:546 builtin/reflog.c:551
+#: builtin/reflog.c:547 builtin/reflog.c:552
 #, c-format
 msgid "'%s' is not a valid timestamp"
 msgstr "“%s” không phải là dấu thời gian hợp lệ"
 
 #: builtin/remote.c:12
 msgid "git remote [-v | --verbose]"
@@ -8633,18 +8722,18 @@
 msgstr "đang chỉ định một nhánh master không hợp lý với tùy chọn --mirror"
 
 #: builtin/remote.c:177
 msgid "specifying branches to track makes sense only with fetch mirrors"
 msgstr "chỉ định những nhánh để theo dõi chỉ hợp lý với các “fetch mirror”"
 
-#: builtin/remote.c:187 builtin/remote.c:643
+#: builtin/remote.c:187 builtin/remote.c:640
 #, c-format
 msgid "remote %s already exists."
 msgstr "máy chủ %s đã tồn tại rồi."
 
-#: builtin/remote.c:191 builtin/remote.c:647
+#: builtin/remote.c:191 builtin/remote.c:644
 #, c-format
 msgid "'%s' is not a valid remote name"
 msgstr "“%s” không phải tên máy chủ hợp lệ"
 
 #: builtin/remote.c:235
 #, c-format
@@ -8661,333 +8750,333 @@
 msgstr "(khớp)"
 
 #: builtin/remote.c:448
 msgid "(delete)"
 msgstr "(xóa)"
 
-#: builtin/remote.c:592 builtin/remote.c:598 builtin/remote.c:604
+#: builtin/remote.c:589 builtin/remote.c:595 builtin/remote.c:601
 #, c-format
 msgid "Could not append '%s' to '%s'"
 msgstr "Không thể nối thêm “%s” vào “%s”"
 
-#: builtin/remote.c:636 builtin/remote.c:795 builtin/remote.c:895
+#: builtin/remote.c:633 builtin/remote.c:792 builtin/remote.c:892
 #, c-format
 msgid "No such remote: %s"
 msgstr "Không có máy chủ nào như thế: %s"
 
-#: builtin/remote.c:653
+#: builtin/remote.c:650
 #, c-format
 msgid "Could not rename config section '%s' to '%s'"
 msgstr "Không thể đổi tên phần của cấu hình từ “%s” thành “%s”"
 
-#: builtin/remote.c:659 builtin/remote.c:847
+#: builtin/remote.c:656 builtin/remote.c:844
 #, c-format
 msgid "Could not remove config section '%s'"
 msgstr "Không thể gỡ bỏ phần cấu hình “%s”"
 
-#: builtin/remote.c:674
+#: builtin/remote.c:671
 #, c-format
 msgid ""
 "Not updating non-default fetch refspec\n"
 "\t%s\n"
 "\tPlease update the configuration manually if necessary."
 msgstr ""
 "Không cập nhật “non-default fetch respec”\n"
 "\t%s\n"
 "\tXin hãy cập nhật phần cấu hình một cách thủ công nếu thấy cần thiết."
 
-#: builtin/remote.c:680
+#: builtin/remote.c:677
 #, c-format
 msgid "Could not append '%s'"
 msgstr "Không thể nối thêm “%s”"
 
-#: builtin/remote.c:691
+#: builtin/remote.c:688
 #, c-format
 msgid "Could not set '%s'"
 msgstr "Không thể đặt “%s”"
 
-#: builtin/remote.c:713
+#: builtin/remote.c:710
 #, c-format
 msgid "deleting '%s' failed"
 msgstr "gặp lỗi khi xóa “%s”"
 
-#: builtin/remote.c:747
+#: builtin/remote.c:744
 #, c-format
 msgid "creating '%s' failed"
 msgstr "gặp lỗi khi tạo “%s”"
 
-#: builtin/remote.c:766
+#: builtin/remote.c:763
 #, c-format
 msgid "Could not remove branch %s"
 msgstr "Không thể gỡ bỏ nhánh “%s”"
 
-#: builtin/remote.c:833
+#: builtin/remote.c:830
 msgid ""
 "Note: A branch outside the refs/remotes/ hierarchy was not removed;\n"
 "to delete it, use:"
 msgid_plural ""
 "Note: Some branches outside the refs/remotes/ hierarchy were not removed;\n"
 "to delete them, use:"
 msgstr[0] ""
 "Chú ý: Một số nhánh nằm ngoài hệ thống refs/remotes/ đã không được gỡ bỏ "
 "đi;\n"
 "để xóa đi, sử dụng:"
 
-#: builtin/remote.c:948
+#: builtin/remote.c:945
 #, c-format
 msgid " new (next fetch will store in remotes/%s)"
 msgstr " mới (lần lấy về tiếp theo sẽ lưu trong remotes/%s)"
 
-#: builtin/remote.c:951
+#: builtin/remote.c:948
 msgid " tracked"
 msgstr " được theo dõi"
 
-#: builtin/remote.c:953
+#: builtin/remote.c:950
 msgid " stale (use 'git remote prune' to remove)"
 msgstr " cũ rích (dùng “git remote prune” để gỡ bỏ)"
 
-#: builtin/remote.c:955
+#: builtin/remote.c:952
 msgid " ???"
 msgstr " ???"
 
-#: builtin/remote.c:996
+#: builtin/remote.c:993
 #, c-format
 msgid "invalid branch.%s.merge; cannot rebase onto > 1 branch"
 msgstr "branch.%s.merge không hợp lệ; không thể cải tổ về phía > 1 nhánh"
 
-#: builtin/remote.c:1003
+#: builtin/remote.c:1000
 #, c-format
 msgid "rebases onto remote %s"
 msgstr "thực hiện rebase trên máy chủ %s"
 
-#: builtin/remote.c:1006
+#: builtin/remote.c:1003
 #, c-format
 msgid " merges with remote %s"
 msgstr " hòa trộn với máy chủ %s"
 
-#: builtin/remote.c:1007
+#: builtin/remote.c:1004
 msgid "    and with remote"
 msgstr "    và với máy chủ"
 
-#: builtin/remote.c:1009
+#: builtin/remote.c:1006
 #, c-format
 msgid "merges with remote %s"
 msgstr "hòa trộn với máy chủ %s"
 
-#: builtin/remote.c:1010
+#: builtin/remote.c:1007
 msgid "   and with remote"
 msgstr "   và với máy chủ"
 
-#: builtin/remote.c:1056
+#: builtin/remote.c:1053
 msgid "create"
 msgstr "tạo"
 
-#: builtin/remote.c:1059
+#: builtin/remote.c:1056
 msgid "delete"
 msgstr "xóa"
 
-#: builtin/remote.c:1063
+#: builtin/remote.c:1060
 msgid "up to date"
 msgstr "đã cập nhật"
 
-#: builtin/remote.c:1066
+#: builtin/remote.c:1063
 msgid "fast-forwardable"
-msgstr "có-thể-fast-forward"
+msgstr "có-thể-chuyển-tiếp-nhanh"
 
-#: builtin/remote.c:1069
+#: builtin/remote.c:1066
 msgid "local out of date"
 msgstr "dữ liệu nội bộ đã cũ"
 
-#: builtin/remote.c:1076
+#: builtin/remote.c:1073
 #, c-format
 msgid "    %-*s forces to %-*s (%s)"
 msgstr "    %-*s ép buộc thành %-*s (%s)"
 
-#: builtin/remote.c:1079
+#: builtin/remote.c:1076
 #, c-format
 msgid "    %-*s pushes to %-*s (%s)"
 msgstr "    %-*s đẩy lên thành %-*s (%s)"
 
-#: builtin/remote.c:1083
+#: builtin/remote.c:1080
 #, c-format
 msgid "    %-*s forces to %s"
 msgstr "    %-*s ép buộc thành %s"
 
-#: builtin/remote.c:1086
+#: builtin/remote.c:1083
 #, c-format
 msgid "    %-*s pushes to %s"
 msgstr "    %-*s đẩy lên thành %s"
 
-#: builtin/remote.c:1154
+#: builtin/remote.c:1151
 msgid "do not query remotes"
 msgstr "không truy vấn các máy chủ"
 
-#: builtin/remote.c:1181
+#: builtin/remote.c:1178
 #, c-format
 msgid "* remote %s"
 msgstr "* máy chủ %s"
 
-#: builtin/remote.c:1182
+#: builtin/remote.c:1179
 #, c-format
 msgid "  Fetch URL: %s"
 msgstr "  URL để lấy về: %s"
 
-#: builtin/remote.c:1183 builtin/remote.c:1334
+#: builtin/remote.c:1180 builtin/remote.c:1331
 msgid "(no URL)"
 msgstr "(không có URL)"
 
-#: builtin/remote.c:1192 builtin/remote.c:1194
+#: builtin/remote.c:1189 builtin/remote.c:1191
 #, c-format
 msgid "  Push  URL: %s"
 msgstr "  URL để đẩy lên: %s"
 
-#: builtin/remote.c:1196 builtin/remote.c:1198 builtin/remote.c:1200
+#: builtin/remote.c:1193 builtin/remote.c:1195 builtin/remote.c:1197
 #, c-format
 msgid "  HEAD branch: %s"
 msgstr "  Nhánh HEAD: %s"
 
-#: builtin/remote.c:1202
+#: builtin/remote.c:1199
 #, c-format
 msgid ""
 "  HEAD branch (remote HEAD is ambiguous, may be one of the following):\n"
 msgstr "  nhánh HEAD (HEAD máy chủ chưa rõ ràng, có lẽ là một trong số sau):\n"
 
-#: builtin/remote.c:1214
+#: builtin/remote.c:1211
 #, c-format
 msgid "  Remote branch:%s"
 msgid_plural "  Remote branches:%s"
 msgstr[0] "  Những nhánh trên máy chủ:%s"
 
-#: builtin/remote.c:1217 builtin/remote.c:1244
+#: builtin/remote.c:1214 builtin/remote.c:1241
 msgid " (status not queried)"
 msgstr " (trạng thái không được yêu cầu)"
 
-#: builtin/remote.c:1226
+#: builtin/remote.c:1223
 msgid "  Local branch configured for 'git pull':"
 msgid_plural "  Local branches configured for 'git pull':"
 msgstr[0] "  Những nhánh nội bộ đã được cấu hình cho lệnh “git pull”:"
 
-#: builtin/remote.c:1234
+#: builtin/remote.c:1231
 msgid "  Local refs will be mirrored by 'git push'"
 msgstr "  refs nội bộ sẽ được phản chiếu bởi lệnh “git push”"
 
-#: builtin/remote.c:1241
+#: builtin/remote.c:1238
 #, c-format
 msgid "  Local ref configured for 'git push'%s:"
 msgid_plural "  Local refs configured for 'git push'%s:"
 msgstr[0] "  Những tham chiếu nội bộ được cấu hình cho lệnh “git push”%s:"
 
-#: builtin/remote.c:1262
+#: builtin/remote.c:1259
 msgid "set refs/remotes/<name>/HEAD according to remote"
 msgstr "đặt refs/remotes/<tên>/HEAD cho phù hợp với máy chủ"
 
-#: builtin/remote.c:1264
+#: builtin/remote.c:1261
 msgid "delete refs/remotes/<name>/HEAD"
 msgstr "xóa refs/remotes/<tên>/HEAD"
 
-#: builtin/remote.c:1279
+#: builtin/remote.c:1276
 msgid "Cannot determine remote HEAD"
 msgstr "Không thể xác định được HEAD máy chủ"
 
-#: builtin/remote.c:1281
+#: builtin/remote.c:1278
 msgid "Multiple remote HEAD branches. Please choose one explicitly with:"
 msgstr "Nhiều nhánh HEAD máy chủ. Hãy chọn rõ ràng một:"
 
-#: builtin/remote.c:1291
+#: builtin/remote.c:1288
 #, c-format
 msgid "Could not delete %s"
 msgstr "Không thể xóa bỏ %s"
 
-#: builtin/remote.c:1299
+#: builtin/remote.c:1296
 #, c-format
 msgid "Not a valid ref: %s"
 msgstr "Không phải là tham chiếu hợp lệ: %s"
 
-#: builtin/remote.c:1301
+#: builtin/remote.c:1298
 #, c-format
 msgid "Could not setup %s"
 msgstr "Không thể cài đặt %s"
 
-#: builtin/remote.c:1319
+#: builtin/remote.c:1316
 #, c-format
 msgid " %s will become dangling!"
 msgstr " %s sẽ trở thành không đầu (không được quản lý)!"
 
-#: builtin/remote.c:1320
+#: builtin/remote.c:1317
 #, c-format
 msgid " %s has become dangling!"
 msgstr " %s đã trở thành không đầu (không được quản lý)!"
 
-#: builtin/remote.c:1330
+#: builtin/remote.c:1327
 #, c-format
 msgid "Pruning %s"
 msgstr "Đang xén bớt %s"
 
-#: builtin/remote.c:1331
+#: builtin/remote.c:1328
 #, c-format
 msgid "URL: %s"
 msgstr "URL: %s"
 
-#: builtin/remote.c:1354
+#: builtin/remote.c:1351
 #, c-format
 msgid " * [would prune] %s"
 msgstr " * [nên xén bớt] %s"
 
-#: builtin/remote.c:1357
+#: builtin/remote.c:1354
 #, c-format
 msgid " * [pruned] %s"
 msgstr " * [đã bị xén] %s"
 
-#: builtin/remote.c:1402
+#: builtin/remote.c:1399
 msgid "prune remotes after fetching"
 msgstr "cắt máy chủ sau khi lấy về"
 
-#: builtin/remote.c:1468 builtin/remote.c:1542
+#: builtin/remote.c:1465 builtin/remote.c:1539
 #, c-format
 msgid "No such remote '%s'"
 msgstr "Không có máy chủ nào có tên “%s”"
 
-#: builtin/remote.c:1488
+#: builtin/remote.c:1485
 msgid "add branch"
 msgstr "thêm nhánh"
 
-#: builtin/remote.c:1495
+#: builtin/remote.c:1492
 msgid "no remote specified"
 msgstr "chưa chỉ ra máy chủ nào"
 
-#: builtin/remote.c:1517
+#: builtin/remote.c:1514
 msgid "manipulate push URLs"
 msgstr "đẩy các “URL” bằng tay"
 
-#: builtin/remote.c:1519
+#: builtin/remote.c:1516
 msgid "add URL"
 msgstr "thêm URL"
 
-#: builtin/remote.c:1521
+#: builtin/remote.c:1518
 msgid "delete URLs"
 msgstr "xóa URLs"
 
-#: builtin/remote.c:1528
+#: builtin/remote.c:1525
 msgid "--add --delete doesn't make sense"
 msgstr "--add --delete không hợp lý"
 
-#: builtin/remote.c:1568
+#: builtin/remote.c:1565
 #, c-format
 msgid "Invalid old URL pattern: %s"
 msgstr "Kiểu mẫu URL cũ không hợp lệ: %s"
 
-#: builtin/remote.c:1576
+#: builtin/remote.c:1573
 #, c-format
 msgid "No such URL found: %s"
 msgstr "Không tìm thấy URL như vậy: %s"
 
-#: builtin/remote.c:1578
+#: builtin/remote.c:1575
 msgid "Will not delete all non-push URLs"
 msgstr "Sẽ không xóa những địa chỉ URL không-push"
 
-#: builtin/remote.c:1592
+#: builtin/remote.c:1589
 msgid "be verbose; must be placed before a subcommand"
 msgstr "chi tiết; phải được đặt trước một lệnh-con"
 
 #: builtin/repack.c:17
 msgid "git repack [<options>]"
 msgstr "git repack [<các-tùy-chọn>]"
@@ -9053,13 +9142,13 @@
 msgstr "kcíh thước tối đa cho từng tập tin gói"
 
 #: builtin/repack.c:187
 msgid "repack objects in packs marked with .keep"
 msgstr "đóng gói lại các đối tượng trong các gói đã đánh dấu bằng .keep"
 
-#: builtin/repack.c:375
+#: builtin/repack.c:377
 #, c-format
 msgid "removing '%s' failed"
 msgstr "gặp lỗi khi xóa bỏ “%s”"
 
 #: builtin/replace.c:19
 msgid "git replace [-f] <object> <replacement>"
@@ -9339,29 +9428,29 @@
 #, c-format
 msgid "%s: %s cannot be used with %s"
 msgstr "%s: %s không thể được sử dụng với %s"
 
 #: builtin/revert.c:80
 msgid "end revert or cherry-pick sequence"
-msgstr "kết thúc cherry-pick hay revert liên tiếp nhau"
+msgstr "kết thúc cherry-pick hay hoàn nguyên liên tiếp nhau"
 
 #: builtin/revert.c:81
 msgid "resume revert or cherry-pick sequence"
-msgstr "phục hồi lại cherry-pick hay revert liên tiếp nhau"
+msgstr "phục hồi lại cherry-pick hay hoàn nguyên liên tiếp nhau"
 
 #: builtin/revert.c:82
 msgid "cancel revert or cherry-pick sequence"
-msgstr "không cherry-pick hay revert liên tiếp nhau"
+msgstr "không cherry-pick hay hoàn nguyên liên tiếp nhau"
 
 #: builtin/revert.c:83
 msgid "don't automatically commit"
-msgstr "không commit một cách tự động."
+msgstr "không chuyển giao một cách tự động."
 
 #: builtin/revert.c:84
 msgid "edit the commit message"
-msgstr "sửa lại chú thích cho commit"
+msgstr "sửa lại chú thích cho lần chuyển giao"
 
 #: builtin/revert.c:87
 msgid "parent number"
 msgstr "số của cha mẹ"
 
 #: builtin/revert.c:89
@@ -9379,13 +9468,13 @@
 #: builtin/revert.c:104
 msgid "append commit name"
 msgstr "nối thêm tên lần chuyển giao"
 
 #: builtin/revert.c:105
 msgid "allow fast-forward"
-msgstr "cho phép fast-forward"
+msgstr "cho phép chuyển-tiếp-nhanh"
 
 #: builtin/revert.c:106
 msgid "preserve initially empty commits"
 msgstr "cấm khởi tạo lần chuyển giao trống rỗng"
 
 #: builtin/revert.c:107
@@ -9399,13 +9488,13 @@
 #: builtin/revert.c:112
 msgid "program error"
 msgstr "lỗi chương trình"
 
 #: builtin/revert.c:197
 msgid "revert failed"
-msgstr "revert gặp lỗi"
+msgstr "hoàn nguyên gặp lỗi"
 
 #: builtin/revert.c:212
 msgid "cherry-pick failed"
 msgstr "cherry-pick gặp lỗi"
 
 #: builtin/rm.c:17
@@ -9429,81 +9518,81 @@
 "(use 'rm -rf' if you really want to remove it including all of its history)"
 msgstr ""
 "\n"
 "(dùng /\"rm -rf/\" nếu bạn thực sự muốn gỡ bỏ nó cùng với tất cả lịch sử của "
 "chúng)"
 
-#: builtin/rm.c:231
+#: builtin/rm.c:230
 msgid ""
 "the following file has staged content different from both the\n"
 "file and the HEAD:"
 msgid_plural ""
 "the following files have staged content different from both the\n"
 "file and the HEAD:"
 msgstr[0] ""
 "các tập tin sau đây có trạng thái khác biệt nội dung từ cả tập tin\n"
 "và cả HEAD:"
 
-#: builtin/rm.c:236
+#: builtin/rm.c:235
 msgid ""
 "\n"
 "(use -f to force removal)"
 msgstr ""
 "\n"
 "(dùng -f để buộc gỡ bỏ)"
 
-#: builtin/rm.c:240
+#: builtin/rm.c:239
 msgid "the following file has changes staged in the index:"
 msgid_plural "the following files have changes staged in the index:"
 msgstr[0] "các tập tin sau đây có thay đổi trạng thái trong bảng mục lục:"
 
-#: builtin/rm.c:244 builtin/rm.c:255
+#: builtin/rm.c:243 builtin/rm.c:254
 msgid ""
 "\n"
 "(use --cached to keep the file, or -f to force removal)"
 msgstr ""
 "\n"
 "(dùng tùy chọn --cached để giữ tập tin, hoặc -f để ép buộc gỡ bỏ)"
 
-#: builtin/rm.c:252
+#: builtin/rm.c:251
 msgid "the following file has local modifications:"
 msgid_plural "the following files have local modifications:"
 msgstr[0] "những tập tin sau đây có những thay đổi nội bộ:"
 
-#: builtin/rm.c:270
+#: builtin/rm.c:269
 msgid "do not list removed files"
 msgstr "không liệt kê các tập tin đã gỡ bỏ"
 
-#: builtin/rm.c:271
+#: builtin/rm.c:270
 msgid "only remove from the index"
 msgstr "chỉ gỡ bỏ từ mục lục"
 
-#: builtin/rm.c:272
+#: builtin/rm.c:271
 msgid "override the up-to-date check"
 msgstr "ghi đè lên kiểm tra cập nhật"
 
-#: builtin/rm.c:273
+#: builtin/rm.c:272
 msgid "allow recursive removal"
 msgstr "cho phép gỡ bỏ đệ qui"
 
-#: builtin/rm.c:275
+#: builtin/rm.c:274
 msgid "exit with a zero status even if nothing matched"
 msgstr "thoát ra với trạng thái khác không thậm chí nếu không có gì khớp"
 
-#: builtin/rm.c:318
+#: builtin/rm.c:317
 msgid "Please, stage your changes to .gitmodules or stash them to proceed"
 msgstr ""
 "Vui lòng đưa các thay đổi của bạn vào “.gitmodules” hay tạm cất chúng đi để "
 "xử lý"
 
-#: builtin/rm.c:336
+#: builtin/rm.c:335
 #, c-format
 msgid "not removing '%s' recursively without -r"
 msgstr "không thể gỡ bỏ “%s” một cách đệ qui mà không có tùy chọn -r"
 
-#: builtin/rm.c:375
+#: builtin/rm.c:374
 #, c-format
 msgid "git rm: unable to remove %s"
 msgstr "git rm: không thể gỡ bỏ %s"
 
 #: builtin/shortlog.c:13
 msgid "git shortlog [<options>] [<revision-range>] [[--] [<path>...]]"
@@ -9547,119 +9636,119 @@
 "\t\t[--no-name | --sha1-name] [--topics] [(<rev> | <glob>)…]"
 
 #: builtin/show-branch.c:13
 msgid "git show-branch (-g | --reflog)[=<n>[,<base>]] [--list] [<ref>]"
 msgstr "git show-branch (-g | --reflog)[=<n>[,<nền>]] [--list] [<ref>]"
 
-#: builtin/show-branch.c:652
+#: builtin/show-branch.c:659
 msgid "show remote-tracking and local branches"
 msgstr "hiển thị các nhánh remote-tracking và nội bộ"
 
-#: builtin/show-branch.c:654
+#: builtin/show-branch.c:661
 msgid "show remote-tracking branches"
 msgstr "hiển thị các nhánh remote-tracking"
 
-#: builtin/show-branch.c:656
+#: builtin/show-branch.c:663
 msgid "color '*!+-' corresponding to the branch"
 msgstr "màu “*!+-” tương ứng với nhánh"
 
-#: builtin/show-branch.c:658
+#: builtin/show-branch.c:665
 msgid "show <n> more commits after the common ancestor"
 msgstr "hiển thị thêm <n> lần chuyển giao sau cha mẹ chung"
 
-#: builtin/show-branch.c:660
+#: builtin/show-branch.c:667
 msgid "synonym to more=-1"
 msgstr "đồng nghĩa với more=-1"
 
-#: builtin/show-branch.c:661
+#: builtin/show-branch.c:668
 msgid "suppress naming strings"
 msgstr "chặn các chuỗi đặt tên"
 
-#: builtin/show-branch.c:663
+#: builtin/show-branch.c:670
 msgid "include the current branch"
 msgstr "bao gồm nhánh hiện hành"
 
-#: builtin/show-branch.c:665
+#: builtin/show-branch.c:672
 msgid "name commits with their object names"
 msgstr "đặt tên các lần chuyển giao bằng các tên của đối tượng của chúng"
 
-#: builtin/show-branch.c:667
+#: builtin/show-branch.c:674
 msgid "show possible merge bases"
 msgstr "hiển thị mọi cơ sở có thể dùng để hòa trộn"
 
-#: builtin/show-branch.c:669
+#: builtin/show-branch.c:676
 msgid "show refs unreachable from any other ref"
 msgstr "hiển thị các tham chiếu không thể được đọc bởi bất kỳ tham chiếu khác"
 
-#: builtin/show-branch.c:671
+#: builtin/show-branch.c:678
 msgid "show commits in topological order"
 msgstr "hiển thị các lần chuyển giao theo thứ tự tôpô"
 
-#: builtin/show-branch.c:674
+#: builtin/show-branch.c:681
 msgid "show only commits not on the first branch"
 msgstr "chỉ hiển thị các lần chuyển giao không nằm trên nhánh đầu tiên"
 
-#: builtin/show-branch.c:676
+#: builtin/show-branch.c:683
 msgid "show merges reachable from only one tip"
 msgstr "hiển thị các lần hòa trộn có thể đọc được chỉ từ một đầu mút"
 
-#: builtin/show-branch.c:678
+#: builtin/show-branch.c:685
 msgid "topologically sort, maintaining date order where possible"
 msgstr "sắp xếp hình thái học, bảo trì thứ tự ngày nếu có thể"
 
-#: builtin/show-branch.c:681
+#: builtin/show-branch.c:688
 msgid "<n>[,<base>]"
 msgstr "<n>[,<cơ_sở>]"
 
-#: builtin/show-branch.c:682
+#: builtin/show-branch.c:689
 msgid "show <n> most recent ref-log entries starting at base"
 msgstr "hiển thị <n> các mục “ref-log” gần nhất kể từ nền (base)"
 
 #: builtin/show-ref.c:10
 msgid ""
 "git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | --"
 "hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<pattern>...]"
 msgstr ""
-"git show-ref [-q | --quiet] [--verify] [--head] [-d|--dereference] [-s|--hash"
-"[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<mẫu>…] "
+"git show-ref [-q | --quiet] [--verify] [--head] [-d|--dereference] [-s|--"
+"hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<mẫu>…] "
 
 #: builtin/show-ref.c:11
 msgid "git show-ref --exclude-existing[=pattern] < ref-list"
 msgstr "git show-ref --exclude-existing[=mẫu] < ref-list"
 
-#: builtin/show-ref.c:168
+#: builtin/show-ref.c:170
 msgid "only show tags (can be combined with heads)"
 msgstr "chỉ hiển thị thẻ (có thể tổ hợp cùng với đầu)"
 
-#: builtin/show-ref.c:169
+#: builtin/show-ref.c:171
 msgid "only show heads (can be combined with tags)"
 msgstr "chỉ hiển thị đầu (có thể tổ hợp cùng với thẻ)"
 
-#: builtin/show-ref.c:170
+#: builtin/show-ref.c:172
 msgid "stricter reference checking, requires exact ref path"
 msgstr ""
 "việc kiểm tra tham chiếu chính xác, đòi hỏi chính xác đường dẫn tham chiếu"
 
-#: builtin/show-ref.c:173 builtin/show-ref.c:175
+#: builtin/show-ref.c:175 builtin/show-ref.c:177
 msgid "show the HEAD reference, even if it would be filtered out"
 msgstr "hiển thị tham chiếu HEAD, ngay cả khi nó đã được lọc ra"
 
-#: builtin/show-ref.c:177
+#: builtin/show-ref.c:179
 msgid "dereference tags into object IDs"
 msgstr "bãi bỏ tham chiếu các thẻ thành ra các ID đối tượng"
 
-#: builtin/show-ref.c:179
+#: builtin/show-ref.c:181
 msgid "only show SHA1 hash using <n> digits"
 msgstr "chỉ hiển thị mã băm SHA1 sử dụng <n> chữ số"
 
-#: builtin/show-ref.c:183
+#: builtin/show-ref.c:185
 msgid "do not print results to stdout (useful with --verify)"
 msgstr ""
 "không hiển thị kết quả ra đầu ra chuẩn (stdout) (chỉ hữu dụng với --verify)"
 
-#: builtin/show-ref.c:185
+#: builtin/show-ref.c:187
 msgid "show refs from stdin that aren't in local repository"
 msgstr ""
 "hiển thị các tham chiếu từ đầu vào tiêu chuẩn (stdin) cái mà không ở kho nội "
 "bộ"
 
 #: builtin/symbolic-ref.c:7
@@ -9916,132 +10005,200 @@
 msgstr "Đã cập nhật thẻ “%s” (trước là %s)\n"
 
 #: builtin/unpack-objects.c:489
 msgid "Unpacking objects"
 msgstr "Đang giải nén các đối tượng"
 
-#: builtin/update-index.c:403
+#: builtin/update-index.c:70
+#, c-format
+msgid "failed to create directory %s"
+msgstr "tạo thư mục \"%s\" gặp lỗi"
+
+#: builtin/update-index.c:76
+#, c-format
+msgid "failed to stat %s"
+msgstr "gặp lỗi khi lấy thông tin thống kê về %s"
+
+#: builtin/update-index.c:86
+#, c-format
+msgid "failed to create file %s"
+msgstr "gặp lỗi khi tạo tập tin %s"
+
+#: builtin/update-index.c:94
+#, c-format
+msgid "failed to delete file %s"
+msgstr "gặp lỗi khi xóa tập tin %s"
+
+#: builtin/update-index.c:101 builtin/update-index.c:203
+#, c-format
+msgid "failed to delete directory %s"
+msgstr "gặp lỗi khi xóa thư mục %s"
+
+#: builtin/update-index.c:124
+#, c-format
+msgid "Testing "
+msgstr "Đang thử"
+
+#: builtin/update-index.c:136
+msgid "directory stat info does not change after adding a new file"
+msgstr "thông tin thống kê thư mục không thay đổi sau khi thêm tập tin mới"
+
+#: builtin/update-index.c:149
+msgid "directory stat info does not change after adding a new directory"
+msgstr "thông tin thống kê thư mục không thay đổi sau khi thêm thư mục mới"
+
+#: builtin/update-index.c:162
+msgid "directory stat info changes after updating a file"
+msgstr "thông tin thống kê thư mục thay đổi sau khi cập nhật tập tin"
+
+#: builtin/update-index.c:173
+msgid "directory stat info changes after adding a file inside subdirectory"
+msgstr ""
+"thông tin thống kê thư mục thay đổi sau khi thêm tập tin mới vào trong thư "
+"mục con"
+
+#: builtin/update-index.c:184
+msgid "directory stat info does not change after deleting a file"
+msgstr "thông tin thống kê thư mục không thay đổi sau khi xóa tập tin"
+
+#: builtin/update-index.c:197
+msgid "directory stat info does not change after deleting a directory"
+msgstr "thông tin thống kê thư mục không thay đổi sau khi xóa thư mục"
+
+#: builtin/update-index.c:204
+msgid " OK"
+msgstr " Đồng ý"
+
+#: builtin/update-index.c:564
 msgid "git update-index [<options>] [--] [<file>...]"
 msgstr "git update-index [<các-tùy-chọn>] [--] [<tập-tin>…]"
 
-#: builtin/update-index.c:757
+#: builtin/update-index.c:918
 msgid "continue refresh even when index needs update"
 msgstr "tiếp tục làm mới ngay cả khi bảng mục lục cần được cập nhật"
 
-#: builtin/update-index.c:760
+#: builtin/update-index.c:921
 msgid "refresh: ignore submodules"
 msgstr "refresh: lờ đi mô-đun-con"
 
-#: builtin/update-index.c:763
+#: builtin/update-index.c:924
 msgid "do not ignore new files"
 msgstr "không bỏ qua các tập tin mới tạo"
 
-#: builtin/update-index.c:765
+#: builtin/update-index.c:926
 msgid "let files replace directories and vice-versa"
 msgstr "để các tập tin thay thế các thư mục và “vice-versa”"
 
-#: builtin/update-index.c:767
+#: builtin/update-index.c:928
 msgid "notice files missing from worktree"
 msgstr "thông báo các tập-tin thiếu trong thư-mục làm việc"
 
-#: builtin/update-index.c:769
+#: builtin/update-index.c:930
 msgid "refresh even if index contains unmerged entries"
 msgstr ""
 "làm tươi mới thậm chí khi bảng mục lục chứa các mục tin chưa được hòa trộn"
 
-#: builtin/update-index.c:772
+#: builtin/update-index.c:933
 msgid "refresh stat information"
 msgstr "lấy lại thông tin thống kê"
 
-#: builtin/update-index.c:776
+#: builtin/update-index.c:937
 msgid "like --refresh, but ignore assume-unchanged setting"
 msgstr "giống --refresh, nhưng bỏ qua các cài đặt “assume-unchanged”"
 
-#: builtin/update-index.c:780
+#: builtin/update-index.c:941
 msgid "<mode>,<object>,<path>"
 msgstr "<chế_độ>,<đối_tượng>,<đường_dẫn>"
 
-#: builtin/update-index.c:781
+#: builtin/update-index.c:942
 msgid "add the specified entry to the index"
 msgstr "thêm các tập tin đã chỉ ra vào bảng mục lục"
 
-#: builtin/update-index.c:785
+#: builtin/update-index.c:946
 msgid "(+/-)x"
 msgstr "(+/-)x"
 
-#: builtin/update-index.c:786
+#: builtin/update-index.c:947
 msgid "override the executable bit of the listed files"
 msgstr "ghi đè lên bít thi hành của các tập tin được liệt kê"
 
-#: builtin/update-index.c:790
+#: builtin/update-index.c:951
 msgid "mark files as \"not changing\""
 msgstr "Đánh dấu các tập tin là \"không thay đổi\""
 
-#: builtin/update-index.c:793
+#: builtin/update-index.c:954
 msgid "clear assumed-unchanged bit"
 msgstr "xóa bít assumed-unchanged (giả định là không thay đổi)"
 
-#: builtin/update-index.c:796
+#: builtin/update-index.c:957
 msgid "mark files as \"index-only\""
 msgstr "đánh dấu các tập tin là “chỉ-đọc”"
 
-#: builtin/update-index.c:799
+#: builtin/update-index.c:960
 msgid "clear skip-worktree bit"
 msgstr "xóa bít skip-worktree"
 
-#: builtin/update-index.c:802
+#: builtin/update-index.c:963
 msgid "add to index only; do not add content to object database"
 msgstr ""
 "chỉ thêm vào bảng mục lục; không thêm nội dung vào cơ sở dữ liệu đối tượng"
 
-#: builtin/update-index.c:804
+#: builtin/update-index.c:965
 msgid "remove named paths even if present in worktree"
 msgstr ""
 "gỡ bỏ các đường dẫn được đặt tên thậm chí cả khi nó hiện diện trong thư mục "
 "làm việc"
 
-#: builtin/update-index.c:806
+#: builtin/update-index.c:967
 msgid "with --stdin: input lines are terminated by null bytes"
 msgstr "với tùy chọn --stdin: các dòng đầu vào được chấm dứt bởi ký tự null"
 
-#: builtin/update-index.c:808
+#: builtin/update-index.c:969
 msgid "read list of paths to be updated from standard input"
 msgstr "đọc danh sách đường dẫn cần cập nhật từ đầu vào tiêu chuẩn"
 
-#: builtin/update-index.c:812
+#: builtin/update-index.c:973
 msgid "add entries from standard input to the index"
 msgstr "không thể đọc các mục từ đầu vào tiêu chuẩn vào bảng mục lục"
 
-#: builtin/update-index.c:816
+#: builtin/update-index.c:977
 msgid "repopulate stages #2 and #3 for the listed paths"
 msgstr "phục hồi các trạng thái #2 và #3 cho các đường dẫn được liệt kê"
 
-#: builtin/update-index.c:820
+#: builtin/update-index.c:981
 msgid "only update entries that differ from HEAD"
 msgstr "chỉ cập nhật các mục tin mà nó khác biệt so với HEAD"
 
-#: builtin/update-index.c:824
+#: builtin/update-index.c:985
 msgid "ignore files missing from worktree"
 msgstr "bỏ qua các tập-tin thiếu trong thư-mục làm việc"
 
-#: builtin/update-index.c:827
+#: builtin/update-index.c:988
 msgid "report actions to standard output"
 msgstr "báo cáo các thao tác ra thiết bị xuất chuẩn"
 
-#: builtin/update-index.c:829
+#: builtin/update-index.c:990
 msgid "(for porcelains) forget saved unresolved conflicts"
 msgstr "(cho “porcelains”) quên các xung đột chưa được giải quyết đã ghi"
 
-#: builtin/update-index.c:833
+#: builtin/update-index.c:994
 msgid "write index in this format"
 msgstr "ghi mục lục ở định dạng này"
 
-#: builtin/update-index.c:835
+#: builtin/update-index.c:996
 msgid "enable or disable split index"
 msgstr "bật/tắt chia cắt bảng mục lục"
 
+#: builtin/update-index.c:998
+msgid "enable/disable untracked cache"
+msgstr "bật/tắt bộ đệm không theo vết"
+
+#: builtin/update-index.c:1000
+msgid "enable untracked cache without testing the filesystem"
+msgstr "bật bộ đệm không theo vết mà không kiểm tra hệ thống tập tin"
+
 #: builtin/update-ref.c:9
 msgid "git update-ref [<options>] -d <refname> [<old-val>]"
 msgstr "git update-ref [<các-tùy-chọn>] -d <refname> [<biến-cũ>]"
 
 #: builtin/update-ref.c:10
 msgid "git update-ref [<options>]    <refname> <new-val> [<old-val>]"
@@ -10100,12 +10257,89 @@
 msgstr "git verify-tag [-v | --verbose] <thẻ>…"
 
 #: builtin/verify-tag.c:73
 msgid "print tag contents"
 msgstr "hiển thị nội dung của thẻ"
 
+#: builtin/worktree.c:11
+msgid "git worktree add [<options>] <path> <branch>"
+msgstr "git worktree add [<các-tùy-chọn>] <đường-dẫn> <nhánh>"
+
+#: builtin/worktree.c:12
+msgid "git worktree prune [<options>]"
+msgstr "git worktree prune [<các-tùy-chọn>]"
+
+#: builtin/worktree.c:27
+#, c-format
+msgid "Removing worktrees/%s: not a valid directory"
+msgstr "Gỡ bỏ cây làm việc/%s: không phải là thư mục hợp lệ"
+
+#: builtin/worktree.c:33
+#, c-format
+msgid "Removing worktrees/%s: gitdir file does not exist"
+msgstr "Gỡ bỏ cây làm việc/%s: không có tập tin gitdir"
+
+#: builtin/worktree.c:38
+#, c-format
+msgid "Removing worktrees/%s: unable to read gitdir file (%s)"
+msgstr "Gỡ bỏ cây làm việc/%s: không thể đọc tập tin gitdir (%s)"
+
+#: builtin/worktree.c:49
+#, c-format
+msgid "Removing worktrees/%s: invalid gitdir file"
+msgstr "Gỡ bỏ cây làm việc/%s: tập tin gitdir không hợp lệ"
+
+#: builtin/worktree.c:65
+#, c-format
+msgid "Removing worktrees/%s: gitdir file points to non-existent location"
+msgstr "Gỡ bỏ cây làm việc/%s: tập tin gitdir chỉ đến vị trí không tồn tại"
+
+#: builtin/worktree.c:100
+#, c-format
+msgid "failed to remove: %s"
+msgstr "gặp lỗi khi gỡ bỏ: %s"
+
+#: builtin/worktree.c:186
+#, c-format
+msgid "'%s' already exists"
+msgstr "“%s” đã có từ trước rồi"
+
+#: builtin/worktree.c:207
+#, c-format
+msgid "could not create directory of '%s'"
+msgstr "không thể tạo thư mục của “%s”"
+
+#: builtin/worktree.c:241
+msgid "unable to resolve HEAD"
+msgstr "không thể phân giải HEAD"
+
+#: builtin/worktree.c:249
+#, c-format
+msgid "Enter %s (identifier %s)"
+msgstr "Nhập vào %s (định danh %s)"
+
+#: builtin/worktree.c:281
+msgid "checkout <branch> even if already checked out in other worktree"
+msgstr "lấy ra <nhánh> ngay cả khi nó đã được lấy ra ở cây làm việc khác"
+
+#: builtin/worktree.c:283
+msgid "create a new branch"
+msgstr "tạo nhánh mới"
+
+#: builtin/worktree.c:285
+msgid "create or reset a branch"
+msgstr "tạo hay đặt lại một nhánh"
+
+#: builtin/worktree.c:286
+msgid "detach HEAD at named commit"
+msgstr "rời bỏ HEAD tại lần chuyển giao theo tên"
+
+#: builtin/worktree.c:292
+msgid "-b and -B are mutually exclusive"
+msgstr "-b và -B loại từ lẫn nhau."
+
 #: builtin/write-tree.c:13
 msgid "git write-tree [--missing-ok] [--prefix=<prefix>/]"
 msgstr "git write-tree [--missing-ok] [--prefix=<tiền-tố>/]"
 
 #: builtin/write-tree.c:26
 msgid "<prefix>/"
@@ -10130,304 +10364,323 @@
 "to read about a specific subcommand or concept."
 msgstr ""
 "“git help -a” và “git help -g” liệt kê các câu lệnh con sẵn có và một số\n"
 "hướng dẫn về khái niệm. Xem “git help <lệnh>” hay “git help <khái-niệm>”\n"
 "để xem các đặc tả cho lệnh hay khái niệm cụ thể."
 
-#: common-cmds.h:8
+#: common-cmds.h:10
+msgid "start a working area (see also: git help tutorial)"
+msgstr "bắt đầu một vùng làm việc (xem thêm: git help tutorial)"
+
+#: common-cmds.h:11
+msgid "work on the current change (see also: git help everyday)"
+msgstr "làm việc trên thay đổi hiện tại (xem thêm: git help everyday)"
+
+#: common-cmds.h:12
+msgid "examine the history and state (see also: git help revisions)"
+msgstr "xem xét lịch sử tình trạng (xem thêm: git help revisions)"
+
+#: common-cmds.h:13
+msgid "grow, mark and tweak your common history"
+msgstr "thêm, ghi dấu và chỉnh lịch sử chung của bạn"
+
+#: common-cmds.h:14
+msgid "collaborate (see also: git help workflows)"
+msgstr "làm việc nhóm (xem thêm: git help workflows)"
+
+#: common-cmds.h:18
 msgid "Add file contents to the index"
 msgstr "Thêm nội dung tập tin vào bảng mục lục"
 
-#: common-cmds.h:9
+#: common-cmds.h:19
 msgid "Find by binary search the change that introduced a bug"
 msgstr "Tìm kiếm bằng điều tra nhị phân các thay đổi mà nó bắt đầu lỗi"
 
-#: common-cmds.h:10
+#: common-cmds.h:20
 msgid "List, create, or delete branches"
 msgstr "Liệt kê, tạo hay là xóa các nhánh"
 
-#: common-cmds.h:11
-msgid "Checkout a branch or paths to the working tree"
-msgstr "Lấy ra một nhánh hay các đường dẫn tới cây làm việc"
+#: common-cmds.h:21
+msgid "Switch branches or restore working tree files"
+msgstr "Chuyển các nhánh hoặc phục hồi lại các tập tin cây làm việc"
 
-#: common-cmds.h:12
+#: common-cmds.h:22
 msgid "Clone a repository into a new directory"
 msgstr "Nhân bản một kho chứa đến một thư mục mới"
 
-#: common-cmds.h:13
+#: common-cmds.h:23
 msgid "Record changes to the repository"
 msgstr "Ghi các thay đổi vào kho chứa"
 
-#: common-cmds.h:14
+#: common-cmds.h:24
 msgid "Show changes between commits, commit and working tree, etc"
 msgstr ""
-"Xem các thay đổi giữa những lần chuyển giao,\n"
-"               giữa một lần chuyển giao và cây làm việc, v.v.."
+"Xem các thay đổi giữa những lần chuyển giao, giữa một lần chuyển giao và cây "
+"làm việc, v.v.."
 
-#: common-cmds.h:15
+#: common-cmds.h:25
 msgid "Download objects and refs from another repository"
 msgstr "Tải về các đối tượng và tham chiếu từ kho chứa khác"
 
-#: common-cmds.h:16
+#: common-cmds.h:26
 msgid "Print lines matching a pattern"
 msgstr "In ra những dòng khớp với một mẫu"
 
-#: common-cmds.h:17
+#: common-cmds.h:27
 msgid "Create an empty Git repository or reinitialize an existing one"
 msgstr "Tạo một kho git mới hay khởi tạo lại một kho đã tồn tại từ trước"
 
-#: common-cmds.h:18
+#: common-cmds.h:28
 msgid "Show commit logs"
 msgstr "Hiển thị nhật ký các lần chuyển giao"
 
-#: common-cmds.h:19
+#: common-cmds.h:29
 msgid "Join two or more development histories together"
 msgstr "Hợp nhất hai hay nhiều hơn lịch sử của các nhà phát triển"
 
-#: common-cmds.h:20
+#: common-cmds.h:30
 msgid "Move or rename a file, a directory, or a symlink"
 msgstr "Di chuyển hay đổi tên một tập tin, thư mục hoặc liên kết mềm"
 
-#: common-cmds.h:21
+#: common-cmds.h:31
 msgid "Fetch from and integrate with another repository or a local branch"
 msgstr "Lấy về và hợp nhất với kho khác hay một nhánh nội bộ"
 
-#: common-cmds.h:22
+#: common-cmds.h:32
 msgid "Update remote refs along with associated objects"
 msgstr "Cập nhật th.chiếu máy chủ cùng với các đối tượng liên quan đến nó"
 
-#: common-cmds.h:23
+#: common-cmds.h:33
 msgid "Forward-port local commits to the updated upstream head"
 msgstr ""
-"Chuyển tiếp những lần chuyển giao nội bộ\n"
-"               tới head thượng nguồn đã cập nhật"
+"Chuyển tiếp những lần chuyển giao nội bộ tới head thượng nguồn đã cập nhật"
 
-#: common-cmds.h:24
+#: common-cmds.h:34
 msgid "Reset current HEAD to the specified state"
 msgstr "Đặt lại HEAD hiện hành thành trạng thái đã cho"
 
-#: common-cmds.h:25
+#: common-cmds.h:35
 msgid "Remove files from the working tree and from the index"
 msgstr "Gỡ bỏ các tập tin từ cây làm việc và từ bảng mục lục"
 
-#: common-cmds.h:26
+#: common-cmds.h:36
 msgid "Show various types of objects"
 msgstr "Hiển thị các kiểu khác nhau của các đối tượng"
 
-#: common-cmds.h:27
+#: common-cmds.h:37
 msgid "Show the working tree status"
 msgstr "Hiển thị trạng thái cây làm việc"
 
-#: common-cmds.h:28
+#: common-cmds.h:38
 msgid "Create, list, delete or verify a tag object signed with GPG"
 msgstr "Tạo, liệt kê, xóa hay xác thực một đối tượng thẻ được ký bằng GPG"
 
-#: parse-options.h:143
+#: parse-options.h:142
 msgid "expiry-date"
 msgstr "ngày hết hạn"
 
-#: parse-options.h:158
+#: parse-options.h:157
 msgid "no-op (backward compatibility)"
 msgstr "no-op (tương thích ngược)"
 
-#: parse-options.h:232
+#: parse-options.h:231
 msgid "be more verbose"
 msgstr "chi tiết hơn nữa"
 
-#: parse-options.h:234
+#: parse-options.h:233
 msgid "be more quiet"
 msgstr "im lặng hơn nữa"
 
-#: parse-options.h:240
+#: parse-options.h:239
 msgid "use <n> digits to display SHA-1s"
 msgstr "sử dụng <n> chữ số để hiển thị SHA-1s"
 
 #: rerere.h:27
 msgid "update the index with reused conflict resolution if possible"
 msgstr "cập nhật bảng mục lục với phân giải xung đột dùng lại nếu được"
 
 #: git-am.sh:53
 msgid "You need to set your committer info first"
 msgstr "Bạn cần đặt thông tin về người chuyển giao mã nguồn trước đã"
 
-#: git-am.sh:98
+#: git-am.sh:100
 msgid ""
 "You seem to have moved HEAD since the last 'am' failure.\n"
 "Not rewinding to ORIG_HEAD"
 msgstr ""
 "Bạn có lẽ đã có HEAD đã bị di chuyển đi kể từ lần “am” thất bại cuối cùng.\n"
 "Không thể chuyển tới ORIG_HEAD"
 
-#: git-am.sh:108
+#: git-am.sh:110
 #, sh-format
 msgid ""
 "When you have resolved this problem, run \"$cmdline --continue\".\n"
 "If you prefer to skip this patch, run \"$cmdline --skip\" instead.\n"
 "To restore the original branch and stop patching, run \"$cmdline --abort\"."
 msgstr ""
 "Khi bạn cần giải quyết vấn đề này hãy chạy lệnh \"$cmdline --continue\".\n"
 "Nếu bạn có ý định bỏ qua miếng vá, thay vào đó bạn chạy \"$cmdline --skip"
 "\".\n"
 "Để phục hồi lại thành nhánh nguyên thủy và dừng việc vá lại thì chạy "
 "\"$cmdline --abort\"."
 
-#: git-am.sh:124
+#: git-am.sh:126
 msgid "Cannot fall back to three-way merge."
 msgstr "Đang trở lại để hòa trộn kiểu “three-way”."
 
-#: git-am.sh:140
+#: git-am.sh:142
 msgid "Repository lacks necessary blobs to fall back on 3-way merge."
 msgstr "Kho thiếu đối tượng blob cần thiết để trở về trên “3-way merge”."
 
-#: git-am.sh:142
+#: git-am.sh:144
 msgid "Using index info to reconstruct a base tree..."
 msgstr ""
 "Sử dụng thông tin trong bảng mục lục để cấu trúc lại một cây (tree) cơ sở…"
 
-#: git-am.sh:157
+#: git-am.sh:159
 msgid ""
 "Did you hand edit your patch?\n"
 "It does not apply to blobs recorded in its index."
 msgstr ""
 "Bạn đã sửa miếng vá của mình bằng cách thủ công à?\n"
 "Nó không thể áp dụng các blob đã được ghi lại trong bảng mục lục của nó."
 
-#: git-am.sh:166
+#: git-am.sh:168
 msgid "Falling back to patching base and 3-way merge..."
 msgstr "Đang trở lại để vá cơ sở và “hòa trộn 3-đường”…"
 
-#: git-am.sh:182
+#: git-am.sh:185
 msgid "Failed to merge in the changes."
 msgstr "Gặp lỗi khi trộn vào các thay đổi."
 
-#: git-am.sh:277
+#: git-am.sh:280
 msgid "Only one StGIT patch series can be applied at once"
 msgstr "Chỉ có một sê-ri miếng vá StGIT được áp dụng một lúc"
 
-#: git-am.sh:364
+#: git-am.sh:367
 #, sh-format
 msgid "Patch format $patch_format is not supported."
 msgstr "Định dạng miếng vá $patch_format không được hỗ trợ."
 
-#: git-am.sh:366
+#: git-am.sh:369
 msgid "Patch format detection failed."
 msgstr "Dò tìm định dạng miếng vá gặp lỗi."
 
-#: git-am.sh:398
+#: git-am.sh:407
 msgid ""
 "The -b/--binary option has been a no-op for long time, and\n"
 "it will be removed. Please do not use it anymore."
 msgstr ""
 "Tùy chọn -b/--binary đã không dùng từ lâu rồi, và\n"
 "nó sẽ được bỏ đi. Xin đừng sử dụng nó thêm nữa."
 
-#: git-am.sh:496
+#: git-am.sh:507
 #, sh-format
 msgid "previous rebase directory $dotest still exists but mbox given."
 msgstr "thư mục rebase trước $dotest vẫn chưa sẵn sàng nhưng mbox được đưa ra."
 
-#: git-am.sh:501
+#: git-am.sh:512
 msgid "Please make up your mind. --skip or --abort?"
 msgstr "Xin hãy rõ ràng. --skip hay --abort?"
 
-#: git-am.sh:537
+#: git-am.sh:560
 #, sh-format
 msgid ""
 "Stray $dotest directory found.\n"
 "Use \"git am --abort\" to remove it."
 msgstr ""
 "Tìm thấy thư mục lạc $dotest.\n"
 "Dùng \"git am --abort\" để loại bỏ nó đi."
 
-#: git-am.sh:545
+#: git-am.sh:568
 msgid "Resolve operation not in progress, we are not resuming."
 msgstr "Thao tác phân giải không được tiến hành, chúng ta không phục hồi lại."
 
-#: git-am.sh:612
+#: git-am.sh:635
 #, sh-format
 msgid "Dirty index: cannot apply patches (dirty: $files)"
 msgstr "Bảng mục lục sai: không thể áp dụng các miếng vá (sai: $files)"
 
-#: git-am.sh:722
+#: git-am.sh:747
 #, sh-format
 msgid ""
 "Patch is empty.  Was it split wrong?\n"
 "If you would prefer to skip this patch, instead run \"$cmdline --skip\".\n"
 "To restore the original branch and stop patching run \"$cmdline --abort\"."
 msgstr ""
 "Miếng vá trống rỗng.  Nó đã bị chia cắt sai phải không?\n"
 "Nếu bạn thích bỏ qua miếng vá này, hãy chạy lệnh sau để thay thế \"$cmdline "
 "--skip\".\n"
 "Để phục hồi lại nhánh nguyên thủy và dừng vá lại hãy chạy lệnh \"$cmdline --"
 "abort\"."
 
-#: git-am.sh:749
+#: git-am.sh:774
 msgid "Patch does not have a valid e-mail address."
 msgstr "Miếng vá không có địa chỉ thư điện tử hợp lệ."
 
-#: git-am.sh:796
+#: git-am.sh:821
 msgid "cannot be interactive without stdin connected to a terminal."
 msgstr ""
 "không thể được tương tác mà không có stdin kết nối với một thiết bị cuối"
 
-#: git-am.sh:800
+#: git-am.sh:825
 msgid "Commit Body is:"
 msgstr "Thân của lần chuyển giao là:"
 
 #. TRANSLATORS: Make sure to include [y], [n], [e], [v] and [a]
 #. in your translation. The program will only accept English
 #. input at this point.
-#: git-am.sh:807
+#: git-am.sh:832
 msgid "Apply? [y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all "
 msgstr ""
 "Áp dụng? đồng ý [y]/khô[n]g/chỉnh sửa [e]/hiển thị miếng [v]á/đồng ý tất cả "
 "[a] "
 
-#: git-am.sh:843
+#: git-am.sh:868
 #, sh-format
 msgid "Applying: $FIRSTLINE"
 msgstr "Đang áp dụng (miếng vá): $FIRSTLINE"
 
-#: git-am.sh:864
+#: git-am.sh:889
 msgid ""
 "No changes - did you forget to use 'git add'?\n"
 "If there is nothing left to stage, chances are that something else\n"
 "already introduced the same changes; you might want to skip this patch."
 msgstr ""
 "Không có thay đổi nào - bạn đã quên sử dụng lệnh “git add” à?\n"
 "Nếu ở đây không có gì còn lại stage, tình cờ là có một số thứ khác\n"
 "đã sẵn được đưa vào với cùng nội dung thay đổi; bạn có lẽ muốn bỏ qua miếng "
 "vá này."
 
-#: git-am.sh:872
+#: git-am.sh:897
 msgid ""
 "You still have unmerged paths in your index\n"
 "did you forget to use 'git add'?"
 msgstr ""
 "Bạn vẫn có những đường dẫn chưa được hòa trộn trong bảng mục lục của mình\n"
 "bạn đã quên sử dụng lệnh “git add” à?"
 
-#: git-am.sh:888
+#: git-am.sh:913
 msgid "No changes -- Patch already applied."
 msgstr "Không thay đổi gì cả -- Miếng vá đã được áp dụng rồi."
 
-#: git-am.sh:898
+#: git-am.sh:923
 #, sh-format
 msgid "Patch failed at $msgnum $FIRSTLINE"
 msgstr "Gặp lỗi khi vá tại $msgnum $FIRSTLINE"
 
-#: git-am.sh:901
+#: git-am.sh:926
 #, sh-format
 msgid ""
 "The copy of the patch that failed is found in:\n"
 "   $dotest/patch"
 msgstr ""
 "Bản sao chép của miếng vá mà nó gặp lỗi thì được tìm thấy trong:\n"
 "   $dotest/patch"
 
-#: git-am.sh:919
+#: git-am.sh:945
 msgid "applying to an empty history"
 msgstr "áp dụng vào một lịch sử trống rỗng"
 
 #: git-bisect.sh:48
 msgid "You need to start by \"git bisect start\""
 msgstr "Bạn cần khởi đầu bằng \"git bisect start\""
@@ -10581,58 +10834,58 @@
 "”bisect_state $state” đã thoát ra với mã lỗi $res"
 
 #: git-bisect.sh:485
 msgid "bisect run success"
 msgstr "bisect chạy thành công"
 
-#: git-pull.sh:21
+#: git-pull.sh:61
 msgid ""
 "Pull is not possible because you have unmerged files.\n"
 "Please, fix them up in the work tree, and then use 'git add/rm <file>'\n"
 "as appropriate to mark resolution and make a commit."
 msgstr ""
 "Pull là không thể được bởi vì bạn có những tập tin chưa được hòa trộn.\n"
 "Xin hãy sửa chữa chúng trước, và sau đó sử dụng lệnh “git add/rm <tập-tin>”\n"
 "để phê chuẩn việc đánh dấu đây cần được giải quyết và tạo một lần chuyển "
 "giao."
 
-#: git-pull.sh:25
+#: git-pull.sh:65
 msgid "Pull is not possible because you have unmerged files."
 msgstr ""
 "Full là không thể thực hiện bởi vì bạn có những tập tin chưa được hòa trộn."
 
-#: git-pull.sh:31
+#: git-pull.sh:71
 msgid ""
 "You have not concluded your merge (MERGE_HEAD exists).\n"
 "Please, commit your changes before you can merge."
 msgstr ""
 "Bạn chưa kết thúc việc hòa trộng (MERGE_HEAD vẫn tồn tại).\n"
 "Hãy chuyển giao các thay đổi trước khi bạn có thể hòa trộn."
 
-#: git-pull.sh:245
+#: git-pull.sh:285
 msgid "updating an unborn branch with changes added to the index"
 msgstr ""
 "đang cập nhật một nhánh chưa được sinh ra với các thay đổi được thêm vào "
 "bảng mục lục"
 
-#: git-pull.sh:269
+#: git-pull.sh:311
 #, sh-format
 msgid ""
 "Warning: fetch updated the current branch head.\n"
 "Warning: fast-forwarding your working tree from\n"
 "Warning: commit $orig_head."
 msgstr ""
 "Cảnh báo: fetch đã cập nhật head nhánh hiện tại.\n"
-"Cảnh báo: đang fast-forward cây làm việc của bạn từ\n"
+"Cảnh báo: đang chuyển-tiếp-nhanh cây làm việc của bạn từ\n"
 "Cảnh báo: commit $orig_head."
 
-#: git-pull.sh:294
+#: git-pull.sh:336
 msgid "Cannot merge multiple branches into empty head"
 msgstr "Không thể hòa trộn nhiều nhánh và trong một head trống rỗng"
 
-#: git-pull.sh:298
+#: git-pull.sh:340
 msgid "Cannot rebase onto multiple branches"
 msgstr "Không thể thực hiện lệnh rebase (cơ cấu lại) trên nhiều nhánh"
 
 #: git-rebase.sh:57
 msgid ""
 "When you have resolved this problem, run \"git rebase --continue\".\n"
@@ -10787,13 +11040,13 @@
 msgid "First, rewinding head to replay your work on top of it..."
 msgstr "Trước tiên, di chuyển head để xem lại các công việc trên đỉnh của nó…"
 
 #: git-rebase.sh:620
 #, sh-format
 msgid "Fast-forwarded $branch_name to $onto_name."
-msgstr "Fast-forward $branch_name thành $onto_name."
+msgstr "Chuyển-tiếp-nhanh $branch_name thành $onto_name."
 
 #: git-stash.sh:51
 msgid "git stash clear with parameters is unimplemented"
 msgstr ""
 "git stash clear với các tham số là chưa được thực hiện (không nhận đối số)"
 
@@ -10833,101 +11086,106 @@
 #. translation of "error: " takes in your language. E.g. in
 #. English this is:
 #.
 #. $ git stash save --blah-blah 2>&1 | head -n 2
 #. error: unknown option for 'stash save': --blah-blah
 #. To provide a message, use git stash save -- '--blah-blah'
-#: git-stash.sh:238
+#: git-stash.sh:241
 #, sh-format
 msgid ""
 "error: unknown option for 'stash save': $option\n"
 "       To provide a message, use git stash save -- '$option'"
 msgstr ""
 "lỗi: không hiểu tùy chọn cho “stash save”: $option\n"
 "     Để có thể dùng lời chú thích có chứa -- ở đầu,\n"
 "     dùng git stash save -- \"$option\""
 
-#: git-stash.sh:259
+#: git-stash.sh:262
 msgid "No local changes to save"
 msgstr "Không có thay đổi nội bộ nào được ghi lại"
 
-#: git-stash.sh:263
+#: git-stash.sh:266
 msgid "Cannot initialize stash"
 msgstr "Không thể khởi tạo stash"
 
-#: git-stash.sh:267
+#: git-stash.sh:270
 msgid "Cannot save the current status"
 msgstr "Không thể ghi lại trạng thái hiện hành"
 
-#: git-stash.sh:285
+#: git-stash.sh:288
 msgid "Cannot remove worktree changes"
 msgstr "Không thể gỡ bỏ các thay đổi cây-làm-việc"
 
-#: git-stash.sh:384
+#: git-stash.sh:389
+#, sh-format
+msgid "unknown option: $opt"
+msgstr "không hiểu tùy chọn: $opt"
+
+#: git-stash.sh:399
 msgid "No stash found."
 msgstr "Không tìm thấy lần chuyển giao cất đi (stash) nào."
 
-#: git-stash.sh:391
+#: git-stash.sh:406
 #, sh-format
 msgid "Too many revisions specified: $REV"
 msgstr "Chỉ ra quá nhiều điểm xét duyệt: $REV"
 
-#: git-stash.sh:397
+#: git-stash.sh:412
 #, sh-format
 msgid "$reference is not a valid reference"
 msgstr "$reference không phải là tham chiếu hợp lệ"
 
-#: git-stash.sh:425
+#: git-stash.sh:440
 #, sh-format
 msgid "'$args' is not a stash-like commit"
 msgstr "“$args” không phải là lần chuyển giao kiểu-stash (cất đi)"
 
-#: git-stash.sh:436
+#: git-stash.sh:451
 #, sh-format
 msgid "'$args' is not a stash reference"
 msgstr "”$args” không phải tham chiếu đến stash"
 
-#: git-stash.sh:444
+#: git-stash.sh:459
 msgid "unable to refresh index"
 msgstr "không thể làm tươi mới bảng mục lục"
 
-#: git-stash.sh:448
+#: git-stash.sh:463
 msgid "Cannot apply a stash in the middle of a merge"
 msgstr "Không thể áp dụng một stash ở giữa của quá trình hòa trộn"
 
-#: git-stash.sh:456
+#: git-stash.sh:471
 msgid "Conflicts in index. Try without --index."
 msgstr "Xung đột trong bảng mục lục. Hãy thử mà không dùng tùy chọn --index."
 
-#: git-stash.sh:458
+#: git-stash.sh:473
 msgid "Could not save index tree"
 msgstr "Không thể ghi lại cây chỉ mục"
 
-#: git-stash.sh:492
+#: git-stash.sh:507
 msgid "Cannot unstage modified files"
 msgstr "Không thể bỏ ra khỏi bệ phóng các tập tin đã được sửa chữa"
 
-#: git-stash.sh:507
+#: git-stash.sh:522
 msgid "Index was not unstashed."
 msgstr "Bảng mục lục đã không được bỏ stash."
 
-#: git-stash.sh:530
+#: git-stash.sh:545
 #, sh-format
 msgid "Dropped ${REV} ($s)"
 msgstr "Đã xóa ${REV} ($s)"
 
-#: git-stash.sh:531
+#: git-stash.sh:546
 #, sh-format
 msgid "${REV}: Could not drop stash entry"
 msgstr "${REV}: Không thể xóa bỏ mục stash"
 
-#: git-stash.sh:539
+#: git-stash.sh:554
 msgid "No branch name specified"
 msgstr "Chưa chỉ ra tên của nhánh"
 
-#: git-stash.sh:611
+#: git-stash.sh:626
 msgid "(To restore them type \"git stash apply\")"
 msgstr "(Để phục hồi lại chúng hãy gõ \"git stash apply\")"
 
 #: git-submodule.sh:95
 #, sh-format
 msgid "cannot strip one component off url '$remoteurl'"
@@ -11231,12 +11489,36 @@
 
 #: git-submodule.sh:1331
 #, sh-format
 msgid "Synchronizing submodule url for '$displaypath'"
 msgstr "Url Mô-đun-con đồng bộ hóa cho “$displaypath”"
 
+#~ msgid "no branch specified"
+#~ msgstr "chưa chỉ ra tên của nhánh"
+
+#~ msgid "check a branch out in a separate working directory"
+#~ msgstr "lấy ra một nhánh trong một thư mục làm việc cách biệt"
+
+#~ msgid "prune .git/worktrees"
+#~ msgstr "xén .git/worktrees"
+
+#~ msgid "--worktrees does not take extra arguments"
+#~ msgstr "--worktrees không nhận các đối số thêm"
+
+#~ msgid "The most commonly used git commands are:"
+#~ msgstr "Những lệnh git hay được dùng nhất là:"
+
+#~ msgid "No such branch: '%s'"
+#~ msgstr "Không có nhánh nào như thế: “%s”"
+
+#~ msgid "Could not create git link %s"
+#~ msgstr "Không thể tạo liên kết git “%s”"
+
+#~ msgid "Invalid gc.pruneexpire: '%s'"
+#~ msgstr "gc.pruneexpire không hợp lệ: “%s”"
+
 #~ msgid "server does not support --atomic push"
 #~ msgstr "máy phục vụ không hỗ trợ đẩy lên --atomic"
 
 #~ msgid "(detached from %s)"
 #~ msgstr "(được tách rời từ %s)"
 
@@ -11279,15 +11561,12 @@
 #~ msgid "cannot lock HEAD ref"
 #~ msgstr "không thể khóa HEAD ref (tham chiếu)"
 
 #~ msgid "cannot update HEAD ref"
 #~ msgstr "không thể cập nhật ref (tham chiếu) HEAD"
 
-#~ msgid "Invalid %s: '%s'"
-#~ msgstr "%s không hợp lệ: “%s”"
-
 #~ msgid "Failed to chdir: %s"
 #~ msgstr "Gặp lỗi với lệnh chdir: %s"
 
 #~ msgid "cannot tell cwd"
 #~ msgstr "không nói chuyện được với lệnh cwd"
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/zh_CN.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/zh_CN.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/po/zh_CN.po	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/po/zh_CN.po	2015-07-28 04:34:56.000000000 +0800
@@ -9,16 +9,16 @@
 #   - Lian Cheng <rhythm.mail AT gmail.com>
 #
 msgid ""
 msgstr ""
 "Project-Id-Version: Git\n"
 "Report-Msgid-Bugs-To: Git Mailing List <git@vger.kernel.org>\n"
-"POT-Creation-Date: 2015-04-03 08:13+0800\n"
-"PO-Revision-Date: 2015-04-03 08:35+0800\n"
+"POT-Creation-Date: 2015-07-14 07:19+0800\n"
+"PO-Revision-Date: 2015-07-14 07:32+0800\n"
 "Last-Translator: Jiang Xin <worldhello.net@gmail.com>\n"
-"Language-Team: GitHub <https://github.com/gotgit/git/>\n"
+"Language-Team: GitHub <https://github.com/jiangxin/git/>\n"
 "Language: zh_CN\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
 "Plural-Forms: nplurals=2; plural=(n != 1);\n"
 
@@ -50,13 +50,13 @@
 "git archive --remote <版本库> [--exec <命令>] [<选项>] <树或提交> [<路径>...]"
 
 #: archive.c:14
 msgid "git archive --remote <repo> [--exec <cmd>] --list"
 msgstr "git archive --remote <版本库> [--exec <命令>] --list"
 
-#: archive.c:342 builtin/add.c:137 builtin/add.c:427 builtin/rm.c:328
+#: archive.c:342 builtin/add.c:137 builtin/add.c:428 builtin/rm.c:327
 #, c-format
 msgid "pathspec '%s' did not match any files"
 msgstr "路径规则 '%s' 未匹配任何文件"
 
 #: archive.c:427
 msgid "fmt"
@@ -73,15 +73,15 @@
 #: archive.c:429
 msgid "prepend prefix to each pathname in the archive"
 msgstr "为归档中每个路径名加上前缀"
 
 #: archive.c:430 builtin/archive.c:88 builtin/blame.c:2516
 #: builtin/blame.c:2517 builtin/config.c:57 builtin/fast-export.c:986
-#: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:101
+#: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:99
 #: builtin/ls-files.c:446 builtin/ls-files.c:449 builtin/notes.c:394
-#: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:151
+#: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:150
 msgid "file"
 msgstr "文件"
 
 #: archive.c:431 builtin/archive.c:89
 msgid "write the archive to this file"
 msgstr "归档写入此文件"
@@ -107,13 +107,13 @@
 msgstr "压缩效果更好"
 
 #: archive.c:447
 msgid "list supported archive formats"
 msgstr "列出支持的归档格式"
 
-#: archive.c:449 builtin/archive.c:90 builtin/clone.c:86
+#: archive.c:449 builtin/archive.c:90 builtin/clone.c:77
 msgid "repo"
 msgstr "版本库"
 
 #: archive.c:450 builtin/archive.c:91
 msgid "retrieve the archive from remote repository <repo>"
 msgstr "从远程版本库（<版本库>）提取归档文件"
@@ -123,13 +123,13 @@
 msgstr "命令"
 
 #: archive.c:452 builtin/archive.c:93
 msgid "path to the remote git-upload-archive command"
 msgstr "远程 git-upload-archive 命令的路径"
 
-#: attr.c:264
+#: attr.c:265
 msgid ""
 "Negative patterns are ignored in git attributes\n"
 "Use '\\!' for literal leading exclamation."
 msgstr ""
 "负值模版在 git attributes 中被忽略\n"
 "当字符串确实要以感叹号开始时，使用 '\\!'。"
@@ -258,14 +258,14 @@
 
 #: bundle.c:139
 msgid "Repository lacks these prerequisite commits:"
 msgstr "版本库缺少这些必备的提交："
 
 #: bundle.c:163 sequencer.c:650 sequencer.c:1105 builtin/blame.c:2705
-#: builtin/branch.c:659 builtin/commit.c:1045 builtin/log.c:330
-#: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:358
+#: builtin/branch.c:651 builtin/commit.c:1045 builtin/log.c:330
+#: builtin/log.c:825 builtin/log.c:1432 builtin/log.c:1666 builtin/merge.c:358
 #: builtin/shortlog.c:158
 msgid "revision walk setup failed"
 msgstr "版本遍历设置失败"
 
 #: bundle.c:185
 #, c-format
@@ -506,35 +506,43 @@
 "Found errors in 'diff.dirstat' config variable:\n"
 "%s"
 msgstr ""
 "发现配置变量 'diff.dirstat' 中的错误：\n"
 "%s"
 
-#: diff.c:2956
+#: diff.c:2997
 #, c-format
 msgid "external diff died, stopping at %s"
 msgstr "外部 diff 退出，停止在 %s"
 
-#: diff.c:3351
+#: diff.c:3393
 msgid "--follow requires exactly one pathspec"
 msgstr "--follow 参数后只跟一个 pathspec"
 
-#: diff.c:3514
+#: diff.c:3556
 #, c-format
 msgid ""
 "Failed to parse --dirstat/-X option parameter:\n"
 "%s"
 msgstr ""
 "无法解析 --dirstat/-X 选项的参数：\n"
 "%s"
 
-#: diff.c:3528
+#: diff.c:3570
 #, c-format
 msgid "Failed to parse --submodule option parameter: '%s'"
 msgstr "无法解析 --submodule 选项的参数：'%s'"
 
+#: dir.c:1852
+msgid "failed to get kernel name and information"
+msgstr "无法获得内核名称和信息"
+
+#: dir.c:1945
+msgid "Untracked cache is disabled on this system."
+msgstr "缓存未跟踪文件在本系统被禁用"
+
 #: gpg-interface.c:129 gpg-interface.c:200
 msgid "could not run gpg."
 msgstr "不能执行 gpg。"
 
 #: gpg-interface.c:141
 msgid "gpg did not accept the data"
@@ -575,49 +583,49 @@
 msgstr "在 '%s' 下可用的 git 命令"
 
 #: help.c:214
 msgid "git commands available from elsewhere on your $PATH"
 msgstr "在 $PATH 路径中的其他地方可用的 git 命令"
 
-#: help.c:230
-msgid "The most commonly used git commands are:"
-msgstr "最常用的 git 命令有："
+#: help.c:246
+msgid "These are common Git commands used in various situations:"
+msgstr "这些是各种场合常见的 Git 命令："
 
-#: help.c:289
+#: help.c:311
 #, c-format
 msgid ""
 "'%s' appears to be a git command, but we were not\n"
 "able to execute it. Maybe git-%s is broken?"
 msgstr ""
 "'%s' 像是一个 git 命令，但却无法运行。\n"
 "可能是 git-%s 受损？"
 
-#: help.c:346
+#: help.c:368
 msgid "Uh oh. Your system reports no Git commands at all."
 msgstr "唉呀，您的系统中未发现 Git 命令。"
 
-#: help.c:368
+#: help.c:390
 #, c-format
 msgid ""
 "WARNING: You called a Git command named '%s', which does not exist.\n"
 "Continuing under the assumption that you meant '%s'"
 msgstr ""
 "警告：您运行一个不存在的 Git 命令 '%s'。继续执行假定您要要运行的\n"
 "是 '%s'"
 
-#: help.c:373
+#: help.c:395
 #, c-format
 msgid "in %0.1f seconds automatically..."
 msgstr "在 %0.1f 秒钟后自动运行..."
 
-#: help.c:380
+#: help.c:402
 #, c-format
 msgid "git: '%s' is not a git command. See 'git --help'."
 msgstr "git：'%s' 不是一个 git 命令。参见 'git --help'。"
 
-#: help.c:384 help.c:444
+#: help.c:406 help.c:466
 msgid ""
 "\n"
 "Did you mean this?"
 msgid_plural ""
 "\n"
 "Did you mean one of these?"
@@ -625,31 +633,31 @@
 "\n"
 "您指的是这个么？"
 msgstr[1] ""
 "\n"
 "您指的是这其中的某一个么？"
 
-#: help.c:440
+#: help.c:462
 #, c-format
 msgid "%s: %s - %s"
 msgstr "%s：%s - %s"
 
-#: lockfile.c:283
+#: lockfile.c:345
 msgid "BUG: reopen a lockfile that is still open"
 msgstr "BUG: 重新打开一个仍打开着的锁文件"
 
-#: lockfile.c:285
+#: lockfile.c:347
 msgid "BUG: reopen a lockfile that has been committed"
 msgstr "BUG: 重新打开一个已提交的锁文件"
 
 #: merge.c:41
 msgid "failed to read the cache"
 msgstr "无法读取缓存"
 
-#: merge.c:94 builtin/checkout.c:374 builtin/checkout.c:580
-#: builtin/clone.c:662
+#: merge.c:94 builtin/checkout.c:376 builtin/checkout.c:587
+#: builtin/clone.c:647
 msgid "unable to write new index file"
 msgstr "无法写新的索引文件"
 
 #: merge-recursive.c:189
 #, c-format
 msgid "(bad commit)\n"
@@ -661,247 +669,247 @@
 msgstr "为路径 '%s' addinfo_cache 失败"
 
 #: merge-recursive.c:270
 msgid "error building trees"
 msgstr "无法创建树"
 
-#: merge-recursive.c:688
+#: merge-recursive.c:687
 #, c-format
 msgid "failed to create path '%s'%s"
 msgstr "无法创建路径 '%s'%s"
 
-#: merge-recursive.c:699
+#: merge-recursive.c:698
 #, c-format
 msgid "Removing %s to make room for subdirectory\n"
 msgstr "删除 %s 以便为子目录留出空间\n"
 
-#: merge-recursive.c:713 merge-recursive.c:734
+#: merge-recursive.c:712 merge-recursive.c:733
 msgid ": perhaps a D/F conflict?"
 msgstr "：可能是一个目录/文件冲突？"
 
-#: merge-recursive.c:724
+#: merge-recursive.c:723
 #, c-format
 msgid "refusing to lose untracked file at '%s'"
 msgstr "拒绝丢弃 '%s' 中的未跟踪文件"
 
-#: merge-recursive.c:764
+#: merge-recursive.c:763
 #, c-format
 msgid "cannot read object %s '%s'"
 msgstr "不能读取对象 %s '%s'"
 
-#: merge-recursive.c:766
+#: merge-recursive.c:765
 #, c-format
 msgid "blob expected for %s '%s'"
 msgstr "%s '%s' 应为数据（blob）对象"
 
-#: merge-recursive.c:789 builtin/clone.c:321
+#: merge-recursive.c:788 builtin/clone.c:306
 #, c-format
 msgid "failed to open '%s'"
 msgstr "无法打开 '%s'"
 
-#: merge-recursive.c:797
+#: merge-recursive.c:796
 #, c-format
 msgid "failed to symlink '%s'"
 msgstr "无法创建符号链接 '%s'"
 
-#: merge-recursive.c:800
+#: merge-recursive.c:799
 #, c-format
 msgid "do not know what to do with %06o %s '%s'"
 msgstr "不知道如何处理 %06o %s '%s'"
 
-#: merge-recursive.c:938
+#: merge-recursive.c:937
 msgid "Failed to execute internal merge"
 msgstr "无法执行内部合并"
 
-#: merge-recursive.c:942
+#: merge-recursive.c:941
 #, c-format
 msgid "Unable to add %s to database"
 msgstr "不能添加 %s 至对象库"
 
-#: merge-recursive.c:958
+#: merge-recursive.c:957
 msgid "unsupported object type in the tree"
 msgstr "在树中有不支持的对象类型"
 
-#: merge-recursive.c:1033 merge-recursive.c:1047
+#: merge-recursive.c:1032 merge-recursive.c:1046
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree."
 msgstr ""
 "冲突（%1$s/删除）：%2$s 在 %3$s 中被删除，在 %5$s 中被 %4$s。%7$s 在 %6$s 中"
 "的版本被保留。"
 
-#: merge-recursive.c:1039 merge-recursive.c:1052
+#: merge-recursive.c:1038 merge-recursive.c:1051
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree at %s."
 msgstr ""
 "冲突（%1$s/删除）：%2$s 在 %3$s 中被删除，在 %5$s 中被 %4$s。%7$s 在 %6$s 中"
 "的版本保留于 %8$s 中。"
 
-#: merge-recursive.c:1093
+#: merge-recursive.c:1092
 msgid "rename"
 msgstr "重命名"
 
-#: merge-recursive.c:1093
+#: merge-recursive.c:1092
 msgid "renamed"
 msgstr "重命名"
 
-#: merge-recursive.c:1149
+#: merge-recursive.c:1148
 #, c-format
 msgid "%s is a directory in %s adding as %s instead"
 msgstr "%s 是 %s 中的一个目录而以 %s 为名被添加"
 
-#: merge-recursive.c:1171
+#: merge-recursive.c:1170
 #, c-format
 msgid ""
 "CONFLICT (rename/rename): Rename \"%s\"->\"%s\" in branch \"%s\" rename \"%s"
 "\"->\"%s\" in \"%s\"%s"
 msgstr ""
 "冲突（重命名/重命名）：在分支 \"%3$s\" 中重命名 \"%1$s\"->\"%2$s\"，在分支 "
 "\"%6$s\" 中重命名 \"%4$s\"->\"%5$s\"%7$s"
 
-#: merge-recursive.c:1176
+#: merge-recursive.c:1175
 msgid " (left unresolved)"
 msgstr "（留下未解决）"
 
-#: merge-recursive.c:1230
+#: merge-recursive.c:1229
 #, c-format
 msgid "CONFLICT (rename/rename): Rename %s->%s in %s. Rename %s->%s in %s"
 msgstr ""
 "冲突（重命名/重命名）：在 %3$s 中重命名 %1$s->%2$s，在 %6$s 中重命名 %4$s->"
 "%5$s"
 
-#: merge-recursive.c:1260
+#: merge-recursive.c:1259
 #, c-format
 msgid "Renaming %s to %s and %s to %s instead"
 msgstr "而是重命名 %s 至 %s，以及 %s 至 %s"
 
-#: merge-recursive.c:1459
+#: merge-recursive.c:1458
 #, c-format
 msgid "CONFLICT (rename/add): Rename %s->%s in %s. %s added in %s"
 msgstr "冲突（重命名/添加）：在 %3$s 中重命名 %1$s->%2$s。在 %5$s 中添加 %4$s"
 
-#: merge-recursive.c:1469
+#: merge-recursive.c:1468
 #, c-format
 msgid "Adding merged %s"
 msgstr "添加合并后的 %s"
 
-#: merge-recursive.c:1474 merge-recursive.c:1672
+#: merge-recursive.c:1473 merge-recursive.c:1671
 #, c-format
 msgid "Adding as %s instead"
 msgstr "而是以 %s 为名添加"
 
-#: merge-recursive.c:1525
+#: merge-recursive.c:1524
 #, c-format
 msgid "cannot read object %s"
 msgstr "不能读取对象 %s"
 
-#: merge-recursive.c:1528
+#: merge-recursive.c:1527
 #, c-format
 msgid "object %s is not a blob"
 msgstr "对象 %s 不是一个数据（blob）对象"
 
-#: merge-recursive.c:1576
+#: merge-recursive.c:1575
 msgid "modify"
 msgstr "修改"
 
-#: merge-recursive.c:1576
+#: merge-recursive.c:1575
 msgid "modified"
 msgstr "修改"
 
-#: merge-recursive.c:1586
+#: merge-recursive.c:1585
 msgid "content"
 msgstr "内容"
 
-#: merge-recursive.c:1593
+#: merge-recursive.c:1592
 msgid "add/add"
 msgstr "添加/添加"
 
-#: merge-recursive.c:1627
+#: merge-recursive.c:1626
 #, c-format
 msgid "Skipped %s (merged same as existing)"
 msgstr "略过 %s（已经做过相同合并）"
 
-#: merge-recursive.c:1641
+#: merge-recursive.c:1640
 #, c-format
 msgid "Auto-merging %s"
 msgstr "自动合并 %s"
 
-#: merge-recursive.c:1645 git-submodule.sh:1150
+#: merge-recursive.c:1644 git-submodule.sh:1150
 msgid "submodule"
 msgstr "子模组"
 
-#: merge-recursive.c:1646
+#: merge-recursive.c:1645
 #, c-format
 msgid "CONFLICT (%s): Merge conflict in %s"
 msgstr "冲突（%s）：合并冲突于 %s"
 
-#: merge-recursive.c:1732
+#: merge-recursive.c:1731
 #, c-format
 msgid "Removing %s"
 msgstr "删除 %s"
 
-#: merge-recursive.c:1757
+#: merge-recursive.c:1756
 msgid "file/directory"
 msgstr "文件/目录"
 
-#: merge-recursive.c:1763
+#: merge-recursive.c:1762
 msgid "directory/file"
 msgstr "目录/文件"
 
-#: merge-recursive.c:1768
+#: merge-recursive.c:1767
 #, c-format
 msgid "CONFLICT (%s): There is a directory with name %s in %s. Adding %s as %s"
 msgstr "冲突（%1$s）：在 %3$s 中有一个名为 %2$s 的目录。以 %5$s 为名添加 %4$s"
 
-#: merge-recursive.c:1778
+#: merge-recursive.c:1777
 #, c-format
 msgid "Adding %s"
 msgstr "添加 %s"
 
-#: merge-recursive.c:1795
+#: merge-recursive.c:1794
 msgid "Fatal merge failure, shouldn't happen."
 msgstr "严重的合并错误，不应发生。"
 
-#: merge-recursive.c:1814
+#: merge-recursive.c:1813
 msgid "Already up-to-date!"
 msgstr "已经是最新的！"
 
-#: merge-recursive.c:1823
+#: merge-recursive.c:1822
 #, c-format
 msgid "merging of trees %s and %s failed"
 msgstr "无法合并树 %s 和 %s"
 
-#: merge-recursive.c:1853
+#: merge-recursive.c:1852
 #, c-format
 msgid "Unprocessed path??? %s"
 msgstr "未处理的路径??? %s"
 
-#: merge-recursive.c:1901
+#: merge-recursive.c:1900
 msgid "Merging:"
 msgstr "合并："
 
-#: merge-recursive.c:1914
+#: merge-recursive.c:1913
 #, c-format
 msgid "found %u common ancestor:"
 msgid_plural "found %u common ancestors:"
 msgstr[0] "发现 %u 个共同祖先："
 msgstr[1] "发现 %u 个共同祖先："
 
-#: merge-recursive.c:1951
+#: merge-recursive.c:1950
 msgid "merge returned no commit"
 msgstr "合并未返回提交"
 
-#: merge-recursive.c:2008
+#: merge-recursive.c:2007
 #, c-format
 msgid "Could not parse object '%s'"
 msgstr "不能解析对象 '%s'"
 
-#: merge-recursive.c:2019 builtin/merge.c:667
+#: merge-recursive.c:2018 builtin/merge.c:645
 msgid "Unable to write index."
 msgstr "不能写入索引。"
 
 #: notes-utils.c:41
 msgid "Cannot commit uninitialized/unreferenced notes tree"
 msgstr "不能提交未初始化/未引用的注解树"
@@ -920,13 +928,13 @@
 #. environment variable, the second %s is its value
 #: notes-utils.c:119
 #, c-format
 msgid "Bad %s value: '%s'"
 msgstr "坏的 %s 值：'%s'"
 
-#: object.c:241
+#: object.c:242
 #, c-format
 msgid "unable to parse object: %s"
 msgstr "不能解析对象：%s"
 
 #: parse-options.c:546
 msgid "..."
@@ -1017,92 +1025,134 @@
 "添加 ':/' 或 '.' ？"
 
 #: pretty.c:968
 msgid "unable to parse --pretty format"
 msgstr "不能解析 --pretty 格式"
 
-#: progress.c:225
+#: progress.c:236
 msgid "done"
 msgstr "完成"
 
-#: read-cache.c:1275
+#: read-cache.c:1295
 #, c-format
 msgid ""
 "index.version set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "设置了 index.version，但是取值无效。\n"
 "使用版本 %i"
 
-#: read-cache.c:1285
+#: read-cache.c:1305
 #, c-format
 msgid ""
 "GIT_INDEX_VERSION set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "设置了 GIT_INDEX_VERSION，但是取值无效。\n"
 "使用版本 %i"
 
-#: remote.c:782
+#: remote.c:792
 #, c-format
 msgid "Cannot fetch both %s and %s to %s"
 msgstr "不能同时获取 %s 和 %s 至 %s"
 
-#: remote.c:786
+#: remote.c:796
 #, c-format
 msgid "%s usually tracks %s, not %s"
 msgstr "%s 通常跟踪 %s，而非 %s"
 
-#: remote.c:790
+#: remote.c:800
 #, c-format
 msgid "%s tracks both %s and %s"
 msgstr "%s 同时跟踪 %s 和 %s"
 
-#: remote.c:798
+#: remote.c:808
 msgid "Internal error"
 msgstr "内部错误"
 
-#: remote.c:1980
+#: remote.c:1723 remote.c:1766
+msgid "HEAD does not point to a branch"
+msgstr "HEAD 没有指向一个分支"
+
+#: remote.c:1732
+#, c-format
+msgid "no such branch: '%s'"
+msgstr "没有此分支：'%s'"
+
+#: remote.c:1735
+#, c-format
+msgid "no upstream configured for branch '%s'"
+msgstr "尚未给分支 '%s' 设置上游"
+
+#: remote.c:1741
+#, c-format
+msgid "upstream branch '%s' not stored as a remote-tracking branch"
+msgstr "上游分支 '%s' 没有存储为一个远程跟踪分支"
+
+#: remote.c:1756
+#, c-format
+msgid "push destination '%s' on remote '%s' has no local tracking branch"
+msgstr "推送目标 '%s' 至远程 '%s' 没有本地跟踪分支"
+
+#: remote.c:1771
+#, c-format
+msgid "branch '%s' has no remote for pushing"
+msgstr "分支 '%s' 没有设置要推送的远程服务器"
+
+#: remote.c:1782
+#, c-format
+msgid "push refspecs for '%s' do not include '%s'"
+msgstr "向 '%s' 推送引用表达式未包含 '%s'"
+
+#: remote.c:1795
+msgid "push has no destination (push.default is 'nothing')"
+msgstr "推送无目标（push.default 是 'nothing'）"
+
+#: remote.c:1817
+msgid "cannot resolve 'simple' push to a single destination"
+msgstr "无法解析 'simple' 推送至一个单独的目标"
+
+#: remote.c:2124
 #, c-format
 msgid "Your branch is based on '%s', but the upstream is gone.\n"
 msgstr "您的分支基于 '%s'，但此上游分支已经不存在。\n"
 
-#: remote.c:1984
+#: remote.c:2128
 msgid "  (use \"git branch --unset-upstream\" to fixup)\n"
 msgstr "  （使用 \"git branch --unset-upstream\" 来修复）\n"
 
-#: remote.c:1987
+#: remote.c:2131
 #, c-format
 msgid "Your branch is up-to-date with '%s'.\n"
 msgstr "您的分支与上游分支 '%s' 一致。\n"
 
-#: remote.c:1991
+#: remote.c:2135
 #, c-format
 msgid "Your branch is ahead of '%s' by %d commit.\n"
 msgid_plural "Your branch is ahead of '%s' by %d commits.\n"
 msgstr[0] "您的分支领先 '%s' 共 %d 个提交。\n"
 msgstr[1] "您的分支领先 '%s' 共 %d 个提交。\n"
 
-#: remote.c:1997
+#: remote.c:2141
 msgid "  (use \"git push\" to publish your local commits)\n"
 msgstr "  （使用 \"git push\" 来发布您的本地提交）\n"
 
-#: remote.c:2000
+#: remote.c:2144
 #, c-format
 msgid "Your branch is behind '%s' by %d commit, and can be fast-forwarded.\n"
 msgid_plural ""
 "Your branch is behind '%s' by %d commits, and can be fast-forwarded.\n"
 msgstr[0] "您的分支落后 '%s' 共 %d 个提交，并且可以快进。\n"
 msgstr[1] "您的分支落后 '%s' 共 %d 个提交，并且可以快进。\n"
 
 #  译者：注意保持前导空格
-#: remote.c:2008
+#: remote.c:2152
 msgid "  (use \"git pull\" to update your local branch)\n"
 msgstr "  （使用 \"git pull\" 来更新您的本地分支）\n"
 
-#: remote.c:2011
+#: remote.c:2155
 #, c-format
 msgid ""
 "Your branch and '%s' have diverged,\n"
 "and have %d and %d different commit each, respectively.\n"
 msgid_plural ""
 "Your branch and '%s' have diverged,\n"
@@ -1112,17 +1162,17 @@
 "并且分别有 %d 和 %d 处不同的提交。\n"
 msgstr[1] ""
 "您的分支和 '%s' 出现了偏离，\n"
 "并且分别有 %d 和 %d 处不同的提交。\n"
 
 #  译者：注意保持前导空格
-#: remote.c:2021
+#: remote.c:2165
 msgid "  (use \"git pull\" to merge the remote branch into yours)\n"
 msgstr "  （使用 \"git pull\" 来合并远程分支）\n"
 
-#: revision.c:2348
+#: revision.c:2366
 msgid "--first-parent is incompatible with --bisect"
 msgstr "--first-parent 与 --bisect 不兼容"
 
 #: run-command.c:83
 msgid "open /dev/null failed"
 msgstr "不能打开 /dev/null"
@@ -1133,28 +1183,28 @@
 msgstr "不能调用 dup2(%d,%d)"
 
 #: send-pack.c:272
 msgid "failed to sign the push certificate"
 msgstr "无法为推送证书签名"
 
-#: send-pack.c:356
+#: send-pack.c:378
 msgid "the receiving end does not support --signed push"
 msgstr "接收端不支持签名推送"
 
-#: send-pack.c:366
+#: send-pack.c:389
 msgid "the receiving end does not support --atomic push"
 msgstr "接收端不支持原子推送"
 
-#: sequencer.c:172 builtin/merge.c:782 builtin/merge.c:893 builtin/merge.c:995
-#: builtin/merge.c:1005
+#: sequencer.c:172 builtin/merge.c:760 builtin/merge.c:871 builtin/merge.c:973
+#: builtin/merge.c:983
 #, c-format
 msgid "Could not open '%s' for writing"
 msgstr "不能为写入打开 '%s'"
 
-#: sequencer.c:174 builtin/merge.c:344 builtin/merge.c:785 builtin/merge.c:997
-#: builtin/merge.c:1010
+#: sequencer.c:174 builtin/merge.c:344 builtin/merge.c:763 builtin/merge.c:975
+#: builtin/merge.c:988
 #, c-format
 msgid "Could not write to '%s'"
 msgstr "不能写入 '%s'"
 
 #: sequencer.c:195
 msgid ""
@@ -1345,13 +1395,13 @@
 msgstr "不能解析 HEAD"
 
 #: sequencer.c:886
 msgid "cannot abort from a branch yet to be born"
 msgstr "不能从尚未建立的分支终止"
 
-#: sequencer.c:908 builtin/apply.c:4288
+#: sequencer.c:908 builtin/apply.c:4291
 #, c-format
 msgid "cannot open %s: %s"
 msgstr "不能打开 %s：%s"
 
 #: sequencer.c:911
 #, c-format
@@ -1387,13 +1437,18 @@
 msgstr "不能作为初始提交还原"
 
 #: sequencer.c:1124
 msgid "Can't cherry-pick into empty head"
 msgstr "不能拣选到空分支"
 
-#: sha1_name.c:440
+#: setup.c:243
+#, c-format
+msgid "failed to read %s"
+msgstr "无法读取 %s"
+
+#: sha1_name.c:453
 msgid ""
 "Git normally never creates a ref that ends with 40 hex characters\n"
 "because it will be ignored when you just specify 40-hex. These refs\n"
 "may be created by mistake. For example,\n"
 "\n"
 "  git checkout -b $br $(git rev-parse ...)\n"
@@ -1408,31 +1463,12 @@
 "  git checkout -b $br $(git rev-parse ...)\n"
 "\n"
 "当 \"$br\" 空白时一个40位十六进制的引用将被创建。请检查这些引用，\n"
 "可能需要删除它们。用 \"git config advice.objectNameWarning false\"\n"
 "命令关闭本消息通知。"
 
-#: sha1_name.c:1068
-msgid "HEAD does not point to a branch"
-msgstr "HEAD 没有指向一个分支"
-
-#: sha1_name.c:1071
-#, c-format
-msgid "No such branch: '%s'"
-msgstr "没有此分支：'%s'"
-
-#: sha1_name.c:1073
-#, c-format
-msgid "No upstream configured for branch '%s'"
-msgstr "尚未给分支 '%s' 设置上游"
-
-#: sha1_name.c:1077
-#, c-format
-msgid "Upstream branch '%s' not stored as a remote-tracking branch"
-msgstr "上游分支 '%s' 没有存储为一个远程跟踪分支"
-
 #: submodule.c:64 submodule.c:98
 msgid "Cannot change unmerged .gitmodules, resolve merge conflicts first"
 msgstr "无法修改未合并的 .gitmodules，先解决合并冲突"
 
 #: submodule.c:68 submodule.c:102
 #, c-format
@@ -1450,18 +1486,13 @@
 msgstr "无法移除 %s 的 .gitmodules 条目"
 
 #: submodule.c:120
 msgid "staging updated .gitmodules failed"
 msgstr "将更新后 .gitmodules 添加暂存区失败"
 
-#: submodule.c:1109 builtin/init-db.c:371
-#, c-format
-msgid "Could not create git link %s"
-msgstr "不能创建 git link %s"
-
-#: submodule.c:1120
+#: submodule.c:1115
 #, c-format
 msgid "Could not set core.worktree in %s"
 msgstr "不能在 %s 中设置 core.worktree"
 
 #: trailer.c:491 trailer.c:495 trailer.c:499 trailer.c:553 trailer.c:557
 #: trailer.c:561
@@ -1485,13 +1516,13 @@
 msgstr "不能读取输入文件 '%s'"
 
 #: trailer.c:704
 msgid "could not read from stdin"
 msgstr "不能自标准输入读取"
 
-#: unpack-trees.c:202
+#: unpack-trees.c:203
 msgid "Checking out files"
 msgstr "正在检出文件"
 
 #: urlmatch.c:120
 msgid "invalid URL scheme name or missing '://' suffix"
 msgstr "无效的 URL 方案名称或丢失 '://' 后缀"
@@ -1541,12 +1572,27 @@
 msgstr "无此用户"
 
 #: wrapper.c:564
 msgid "unable to get current working directory"
 msgstr "不能获取当前工作目录"
 
+#: wrapper.c:575
+#, c-format
+msgid "could not open %s for writing"
+msgstr "不能写入 %s"
+
+#: wrapper.c:587
+#, c-format
+msgid "could not write to %s"
+msgstr "不能写入 %s"
+
+#: wrapper.c:593
+#, c-format
+msgid "could not close %s"
+msgstr "不能关闭 %s"
+
 #: wt-status.c:150
 msgid "Unmerged paths:"
 msgstr "未合并的路径："
 
 #  译者：注意保持前导空格
 #: wt-status.c:177 wt-status.c:204
@@ -1571,17 +1617,17 @@
 
 #  译者：注意保持前导空格
 #: wt-status.c:187
 msgid "  (use \"git rm <file>...\" to mark resolution)"
 msgstr "  （使用 \"git rm <文件>...\" 标记解决方案）"
 
-#: wt-status.c:198 wt-status.c:878
+#: wt-status.c:198 wt-status.c:881
 msgid "Changes to be committed:"
 msgstr "要提交的变更："
 
-#: wt-status.c:216 wt-status.c:887
+#: wt-status.c:216 wt-status.c:890
 msgid "Changes not staged for commit:"
 msgstr "尚未暂存以备提交的变更："
 
 #  译者：注意保持前导空格
 #: wt-status.c:220
 msgid "  (use \"git add <file>...\" to update what will be committed)"
@@ -1691,307 +1737,307 @@
 
 #: wt-status.c:391
 #, c-format
 msgid "bug: unhandled diff status %c"
 msgstr "bug：无法处理的差异状态 %c"
 
-#: wt-status.c:753
+#: wt-status.c:755
 msgid "Submodules changed but not updated:"
 msgstr "子模组已修改但尚未更新："
 
-#: wt-status.c:755
+#: wt-status.c:757
 msgid "Submodule changes to be committed:"
 msgstr "要提交的子模组变更："
 
-#: wt-status.c:835
+#: wt-status.c:838
 msgid ""
 "Do not touch the line above.\n"
 "Everything below will be removed."
 msgstr ""
 "不要改动上面的一行。\n"
 "下面的所有内容均将被删除。"
 
-#: wt-status.c:946
+#: wt-status.c:949
 msgid "You have unmerged paths."
 msgstr "您有尚未合并的路径。"
 
 #  译者：注意保持前导空格
-#: wt-status.c:949
+#: wt-status.c:952
 msgid "  (fix conflicts and run \"git commit\")"
 msgstr "  （解决冲突并运行 \"git commit\"）"
 
-#: wt-status.c:952
+#: wt-status.c:955
 msgid "All conflicts fixed but you are still merging."
 msgstr "所有冲突已解决但您仍处于合并中。"
 
 #  译者：注意保持前导空格
-#: wt-status.c:955
+#: wt-status.c:958
 msgid "  (use \"git commit\" to conclude merge)"
 msgstr "  （使用 \"git commit\" 结束合并）"
 
-#: wt-status.c:965
+#: wt-status.c:968
 msgid "You are in the middle of an am session."
 msgstr "您正处于 am 操作过程中。"
 
-#: wt-status.c:968
+#: wt-status.c:971
 msgid "The current patch is empty."
 msgstr "当前的补丁为空。"
 
 #  译者：注意保持前导空格
-#: wt-status.c:972
+#: wt-status.c:975
 msgid "  (fix conflicts and then run \"git am --continue\")"
 msgstr "  （解决冲突，然后运行 \"git am --continue\"）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:974
+#: wt-status.c:977
 msgid "  (use \"git am --skip\" to skip this patch)"
 msgstr "  （使用 \"git am --skip\" 跳过此补丁）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:976
+#: wt-status.c:979
 msgid "  (use \"git am --abort\" to restore the original branch)"
 msgstr "  （使用 \"git am --abort\" 恢复原有分支）"
 
-#: wt-status.c:1036 wt-status.c:1053
+#: wt-status.c:1039 wt-status.c:1056
 #, c-format
 msgid "You are currently rebasing branch '%s' on '%s'."
 msgstr "您在执行将分支 '%s' 变基到 '%s' 的操作。"
 
-#: wt-status.c:1041 wt-status.c:1058
+#: wt-status.c:1044 wt-status.c:1061
 msgid "You are currently rebasing."
 msgstr "您在执行变基操作。"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1044
+#: wt-status.c:1047
 msgid "  (fix conflicts and then run \"git rebase --continue\")"
 msgstr "  （解决冲突，然后运行 \"git rebase --continue\"）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1046
+#: wt-status.c:1049
 msgid "  (use \"git rebase --skip\" to skip this patch)"
 msgstr "  （使用 \"git rebase --skip\" 跳过此补丁）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1048
+#: wt-status.c:1051
 msgid "  (use \"git rebase --abort\" to check out the original branch)"
 msgstr "  （使用 \"git rebase --abort\" 以检出原有分支）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1061
+#: wt-status.c:1064
 msgid "  (all conflicts fixed: run \"git rebase --continue\")"
 msgstr "  （所有冲突已解决：运行 \"git rebase --continue\"）"
 
-#: wt-status.c:1065
+#: wt-status.c:1068
 #, c-format
 msgid ""
 "You are currently splitting a commit while rebasing branch '%s' on '%s'."
 msgstr "您在执行将分支 '%s' 变基到 '%s' 的操作时拆分提交。"
 
-#: wt-status.c:1070
+#: wt-status.c:1073
 msgid "You are currently splitting a commit during a rebase."
 msgstr "您在执行变基操作时拆分提交。"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1073
+#: wt-status.c:1076
 msgid "  (Once your working directory is clean, run \"git rebase --continue\")"
 msgstr "  （一旦您工作目录提交干净后，运行 \"git rebase --continue\"）"
 
-#: wt-status.c:1077
+#: wt-status.c:1080
 #, c-format
 msgid "You are currently editing a commit while rebasing branch '%s' on '%s'."
 msgstr "您在执行将分支 '%s' 变基到 '%s' 的操作时编辑提交。"
 
-#: wt-status.c:1082
+#: wt-status.c:1085
 msgid "You are currently editing a commit during a rebase."
 msgstr "您在执行变基操作时编辑提交。"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1085
+#: wt-status.c:1088
 msgid "  (use \"git commit --amend\" to amend the current commit)"
 msgstr "  （使用 \"git commit --amend\" 修补当前提交）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1087
+#: wt-status.c:1090
 msgid ""
 "  (use \"git rebase --continue\" once you are satisfied with your changes)"
 msgstr "  （当您对您的修改满意后执行 \"git rebase --continue\"）"
 
-#: wt-status.c:1097
+#: wt-status.c:1100
 #, c-format
 msgid "You are currently cherry-picking commit %s."
 msgstr "您在执行拣选提交 %s 的操作。"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1102
+#: wt-status.c:1105
 msgid "  (fix conflicts and run \"git cherry-pick --continue\")"
 msgstr "  （解决冲突并运行 \"git cherry-pick --continue\"）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1105
+#: wt-status.c:1108
 msgid "  (all conflicts fixed: run \"git cherry-pick --continue\")"
 msgstr "  （所有冲突已解决：运行 \"git cherry-pick --continue\"）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1107
+#: wt-status.c:1110
 msgid "  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)"
 msgstr "  （使用 \"git cherry-pick --abort\" 以取消拣选操作）"
 
-#: wt-status.c:1116
+#: wt-status.c:1119
 #, c-format
 msgid "You are currently reverting commit %s."
 msgstr "您在执行反转提交 %s 的操作。"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1121
+#: wt-status.c:1124
 msgid "  (fix conflicts and run \"git revert --continue\")"
 msgstr "  （解决冲突并运行 \"git revert --continue\"）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1124
+#: wt-status.c:1127
 msgid "  (all conflicts fixed: run \"git revert --continue\")"
 msgstr "  （所有冲突已解决：运行 \"git revert --continue\"）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1126
+#: wt-status.c:1129
 msgid "  (use \"git revert --abort\" to cancel the revert operation)"
 msgstr "  （使用 \"git revert --abort\" 以取消反转提交操作）"
 
-#: wt-status.c:1137
+#: wt-status.c:1140
 #, c-format
 msgid "You are currently bisecting, started from branch '%s'."
 msgstr "您在执行从分支 '%s' 开始的二分查找操作。"
 
-#: wt-status.c:1141
+#: wt-status.c:1144
 msgid "You are currently bisecting."
 msgstr "您在执行二分查找操作。"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1144
+#: wt-status.c:1147
 msgid "  (use \"git bisect reset\" to get back to the original branch)"
 msgstr "  （使用 \"git bisect reset\" 以回到原有分支）"
 
-#: wt-status.c:1321
+#: wt-status.c:1324
 msgid "On branch "
 msgstr "位于分支 "
 
-#: wt-status.c:1328
+#: wt-status.c:1331
 msgid "rebase in progress; onto "
 msgstr "变基操作正在进行中；至 "
 
-#: wt-status.c:1333
+#: wt-status.c:1336
 msgid "HEAD detached at "
 msgstr "头指针分离于 "
 
-#: wt-status.c:1335
+#: wt-status.c:1338
 msgid "HEAD detached from "
 msgstr "头指针分离自 "
 
-#: wt-status.c:1338
+#: wt-status.c:1341
 msgid "Not currently on any branch."
 msgstr "当前不在任何分支上。"
 
-#: wt-status.c:1355
+#: wt-status.c:1358
 msgid "Initial commit"
 msgstr "初始提交"
 
-#: wt-status.c:1369
+#: wt-status.c:1372
 msgid "Untracked files"
 msgstr "未跟踪的文件"
 
-#: wt-status.c:1371
+#: wt-status.c:1374
 msgid "Ignored files"
 msgstr "忽略的文件"
 
-#: wt-status.c:1375
+#: wt-status.c:1378
 #, c-format
 msgid ""
 "It took %.2f seconds to enumerate untracked files. 'status -uno'\n"
 "may speed it up, but you have to be careful not to forget to add\n"
 "new files yourself (see 'git help status')."
 msgstr ""
 "耗费了 %.2f 秒以枚举未跟踪的文件。'status -uno' 也许能提高速度，\n"
 "但您需要小心不要忘了添加新文件（参见 'git help status'）。"
 
-#: wt-status.c:1381
+#: wt-status.c:1384
 #, c-format
 msgid "Untracked files not listed%s"
 msgstr "未跟踪的文件没有列出%s"
 
 #  译者：中文字符串拼接，可删除前导空格
-#: wt-status.c:1383
+#: wt-status.c:1386
 msgid " (use -u option to show untracked files)"
 msgstr "（使用 -u 参数显示未跟踪的文件）"
 
-#: wt-status.c:1389
+#: wt-status.c:1392
 msgid "No changes"
 msgstr "没有修改"
 
-#: wt-status.c:1394
+#: wt-status.c:1397
 #, c-format
 msgid "no changes added to commit (use \"git add\" and/or \"git commit -a\")\n"
 msgstr "修改尚未加入提交（使用 \"git add\" 和/或 \"git commit -a\"）\n"
 
-#: wt-status.c:1397
+#: wt-status.c:1400
 #, c-format
 msgid "no changes added to commit\n"
 msgstr "修改尚未加入提交\n"
 
-#: wt-status.c:1400
+#: wt-status.c:1403
 #, c-format
 msgid ""
 "nothing added to commit but untracked files present (use \"git add\" to "
 "track)\n"
 msgstr "提交为空，但是存在尚未跟踪的文件（使用 \"git add\" 建立跟踪）\n"
 
-#: wt-status.c:1403
+#: wt-status.c:1406
 #, c-format
 msgid "nothing added to commit but untracked files present\n"
 msgstr "提交为空，但是存在尚未跟踪的文件\n"
 
 #  译者：中文字符串拼接，可删除前导空格
-#: wt-status.c:1406
+#: wt-status.c:1409
 #, c-format
 msgid "nothing to commit (create/copy files and use \"git add\" to track)\n"
 msgstr "无文件要提交（创建/拷贝文件并使用 \"git add\" 建立跟踪）\n"
 
-#: wt-status.c:1409 wt-status.c:1414
+#: wt-status.c:1412 wt-status.c:1417
 #, c-format
 msgid "nothing to commit\n"
 msgstr "无文件要提交\n"
 
 #  译者：中文字符串拼接，可删除前导空格
-#: wt-status.c:1412
+#: wt-status.c:1415
 #, c-format
 msgid "nothing to commit (use -u to show untracked files)\n"
 msgstr "无文件要提交（使用 -u 显示未跟踪的文件）\n"
 
 #  译者：中文字符串拼接，可删除前导空格
-#: wt-status.c:1416
+#: wt-status.c:1419
 #, c-format
 msgid "nothing to commit, working directory clean\n"
 msgstr "无文件要提交，干净的工作区\n"
 
-#: wt-status.c:1525
+#: wt-status.c:1528
 msgid "HEAD (no branch)"
 msgstr "HEAD（非分支）"
 
 #  译者：注意保持句尾空格
-#: wt-status.c:1531
+#: wt-status.c:1534
 msgid "Initial commit on "
 msgstr "初始提交于 "
 
-#: wt-status.c:1563
+#: wt-status.c:1561
 msgid "gone"
 msgstr "丢失"
 
 #  译者：注意保持句尾空格
-#: wt-status.c:1565 wt-status.c:1573
+#: wt-status.c:1563 wt-status.c:1571
 msgid "behind "
 msgstr "落后 "
 
-#: compat/precompose_utf8.c:55 builtin/clone.c:360
+#: compat/precompose_utf8.c:55 builtin/clone.c:345
 #, c-format
 msgid "failed to unlink '%s'"
 msgstr "无法删除 '%s'"
 
 #: builtin/add.c:22
 msgid "git add [<options>] [--] <pathspec>..."
@@ -2012,132 +2058,136 @@
 msgstr "删除 '%s'\n"
 
 #: builtin/add.c:134
 msgid "Unstaged changes after refreshing the index:"
 msgstr "刷新索引之后尚未被暂存的变更："
 
-#: builtin/add.c:194 builtin/rev-parse.c:785
+#: builtin/add.c:194 builtin/rev-parse.c:796
 msgid "Could not read the index"
 msgstr "不能读取索引"
 
 #: builtin/add.c:205
 #, c-format
 msgid "Could not open '%s' for writing."
 msgstr "不能打开 '%s' 以写入。"
 
 #: builtin/add.c:209
 msgid "Could not write patch"
 msgstr "不能生成补丁"
 
-#: builtin/add.c:214
+#: builtin/add.c:212
+msgid "editing patch failed"
+msgstr "编辑补丁失败"
+
+#: builtin/add.c:215
 #, c-format
 msgid "Could not stat '%s'"
 msgstr "不能查看文件状态 '%s'"
 
-#: builtin/add.c:216
+#: builtin/add.c:217
 msgid "Empty patch. Aborted."
 msgstr "空补丁。异常终止。"
 
-#: builtin/add.c:221
+#: builtin/add.c:222
 #, c-format
 msgid "Could not apply '%s'"
 msgstr "不能应用 '%s'"
 
-#: builtin/add.c:231
+#: builtin/add.c:232
 msgid "The following paths are ignored by one of your .gitignore files:\n"
 msgstr "下列路径根据您的一个 .gitignore 文件而被忽略：\n"
 
-#: builtin/add.c:248 builtin/clean.c:876 builtin/fetch.c:107 builtin/mv.c:110
-#: builtin/prune-packed.c:55 builtin/push.c:508 builtin/remote.c:1372
-#: builtin/rm.c:269
+#: builtin/add.c:249 builtin/clean.c:874 builtin/fetch.c:107 builtin/mv.c:110
+#: builtin/prune-packed.c:55 builtin/push.c:508 builtin/remote.c:1369
+#: builtin/rm.c:268
 msgid "dry run"
 msgstr "演习"
 
-#: builtin/add.c:249 builtin/apply.c:4577 builtin/check-ignore.c:19
-#: builtin/commit.c:1322 builtin/count-objects.c:63 builtin/fsck.c:608
+#: builtin/add.c:250 builtin/apply.c:4580 builtin/check-ignore.c:19
+#: builtin/commit.c:1322 builtin/count-objects.c:63 builtin/fsck.c:616
 #: builtin/log.c:1617 builtin/mv.c:109 builtin/read-tree.c:114
 msgid "be verbose"
 msgstr "冗长输出"
 
-#: builtin/add.c:251
+#: builtin/add.c:252
 msgid "interactive picking"
 msgstr "交互式拣选"
 
-#: builtin/add.c:252 builtin/checkout.c:1126 builtin/reset.c:286
+#: builtin/add.c:253 builtin/checkout.c:1221 builtin/reset.c:286
 msgid "select hunks interactively"
 msgstr "交互式挑选数据块"
 
-#: builtin/add.c:253
+#: builtin/add.c:254
 msgid "edit current diff and apply"
 msgstr "编辑当前差异并应用"
 
-#: builtin/add.c:254
+#: builtin/add.c:255
 msgid "allow adding otherwise ignored files"
 msgstr "允许添加忽略的文件"
 
-#: builtin/add.c:255
+#: builtin/add.c:256
 msgid "update tracked files"
 msgstr "更新已跟踪的文件"
 
-#: builtin/add.c:256
+#: builtin/add.c:257
 msgid "record only the fact that the path will be added later"
 msgstr "只记录，该路径稍后再添加"
 
-#: builtin/add.c:257
+#: builtin/add.c:258
 msgid "add changes from all tracked and untracked files"
 msgstr "添加所有改变的已跟踪文件和未跟踪文件"
 
-#: builtin/add.c:260
+#: builtin/add.c:261
 msgid "ignore paths removed in the working tree (same as --no-all)"
 msgstr "忽略工作区中移除的路径（和 --no-all 相同）"
 
-#: builtin/add.c:262
+#: builtin/add.c:263
 msgid "don't add, only refresh the index"
 msgstr "不添加，只刷新索引"
 
-#: builtin/add.c:263
+#: builtin/add.c:264
 msgid "just skip files which cannot be added because of errors"
 msgstr "跳过因出错不能添加的文件"
 
-#: builtin/add.c:264
+#: builtin/add.c:265
 msgid "check if - even missing - files are ignored in dry run"
 msgstr "检查在演习模式下文件（即使不存在）是否被忽略"
 
-#: builtin/add.c:286
+#: builtin/add.c:287
 #, c-format
 msgid "Use -f if you really want to add them.\n"
 msgstr "使用 -f 参数如果您确实要添加它们。\n"
 
-#: builtin/add.c:293
+#: builtin/add.c:294
 msgid "adding files failed"
 msgstr "添加文件失败"
 
-#: builtin/add.c:329
+#: builtin/add.c:330
 msgid "-A and -u are mutually incompatible"
 msgstr "-A 和 -u 选项互斥"
 
-#: builtin/add.c:336
+#: builtin/add.c:337
 msgid "Option --ignore-missing can only be used together with --dry-run"
 msgstr "选项 --ignore-missing 只能和 --dry-run 同时使用"
 
-#: builtin/add.c:357
+#: builtin/add.c:358
 #, c-format
 msgid "Nothing specified, nothing added.\n"
 msgstr "没有指定文件，也没有文件被添加。\n"
 
-#: builtin/add.c:358
+#: builtin/add.c:359
 #, c-format
 msgid "Maybe you wanted to say 'git add .'?\n"
 msgstr "也许您想要执行 'git add .'？\n"
 
-#: builtin/add.c:363 builtin/check-ignore.c:172 builtin/clean.c:920
-#: builtin/commit.c:335 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:299
+#: builtin/add.c:364 builtin/check-ignore.c:172 builtin/clean.c:918
+#: builtin/commit.c:335 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:298
 msgid "index file corrupt"
 msgstr "索引文件损坏"
 
-#: builtin/add.c:446 builtin/apply.c:4675 builtin/mv.c:279 builtin/rm.c:431
+#: builtin/add.c:447 builtin/apply.c:4678 builtin/mv.c:279 builtin/rm.c:430
 msgid "Unable to write new index file"
 msgstr "无法写入新索引文件"
 
 #: builtin/apply.c:59
 msgid "git apply [<options>] [<patch>...]"
 msgstr "git apply [<选项>] [<补丁>...]"
@@ -2205,421 +2255,421 @@
 msgid_plural ""
 "git diff header lacks filename information when removing %d leading pathname "
 "components (line %d)"
 msgstr[0] "当移除 %d 个前导路径后 git diff 头缺乏文件名信息（第 %d 行）"
 msgstr[1] "当移除 %d 个前导路径后 git diff 头缺乏文件名信息（第 %d 行）"
 
-#: builtin/apply.c:1656
+#: builtin/apply.c:1659
 msgid "new file depends on old contents"
 msgstr "新文件依赖旧内容"
 
-#: builtin/apply.c:1658
+#: builtin/apply.c:1661
 msgid "deleted file still has contents"
 msgstr "删除的文件仍有内容"
 
-#: builtin/apply.c:1684
+#: builtin/apply.c:1687
 #, c-format
 msgid "corrupt patch at line %d"
 msgstr "补丁在第 %d 行损坏"
 
-#: builtin/apply.c:1720
+#: builtin/apply.c:1723
 #, c-format
 msgid "new file %s depends on old contents"
 msgstr "新文件 %s 依赖旧内容"
 
-#: builtin/apply.c:1722
+#: builtin/apply.c:1725
 #, c-format
 msgid "deleted file %s still has contents"
 msgstr "删除的文件 %s 仍有内容"
 
-#: builtin/apply.c:1725
+#: builtin/apply.c:1728
 #, c-format
 msgid "** warning: file %s becomes empty but is not deleted"
 msgstr "** 警告：文件 %s 成为空文件但并未删除"
 
-#: builtin/apply.c:1871
+#: builtin/apply.c:1874
 #, c-format
 msgid "corrupt binary patch at line %d: %.*s"
 msgstr "二进制补丁在第 %d 行损坏：%.*s"
 
-#: builtin/apply.c:1900
+#: builtin/apply.c:1903
 #, c-format
 msgid "unrecognized binary patch at line %d"
 msgstr "未能识别的二进制补丁位于第 %d 行"
 
-#: builtin/apply.c:2051
+#: builtin/apply.c:2054
 #, c-format
 msgid "patch with only garbage at line %d"
 msgstr "补丁文件的第 %d 行只有垃圾数据"
 
-#: builtin/apply.c:2141
+#: builtin/apply.c:2144
 #, c-format
 msgid "unable to read symlink %s"
 msgstr "无法读取符号链接 %s"
 
-#: builtin/apply.c:2145
+#: builtin/apply.c:2148
 #, c-format
 msgid "unable to open or read %s"
 msgstr "不能打开或读取 %s"
 
-#: builtin/apply.c:2778
+#: builtin/apply.c:2781
 #, c-format
 msgid "invalid start of line: '%c'"
 msgstr "无效的行首字符：'%c'"
 
-#: builtin/apply.c:2897
+#: builtin/apply.c:2900
 #, c-format
 msgid "Hunk #%d succeeded at %d (offset %d line)."
 msgid_plural "Hunk #%d succeeded at %d (offset %d lines)."
 msgstr[0] "块 #%d 成功应用于 %d（偏移 %d 行）"
 msgstr[1] "块 #%d 成功应用于 %d（偏移 %d 行）"
 
-#: builtin/apply.c:2909
+#: builtin/apply.c:2912
 #, c-format
 msgid "Context reduced to (%ld/%ld) to apply fragment at %d"
 msgstr "上下文减少到（%ld/%ld）以在第 %d 行应用补丁片段"
 
-#: builtin/apply.c:2915
+#: builtin/apply.c:2918
 #, c-format
 msgid ""
 "while searching for:\n"
 "%.*s"
 msgstr ""
 "当查询：\n"
 "%.*s"
 
-#: builtin/apply.c:2935
+#: builtin/apply.c:2938
 #, c-format
 msgid "missing binary patch data for '%s'"
 msgstr "缺失 '%s' 的二进制补丁数据"
 
-#: builtin/apply.c:3036
+#: builtin/apply.c:3039
 #, c-format
 msgid "binary patch does not apply to '%s'"
 msgstr "二进制补丁未应用到 '%s'"
 
-#: builtin/apply.c:3042
+#: builtin/apply.c:3045
 #, c-format
 msgid "binary patch to '%s' creates incorrect result (expecting %s, got %s)"
 msgstr "到 '%s' 的二进制补丁产生了不正确的结果（应为 %s，却为 %s）"
 
-#: builtin/apply.c:3063
+#: builtin/apply.c:3066
 #, c-format
 msgid "patch failed: %s:%ld"
 msgstr "打补丁失败：%s:%ld"
 
-#: builtin/apply.c:3187
+#: builtin/apply.c:3190
 #, c-format
 msgid "cannot checkout %s"
 msgstr "不能检出 %s"
 
-#: builtin/apply.c:3232 builtin/apply.c:3243 builtin/apply.c:3288
+#: builtin/apply.c:3235 builtin/apply.c:3246 builtin/apply.c:3291
 #, c-format
 msgid "read of %s failed"
 msgstr "读取 %s 失败"
 
-#: builtin/apply.c:3240
+#: builtin/apply.c:3243
 #, c-format
 msgid "reading from '%s' beyond a symbolic link"
 msgstr "读取位于符号链接中的 '%s'"
 
-#: builtin/apply.c:3268 builtin/apply.c:3490
+#: builtin/apply.c:3271 builtin/apply.c:3493
 #, c-format
 msgid "path %s has been renamed/deleted"
 msgstr "路径 %s 已经被重命名/删除"
 
-#: builtin/apply.c:3349 builtin/apply.c:3504
+#: builtin/apply.c:3352 builtin/apply.c:3507
 #, c-format
 msgid "%s: does not exist in index"
 msgstr "%s：不存在于索引中"
 
-#: builtin/apply.c:3353 builtin/apply.c:3496 builtin/apply.c:3518
+#: builtin/apply.c:3356 builtin/apply.c:3499 builtin/apply.c:3521
 #, c-format
 msgid "%s: %s"
 msgstr "%s：%s"
 
-#: builtin/apply.c:3358 builtin/apply.c:3512
+#: builtin/apply.c:3361 builtin/apply.c:3515
 #, c-format
 msgid "%s: does not match index"
 msgstr "%s：和索引不匹配"
 
-#: builtin/apply.c:3460
+#: builtin/apply.c:3463
 msgid "removal patch leaves file contents"
 msgstr "移除补丁仍留下了文件内容"
 
-#: builtin/apply.c:3529
+#: builtin/apply.c:3532
 #, c-format
 msgid "%s: wrong type"
 msgstr "%s：错误类型"
 
-#: builtin/apply.c:3531
+#: builtin/apply.c:3534
 #, c-format
 msgid "%s has type %o, expected %o"
 msgstr "%s 的类型是 %o，应为 %o"
 
-#: builtin/apply.c:3690 builtin/apply.c:3692
+#: builtin/apply.c:3693 builtin/apply.c:3695
 #, c-format
 msgid "invalid path '%s'"
 msgstr "无效路径 '%s'"
 
-#: builtin/apply.c:3747
+#: builtin/apply.c:3750
 #, c-format
 msgid "%s: already exists in index"
 msgstr "%s：已经存在于索引中"
 
-#: builtin/apply.c:3750
+#: builtin/apply.c:3753
 #, c-format
 msgid "%s: already exists in working directory"
 msgstr "%s：已经存在于工作区中"
 
-#: builtin/apply.c:3770
+#: builtin/apply.c:3773
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o)"
 msgstr "%2$s 的新模式（%1$o）和旧模式（%3$o）不匹配"
 
-#: builtin/apply.c:3775
+#: builtin/apply.c:3778
 #, c-format
 msgid "new mode (%o) of %s does not match old mode (%o) of %s"
 msgstr "%2$s 的新模式（%1$o）和 %4$s 的旧模式（%3$o）不匹配"
 
-#: builtin/apply.c:3795
+#: builtin/apply.c:3798
 #, c-format
 msgid "affected file '%s' is beyond a symbolic link"
 msgstr "受影响的文件 '%s' 位于符号链接中"
 
-#: builtin/apply.c:3799
+#: builtin/apply.c:3802
 #, c-format
 msgid "%s: patch does not apply"
 msgstr "%s：补丁未应用"
 
-#: builtin/apply.c:3813
+#: builtin/apply.c:3816
 #, c-format
 msgid "Checking patch %s..."
 msgstr "检查补丁 %s..."
 
-#: builtin/apply.c:3906 builtin/checkout.c:231 builtin/reset.c:135
+#: builtin/apply.c:3909 builtin/checkout.c:233 builtin/reset.c:135
 #, c-format
 msgid "make_cache_entry failed for path '%s'"
 msgstr "对路径 '%s' 的 make_cache_entry 操作失败"
 
-#: builtin/apply.c:4049
+#: builtin/apply.c:4052
 #, c-format
 msgid "unable to remove %s from index"
 msgstr "不能从索引中移除 %s"
 
-#: builtin/apply.c:4078
+#: builtin/apply.c:4081
 #, c-format
 msgid "corrupt patch for submodule %s"
 msgstr "子模组 %s 损坏的补丁"
 
-#: builtin/apply.c:4082
+#: builtin/apply.c:4085
 #, c-format
 msgid "unable to stat newly created file '%s'"
 msgstr "不能枚举新建文件 '%s' 的状态"
 
-#: builtin/apply.c:4087
+#: builtin/apply.c:4090
 #, c-format
 msgid "unable to create backing store for newly created file %s"
 msgstr "不能为新建文件 %s 创建后端存储"
 
-#: builtin/apply.c:4090 builtin/apply.c:4198
+#: builtin/apply.c:4093 builtin/apply.c:4201
 #, c-format
 msgid "unable to add cache entry for %s"
 msgstr "无法为 %s 添加缓存条目"
 
-#: builtin/apply.c:4123
+#: builtin/apply.c:4126
 #, c-format
 msgid "closing file '%s'"
 msgstr "关闭文件 '%s'"
 
-#: builtin/apply.c:4172
+#: builtin/apply.c:4175
 #, c-format
 msgid "unable to write file '%s' mode %o"
 msgstr "不能写文件 '%s' 权限 %o"
 
-#: builtin/apply.c:4259
+#: builtin/apply.c:4262
 #, c-format
 msgid "Applied patch %s cleanly."
 msgstr "成功应用补丁 %s。"
 
-#: builtin/apply.c:4267
+#: builtin/apply.c:4270
 msgid "internal error"
 msgstr "内部错误"
 
-#: builtin/apply.c:4270
+#: builtin/apply.c:4273
 #, c-format
 msgid "Applying patch %%s with %d reject..."
 msgid_plural "Applying patch %%s with %d rejects..."
 msgstr[0] "应用 %%s 个补丁，其中 %d 个被拒绝..."
 msgstr[1] "应用 %%s 个补丁，其中 %d 个被拒绝..."
 
-#: builtin/apply.c:4280
+#: builtin/apply.c:4283
 #, c-format
 msgid "truncating .rej filename to %.*s.rej"
 msgstr "截短 .rej 文件名为 %.*s.rej"
 
-#: builtin/apply.c:4301
+#: builtin/apply.c:4304
 #, c-format
 msgid "Hunk #%d applied cleanly."
 msgstr "第 #%d 个片段成功应用。"
 
-#: builtin/apply.c:4304
+#: builtin/apply.c:4307
 #, c-format
 msgid "Rejected hunk #%d."
 msgstr "拒绝第 #%d 个片段。"
 
-#: builtin/apply.c:4394
+#: builtin/apply.c:4397
 msgid "unrecognized input"
 msgstr "未能识别的输入"
 
-#: builtin/apply.c:4405
+#: builtin/apply.c:4408
 msgid "unable to read index file"
 msgstr "无法读取索引文件"
 
-#: builtin/apply.c:4522 builtin/apply.c:4525 builtin/clone.c:92
+#: builtin/apply.c:4525 builtin/apply.c:4528 builtin/clone.c:85
 #: builtin/fetch.c:92
 msgid "path"
 msgstr "路径"
 
-#: builtin/apply.c:4523
+#: builtin/apply.c:4526
 msgid "don't apply changes matching the given path"
 msgstr "不要应用与给出路径向匹配的变更"
 
-#: builtin/apply.c:4526
+#: builtin/apply.c:4529
 msgid "apply changes matching the given path"
 msgstr "应用与给出路径向匹配的变更"
 
-#: builtin/apply.c:4528
+#: builtin/apply.c:4531
 msgid "num"
 msgstr "数字"
 
-#: builtin/apply.c:4529
+#: builtin/apply.c:4532
 msgid "remove <num> leading slashes from traditional diff paths"
 msgstr "从传统的 diff 路径中移除指定数量的前导斜线"
 
-#: builtin/apply.c:4532
+#: builtin/apply.c:4535
 msgid "ignore additions made by the patch"
 msgstr "忽略补丁中的添加的文件"
 
-#: builtin/apply.c:4534
+#: builtin/apply.c:4537
 msgid "instead of applying the patch, output diffstat for the input"
 msgstr "不应用补丁，而是显示输入的差异统计（diffstat）"
 
-#: builtin/apply.c:4538
+#: builtin/apply.c:4541
 msgid "show number of added and deleted lines in decimal notation"
 msgstr "以十进制数显示添加和删除的行数"
 
-#: builtin/apply.c:4540
+#: builtin/apply.c:4543
 msgid "instead of applying the patch, output a summary for the input"
 msgstr "不应用补丁，而是显示输入的概要"
 
-#: builtin/apply.c:4542
+#: builtin/apply.c:4545
 msgid "instead of applying the patch, see if the patch is applicable"
 msgstr "不应用补丁，而是查看补丁是否可应用"
 
-#: builtin/apply.c:4544
+#: builtin/apply.c:4547
 msgid "make sure the patch is applicable to the current index"
 msgstr "确认补丁可以应用到当前索引"
 
-#: builtin/apply.c:4546
+#: builtin/apply.c:4549
 msgid "apply a patch without touching the working tree"
 msgstr "应用补丁而不修改工作区"
 
-#: builtin/apply.c:4548
+#: builtin/apply.c:4551
 msgid "accept a patch that touches outside the working area"
 msgstr "接受修改工作区之外文件的补丁"
 
-#: builtin/apply.c:4550
+#: builtin/apply.c:4553
 msgid "also apply the patch (use with --stat/--summary/--check)"
 msgstr "还应用此补丁（与 --stat/--summary/--check 选项同时使用）"
 
-#: builtin/apply.c:4552
+#: builtin/apply.c:4555
 msgid "attempt three-way merge if a patch does not apply"
 msgstr "如果一个补丁不能应用则尝试三路合并"
 
-#: builtin/apply.c:4554
+#: builtin/apply.c:4557
 msgid "build a temporary index based on embedded index information"
 msgstr "创建一个临时索引基于嵌入的索引信息"
 
-#: builtin/apply.c:4556 builtin/checkout-index.c:198 builtin/ls-files.c:412
+#: builtin/apply.c:4559 builtin/checkout-index.c:198 builtin/ls-files.c:412
 msgid "paths are separated with NUL character"
 msgstr "路径以 NUL 字符分隔"
 
-#: builtin/apply.c:4559
+#: builtin/apply.c:4562
 msgid "ensure at least <n> lines of context match"
 msgstr "确保至少匹配 <n> 行上下文"
 
-#: builtin/apply.c:4560
+#: builtin/apply.c:4563
 msgid "action"
 msgstr "动作"
 
-#: builtin/apply.c:4561
+#: builtin/apply.c:4564
 msgid "detect new or modified lines that have whitespace errors"
 msgstr "检查新增和修改的行中间的空白字符滥用"
 
-#: builtin/apply.c:4564 builtin/apply.c:4567
+#: builtin/apply.c:4567 builtin/apply.c:4570
 msgid "ignore changes in whitespace when finding context"
 msgstr "查找上下文时忽略空白字符的变更"
 
-#: builtin/apply.c:4570
+#: builtin/apply.c:4573
 msgid "apply the patch in reverse"
 msgstr "反向应用补丁"
 
-#: builtin/apply.c:4572
+#: builtin/apply.c:4575
 msgid "don't expect at least one line of context"
 msgstr "无需至少一行上下文"
 
-#: builtin/apply.c:4574
+#: builtin/apply.c:4577
 msgid "leave the rejected hunks in corresponding *.rej files"
 msgstr "将拒绝的补丁片段保存在对应的 *.rej 文件中"
 
-#: builtin/apply.c:4576
+#: builtin/apply.c:4579
 msgid "allow overlapping hunks"
 msgstr "允许重叠的补丁片段"
 
-#: builtin/apply.c:4579
+#: builtin/apply.c:4582
 msgid "tolerate incorrectly detected missing new-line at the end of file"
 msgstr "允许不正确的文件末尾换行符"
 
-#: builtin/apply.c:4582
+#: builtin/apply.c:4585
 msgid "do not trust the line counts in the hunk headers"
 msgstr "不信任补丁片段的头信息中的行号"
 
-#: builtin/apply.c:4584
+#: builtin/apply.c:4587
 msgid "root"
 msgstr "根目录"
 
-#: builtin/apply.c:4585
+#: builtin/apply.c:4588
 msgid "prepend <root> to all filenames"
 msgstr "为所有文件名前添加 <根目录>"
 
-#: builtin/apply.c:4607
+#: builtin/apply.c:4610
 msgid "--3way outside a repository"
 msgstr "--3way 在一个版本库之外"
 
-#: builtin/apply.c:4615
+#: builtin/apply.c:4618
 msgid "--index outside a repository"
 msgstr "--index 在一个版本库之外"
 
-#: builtin/apply.c:4618
+#: builtin/apply.c:4621
 msgid "--cached outside a repository"
 msgstr "--cached 在一个版本库之外"
 
-#: builtin/apply.c:4637
+#: builtin/apply.c:4640
 #, c-format
 msgid "can't open patch '%s'"
 msgstr "不能打开补丁 '%s'"
 
-#: builtin/apply.c:4651
+#: builtin/apply.c:4654
 #, c-format
 msgid "squelched %d whitespace error"
 msgid_plural "squelched %d whitespace errors"
 msgstr[0] "抑制下仍有 %d 个空白字符误用"
 msgstr[1] "抑制下仍有 %d 个空白字符误用"
 
-#: builtin/apply.c:4657 builtin/apply.c:4667
+#: builtin/apply.c:4660 builtin/apply.c:4670
 #, c-format
 msgid "%d line adds whitespace errors."
 msgid_plural "%d lines add whitespace errors."
 msgstr[0] "%d 行有空白字符误用。"
 msgstr[1] "%d 行有空白字符误用。"
 
@@ -2667,17 +2717,17 @@
 msgstr "执行 'git bisect next'"
 
 #: builtin/bisect--helper.c:19
 msgid "update BISECT_HEAD instead of checking out the current commit"
 msgstr "更新 BISECT_HEAD 而非检出当前提交"
 
-#: builtin/blame.c:30
-msgid "git blame [<options>] [<rev-opts>] [<rev>] [--] file"
-msgstr "git blame [<选项>] [<版本选项>] [<版本>] [--] 文件"
+#: builtin/blame.c:31
+msgid "git blame [<options>] [<rev-opts>] [<rev>] [--] <file>"
+msgstr "git blame [<选项>] [<版本选项>] [<版本>] [--] <文件>"
 
-#: builtin/blame.c:35
+#: builtin/blame.c:36
 msgid "<rev-opts> are documented in git-rev-list(1)"
 msgstr "<版本选项> 的文档记录在 git-rev-list(1) 中"
 
 #: builtin/blame.c:2500
 msgid "Show blame entries as we find them, incrementally"
 msgstr "增量式地显示发现的 blame 条目"
@@ -2794,463 +2844,478 @@
 
 #: builtin/branch.c:27
 msgid "git branch [<options>] (-m | -M) [<old-branch>] <new-branch>"
 msgstr "git branch [<选项>] (-m | -M) [<旧分支>] <新分支>"
 
 #  译者：保持原换行格式，在输出时 %s 的替代内容会让字符串变长
-#: builtin/branch.c:152
+#: builtin/branch.c:150
 #, c-format
 msgid ""
 "deleting branch '%s' that has been merged to\n"
 "         '%s', but not yet merged to HEAD."
 msgstr ""
 "将要删除的分支 '%s' 已经被合并到\n"
 "         '%s'，但未合并到 HEAD。"
 
 #  译者：保持原换行格式，在输出时 %s 的替代内容会让字符串变长
-#: builtin/branch.c:156
+#: builtin/branch.c:154
 #, c-format
 msgid ""
 "not deleting branch '%s' that is not yet merged to\n"
 "         '%s', even though it is merged to HEAD."
 msgstr ""
 "并未删除分支 '%s'， 虽然它已经合并到 HEAD，\n"
 "         然而却尚未被合并到分支 '%s' 。"
 
-#: builtin/branch.c:170
+#: builtin/branch.c:168
 #, c-format
 msgid "Couldn't look up commit object for '%s'"
 msgstr "无法查询 '%s' 指向的提交对象"
 
-#: builtin/branch.c:174
+#: builtin/branch.c:172
 #, c-format
 msgid ""
 "The branch '%s' is not fully merged.\n"
 "If you are sure you want to delete it, run 'git branch -D %s'."
 msgstr ""
 "分支 '%s' 没有完全合并。\n"
 "如果您确认要删除它，执行 'git branch -D %s'。"
 
-#: builtin/branch.c:187
+#: builtin/branch.c:185
 msgid "Update of config-file failed"
 msgstr "无法更新 config 文件"
 
-#: builtin/branch.c:215
+#: builtin/branch.c:213
 msgid "cannot use -a with -d"
 msgstr "不能将 -a 和 -d 同时使用"
 
-#: builtin/branch.c:221
+#: builtin/branch.c:219
 msgid "Couldn't look up commit object for HEAD"
 msgstr "无法查询 HEAD 指向的提交对象"
 
-#: builtin/branch.c:229
+#: builtin/branch.c:227
 #, c-format
 msgid "Cannot delete the branch '%s' which you are currently on."
 msgstr "无法删除您当前所在的分支 '%s'。"
 
-#: builtin/branch.c:245
+#: builtin/branch.c:243
 #, c-format
-msgid "remote branch '%s' not found."
-msgstr "远程分支 '%s' 未发现。"
+msgid "remote-tracking branch '%s' not found."
+msgstr "未能找到远程跟踪分支 '%s'。"
 
-#: builtin/branch.c:246
+#: builtin/branch.c:244
 #, c-format
 msgid "branch '%s' not found."
 msgstr "分支 '%s' 未发现。"
 
-#: builtin/branch.c:260
+#: builtin/branch.c:258
 #, c-format
-msgid "Error deleting remote branch '%s'"
-msgstr "删除远程分支 '%s' 时出错"
+msgid "Error deleting remote-tracking branch '%s'"
+msgstr "无法删除远程跟踪分支 '%s'"
 
-#: builtin/branch.c:261
+#: builtin/branch.c:259
 #, c-format
 msgid "Error deleting branch '%s'"
-msgstr "删除分支 '%s' 时出错"
+msgstr "无法删除分支 '%s'"
 
-#: builtin/branch.c:268
+#: builtin/branch.c:266
 #, c-format
-msgid "Deleted remote branch %s (was %s).\n"
-msgstr "已删除远程分支 %s（曾为 %s）。\n"
+msgid "Deleted remote-tracking branch %s (was %s).\n"
+msgstr "已删除远程跟踪分支 %s（曾为 %s）。\n"
 
-#: builtin/branch.c:269
+#: builtin/branch.c:267
 #, c-format
 msgid "Deleted branch %s (was %s).\n"
 msgstr "已删除分支 %s（曾为 %s）。\n"
 
-#: builtin/branch.c:370
+#: builtin/branch.c:368
 #, c-format
 msgid "branch '%s' does not point at a commit"
 msgstr "分支 '%s' 未指向一个提交"
 
-#: builtin/branch.c:459
+#: builtin/branch.c:451
 #, c-format
 msgid "[%s: gone]"
 msgstr "[%s: 丢失]"
 
-#: builtin/branch.c:464
+#: builtin/branch.c:456
 #, c-format
 msgid "[%s]"
 msgstr "[%s]"
 
-#: builtin/branch.c:469
+#: builtin/branch.c:461
 #, c-format
 msgid "[%s: behind %d]"
 msgstr "[%s：落后 %d]"
 
-#: builtin/branch.c:471
+#: builtin/branch.c:463
 #, c-format
 msgid "[behind %d]"
 msgstr "[落后 %d]"
 
-#: builtin/branch.c:475
+#: builtin/branch.c:467
 #, c-format
 msgid "[%s: ahead %d]"
 msgstr "[%s：领先 %d]"
 
-#: builtin/branch.c:477
+#: builtin/branch.c:469
 #, c-format
 msgid "[ahead %d]"
 msgstr "[领先 %d]"
 
-#: builtin/branch.c:480
+#: builtin/branch.c:472
 #, c-format
 msgid "[%s: ahead %d, behind %d]"
 msgstr "[%s：领先 %d，落后 %d]"
 
-#: builtin/branch.c:483
+#: builtin/branch.c:475
 #, c-format
 msgid "[ahead %d, behind %d]"
 msgstr "[领先 %d，落后 %d]"
 
-#: builtin/branch.c:496
+#: builtin/branch.c:488
 msgid " **** invalid ref ****"
 msgstr " **** 无效引用 ****"
 
-#: builtin/branch.c:587
+#: builtin/branch.c:579
 #, c-format
 msgid "(no branch, rebasing %s)"
 msgstr "（非分支，正变基 %s）"
 
-#: builtin/branch.c:590
+#: builtin/branch.c:582
 #, c-format
 msgid "(no branch, bisect started on %s)"
 msgstr "（非分支，二分查找开始于 %s）"
 
-#: builtin/branch.c:596
+#: builtin/branch.c:588
 #, c-format
 msgid "(HEAD detached at %s)"
 msgstr "（头指针分离于 %s）"
 
-#: builtin/branch.c:599
+#: builtin/branch.c:591
 #, c-format
 msgid "(HEAD detached from %s)"
 msgstr "（头指针分离自 %s）"
 
-#: builtin/branch.c:603
+#: builtin/branch.c:595
 msgid "(no branch)"
 msgstr "（非分支）"
 
-#: builtin/branch.c:650
+#: builtin/branch.c:642
 #, c-format
 msgid "object '%s' does not point to a commit"
 msgstr "对象 '%s' 没有指向一个提交"
 
-#: builtin/branch.c:698
+#: builtin/branch.c:690
 msgid "some refs could not be read"
 msgstr "一些引用不能读取"
 
-#: builtin/branch.c:711
+#: builtin/branch.c:703
 msgid "cannot rename the current branch while not on any."
 msgstr "无法重命名当前分支因为不处于任何分支上。"
 
-#: builtin/branch.c:721
+#: builtin/branch.c:713
 #, c-format
 msgid "Invalid branch name: '%s'"
 msgstr "无效的分支名：'%s'"
 
-#: builtin/branch.c:736
+#: builtin/branch.c:728
 msgid "Branch rename failed"
 msgstr "分支重命名失败"
 
-#: builtin/branch.c:740
+#: builtin/branch.c:732
 #, c-format
 msgid "Renamed a misnamed branch '%s' away"
 msgstr "重命名掉一个错误命名的旧分支 '%s'"
 
-#: builtin/branch.c:744
+#: builtin/branch.c:736
 #, c-format
 msgid "Branch renamed to %s, but HEAD is not updated!"
 msgstr "分支重命名为 %s，但 HEAD 没有更新！"
 
-#: builtin/branch.c:751
+#: builtin/branch.c:743
 msgid "Branch is renamed, but update of config-file failed"
 msgstr "分支被重命名，但更新 config 文件失败"
 
-#: builtin/branch.c:766
+#: builtin/branch.c:758
 #, c-format
 msgid "malformed object name %s"
 msgstr "非法的对象名 %s"
 
-#: builtin/branch.c:790
+#: builtin/branch.c:780
 #, c-format
 msgid "could not write branch description template: %s"
 msgstr "不能写分支描述模版：%s"
 
-#: builtin/branch.c:820
+#: builtin/branch.c:810
 msgid "Generic options"
 msgstr "通用选项"
 
-#: builtin/branch.c:822
+#: builtin/branch.c:812
 msgid "show hash and subject, give twice for upstream branch"
 msgstr "显示哈希值和主题，若参数出现两次则显示上游分支"
 
-#: builtin/branch.c:823
+#: builtin/branch.c:813
 msgid "suppress informational messages"
 msgstr "不显示信息"
 
-#: builtin/branch.c:824
+#: builtin/branch.c:814
 msgid "set up tracking mode (see git-pull(1))"
 msgstr "设置跟踪模式（参见 git-pull(1)）"
 
-#: builtin/branch.c:826
+#: builtin/branch.c:816
 msgid "change upstream info"
 msgstr "改变上游信息"
 
-#: builtin/branch.c:830
+#: builtin/branch.c:820
 msgid "use colored output"
 msgstr "使用彩色输出"
 
-#: builtin/branch.c:831
+#: builtin/branch.c:821
 msgid "act on remote-tracking branches"
 msgstr "作用于远程跟踪分支"
 
-#: builtin/branch.c:834 builtin/branch.c:840 builtin/branch.c:861
-#: builtin/branch.c:867 builtin/commit.c:1582 builtin/commit.c:1583
-#: builtin/commit.c:1584 builtin/commit.c:1585 builtin/tag.c:616
+#: builtin/branch.c:824 builtin/branch.c:830 builtin/branch.c:851
+#: builtin/branch.c:857 builtin/commit.c:1581 builtin/commit.c:1582
+#: builtin/commit.c:1583 builtin/commit.c:1584 builtin/tag.c:616
 #: builtin/tag.c:622
 msgid "commit"
 msgstr "提交"
 
-#: builtin/branch.c:835 builtin/branch.c:841
+#: builtin/branch.c:825 builtin/branch.c:831
 msgid "print only branches that contain the commit"
 msgstr "只打印包含该提交的分支"
 
-#: builtin/branch.c:847
+#: builtin/branch.c:837
 msgid "Specific git-branch actions:"
 msgstr "具体的 git-branch 动作："
 
-#: builtin/branch.c:848
+#: builtin/branch.c:838
 msgid "list both remote-tracking and local branches"
 msgstr "列出远程跟踪及本地分支"
 
-#: builtin/branch.c:850
+#: builtin/branch.c:840
 msgid "delete fully merged branch"
 msgstr "删除完全合并的分支"
 
-#: builtin/branch.c:851
+#: builtin/branch.c:841
 msgid "delete branch (even if not merged)"
 msgstr "删除分支（即使没有合并）"
 
-#: builtin/branch.c:852
+#: builtin/branch.c:842
 msgid "move/rename a branch and its reflog"
 msgstr "移动/重命名一个分支，以及它的引用日志"
 
-#: builtin/branch.c:853
+#: builtin/branch.c:843
 msgid "move/rename a branch, even if target exists"
 msgstr "移动/重命名一个分支，即使目标已存在"
 
-#: builtin/branch.c:854
+#: builtin/branch.c:844
 msgid "list branch names"
 msgstr "列出分支名"
 
-#: builtin/branch.c:855
+#: builtin/branch.c:845
 msgid "create the branch's reflog"
 msgstr "创建分支的引用日志"
 
-#: builtin/branch.c:857
+#: builtin/branch.c:847
 msgid "edit the description for the branch"
 msgstr "标记分支的描述"
 
-#: builtin/branch.c:858
+#: builtin/branch.c:848
 msgid "force creation, move/rename, deletion"
 msgstr "强制创建、移动/重命名、删除"
 
-#: builtin/branch.c:861
+#: builtin/branch.c:851
 msgid "print only not merged branches"
 msgstr "只打印没有合并的分支"
 
-#: builtin/branch.c:867
+#: builtin/branch.c:857
 msgid "print only merged branches"
 msgstr "只打印合并的分支"
 
-#: builtin/branch.c:871
+#: builtin/branch.c:861
 msgid "list branches in columns"
 msgstr "以列的方式显示分支"
 
-#: builtin/branch.c:884
+#: builtin/branch.c:874
 msgid "Failed to resolve HEAD as a valid ref."
 msgstr "无法将 HEAD 解析为有效引用。"
 
-#: builtin/branch.c:888 builtin/clone.c:637
+#: builtin/branch.c:878 builtin/clone.c:622
 msgid "HEAD not found below refs/heads!"
 msgstr "HEAD 没有位于 /refs/heads 之下！"
 
-#: builtin/branch.c:910
+#: builtin/branch.c:900
 msgid "--column and --verbose are incompatible"
 msgstr "--column 和 --verbose 不兼容"
 
-#: builtin/branch.c:921 builtin/branch.c:960
+#: builtin/branch.c:911 builtin/branch.c:950
 msgid "branch name required"
 msgstr "必须提供分支名"
 
-#: builtin/branch.c:936
+#: builtin/branch.c:926
 msgid "Cannot give description to detached HEAD"
 msgstr "不能向分离头指针提供描述"
 
-#: builtin/branch.c:941
+#: builtin/branch.c:931
 msgid "cannot edit description of more than one branch"
 msgstr "不能为一个以上的分支编辑描述"
 
-#: builtin/branch.c:948
+#: builtin/branch.c:938
 #, c-format
 msgid "No commit on branch '%s' yet."
 msgstr "分支 '%s' 尚无提交。"
 
-#: builtin/branch.c:951
+#: builtin/branch.c:941
 #, c-format
 msgid "No branch named '%s'."
 msgstr "没有分支 '%s'。"
 
-#: builtin/branch.c:966
+#: builtin/branch.c:956
 msgid "too many branches for a rename operation"
 msgstr "为重命名操作提供了太多的分支名"
 
-#: builtin/branch.c:971
+#: builtin/branch.c:961
 msgid "too many branches to set new upstream"
 msgstr "为设置新上游提供了太多的分支名"
 
-#: builtin/branch.c:975
+#: builtin/branch.c:965
 #, c-format
 msgid ""
 "could not set upstream of HEAD to %s when it does not point to any branch."
 msgstr "无法设置 HEAD 的上游为 %s，因为 HEAD 没有指向任何分支。"
 
-#: builtin/branch.c:978 builtin/branch.c:1000 builtin/branch.c:1021
+#: builtin/branch.c:968 builtin/branch.c:990 builtin/branch.c:1011
 #, c-format
 msgid "no such branch '%s'"
 msgstr "没有此分支 '%s'"
 
-#: builtin/branch.c:982
+#: builtin/branch.c:972
 #, c-format
 msgid "branch '%s' does not exist"
 msgstr "分支 '%s' 不存在"
 
-#: builtin/branch.c:994
+#: builtin/branch.c:984
 msgid "too many branches to unset upstream"
 msgstr "为取消上游设置操作提供了太多的分支名"
 
-#: builtin/branch.c:998
+#: builtin/branch.c:988
 msgid "could not unset upstream of HEAD when it does not point to any branch."
 msgstr "无法取消 HEAD 的上游设置因为它没有指向一个分支"
 
-#: builtin/branch.c:1004
+#: builtin/branch.c:994
 #, c-format
 msgid "Branch '%s' has no upstream information"
 msgstr "分支 '%s' 没有上游信息"
 
-#: builtin/branch.c:1018
+#: builtin/branch.c:1008
 msgid "it does not make sense to create 'HEAD' manually"
 msgstr "手工创建 'HEAD' 没有意义"
 
-#: builtin/branch.c:1024
+#: builtin/branch.c:1014
 msgid "-a and -r options to 'git branch' do not make sense with a branch name"
 msgstr "'git branch' 的 -a 和 -r 选项带一个分支名参数没有意义"
 
-#: builtin/branch.c:1027
+#: builtin/branch.c:1017
 #, c-format
 msgid ""
 "The --set-upstream flag is deprecated and will be removed. Consider using --"
 "track or --set-upstream-to\n"
 msgstr ""
 "选项 --set-upstream 已弃用并将被移除。考虑使用 --track 或 --set-upstream-to\n"
 
-#: builtin/branch.c:1044
+#: builtin/branch.c:1034
 #, c-format
 msgid ""
 "\n"
 "If you wanted to make '%s' track '%s', do this:\n"
 "\n"
 msgstr ""
 "\n"
 "如果你想用 '%s' 跟踪 '%s', 这么做：\n"
 "\n"
 
-#: builtin/branch.c:1045
+#: builtin/branch.c:1035
 #, c-format
 msgid "    git branch -d %s\n"
 msgstr "    git branch -d %s\n"
 
-#: builtin/branch.c:1046
+#: builtin/branch.c:1036
 #, c-format
 msgid "    git branch --set-upstream-to %s\n"
 msgstr "    git branch --set-upstream-to %s\n"
 
-#: builtin/bundle.c:47
+#: builtin/bundle.c:51
 #, c-format
 msgid "%s is okay\n"
 msgstr "%s 可以\n"
 
-#: builtin/bundle.c:56
+#: builtin/bundle.c:64
 msgid "Need a repository to create a bundle."
 msgstr "需要一个版本库来创建包。"
 
-#: builtin/bundle.c:60
+#: builtin/bundle.c:68
 msgid "Need a repository to unbundle."
 msgstr "需要一个版本库来解包。"
 
-#: builtin/cat-file.c:326
-msgid "git cat-file (-t | -s | -e | -p | <type> | --textconv) <object>"
-msgstr "git cat-file (-t | -s | -e | -p | <类型> | --textconv) <对象>"
-
-#: builtin/cat-file.c:327
-msgid "git cat-file (--batch | --batch-check) < <list-of-objects>"
-msgstr "git cat-file (--batch | --batch-check) < <对象列表>"
+#: builtin/cat-file.c:369
+msgid ""
+"git cat-file (-t [--allow-unknown-type]|-s [--allow-unknown-type]|-e|-p|"
+"<type>|--textconv) <object>"
+msgstr ""
+"git cat-file (-t [--allow-unknown-type]|-s [--allow-unknown-type]|-e|-p|<类型"
+">|--textconv) <对象>"
+
+#: builtin/cat-file.c:370
+msgid ""
+"git cat-file (--batch | --batch-check) [--follow-symlinks] < <list-of-"
+"objects>"
+msgstr ""
+"git cat-file (--batch | --batch-check) [--follow-symlinks] < <对象列表>"
 
-#: builtin/cat-file.c:364
+#: builtin/cat-file.c:407
 msgid "<type> can be one of: blob, tree, commit, tag"
 msgstr "<类型> 可以是其中之一：blob、tree、commit、tag"
 
-#: builtin/cat-file.c:365
+#: builtin/cat-file.c:408
 msgid "show object type"
 msgstr "显示对象类型"
 
-#: builtin/cat-file.c:366
+#: builtin/cat-file.c:409
 msgid "show object size"
 msgstr "显示对象大小"
 
-#: builtin/cat-file.c:368
+#: builtin/cat-file.c:411
 msgid "exit with zero when there's no error"
 msgstr "当没有错误时退出并返回零"
 
-#: builtin/cat-file.c:369
+#: builtin/cat-file.c:412
 msgid "pretty-print object's content"
 msgstr "美观地打印对象的内容"
 
-#: builtin/cat-file.c:371
+#: builtin/cat-file.c:414
 msgid "for blob objects, run textconv on object's content"
 msgstr "对于数据（blob）对象，对其内容执行 textconv"
 
-#: builtin/cat-file.c:373
+#: builtin/cat-file.c:416
+msgid "allow -s and -t to work with broken/corrupt objects"
+msgstr "允许 -s 和 -t 对损坏的对象生效"
+
+#: builtin/cat-file.c:418
 msgid "show info and content of objects fed from the standard input"
 msgstr "显示从标准输入提供的对象的信息和内容"
 
-#: builtin/cat-file.c:376
+#: builtin/cat-file.c:421
 msgid "show info about objects fed from the standard input"
 msgstr "显示从标准输入提供的对象的信息"
 
+#: builtin/cat-file.c:424
+msgid "follow in-tree symlinks (used with --batch or --batch-check)"
+msgstr "跟随树内符号链接（和 --batch 或 --batch-check 共用）"
+
 #: builtin/check-attr.c:11
 msgid "git check-attr [-a | --all | <attr>...] [--] <pathname>..."
 msgstr "git check-attr [-a | --all | <属性>...] [--] <路径名>..."
 
 #: builtin/check-attr.c:12
 msgid "git check-attr --stdin [-z] [-a | --all | <attr>...] < <list-of-paths>"
@@ -3261,21 +3326,21 @@
 msgstr "报告设置在文件上的所有属性"
 
 #: builtin/check-attr.c:20
 msgid "use .gitattributes only from the index"
 msgstr "只使用索引中的 .gitattributes"
 
-#: builtin/check-attr.c:21 builtin/check-ignore.c:22 builtin/hash-object.c:98
+#: builtin/check-attr.c:21 builtin/check-ignore.c:22 builtin/hash-object.c:96
 msgid "read file names from stdin"
 msgstr "从标准输入读出文件名"
 
 #: builtin/check-attr.c:23 builtin/check-ignore.c:24
 msgid "terminate input and output records by a NUL character"
 msgstr "输入和输出的记录使用 NUL 字符终结"
 
-#: builtin/check-ignore.c:18 builtin/checkout.c:1107 builtin/gc.c:274
+#: builtin/check-ignore.c:18 builtin/checkout.c:1202 builtin/gc.c:279
 msgid "suppress progress reporting"
 msgstr "不显示进度报告"
 
 #: builtin/check-ignore.c:26
 msgid "show non-matching input paths"
 msgstr "显示未匹配的输入路径"
@@ -3366,120 +3431,120 @@
 msgstr "在创建文件时，在前面加上<字符串>"
 
 #: builtin/checkout-index.c:208
 msgid "copy out the files from named stage"
 msgstr "从指定暂存区中拷出文件"
 
-#: builtin/checkout.c:25
+#: builtin/checkout.c:24
 msgid "git checkout [<options>] <branch>"
 msgstr "git checkout [<选项>] <分支>"
 
-#: builtin/checkout.c:26
+#: builtin/checkout.c:25
 msgid "git checkout [<options>] [<branch>] -- <file>..."
 msgstr "git checkout [<选项>] [<分支>] -- <文件>..."
 
-#: builtin/checkout.c:132 builtin/checkout.c:165
+#: builtin/checkout.c:134 builtin/checkout.c:167
 #, c-format
 msgid "path '%s' does not have our version"
 msgstr "路径 '%s' 没有我们的版本"
 
-#: builtin/checkout.c:134 builtin/checkout.c:167
+#: builtin/checkout.c:136 builtin/checkout.c:169
 #, c-format
 msgid "path '%s' does not have their version"
 msgstr "路径 '%s' 没有他们的版本"
 
-#: builtin/checkout.c:150
+#: builtin/checkout.c:152
 #, c-format
 msgid "path '%s' does not have all necessary versions"
 msgstr "路径 '%s' 没有全部必须的版本"
 
-#: builtin/checkout.c:194
+#: builtin/checkout.c:196
 #, c-format
 msgid "path '%s' does not have necessary versions"
 msgstr "路径 '%s' 没有必须的版本"
 
-#: builtin/checkout.c:211
+#: builtin/checkout.c:213
 #, c-format
 msgid "path '%s': cannot merge"
 msgstr "path '%s'：无法合并"
 
-#: builtin/checkout.c:228
+#: builtin/checkout.c:230
 #, c-format
 msgid "Unable to add merge result for '%s'"
 msgstr "无法为 '%s' 添加合并结果"
 
-#: builtin/checkout.c:249 builtin/checkout.c:252 builtin/checkout.c:255
-#: builtin/checkout.c:258
+#: builtin/checkout.c:251 builtin/checkout.c:254 builtin/checkout.c:257
+#: builtin/checkout.c:260
 #, c-format
 msgid "'%s' cannot be used with updating paths"
 msgstr "'%s' 不能在更新路径时使用"
 
-#: builtin/checkout.c:261 builtin/checkout.c:264
+#: builtin/checkout.c:263 builtin/checkout.c:266
 #, c-format
 msgid "'%s' cannot be used with %s"
 msgstr "'%s' 不能和 %s 同时使用"
 
-#: builtin/checkout.c:267
+#: builtin/checkout.c:269
 #, c-format
 msgid "Cannot update paths and switch to branch '%s' at the same time."
 msgstr "不能同时更新路径并切换到分支'%s'。"
 
-#: builtin/checkout.c:278 builtin/checkout.c:467
+#: builtin/checkout.c:280 builtin/checkout.c:474
 msgid "corrupt index file"
 msgstr "损坏的索引文件"
 
-#: builtin/checkout.c:338 builtin/checkout.c:345
+#: builtin/checkout.c:340 builtin/checkout.c:347
 #, c-format
 msgid "path '%s' is unmerged"
 msgstr "路径 '%s' 未合并"
 
-#: builtin/checkout.c:489
+#: builtin/checkout.c:496
 msgid "you need to resolve your current index first"
 msgstr "您需要先解决当前索引的冲突"
 
-#: builtin/checkout.c:615
+#: builtin/checkout.c:627
 #, c-format
 msgid "Can not do reflog for '%s'\n"
 msgstr "不能对 '%s' 执行 reflog 操作\n"
 
-#: builtin/checkout.c:653
+#: builtin/checkout.c:663
 msgid "HEAD is now at"
 msgstr "HEAD 目前位于"
 
-#: builtin/checkout.c:660
+#: builtin/checkout.c:670
 #, c-format
 msgid "Reset branch '%s'\n"
 msgstr "重置分支 '%s'\n"
 
-#: builtin/checkout.c:663
+#: builtin/checkout.c:673
 #, c-format
 msgid "Already on '%s'\n"
 msgstr "已经位于 '%s'\n"
 
-#: builtin/checkout.c:667
+#: builtin/checkout.c:677
 #, c-format
 msgid "Switched to and reset branch '%s'\n"
 msgstr "切换并重置分支 '%s'\n"
 
-#: builtin/checkout.c:669 builtin/checkout.c:1050
+#: builtin/checkout.c:679 builtin/checkout.c:1134
 #, c-format
 msgid "Switched to a new branch '%s'\n"
 msgstr "切换到一个新分支 '%s'\n"
 
-#: builtin/checkout.c:671
+#: builtin/checkout.c:681
 #, c-format
 msgid "Switched to branch '%s'\n"
 msgstr "切换到分支 '%s'\n"
 
 #  译者：注意保持前导空格
-#: builtin/checkout.c:723
+#: builtin/checkout.c:733
 #, c-format
 msgid " ... and %d more.\n"
 msgstr " ... 及其它 %d 个。\n"
 
-#: builtin/checkout.c:729
+#: builtin/checkout.c:739
 #, c-format
 msgid ""
 "Warning: you are leaving %d commit behind, not connected to\n"
 "any of your branches:\n"
 "\n"
 "%s\n"
@@ -3494,174 +3559,196 @@
 "%s\n"
 msgstr[1] ""
 "警告：您正丢下 %d 个提交，未和任何分支关联：\n"
 "\n"
 "%s\n"
 
-#: builtin/checkout.c:747
+#: builtin/checkout.c:758
 #, c-format
 msgid ""
+"If you want to keep it by creating a new branch, this may be a good time\n"
+"to do so with:\n"
+"\n"
+" git branch <new-branch-name> %s\n"
+"\n"
+msgid_plural ""
 "If you want to keep them by creating a new branch, this may be a good time\n"
 "to do so with:\n"
 "\n"
 " git branch <new-branch-name> %s\n"
 "\n"
-msgstr ""
-"如果您想要通过创建新分支保存他们，这可能是一个好时候。\n"
+msgstr[0] ""
+"如果您想要通过创建新分支保存它，这可能是一个好时候。\n"
+"如下操作：\n"
+"\n"
+" git branch <新分支名> %s\n"
+"\n"
+msgstr[1] ""
+"如果您想要通过创建新分支保存它们，这可能是一个好时候。\n"
 "如下操作：\n"
 "\n"
 " git branch <新分支名> %s\n"
 "\n"
 
-#: builtin/checkout.c:777
+#: builtin/checkout.c:794
 msgid "internal error in revision walk"
 msgstr "在版本遍历时遇到内部错误"
 
-#: builtin/checkout.c:781
+#: builtin/checkout.c:798
 msgid "Previous HEAD position was"
 msgstr "之前的 HEAD 位置是"
 
-#: builtin/checkout.c:808 builtin/checkout.c:1045
+#: builtin/checkout.c:825 builtin/checkout.c:1129
 msgid "You are on a branch yet to be born"
 msgstr "您位于一个尚未初始化的分支"
 
-#: builtin/checkout.c:952
+#: builtin/checkout.c:931
+#, c-format
+msgid "'%s' is already checked out at '%s'"
+msgstr "'%s' 已经检出到 '%s'"
+
+#: builtin/checkout.c:1036
 #, c-format
 msgid "only one reference expected, %d given."
 msgstr "只要一个引用，却给出了 %d 个"
 
-#: builtin/checkout.c:991
+#: builtin/checkout.c:1075
 #, c-format
 msgid "invalid reference: %s"
 msgstr "无效引用：%s"
 
-#: builtin/checkout.c:1020
+#: builtin/checkout.c:1104
 #, c-format
 msgid "reference is not a tree: %s"
 msgstr "引用不是一个树：%s"
 
-#: builtin/checkout.c:1059
+#: builtin/checkout.c:1143
 msgid "paths cannot be used with switching branches"
 msgstr "路径不能和切换分支同时使用"
 
-#: builtin/checkout.c:1062 builtin/checkout.c:1066
+#: builtin/checkout.c:1146 builtin/checkout.c:1150
 #, c-format
 msgid "'%s' cannot be used with switching branches"
 msgstr "'%s' 不能和切换分支同时使用"
 
-#: builtin/checkout.c:1070 builtin/checkout.c:1073 builtin/checkout.c:1078
-#: builtin/checkout.c:1081
+#: builtin/checkout.c:1154 builtin/checkout.c:1157 builtin/checkout.c:1162
+#: builtin/checkout.c:1165
 #, c-format
 msgid "'%s' cannot be used with '%s'"
 msgstr "'%s' 不能和 '%s' 同时使用"
 
-#: builtin/checkout.c:1086
+#: builtin/checkout.c:1170
 #, c-format
 msgid "Cannot switch branch to a non-commit '%s'"
 msgstr "不能切换分支到一个非提交 '%s'"
 
-#: builtin/checkout.c:1108 builtin/checkout.c:1110 builtin/clone.c:90
-#: builtin/remote.c:159 builtin/remote.c:161
+#: builtin/checkout.c:1203 builtin/checkout.c:1205 builtin/clone.c:83
+#: builtin/remote.c:159 builtin/remote.c:161 builtin/worktree.c:282
+#: builtin/worktree.c:284
 msgid "branch"
 msgstr "分支"
 
-#: builtin/checkout.c:1109
+#: builtin/checkout.c:1204
 msgid "create and checkout a new branch"
 msgstr "创建并检出一个新的分支"
 
-#: builtin/checkout.c:1111
+#: builtin/checkout.c:1206
 msgid "create/reset and checkout a branch"
 msgstr "创建/重置并检出一个分支"
 
-#: builtin/checkout.c:1112
+#: builtin/checkout.c:1207
 msgid "create reflog for new branch"
 msgstr "为新的分支创建引用日志"
 
-#: builtin/checkout.c:1113
+#: builtin/checkout.c:1208
 msgid "detach the HEAD at named commit"
 msgstr "成为指向该提交的分离头指针"
 
-#: builtin/checkout.c:1114
+#: builtin/checkout.c:1209
 msgid "set upstream info for new branch"
 msgstr "为新的分支设置上游信息"
 
-#: builtin/checkout.c:1116
+#: builtin/checkout.c:1211
 msgid "new-branch"
 msgstr "新分支"
 
-#: builtin/checkout.c:1116
+#: builtin/checkout.c:1211
 msgid "new unparented branch"
 msgstr "新的没有父提交的分支"
 
-#: builtin/checkout.c:1117
+#: builtin/checkout.c:1212
 msgid "checkout our version for unmerged files"
 msgstr "对尚未合并的文件检出我们的版本"
 
-#: builtin/checkout.c:1119
+#: builtin/checkout.c:1214
 msgid "checkout their version for unmerged files"
 msgstr "对尚未合并的文件检出他们的版本"
 
-#: builtin/checkout.c:1121
+#: builtin/checkout.c:1216
 msgid "force checkout (throw away local modifications)"
 msgstr "强制检出（丢弃本地修改）"
 
-#: builtin/checkout.c:1122
+#: builtin/checkout.c:1217
 msgid "perform a 3-way merge with the new branch"
 msgstr "和新的分支执行三路合并"
 
-#: builtin/checkout.c:1123 builtin/merge.c:227
+#: builtin/checkout.c:1218 builtin/merge.c:227
 msgid "update ignored files (default)"
 msgstr "更新忽略的文件（默认）"
 
-#: builtin/checkout.c:1124 builtin/log.c:1239 parse-options.h:245
+#: builtin/checkout.c:1219 builtin/log.c:1239 parse-options.h:244
 msgid "style"
 msgstr "风格"
 
-#: builtin/checkout.c:1125
+#: builtin/checkout.c:1220
 msgid "conflict style (merge or diff3)"
 msgstr "冲突输出风格（merge 或 diff3）"
 
-#: builtin/checkout.c:1128
+#: builtin/checkout.c:1223
 msgid "do not limit pathspecs to sparse entries only"
 msgstr "对路径不做稀疏检出的限制"
 
-#: builtin/checkout.c:1130
+#: builtin/checkout.c:1225
 msgid "second guess 'git checkout <no-such-branch>'"
 msgstr "二次猜测'git checkout <无此分支>'"
 
-#: builtin/checkout.c:1153
+#: builtin/checkout.c:1227
+msgid "do not check if another worktree is holding the given ref"
+msgstr "不检查指定的引用是否被其他工作区所占用"
+
+#: builtin/checkout.c:1252
 msgid "-b, -B and --orphan are mutually exclusive"
 msgstr "-b、-B 和 --orphan 是互斥的"
 
-#: builtin/checkout.c:1170
+#: builtin/checkout.c:1269
 msgid "--track needs a branch name"
 msgstr "--track 需要一个分支名"
 
-#: builtin/checkout.c:1175
+#: builtin/checkout.c:1274
 msgid "Missing branch name; try -b"
 msgstr "缺少分支名；尝试 -b"
 
-#: builtin/checkout.c:1212
+#: builtin/checkout.c:1310
 msgid "invalid path specification"
 msgstr "无效的路径规格"
 
-#: builtin/checkout.c:1219
+#: builtin/checkout.c:1317
 #, c-format
 msgid ""
 "Cannot update paths and switch to branch '%s' at the same time.\n"
 "Did you intend to checkout '%s' which can not be resolved as commit?"
 msgstr ""
 "不能同时更新路径并切换到分支'%s'。\n"
 "您是想要检出 '%s' 但其未能解析为提交么？"
 
-#: builtin/checkout.c:1224
+#: builtin/checkout.c:1322
 #, c-format
 msgid "git checkout: --detach does not take a path argument '%s'"
 msgstr "git checkout：--detach 不能接收路径参数 '%s'"
 
-#: builtin/checkout.c:1228
+#: builtin/checkout.c:1326
 msgid ""
 "git checkout: --ours/--theirs, --force and --merge are incompatible when\n"
 "checking out of the index."
 msgstr ""
 "git checkout：在从索引检出时，--ours/--theirs、--force 和 --merge 不兼容。"
 
@@ -3725,42 +3812,42 @@
 "2-3,6-9    - 选择多个范围内的所有选项\n"
 "foo        - 通过标题选择一个选项\n"
 "-...       - 反选特定的选项\n"
 "*          - 选择所有选项\n"
 "           - （空）结束选择"
 
-#: builtin/clean.c:517
+#: builtin/clean.c:515
 #, c-format
 msgid "Huh (%s)?"
 msgstr "嗯（%s）？"
 
-#: builtin/clean.c:659
+#: builtin/clean.c:657
 #, c-format
 msgid "Input ignore patterns>> "
 msgstr "输入模版以排除条目>> "
 
-#: builtin/clean.c:696
+#: builtin/clean.c:694
 #, c-format
 msgid "WARNING: Cannot find items matched by: %s"
 msgstr "警告：无法找到和 %s 匹配的条目"
 
-#: builtin/clean.c:717
+#: builtin/clean.c:715
 msgid "Select items to delete"
 msgstr "选择要删除的条目"
 
 #. TRANSLATORS: Make sure to keep [y/N] as is
-#: builtin/clean.c:758
+#: builtin/clean.c:756
 #, c-format
 msgid "Remove %s [y/N]? "
 msgstr "删除 %s [y/N]？"
 
-#: builtin/clean.c:783
+#: builtin/clean.c:781
 msgid "Bye."
 msgstr "再见。"
 
-#: builtin/clean.c:791
+#: builtin/clean.c:789
 msgid ""
 "clean               - start cleaning\n"
 "filter by pattern   - exclude items from deletion\n"
 "select by numbers   - select items to be deleted by numbers\n"
 "ask each            - confirm each deletion (like \"rm -i\")\n"
 "quit                - stop cleaning\n"
@@ -3772,352 +3859,353 @@
 "select by numbers   - 通过数字选择要删除的条目\n"
 "ask each            - 针对删除逐一询问（就像 \"rm -i\"）\n"
 "quit                - 停止删除并退出\n"
 "help                - 显示本帮助\n"
 "?                   - 显示如何在提示符下选择的帮助"
 
-#: builtin/clean.c:818
+#: builtin/clean.c:816
 msgid "*** Commands ***"
 msgstr "*** 命令 ***"
 
-#: builtin/clean.c:819
+#: builtin/clean.c:817
 msgid "What now"
 msgstr "请选择"
 
-#: builtin/clean.c:827
+#: builtin/clean.c:825
 msgid "Would remove the following item:"
 msgid_plural "Would remove the following items:"
 msgstr[0] "将删除如下条目："
 msgstr[1] "将删除如下条目："
 
-#: builtin/clean.c:844
+#: builtin/clean.c:842
 msgid "No more files to clean, exiting."
 msgstr "没有要清理的文件，退出。"
 
-#: builtin/clean.c:875
+#: builtin/clean.c:873
 msgid "do not print names of files removed"
 msgstr "不打印删除文件的名称"
 
-#: builtin/clean.c:877
+#: builtin/clean.c:875
 msgid "force"
 msgstr "强制"
 
-#: builtin/clean.c:878
+#: builtin/clean.c:876
 msgid "interactive cleaning"
 msgstr "交互式清除"
 
-#: builtin/clean.c:880
+#: builtin/clean.c:878
 msgid "remove whole directories"
 msgstr "删除整个目录"
 
-#: builtin/clean.c:881 builtin/describe.c:407 builtin/grep.c:714
-#: builtin/ls-files.c:443 builtin/name-rev.c:311 builtin/show-ref.c:185
+#: builtin/clean.c:879 builtin/describe.c:407 builtin/grep.c:714
+#: builtin/ls-files.c:443 builtin/name-rev.c:311 builtin/show-ref.c:187
 msgid "pattern"
 msgstr "模式"
 
-#: builtin/clean.c:882
+#: builtin/clean.c:880
 msgid "add <pattern> to ignore rules"
 msgstr "添加<模式>到忽略规则"
 
-#: builtin/clean.c:883
+#: builtin/clean.c:881
 msgid "remove ignored files, too"
 msgstr "也删除忽略的文件"
 
-#: builtin/clean.c:885
+#: builtin/clean.c:883
 msgid "remove only ignored files"
 msgstr "只删除忽略的文件"
 
-#: builtin/clean.c:903
+#: builtin/clean.c:901
 msgid "-x and -X cannot be used together"
 msgstr "-x 和 -X 不能同时使用"
 
-#: builtin/clean.c:907
+#: builtin/clean.c:905
 msgid ""
 "clean.requireForce set to true and neither -i, -n, nor -f given; refusing to "
 "clean"
 msgstr ""
 "clean.requireForce 设置为 true 且未提供 -i、-n 或 -f 选项，拒绝执行清理动作"
 
-#: builtin/clean.c:910
+#: builtin/clean.c:908
 msgid ""
 "clean.requireForce defaults to true and neither -i, -n, nor -f given; "
 "refusing to clean"
 msgstr ""
 "clean.requireForce 默认为 true 且未提供 -i、-n 或 -f 选项，拒绝执行清理动作"
 
 #: builtin/clone.c:37
 msgid "git clone [<options>] [--] <repo> [<dir>]"
 msgstr "git clone [<选项>] [--] <版本库> [<路径>]"
 
-#: builtin/clone.c:66 builtin/fetch.c:111 builtin/merge.c:224
+#: builtin/clone.c:57 builtin/fetch.c:111 builtin/merge.c:224
 #: builtin/push.c:523
 msgid "force progress reporting"
 msgstr "强制显示进度报告"
 
-#: builtin/clone.c:68
+#: builtin/clone.c:59
 msgid "don't create a checkout"
 msgstr "不创建一个检出"
 
-#: builtin/clone.c:69 builtin/clone.c:71 builtin/init-db.c:496
+#: builtin/clone.c:60 builtin/clone.c:62 builtin/init-db.c:503
 msgid "create a bare repository"
 msgstr "创建一个纯版本库"
 
-#: builtin/clone.c:73
+#: builtin/clone.c:64
 msgid "create a mirror repository (implies bare)"
 msgstr "创建一个镜像版本库（也是纯版本库）"
 
-#: builtin/clone.c:75
+#: builtin/clone.c:66
 msgid "to clone from a local repository"
 msgstr "从本地版本库克隆"
 
-#: builtin/clone.c:77
+#: builtin/clone.c:68
 msgid "don't use local hardlinks, always copy"
 msgstr "不使用本地硬链接，始终复制"
 
-#: builtin/clone.c:79
+#: builtin/clone.c:70
 msgid "setup as shared repository"
 msgstr "设置为共享版本库"
 
-#: builtin/clone.c:81 builtin/clone.c:83
+#: builtin/clone.c:72 builtin/clone.c:74
 msgid "initialize submodules in the clone"
 msgstr "在克隆时初始化子模组"
 
-#: builtin/clone.c:84 builtin/init-db.c:493
+#: builtin/clone.c:75 builtin/init-db.c:500
 msgid "template-directory"
 msgstr "模板目录"
 
-#: builtin/clone.c:85 builtin/init-db.c:494
+#: builtin/clone.c:76 builtin/init-db.c:501
 msgid "directory from which templates will be used"
 msgstr "模板目录将被使用"
 
-#: builtin/clone.c:87
+#: builtin/clone.c:78
 msgid "reference repository"
 msgstr "参考版本库"
 
-#: builtin/clone.c:88 builtin/column.c:26 builtin/merge-file.c:44
+#: builtin/clone.c:80
+msgid "use --reference only while cloning"
+msgstr "仅在克隆时参考 --reference 指向的本地版本库"
+
+#: builtin/clone.c:81 builtin/column.c:26 builtin/merge-file.c:44
 msgid "name"
 msgstr "名称"
 
-#: builtin/clone.c:89
+#: builtin/clone.c:82
 msgid "use <name> instead of 'origin' to track upstream"
 msgstr "使用<名称>而不是 'origin' 去跟踪上游"
 
-#: builtin/clone.c:91
+#: builtin/clone.c:84
 msgid "checkout <branch> instead of the remote's HEAD"
 msgstr "检出<分支>而不是远程HEAD"
 
-#: builtin/clone.c:93
+#: builtin/clone.c:86
 msgid "path to git-upload-pack on the remote"
 msgstr "远程 git-upload-pack 路径"
 
-#: builtin/clone.c:94 builtin/fetch.c:112 builtin/grep.c:659
+#: builtin/clone.c:87 builtin/fetch.c:112 builtin/grep.c:659
 msgid "depth"
 msgstr "深度"
 
-#: builtin/clone.c:95
+#: builtin/clone.c:88
 msgid "create a shallow clone of that depth"
 msgstr "创建一个指定深度的浅克隆"
 
-#: builtin/clone.c:97
+#: builtin/clone.c:90
 msgid "clone only one branch, HEAD or --branch"
 msgstr "只克隆一个分支、HEAD 或 --branch"
 
-#: builtin/clone.c:99
-msgid "use --reference only while cloning"
-msgstr "仅在克隆时参考 --reference 指向的本地版本库"
-
-#: builtin/clone.c:100 builtin/init-db.c:502
+#: builtin/clone.c:91 builtin/init-db.c:509
 msgid "gitdir"
 msgstr "git目录"
 
-#: builtin/clone.c:101 builtin/init-db.c:503
+#: builtin/clone.c:92 builtin/init-db.c:510
 msgid "separate git dir from working tree"
 msgstr "git目录和工作区分离"
 
-#: builtin/clone.c:102
+#: builtin/clone.c:93
 msgid "key=value"
 msgstr "key=value"
 
-#: builtin/clone.c:103
+#: builtin/clone.c:94
 msgid "set config inside the new repository"
 msgstr "在新版本库中设置配置信息"
 
-#: builtin/clone.c:256
+#: builtin/clone.c:240
 #, c-format
 msgid "reference repository '%s' is not a local repository."
 msgstr "参考版本库 '%s' 不是一个本地版本库。"
 
-#: builtin/clone.c:260
+#: builtin/clone.c:244
 #, c-format
 msgid "reference repository '%s' is shallow"
 msgstr "参考版本库 '%s' 是一个浅克隆"
 
-#: builtin/clone.c:263
+#: builtin/clone.c:247
 #, c-format
 msgid "reference repository '%s' is grafted"
 msgstr "参考版本库 '%s' 已被嫁接"
 
-#: builtin/clone.c:325
+#: builtin/clone.c:310
 #, c-format
 msgid "failed to create directory '%s'"
 msgstr "无法创建目录 '%s'"
 
-#: builtin/clone.c:327 builtin/diff.c:84
+#: builtin/clone.c:312 builtin/diff.c:84
 #, c-format
 msgid "failed to stat '%s'"
 msgstr "无法枚举 '%s' 状态"
 
-#: builtin/clone.c:329
+#: builtin/clone.c:314
 #, c-format
 msgid "%s exists and is not a directory"
 msgstr "%s 存在且不是一个目录"
 
-#: builtin/clone.c:343
+#: builtin/clone.c:328
 #, c-format
 msgid "failed to stat %s\n"
 msgstr "无法枚举 %s 状态\n"
 
-#: builtin/clone.c:365
+#: builtin/clone.c:350
 #, c-format
 msgid "failed to create link '%s'"
 msgstr "无法创建链接 '%s'"
 
-#: builtin/clone.c:369
+#: builtin/clone.c:354
 #, c-format
 msgid "failed to copy file to '%s'"
 msgstr "无法拷贝文件至 '%s'"
 
-#: builtin/clone.c:392 builtin/clone.c:566
+#: builtin/clone.c:377 builtin/clone.c:551
 #, c-format
 msgid "done.\n"
 msgstr "完成。\n"
 
-#: builtin/clone.c:404
+#: builtin/clone.c:389
 msgid ""
 "Clone succeeded, but checkout failed.\n"
 "You can inspect what was checked out with 'git status'\n"
 "and retry the checkout with 'git checkout -f HEAD'\n"
 msgstr ""
 "克隆成功，但是检出失败。\n"
 "您可以通过 'git status' 检查哪些已被检出，然后使用命令\n"
 "'git checkout -f HEAD' 重试\n"
 
-#: builtin/clone.c:481
+#: builtin/clone.c:466
 #, c-format
 msgid "Could not find remote branch %s to clone."
 msgstr "不能发现要克隆的远程分支 %s。"
 
-#: builtin/clone.c:561
+#: builtin/clone.c:546
 #, c-format
 msgid "Checking connectivity... "
 msgstr "检查连接... "
 
-#: builtin/clone.c:564
+#: builtin/clone.c:549
 msgid "remote did not send all necessary objects"
 msgstr "远程没有发送所有必须的对象"
 
-#: builtin/clone.c:628
+#: builtin/clone.c:613
 msgid "remote HEAD refers to nonexistent ref, unable to checkout.\n"
 msgstr "远程 HEAD 指向一个不存在的引用，无法检出。\n"
 
-#: builtin/clone.c:659
+#: builtin/clone.c:644
 msgid "unable to checkout working tree"
 msgstr "不能检出工作区"
 
-#: builtin/clone.c:746
+#: builtin/clone.c:731
 msgid "cannot repack to clean up"
 msgstr "无法执行 repack 来清理"
 
-#: builtin/clone.c:748
+#: builtin/clone.c:733
 msgid "cannot unlink temporary alternates file"
 msgstr "无法删除临时的 alternates 文件"
 
-#: builtin/clone.c:778
+#: builtin/clone.c:763
 msgid "Too many arguments."
 msgstr "太多参数。"
 
-#: builtin/clone.c:782
+#: builtin/clone.c:767
 msgid "You must specify a repository to clone."
 msgstr "您必须指定一个版本库来克隆。"
 
-#: builtin/clone.c:793
+#: builtin/clone.c:778
 #, c-format
 msgid "--bare and --origin %s options are incompatible."
 msgstr "--bare 和 --origin %s 选项不兼容。"
 
-#: builtin/clone.c:796
+#: builtin/clone.c:781
 msgid "--bare and --separate-git-dir are incompatible."
 msgstr "--bare 和 --separate-git-dir 选项不兼容。"
 
-#: builtin/clone.c:809
+#: builtin/clone.c:794
 #, c-format
 msgid "repository '%s' does not exist"
 msgstr "版本库 '%s' 不存在"
 
-#: builtin/clone.c:815 builtin/fetch.c:1156
+#: builtin/clone.c:800 builtin/fetch.c:1160
 #, c-format
 msgid "depth %s is not a positive number"
 msgstr "深度 %s 不是一个正数"
 
-#: builtin/clone.c:825
+#: builtin/clone.c:810
 #, c-format
 msgid "destination path '%s' already exists and is not an empty directory."
 msgstr "目标路径 '%s' 已经存在，并且不是一个空目录。"
 
-#: builtin/clone.c:835
+#: builtin/clone.c:820
 #, c-format
 msgid "working tree '%s' already exists."
 msgstr "工作区 '%s' 已经存在。"
 
-#: builtin/clone.c:850 builtin/clone.c:861
+#: builtin/clone.c:835 builtin/clone.c:846 builtin/worktree.c:193
+#: builtin/worktree.c:220
 #, c-format
 msgid "could not create leading directories of '%s'"
 msgstr "不能为 '%s' 创建先导目录"
 
-#: builtin/clone.c:853
+#: builtin/clone.c:838
 #, c-format
 msgid "could not create work tree dir '%s'"
 msgstr "不能创建工作区目录 '%s'"
 
-#: builtin/clone.c:871
+#: builtin/clone.c:856
 #, c-format
 msgid "Cloning into bare repository '%s'...\n"
 msgstr "克隆到纯版本库 '%s'...\n"
 
-#: builtin/clone.c:873
+#: builtin/clone.c:858
 #, c-format
 msgid "Cloning into '%s'...\n"
 msgstr "正克隆到 '%s'...\n"
 
-#: builtin/clone.c:898
+#: builtin/clone.c:883
 msgid "--dissociate given, but there is no --reference"
 msgstr "提供了参数 --dissociate，但未提供 --reference"
 
-#: builtin/clone.c:913
+#: builtin/clone.c:900
 msgid "--depth is ignored in local clones; use file:// instead."
 msgstr "--depth 在本地克隆被忽略，改为 file:// 协议试试。"
 
-#: builtin/clone.c:916
+#: builtin/clone.c:903
 msgid "source repository is shallow, ignoring --local"
 msgstr "源版本库是浅克隆，忽略 --local"
 
-#: builtin/clone.c:921
+#: builtin/clone.c:908
 msgid "--local is ignored"
 msgstr "--local 被忽略"
 
-#: builtin/clone.c:925
+#: builtin/clone.c:912
 #, c-format
 msgid "Don't know how to clone %s"
 msgstr "不知道如何克隆 %s"
 
-#: builtin/clone.c:976 builtin/clone.c:984
+#: builtin/clone.c:961 builtin/clone.c:969
 #, c-format
 msgid "Remote branch %s not found in upstream %s"
 msgstr "远程分支 %s 在上游 %s 未发现"
 
-#: builtin/clone.c:987
+#: builtin/clone.c:972
 msgid "You appear to have cloned an empty repository."
 msgstr "您似乎克隆了一个空版本库。"
 
 #: builtin/column.c:9
 msgid "git column [<options>]"
 msgstr "git column [<选项>]"
@@ -4341,13 +4429,13 @@
 msgstr "不能读取 MERGE_MSG"
 
 #: builtin/commit.c:734
 msgid "could not read SQUASH_MSG"
 msgstr "不能读取 SQUASH_MSG"
 
-#: builtin/commit.c:738
+#: builtin/commit.c:738 builtin/merge.c:1079
 #, c-format
 msgid "could not read '%s'"
 msgstr "不能读取 '%s'"
 
 #: builtin/commit.c:785
 msgid "could not write commit template"
@@ -4499,46 +4587,46 @@
 msgstr "无效的清理模式 %s"
 
 #: builtin/commit.c:1214
 msgid "Paths with -a does not make sense."
 msgstr "路径和 -a 选项同时使用没有意义。"
 
-#: builtin/commit.c:1324 builtin/commit.c:1604
+#: builtin/commit.c:1324 builtin/commit.c:1603
 msgid "show status concisely"
 msgstr "以简洁的格式显示状态"
 
-#: builtin/commit.c:1326 builtin/commit.c:1606
+#: builtin/commit.c:1326 builtin/commit.c:1605
 msgid "show branch information"
 msgstr "显示分支信息"
 
-#: builtin/commit.c:1328 builtin/commit.c:1608 builtin/push.c:509
+#: builtin/commit.c:1328 builtin/commit.c:1607 builtin/push.c:509
 msgid "machine-readable output"
 msgstr "机器可读的输出"
 
-#: builtin/commit.c:1331 builtin/commit.c:1610
+#: builtin/commit.c:1331 builtin/commit.c:1609
 msgid "show status in long format (default)"
 msgstr "以长格式显示状态（默认）"
 
-#: builtin/commit.c:1334 builtin/commit.c:1613
+#: builtin/commit.c:1334 builtin/commit.c:1612
 msgid "terminate entries with NUL"
 msgstr "条目以NUL字符结尾"
 
-#: builtin/commit.c:1336 builtin/commit.c:1616 builtin/fast-export.c:980
+#: builtin/commit.c:1336 builtin/commit.c:1615 builtin/fast-export.c:980
 #: builtin/fast-export.c:983 builtin/tag.c:603
 msgid "mode"
 msgstr "模式"
 
-#: builtin/commit.c:1337 builtin/commit.c:1616
+#: builtin/commit.c:1337 builtin/commit.c:1615
 msgid "show untracked files, optional modes: all, normal, no. (Default: all)"
 msgstr "显示未跟踪的文件，“模式”的可选参数：all、normal、no。（默认：all）"
 
 #: builtin/commit.c:1340
 msgid "show ignored files"
 msgstr "显示忽略的文件"
 
-#: builtin/commit.c:1341 parse-options.h:153
+#: builtin/commit.c:1341 parse-options.h:152
 msgid "when"
 msgstr "何时"
 
 #: builtin/commit.c:1342
 msgid ""
 "ignore changes to submodules, optional when: all, dirty, untracked. "
@@ -4547,210 +4635,210 @@
 "忽略子模组的更改，“何时”的可选参数：all、dirty、untracked。（默认：all）"
 
 #: builtin/commit.c:1344
 msgid "list untracked files in columns"
 msgstr "以列的方式显示未跟踪的文件"
 
-#: builtin/commit.c:1431
+#: builtin/commit.c:1430
 msgid "couldn't look up newly created commit"
 msgstr "无法找到新创建的提交"
 
-#: builtin/commit.c:1433
+#: builtin/commit.c:1432
 msgid "could not parse newly created commit"
 msgstr "不能解析新创建的提交"
 
-#: builtin/commit.c:1478
+#: builtin/commit.c:1477
 msgid "detached HEAD"
 msgstr "分离头指针"
 
 #  译者：中文字符串拼接，可删除前导空格
-#: builtin/commit.c:1481
+#: builtin/commit.c:1480
 msgid " (root-commit)"
 msgstr "（根提交）"
 
-#: builtin/commit.c:1574
+#: builtin/commit.c:1573
 msgid "suppress summary after successful commit"
 msgstr "提交成功后不显示概述信息"
 
-#: builtin/commit.c:1575
+#: builtin/commit.c:1574
 msgid "show diff in commit message template"
 msgstr "在提交说明模板里显示差异"
 
-#: builtin/commit.c:1577
+#: builtin/commit.c:1576
 msgid "Commit message options"
 msgstr "提交说明选项"
 
-#: builtin/commit.c:1578 builtin/tag.c:601
+#: builtin/commit.c:1577 builtin/tag.c:601
 msgid "read message from file"
 msgstr "从文件中读取提交说明"
 
-#: builtin/commit.c:1579
+#: builtin/commit.c:1578
 msgid "author"
 msgstr "作者"
 
-#: builtin/commit.c:1579
+#: builtin/commit.c:1578
 msgid "override author for commit"
 msgstr "提交时覆盖作者"
 
-#: builtin/commit.c:1580 builtin/gc.c:275
+#: builtin/commit.c:1579 builtin/gc.c:280
 msgid "date"
 msgstr "日期"
 
-#: builtin/commit.c:1580
+#: builtin/commit.c:1579
 msgid "override date for commit"
 msgstr "提交时覆盖日期"
 
-#: builtin/commit.c:1581 builtin/merge.c:218 builtin/notes.c:391
+#: builtin/commit.c:1580 builtin/merge.c:218 builtin/notes.c:391
 #: builtin/notes.c:554 builtin/tag.c:599
 msgid "message"
 msgstr "说明"
 
-#: builtin/commit.c:1581
+#: builtin/commit.c:1580
 msgid "commit message"
 msgstr "提交说明"
 
-#: builtin/commit.c:1582
+#: builtin/commit.c:1581
 msgid "reuse and edit message from specified commit"
 msgstr "重用并编辑指定提交的提交说明"
 
-#: builtin/commit.c:1583
+#: builtin/commit.c:1582
 msgid "reuse message from specified commit"
 msgstr "重用指定提交的提交说明"
 
-#: builtin/commit.c:1584
+#: builtin/commit.c:1583
 msgid "use autosquash formatted message to fixup specified commit"
 msgstr "使用 autosquash 格式的提交说明用以修正指定的提交"
 
-#: builtin/commit.c:1585
+#: builtin/commit.c:1584
 msgid "use autosquash formatted message to squash specified commit"
 msgstr "使用 autosquash 格式的提交说明用以压缩至指定的提交"
 
-#: builtin/commit.c:1586
+#: builtin/commit.c:1585
 msgid "the commit is authored by me now (used with -C/-c/--amend)"
 msgstr "现在将该提交的作者改为我（和 -C/-c/--amend 参数共用）"
 
-#: builtin/commit.c:1587 builtin/log.c:1191 builtin/revert.c:86
+#: builtin/commit.c:1586 builtin/log.c:1191 builtin/revert.c:86
 msgid "add Signed-off-by:"
 msgstr "添加 Signed-off-by: 签名"
 
-#: builtin/commit.c:1588
+#: builtin/commit.c:1587
 msgid "use specified template file"
 msgstr "使用指定的模板文件"
 
-#: builtin/commit.c:1589
+#: builtin/commit.c:1588
 msgid "force edit of commit"
 msgstr "强制编辑提交"
 
 #  译者：可选值，不能翻译（或是原文中笔误，应为 mode）
-#: builtin/commit.c:1590
+#: builtin/commit.c:1589
 msgid "default"
 msgstr "default"
 
-#: builtin/commit.c:1590 builtin/tag.c:604
+#: builtin/commit.c:1589 builtin/tag.c:604
 msgid "how to strip spaces and #comments from message"
 msgstr "设置如何删除提交说明里的空格和#注释"
 
-#: builtin/commit.c:1591
+#: builtin/commit.c:1590
 msgid "include status in commit message template"
 msgstr "在提交说明模板里包含状态信息"
 
-#: builtin/commit.c:1592 builtin/merge.c:225 builtin/revert.c:92
+#: builtin/commit.c:1591 builtin/merge.c:225 builtin/revert.c:92
 #: builtin/tag.c:605
 msgid "key-id"
 msgstr "key-id"
 
-#: builtin/commit.c:1593 builtin/merge.c:226 builtin/revert.c:93
+#: builtin/commit.c:1592 builtin/merge.c:226 builtin/revert.c:93
 msgid "GPG sign commit"
 msgstr "GPG 提交签名"
 
-#: builtin/commit.c:1596
+#: builtin/commit.c:1595
 msgid "Commit contents options"
 msgstr "提交内容选项"
 
-#: builtin/commit.c:1597
+#: builtin/commit.c:1596
 msgid "commit all changed files"
 msgstr "提交所有改动的文件"
 
-#: builtin/commit.c:1598
+#: builtin/commit.c:1597
 msgid "add specified files to index for commit"
 msgstr "添加指定的文件到索引区等待提交"
 
-#: builtin/commit.c:1599
+#: builtin/commit.c:1598
 msgid "interactively add files"
 msgstr "交互式添加文件"
 
-#: builtin/commit.c:1600
+#: builtin/commit.c:1599
 msgid "interactively add changes"
 msgstr "交互式添加变更"
 
-#: builtin/commit.c:1601
+#: builtin/commit.c:1600
 msgid "commit only specified files"
 msgstr "只提交指定的文件"
 
-#: builtin/commit.c:1602
+#: builtin/commit.c:1601
 msgid "bypass pre-commit hook"
 msgstr "绕过 pre-commit 钩子"
 
-#: builtin/commit.c:1603
+#: builtin/commit.c:1602
 msgid "show what would be committed"
 msgstr "显示将要提交的内容"
 
-#: builtin/commit.c:1614
+#: builtin/commit.c:1613
 msgid "amend previous commit"
 msgstr "修改先前的提交"
 
-#: builtin/commit.c:1615
+#: builtin/commit.c:1614
 msgid "bypass post-rewrite hook"
 msgstr "绕过 post-rewrite 钩子"
 
-#: builtin/commit.c:1620
+#: builtin/commit.c:1619
 msgid "ok to record an empty change"
 msgstr "允许一个空提交"
 
-#: builtin/commit.c:1622
+#: builtin/commit.c:1621
 msgid "ok to record a change with an empty message"
 msgstr "允许空的提交说明"
 
-#: builtin/commit.c:1651
+#: builtin/commit.c:1650
 msgid "could not parse HEAD commit"
 msgstr "不能解析 HEAD 提交"
 
-#: builtin/commit.c:1690 builtin/merge.c:519
+#: builtin/commit.c:1689 builtin/merge.c:1076
 #, c-format
 msgid "could not open '%s' for reading"
 msgstr "不能为读入打开 '%s'"
 
-#: builtin/commit.c:1697
+#: builtin/commit.c:1696
 #, c-format
 msgid "Corrupt MERGE_HEAD file (%s)"
 msgstr "损坏的 MERGE_HEAD 文件（%s）"
 
-#: builtin/commit.c:1704
+#: builtin/commit.c:1703
 msgid "could not read MERGE_MODE"
 msgstr "不能读取 MERGE_MODE"
 
-#: builtin/commit.c:1723
+#: builtin/commit.c:1722
 #, c-format
 msgid "could not read commit message: %s"
 msgstr "不能读取提交说明：%s"
 
-#: builtin/commit.c:1734
+#: builtin/commit.c:1733
 #, c-format
 msgid "Aborting commit; you did not edit the message.\n"
 msgstr "终止提交；您未更改来自模版的提交说明。\n"
 
-#: builtin/commit.c:1739
+#: builtin/commit.c:1738
 #, c-format
 msgid "Aborting commit due to empty commit message.\n"
 msgstr "终止提交因为提交说明为空。\n"
 
-#: builtin/commit.c:1754 builtin/merge.c:851 builtin/merge.c:876
+#: builtin/commit.c:1753 builtin/merge.c:829 builtin/merge.c:854
 msgid "failed to write commit object"
 msgstr "无法写提交对象"
 
-#: builtin/commit.c:1787
+#: builtin/commit.c:1786
 msgid ""
 "Repository has been updated, but unable to write\n"
 "new_index file. Check that disk is not full and quota is\n"
 "not exceeded, and then \"git reset HEAD\" to recover."
 msgstr ""
 "版本库已更新，但无法写 new_index 文件。检查是否磁盘已满\n"
@@ -4885,24 +4973,24 @@
 msgstr "不能解析缺省的颜色值"
 
 #: builtin/config.c:457
 #, c-format
 msgid ""
 "# This is Git's per-user configuration file.\n"
-"[core]\n"
+"[user]\n"
 "# Please adapt and uncomment the following lines:\n"
-"#\tuser = %s\n"
+"#\tname = %s\n"
 "#\temail = %s\n"
 msgstr ""
 "# This is Git's per-user configuration file.\n"
-"[core]\n"
+"[user]\n"
 "# Please adapt and uncomment the following lines:\n"
-"#\tuser = %s\n"
+"#\tname = %s\n"
 "#\temail = %s\n"
 
-#: builtin/config.c:589
+#: builtin/config.c:587
 #, c-format
 msgid "cannot create configuration file %s"
 msgstr "不能创建配置文件 %s"
 
 #: builtin/count-objects.c:55
 msgid "git count-objects [-v] [-H | --human-readable]"
@@ -5227,366 +5315,366 @@
 msgstr "引用映射"
 
 #: builtin/fetch.c:125
 msgid "specify fetch refmap"
 msgstr "指定获取操作的引用映射"
 
-#: builtin/fetch.c:375
+#: builtin/fetch.c:377
 msgid "Couldn't find remote ref HEAD"
 msgstr "无法发现远程 HEAD 引用"
 
-#: builtin/fetch.c:455
+#: builtin/fetch.c:457
 #, c-format
 msgid "object %s not found"
 msgstr "对象 %s 未发现"
 
-#: builtin/fetch.c:460
+#: builtin/fetch.c:462
 msgid "[up to date]"
 msgstr "[最新]"
 
-#: builtin/fetch.c:474
+#: builtin/fetch.c:476
 #, c-format
 msgid "! %-*s %-*s -> %s  (can't fetch in current branch)"
 msgstr "! %-*s %-*s -> %s  （在当前分支下不能获取）"
 
-#: builtin/fetch.c:475 builtin/fetch.c:561
+#: builtin/fetch.c:477 builtin/fetch.c:563
 msgid "[rejected]"
 msgstr "[已拒绝]"
 
-#: builtin/fetch.c:486
+#: builtin/fetch.c:488
 msgid "[tag update]"
 msgstr "[tag更新]"
 
 #  译者：注意保持前导空格
-#: builtin/fetch.c:488 builtin/fetch.c:523 builtin/fetch.c:541
+#: builtin/fetch.c:490 builtin/fetch.c:525 builtin/fetch.c:543
 msgid "  (unable to update local ref)"
 msgstr "  （不能更新本地引用）"
 
-#: builtin/fetch.c:506
+#: builtin/fetch.c:508
 msgid "[new tag]"
 msgstr "[新tag]"
 
-#: builtin/fetch.c:509
+#: builtin/fetch.c:511
 msgid "[new branch]"
 msgstr "[新分支]"
 
-#: builtin/fetch.c:512
+#: builtin/fetch.c:514
 msgid "[new ref]"
 msgstr "[新引用]"
 
-#: builtin/fetch.c:557
+#: builtin/fetch.c:559
 msgid "unable to update local ref"
 msgstr "不能更新本地引用"
 
-#: builtin/fetch.c:557
+#: builtin/fetch.c:559
 msgid "forced update"
 msgstr "强制更新"
 
-#: builtin/fetch.c:563
+#: builtin/fetch.c:565
 msgid "(non-fast-forward)"
 msgstr "（非快进式）"
 
-#: builtin/fetch.c:596 builtin/fetch.c:829
+#: builtin/fetch.c:599 builtin/fetch.c:832
 #, c-format
 msgid "cannot open %s: %s\n"
 msgstr "无法打开 %s：%s\n"
 
-#: builtin/fetch.c:605
+#: builtin/fetch.c:608
 #, c-format
 msgid "%s did not send all necessary objects\n"
 msgstr "%s 未发送所有必须的对象\n"
 
-#: builtin/fetch.c:623
+#: builtin/fetch.c:626
 #, c-format
 msgid "reject %s because shallow roots are not allowed to be updated"
 msgstr "拒绝 %s 因为浅克隆不允许被更新"
 
-#: builtin/fetch.c:711 builtin/fetch.c:794
+#: builtin/fetch.c:714 builtin/fetch.c:797
 #, c-format
 msgid "From %.*s\n"
 msgstr "来自 %.*s\n"
 
-#: builtin/fetch.c:722
+#: builtin/fetch.c:725
 #, c-format
 msgid ""
 "some local refs could not be updated; try running\n"
 " 'git remote prune %s' to remove any old, conflicting branches"
 msgstr ""
 "一些本地引用不能被更新；尝试运行\n"
 " 'git remote prune %s' 来删除旧的、有冲突的分支"
 
 #  译者：注意保持前导空格
-#: builtin/fetch.c:774
+#: builtin/fetch.c:777
 #, c-format
 msgid "   (%s will become dangling)"
 msgstr "   （%s 将成为摇摆状态）"
 
 #  译者：注意保持前导空格
-#: builtin/fetch.c:775
+#: builtin/fetch.c:778
 #, c-format
 msgid "   (%s has become dangling)"
 msgstr "   （%s 已成为摇摆状态）"
 
-#: builtin/fetch.c:799
+#: builtin/fetch.c:802
 msgid "[deleted]"
 msgstr "[已删除]"
 
-#: builtin/fetch.c:800 builtin/remote.c:1060
+#: builtin/fetch.c:803 builtin/remote.c:1057
 msgid "(none)"
 msgstr "（无）"
 
-#: builtin/fetch.c:819
+#: builtin/fetch.c:822
 #, c-format
 msgid "Refusing to fetch into current branch %s of non-bare repository"
 msgstr "拒绝获取到非纯版本库的当前分支 %s"
 
-#: builtin/fetch.c:838
+#: builtin/fetch.c:841
 #, c-format
 msgid "Option \"%s\" value \"%s\" is not valid for %s"
 msgstr "选项 \"%s\" 的值 \"%s\" 对于 %s 是无效的"
 
-#: builtin/fetch.c:841
+#: builtin/fetch.c:844
 #, c-format
 msgid "Option \"%s\" is ignored for %s\n"
 msgstr "选项 \"%s\" 为 %s 所忽略\n"
 
-#: builtin/fetch.c:897
+#: builtin/fetch.c:900
 #, c-format
 msgid "Don't know how to fetch from %s"
 msgstr "不知道如何从 %s 获取"
 
-#: builtin/fetch.c:1059
+#: builtin/fetch.c:1063
 #, c-format
 msgid "Fetching %s\n"
 msgstr "正在获取 %s\n"
 
-#: builtin/fetch.c:1061 builtin/remote.c:90
+#: builtin/fetch.c:1065 builtin/remote.c:90
 #, c-format
 msgid "Could not fetch %s"
 msgstr "不能获取 %s"
 
-#: builtin/fetch.c:1079
+#: builtin/fetch.c:1083
 msgid ""
 "No remote repository specified.  Please, specify either a URL or a\n"
 "remote name from which new revisions should be fetched."
 msgstr "未指定远程版本库。请通过一个URL或远程版本库名指定，用以获取新提交。"
 
-#: builtin/fetch.c:1102
+#: builtin/fetch.c:1106
 msgid "You need to specify a tag name."
 msgstr "您需要指定一个 tag 名称。"
 
-#: builtin/fetch.c:1144
+#: builtin/fetch.c:1148
 msgid "--depth and --unshallow cannot be used together"
 msgstr "--depth 和 --unshallow 不能同时使用"
 
-#: builtin/fetch.c:1146
+#: builtin/fetch.c:1150
 msgid "--unshallow on a complete repository does not make sense"
 msgstr "对于一个完整的版本库，参数 --unshallow 没有意义"
 
-#: builtin/fetch.c:1169
+#: builtin/fetch.c:1173
 msgid "fetch --all does not take a repository argument"
 msgstr "fetch --all 不能带一个版本库参数"
 
-#: builtin/fetch.c:1171
+#: builtin/fetch.c:1175
 msgid "fetch --all does not make sense with refspecs"
 msgstr "fetch --all 带引用规则没有任何意义"
 
-#: builtin/fetch.c:1182
+#: builtin/fetch.c:1186
 #, c-format
 msgid "No such remote or remote group: %s"
 msgstr "没有这样的远程或远程组：%s"
 
-#: builtin/fetch.c:1190
+#: builtin/fetch.c:1194
 msgid "Fetching a group and specifying refspecs does not make sense"
 msgstr "获取组并指定引用规则没有意义"
 
 #: builtin/fmt-merge-msg.c:13
 msgid ""
 "git fmt-merge-msg [-m <message>] [--log[=<n>] | --no-log] [--file <file>]"
 msgstr "git fmt-merge-msg [-m <说明>] [--log[=<n>] | --no-log] [--file <文件>]"
 
-#: builtin/fmt-merge-msg.c:662 builtin/fmt-merge-msg.c:665 builtin/grep.c:698
+#: builtin/fmt-merge-msg.c:668 builtin/fmt-merge-msg.c:671 builtin/grep.c:698
 #: builtin/merge.c:198 builtin/repack.c:178 builtin/repack.c:182
-#: builtin/show-branch.c:657 builtin/show-ref.c:178 builtin/tag.c:590
-#: parse-options.h:132 parse-options.h:239
+#: builtin/show-branch.c:664 builtin/show-ref.c:180 builtin/tag.c:590
+#: parse-options.h:131 parse-options.h:238
 msgid "n"
 msgstr "n"
 
-#: builtin/fmt-merge-msg.c:663
+#: builtin/fmt-merge-msg.c:669
 msgid "populate log with at most <n> entries from shortlog"
 msgstr "向提交说明中最多复制指定条目（合并而来的提交）的简短说明"
 
-#: builtin/fmt-merge-msg.c:666
+#: builtin/fmt-merge-msg.c:672
 msgid "alias for --log (deprecated)"
 msgstr "参数 --log 的别名（已弃用）"
 
-#: builtin/fmt-merge-msg.c:669
+#: builtin/fmt-merge-msg.c:675
 msgid "text"
 msgstr "文本"
 
-#: builtin/fmt-merge-msg.c:670
+#: builtin/fmt-merge-msg.c:676
 msgid "use <text> as start of message"
 msgstr "使用 <文本> 作为提交说明的开始"
 
-#: builtin/fmt-merge-msg.c:671
+#: builtin/fmt-merge-msg.c:677
 msgid "file to read from"
 msgstr "从文件中读取"
 
-#: builtin/for-each-ref.c:675
+#: builtin/for-each-ref.c:687
 msgid "unable to parse format"
 msgstr "不能解析格式"
 
-#: builtin/for-each-ref.c:1063
+#: builtin/for-each-ref.c:1083
 msgid "git for-each-ref [<options>] [<pattern>]"
 msgstr "git for-each-ref [<选项>] [<模式>]"
 
-#: builtin/for-each-ref.c:1078
+#: builtin/for-each-ref.c:1098
 msgid "quote placeholders suitably for shells"
 msgstr "引用占位符适用于 shells"
 
-#: builtin/for-each-ref.c:1080
+#: builtin/for-each-ref.c:1100
 msgid "quote placeholders suitably for perl"
 msgstr "引用占位符适用于 perl"
 
-#: builtin/for-each-ref.c:1082
+#: builtin/for-each-ref.c:1102
 msgid "quote placeholders suitably for python"
 msgstr "引用占位符适用于 python"
 
-#: builtin/for-each-ref.c:1084
+#: builtin/for-each-ref.c:1104
 msgid "quote placeholders suitably for Tcl"
 msgstr "引用占位符适用于 Tcl"
 
-#: builtin/for-each-ref.c:1087
+#: builtin/for-each-ref.c:1107
 msgid "show only <n> matched refs"
 msgstr "只显示 <n> 个匹配的引用"
 
-#: builtin/for-each-ref.c:1088 builtin/replace.c:438
+#: builtin/for-each-ref.c:1108 builtin/replace.c:438
 msgid "format"
 msgstr "格式"
 
-#: builtin/for-each-ref.c:1088
+#: builtin/for-each-ref.c:1108
 msgid "format to use for the output"
 msgstr "输出格式"
 
-#: builtin/for-each-ref.c:1089
+#: builtin/for-each-ref.c:1109
 msgid "key"
 msgstr "key"
 
-#: builtin/for-each-ref.c:1090
+#: builtin/for-each-ref.c:1110
 msgid "field name to sort on"
 msgstr "排序的字段名"
 
 #: builtin/fsck.c:147 builtin/prune.c:137
 msgid "Checking connectivity"
 msgstr "检查连接中"
 
-#: builtin/fsck.c:540
+#: builtin/fsck.c:548
 msgid "Checking object directories"
 msgstr "检查对象目录中"
 
-#: builtin/fsck.c:603
+#: builtin/fsck.c:611
 msgid "git fsck [<options>] [<object>...]"
 msgstr "git fsck [<选项>] [<对象>...]"
 
-#: builtin/fsck.c:609
+#: builtin/fsck.c:617
 msgid "show unreachable objects"
 msgstr "显示不可达的对象"
 
-#: builtin/fsck.c:610
+#: builtin/fsck.c:618
 msgid "show dangling objects"
 msgstr "显示摇摆的对象"
 
-#: builtin/fsck.c:611
+#: builtin/fsck.c:619
 msgid "report tags"
 msgstr "报告 tags"
 
-#: builtin/fsck.c:612
+#: builtin/fsck.c:620
 msgid "report root nodes"
 msgstr "报告根节点"
 
-#: builtin/fsck.c:613
+#: builtin/fsck.c:621
 msgid "make index objects head nodes"
 msgstr "将索引亦作为检查的头节点"
 
-#: builtin/fsck.c:614
+#: builtin/fsck.c:622
 msgid "make reflogs head nodes (default)"
 msgstr "将引用日志作为检查的头节点（默认）"
 
-#: builtin/fsck.c:615
+#: builtin/fsck.c:623
 msgid "also consider packs and alternate objects"
 msgstr "也考虑包和备用对象"
 
-#: builtin/fsck.c:616
+#: builtin/fsck.c:624
 msgid "enable more strict checking"
 msgstr "启用更严格的检查"
 
-#: builtin/fsck.c:618
+#: builtin/fsck.c:626
 msgid "write dangling objects in .git/lost-found"
 msgstr "将摇摆对象写入 .git/lost-found 中"
 
-#: builtin/fsck.c:619 builtin/prune.c:108
+#: builtin/fsck.c:627 builtin/prune.c:107
 msgid "show progress"
 msgstr "显示进度"
 
-#: builtin/fsck.c:669
+#: builtin/fsck.c:677
 msgid "Checking objects"
 msgstr "检查对象中"
 
 #: builtin/gc.c:24
 msgid "git gc [<options>]"
 msgstr "git gc [<选项>]"
 
-#: builtin/gc.c:79
+#: builtin/gc.c:67
 #, c-format
-msgid "Invalid gc.pruneexpire: '%s'"
-msgstr "无效的 gc.pruneexpire：'%s'"
+msgid "Invalid %s: '%s'"
+msgstr "无效 %s：'%s'"
 
-#: builtin/gc.c:107
+#: builtin/gc.c:112
 #, c-format
 msgid "insanely long object directory %.*s"
 msgstr "不正常的长对象目录 %.*s"
 
-#: builtin/gc.c:276
+#: builtin/gc.c:281
 msgid "prune unreferenced objects"
 msgstr "清除未引用的对象"
 
-#: builtin/gc.c:278
+#: builtin/gc.c:283
 msgid "be more thorough (increased runtime)"
 msgstr "更彻底（增加运行时间）"
 
-#: builtin/gc.c:279
+#: builtin/gc.c:284
 msgid "enable auto-gc mode"
 msgstr "启用自动垃圾回收模式"
 
-#: builtin/gc.c:280
+#: builtin/gc.c:285
 msgid "force running gc even if there may be another gc running"
 msgstr "强制执行 gc 即使另外一个 gc 正在执行"
 
-#: builtin/gc.c:321
+#: builtin/gc.c:327
 #, c-format
 msgid "Auto packing the repository in background for optimum performance.\n"
 msgstr "自动在后台执行版本库打包以求最佳性能。\n"
 
-#: builtin/gc.c:323
+#: builtin/gc.c:329
 #, c-format
 msgid "Auto packing the repository for optimum performance.\n"
 msgstr "自动打包版本库以求最佳性能。\n"
 
-#: builtin/gc.c:324
+#: builtin/gc.c:330
 #, c-format
 msgid "See \"git help gc\" for manual housekeeping.\n"
 msgstr "手工维护参见 \"git help gc\"。\n"
 
-#: builtin/gc.c:342
+#: builtin/gc.c:348
 #, c-format
 msgid ""
 "gc is already running on machine '%s' pid %<PRIuMAX> (use --force if not)"
 msgstr ""
 "已经有一个 gc 正运行在机器 '%s' pid %<PRIuMAX> （如果不是，使用 --force）"
 
-#: builtin/gc.c:364
+#: builtin/gc.c:376
 msgid ""
 "There are too many unreachable loose objects; run 'git prune' to remove them."
 msgstr "有太多不可达的松散对象，运行 'git prune' 删除它们。"
 
 #: builtin/grep.c:23
 msgid "git grep [<options>] [-e] <pattern> [<rev>...] [[--] <path>...]"
@@ -5783,13 +5871,13 @@
 msgstr "分页显示匹配的文件"
 
 #: builtin/grep.c:740
 msgid "allow calling of grep(1) (ignored by this build)"
 msgstr "允许调用 grep(1)（本次构建忽略）"
 
-#: builtin/grep.c:741 builtin/show-ref.c:187
+#: builtin/grep.c:741 builtin/show-ref.c:189
 msgid "show usage"
 msgstr "显示用法"
 
 #: builtin/grep.c:808
 msgid "no pattern given."
 msgstr "未提供模式匹配。"
@@ -5811,50 +5899,50 @@
 msgstr "--[no-]exclude-standard 不能用于已跟踪内容。"
 
 #: builtin/grep.c:908
 msgid "both --cached and trees are given."
 msgstr "同时给出了 --cached 和树对象。"
 
-#: builtin/hash-object.c:82
+#: builtin/hash-object.c:80
 msgid ""
 "git hash-object [-t <type>] [-w] [--path=<file> | --no-filters] [--stdin] "
 "[--] <file>..."
 msgstr ""
 "git hash-object [-t <类型>] [-w] [--path=<文件> | --no-filters] [--stdin] "
 "[--] <文件>..."
 
-#: builtin/hash-object.c:83
+#: builtin/hash-object.c:81
 msgid "git hash-object  --stdin-paths < <list-of-paths>"
 msgstr "git hash-object  --stdin-paths < <路径列表>"
 
-#: builtin/hash-object.c:94 builtin/tag.c:612
+#: builtin/hash-object.c:92 builtin/tag.c:612
 msgid "type"
 msgstr "类型"
 
-#: builtin/hash-object.c:94
+#: builtin/hash-object.c:92
 msgid "object type"
 msgstr "对象类型"
 
-#: builtin/hash-object.c:95
+#: builtin/hash-object.c:93
 msgid "write the object into the object database"
 msgstr "将对象写入对象数据库"
 
-#: builtin/hash-object.c:97
+#: builtin/hash-object.c:95
 msgid "read the object from stdin"
 msgstr "从标准输入读取对象"
 
-#: builtin/hash-object.c:99
+#: builtin/hash-object.c:97
 msgid "store file as is without filters"
 msgstr "原样存储文件不使用过滤器"
 
-#: builtin/hash-object.c:100
+#: builtin/hash-object.c:98
 msgid ""
 "just hash any random garbage to create corrupt objects for debugging Git"
 msgstr "允许对任意随机垃圾数据做散列来创建损坏的对象以便调试 Git"
 
-#: builtin/hash-object.c:101
+#: builtin/hash-object.c:99
 msgid "process file as it were from this path"
 msgstr "处理文件并假设其来自于此路径"
 
 #: builtin/help.c:41
 msgid "print all available commands"
 msgstr "打印所有可用的命令"
@@ -5976,297 +6064,297 @@
 
 #: builtin/help.c:501
 #, c-format
 msgid "`git %s' is aliased to `%s'"
 msgstr "`git %s' 是 `%s' 的别名"
 
-#: builtin/index-pack.c:150
+#: builtin/index-pack.c:151
 #, c-format
 msgid "unable to open %s"
 msgstr "不能打开 %s"
 
-#: builtin/index-pack.c:200
+#: builtin/index-pack.c:201
 #, c-format
 msgid "object type mismatch at %s"
 msgstr "%s 的对象类型不匹配"
 
-#: builtin/index-pack.c:220
+#: builtin/index-pack.c:221
 #, c-format
 msgid "did not receive expected object %s"
 msgstr "未能获取期望的对象 %s"
 
-#: builtin/index-pack.c:223
+#: builtin/index-pack.c:224
 #, c-format
 msgid "object %s: expected type %s, found %s"
 msgstr "对象 %s：期待类型 %s，却是 %s"
 
-#: builtin/index-pack.c:265
+#: builtin/index-pack.c:266
 #, c-format
 msgid "cannot fill %d byte"
 msgid_plural "cannot fill %d bytes"
 msgstr[0] "无法填充 %d 字节"
 msgstr[1] "无法填充 %d 字节"
 
-#: builtin/index-pack.c:275
+#: builtin/index-pack.c:276
 msgid "early EOF"
 msgstr "过早的文件结束符（EOF）"
 
-#: builtin/index-pack.c:276
+#: builtin/index-pack.c:277
 msgid "read error on input"
 msgstr "输入上的读错误"
 
-#: builtin/index-pack.c:288
+#: builtin/index-pack.c:289
 msgid "used more bytes than were available"
 msgstr "用掉了超过可用的字节"
 
-#: builtin/index-pack.c:295
+#: builtin/index-pack.c:296
 msgid "pack too large for current definition of off_t"
 msgstr "包太大超过了当前 off_t 的定义"
 
-#: builtin/index-pack.c:311
+#: builtin/index-pack.c:312
 #, c-format
 msgid "unable to create '%s'"
 msgstr "不能创建 '%s'"
 
-#: builtin/index-pack.c:316
+#: builtin/index-pack.c:317
 #, c-format
 msgid "cannot open packfile '%s'"
 msgstr "无法打开包文件 '%s'"
 
-#: builtin/index-pack.c:330
+#: builtin/index-pack.c:331
 msgid "pack signature mismatch"
 msgstr "包签名不匹配"
 
-#: builtin/index-pack.c:332
+#: builtin/index-pack.c:333
 #, c-format
 msgid "pack version %<PRIu32> unsupported"
 msgstr "不支持包版本 %<PRIu32>"
 
-#: builtin/index-pack.c:350
+#: builtin/index-pack.c:351
 #, c-format
 msgid "pack has bad object at offset %lu: %s"
 msgstr "包中有错误的对象位于 %lu：%s"
 
-#: builtin/index-pack.c:471
+#: builtin/index-pack.c:472
 #, c-format
 msgid "inflate returned %d"
 msgstr "解压缩返回 %d"
 
-#: builtin/index-pack.c:520
+#: builtin/index-pack.c:521
 msgid "offset value overflow for delta base object"
 msgstr "偏移值覆盖了 delta 基准对象"
 
-#: builtin/index-pack.c:528
+#: builtin/index-pack.c:529
 msgid "delta base offset is out of bound"
 msgstr "delta 基准偏移越界"
 
-#: builtin/index-pack.c:536
+#: builtin/index-pack.c:537
 #, c-format
 msgid "unknown object type %d"
 msgstr "未知对象类型 %d"
 
-#: builtin/index-pack.c:567
+#: builtin/index-pack.c:568
 msgid "cannot pread pack file"
 msgstr "无法读取包文件"
 
-#: builtin/index-pack.c:569
+#: builtin/index-pack.c:570
 #, c-format
 msgid "premature end of pack file, %lu byte missing"
 msgid_plural "premature end of pack file, %lu bytes missing"
 msgstr[0] "包文件过早结束，缺少 %lu 字节"
 msgstr[1] "包文件过早结束，缺少 %lu 字节"
 
-#: builtin/index-pack.c:595
+#: builtin/index-pack.c:596
 msgid "serious inflate inconsistency"
 msgstr "解压缩严重的不一致"
 
-#: builtin/index-pack.c:686 builtin/index-pack.c:692 builtin/index-pack.c:715
-#: builtin/index-pack.c:749 builtin/index-pack.c:758
+#: builtin/index-pack.c:742 builtin/index-pack.c:748 builtin/index-pack.c:771
+#: builtin/index-pack.c:805 builtin/index-pack.c:814
 #, c-format
 msgid "SHA1 COLLISION FOUND WITH %s !"
 msgstr "发现 %s 出现 SHA1 冲突！"
 
-#: builtin/index-pack.c:689 builtin/pack-objects.c:162
+#: builtin/index-pack.c:745 builtin/pack-objects.c:162
 #: builtin/pack-objects.c:254
 #, c-format
 msgid "unable to read %s"
 msgstr "不能读 %s"
 
-#: builtin/index-pack.c:755
+#: builtin/index-pack.c:811
 #, c-format
 msgid "cannot read existing object %s"
 msgstr "不能读取现存对象 %s"
 
-#: builtin/index-pack.c:769
+#: builtin/index-pack.c:825
 #, c-format
 msgid "invalid blob object %s"
 msgstr "无效的数据（blob）对象 %s"
 
-#: builtin/index-pack.c:783
+#: builtin/index-pack.c:839
 #, c-format
 msgid "invalid %s"
 msgstr "无效的 %s"
 
-#: builtin/index-pack.c:787
+#: builtin/index-pack.c:843
 msgid "Error in object"
 msgstr "对象中出错"
 
-#: builtin/index-pack.c:789
+#: builtin/index-pack.c:845
 #, c-format
 msgid "Not all child objects of %s are reachable"
 msgstr "%s 的所有子对象并非都可达"
 
-#: builtin/index-pack.c:861 builtin/index-pack.c:890
+#: builtin/index-pack.c:917 builtin/index-pack.c:948
 msgid "failed to apply delta"
 msgstr "无法应用 delta"
 
-#: builtin/index-pack.c:1055
+#: builtin/index-pack.c:1118
 msgid "Receiving objects"
 msgstr "接收对象中"
 
-#: builtin/index-pack.c:1055
+#: builtin/index-pack.c:1118
 msgid "Indexing objects"
 msgstr "索引对象中"
 
-#: builtin/index-pack.c:1081
+#: builtin/index-pack.c:1150
 msgid "pack is corrupted (SHA1 mismatch)"
 msgstr "包冲突（SHA1 不匹配）"
 
-#: builtin/index-pack.c:1086
+#: builtin/index-pack.c:1155
 msgid "cannot fstat packfile"
 msgstr "不能枚举包文件状态"
 
-#: builtin/index-pack.c:1089
+#: builtin/index-pack.c:1158
 msgid "pack has junk at the end"
 msgstr "包的结尾有垃圾数据"
 
-#: builtin/index-pack.c:1100
+#: builtin/index-pack.c:1169
 msgid "confusion beyond insanity in parse_pack_objects()"
 msgstr "parse_pack_objects() 中遇到不可理喻的问题"
 
-#: builtin/index-pack.c:1123
+#: builtin/index-pack.c:1194
 msgid "Resolving deltas"
 msgstr "处理 delta 中"
 
-#: builtin/index-pack.c:1133
+#: builtin/index-pack.c:1205
 #, c-format
 msgid "unable to create thread: %s"
 msgstr "不能创建线程：%s"
 
-#: builtin/index-pack.c:1175
+#: builtin/index-pack.c:1247
 msgid "confusion beyond insanity"
 msgstr "不可理喻"
 
-#: builtin/index-pack.c:1181
+#: builtin/index-pack.c:1253
 #, c-format
 msgid "completed with %d local objects"
 msgstr "完成 %d 个本地对象"
 
-#: builtin/index-pack.c:1191
+#: builtin/index-pack.c:1263
 #, c-format
 msgid "Unexpected tail checksum for %s (disk corruption?)"
 msgstr "对 %s 的尾部校验出现意外（磁盘损坏？）"
 
-#: builtin/index-pack.c:1195
+#: builtin/index-pack.c:1267
 #, c-format
 msgid "pack has %d unresolved delta"
 msgid_plural "pack has %d unresolved deltas"
 msgstr[0] "包有 %d 个未解决的 delta"
 msgstr[1] "包有 %d 个未解决的 delta"
 
-#: builtin/index-pack.c:1219
+#: builtin/index-pack.c:1291
 #, c-format
 msgid "unable to deflate appended object (%d)"
 msgstr "不能压缩附加对象（%d）"
 
-#: builtin/index-pack.c:1298
+#: builtin/index-pack.c:1367
 #, c-format
 msgid "local object %s is corrupt"
 msgstr "本地对象 %s 已损坏"
 
-#: builtin/index-pack.c:1322
+#: builtin/index-pack.c:1391
 msgid "error while closing pack file"
 msgstr "关闭包文件时出错"
 
-#: builtin/index-pack.c:1335
+#: builtin/index-pack.c:1404
 #, c-format
 msgid "cannot write keep file '%s'"
 msgstr "无法写保留文件 '%s'"
 
-#: builtin/index-pack.c:1343
+#: builtin/index-pack.c:1412
 #, c-format
 msgid "cannot close written keep file '%s'"
 msgstr "无法关闭保留文件 '%s'"
 
-#: builtin/index-pack.c:1356
+#: builtin/index-pack.c:1425
 msgid "cannot store pack file"
 msgstr "无法存储包文件"
 
-#: builtin/index-pack.c:1367
+#: builtin/index-pack.c:1436
 msgid "cannot store index file"
 msgstr "无法存储索引文件"
 
-#: builtin/index-pack.c:1400
+#: builtin/index-pack.c:1469
 #, c-format
 msgid "bad pack.indexversion=%<PRIu32>"
 msgstr "坏的 pack.indexversion=%<PRIu32>"
 
-#: builtin/index-pack.c:1406
+#: builtin/index-pack.c:1475
 #, c-format
 msgid "invalid number of threads specified (%d)"
 msgstr "指定的线程数无效（%d）"
 
-#: builtin/index-pack.c:1410 builtin/index-pack.c:1589
+#: builtin/index-pack.c:1479 builtin/index-pack.c:1658
 #, c-format
 msgid "no threads support, ignoring %s"
 msgstr "没有线程支持，忽略 %s"
 
-#: builtin/index-pack.c:1468
+#: builtin/index-pack.c:1537
 #, c-format
 msgid "Cannot open existing pack file '%s'"
 msgstr "无法打开现存包文件 '%s'"
 
-#: builtin/index-pack.c:1470
+#: builtin/index-pack.c:1539
 #, c-format
 msgid "Cannot open existing pack idx file for '%s'"
 msgstr "无法为 %s 打开包索引文件"
 
-#: builtin/index-pack.c:1517
+#: builtin/index-pack.c:1586
 #, c-format
 msgid "non delta: %d object"
 msgid_plural "non delta: %d objects"
 msgstr[0] "非 delta：%d 个对象"
 msgstr[1] "非 delta：%d 个对象"
 
-#: builtin/index-pack.c:1524
+#: builtin/index-pack.c:1593
 #, c-format
 msgid "chain length = %d: %lu object"
 msgid_plural "chain length = %d: %lu objects"
 msgstr[0] "链长 = %d: %lu 对象"
 msgstr[1] "链长 = %d: %lu 对象"
 
-#: builtin/index-pack.c:1553
+#: builtin/index-pack.c:1622
 msgid "Cannot come back to cwd"
 msgstr "无法返回当前工作目录"
 
-#: builtin/index-pack.c:1601 builtin/index-pack.c:1604
-#: builtin/index-pack.c:1616 builtin/index-pack.c:1620
+#: builtin/index-pack.c:1670 builtin/index-pack.c:1673
+#: builtin/index-pack.c:1685 builtin/index-pack.c:1689
 #, c-format
 msgid "bad %s"
 msgstr "错误选项 %s"
 
-#: builtin/index-pack.c:1634
+#: builtin/index-pack.c:1703
 msgid "--fix-thin cannot be used without --stdin"
 msgstr "--fix-thin 不能和 --stdin 同时使用"
 
-#: builtin/index-pack.c:1638 builtin/index-pack.c:1647
+#: builtin/index-pack.c:1707 builtin/index-pack.c:1716
 #, c-format
 msgid "packfile name '%s' does not end with '.pack'"
 msgstr "包名 '%s' 没有以 '.pack' 结尾"
 
-#: builtin/index-pack.c:1655
+#: builtin/index-pack.c:1724
 msgid "--verify with no packfile name given"
 msgstr "--verify 没有提供包名参数"
 
 #: builtin/init-db.c:35
 #, c-format
 msgid "Could not make %s writable by group"
@@ -6329,91 +6417,91 @@
 
 #: builtin/init-db.c:157
 #, c-format
 msgid "not copying templates of a wrong format version %d from '%s'"
 msgstr "没有从 '%2$s' 复制带有错误版本 %1$d 的模版"
 
-#: builtin/init-db.c:197
+#: builtin/init-db.c:211
 #, c-format
 msgid "insane git directory %s"
 msgstr "不正常的 git 目录 %s"
 
-#: builtin/init-db.c:331 builtin/init-db.c:334
+#: builtin/init-db.c:343 builtin/init-db.c:346
 #, c-format
 msgid "%s already exists"
 msgstr "%s 已经存在"
 
-#: builtin/init-db.c:363
+#: builtin/init-db.c:374
 #, c-format
 msgid "unable to handle file type %d"
 msgstr "不能处理 %d 类型的文件"
 
-#: builtin/init-db.c:366
+#: builtin/init-db.c:377
 #, c-format
 msgid "unable to move %s to %s"
 msgstr "不能移动 %s 至 %s"
 
 #. TRANSLATORS: The first '%s' is either "Reinitialized
 #. existing" or "Initialized empty", the second " shared" or
 #. "", and the last '%s%s' is the verbatim directory name.
-#: builtin/init-db.c:426
+#: builtin/init-db.c:433
 #, c-format
 msgid "%s%s Git repository in %s%s\n"
 msgstr "%s%s Git 版本库于 %s%s\n"
 
-#: builtin/init-db.c:427
+#: builtin/init-db.c:434
 msgid "Reinitialized existing"
 msgstr "重新初始化现存的"
 
-#: builtin/init-db.c:427
+#: builtin/init-db.c:434
 msgid "Initialized empty"
 msgstr "初始化空的"
 
 #  译者：中文字符串拼接，可删除前导空格
-#: builtin/init-db.c:428
+#: builtin/init-db.c:435
 msgid " shared"
 msgstr "共享"
 
-#: builtin/init-db.c:475
+#: builtin/init-db.c:482
 msgid ""
 "git init [-q | --quiet] [--bare] [--template=<template-directory>] [--"
 "shared[=<permissions>]] [<directory>]"
 msgstr ""
 "git init [-q | --quiet] [--bare] [--template=<模板目录>] [--shared[=<权限>]] "
 "[<目录>]"
 
-#: builtin/init-db.c:498
+#: builtin/init-db.c:505
 msgid "permissions"
 msgstr "权限"
 
-#: builtin/init-db.c:499
+#: builtin/init-db.c:506
 msgid "specify that the git repository is to be shared amongst several users"
 msgstr "指定 git 版本库是多个用户之间共享的"
 
-#: builtin/init-db.c:501 builtin/prune-packed.c:57 builtin/repack.c:171
+#: builtin/init-db.c:508 builtin/prune-packed.c:57 builtin/repack.c:171
 msgid "be quiet"
 msgstr "保持安静"
 
-#: builtin/init-db.c:533 builtin/init-db.c:538
+#: builtin/init-db.c:540 builtin/init-db.c:545
 #, c-format
 msgid "cannot mkdir %s"
 msgstr "不能创建目录 %s"
 
-#: builtin/init-db.c:542
+#: builtin/init-db.c:549
 #, c-format
 msgid "cannot chdir to %s"
 msgstr "不能切换目录到 %s"
 
-#: builtin/init-db.c:563
+#: builtin/init-db.c:570
 #, c-format
 msgid ""
 "%s (or --work-tree=<directory>) not allowed without specifying %s (or --git-"
 "dir=<directory>)"
 msgstr "不允许 %s（或 --work-tree=<目录>）而没有指定 %s（或 --git-dir=<目录>）"
 
-#: builtin/init-db.c:591
+#: builtin/init-db.c:598
 #, c-format
 msgid "Cannot access work tree '%s'"
 msgstr "不能访问工作区 '%s'"
 
 #: builtin/interpret-trailers.c:15
 msgid ""
@@ -6433,13 +6521,13 @@
 
 #: builtin/interpret-trailers.c:27
 msgid "trailer(s) to add"
 msgstr "要添加的签名"
 
 #: builtin/log.c:41
-msgid "git log [<options>] [<revision range>] [[--] <path>...]"
+msgid "git log [<options>] [<revision-range>] [[--] <path>...]"
 msgstr "git log [<选项>] [<版本范围>] [[--] <路径>...]"
 
 #: builtin/log.c:42
 msgid "git show [<options>] <object>..."
 msgstr "git show [<选项>] <对象>..."
 
@@ -6502,13 +6590,13 @@
 msgstr "无法打开补丁文件 %s"
 
 #: builtin/log.c:803
 msgid "Need exactly one range."
 msgstr "只需要一个范围。"
 
-#: builtin/log.c:811
+#: builtin/log.c:813
 msgid "Not a range."
 msgstr "不是一个范围。"
 
 #: builtin/log.c:919
 msgid "Cover letter needs email format"
 msgstr "信封需要邮件地址格式"
@@ -6702,19 +6790,19 @@
 msgstr "无法创建输出文件"
 
 #: builtin/log.c:1583
 msgid "git cherry [-v] [<upstream> [<head> [<limit>]]]"
 msgstr "git cherry [-v] [<上游> [<头> [<限制>]]]"
 
-#: builtin/log.c:1638
+#: builtin/log.c:1637
 #, c-format
 msgid ""
 "Could not find a tracked remote branch, please specify <upstream> manually.\n"
 msgstr "不能找到跟踪的远程分支，请手工指定 <上游>。\n"
 
-#: builtin/log.c:1651 builtin/log.c:1653 builtin/log.c:1665
+#: builtin/log.c:1648 builtin/log.c:1650 builtin/log.c:1662
 #, c-format
 msgid "Unknown commit %s"
 msgstr "未知提交 %s"
 
 #: builtin/ls-files.c:358
 msgid "git ls-files [<options>] [<file>...]"
@@ -6981,46 +7069,46 @@
 
 #: builtin/merge.c:447
 #, c-format
 msgid "'%s' does not point to a commit"
 msgstr "'%s' 没有指向一个提交"
 
-#: builtin/merge.c:559
+#: builtin/merge.c:537
 #, c-format
 msgid "Bad branch.%s.mergeoptions string: %s"
 msgstr "坏的 branch.%s.mergeoptions 字符串：%s"
 
-#: builtin/merge.c:654
+#: builtin/merge.c:632
 msgid "git write-tree failed to write a tree"
 msgstr "git write-tree 无法写入一树对象"
 
-#: builtin/merge.c:678
+#: builtin/merge.c:656
 msgid "Not handling anything other than two heads merge."
 msgstr "不能处理两个头合并之外的任何操作。"
 
-#: builtin/merge.c:692
+#: builtin/merge.c:670
 #, c-format
 msgid "Unknown option for merge-recursive: -X%s"
 msgstr "merge-recursive 的未知选项：-X%s"
 
-#: builtin/merge.c:705
+#: builtin/merge.c:683
 #, c-format
 msgid "unable to write %s"
 msgstr "不能写 %s"
 
-#: builtin/merge.c:794
+#: builtin/merge.c:772
 #, c-format
 msgid "Could not read from '%s'"
 msgstr "不能从 '%s' 读取"
 
-#: builtin/merge.c:803
+#: builtin/merge.c:781
 #, c-format
 msgid "Not committing merge; use 'git commit' to complete the merge.\n"
 msgstr "未提交合并，使用 'git commit' 完成此次合并。\n"
 
-#: builtin/merge.c:809
+#: builtin/merge.c:787
 #, c-format
 msgid ""
 "Please enter a commit message to explain why this merge is necessary,\n"
 "especially if it merges an updated upstream into a topic branch.\n"
 "\n"
 "Lines starting with '%c' will be ignored, and an empty message aborts\n"
@@ -7028,166 +7116,171 @@
 msgstr ""
 "请输入一个提交信息以解释此合并的必要性，尤其是将一个更新后的上游分支\n"
 "合并到主题分支。\n"
 "\n"
 "以 '%c' 开头的行将被忽略，而且空提交说明将会终止提交。\n"
 
-#: builtin/merge.c:833
+#: builtin/merge.c:811
 msgid "Empty commit message."
 msgstr "空提交信息。"
 
-#: builtin/merge.c:845
+#: builtin/merge.c:823
 #, c-format
 msgid "Wonderful.\n"
 msgstr "太棒了。\n"
 
-#: builtin/merge.c:900
+#: builtin/merge.c:878
 #, c-format
 msgid "Automatic merge failed; fix conflicts and then commit the result.\n"
 msgstr "自动合并失败，修正冲突然后提交修正的结果。\n"
 
-#: builtin/merge.c:916
+#: builtin/merge.c:894
 #, c-format
 msgid "'%s' is not a commit"
 msgstr "'%s' 不是一个提交"
 
-#: builtin/merge.c:957
+#: builtin/merge.c:935
 msgid "No current branch."
 msgstr "没有当前分支。"
 
-#: builtin/merge.c:959
+#: builtin/merge.c:937
 msgid "No remote for the current branch."
 msgstr "当前分支没有对应的远程版本库。"
 
-#: builtin/merge.c:961
+#: builtin/merge.c:939
 msgid "No default upstream defined for the current branch."
 msgstr "当前分支没有定义默认的上游分支。"
 
-#: builtin/merge.c:966
+#: builtin/merge.c:944
 #, c-format
 msgid "No remote-tracking branch for %s from %s"
 msgstr "对于 %s 没有来自 %s 的远程跟踪分支"
 
-#: builtin/merge.c:1122
+#: builtin/merge.c:1081
+#, c-format
+msgid "could not close '%s'"
+msgstr "不能关闭 '%s'"
+
+#: builtin/merge.c:1208
 msgid "There is no merge to abort (MERGE_HEAD missing)."
 msgstr "没有要终止的合并（MERGE_HEAD 丢失）。"
 
-#: builtin/merge.c:1138
+#: builtin/merge.c:1224
 msgid ""
 "You have not concluded your merge (MERGE_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 "您尚未结束您的合并（存在 MERGE_HEAD）。\n"
 "请在合并前先提交您的修改。"
 
-#: builtin/merge.c:1141 git-pull.sh:34
+#: builtin/merge.c:1227 git-pull.sh:74
 msgid "You have not concluded your merge (MERGE_HEAD exists)."
 msgstr "您尚未结束您的合并（存在 MERGE_HEAD）。"
 
-#: builtin/merge.c:1145
+#: builtin/merge.c:1231
 msgid ""
 "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 "您尚未结束您的拣选（存在 CHERRY_PICK_HEAD）。\n"
 "请在合并前先提交您的修改。"
 
-#: builtin/merge.c:1148
+#: builtin/merge.c:1234
 msgid "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists)."
 msgstr "您尚未结束您的拣选（存在 CHERRY_PICK_HEAD）。"
 
-#: builtin/merge.c:1157
+#: builtin/merge.c:1243
 msgid "You cannot combine --squash with --no-ff."
 msgstr "您不能将 --squash 与 --no-ff 同时使用。"
 
-#: builtin/merge.c:1166
+#: builtin/merge.c:1251
 msgid "No commit specified and merge.defaultToUpstream not set."
 msgstr "未指定提交并且 merge.defaultToUpstream 未设置。"
 
-#: builtin/merge.c:1198
-msgid "Can merge only exactly one commit into empty head"
-msgstr "只能将一个提交合并到空分支上"
-
-#: builtin/merge.c:1201
+#: builtin/merge.c:1268
 msgid "Squash commit into empty head not supported yet"
 msgstr "尚不支持到空分支的压缩提交"
 
-#: builtin/merge.c:1203
+#: builtin/merge.c:1270
 msgid "Non-fast-forward commit does not make sense into an empty head"
 msgstr "到空分支的非快进式提交没有意义"
 
-#: builtin/merge.c:1208
+#: builtin/merge.c:1276
 #, c-format
 msgid "%s - not something we can merge"
 msgstr "%s - 不能被合并"
 
-#: builtin/merge.c:1259
+#: builtin/merge.c:1278
+msgid "Can merge only exactly one commit into empty head"
+msgstr "只能将一个提交合并到空分支上"
+
+#: builtin/merge.c:1333
 #, c-format
 msgid "Commit %s has an untrusted GPG signature, allegedly by %s."
 msgstr "提交 %s 有一个非可信的声称来自 %s 的 GPG 签名。"
 
-#: builtin/merge.c:1262
+#: builtin/merge.c:1336
 #, c-format
 msgid "Commit %s has a bad GPG signature allegedly by %s."
 msgstr "提交 %s 有一个错误的声称来自 %s 的 GPG 签名。"
 
-#: builtin/merge.c:1265
+#: builtin/merge.c:1339
 #, c-format
 msgid "Commit %s does not have a GPG signature."
 msgstr "提交 %s 没有一个 GPG 签名。"
 
-#: builtin/merge.c:1268
+#: builtin/merge.c:1342
 #, c-format
 msgid "Commit %s has a good GPG signature by %s\n"
 msgstr "提交 %s 有一个来自 %s 的好的 GPG 签名。\n"
 
-#: builtin/merge.c:1349
+#: builtin/merge.c:1423
 #, c-format
 msgid "Updating %s..%s\n"
 msgstr "更新 %s..%s\n"
 
-#: builtin/merge.c:1388
+#: builtin/merge.c:1462
 #, c-format
 msgid "Trying really trivial in-index merge...\n"
 msgstr "尝试非常小的索引内合并...\n"
 
-#: builtin/merge.c:1395
+#: builtin/merge.c:1469
 #, c-format
 msgid "Nope.\n"
 msgstr "无。\n"
 
-#: builtin/merge.c:1427
+#: builtin/merge.c:1501
 msgid "Not possible to fast-forward, aborting."
 msgstr "无法快进，终止。"
 
-#: builtin/merge.c:1450 builtin/merge.c:1529
+#: builtin/merge.c:1524 builtin/merge.c:1603
 #, c-format
 msgid "Rewinding the tree to pristine...\n"
 msgstr "将树回滚至原始状态...\n"
 
-#: builtin/merge.c:1454
+#: builtin/merge.c:1528
 #, c-format
 msgid "Trying merge strategy %s...\n"
 msgstr "尝试合并策略 %s...\n"
 
-#: builtin/merge.c:1520
+#: builtin/merge.c:1594
 #, c-format
 msgid "No merge strategy handled the merge.\n"
 msgstr "没有合并策略处理此合并。\n"
 
-#: builtin/merge.c:1522
+#: builtin/merge.c:1596
 #, c-format
 msgid "Merge with strategy %s failed.\n"
 msgstr "使用策略 %s 合并失败。\n"
 
-#: builtin/merge.c:1531
+#: builtin/merge.c:1605
 #, c-format
 msgid "Using the %s to prepare resolving by hand.\n"
 msgstr "使用 %s 以准备手工解决。\n"
 
-#: builtin/merge.c:1543
+#: builtin/merge.c:1617
 #, c-format
 msgid "Automatic merge went well; stopped before committing as requested\n"
 msgstr "自动合并进展顺利，按要求在提交前停止\n"
 
 #: builtin/merge-base.c:29
 msgid "git merge-base [-a | --all] <commit> <commit>..."
@@ -7369,13 +7462,13 @@
 
 #: builtin/mv.c:253
 #, c-format
 msgid "Renaming %s to %s\n"
 msgstr "重命名 %s 至 %s\n"
 
-#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:359
+#: builtin/mv.c:256 builtin/remote.c:725 builtin/repack.c:361
 #, c-format
 msgid "renaming '%s' failed"
 msgstr "重命名 '%s' 失败"
 
 #: builtin/name-rev.c:255
 msgid "git name-rev [<options>] <commit>..."
@@ -7734,13 +7827,13 @@
 msgstr "注解引用"
 
 #: builtin/notes.c:954
 msgid "use notes from <notes-ref>"
 msgstr "从 <注解引用> 使用注解"
 
-#: builtin/notes.c:989 builtin/remote.c:1621
+#: builtin/notes.c:989 builtin/remote.c:1618
 #, c-format
 msgid "Unknown subcommand: %s"
 msgstr "未知子命令：%s"
 
 #: builtin/pack-objects.c:28
 msgid "git pack-objects --stdout [options...] [< ref-list | < object-list]"
@@ -7756,177 +7849,177 @@
 msgstr "压缩错误 (%d)"
 
 #: builtin/pack-objects.c:771
 msgid "Writing objects"
 msgstr "写入对象中"
 
-#: builtin/pack-objects.c:1013
+#: builtin/pack-objects.c:1011
 msgid "disabling bitmap writing, as some objects are not being packed"
 msgstr "禁用 bitmap 写入，因为一些对象将不会被打包"
 
-#: builtin/pack-objects.c:2173
+#: builtin/pack-objects.c:2171
 msgid "Compressing objects"
 msgstr "压缩对象中"
 
-#: builtin/pack-objects.c:2570
+#: builtin/pack-objects.c:2568
 #, c-format
 msgid "unsupported index version %s"
 msgstr "不支持的索引版本 %s"
 
-#: builtin/pack-objects.c:2574
+#: builtin/pack-objects.c:2572
 #, c-format
 msgid "bad index version '%s'"
 msgstr "坏的索引版本 '%s'"
 
-#: builtin/pack-objects.c:2597
+#: builtin/pack-objects.c:2595
 #, c-format
 msgid "option %s does not accept negative form"
 msgstr "选项 %s 不接受否定格式"
 
-#: builtin/pack-objects.c:2601
+#: builtin/pack-objects.c:2599
 #, c-format
 msgid "unable to parse value '%s' for option %s"
 msgstr "不能解析选项 %1$s 的值 '%2$s'"
 
-#: builtin/pack-objects.c:2621
+#: builtin/pack-objects.c:2619
 msgid "do not show progress meter"
 msgstr "不显示进度表"
 
-#: builtin/pack-objects.c:2623
+#: builtin/pack-objects.c:2621
 msgid "show progress meter"
 msgstr "显示进度表"
 
-#: builtin/pack-objects.c:2625
+#: builtin/pack-objects.c:2623
 msgid "show progress meter during object writing phase"
 msgstr "在对象写入阶段显示进度表"
 
-#: builtin/pack-objects.c:2628
+#: builtin/pack-objects.c:2626
 msgid "similar to --all-progress when progress meter is shown"
 msgstr "当进度表显示时类似于 --all-progress"
 
-#: builtin/pack-objects.c:2629
+#: builtin/pack-objects.c:2627
 msgid "version[,offset]"
 msgstr "版本[,偏移]"
 
-#: builtin/pack-objects.c:2630
+#: builtin/pack-objects.c:2628
 msgid "write the pack index file in the specified idx format version"
 msgstr "用指定的 idx 格式版本来写包索引文件"
 
-#: builtin/pack-objects.c:2633
+#: builtin/pack-objects.c:2631
 msgid "maximum size of each output pack file"
 msgstr "每个输出包的最大尺寸"
 
-#: builtin/pack-objects.c:2635
+#: builtin/pack-objects.c:2633
 msgid "ignore borrowed objects from alternate object store"
 msgstr "忽略从替代对象存储里借用对象"
 
-#: builtin/pack-objects.c:2637
+#: builtin/pack-objects.c:2635
 msgid "ignore packed objects"
 msgstr "忽略包对象"
 
-#: builtin/pack-objects.c:2639
+#: builtin/pack-objects.c:2637
 msgid "limit pack window by objects"
 msgstr "限制打包窗口的对象数"
 
-#: builtin/pack-objects.c:2641
+#: builtin/pack-objects.c:2639
 msgid "limit pack window by memory in addition to object limit"
 msgstr "除对象数量限制外设置打包窗口的内存限制"
 
-#: builtin/pack-objects.c:2643
+#: builtin/pack-objects.c:2641
 msgid "maximum length of delta chain allowed in the resulting pack"
 msgstr "打包允许的 delta 链的最大长度"
 
-#: builtin/pack-objects.c:2645
+#: builtin/pack-objects.c:2643
 msgid "reuse existing deltas"
 msgstr "重用已存在的 deltas"
 
-#: builtin/pack-objects.c:2647
+#: builtin/pack-objects.c:2645
 msgid "reuse existing objects"
 msgstr "重用已存在的对象"
 
-#: builtin/pack-objects.c:2649
+#: builtin/pack-objects.c:2647
 msgid "use OFS_DELTA objects"
 msgstr "使用 OFS_DELTA 对象"
 
-#: builtin/pack-objects.c:2651
+#: builtin/pack-objects.c:2649
 msgid "use threads when searching for best delta matches"
 msgstr "使用线程查询最佳 delta 匹配"
 
-#: builtin/pack-objects.c:2653
+#: builtin/pack-objects.c:2651
 msgid "do not create an empty pack output"
 msgstr "不创建空的包输出"
 
-#: builtin/pack-objects.c:2655
+#: builtin/pack-objects.c:2653
 msgid "read revision arguments from standard input"
 msgstr "从标准输入读取版本号参数"
 
-#: builtin/pack-objects.c:2657
+#: builtin/pack-objects.c:2655
 msgid "limit the objects to those that are not yet packed"
 msgstr "限制那些尚未打包的对象"
 
-#: builtin/pack-objects.c:2660
+#: builtin/pack-objects.c:2658
 msgid "include objects reachable from any reference"
 msgstr "包括可以从任何引用访问到的对象"
 
-#: builtin/pack-objects.c:2663
+#: builtin/pack-objects.c:2661
 msgid "include objects referred by reflog entries"
 msgstr "包括被引用日志引用到的对象"
 
-#: builtin/pack-objects.c:2666
+#: builtin/pack-objects.c:2664
 msgid "include objects referred to by the index"
 msgstr "包括被索引引用到的对象"
 
-#: builtin/pack-objects.c:2669
+#: builtin/pack-objects.c:2667
 msgid "output pack to stdout"
 msgstr "输出包到标准输出"
 
-#: builtin/pack-objects.c:2671
+#: builtin/pack-objects.c:2669
 msgid "include tag objects that refer to objects to be packed"
 msgstr "包括引用了打包对象的 tag"
 
-#: builtin/pack-objects.c:2673
+#: builtin/pack-objects.c:2671
 msgid "keep unreachable objects"
 msgstr "维持不可达的对象"
 
-#: builtin/pack-objects.c:2674 parse-options.h:140
+#: builtin/pack-objects.c:2672 parse-options.h:139
 msgid "time"
 msgstr "时间"
 
-#: builtin/pack-objects.c:2675
+#: builtin/pack-objects.c:2673
 msgid "unpack unreachable objects newer than <time>"
 msgstr "将比给定 <时间> 新的无法访问的对象解包"
 
-#: builtin/pack-objects.c:2678
+#: builtin/pack-objects.c:2676
 msgid "create thin packs"
 msgstr "创建精简包"
 
-#: builtin/pack-objects.c:2680
+#: builtin/pack-objects.c:2678
 msgid "create packs suitable for shallow fetches"
 msgstr "创建适合浅克隆版本库获取的包"
 
-#: builtin/pack-objects.c:2682
+#: builtin/pack-objects.c:2680
 msgid "ignore packs that have companion .keep file"
 msgstr "忽略配有 .keep 文件的包"
 
-#: builtin/pack-objects.c:2684
+#: builtin/pack-objects.c:2682
 msgid "pack compression level"
 msgstr "打包压缩级别"
 
-#: builtin/pack-objects.c:2686
+#: builtin/pack-objects.c:2684
 msgid "do not hide commits by grafts"
 msgstr "显示被嫁接隐藏的提交"
 
-#: builtin/pack-objects.c:2688
+#: builtin/pack-objects.c:2686
 msgid "use a bitmap index if available to speed up counting objects"
 msgstr "使用 bitmap 索引（如果有的话）以提高对象计数时的速度"
 
-#: builtin/pack-objects.c:2690
+#: builtin/pack-objects.c:2688
 msgid "write a bitmap index together with the pack index"
 msgstr "在建立包索引的同时创建 bitmap 索引"
 
-#: builtin/pack-objects.c:2781
+#: builtin/pack-objects.c:2779
 msgid "Counting objects"
 msgstr "对象计数中"
 
 #: builtin/pack-refs.c:6
 msgid "git pack-refs [<options>]"
 msgstr "git pack-refs [<选项>]"
@@ -7944,25 +8037,25 @@
 msgstr "git prune-packed [-n | --dry-run] [-q | --quiet]"
 
 #: builtin/prune-packed.c:40
 msgid "Removing duplicate objects"
 msgstr "正在删除重复对象"
 
-#: builtin/prune.c:12
+#: builtin/prune.c:11
 msgid "git prune [-n] [-v] [--expire <time>] [--] [<head>...]"
 msgstr "git prune [-n] [-v] [--expire <时间>] [--] [<头>...]"
 
-#: builtin/prune.c:106
+#: builtin/prune.c:105 builtin/worktree.c:112
 msgid "do not remove, show only"
 msgstr "不删除，只显示"
 
-#: builtin/prune.c:107
+#: builtin/prune.c:106 builtin/worktree.c:113
 msgid "report pruned objects"
 msgstr "报告清除的对象"
 
-#: builtin/prune.c:110
+#: builtin/prune.c:109 builtin/worktree.c:115
 msgid "expire objects older than <time>"
 msgstr "使早于给定时间的对象过期"
 
 #: builtin/push.c:14
 msgid "git push [<options>] [<repository> [<refspec>...]]"
 msgstr "git push [<选项>] [<版本库> [<引用规则>...]]"
@@ -8349,18 +8442,18 @@
 msgstr "跳过应用稀疏检出过滤器"
 
 #: builtin/read-tree.c:139
 msgid "debug unpack-trees"
 msgstr "调试 unpack-trees"
 
-#: builtin/reflog.c:429
+#: builtin/reflog.c:430
 #, c-format
 msgid "%s' for '%s' is not a valid timestamp"
 msgstr "'%2$s' 的值 '%1$s' 不是一个有效的时间戳"
 
-#: builtin/reflog.c:546 builtin/reflog.c:551
+#: builtin/reflog.c:547 builtin/reflog.c:552
 #, c-format
 msgid "'%s' is not a valid timestamp"
 msgstr "'%s' 不是一个有效的时间戳"
 
 #: builtin/remote.c:12
 msgid "git remote [-v | --verbose]"
@@ -8490,18 +8583,18 @@
 msgstr "指定一个 master 分支并使用 --mirror 选项没有意义"
 
 #: builtin/remote.c:177
 msgid "specifying branches to track makes sense only with fetch mirrors"
 msgstr "指定要跟踪的分支只在与获取镜像同时使用才有意义"
 
-#: builtin/remote.c:187 builtin/remote.c:643
+#: builtin/remote.c:187 builtin/remote.c:640
 #, c-format
 msgid "remote %s already exists."
 msgstr "远程 %s 已经存在。"
 
-#: builtin/remote.c:191 builtin/remote.c:647
+#: builtin/remote.c:191 builtin/remote.c:644
 #, c-format
 msgid "'%s' is not a valid remote name"
 msgstr "'%s' 不是一个有效的远程名称"
 
 #: builtin/remote.c:235
 #, c-format
@@ -8518,337 +8611,337 @@
 msgstr "（匹配）"
 
 #: builtin/remote.c:448
 msgid "(delete)"
 msgstr "（删除）"
 
-#: builtin/remote.c:592 builtin/remote.c:598 builtin/remote.c:604
+#: builtin/remote.c:589 builtin/remote.c:595 builtin/remote.c:601
 #, c-format
 msgid "Could not append '%s' to '%s'"
 msgstr "不能添加 '%s' 至 '%s'"
 
-#: builtin/remote.c:636 builtin/remote.c:795 builtin/remote.c:895
+#: builtin/remote.c:633 builtin/remote.c:792 builtin/remote.c:892
 #, c-format
 msgid "No such remote: %s"
 msgstr "没有这样的远程：%s"
 
-#: builtin/remote.c:653
+#: builtin/remote.c:650
 #, c-format
 msgid "Could not rename config section '%s' to '%s'"
 msgstr "不能重命名配置小节 '%s' 到 '%s'"
 
-#: builtin/remote.c:659 builtin/remote.c:847
+#: builtin/remote.c:656 builtin/remote.c:844
 #, c-format
 msgid "Could not remove config section '%s'"
 msgstr "不能移除配置小节 '%s'"
 
-#: builtin/remote.c:674
+#: builtin/remote.c:671
 #, c-format
 msgid ""
 "Not updating non-default fetch refspec\n"
 "\t%s\n"
 "\tPlease update the configuration manually if necessary."
 msgstr ""
 "没有更新非默认的获取引用规则\n"
 "\t%s\n"
 "\t如果必要请手动更新配置。"
 
-#: builtin/remote.c:680
+#: builtin/remote.c:677
 #, c-format
 msgid "Could not append '%s'"
 msgstr "不能追加 '%s'"
 
-#: builtin/remote.c:691
+#: builtin/remote.c:688
 #, c-format
 msgid "Could not set '%s'"
 msgstr "不能设置 '%s'"
 
-#: builtin/remote.c:713
+#: builtin/remote.c:710
 #, c-format
 msgid "deleting '%s' failed"
 msgstr "删除 '%s' 失败"
 
-#: builtin/remote.c:747
+#: builtin/remote.c:744
 #, c-format
 msgid "creating '%s' failed"
 msgstr "创建 '%s' 失败"
 
-#: builtin/remote.c:766
+#: builtin/remote.c:763
 #, c-format
 msgid "Could not remove branch %s"
 msgstr "无法移除分支 %s"
 
-#: builtin/remote.c:833
+#: builtin/remote.c:830
 msgid ""
 "Note: A branch outside the refs/remotes/ hierarchy was not removed;\n"
 "to delete it, use:"
 msgid_plural ""
 "Note: Some branches outside the refs/remotes/ hierarchy were not removed;\n"
 "to delete them, use:"
 msgstr[0] "注意：ref/remotes 层级之外的一个分支未被移除。要删除它，使用："
 msgstr[1] "注意：ref/remotes 层级之外的一些分支未被移除。要删除它们，使用："
 
-#: builtin/remote.c:948
+#: builtin/remote.c:945
 #, c-format
 msgid " new (next fetch will store in remotes/%s)"
 msgstr " 新的（下一次获取将存储于 remotes/%s）"
 
-#: builtin/remote.c:951
+#: builtin/remote.c:948
 msgid " tracked"
 msgstr " 已跟踪"
 
-#: builtin/remote.c:953
+#: builtin/remote.c:950
 msgid " stale (use 'git remote prune' to remove)"
 msgstr " 过时（使用 'git remote prune' 来移除）"
 
-#: builtin/remote.c:955
+#: builtin/remote.c:952
 msgid " ???"
 msgstr " ???"
 
-#: builtin/remote.c:996
+#: builtin/remote.c:993
 #, c-format
 msgid "invalid branch.%s.merge; cannot rebase onto > 1 branch"
 msgstr "无效的 branch.%s.merge，不能变基到一个以上的分支"
 
-#: builtin/remote.c:1003
+#: builtin/remote.c:1000
 #, c-format
 msgid "rebases onto remote %s"
 msgstr "变基到远程 %s"
 
-#: builtin/remote.c:1006
+#: builtin/remote.c:1003
 #, c-format
 msgid " merges with remote %s"
 msgstr " 与远程 %s 合并"
 
-#: builtin/remote.c:1007
+#: builtin/remote.c:1004
 msgid "    and with remote"
 msgstr "    且有远程"
 
-#: builtin/remote.c:1009
+#: builtin/remote.c:1006
 #, c-format
 msgid "merges with remote %s"
 msgstr "与远程 %s 合并"
 
-#: builtin/remote.c:1010
+#: builtin/remote.c:1007
 msgid "   and with remote"
 msgstr "   且有远程"
 
-#: builtin/remote.c:1056
+#: builtin/remote.c:1053
 msgid "create"
 msgstr "创建"
 
-#: builtin/remote.c:1059
+#: builtin/remote.c:1056
 msgid "delete"
 msgstr "删除"
 
-#: builtin/remote.c:1063
+#: builtin/remote.c:1060
 msgid "up to date"
 msgstr "最新"
 
-#: builtin/remote.c:1066
+#: builtin/remote.c:1063
 msgid "fast-forwardable"
 msgstr "可快进"
 
-#: builtin/remote.c:1069
+#: builtin/remote.c:1066
 msgid "local out of date"
 msgstr "本地已过时"
 
-#: builtin/remote.c:1076
+#: builtin/remote.c:1073
 #, c-format
 msgid "    %-*s forces to %-*s (%s)"
 msgstr "    %-*s 强制推送至 %-*s (%s)"
 
-#: builtin/remote.c:1079
+#: builtin/remote.c:1076
 #, c-format
 msgid "    %-*s pushes to %-*s (%s)"
 msgstr "    %-*s 推送至 %-*s (%s)"
 
-#: builtin/remote.c:1083
+#: builtin/remote.c:1080
 #, c-format
 msgid "    %-*s forces to %s"
 msgstr "    %-*s 强制推送至 %s"
 
-#: builtin/remote.c:1086
+#: builtin/remote.c:1083
 #, c-format
 msgid "    %-*s pushes to %s"
 msgstr "    %-*s 推送至 %s"
 
-#: builtin/remote.c:1154
+#: builtin/remote.c:1151
 msgid "do not query remotes"
 msgstr "不查询远程"
 
-#: builtin/remote.c:1181
+#: builtin/remote.c:1178
 #, c-format
 msgid "* remote %s"
 msgstr "* 远程 %s"
 
-#: builtin/remote.c:1182
+#: builtin/remote.c:1179
 #, c-format
 msgid "  Fetch URL: %s"
 msgstr "  获取地址：%s"
 
-#: builtin/remote.c:1183 builtin/remote.c:1334
+#: builtin/remote.c:1180 builtin/remote.c:1331
 msgid "(no URL)"
 msgstr "(无 URL)"
 
-#: builtin/remote.c:1192 builtin/remote.c:1194
+#: builtin/remote.c:1189 builtin/remote.c:1191
 #, c-format
 msgid "  Push  URL: %s"
 msgstr "  推送地址：%s"
 
-#: builtin/remote.c:1196 builtin/remote.c:1198 builtin/remote.c:1200
+#: builtin/remote.c:1193 builtin/remote.c:1195 builtin/remote.c:1197
 #, c-format
 msgid "  HEAD branch: %s"
 msgstr "  HEAD分支：%s"
 
-#: builtin/remote.c:1202
+#: builtin/remote.c:1199
 #, c-format
 msgid ""
 "  HEAD branch (remote HEAD is ambiguous, may be one of the following):\n"
 msgstr "  HEAD 分支（远程 HEAD 模糊，可能是下列中的一个）：\n"
 
-#: builtin/remote.c:1214
+#: builtin/remote.c:1211
 #, c-format
 msgid "  Remote branch:%s"
 msgid_plural "  Remote branches:%s"
 msgstr[0] "  远程分支：%s"
 msgstr[1] "  远程分支：%s"
 
 #  译者：中文字符串拼接，可删除前导空格
-#: builtin/remote.c:1217 builtin/remote.c:1244
+#: builtin/remote.c:1214 builtin/remote.c:1241
 msgid " (status not queried)"
 msgstr "（状态未查询）"
 
-#: builtin/remote.c:1226
+#: builtin/remote.c:1223
 msgid "  Local branch configured for 'git pull':"
 msgid_plural "  Local branches configured for 'git pull':"
 msgstr[0] "  为 'git pull' 配置的本地分支："
 msgstr[1] "  为 'git pull' 配置的本地分支："
 
-#: builtin/remote.c:1234
+#: builtin/remote.c:1231
 msgid "  Local refs will be mirrored by 'git push'"
 msgstr "  本地引用将在 'git push' 时被镜像"
 
-#: builtin/remote.c:1241
+#: builtin/remote.c:1238
 #, c-format
 msgid "  Local ref configured for 'git push'%s:"
 msgid_plural "  Local refs configured for 'git push'%s:"
 msgstr[0] "  为 'git push' 配置的本地引用%s："
 msgstr[1] "  为 'git push' 配置的本地引用%s："
 
-#: builtin/remote.c:1262
+#: builtin/remote.c:1259
 msgid "set refs/remotes/<name>/HEAD according to remote"
 msgstr "根据远程设置 refs/remotes/<名称>/HEAD"
 
-#: builtin/remote.c:1264
+#: builtin/remote.c:1261
 msgid "delete refs/remotes/<name>/HEAD"
 msgstr "删除 refs/remotes/<名称>/HEAD"
 
-#: builtin/remote.c:1279
+#: builtin/remote.c:1276
 msgid "Cannot determine remote HEAD"
 msgstr "无法确定远程 HEAD"
 
-#: builtin/remote.c:1281
+#: builtin/remote.c:1278
 msgid "Multiple remote HEAD branches. Please choose one explicitly with:"
 msgstr "多个远程 HEAD 分支。请明确地选择一个用命令："
 
-#: builtin/remote.c:1291
+#: builtin/remote.c:1288
 #, c-format
 msgid "Could not delete %s"
 msgstr "无法删除 %s"
 
-#: builtin/remote.c:1299
+#: builtin/remote.c:1296
 #, c-format
 msgid "Not a valid ref: %s"
 msgstr "不是一个有效引用：%s"
 
-#: builtin/remote.c:1301
+#: builtin/remote.c:1298
 #, c-format
 msgid "Could not setup %s"
 msgstr "不能设置 %s"
 
 #  译者：注意保持前导空格
-#: builtin/remote.c:1319
+#: builtin/remote.c:1316
 #, c-format
 msgid " %s will become dangling!"
 msgstr " %s 将成为摇摆状态！"
 
 #  译者：注意保持前导空格
-#: builtin/remote.c:1320
+#: builtin/remote.c:1317
 #, c-format
 msgid " %s has become dangling!"
 msgstr " %s 已成为摇摆状态！"
 
-#: builtin/remote.c:1330
+#: builtin/remote.c:1327
 #, c-format
 msgid "Pruning %s"
 msgstr "修剪 %s"
 
-#: builtin/remote.c:1331
+#: builtin/remote.c:1328
 #, c-format
 msgid "URL: %s"
 msgstr "URL：%s"
 
-#: builtin/remote.c:1354
+#: builtin/remote.c:1351
 #, c-format
 msgid " * [would prune] %s"
 msgstr " * [将删除] %s"
 
-#: builtin/remote.c:1357
+#: builtin/remote.c:1354
 #, c-format
 msgid " * [pruned] %s"
 msgstr " * [已删除] %s"
 
-#: builtin/remote.c:1402
+#: builtin/remote.c:1399
 msgid "prune remotes after fetching"
 msgstr "抓取后清除远程"
 
-#: builtin/remote.c:1468 builtin/remote.c:1542
+#: builtin/remote.c:1465 builtin/remote.c:1539
 #, c-format
 msgid "No such remote '%s'"
 msgstr "没有此远程 '%s'"
 
-#: builtin/remote.c:1488
+#: builtin/remote.c:1485
 msgid "add branch"
 msgstr "添加分支"
 
-#: builtin/remote.c:1495
+#: builtin/remote.c:1492
 msgid "no remote specified"
 msgstr "未指定远程"
 
-#: builtin/remote.c:1517
+#: builtin/remote.c:1514
 msgid "manipulate push URLs"
 msgstr "操作推送 URLS"
 
-#: builtin/remote.c:1519
+#: builtin/remote.c:1516
 msgid "add URL"
 msgstr "添加 URL"
 
-#: builtin/remote.c:1521
+#: builtin/remote.c:1518
 msgid "delete URLs"
 msgstr "删除 URLS"
 
-#: builtin/remote.c:1528
+#: builtin/remote.c:1525
 msgid "--add --delete doesn't make sense"
 msgstr "--add --delete 无意义"
 
-#: builtin/remote.c:1568
+#: builtin/remote.c:1565
 #, c-format
 msgid "Invalid old URL pattern: %s"
 msgstr "无效的旧URL匹配模版：%s"
 
-#: builtin/remote.c:1576
+#: builtin/remote.c:1573
 #, c-format
 msgid "No such URL found: %s"
 msgstr "未找到此URL：%s"
 
-#: builtin/remote.c:1578
+#: builtin/remote.c:1575
 msgid "Will not delete all non-push URLs"
 msgstr "将不会删除所有非推送URL地址"
 
-#: builtin/remote.c:1592
+#: builtin/remote.c:1589
 msgid "be verbose; must be placed before a subcommand"
 msgstr "冗长输出；必须置于子命令之前"
 
 #: builtin/repack.c:17
 msgid "git repack [<options>]"
 msgstr "git repack [<选项>]"
@@ -8914,13 +9007,13 @@
 msgstr "每个包的最大尺寸"
 
 #: builtin/repack.c:187
 msgid "repack objects in packs marked with .keep"
 msgstr "对标记为 .keep 的包中的对象重新打包"
 
-#: builtin/repack.c:375
+#: builtin/repack.c:377
 #, c-format
 msgid "removing '%s' failed"
 msgstr "删除 '%s' 失败"
 
 #: builtin/replace.c:19
 msgid "git replace [-f] <object> <replacement>"
@@ -9285,80 +9378,80 @@
 "\n"
 "(use 'rm -rf' if you really want to remove it including all of its history)"
 msgstr ""
 "\n"
 "（使用 'rm -rf' 命令如果您真的想删除它及其全部历史）"
 
-#: builtin/rm.c:231
+#: builtin/rm.c:230
 msgid ""
 "the following file has staged content different from both the\n"
 "file and the HEAD:"
 msgid_plural ""
 "the following files have staged content different from both the\n"
 "file and the HEAD:"
 msgstr[0] "如下文件其暂存的内容和工作区及 HEAD 中的都不一样："
 msgstr[1] "如下文件其暂存的内容和工作区及 HEAD 中的都不一样："
 
-#: builtin/rm.c:236
+#: builtin/rm.c:235
 msgid ""
 "\n"
 "(use -f to force removal)"
 msgstr ""
 "\n"
 "（使用 -f 强制删除）"
 
-#: builtin/rm.c:240
+#: builtin/rm.c:239
 msgid "the following file has changes staged in the index:"
 msgid_plural "the following files have changes staged in the index:"
 msgstr[0] "如下文件相对索引区的内容有修改"
 msgstr[1] "如下文件相对索引区的内容有修改"
 
-#: builtin/rm.c:244 builtin/rm.c:255
+#: builtin/rm.c:243 builtin/rm.c:254
 msgid ""
 "\n"
 "(use --cached to keep the file, or -f to force removal)"
 msgstr ""
 "\n"
 "（使用 --cached 保留本地文件，或用 -f 强制删除）"
 
-#: builtin/rm.c:252
+#: builtin/rm.c:251
 msgid "the following file has local modifications:"
 msgid_plural "the following files have local modifications:"
 msgstr[0] "如下文件有本地修改："
 msgstr[1] "如下文件有本地修改："
 
-#: builtin/rm.c:270
+#: builtin/rm.c:269
 msgid "do not list removed files"
 msgstr "不列出删除的文件"
 
-#: builtin/rm.c:271
+#: builtin/rm.c:270
 msgid "only remove from the index"
 msgstr "只从索引区删除"
 
-#: builtin/rm.c:272
+#: builtin/rm.c:271
 msgid "override the up-to-date check"
 msgstr "忽略文件更新状态检查"
 
-#: builtin/rm.c:273
+#: builtin/rm.c:272
 msgid "allow recursive removal"
 msgstr "允许递归删除"
 
-#: builtin/rm.c:275
+#: builtin/rm.c:274
 msgid "exit with a zero status even if nothing matched"
 msgstr "即使没有匹配，也以零状态退出"
 
-#: builtin/rm.c:318
+#: builtin/rm.c:317
 msgid "Please, stage your changes to .gitmodules or stash them to proceed"
 msgstr "请将您的修改缓存到 .gitmodules 中或保存进度后再继续"
 
-#: builtin/rm.c:336
+#: builtin/rm.c:335
 #, c-format
 msgid "not removing '%s' recursively without -r"
 msgstr "未提供 -r 选项不会递归删除 '%s'"
 
-#: builtin/rm.c:375
+#: builtin/rm.c:374
 #, c-format
 msgid "git rm: unable to remove %s"
 msgstr "git rm：不能删除 %s"
 
 #: builtin/shortlog.c:13
 msgid "git shortlog [<options>] [<revision-range>] [[--] [<path>...]]"
@@ -9402,73 +9495,73 @@
 "\t\t[--no-name | --sha1-name] [--topics] [(<版本> | <通配符>)...]"
 
 #: builtin/show-branch.c:13
 msgid "git show-branch (-g | --reflog)[=<n>[,<base>]] [--list] [<ref>]"
 msgstr "git show-branch (-g | --reflog)[=<n>[,<base>]] [--list] [<引用>]"
 
-#: builtin/show-branch.c:652
+#: builtin/show-branch.c:659
 msgid "show remote-tracking and local branches"
 msgstr "显示远程跟踪的和本地的分支"
 
-#: builtin/show-branch.c:654
+#: builtin/show-branch.c:661
 msgid "show remote-tracking branches"
 msgstr "显示远程跟踪的分支"
 
-#: builtin/show-branch.c:656
+#: builtin/show-branch.c:663
 msgid "color '*!+-' corresponding to the branch"
 msgstr "着色 '*!+-' 到相应的分支"
 
-#: builtin/show-branch.c:658
+#: builtin/show-branch.c:665
 msgid "show <n> more commits after the common ancestor"
 msgstr "显示共同祖先后的 <n> 个提交"
 
-#: builtin/show-branch.c:660
+#: builtin/show-branch.c:667
 msgid "synonym to more=-1"
 msgstr "和 more=-1 同义"
 
-#: builtin/show-branch.c:661
+#: builtin/show-branch.c:668
 msgid "suppress naming strings"
 msgstr "不显示字符串命名"
 
-#: builtin/show-branch.c:663
+#: builtin/show-branch.c:670
 msgid "include the current branch"
 msgstr "包括当前分支"
 
-#: builtin/show-branch.c:665
+#: builtin/show-branch.c:672
 msgid "name commits with their object names"
 msgstr "以对象名字命名提交"
 
-#: builtin/show-branch.c:667
+#: builtin/show-branch.c:674
 msgid "show possible merge bases"
 msgstr "显示可能合并的基线"
 
-#: builtin/show-branch.c:669
+#: builtin/show-branch.c:676
 msgid "show refs unreachable from any other ref"
 msgstr "显示没有任何引用的的引用"
 
-#: builtin/show-branch.c:671
+#: builtin/show-branch.c:678
 msgid "show commits in topological order"
 msgstr "以拓扑顺序显示提交"
 
-#: builtin/show-branch.c:674
+#: builtin/show-branch.c:681
 msgid "show only commits not on the first branch"
 msgstr "只显示不在第一个分支上的提交"
 
-#: builtin/show-branch.c:676
+#: builtin/show-branch.c:683
 msgid "show merges reachable from only one tip"
 msgstr "显示仅一个分支可访问的合并提交"
 
-#: builtin/show-branch.c:678
+#: builtin/show-branch.c:685
 msgid "topologically sort, maintaining date order where possible"
 msgstr "拓扑方式排序，并尽可能地保持日期顺序"
 
-#: builtin/show-branch.c:681
+#: builtin/show-branch.c:688
 msgid "<n>[,<base>]"
 msgstr "<n>[,<base>]"
 
-#: builtin/show-branch.c:682
+#: builtin/show-branch.c:689
 msgid "show <n> most recent ref-log entries starting at base"
 msgstr "显示从 base 开始的 <n> 条最近的引用日志记录"
 
 #: builtin/show-ref.c:10
 msgid ""
 "git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | --"
@@ -9478,41 +9571,41 @@
 "hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<模式>...]"
 
 #: builtin/show-ref.c:11
 msgid "git show-ref --exclude-existing[=pattern] < ref-list"
 msgstr "git show-ref --exclude-existing[=模式] < 引用列表"
 
-#: builtin/show-ref.c:168
+#: builtin/show-ref.c:170
 msgid "only show tags (can be combined with heads)"
 msgstr "只显示 tags（可以和头共用）"
 
-#: builtin/show-ref.c:169
+#: builtin/show-ref.c:171
 msgid "only show heads (can be combined with tags)"
 msgstr "只显示头（可以和 tags 共用）"
 
-#: builtin/show-ref.c:170
+#: builtin/show-ref.c:172
 msgid "stricter reference checking, requires exact ref path"
 msgstr "更严格的引用检测，需要精确的引用路径"
 
-#: builtin/show-ref.c:173 builtin/show-ref.c:175
+#: builtin/show-ref.c:175 builtin/show-ref.c:177
 msgid "show the HEAD reference, even if it would be filtered out"
 msgstr "显示 HEAD 引用，即使被过滤掉"
 
-#: builtin/show-ref.c:177
+#: builtin/show-ref.c:179
 msgid "dereference tags into object IDs"
 msgstr "转换 tags 到对象ID"
 
-#: builtin/show-ref.c:179
+#: builtin/show-ref.c:181
 msgid "only show SHA1 hash using <n> digits"
 msgstr "只显示使用 <n> 个数字的 SHA1 哈希"
 
-#: builtin/show-ref.c:183
+#: builtin/show-ref.c:185
 msgid "do not print results to stdout (useful with --verify)"
 msgstr "不打印结果到标准输出（例如与 --verify 参数共用）"
 
-#: builtin/show-ref.c:185
+#: builtin/show-ref.c:187
 msgid "show refs from stdin that aren't in local repository"
 msgstr "显示从标准输入中读入的不在本地版本库中的引用"
 
 #: builtin/symbolic-ref.c:7
 msgid "git symbolic-ref [<options>] <name> [<ref>]"
 msgstr "git symbolic-ref [<选项>] <名称> [<引用>]"
@@ -9763,128 +9856,194 @@
 msgstr "已更新tag '%s'（曾为 %s）\n"
 
 #: builtin/unpack-objects.c:489
 msgid "Unpacking objects"
 msgstr "展开对象中"
 
-#: builtin/update-index.c:403
+#: builtin/update-index.c:70
+#, c-format
+msgid "failed to create directory %s"
+msgstr "无法创建目录 %s"
+
+#: builtin/update-index.c:76
+#, c-format
+msgid "failed to stat %s"
+msgstr "无法枚举 %s 状态"
+
+#: builtin/update-index.c:86
+#, c-format
+msgid "failed to create file %s"
+msgstr "无法创建文件 %s"
+
+#: builtin/update-index.c:94
+#, c-format
+msgid "failed to delete file %s"
+msgstr "无法删除文件 %s"
+
+#: builtin/update-index.c:101 builtin/update-index.c:203
+#, c-format
+msgid "failed to delete directory %s"
+msgstr "无法删除目录 %s"
+
+#: builtin/update-index.c:124
+#, c-format
+msgid "Testing "
+msgstr "正在测试 "
+
+#: builtin/update-index.c:136
+msgid "directory stat info does not change after adding a new file"
+msgstr "添加一个新文件后，目录的状态信息未改变"
+
+#: builtin/update-index.c:149
+msgid "directory stat info does not change after adding a new directory"
+msgstr "添加一个新目录后，目录的状态信息未改变"
+
+#: builtin/update-index.c:162
+msgid "directory stat info changes after updating a file"
+msgstr "更新一个文件后，目录的状态信息被修改"
+
+#: builtin/update-index.c:173
+msgid "directory stat info changes after adding a file inside subdirectory"
+msgstr "在子目录中添加文件后，目录的状态信息被修改"
+
+#: builtin/update-index.c:184
+msgid "directory stat info does not change after deleting a file"
+msgstr "删除一个文件后，目录的状态信息未改变"
+
+#: builtin/update-index.c:197
+msgid "directory stat info does not change after deleting a directory"
+msgstr "删除一个目录后，目录的状态信息未改变"
+
+#: builtin/update-index.c:204
+msgid " OK"
+msgstr " OK"
+
+#: builtin/update-index.c:564
 msgid "git update-index [<options>] [--] [<file>...]"
 msgstr "git update-index [<选项>] [--] [<文件>...]"
 
-#: builtin/update-index.c:757
+#: builtin/update-index.c:918
 msgid "continue refresh even when index needs update"
 msgstr "当索引需要更新时继续刷新"
 
-#: builtin/update-index.c:760
+#: builtin/update-index.c:921
 msgid "refresh: ignore submodules"
 msgstr "刷新：忽略子模组"
 
-#: builtin/update-index.c:763
+#: builtin/update-index.c:924
 msgid "do not ignore new files"
 msgstr "不忽略新的文件"
 
-#: builtin/update-index.c:765
+#: builtin/update-index.c:926
 msgid "let files replace directories and vice-versa"
 msgstr "让文件替换目录（反之亦然）"
 
-#: builtin/update-index.c:767
+#: builtin/update-index.c:928
 msgid "notice files missing from worktree"
 msgstr "通知文件从工作区丢失"
 
-#: builtin/update-index.c:769
+#: builtin/update-index.c:930
 msgid "refresh even if index contains unmerged entries"
 msgstr "即使索引区包含未合并的条目也执行刷新"
 
-#: builtin/update-index.c:772
+#: builtin/update-index.c:933
 msgid "refresh stat information"
 msgstr "刷新统计信息"
 
-#: builtin/update-index.c:776
+#: builtin/update-index.c:937
 msgid "like --refresh, but ignore assume-unchanged setting"
 msgstr "类似于 --refresh，但是忽略 assume-unchanged 设置"
 
-#: builtin/update-index.c:780
+#: builtin/update-index.c:941
 msgid "<mode>,<object>,<path>"
 msgstr "<存取模式>,<对象>,<路径>"
 
-#: builtin/update-index.c:781
+#: builtin/update-index.c:942
 msgid "add the specified entry to the index"
 msgstr "添加指定的条目到索引区"
 
-#: builtin/update-index.c:785
+#: builtin/update-index.c:946
 msgid "(+/-)x"
 msgstr "(+/-)x"
 
-#: builtin/update-index.c:786
+#: builtin/update-index.c:947
 msgid "override the executable bit of the listed files"
 msgstr "覆盖列表里文件的可执行位"
 
-#: builtin/update-index.c:790
+#: builtin/update-index.c:951
 msgid "mark files as \"not changing\""
 msgstr "把文件标记为 \"没有变更\""
 
-#: builtin/update-index.c:793
+#: builtin/update-index.c:954
 msgid "clear assumed-unchanged bit"
 msgstr "清除 assumed-unchanged 位"
 
-#: builtin/update-index.c:796
+#: builtin/update-index.c:957
 msgid "mark files as \"index-only\""
 msgstr "把文件标记为 \"仅索引\""
 
-#: builtin/update-index.c:799
+#: builtin/update-index.c:960
 msgid "clear skip-worktree bit"
 msgstr "清除 skip-worktree 位"
 
-#: builtin/update-index.c:802
+#: builtin/update-index.c:963
 msgid "add to index only; do not add content to object database"
 msgstr "只添加到索引区；不添加对象到对象库"
 
-#: builtin/update-index.c:804
+#: builtin/update-index.c:965
 msgid "remove named paths even if present in worktree"
 msgstr "即使存在工作区里，也删除路径"
 
-#: builtin/update-index.c:806
+#: builtin/update-index.c:967
 msgid "with --stdin: input lines are terminated by null bytes"
 msgstr "携带 --stdin：输入的行以 null 字符终止"
 
-#: builtin/update-index.c:808
+#: builtin/update-index.c:969
 msgid "read list of paths to be updated from standard input"
 msgstr "从标准输入中读取需要更新的路径列表"
 
-#: builtin/update-index.c:812
+#: builtin/update-index.c:973
 msgid "add entries from standard input to the index"
 msgstr "从标准输入添加条目到索引区"
 
-#: builtin/update-index.c:816
+#: builtin/update-index.c:977
 msgid "repopulate stages #2 and #3 for the listed paths"
 msgstr "为指定文件重新生成第2和第3暂存区"
 
-#: builtin/update-index.c:820
+#: builtin/update-index.c:981
 msgid "only update entries that differ from HEAD"
 msgstr "只更新与 HEAD 不同的条目"
 
-#: builtin/update-index.c:824
+#: builtin/update-index.c:985
 msgid "ignore files missing from worktree"
 msgstr "忽略工作区丢失的文件"
 
-#: builtin/update-index.c:827
+#: builtin/update-index.c:988
 msgid "report actions to standard output"
 msgstr "在标准输出显示操作"
 
-#: builtin/update-index.c:829
+#: builtin/update-index.c:990
 msgid "(for porcelains) forget saved unresolved conflicts"
 msgstr "(for porcelains) 忘记保存的未解决的冲突"
 
-#: builtin/update-index.c:833
+#: builtin/update-index.c:994
 msgid "write index in this format"
 msgstr "以这种格式写入索引区"
 
-#: builtin/update-index.c:835
+#: builtin/update-index.c:996
 msgid "enable or disable split index"
 msgstr "启用或禁用索引拆分"
 
+#: builtin/update-index.c:998
+msgid "enable/disable untracked cache"
+msgstr "启用/禁用对未跟踪文件的缓存"
+
+#: builtin/update-index.c:1000
+msgid "enable untracked cache without testing the filesystem"
+msgstr "无需检测文件系统，启用对未跟踪文件的缓存"
+
 #: builtin/update-ref.c:9
 msgid "git update-ref [<options>] -d <refname> [<old-val>]"
 msgstr "git update-ref [<选项>] -d <引用名> [<旧值>]"
 
 #: builtin/update-ref.c:10
 msgid "git update-ref [<options>]    <refname> <new-val> [<old-val>]"
@@ -9943,12 +10102,89 @@
 msgstr "git verify-tag [-v | --verbose] <标签>..."
 
 #: builtin/verify-tag.c:73
 msgid "print tag contents"
 msgstr "打印 tag 内容"
 
+#: builtin/worktree.c:11
+msgid "git worktree add [<options>] <path> <branch>"
+msgstr "git worktree add [<选项>] <路径> <分支>"
+
+#: builtin/worktree.c:12
+msgid "git worktree prune [<options>]"
+msgstr "git worktree prune [<选项>]"
+
+#: builtin/worktree.c:27
+#, c-format
+msgid "Removing worktrees/%s: not a valid directory"
+msgstr "删除工作区/%s：不是一个有效的目录"
+
+#: builtin/worktree.c:33
+#, c-format
+msgid "Removing worktrees/%s: gitdir file does not exist"
+msgstr "删除 worktrees/%s：gitdir 文件不存在"
+
+#: builtin/worktree.c:38
+#, c-format
+msgid "Removing worktrees/%s: unable to read gitdir file (%s)"
+msgstr "删除 worktrees/%s：无法读取 gitdir 文件 (%s)"
+
+#: builtin/worktree.c:49
+#, c-format
+msgid "Removing worktrees/%s: invalid gitdir file"
+msgstr "删除 worktrees/%s：无效的 gitdir 文件"
+
+#: builtin/worktree.c:65
+#, c-format
+msgid "Removing worktrees/%s: gitdir file points to non-existent location"
+msgstr "删除 worktrees/%s：gitdir 文件的指向不存在"
+
+#: builtin/worktree.c:100
+#, c-format
+msgid "failed to remove: %s"
+msgstr "无法删除：%s"
+
+#: builtin/worktree.c:186
+#, c-format
+msgid "'%s' already exists"
+msgstr "'%s' 已经存在"
+
+#: builtin/worktree.c:207
+#, c-format
+msgid "could not create directory of '%s'"
+msgstr "不能创建目录 '%s'"
+
+#: builtin/worktree.c:241
+msgid "unable to resolve HEAD"
+msgstr "不能解析 HEAD"
+
+#: builtin/worktree.c:249
+#, c-format
+msgid "Enter %s (identifier %s)"
+msgstr "输入 %s （标识符 %s）"
+
+#: builtin/worktree.c:281
+msgid "checkout <branch> even if already checked out in other worktree"
+msgstr "检出分支 <branch> 即使已经被检出到其它工作区"
+
+#: builtin/worktree.c:283
+msgid "create a new branch"
+msgstr "创建一个新分支"
+
+#: builtin/worktree.c:285
+msgid "create or reset a branch"
+msgstr "创建或重置一个分支"
+
+#: builtin/worktree.c:286
+msgid "detach HEAD at named commit"
+msgstr "HEAD 从指定的提交分离"
+
+#: builtin/worktree.c:292
+msgid "-b and -B are mutually exclusive"
+msgstr "-b 和 -B 互斥"
+
 #: builtin/write-tree.c:13
 msgid "git write-tree [--missing-ok] [--prefix=<prefix>/]"
 msgstr "git write-tree [--missing-ok] [--prefix=<前缀>/]"
 
 #: builtin/write-tree.c:26
 msgid "<prefix>/"
@@ -9973,288 +10209,308 @@
 "to read about a specific subcommand or concept."
 msgstr ""
 "命令 'git help -a' 和 'git help -g' 显示可用的子命令和一些概念帮助。\n"
 "查看 'git help <命令>' 或 'git help <概念>' 以获取给定子命令或概念的\n"
 "帮助。"
 
-#: common-cmds.h:8
+#: common-cmds.h:10
+msgid "start a working area (see also: git help tutorial)"
+msgstr "开始一个工作区（参见：git help tutorial）"
+
+#: common-cmds.h:11
+msgid "work on the current change (see also: git help everyday)"
+msgstr "在当前变更上工作（参见：git help everyday）"
+
+#: common-cmds.h:12
+msgid "examine the history and state (see also: git help revisions)"
+msgstr "检查历史和状态（参见：git help revisions）"
+
+#: common-cmds.h:13
+msgid "grow, mark and tweak your common history"
+msgstr "扩展、标记和调校您的历史记录"
+
+#: common-cmds.h:14
+msgid "collaborate (see also: git help workflows)"
+msgstr "协同（参见：git help workflows）"
+
+#: common-cmds.h:18
 msgid "Add file contents to the index"
 msgstr "添加文件内容至索引"
 
-#: common-cmds.h:9
+#: common-cmds.h:19
 msgid "Find by binary search the change that introduced a bug"
 msgstr "通过二分查找定位引入 bug 的变更"
 
-#: common-cmds.h:10
+#: common-cmds.h:20
 msgid "List, create, or delete branches"
 msgstr "列出、创建或删除分支"
 
-#: common-cmds.h:11
-msgid "Checkout a branch or paths to the working tree"
-msgstr "检出一个分支或路径到工作区"
+#: common-cmds.h:21
+msgid "Switch branches or restore working tree files"
+msgstr "切换分支或恢复工作区文件"
 
-#: common-cmds.h:12
+#: common-cmds.h:22
 msgid "Clone a repository into a new directory"
 msgstr "克隆一个版本库到一个新目录"
 
-#: common-cmds.h:13
+#: common-cmds.h:23
 msgid "Record changes to the repository"
 msgstr "记录变更到版本库"
 
-#: common-cmds.h:14
+#: common-cmds.h:24
 msgid "Show changes between commits, commit and working tree, etc"
 msgstr "显示提交之间、提交和工作区之间等的差异"
 
-#: common-cmds.h:15
+#: common-cmds.h:25
 msgid "Download objects and refs from another repository"
 msgstr "从另外一个版本库下载对象和引用"
 
-#: common-cmds.h:16
+#: common-cmds.h:26
 msgid "Print lines matching a pattern"
 msgstr "输出和模式匹配的行"
 
-#: common-cmds.h:17
+#: common-cmds.h:27
 msgid "Create an empty Git repository or reinitialize an existing one"
 msgstr "创建一个空的 Git 版本库或重新初始化一个已存在的版本库"
 
-#: common-cmds.h:18
+#: common-cmds.h:28
 msgid "Show commit logs"
 msgstr "显示提交日志"
 
-#: common-cmds.h:19
+#: common-cmds.h:29
 msgid "Join two or more development histories together"
 msgstr "合并两个或更多开发历史"
 
-#: common-cmds.h:20
+#: common-cmds.h:30
 msgid "Move or rename a file, a directory, or a symlink"
 msgstr "移动或重命名一个文件、目录或符号链接"
 
-#: common-cmds.h:21
+#: common-cmds.h:31
 msgid "Fetch from and integrate with another repository or a local branch"
 msgstr "获取并整合另外的版本库或一个本地分支"
 
-#: common-cmds.h:22
+#: common-cmds.h:32
 msgid "Update remote refs along with associated objects"
 msgstr "更新远程引用和相关的对象"
 
-#: common-cmds.h:23
+#: common-cmds.h:33
 msgid "Forward-port local commits to the updated upstream head"
 msgstr "本地提交转移至更新后的上游分支中"
 
-#: common-cmds.h:24
+#: common-cmds.h:34
 msgid "Reset current HEAD to the specified state"
 msgstr "重置当前HEAD到指定状态"
 
-#: common-cmds.h:25
+#: common-cmds.h:35
 msgid "Remove files from the working tree and from the index"
 msgstr "从工作区和索引中删除文件"
 
-#: common-cmds.h:26
+#: common-cmds.h:36
 msgid "Show various types of objects"
 msgstr "显示各种类型的对象"
 
-#: common-cmds.h:27
+#: common-cmds.h:37
 msgid "Show the working tree status"
 msgstr "显示工作区状态"
 
-#: common-cmds.h:28
+#: common-cmds.h:38
 msgid "Create, list, delete or verify a tag object signed with GPG"
 msgstr "创建、列出、删除或校验一个GPG签名的 tag 对象"
 
-#: parse-options.h:143
+#: parse-options.h:142
 msgid "expiry-date"
 msgstr "到期时间"
 
-#: parse-options.h:158
+#: parse-options.h:157
 msgid "no-op (backward compatibility)"
 msgstr "空操作（向后兼容）"
 
-#: parse-options.h:232
+#: parse-options.h:231
 msgid "be more verbose"
 msgstr "更加详细"
 
-#: parse-options.h:234
+#: parse-options.h:233
 msgid "be more quiet"
 msgstr "更加安静"
 
-#: parse-options.h:240
+#: parse-options.h:239
 msgid "use <n> digits to display SHA-1s"
 msgstr "用 <n> 位数字显示 SHA-1 哈希值"
 
 #: rerere.h:27
 msgid "update the index with reused conflict resolution if possible"
 msgstr "如果可能，重用冲突解决更新索引"
 
 #: git-am.sh:53
 msgid "You need to set your committer info first"
 msgstr "您需要先设置你的提交者信息"
 
-#: git-am.sh:98
+#: git-am.sh:100
 msgid ""
 "You seem to have moved HEAD since the last 'am' failure.\n"
 "Not rewinding to ORIG_HEAD"
 msgstr "您好像在上一次 'am' 失败后移动了 HEAD。未回退至 ORIG_HEAD"
 
-#: git-am.sh:108
+#: git-am.sh:110
 #, sh-format
 msgid ""
 "When you have resolved this problem, run \"$cmdline --continue\".\n"
 "If you prefer to skip this patch, run \"$cmdline --skip\" instead.\n"
 "To restore the original branch and stop patching, run \"$cmdline --abort\"."
 msgstr ""
 "当您解决了此问题后，执行 \"$cmdline --continue\"。\n"
 "如果您想跳过此补丁，则执行 \"$cmdline --skip\"。\n"
 "要恢复原分支并停止打补丁，执行 \"$cmdline --abort\"。"
 
-#: git-am.sh:124
+#: git-am.sh:126
 msgid "Cannot fall back to three-way merge."
 msgstr "无法求助于三路合并。"
 
-#: git-am.sh:140
+#: git-am.sh:142
 msgid "Repository lacks necessary blobs to fall back on 3-way merge."
 msgstr "版本库缺乏必要的数据（blob）对象以进行三路合并。"
 
-#: git-am.sh:142
+#: git-am.sh:144
 msgid "Using index info to reconstruct a base tree..."
 msgstr "使用索引来重建一个（三路合并的）基础目录树..."
 
-#: git-am.sh:157
+#: git-am.sh:159
 msgid ""
 "Did you hand edit your patch?\n"
 "It does not apply to blobs recorded in its index."
 msgstr ""
 "您是否曾手动编辑过您的补丁？\n"
 "无法应用补丁到索引中的数据（blob）对象上。"
 
-#: git-am.sh:166
+#: git-am.sh:168
 msgid "Falling back to patching base and 3-way merge..."
 msgstr "转而在基础版本上打补丁及进行三路合并..."
 
-#: git-am.sh:182
+#: git-am.sh:185
 msgid "Failed to merge in the changes."
 msgstr "无法合并变更。"
 
-#: git-am.sh:277
+#: git-am.sh:280
 msgid "Only one StGIT patch series can be applied at once"
 msgstr "一次只能有一个 StGIT 补丁队列被应用"
 
-#: git-am.sh:364
+#: git-am.sh:367
 #, sh-format
 msgid "Patch format $patch_format is not supported."
 msgstr "不支持 $patch_format 补丁格式。"
 
-#: git-am.sh:366
+#: git-am.sh:369
 msgid "Patch format detection failed."
 msgstr "补丁格式检测失败。"
 
-#: git-am.sh:398
+#: git-am.sh:407
 msgid ""
 "The -b/--binary option has been a no-op for long time, and\n"
 "it will be removed. Please do not use it anymore."
 msgstr ""
 "参数 -b/--binary 已经很长时间不做任何实质操作了，并且将被删除。\n"
 "请不要再使用它了。"
 
-#: git-am.sh:496
+#: git-am.sh:507
 #, sh-format
 msgid "previous rebase directory $dotest still exists but mbox given."
 msgstr "之前的变基目录 $dotest 仍然存在，但却提供了 mbox。"
 
-#: git-am.sh:501
+#: git-am.sh:512
 msgid "Please make up your mind. --skip or --abort?"
 msgstr "请下决心。--skip 或是 --abort ？"
 
-#: git-am.sh:537
+#: git-am.sh:560
 #, sh-format
 msgid ""
 "Stray $dotest directory found.\n"
 "Use \"git am --abort\" to remove it."
 msgstr ""
 "发现了错误的 $dotest 目录。\n"
 "使用 \"git am --abort\" 删除它。"
 
-#: git-am.sh:545
+#: git-am.sh:568
 msgid "Resolve operation not in progress, we are not resuming."
 msgstr "解决操作未进行，我们不会继续。"
 
-#: git-am.sh:612
+#: git-am.sh:635
 #, sh-format
 msgid "Dirty index: cannot apply patches (dirty: $files)"
 msgstr "脏的索引：不能应用补丁（脏文件：$files）"
 
-#: git-am.sh:722
+#: git-am.sh:747
 #, sh-format
 msgid ""
 "Patch is empty.  Was it split wrong?\n"
 "If you would prefer to skip this patch, instead run \"$cmdline --skip\".\n"
 "To restore the original branch and stop patching run \"$cmdline --abort\"."
 msgstr ""
 "补丁为空。是不是切分错误？\n"
 "如果您想要跳过这个补丁，执行 \"$cmdline --skip\"。\n"
 "要恢复原分支并停止打补丁，执行 \"$cmdline --abort\"。"
 
-#: git-am.sh:749
+#: git-am.sh:774
 msgid "Patch does not have a valid e-mail address."
 msgstr "补丁中没有一个有效的邮件地址。"
 
-#: git-am.sh:796
+#: git-am.sh:821
 msgid "cannot be interactive without stdin connected to a terminal."
 msgstr "标准输入没有和终端关联，不能进行交互式操作。"
 
-#: git-am.sh:800
+#: git-am.sh:825
 msgid "Commit Body is:"
 msgstr "提交内容为："
 
 #  译者：注意保持句尾空格
 #. TRANSLATORS: Make sure to include [y], [n], [e], [v] and [a]
 #. in your translation. The program will only accept English
 #. input at this point.
-#: git-am.sh:807
+#: git-am.sh:832
 msgid "Apply? [y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all "
 msgstr "应用？[y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all "
 
-#: git-am.sh:843
+#: git-am.sh:868
 #, sh-format
 msgid "Applying: $FIRSTLINE"
 msgstr "正应用：$FIRSTLINE"
 
-#: git-am.sh:864
+#: git-am.sh:889
 msgid ""
 "No changes - did you forget to use 'git add'?\n"
 "If there is nothing left to stage, chances are that something else\n"
 "already introduced the same changes; you might want to skip this patch."
 msgstr ""
 "没有变更 —— 您是不是忘了执行 'git add'？\n"
 "如果没有什么要添加到暂存区的，则很可能是其它提交已经引入了相同的变更。\n"
 "您也许想要跳过这个补丁。"
 
-#: git-am.sh:872
+#: git-am.sh:897
 msgid ""
 "You still have unmerged paths in your index\n"
 "did you forget to use 'git add'?"
 msgstr "您的索引中仍有未合并的路径。您是否忘了执行 'git add'？"
 
-#: git-am.sh:888
+#: git-am.sh:913
 msgid "No changes -- Patch already applied."
 msgstr "没有变更 —— 补丁已经应用过。"
 
-#: git-am.sh:898
+#: git-am.sh:923
 #, sh-format
 msgid "Patch failed at $msgnum $FIRSTLINE"
 msgstr "补丁失败于 $msgnum $FIRSTLINE"
 
-#: git-am.sh:901
+#: git-am.sh:926
 #, sh-format
 msgid ""
 "The copy of the patch that failed is found in:\n"
 "   $dotest/patch"
 msgstr ""
 "失败的补丁文件副本位于：\n"
 "   $dotest/patch"
 
-#: git-am.sh:919
+#: git-am.sh:945
 msgid "applying to an empty history"
 msgstr "正应用到一个空历史上"
 
 #: git-bisect.sh:48
 msgid "You need to start by \"git bisect start\""
 msgstr "您需要执行 \"git bisect start\" 来开始"
@@ -10407,52 +10663,52 @@
 "'bisect_state $state' 退出码为 $res"
 
 #: git-bisect.sh:485
 msgid "bisect run success"
 msgstr "二分查找运行成功"
 
-#: git-pull.sh:21
+#: git-pull.sh:61
 msgid ""
 "Pull is not possible because you have unmerged files.\n"
 "Please, fix them up in the work tree, and then use 'git add/rm <file>'\n"
 "as appropriate to mark resolution and make a commit."
 msgstr ""
 "Pull 不可用，因为您尚有未合并的文件。请先在工作区改正文件，\n"
 "然后酌情使用 'git add/rm <文件>' 标记解决方案，再做提交。"
 
-#: git-pull.sh:25
+#: git-pull.sh:65
 msgid "Pull is not possible because you have unmerged files."
 msgstr "Pull 不可用，因为您尚有未合并的文件。"
 
-#: git-pull.sh:31
+#: git-pull.sh:71
 msgid ""
 "You have not concluded your merge (MERGE_HEAD exists).\n"
 "Please, commit your changes before you can merge."
 msgstr ""
 "您尚未结束您的合并（存在 MERGE_HEAD）。\n"
 "请在合并前先提交您的修改。"
 
-#: git-pull.sh:245
+#: git-pull.sh:285
 msgid "updating an unborn branch with changes added to the index"
 msgstr "更新尚未诞生的分支，变更添加至索引"
 
-#: git-pull.sh:269
+#: git-pull.sh:311
 #, sh-format
 msgid ""
 "Warning: fetch updated the current branch head.\n"
 "Warning: fast-forwarding your working tree from\n"
 "Warning: commit $orig_head."
 msgstr ""
 "警告：fetch 更新了当前的分支。您的工作区\n"
 "警告：从原提交 $orig_head 快进。"
 
-#: git-pull.sh:294
+#: git-pull.sh:336
 msgid "Cannot merge multiple branches into empty head"
 msgstr "无法将多个分支合并到空分支"
 
-#: git-pull.sh:298
+#: git-pull.sh:340
 msgid "Cannot rebase onto multiple branches"
 msgstr "无法变基到多个分支"
 
 #: git-rebase.sh:57
 msgid ""
 "When you have resolved this problem, run \"git rebase --continue\".\n"
@@ -10641,100 +10897,105 @@
 #. translation of "error: " takes in your language. E.g. in
 #. English this is:
 #.
 #. $ git stash save --blah-blah 2>&1 | head -n 2
 #. error: unknown option for 'stash save': --blah-blah
 #. To provide a message, use git stash save -- '--blah-blah'
-#: git-stash.sh:238
+#: git-stash.sh:241
 #, sh-format
 msgid ""
 "error: unknown option for 'stash save': $option\n"
 "       To provide a message, use git stash save -- '$option'"
 msgstr ""
 "错误：'stash save' 的未知选项：$option\n"
 "      要提供一个描述信息，使用 git stash save -- '$option'"
 
-#: git-stash.sh:259
+#: git-stash.sh:262
 msgid "No local changes to save"
 msgstr "没有要保存的本地修改"
 
-#: git-stash.sh:263
+#: git-stash.sh:266
 msgid "Cannot initialize stash"
 msgstr "无法初始化 stash"
 
-#: git-stash.sh:267
+#: git-stash.sh:270
 msgid "Cannot save the current status"
 msgstr "无法保存当前状态"
 
-#: git-stash.sh:285
+#: git-stash.sh:288
 msgid "Cannot remove worktree changes"
 msgstr "无法删除工作区变更"
 
-#: git-stash.sh:384
+#: git-stash.sh:389
+#, sh-format
+msgid "unknown option: $opt"
+msgstr "未知选项: $opt"
+
+#: git-stash.sh:399
 msgid "No stash found."
 msgstr "未发现 stash。"
 
-#: git-stash.sh:391
+#: git-stash.sh:406
 #, sh-format
 msgid "Too many revisions specified: $REV"
 msgstr "指定了太多的版本：$REV"
 
-#: git-stash.sh:397
+#: git-stash.sh:412
 #, sh-format
 msgid "$reference is not a valid reference"
 msgstr "$reference 不是一个有效的引用"
 
-#: git-stash.sh:425
+#: git-stash.sh:440
 #, sh-format
 msgid "'$args' is not a stash-like commit"
 msgstr "'$args' 不是 stash 样提交"
 
-#: git-stash.sh:436
+#: git-stash.sh:451
 #, sh-format
 msgid "'$args' is not a stash reference"
 msgstr "'$args' 不是一个 stash 引用"
 
-#: git-stash.sh:444
+#: git-stash.sh:459
 msgid "unable to refresh index"
 msgstr "无法刷新索引"
 
-#: git-stash.sh:448
+#: git-stash.sh:463
 msgid "Cannot apply a stash in the middle of a merge"
 msgstr "无法在合并过程中恢复进度"
 
-#: git-stash.sh:456
+#: git-stash.sh:471
 msgid "Conflicts in index. Try without --index."
 msgstr "索引中有冲突。尝试不使用 --index。"
 
-#: git-stash.sh:458
+#: git-stash.sh:473
 msgid "Could not save index tree"
 msgstr "不能保存索引树"
 
-#: git-stash.sh:492
+#: git-stash.sh:507
 msgid "Cannot unstage modified files"
 msgstr "无法还原修改的文件"
 
-#: git-stash.sh:507
+#: git-stash.sh:522
 msgid "Index was not unstashed."
 msgstr "索引的进度没有被恢复。"
 
-#: git-stash.sh:530
+#: git-stash.sh:545
 #, sh-format
 msgid "Dropped ${REV} ($s)"
 msgstr "丢弃了 ${REV} ($s)"
 
-#: git-stash.sh:531
+#: git-stash.sh:546
 #, sh-format
 msgid "${REV}: Could not drop stash entry"
 msgstr "${REV}：不能丢弃进度条目"
 
-#: git-stash.sh:539
+#: git-stash.sh:554
 msgid "No branch name specified"
 msgstr "未指定分支名"
 
-#: git-stash.sh:611
+#: git-stash.sh:626
 msgid "(To restore them type \"git stash apply\")"
 msgstr "（为恢复数据输入 \"git stash apply\"）"
 
 #: git-submodule.sh:95
 #, sh-format
 msgid "cannot strip one component off url '$remoteurl'"
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/preload-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/preload-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/preload-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/preload-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pretty.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pretty.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/pretty.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/pretty.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/prio-queue.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/prio-queue.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/prio-queue.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/prio-queue.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/progress.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/progress.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/progress.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/progress.c	2015-07-28 04:34:56.000000000 +0800
@@ -69,12 +69,18 @@
 	struct itimerval v = {{0,},};
 	setitimer(ITIMER_REAL, &v, NULL);
 	signal(SIGALRM, SIG_IGN);
 	progress_update = 0;
 }
 
+static int is_foreground_fd(int fd)
+{
+	int tpgrp = tcgetpgrp(fd);
+	return tpgrp < 0 || tpgrp == getpgid(0);
+}
+
 static int display(struct progress *progress, unsigned n, const char *done)
 {
 	const char *eol, *tp;
 
 	if (progress->delay) {
 		if (!progress_update || --progress->delay)
@@ -95,22 +101,27 @@
 	tp = (progress->throughput) ? progress->throughput->display : "";
 	eol = done ? done : "   \r";
 	if (progress->total) {
 		unsigned percent = n * 100 / progress->total;
 		if (percent != progress->last_percent || progress_update) {
 			progress->last_percent = percent;
-			fprintf(stderr, "%s: %3u%% (%u/%u)%s%s",
-				progress->title, percent, n,
-				progress->total, tp, eol);
-			fflush(stderr);
+			if (is_foreground_fd(fileno(stderr)) || done) {
+				fprintf(stderr, "%s: %3u%% (%u/%u)%s%s",
+					progress->title, percent, n,
+					progress->total, tp, eol);
+				fflush(stderr);
+			}
 			progress_update = 0;
 			return 1;
 		}
 	} else if (progress_update) {
-		fprintf(stderr, "%s: %u%s%s", progress->title, n, tp, eol);
-		fflush(stderr);
+		if (is_foreground_fd(fileno(stderr)) || done) {
+			fprintf(stderr, "%s: %u%s%s",
+				progress->title, n, tp, eol);
+			fflush(stderr);
+		}
 		progress_update = 0;
 		return 1;
 	}
 
 	return 0;
 }
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/progress.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/progress.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/progress.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/progress.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/prompt.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/prompt.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/prompt.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/prompt.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/quote.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/quote.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/quote.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/quote.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/reachable.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/reachable.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/reachable.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/reachable.c	2015-07-28 04:34:56.000000000 +0800
@@ -19,34 +19,36 @@
 {
 	cp->count++;
 	if ((cp->count & 1023) == 0)
 		display_progress(cp->progress, cp->count);
 }
 
-static int add_one_ref(const char *path, const unsigned char *sha1, int flag, void *cb_data)
+static int add_one_ref(const char *path, const struct object_id *oid,
+		       int flag, void *cb_data)
 {
-	struct object *object = parse_object_or_die(sha1, path);
+	struct object *object = parse_object_or_die(oid->hash, path);
 	struct rev_info *revs = (struct rev_info *)cb_data;
 
 	add_pending_object(revs, object, "");
 
 	return 0;
 }
 
 /*
  * The traversal will have already marked us as SEEN, so we
  * only need to handle any progress reporting here.
  */
-static void mark_object(struct object *obj, const char *name, void *data)
+static void mark_object(struct object *obj, const struct name_path *path,
+			const char *name, void *data)
 {
 	update_progress(data);
 }
 
 static void mark_commit(struct commit *c, void *data)
 {
-	mark_object(&c->object, NULL, data);
+	mark_object(&c->object, NULL, NULL, data);
 }
 
 struct recent_data {
 	struct rev_info *revs;
 	unsigned long timestamp;
 };
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/reachable.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/reachable.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/reachable.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/reachable.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/read-cache.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/read-cache.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/read-cache.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/read-cache.c	2015-07-28 04:34:56.000000000 +0800
@@ -36,17 +36,18 @@
  */
 
 #define CACHE_EXT(s) ( (s[0]<<24)|(s[1]<<16)|(s[2]<<8)|(s[3]) )
 #define CACHE_EXT_TREE 0x54524545	/* "TREE" */
 #define CACHE_EXT_RESOLVE_UNDO 0x52455543 /* "REUC" */
 #define CACHE_EXT_LINK 0x6c696e6b	  /* "link" */
+#define CACHE_EXT_UNTRACKED 0x554E5452	  /* "UNTR" */
 
 /* changes that can be kept in $GIT_DIR/index (basically all extensions) */
 #define EXTMASK (RESOLVE_UNDO_CHANGED | CACHE_TREE_CHANGED | \
 		 CE_ENTRY_ADDED | CE_ENTRY_REMOVED | CE_ENTRY_CHANGED | \
-		 SPLIT_INDEX_ORDERED)
+		 SPLIT_INDEX_ORDERED | UNTRACKED_CHANGED)
 
 struct index_state the_index;
 static const char *alternate_index_output;
 
 static void set_index_entry(struct index_state *istate, int nr, struct cache_entry *ce)
 {
@@ -76,12 +77,13 @@
 	new->ce_flags &= ~CE_HASHED;
 	new->ce_namelen = namelen;
 	new->index = 0;
 	memcpy(new->name, new_name, namelen + 1);
 
 	cache_tree_invalidate_path(istate, old->name);
+	untracked_cache_remove_from_index(istate, old->name);
 	remove_index_entry_at(istate, nr);
 	add_index_entry(istate, new, ADD_CACHE_OK_TO_ADD|ADD_CACHE_OK_TO_REPLACE);
 }
 
 void fill_stat_data(struct stat_data *sd, struct stat *st)
 {
@@ -267,26 +269,40 @@
 			changed |= DATA_CHANGED;
 	}
 
 	return changed;
 }
 
-static int is_racy_timestamp(const struct index_state *istate,
-			     const struct cache_entry *ce)
+static int is_racy_stat(const struct index_state *istate,
+			const struct stat_data *sd)
 {
-	return (!S_ISGITLINK(ce->ce_mode) &&
-		istate->timestamp.sec &&
+	return (istate->timestamp.sec &&
 #ifdef USE_NSEC
 		 /* nanosecond timestamped files can also be racy! */
-		(istate->timestamp.sec < ce->ce_stat_data.sd_mtime.sec ||
-		 (istate->timestamp.sec == ce->ce_stat_data.sd_mtime.sec &&
-		  istate->timestamp.nsec <= ce->ce_stat_data.sd_mtime.nsec))
+		(istate->timestamp.sec < sd->sd_mtime.sec ||
+		 (istate->timestamp.sec == sd->sd_mtime.sec &&
+		  istate->timestamp.nsec <= sd->sd_mtime.nsec))
 #else
-		istate->timestamp.sec <= ce->ce_stat_data.sd_mtime.sec
+		istate->timestamp.sec <= sd->sd_mtime.sec
 #endif
-		 );
+		);
+}
+
+static int is_racy_timestamp(const struct index_state *istate,
+			     const struct cache_entry *ce)
+{
+	return (!S_ISGITLINK(ce->ce_mode) &&
+		is_racy_stat(istate, &ce->ce_stat_data));
+}
+
+int match_stat_data_racy(const struct index_state *istate,
+			 const struct stat_data *sd, struct stat *st)
+{
+	if (is_racy_stat(istate, sd))
+		return MTIME_CHANGED;
+	return match_stat_data(sd, st);
 }
 
 int ie_match_stat(const struct index_state *istate,
 		  const struct cache_entry *ce, struct stat *st,
 		  unsigned int options)
 {
@@ -535,12 +551,13 @@
 int remove_file_from_index(struct index_state *istate, const char *path)
 {
 	int pos = index_name_pos(istate, path, strlen(path));
 	if (pos < 0)
 		pos = -pos-1;
 	cache_tree_invalidate_path(istate, path);
+	untracked_cache_remove_from_index(istate, path);
 	while (pos < istate->cache_nr && !strcmp(istate->cache[pos]->name, path))
 		remove_index_entry_at(istate, pos);
 	return 0;
 }
 
 static int compare_name(struct cache_entry *ce, const char *path, int namelen)
@@ -979,12 +996,15 @@
 		if (!new_only)
 			replace_index_entry(istate, pos, ce);
 		return 0;
 	}
 	pos = -pos-1;
 
+	if (!(option & ADD_CACHE_KEEP_CACHE_TREE))
+		untracked_cache_add_to_index(istate, ce->name);
+
 	/*
 	 * Inserting a merged entry ("stage 0") into the index
 	 * will always replace all non-merged entries..
 	 */
 	if (pos < istate->cache_nr && ce_stage(ce) == 0) {
 		while (ce_same_name(istate->cache[pos], ce)) {
@@ -1369,12 +1389,15 @@
 		istate->resolve_undo = resolve_undo_read(data, sz);
 		break;
 	case CACHE_EXT_LINK:
 		if (read_link_extension(istate, data, sz))
 			return -1;
 		break;
+	case CACHE_EXT_UNTRACKED:
+		istate->untracked = read_untracked_extension(data, sz);
+		break;
 	default:
 		if (*ext < 'A' || 'Z' < *ext)
 			return error("index uses %.4s extension, which we do not understand",
 				     ext);
 		fprintf(stderr, "ignoring %.4s extension\n", ext);
 		break;
@@ -1664,12 +1687,14 @@
 	cache_tree_free(&(istate->cache_tree));
 	istate->initialized = 0;
 	free(istate->cache);
 	istate->cache = NULL;
 	istate->cache_alloc = 0;
 	discard_split_index(istate);
+	free_untracked_cache(istate->untracked);
+	istate->untracked = NULL;
 	return 0;
 }
 
 int unmerged_index(const struct index_state *istate)
 {
 	int i;
@@ -2050,12 +2075,23 @@
 					     sb.len) < 0
 			|| ce_write(&c, newfd, sb.buf, sb.len) < 0;
 		strbuf_release(&sb);
 		if (err)
 			return -1;
 	}
+	if (!strip_extensions && istate->untracked) {
+		struct strbuf sb = STRBUF_INIT;
+
+		write_untracked_extension(&sb, istate->untracked);
+		err = write_index_ext_header(&c, newfd, CACHE_EXT_UNTRACKED,
+					     sb.len) < 0 ||
+			ce_write(&c, newfd, sb.buf, sb.len) < 0;
+		strbuf_release(&sb);
+		if (err)
+			return -1;
+	}
 
 	if (ce_flush(&c, newfd, istate->sha1) || fstat(newfd, &st))
 		return -1;
 	istate->timestamp.sec = (unsigned int)st.st_mtime;
 	istate->timestamp.nsec = ST_MTIME_NSEC(st);
 	return 0;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/read-cache.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/read-cache.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/read-cache.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/read-cache.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/reflog-walk.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/reflog-walk.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/reflog-walk.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/reflog-walk.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/refs.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/refs.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/refs.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/refs.c	2015-07-28 04:34:56.000000000 +0800
@@ -7,14 +7,13 @@
 #include "string-list.h"
 
 struct ref_lock {
 	char *ref_name;
 	char *orig_ref_name;
 	struct lock_file *lk;
-	unsigned char old_sha1[20];
-	int lock_fd;
+	struct object_id old_oid;
 };
 
 /*
  * How to handle various characters in refnames:
  * 0: An acceptable character for refs
  * 1: End-of-component
@@ -159,21 +158,21 @@
 	/*
 	 * The name of the object to which this reference resolves
 	 * (which may be a tag object).  If REF_ISBROKEN, this is
 	 * null.  If REF_ISSYMREF, then this is the name of the object
 	 * referred to by the last reference in the symlink chain.
 	 */
-	unsigned char sha1[20];
+	struct object_id oid;
 
 	/*
 	 * If REF_KNOWS_PEELED, then this field holds the peeled value
 	 * of this reference, or null if the reference is known not to
 	 * be peelable.  See the documentation for peel_ref() for an
 	 * exact definition of "peelable".
 	 */
-	unsigned char peeled[20];
+	struct object_id peeled;
 };
 
 struct ref_cache;
 
 /*
  * Information used (along with the information in ref_entry) to
@@ -347,18 +346,16 @@
 	int len;
 	struct ref_entry *ref;
 
 	if (check_name &&
 	    check_refname_format(refname, REFNAME_ALLOW_ONELEVEL))
 		die("Reference has invalid format: '%s'", refname);
-	if (!check_name && !refname_is_safe(refname))
-		die("Reference has invalid name: '%s'", refname);
 	len = strlen(refname) + 1;
 	ref = xmalloc(sizeof(struct ref_entry) + len);
-	hashcpy(ref->u.value.sha1, sha1);
-	hashclr(ref->u.value.peeled);
+	hashcpy(ref->u.value.oid.hash, sha1);
+	oidclr(&ref->u.value.peeled);
 	memcpy(ref->name, refname, len);
 	ref->flag = flag;
 	return ref;
 }
 
 static void clear_ref_dir(struct ref_dir *dir);
@@ -626,13 +623,13 @@
 	/* Duplicate name; make sure that they don't conflict: */
 
 	if ((ref1->flag & REF_DIR) || (ref2->flag & REF_DIR))
 		/* This is impossible by construction */
 		die("Reference directory conflict: %s", ref1->name);
 
-	if (hashcmp(ref1->u.value.sha1, ref2->u.value.sha1))
+	if (oidcmp(&ref1->u.value.oid, &ref2->u.value.oid))
 		die("Duplicated ref, and SHA1s don't match: %s", ref1->name);
 
 	warning("Duplicated ref: %s", ref1->name);
 	return 1;
 }
 
@@ -674,13 +671,13 @@
  * object does not exist.
  */
 static int ref_resolves_to_object(struct ref_entry *entry)
 {
 	if (entry->flag & REF_ISBROKEN)
 		return 0;
-	if (!has_sha1_file(entry->u.value.sha1)) {
+	if (!has_sha1_file(entry->u.value.oid.hash)) {
 		error("%s does not point to a valid object!", entry->name);
 		return 0;
 	}
 	return 1;
 }
 
@@ -722,13 +719,13 @@
 	      !ref_resolves_to_object(entry))
 		return 0;
 
 	/* Store the old value, in case this is a recursive call: */
 	old_current_ref = current_ref;
 	current_ref = entry;
-	retval = data->fn(entry->name + data->trim, entry->u.value.sha1,
+	retval = data->fn(entry->name + data->trim, &entry->u.value.oid,
 			  entry->flag, data->cb_data);
 	current_ref = old_current_ref;
 	return retval;
 }
 
 /*
@@ -1241,12 +1238,14 @@
 
 		refname = parse_ref_line(&line, sha1);
 		if (refname) {
 			int flag = REF_ISPACKED;
 
 			if (check_refname_format(refname, REFNAME_ALLOW_ONELEVEL)) {
+				if (!refname_is_safe(refname))
+					die("packed refname is dangerous: %s", refname);
 				hashclr(sha1);
 				flag |= REF_BAD_NAME | REF_ISBROKEN;
 			}
 			last = create_ref_entry(refname, sha1, flag, 0);
 			if (peeled == PEELED_FULLY ||
 			    (peeled == PEELED_TAGS && starts_with(refname, "refs/tags/")))
@@ -1256,13 +1255,13 @@
 		}
 		if (last &&
 		    line.buf[0] == '^' &&
 		    line.len == PEELED_LINE_LENGTH &&
 		    line.buf[PEELED_LINE_LENGTH - 1] == '\n' &&
 		    !get_sha1_hex(line.buf + 1, sha1)) {
-			hashcpy(last->u.value.peeled, sha1);
+			hashcpy(last->u.value.peeled.hash, sha1);
 			/*
 			 * Regardless of what the file header said,
 			 * we definitely know the value of *this*
 			 * reference:
 			 */
 			last->flag |= REF_KNOWS_PEELED;
@@ -1401,12 +1400,14 @@
 				 */
 				flag |= REF_ISBROKEN;
 			}
 
 			if (check_refname_format(refname.buf,
 						 REFNAME_ALLOW_ONELEVEL)) {
+				if (!refname_is_safe(refname.buf))
+					die("loose refname is dangerous: %s", refname.buf);
 				hashclr(sha1);
 				flag |= REF_BAD_NAME | REF_ISBROKEN;
 			}
 			add_entry_to_dir(dir,
 					 create_ref_entry(refname.buf, sha1, flag, 0));
 		}
@@ -1450,23 +1451,23 @@
 	struct ref_dir *dir = get_packed_refs(refs);
 
 	ref = find_ref(dir, refname);
 	if (ref == NULL)
 		return -1;
 
-	hashcpy(sha1, ref->u.value.sha1);
+	hashcpy(sha1, ref->u.value.oid.hash);
 	return 0;
 }
 
 static int resolve_gitlink_ref_recursive(struct ref_cache *refs,
 					 const char *refname, unsigned char *sha1,
 					 int recursion)
 {
 	int fd, len;
 	char buffer[128], *p;
-	char *path;
+	const char *path;
 
 	if (recursion > MAXDEPTH || strlen(refname) > MAXREFLEN)
 		return -1;
 	path = *refs->name
 		? git_path_submodule(refs->name, "%s", refname)
 		: git_path("%s", refname);
@@ -1537,13 +1538,13 @@
 	/*
 	 * The loose reference file does not exist; check for a packed
 	 * reference.
 	 */
 	entry = get_packed_ref(refname);
 	if (entry) {
-		hashcpy(sha1, entry->u.value.sha1);
+		hashcpy(sha1, entry->u.value.oid.hash);
 		if (flags)
 			*flags |= REF_ISPACKED;
 		return 0;
 	}
 	/* The reference is not a packed reference, either. */
 	if (resolve_flags & RESOLVE_REF_READING) {
@@ -1553,13 +1554,17 @@
 		hashclr(sha1);
 		return 0;
 	}
 }
 
 /* This function needs to return a meaningful errno on failure */
-const char *resolve_ref_unsafe(const char *refname, int resolve_flags, unsigned char *sha1, int *flags)
+static const char *resolve_ref_unsafe_1(const char *refname,
+					int resolve_flags,
+					unsigned char *sha1,
+					int *flags,
+					struct strbuf *sb_path)
 {
 	int depth = MAXDEPTH;
 	ssize_t len;
 	char buffer[256];
 	static char refname_buffer[256];
 	int bad_name = 0;
@@ -1584,23 +1589,25 @@
 		 * We don't know whether the ref exists, so don't set
 		 * REF_ISBROKEN yet.
 		 */
 		bad_name = 1;
 	}
 	for (;;) {
-		char path[PATH_MAX];
+		const char *path;
 		struct stat st;
 		char *buf;
 		int fd;
 
 		if (--depth < 0) {
 			errno = ELOOP;
 			return NULL;
 		}
 
-		git_snpath(path, sizeof(path), "%s", refname);
+		strbuf_reset(sb_path);
+		strbuf_git_path(sb_path, "%s", refname);
+		path = sb_path->buf;
 
 		/*
 		 * We might have to loop back here to avoid a race
 		 * condition: first we lstat() the file, then we try
 		 * to read it as a link or as a file.  But if somebody
 		 * changes the type of the file (file <-> directory
@@ -1721,12 +1728,22 @@
 			}
 			bad_name = 1;
 		}
 	}
 }
 
+const char *resolve_ref_unsafe(const char *refname, int resolve_flags,
+			       unsigned char *sha1, int *flags)
+{
+	struct strbuf sb_path = STRBUF_INIT;
+	const char *ret = resolve_ref_unsafe_1(refname, resolve_flags,
+					       sha1, flags, &sb_path);
+	strbuf_release(&sb_path);
+	return ret;
+}
+
 char *resolve_refdup(const char *ref, int resolve_flags, unsigned char *sha1, int *flags)
 {
 	return xstrdup_or_null(resolve_ref_unsafe(ref, resolve_flags, sha1, flags));
 }
 
 /* The argument to filter_refs */
@@ -1751,19 +1768,20 @@
 int ref_exists(const char *refname)
 {
 	unsigned char sha1[20];
 	return !!resolve_ref_unsafe(refname, RESOLVE_REF_READING, sha1, NULL);
 }
 
-static int filter_refs(const char *refname, const unsigned char *sha1, int flags,
-		       void *data)
+static int filter_refs(const char *refname, const struct object_id *oid,
+			   int flags, void *data)
 {
 	struct ref_filter *filter = (struct ref_filter *)data;
+
 	if (wildmatch(filter->pattern, refname, 0, NULL))
 		return 0;
-	return filter->fn(refname, sha1, flags, filter->cb_data);
+	return filter->fn(refname, oid, flags, filter->cb_data);
 }
 
 enum peel_status {
 	/* object was peeled successfully: */
 	PEEL_PEELED = 0,
 
@@ -1831,24 +1849,24 @@
 {
 	enum peel_status status;
 
 	if (entry->flag & REF_KNOWS_PEELED) {
 		if (repeel) {
 			entry->flag &= ~REF_KNOWS_PEELED;
-			hashclr(entry->u.value.peeled);
+			oidclr(&entry->u.value.peeled);
 		} else {
-			return is_null_sha1(entry->u.value.peeled) ?
+			return is_null_oid(&entry->u.value.peeled) ?
 				PEEL_NON_TAG : PEEL_PEELED;
 		}
 	}
 	if (entry->flag & REF_ISBROKEN)
 		return PEEL_BROKEN;
 	if (entry->flag & REF_ISSYMREF)
 		return PEEL_IS_SYMREF;
 
-	status = peel_object(entry->u.value.sha1, entry->u.value.peeled);
+	status = peel_object(entry->u.value.oid.hash, entry->u.value.peeled.hash);
 	if (status == PEEL_PEELED || status == PEEL_NON_TAG)
 		entry->flag |= REF_KNOWS_PEELED;
 	return status;
 }
 
 int peel_ref(const char *refname, unsigned char *sha1)
@@ -1857,13 +1875,13 @@
 	unsigned char base[20];
 
 	if (current_ref && (current_ref->name == refname
 			    || !strcmp(current_ref->name, refname))) {
 		if (peel_entry(current_ref, 0))
 			return -1;
-		hashcpy(sha1, current_ref->u.value.peeled);
+		hashcpy(sha1, current_ref->u.value.peeled.hash);
 		return 0;
 	}
 
 	if (read_ref_full(refname, RESOLVE_REF_READING, base, &flag))
 		return -1;
 
@@ -1877,13 +1895,13 @@
 	 */
 	if (flag & REF_ISPACKED) {
 		struct ref_entry *r = get_packed_ref(refname);
 		if (r) {
 			if (peel_entry(r, 0))
 				return -1;
-			hashcpy(sha1, r->u.value.peeled);
+			hashcpy(sha1, r->u.value.peeled.hash);
 			return 0;
 		}
 	}
 
 	return peel_object(base, sha1);
 }
@@ -1892,23 +1910,23 @@
 	FILE *fp;
 	const char *refname;
 	const struct string_list *refnames;
 	const char *msg_fmt;
 };
 
-static int warn_if_dangling_symref(const char *refname, const unsigned char *sha1,
+static int warn_if_dangling_symref(const char *refname, const struct object_id *oid,
 				   int flags, void *cb_data)
 {
 	struct warn_if_dangling_data *d = cb_data;
 	const char *resolves_to;
-	unsigned char junk[20];
+	struct object_id junk;
 
 	if (!(flags & REF_ISSYMREF))
 		return 0;
 
-	resolves_to = resolve_ref_unsafe(refname, 0, junk, NULL);
+	resolves_to = resolve_ref_unsafe(refname, 0, junk.hash, NULL);
 	if (!resolves_to
 	    || (d->refname
 		? strcmp(resolves_to, d->refname)
 		: !string_list_has_string(d->refnames, resolves_to))) {
 		return 0;
 	}
@@ -2022,24 +2040,24 @@
 
 	return do_for_each_entry(refs, base, do_one_ref, &data);
 }
 
 static int do_head_ref(const char *submodule, each_ref_fn fn, void *cb_data)
 {
-	unsigned char sha1[20];
+	struct object_id oid;
 	int flag;
 
 	if (submodule) {
-		if (resolve_gitlink_ref(submodule, "HEAD", sha1) == 0)
-			return fn("HEAD", sha1, 0, cb_data);
+		if (resolve_gitlink_ref(submodule, "HEAD", oid.hash) == 0)
+			return fn("HEAD", &oid, 0, cb_data);
 
 		return 0;
 	}
 
-	if (!read_ref_full("HEAD", RESOLVE_REF_READING, sha1, &flag))
-		return fn("HEAD", sha1, flag, cb_data);
+	if (!read_ref_full("HEAD", RESOLVE_REF_READING, oid.hash, &flag))
+		return fn("HEAD", &oid, flag, cb_data);
 
 	return 0;
 }
 
 int head_ref(each_ref_fn fn, void *cb_data)
 {
@@ -2108,18 +2126,18 @@
 }
 
 int head_ref_namespaced(each_ref_fn fn, void *cb_data)
 {
 	struct strbuf buf = STRBUF_INIT;
 	int ret = 0;
-	unsigned char sha1[20];
+	struct object_id oid;
 	int flag;
 
 	strbuf_addf(&buf, "%sHEAD", get_git_namespace());
-	if (!read_ref_full(buf.buf, RESOLVE_REF_READING, sha1, &flag))
-		ret = fn(buf.buf, sha1, flag, cb_data);
+	if (!read_ref_full(buf.buf, RESOLVE_REF_READING, oid.hash, &flag))
+		ret = fn(buf.buf, &oid, flag, cb_data);
 	strbuf_release(&buf);
 
 	return ret;
 }
 
 int for_each_namespaced_ref(each_ref_fn fn, void *cb_data)
@@ -2213,33 +2231,41 @@
 		rollback_lock_file(lock->lk);
 	free(lock->ref_name);
 	free(lock->orig_ref_name);
 	free(lock);
 }
 
-/* This function should make sure errno is meaningful on error */
-static struct ref_lock *verify_lock(struct ref_lock *lock,
-	const unsigned char *old_sha1, int mustexist)
+/*
+ * Verify that the reference locked by lock has the value old_sha1.
+ * Fail if the reference doesn't exist and mustexist is set. Return 0
+ * on success. On error, write an error message to err, set errno, and
+ * return a negative value.
+ */
+static int verify_lock(struct ref_lock *lock,
+		       const unsigned char *old_sha1, int mustexist,
+		       struct strbuf *err)
 {
+	assert(err);
+
 	if (read_ref_full(lock->ref_name,
 			  mustexist ? RESOLVE_REF_READING : 0,
-			  lock->old_sha1, NULL)) {
+			  lock->old_oid.hash, NULL)) {
 		int save_errno = errno;
-		error("Can't verify ref %s", lock->ref_name);
-		unlock_ref(lock);
+		strbuf_addf(err, "can't verify ref %s", lock->ref_name);
 		errno = save_errno;
-		return NULL;
+		return -1;
 	}
-	if (hashcmp(lock->old_sha1, old_sha1)) {
-		error("Ref %s is at %s but expected %s", lock->ref_name,
-			sha1_to_hex(lock->old_sha1), sha1_to_hex(old_sha1));
-		unlock_ref(lock);
+	if (hashcmp(lock->old_oid.hash, old_sha1)) {
+		strbuf_addf(err, "ref %s is at %s but expected %s",
+			    lock->ref_name,
+			    sha1_to_hex(lock->old_oid.hash),
+			    sha1_to_hex(old_sha1));
 		errno = EBUSY;
-		return NULL;
+		return -1;
 	}
-	return lock;
+	return 0;
 }
 
 static int remove_empty_directories(const char *file)
 {
 	/* we want to create a file but there is a directory there;
 	 * if that is an empty directory (or a directory that contains
@@ -2354,36 +2380,35 @@
 					    const unsigned char *old_sha1,
 					    const struct string_list *extras,
 					    const struct string_list *skip,
 					    unsigned int flags, int *type_p,
 					    struct strbuf *err)
 {
-	char *ref_file;
+	const char *ref_file;
 	const char *orig_refname = refname;
 	struct ref_lock *lock;
 	int last_errno = 0;
 	int type, lflags;
 	int mustexist = (old_sha1 && !is_null_sha1(old_sha1));
 	int resolve_flags = 0;
 	int attempts_remaining = 3;
 
 	assert(err);
 
 	lock = xcalloc(1, sizeof(struct ref_lock));
-	lock->lock_fd = -1;
 
 	if (mustexist)
 		resolve_flags |= RESOLVE_REF_READING;
 	if (flags & REF_DELETING) {
 		resolve_flags |= RESOLVE_REF_ALLOW_BAD_NAME;
 		if (flags & REF_NODEREF)
 			resolve_flags |= RESOLVE_REF_NO_RECURSE;
 	}
 
 	refname = resolve_ref_unsafe(refname, resolve_flags,
-				     lock->old_sha1, &type);
+				     lock->old_oid.hash, &type);
 	if (!refname && errno == EISDIR) {
 		/* we are trying to lock foo but we used to
 		 * have foo/bar which now does not exist;
 		 * it is normal for the empty directory 'foo'
 		 * to remain.
 		 */
@@ -2396,13 +2421,13 @@
 				strbuf_addf(err, "there are still refs under '%s'",
 					    orig_refname);
 
 			goto error_return;
 		}
 		refname = resolve_ref_unsafe(orig_refname, resolve_flags,
-					     lock->old_sha1, &type);
+					     lock->old_oid.hash, &type);
 	}
 	if (type_p)
 	    *type_p = type;
 	if (!refname) {
 		last_errno = errno;
 		if (last_errno != ENOTDIR ||
@@ -2416,13 +2441,13 @@
 	/*
 	 * If the ref did not exist and we are creating it, make sure
 	 * there is no existing packed ref whose name begins with our
 	 * refname, nor a packed ref whose name is a proper prefix of
 	 * our refname.
 	 */
-	if (is_null_sha1(lock->old_sha1) &&
+	if (is_null_oid(&lock->old_oid) &&
 	    verify_refname_available(refname, extras, skip,
 				     get_packed_refs(&ref_cache), err)) {
 		last_errno = ENOTDIR;
 		goto error_return;
 	}
 
@@ -2435,27 +2460,26 @@
 	}
 	lock->ref_name = xstrdup(refname);
 	lock->orig_ref_name = xstrdup(orig_refname);
 	ref_file = git_path("%s", refname);
 
  retry:
-	switch (safe_create_leading_directories(ref_file)) {
+	switch (safe_create_leading_directories_const(ref_file)) {
 	case SCLD_OK:
 		break; /* success */
 	case SCLD_VANISHED:
 		if (--attempts_remaining > 0)
 			goto retry;
 		/* fall through */
 	default:
 		last_errno = errno;
 		strbuf_addf(err, "unable to create directory for %s", ref_file);
 		goto error_return;
 	}
 
-	lock->lock_fd = hold_lock_file_for_update(lock->lk, ref_file, lflags);
-	if (lock->lock_fd < 0) {
+	if (hold_lock_file_for_update(lock->lk, ref_file, lflags) < 0) {
 		last_errno = errno;
 		if (errno == ENOENT && --attempts_remaining > 0)
 			/*
 			 * Maybe somebody just deleted one of the
 			 * directories leading to ref_file.  Try
 			 * again:
@@ -2463,13 +2487,17 @@
 			goto retry;
 		else {
 			unable_to_lock_message(ref_file, errno, err);
 			goto error_return;
 		}
 	}
-	return old_sha1 ? verify_lock(lock, old_sha1, mustexist) : lock;
+	if (old_sha1 && verify_lock(lock, old_sha1, mustexist, err)) {
+		last_errno = errno;
+		goto error_return;
+	}
+	return lock;
 
  error_return:
 	unlock_ref(lock);
 	errno = last_errno;
 	return NULL;
 }
@@ -2493,24 +2521,34 @@
 {
 	enum peel_status peel_status = peel_entry(entry, 0);
 
 	if (peel_status != PEEL_PEELED && peel_status != PEEL_NON_TAG)
 		error("internal error: %s is not a valid packed reference!",
 		      entry->name);
-	write_packed_entry(cb_data, entry->name, entry->u.value.sha1,
+	write_packed_entry(cb_data, entry->name, entry->u.value.oid.hash,
 			   peel_status == PEEL_PEELED ?
-			   entry->u.value.peeled : NULL);
+			   entry->u.value.peeled.hash : NULL);
 	return 0;
 }
 
 /* This should return a meaningful errno on failure */
 int lock_packed_refs(int flags)
 {
+	static int timeout_configured = 0;
+	static int timeout_value = 1000;
+
 	struct packed_ref_cache *packed_ref_cache;
 
-	if (hold_lock_file_for_update(&packlock, git_path("packed-refs"), flags) < 0)
+	if (!timeout_configured) {
+		git_config_get_int("core.packedrefstimeout", &timeout_value);
+		timeout_configured = 1;
+	}
+
+	if (hold_lock_file_for_update_timeout(
+			    &packlock, git_path("packed-refs"),
+			    flags, timeout_value) < 0)
 		return -1;
 	/*
 	 * Get the current packed-refs while holding the lock.  If the
 	 * packed-refs file has been modified since we last read it,
 	 * this will automatically invalidate the cache and re-read
 	 * the packed-refs file.
@@ -2602,30 +2640,30 @@
 		return 0;
 
 	/* Add a packed ref cache entry equivalent to the loose entry. */
 	peel_status = peel_entry(entry, 1);
 	if (peel_status != PEEL_PEELED && peel_status != PEEL_NON_TAG)
 		die("internal error peeling reference %s (%s)",
-		    entry->name, sha1_to_hex(entry->u.value.sha1));
+		    entry->name, oid_to_hex(&entry->u.value.oid));
 	packed_entry = find_ref(cb->packed_refs, entry->name);
 	if (packed_entry) {
 		/* Overwrite existing packed entry with info from loose entry */
 		packed_entry->flag = REF_ISPACKED | REF_KNOWS_PEELED;
-		hashcpy(packed_entry->u.value.sha1, entry->u.value.sha1);
+		oidcpy(&packed_entry->u.value.oid, &entry->u.value.oid);
 	} else {
-		packed_entry = create_ref_entry(entry->name, entry->u.value.sha1,
+		packed_entry = create_ref_entry(entry->name, entry->u.value.oid.hash,
 						REF_ISPACKED | REF_KNOWS_PEELED, 0);
 		add_ref(cb->packed_refs, packed_entry);
 	}
-	hashcpy(packed_entry->u.value.peeled, entry->u.value.peeled);
+	oidcpy(&packed_entry->u.value.peeled, &entry->u.value.peeled);
 
 	/* Schedule the loose reference for pruning if requested. */
 	if ((cb->flags & PACK_REFS_PRUNE)) {
 		int namelen = strlen(entry->name) + 1;
 		struct ref_to_prune *n = xcalloc(1, sizeof(*n) + namelen);
-		hashcpy(n->sha1, entry->u.value.sha1);
+		hashcpy(n->sha1, entry->u.value.oid.hash);
 		strcpy(n->name, entry->name);
 		n->next = cb->ref_to_prune;
 		cb->ref_to_prune = n;
 	}
 	return 0;
 }
@@ -2810,13 +2848,13 @@
 
 static int rename_tmp_log(const char *newrefname)
 {
 	int attempts_remaining = 4;
 
  retry:
-	switch (safe_create_leading_directories(git_path("logs/%s", newrefname))) {
+	switch (safe_create_leading_directories_const(git_path("logs/%s", newrefname))) {
 	case SCLD_OK:
 		break; /* success */
 	case SCLD_VANISHED:
 		if (--attempts_remaining > 0)
 			goto retry;
 		/* fall through */
@@ -2930,13 +2968,13 @@
 	lock = lock_ref_sha1_basic(newrefname, NULL, NULL, NULL, 0, NULL, &err);
 	if (!lock) {
 		error("unable to rename '%s' to '%s': %s", oldrefname, newrefname, err.buf);
 		strbuf_release(&err);
 		goto rollback;
 	}
-	hashcpy(lock->old_sha1, orig_sha1);
+	hashcpy(lock->old_oid.hash, orig_sha1);
 
 	if (write_ref_to_lockfile(lock, orig_sha1) ||
 	    commit_ref_update(lock, orig_sha1, logmsg)) {
 		error("unable to write current sha1 into %s", newrefname);
 		goto rollback;
 	}
@@ -2971,21 +3009,19 @@
 }
 
 static int close_ref(struct ref_lock *lock)
 {
 	if (close_lock_file(lock->lk))
 		return -1;
-	lock->lock_fd = -1;
 	return 0;
 }
 
 static int commit_ref(struct ref_lock *lock)
 {
 	if (commit_lock_file(lock->lk))
 		return -1;
-	lock->lock_fd = -1;
 	return 0;
 }
 
 /*
  * copy the reflog message msg to buf, which has been allocated sufficiently
  * large, while cleaning up the whitespaces.  Especially, convert LF to space,
@@ -3010,17 +3046,21 @@
 		cp--;
 	*cp++ = '\n';
 	return cp - buf;
 }
 
 /* This function must set a meaningful errno on failure */
-int log_ref_setup(const char *refname, char *logfile, int bufsize)
+int log_ref_setup(const char *refname, struct strbuf *sb_logfile)
 {
 	int logfd, oflags = O_APPEND | O_WRONLY;
+	char *logfile;
 
-	git_snpath(logfile, bufsize, "logs/%s", refname);
+	strbuf_git_path(sb_logfile, "logs/%s", refname);
+	logfile = sb_logfile->buf;
+	/* make sure the rest of the function can't change "logfile" */
+	sb_logfile = NULL;
 	if (log_all_ref_updates &&
 	    (starts_with(refname, "refs/heads/") ||
 	     starts_with(refname, "refs/remotes/") ||
 	     starts_with(refname, "refs/notes/") ||
 	     !strcmp(refname, "HEAD"))) {
 		if (safe_create_leading_directories(logfile) < 0) {
@@ -3085,24 +3125,28 @@
 	if (written != len)
 		return -1;
 
 	return 0;
 }
 
-static int log_ref_write(const char *refname, const unsigned char *old_sha1,
-			 const unsigned char *new_sha1, const char *msg)
+static int log_ref_write_1(const char *refname, const unsigned char *old_sha1,
+			   const unsigned char *new_sha1, const char *msg,
+			   struct strbuf *sb_log_file)
 {
 	int logfd, result, oflags = O_APPEND | O_WRONLY;
-	char log_file[PATH_MAX];
+	char *log_file;
 
 	if (log_all_ref_updates < 0)
 		log_all_ref_updates = !is_bare_repository();
 
-	result = log_ref_setup(refname, log_file, sizeof(log_file));
+	result = log_ref_setup(refname, sb_log_file);
 	if (result)
 		return result;
+	log_file = sb_log_file->buf;
+	/* make sure the rest of the function can't change "log_file" */
+	sb_log_file = NULL;
 
 	logfd = open(log_file, oflags);
 	if (logfd < 0)
 		return 0;
 	result = log_ref_write_fd(logfd, old_sha1, new_sha1,
 				  git_committer_info(0), msg);
@@ -3119,12 +3163,21 @@
 		errno = save_errno;
 		return -1;
 	}
 	return 0;
 }
 
+static int log_ref_write(const char *refname, const unsigned char *old_sha1,
+			 const unsigned char *new_sha1, const char *msg)
+{
+	struct strbuf sb = STRBUF_INIT;
+	int ret = log_ref_write_1(refname, old_sha1, new_sha1, msg, &sb);
+	strbuf_release(&sb);
+	return ret;
+}
+
 int is_branch(const char *refname)
 {
 	return !strcmp(refname, "HEAD") || starts_with(refname, "refs/heads/");
 }
 
 /*
@@ -3149,14 +3202,14 @@
 		error("Trying to write non-commit object %s to branch %s",
 			sha1_to_hex(sha1), lock->ref_name);
 		unlock_ref(lock);
 		errno = EINVAL;
 		return -1;
 	}
-	if (write_in_full(lock->lock_fd, sha1_to_hex(sha1), 40) != 40 ||
-	    write_in_full(lock->lock_fd, &term, 1) != 1 ||
+	if (write_in_full(lock->lk->fd, sha1_to_hex(sha1), 40) != 40 ||
+	    write_in_full(lock->lk->fd, &term, 1) != 1 ||
 	    close_ref(lock) < 0) {
 		int save_errno = errno;
 		error("Couldn't write %s", lock->lk->filename.buf);
 		unlock_ref(lock);
 		errno = save_errno;
 		return -1;
@@ -3170,15 +3223,15 @@
  * necessary, using the specified lockmsg (which can be NULL).
  */
 static int commit_ref_update(struct ref_lock *lock,
 			     const unsigned char *sha1, const char *logmsg)
 {
 	clear_loose_ref_cache(&ref_cache);
-	if (log_ref_write(lock->ref_name, lock->old_sha1, sha1, logmsg) < 0 ||
+	if (log_ref_write(lock->ref_name, lock->old_oid.hash, sha1, logmsg) < 0 ||
 	    (strcmp(lock->ref_name, lock->orig_ref_name) &&
-	     log_ref_write(lock->orig_ref_name, lock->old_sha1, sha1, logmsg) < 0)) {
+	     log_ref_write(lock->orig_ref_name, lock->old_oid.hash, sha1, logmsg) < 0)) {
 		unlock_ref(lock);
 		return -1;
 	}
 	if (strcmp(lock->orig_ref_name, "HEAD") != 0) {
 		/*
 		 * Special hack: If a branch is updated directly and HEAD
@@ -3196,13 +3249,13 @@
 		int head_flag;
 		const char *head_ref;
 		head_ref = resolve_ref_unsafe("HEAD", RESOLVE_REF_READING,
 					      head_sha1, &head_flag);
 		if (head_ref && (head_flag & REF_ISSYMREF) &&
 		    !strcmp(head_ref, lock->ref_name))
-			log_ref_write("HEAD", lock->old_sha1, sha1, logmsg);
+			log_ref_write("HEAD", lock->old_oid.hash, sha1, logmsg);
 	}
 	if (commit_ref(lock)) {
 		error("Couldn't set %s", lock->ref_name);
 		unlock_ref(lock);
 		return -1;
 	}
@@ -3588,17 +3641,18 @@
 			; /* silently ignore */
 		} else {
 			if (S_ISDIR(st.st_mode)) {
 				strbuf_addch(name, '/');
 				retval = do_for_each_reflog(name, fn, cb_data);
 			} else {
-				unsigned char sha1[20];
-				if (read_ref_full(name->buf, 0, sha1, NULL))
+				struct object_id oid;
+
+				if (read_ref_full(name->buf, 0, oid.hash, NULL))
 					retval = error("bad ref for %s", name->buf);
 				else
-					retval = fn(name->buf, sha1, 0, cb_data);
+					retval = fn(name->buf, &oid, 0, cb_data);
 			}
 			if (retval)
 				break;
 		}
 		strbuf_setlen(name, oldlen);
 	}
@@ -3882,36 +3936,36 @@
 			char *reason;
 
 			ret = (errno == ENOTDIR)
 				? TRANSACTION_NAME_CONFLICT
 				: TRANSACTION_GENERIC_ERROR;
 			reason = strbuf_detach(err, NULL);
-			strbuf_addf(err, "Cannot lock ref '%s': %s",
+			strbuf_addf(err, "cannot lock ref '%s': %s",
 				    update->refname, reason);
 			free(reason);
 			goto cleanup;
 		}
 		if ((update->flags & REF_HAVE_NEW) &&
 		    !(update->flags & REF_DELETING)) {
 			int overwriting_symref = ((update->type & REF_ISSYMREF) &&
 						  (update->flags & REF_NODEREF));
 
 			if (!overwriting_symref &&
-			    !hashcmp(update->lock->old_sha1, update->new_sha1)) {
+			    !hashcmp(update->lock->old_oid.hash, update->new_sha1)) {
 				/*
 				 * The reference already has the desired
 				 * value, so we don't need to write it.
 				 */
 			} else if (write_ref_to_lockfile(update->lock,
 							 update->new_sha1)) {
 				/*
 				 * The lock was freed upon failure of
 				 * write_ref_to_lockfile():
 				 */
 				update->lock = NULL;
-				strbuf_addf(err, "Cannot update the ref '%s'.",
+				strbuf_addf(err, "cannot update the ref '%s'.",
 					    update->refname);
 				ret = TRANSACTION_GENERIC_ERROR;
 				goto cleanup;
 			} else {
 				update->flags |= REF_NEEDS_COMMIT;
 			}
@@ -4234,15 +4288,15 @@
 			!is_null_sha1(cb.last_kept_sha1);
 
 		if (close_lock_file(&reflog_lock)) {
 			status |= error("couldn't write %s: %s", log_file,
 					strerror(errno));
 		} else if (update &&
-			(write_in_full(lock->lock_fd,
+			   (write_in_full(lock->lk->fd,
 				sha1_to_hex(cb.last_kept_sha1), 40) != 40 ||
-			 write_str_in_full(lock->lock_fd, "\n") != 1 ||
+			 write_str_in_full(lock->lk->fd, "\n") != 1 ||
 			 close_ref(lock) < 0)) {
 			status |= error("couldn't write %s",
 					lock->lk->filename.buf);
 			rollback_lock_file(&reflog_lock);
 		} else if (commit_lock_file(&reflog_lock)) {
 			status |= error("unable to commit reflog '%s' (%s)",
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/refs.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/refs.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/refs.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/refs.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/refs.h	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/refs.h	2015-07-28 04:34:56.000000000 +0800
@@ -64,13 +64,13 @@
  * The signature for the callback function for the for_each_*()
  * functions below.  The memory pointed to by the refname and sha1
  * arguments is only guaranteed to be valid for the duration of a
  * single callback invocation.
  */
 typedef int each_ref_fn(const char *refname,
-			const unsigned char *sha1, int flags, void *cb_data);
+			const struct object_id *oid, int flags, void *cb_data);
 
 /*
  * The following functions invoke the specified callback function for
  * each reference indicated.  If the function ever returns a nonzero
  * value, stop the iteration and return that value.  Please note that
  * it is not safe to modify references while an iteration is in
@@ -188,13 +188,13 @@
  */
 #define REF_NODEREF	0x01
 
 /*
  * Setup reflog before using. Set errno to something meaningful on failure.
  */
-int log_ref_setup(const char *refname, char *logfile, int bufsize);
+int log_ref_setup(const char *refname, struct strbuf *logfile);
 
 /** Reads log for the value of ref during at_time. **/
 extern int read_ref_at(const char *refname, unsigned int flags,
 		       unsigned long at_time, int cnt,
 		       unsigned char *sha1, char **msg,
 		       unsigned long *cutoff_time, int *cutoff_tz, int *cutoff_cnt);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/refs.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/refs.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/RelNotes /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/RelNotes
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/RelNotes	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/RelNotes	2015-07-28 04:34:56.000000000 +0800
@@ -1,12 +1,563 @@
-Git v2.4.12 Release Notes
-=========================
+Git 2.5 Release Notes
+=====================
 
-Fixes since v2.4.11
--------------------
+Updates since v2.4
+------------------
 
- * "git-shell" rejects a request to serve a repository whose name
-   begins with a dash, which makes it no longer possible to get it
-   confused into spawning service programs like "git-upload-pack" with
-   an option like "--help", which in turn would spawn an interactive
-   pager, instead of working with the repository user asked to access
-   (i.e. the one whose name is "--help").
+UI, Workflows & Features
+
+ * The bash completion script (in contrib/) learned a few options that
+   "git revert" takes.
+
+ * Whitespace breakages in deleted and context lines can also be
+   painted in the output of "git diff" and friends with the new
+   --ws-error-highlight option.
+
+ * List of commands shown by "git help" are grouped along the workflow
+   elements to help early learners.
+
+ * "git p4" now detects the filetype (e.g. binary) correctly even when
+   the files are opened exclusively.
+
+ * git p4 attempts to better handle branches in Perforce.
+
+ * "git p4" learned "--changes-block-size <n>" to read the changes in
+   chunks from Perforce, instead of making one call to "p4 changes"
+   that may trigger "too many rows scanned" error from Perforce.
+
+ * More workaround for Perforce's row number limit in "git p4".
+
+ * Unlike "$EDITOR" and "$GIT_EDITOR" that can hold the path to the
+   command and initial options (e.g. "/path/to/emacs -nw"), 'git p4'
+   did not let the shell interpolate the contents of the environment
+   variable that name the editor "$P4EDITOR" (and "$EDITOR", too).
+   This release makes it in line with the rest of Git, as well as with
+   Perforce.
+
+ * A new short-hand <branch>@{push} denotes the remote-tracking branch
+   that tracks the branch at the remote the <branch> would be pushed
+   to.
+
+ * "git show-branch --topics HEAD" (with no other arguments) did not
+   do anything interesting.  Instead, contrast the given revision
+   against all the local branches by default.
+
+ * A replacement for contrib/workdir/git-new-workdir that does not
+   rely on symbolic links and make sharing of objects and refs safer
+   by making the borrowee and borrowers aware of each other.
+
+   Consider this as still an experimental feature; its UI is still
+   likely to change.
+
+ * Tweak the sample "store" backend of the credential helper to honor
+   XDG configuration file locations when specified.
+
+ * A heuristic we use to catch mistyped paths on the command line
+   "git <cmd> <revs> <pathspec>" is to make sure that all the non-rev
+   parameters in the later part of the command line are names of the
+   files in the working tree, but that means "git grep $str -- \*.c"
+   must always be disambiguated with "--", because nobody sane will
+   create a file whose name literally is asterisk-dot-see.  Loosen the
+   heuristic to declare that with a wildcard string the user likely
+   meant to give us a pathspec.
+
+ * "git merge FETCH_HEAD" learned that the previous "git fetch" could
+   be to create an Octopus merge, i.e. recording multiple branches
+   that are not marked as "not-for-merge"; this allows us to lose an
+   old style invocation "git merge <msg> HEAD $commits..." in the
+   implementation of "git pull" script; the old style syntax can now
+   be deprecated (but not removed yet).
+
+ * Filter scripts were run with SIGPIPE disabled on the Git side,
+   expecting that they may not read what Git feeds them to filter.
+   We however treated a filter that does not read its input fully
+   before exiting as an error.  We no longer do and ignore EPIPE
+   when writing to feed the filter scripts.
+
+   This changes semantics, but arguably in a good way.  If a filter
+   can produce its output without fully consuming its input using
+   whatever magic, we now let it do so, instead of diagnosing it
+   as a programming error.
+
+ * Instead of dying immediately upon failing to obtain a lock, the
+   locking (of refs etc) retries after a short while with backoff.
+
+ * Introduce http.<url>.SSLCipherList configuration variable to tweak
+   the list of cipher suite to be used with libcURL when talking with
+   https:// sites.
+
+ * "git subtree" script (in contrib/) used "echo -n" to produce
+   progress messages in a non-portable way.
+
+ * "git subtree" script (in contrib/) does not have --squash option
+   when pushing, but the documentation and help text pretended as if
+   it did.
+
+ * The Git subcommand completion (in contrib/) no longer lists credential
+   helpers among candidates; they are not something the end user would
+   invoke interactively.
+
+ * The index file can be taught with "update-index --untracked-cache"
+   to optionally remember already seen untracked files, in order to
+   speed up "git status" in a working tree with tons of cruft.
+
+ * "git mergetool" learned to drive WinMerge as a backend.
+
+ * "git upload-pack" that serves "git fetch" can be told to serve
+   commits that are not at the tip of any ref, as long as they are
+   reachable from a ref, with uploadpack.allowReachableSHA1InWant
+   configuration variable.
+
+ * "git cat-file --batch(-check)" learned the "--follow-symlinks"
+   option that follows an in-tree symbolic link when asked about an
+   object via extended SHA-1 syntax, e.g. HEAD:RelNotes that points at
+   Documentation/RelNotes/2.5.0.txt.  With the new option, the command
+   behaves as if HEAD:Documentation/RelNotes/2.5.0.txt was given as
+   input instead.
+
+   Consider this as still an experimental and incomplete feature:
+
+    - We may want to do the same for in-index objects, e.g.
+      asking for :RelNotes with this option should give
+      :Documentation/RelNotes/2.5.0.txt, too
+
+    - "git cat-file --follow-symlinks blob HEAD:RelNotes"
+      may also be something we want to allow in the future.
+
+ * "git send-email" learned the alias file format used by the sendmail
+   program (in a simplified form; we obviously do not feed pipes).
+
+ * Traditionally, external low-level 3-way merge drivers are expected
+   to produce their results based solely on the contents of the three
+   variants given in temporary files named by %O, %A and %B on their
+   command line.  Additionally allow them to look at the final path
+   (given by %P).
+
+ * "git blame" learned blame.showEmail configuration variable.
+
+ * "git apply" cannot diagnose a patch corruption when the breakage is
+   to mark the length of the hunk shorter than it really is on the
+   hunk header line "@@ -l,k +m,n @@"; one special case it could is
+   when the hunk becomes no-op (e.g. k == n == 2 for two-line context
+   patch output), and it learned to do so in this special case.
+
+ * Add the "--allow-unknown-type" option to "cat-file" to allow
+   inspecting loose objects of an experimental or a broken type.
+
+ * Many long-running operations show progress eye-candy, even when
+   they are later backgrounded.  Hide the eye-candy when the process
+   is sent to the background instead.
+   (merge a4fb76c lm/squelch-bg-progress later to maint).
+
+
+Performance, Internal Implementation, Development Support etc.
+
+ * "unsigned char [20]" used throughout the code to represent object
+   names are being converted into a semi-opaque "struct object_id".
+   This effort is expected to interfere with other topics in flight,
+   but hopefully will give us one extra level of abstraction in the
+   end, when completed.
+
+ * for_each_ref() callback functions were taught to name the objects
+   not with "unsigned char sha1[20]" but with "struct object_id".
+
+ * Catch a programmer mistake to feed a pointer not an array to
+   ARRAY_SIZE() macro, by using a couple of GCC extensions.
+
+ * Some error messages in "git config" were emitted without calling
+   the usual error() facility.
+
+ * When "add--interactive" splits a hunk into two overlapping hunks
+   and then let the user choose only one, it sometimes feeds an
+   incorrect patch text to "git apply".  Add tests to demonstrate
+   this.
+
+   I have a slight suspicion that this may be $gmane/87202 coming back
+   and biting us (I seem to have said "let's run with this and see
+   what happens" back then).
+
+ * More line-ending tests.
+
+ * An earlier rewrite to use strbuf_getwholeline() instead of fgets(3)
+   to read packed-refs file revealed that the former is unacceptably
+   inefficient.  It has been optimized by using getdelim(3) when
+   available.
+
+ * The refs API uses ref_lock struct which had its own "int fd", even
+   though the same file descriptor was in the lock struct it contains.
+   Clean-up the code to lose this redundant field.
+
+ * There was a dead code that used to handle "git pull --tags" and
+   show special-cased error message, which was made irrelevant when
+   the semantics of the option changed back in Git 1.9 days.
+   (merge 19d122b pt/pull-tags-error-diag later to maint).
+
+ * Help us to find broken test script that splits the body part of the
+   test by mistaken use of wrong kind of quotes.
+   (merge d93d5d5 jc/test-prereq-validate later to maint).
+
+ * Developer support to automatically detect broken &&-chain in the
+   test scripts is now turned on by default.
+   (merge 92b269f jk/test-chain-lint later to maint).
+
+ * Error reporting mechanism used in "refs" API has been made more
+   consistent.
+
+ * "git pull" has more test coverage now.
+
+ * "git pull" has become more aware of the options meant for
+   underlying "git fetch" and then learned to use parse-options
+   parser.
+
+ * Clarify in the Makefile a guideline to decide use of USE_NSEC.
+
+Also contains various documentation updates and code clean-ups.
+
+
+Fixes since v2.4
+----------------
+
+Unless otherwise noted, all the fixes since v2.4 in the maintenance
+track are contained in this release (see the maintenance releases'
+notes for details).
+
+ * Git 2.4 broke setting verbosity and progress levels on "git clone"
+   with native transports.
+   (merge 822f0c4 mh/clone-verbosity-fix later to maint).
+
+ * "git add -e" did not allow the user to abort the operation by
+   killing the editor.
+   (merge cb64800 jk/add-e-kill-editor later to maint).
+
+ * Memory usage of "git index-pack" has been trimmed by tens of
+   per-cent.
+   (merge f0e7f11 nd/slim-index-pack-memory-usage later to maint).
+
+ * "git rev-list --objects $old --not --all" to see if everything that
+   is reachable from $old is already connected to the existing refs
+   was very inefficient.
+   (merge b6e8a3b jk/still-interesting later to maint).
+
+ * "hash-object --literally" introduced in v2.2 was not prepared to
+   take a really long object type name.
+   (merge 1427a7f jc/hash-object later to maint).
+
+ * "git rebase --quiet" was not quite quiet when there is nothing to
+   do.
+   (merge 22946a9 jk/rebase-quiet-noop later to maint).
+
+ * The completion for "log --decorate=" parameter value was incorrect.
+   (merge af16bda sg/complete-decorate-full-not-long later to maint).
+
+ * "filter-branch" corrupted commit log message that ends with an
+   incomplete line on platforms with some "sed" implementations that
+   munge such a line.  Work it around by avoiding to use "sed".
+   (merge df06201 jk/filter-branch-use-of-sed-on-incomplete-line later to maint).
+
+ * "git daemon" fails to build from the source under NO_IPV6
+   configuration (regression in 2.4).
+   (merge d358f77 jc/daemon-no-ipv6-for-2.4.1 later to maint).
+
+ * Some time ago, "git blame" (incorrectly) lost the convert_to_git()
+   call when synthesizing a fake "tip" commit that represents the
+   state in the working tree, which broke folks who record the history
+   with LF line ending to make their project portable across platforms
+   while terminating lines in their working tree files with CRLF for
+   their platform.
+   (merge 4bf256d tb/blame-resurrect-convert-to-git later to maint).
+
+ * We avoid setting core.worktree when the repository location is the
+   ".git" directory directly at the top level of the working tree, but
+   the code misdetected the case in which the working tree is at the
+   root level of the filesystem (which arguably is a silly thing to
+   do, but still valid).
+   (merge 84ccad8 jk/init-core-worktree-at-root later to maint).
+
+ * "git commit --date=now" or anything that relies on approxidate lost
+   the daylight-saving-time offset.
+   (merge f6e6362 jc/epochtime-wo-tz later to maint).
+
+ * Access to objects in repositories that borrow from another one on a
+   slow NFS server unnecessarily got more expensive due to recent code
+   becoming more cautious in a naive way not to lose objects to pruning.
+   (merge ee1c6c3 jk/prune-mtime later to maint).
+
+ * The codepaths that read .gitignore and .gitattributes files have been
+   taught that these files encoded in UTF-8 may have UTF-8 BOM marker at
+   the beginning; this makes it in line with what we do for configuration
+   files already.
+   (merge 27547e5 cn/bom-in-gitignore later to maint).
+
+ * a few helper scripts in the test suite did not report errors
+   correctly.
+   (merge de248e9 ep/fix-test-lib-functions-report later to maint).
+
+ * The default $HOME/.gitconfig file created upon "git config --global"
+   that edits it had incorrectly spelled user.name and user.email
+   entries in it.
+   (merge 7e11052 oh/fix-config-default-user-name-section later to maint).
+
+ * "git cat-file bl $blob" failed to barf even though there is no
+   object type that is "bl".
+   (merge b7994af jk/type-from-string-gently later to maint).
+
+ * The usual "git diff" when seeing a file turning into a directory
+   showed a patchset to remove the file and create all files in the
+   directory, but "git diff --no-index" simply refused to work.  Also,
+   when asked to compare a file and a directory, imitate POSIX "diff"
+   and compare the file with the file with the same name in the
+   directory, instead of refusing to run.
+   (merge 0615173 jc/diff-no-index-d-f later to maint).
+
+ * "git rebase -i" moved the "current" command from "todo" to "done" a
+   bit too prematurely, losing a step when a "pick" did not even start.
+   (merge 8cbc57c ph/rebase-i-redo later to maint).
+
+ * The connection initiation code for "ssh" transport tried to absorb
+   differences between the stock "ssh" and Putty-supplied "plink" and
+   its derivatives, but the logic to tell that we are using "plink"
+   variants were too loose and falsely triggered when "plink" appeared
+   anywhere in the path (e.g. "/home/me/bin/uplink/ssh").
+   (merge baaf233 bc/connect-plink later to maint).
+
+ * We have prepended $GIT_EXEC_PATH and the path "git" is installed in
+   (typically "/usr/bin") to $PATH when invoking subprograms and hooks
+   for almost eternity, but the original use case the latter tried to
+   support was semi-bogus (i.e. install git to /opt/foo/git and run it
+   without having /opt/foo on $PATH), and more importantly it has
+   become less and less relevant as Git grew more mainstream (i.e. the
+   users would _want_ to have it on their $PATH).  Stop prepending the
+   path in which "git" is installed to users' $PATH, as that would
+   interfere the command search order people depend on (e.g. they may
+   not like versions of programs that are unrelated to Git in /usr/bin
+   and want to override them by having different ones in /usr/local/bin
+   and have the latter directory earlier in their $PATH).
+   (merge a0b4507 jk/git-no-more-argv0-path-munging later to maint).
+
+ * core.excludesfile (defaulting to $XDG_HOME/git/ignore) is supposed
+   to be overridden by repository-specific .git/info/exclude file, but
+   the order was swapped from the beginning. This belatedly fixes it.
+   (merge 099d2d8 jc/gitignore-precedence later to maint).
+
+ * There was a commented-out (instead of being marked to expect
+   failure) test that documented a breakage that was fixed since the
+   test was written; turn it into a proper test.
+   (merge 66d2e04 sb/t1020-cleanup later to maint).
+
+ * The "log --decorate" enhancement in Git 2.4 that shows the commit
+   at the tip of the current branch e.g. "HEAD -> master", did not
+   work with --decorate=full.
+   (merge 429ad20 mg/log-decorate-HEAD later to maint).
+
+ * The ref API did not handle cases where 'refs/heads/xyzzy/frotz' is
+   removed at the same time as 'refs/heads/xyzzy' is added (or vice
+   versa) very well.
+   (merge c628edf mh/ref-directory-file later to maint).
+
+ * Multi-ref transaction support we merged a few releases ago
+   unnecessarily kept many file descriptors open, risking to fail with
+   resource exhaustion.  This is for 2.4.x track.
+   (merge 185ce3a mh/write-refs-sooner-2.4 later to maint).
+
+ * "git bundle verify" did not diagnose extra parameters on the
+   command line.
+   (merge 7886cfa ps/bundle-verify-arg later to maint).
+
+ * Various documentation mark-up fixes to make the output more
+   consistent in general and also make AsciiDoctor (an alternative
+   formatter) happier.
+   (merge d0258b9 jk/asciidoc-markup-fix later to maint).
+   (merge ad3967a jk/stripspace-asciidoctor-fix later to maint).
+   (merge 975e382 ja/tutorial-asciidoctor-fix later to maint).
+
+ * The code to read pack-bitmap wanted to allocate a few hundred
+   pointers to a structure, but by mistake allocated and leaked memory
+   enough to hold that many actual structures.  Correct the allocation
+   size and also have it on stack, as it is small enough.
+   (merge 599dc76 rs/plug-leak-in-pack-bitmaps later to maint).
+
+ * The pull.ff configuration was supposed to override the merge.ff
+   configuration, but it didn't.
+   (merge db9bb28 pt/pull-ff-vs-merge-ff later to maint).
+
+ * "git pull --log" and "git pull --no-log" worked as expected, but
+   "git pull --log=20" did not.
+   (merge 5061a44 pt/pull-log-n later to maint).
+
+ * "git rerere forget" in a repository without rerere enabled gave a
+   cryptic error message; it should be a silent no-op instead.
+   (merge 0544574 jk/rerere-forget-check-enabled later to maint).
+
+ * "git rebase -i" fired post-rewrite hook when it shouldn't (namely,
+   when it was told to stop sequencing with 'exec' insn).
+   (merge 141ff8f mm/rebase-i-post-rewrite-exec later to maint).
+
+ * Clarify that "log --raw" and "log --format=raw" are unrelated
+   concepts.
+   (merge 92de921 mm/log-format-raw-doc later to maint).
+
+ * Make "git stash something --help" error out, so that users can
+   safely say "git stash drop --help".
+   (merge 5ba2831 jk/stash-options later to maint).
+
+ * The clean/smudge interface did not work well when filtering an
+   empty contents (failed and then passed the empty input through).
+   It can be argued that a filter that produces anything but empty for
+   an empty input is nonsense, but if the user wants to do strange
+   things, then why not?
+   (merge f6a1e1e jh/filter-empty-contents later to maint).
+
+ * Communication between the HTTP server and http_backend process can
+   lead to a dead-lock when relaying a large ref negotiation request.
+   Diagnose the situation better, and mitigate it by reading such a
+   request first into core (to a reasonable limit).
+   (merge 636614f jk/http-backend-deadlock later to maint).
+
+ * "git clean pathspec..." tried to lstat(2) and complain even for
+   paths outside the given pathspec.
+   (merge 838d6a9 dt/clean-pathspec-filter-then-lstat later to maint).
+
+ * Recent "git prune" traverses young unreachable objects to safekeep
+   old objects in the reachability chain from them, which sometimes
+   caused error messages that are unnecessarily alarming.
+   (merge ce4e7b2 jk/squelch-missing-link-warning-for-unreachable later to maint).
+
+ * The configuration reader/writer uses mmap(2) interface to access
+   the files; when we find a directory, it barfed with "Out of memory?".
+   (merge 9ca0aaf jk/diagnose-config-mmap-failure later to maint).
+
+ * "color.diff.plain" was a misnomer; give it 'color.diff.context' as
+   a more logical synonym.
+   (merge 8dbf3eb jk/color-diff-plain-is-context later to maint).
+
+ * The setup code used to die when core.bare and core.worktree are set
+   inconsistently, even for commands that do not need working tree.
+   (merge fada767 jk/die-on-bogus-worktree-late later to maint).
+
+ * Recent Mac OS X updates breaks the logic to detect that the machine
+   is on the AC power in the sample pre-auto-gc script.
+   (merge c54c7b3 pa/auto-gc-mac-osx later to maint).
+
+ * "git commit --cleanup=scissors" was not careful enough to protect
+   against getting fooled by a line that looked like scissors.
+   (merge fbfa097 sg/commit-cleanup-scissors later to maint).
+
+ * "Have we lost a race with competing repack?" check was too
+   expensive, especially while receiving a huge object transfer
+   that runs index-pack (e.g. "clone" or "fetch").
+   (merge 0eeb077 jk/index-pack-reduce-recheck later to maint).
+
+ * The tcsh completion writes a bash scriptlet but that would have
+   failed for users with noclobber set.
+   (merge 0b1f688 af/tcsh-completion-noclobber later to maint).
+
+ * "git for-each-ref" reported "missing object" for 0{40} when it
+   encounters a broken ref.  The lack of object whose name is 0{40} is
+   not the problem; the ref being broken is.
+   (merge 501cf47 mh/reporting-broken-refs-from-for-each-ref later to maint).
+
+ * Various fixes around "git am" that applies a patch to a history
+   that is not there yet.
+   (merge 6ea3b67 pt/am-abort-fix later to maint).
+
+ * "git fsck" used to ignore missing or invalid objects recorded in reflog.
+   (merge 19bf6c9 mh/fsck-reflog-entries later to maint).
+
+ * "git format-patch --ignore-if-upstream A..B" did not like to be fed
+   tags as boundary commits.
+   (merge 9b7a61d jc/do-not-feed-tags-to-clear-commit-marks later to maint).
+
+ * "git fetch --depth=<depth>" and "git clone --depth=<depth>" issued
+   a shallow transfer request even to an upload-pack that does not
+   support the capability.
+   (merge eb86a50 me/fetch-into-shallow-safety later to maint).
+
+ * "git rebase" did not exit with failure when format-patch it invoked
+   failed for whatever reason.
+   (merge 60d708b cb/rebase-am-exit-code later to maint).
+
+ * Fix a small bug in our use of umask() return value.
+   (merge 3096b2e jk/fix-refresh-utime later to maint).
+
+ * An ancient test framework enhancement to allow color was not
+   entirely correct; this makes it work even when tput needs to read
+   from the ~/.terminfo under the user's real HOME directory.
+   (merge d5c1b7c rh/test-color-avoid-terminfo-in-original-home later to maint).
+
+ * A minor bugfix when pack bitmap is used with "rev-list --count".
+   (merge c8a70d3 jk/rev-list-no-bitmap-while-pruning later to maint).
+
+ * "git config" failed to update the configuration file when the
+   underlying filesystem is incapable of renaming a file that is still
+   open.
+   (merge 7a64592 kb/config-unmap-before-renaming later to maint).
+
+ * Avoid possible ssize_t to int truncation.
+   (merge 6c8afe4 mh/strbuf-read-file-returns-ssize-t later to maint).
+
+ * When you say "!<ENTER>" while running say "git log", you'd confuse
+   yourself in the resulting shell, that may look as if you took
+   control back to the original shell you spawned "git log" from but
+   that isn't what is happening.  To that new shell, we leaked
+   GIT_PAGER_IN_USE environment variable that was meant as a local
+   communication between the original "Git" and subprocesses that was
+   spawned by it after we launched the pager, which caused many
+   "interesting" things to happen, e.g. "git diff | cat" still paints
+   its output in color by default.
+
+   Stop leaking that environment variable to the pager's half of the
+   fork; we only need it on "Git" side when we spawn the pager.
+   (merge 124b519 jc/unexport-git-pager-in-use-in-pager later to maint).
+
+ * Abandoning an already applied change in "git rebase -i" with
+   "--continue" left CHERRY_PICK_HEAD and confused later steps.
+   (merge 0e0aff4 js/rebase-i-clean-up-upon-continue-to-skip later to maint).
+
+ * We used to ask libCURL to use the most secure authentication method
+   available when talking to an HTTP proxy only when we were told to
+   talk to one via configuration variables.  We now ask libCURL to
+   always use the most secure authentication method, because the user
+   can tell libCURL to use an HTTP proxy via an environment variable
+   without using configuration variables.
+   (merge 5841520 et/http-proxyauth later to maint).
+
+ * A fix to a minor regression to "git fsck" in v2.2 era that started
+   complaining about a body-less tag object when it lacks a separator
+   empty line after its header to separate it with a non-existent body.
+   (merge 84d18c0 jc/fsck-retire-require-eoh later to maint).
+
+ * Code cleanups and documentation updates.
+   (merge 0269f96 mm/usage-log-l-can-take-regex later to maint).
+   (merge 64f2589 nd/t1509-chroot-test later to maint).
+   (merge d201a1e sb/test-bitmap-free-at-end later to maint).
+   (merge 05bfc7d sb/line-log-plug-pairdiff-leak later to maint).
+   (merge 846e5df pt/xdg-config-path later to maint).
+   (merge 1154aa4 jc/plug-fmt-merge-msg-leak later to maint).
+   (merge 319b678 jk/sha1-file-reduce-useless-warnings later to maint).
+   (merge 9a35c14 fg/document-commit-message-stripping later to maint).
+   (merge bbf431c ps/doc-packfile-vs-pack-file later to maint).
+   (merge 309a9e3 jk/skip-http-tests-under-no-curl later to maint).
+   (merge ccd593c dl/branch-error-message later to maint).
+   (merge 22570b6 rs/janitorial later to maint).
+   (merge 5c2a581 mc/commit-doc-grammofix later to maint).
+   (merge ce41720 ah/usage-strings later to maint).
+   (merge e6a268c sb/glossary-submodule later to maint).
+   (merge ec48a76 sb/submodule-doc-intro later to maint).
+   (merge 14f8b9b jk/clone-dissociate later to maint).
+   (merge 055c7e9 sb/pack-protocol-mention-smart-http later to maint).
+   (merge 7c37a5d jk/make-fix-dependencies later to maint).
+   (merge fc0aa39 sg/merge-summary-config later to maint).
+   (merge 329af6c pt/t0302-needs-sanity later to maint).
+   (merge d614f07 fk/doc-format-patch-vn later to maint).
+   (merge 72dbb36 sg/completion-commit-cleanup later to maint).
+   (merge e654eb2 es/utf8-stupid-compiler-workaround later to maint).
+   (merge 34b935c es/osx-header-pollutes-mask-macro later to maint).
+   (merge ab7fade jc/prompt-document-ps1-state-separator later to maint).
+   (merge 25f600e mm/describe-doc later to maint).
+   (merge 83fe167 mm/branch-doc-updates later to maint).
+   (merge 75d2e5a ls/hint-rev-list-count later to maint).
+   (merge edc8f71 cb/subtree-tests-update later to maint).
+   (merge 5330e6e sb/p5310-and-chain later to maint).
+   (merge c4ac525 tb/checkout-doc later to maint).
+   (merge e479c5f jk/pretty-encoding-doc later to maint).
+   (merge 7e837c6 ss/clone-guess-dir-name-simplify later to maint).
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/remote.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/remote.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/remote.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/remote.c	2015-07-28 04:34:56.000000000 +0800
@@ -46,16 +46,13 @@
 
 static struct branch **branches;
 static int branches_alloc;
 static int branches_nr;
 
 static struct branch *current_branch;
-static const char *default_remote_name;
-static const char *branch_pushremote_name;
 static const char *pushremote_name;
-static int explicit_default_remote_name;
 
 static struct rewrites rewrites;
 static struct rewrites rewrites_push;
 
 #define BUF_SIZE (2048)
 static char buffer[BUF_SIZE];
@@ -364,22 +361,15 @@
 		name = key + 7;
 		subkey = strrchr(name, '.');
 		if (!subkey)
 			return 0;
 		branch = make_branch(name, subkey - name);
 		if (!strcmp(subkey, ".remote")) {
-			if (git_config_string(&branch->remote_name, key, value))
-				return -1;
-			if (branch == current_branch) {
-				default_remote_name = branch->remote_name;
-				explicit_default_remote_name = 1;
-			}
+			return git_config_string(&branch->remote_name, key, value);
 		} else if (!strcmp(subkey, ".pushremote")) {
-			if (branch == current_branch)
-				if (git_config_string(&branch_pushremote_name, key, value))
-					return -1;
+			return git_config_string(&branch->pushremote_name, key, value);
 		} else if (!strcmp(subkey, ".merge")) {
 			if (!value)
 				return config_error_nonbool(key);
 			add_merge(branch, xstrdup(value));
 		}
 		return 0;
@@ -498,29 +488,28 @@
 		}
 	}
 }
 
 static void read_config(void)
 {
+	static int loaded;
 	unsigned char sha1[20];
 	const char *head_ref;
 	int flag;
-	if (default_remote_name) /* did this already */
+
+	if (loaded)
 		return;
-	default_remote_name = "origin";
+	loaded = 1;
+
 	current_branch = NULL;
 	head_ref = resolve_ref_unsafe("HEAD", 0, sha1, &flag);
 	if (head_ref && (flag & REF_ISSYMREF) &&
 	    skip_prefix(head_ref, "refs/heads/", &head_ref)) {
 		current_branch = make_branch(head_ref, 0);
 	}
 	git_config(handle_config, NULL);
-	if (branch_pushremote_name) {
-		free((char *)pushremote_name);
-		pushremote_name = branch_pushremote_name;
-	}
 	alias_all_urls();
 }
 
 /*
  * This function frees a refspec array.
  * Warning: code paths should be checked to ensure that the src
@@ -693,28 +682,51 @@
 {
 	if (!name[0] || is_dot_or_dotdot(name))
 		return 0;
 	return !strchr(name, '/'); /* no slash */
 }
 
-static struct remote *remote_get_1(const char *name, const char *pushremote_name)
+const char *remote_for_branch(struct branch *branch, int *explicit)
+{
+	if (branch && branch->remote_name) {
+		if (explicit)
+			*explicit = 1;
+		return branch->remote_name;
+	}
+	if (explicit)
+		*explicit = 0;
+	return "origin";
+}
+
+const char *pushremote_for_branch(struct branch *branch, int *explicit)
+{
+	if (branch && branch->pushremote_name) {
+		if (explicit)
+			*explicit = 1;
+		return branch->pushremote_name;
+	}
+	if (pushremote_name) {
+		if (explicit)
+			*explicit = 1;
+		return pushremote_name;
+	}
+	return remote_for_branch(branch, explicit);
+}
+
+static struct remote *remote_get_1(const char *name,
+				   const char *(*get_default)(struct branch *, int *))
 {
 	struct remote *ret;
 	int name_given = 0;
 
+	read_config();
+
 	if (name)
 		name_given = 1;
-	else {
-		if (pushremote_name) {
-			name = pushremote_name;
-			name_given = 1;
-		} else {
-			name = default_remote_name;
-			name_given = explicit_default_remote_name;
-		}
-	}
+	else
+		name = get_default(current_branch, &name_given);
 
 	ret = make_remote(name, 0);
 	if (valid_remote_nick(name)) {
 		if (!valid_remote(ret))
 			read_remotes_file(ret);
 		if (!valid_remote(ret))
@@ -728,20 +740,18 @@
 	ret->push = parse_push_refspec(ret->push_refspec_nr, ret->push_refspec);
 	return ret;
 }
 
 struct remote *remote_get(const char *name)
 {
-	read_config();
-	return remote_get_1(name, NULL);
+	return remote_get_1(name, remote_for_branch);
 }
 
 struct remote *pushremote_get(const char *name)
 {
-	read_config();
-	return remote_get_1(name, pushremote_name);
+	return remote_get_1(name, pushremote_for_branch);
 }
 
 int remote_is_configured(const char *name)
 {
 	struct remotes_hash_key lookup;
 	struct hashmap_entry lookup_entry;
@@ -1630,21 +1640,37 @@
 			ref->forced_update = 1;
 	}
 }
 
 static void set_merge(struct branch *ret)
 {
+	struct remote *remote;
 	char *ref;
 	unsigned char sha1[20];
 	int i;
 
+	if (!ret)
+		return; /* no branch */
+	if (ret->merge)
+		return; /* already run */
+	if (!ret->remote_name || !ret->merge_nr) {
+		/*
+		 * no merge config; let's make sure we don't confuse callers
+		 * with a non-zero merge_nr but a NULL merge
+		 */
+		ret->merge_nr = 0;
+		return;
+	}
+
+	remote = remote_get(ret->remote_name);
+
 	ret->merge = xcalloc(ret->merge_nr, sizeof(*ret->merge));
 	for (i = 0; i < ret->merge_nr; i++) {
 		ret->merge[i] = xcalloc(1, sizeof(**ret->merge));
 		ret->merge[i]->src = xstrdup(ret->merge_name[i]);
-		if (!remote_find_tracking(ret->remote, ret->merge[i]) ||
+		if (!remote_find_tracking(remote, ret->merge[i]) ||
 		    strcmp(ret->remote_name, "."))
 			continue;
 		if (dwim_ref(ret->merge_name[i], strlen(ret->merge_name[i]),
 			     sha1, &ref) == 1)
 			ret->merge[i]->dst = ref;
 		else
@@ -1658,17 +1684,13 @@
 
 	read_config();
 	if (!name || !*name || !strcmp(name, "HEAD"))
 		ret = current_branch;
 	else
 		ret = make_branch(name, 0);
-	if (ret && ret->remote_name) {
-		ret->remote = remote_get(ret->remote_name);
-		if (ret->merge_nr)
-			set_merge(ret);
-	}
+	set_merge(ret);
 	return ret;
 }
 
 int branch_has_merge_config(struct branch *branch)
 {
 	return branch && !!branch->merge;
@@ -1680,12 +1702,136 @@
 {
 	if (!branch || i < 0 || i >= branch->merge_nr)
 		return 0;
 	return refname_match(branch->merge[i]->src, refname);
 }
 
+__attribute((format (printf,2,3)))
+static const char *error_buf(struct strbuf *err, const char *fmt, ...)
+{
+	if (err) {
+		va_list ap;
+		va_start(ap, fmt);
+		strbuf_vaddf(err, fmt, ap);
+		va_end(ap);
+	}
+	return NULL;
+}
+
+const char *branch_get_upstream(struct branch *branch, struct strbuf *err)
+{
+	if (!branch)
+		return error_buf(err, _("HEAD does not point to a branch"));
+
+	if (!branch->merge || !branch->merge[0]) {
+		/*
+		 * no merge config; is it because the user didn't define any,
+		 * or because it is not a real branch, and get_branch
+		 * auto-vivified it?
+		 */
+		if (!ref_exists(branch->refname))
+			return error_buf(err, _("no such branch: '%s'"),
+					 branch->name);
+		return error_buf(err,
+				 _("no upstream configured for branch '%s'"),
+				 branch->name);
+	}
+
+	if (!branch->merge[0]->dst)
+		return error_buf(err,
+				 _("upstream branch '%s' not stored as a remote-tracking branch"),
+				 branch->merge[0]->src);
+
+	return branch->merge[0]->dst;
+}
+
+static const char *tracking_for_push_dest(struct remote *remote,
+					  const char *refname,
+					  struct strbuf *err)
+{
+	char *ret;
+
+	ret = apply_refspecs(remote->fetch, remote->fetch_refspec_nr, refname);
+	if (!ret)
+		return error_buf(err,
+				 _("push destination '%s' on remote '%s' has no local tracking branch"),
+				 refname, remote->name);
+	return ret;
+}
+
+static const char *branch_get_push_1(struct branch *branch, struct strbuf *err)
+{
+	struct remote *remote;
+
+	if (!branch)
+		return error_buf(err, _("HEAD does not point to a branch"));
+
+	remote = remote_get(pushremote_for_branch(branch, NULL));
+	if (!remote)
+		return error_buf(err,
+				 _("branch '%s' has no remote for pushing"),
+				 branch->name);
+
+	if (remote->push_refspec_nr) {
+		char *dst;
+		const char *ret;
+
+		dst = apply_refspecs(remote->push, remote->push_refspec_nr,
+				     branch->refname);
+		if (!dst)
+			return error_buf(err,
+					 _("push refspecs for '%s' do not include '%s'"),
+					 remote->name, branch->name);
+
+		ret = tracking_for_push_dest(remote, dst, err);
+		free(dst);
+		return ret;
+	}
+
+	if (remote->mirror)
+		return tracking_for_push_dest(remote, branch->refname, err);
+
+	switch (push_default) {
+	case PUSH_DEFAULT_NOTHING:
+		return error_buf(err, _("push has no destination (push.default is 'nothing')"));
+
+	case PUSH_DEFAULT_MATCHING:
+	case PUSH_DEFAULT_CURRENT:
+		return tracking_for_push_dest(remote, branch->refname, err);
+
+	case PUSH_DEFAULT_UPSTREAM:
+		return branch_get_upstream(branch, err);
+
+	case PUSH_DEFAULT_UNSPECIFIED:
+	case PUSH_DEFAULT_SIMPLE:
+		{
+			const char *up, *cur;
+
+			up = branch_get_upstream(branch, err);
+			if (!up)
+				return NULL;
+			cur = tracking_for_push_dest(remote, branch->refname, err);
+			if (!cur)
+				return NULL;
+			if (strcmp(cur, up))
+				return error_buf(err,
+						 _("cannot resolve 'simple' push to a single destination"));
+			return cur;
+		}
+	}
+
+	die("BUG: unhandled push situation");
+}
+
+const char *branch_get_push(struct branch *branch, struct strbuf *err)
+{
+	if (!branch->push_tracking_ref)
+		branch->push_tracking_ref = branch_get_push_1(branch, err);
+	return branch->push_tracking_ref;
+}
+
 static int ignore_symref_update(const char *refname)
 {
 	unsigned char sha1[20];
 	int flag;
 
 	if (!resolve_ref_unsafe(refname, 0, sha1, &flag))
@@ -1874,33 +2020,37 @@
 	unmark_and_free(used, TMP_MARK);
 	return found;
 }
 
 /*
  * Compare a branch with its upstream, and save their differences (number
- * of commits) in *num_ours and *num_theirs.
+ * of commits) in *num_ours and *num_theirs. The name of the upstream branch
+ * (or NULL if no upstream is defined) is returned via *upstream_name, if it
+ * is not itself NULL.
  *
- * Return 0 if branch has no upstream (no base), -1 if upstream is missing
- * (with "gone" base), otherwise 1 (with base).
+ * Returns -1 if num_ours and num_theirs could not be filled in (e.g., no
+ * upstream defined, or ref does not exist), 0 otherwise.
  */
-int stat_tracking_info(struct branch *branch, int *num_ours, int *num_theirs)
+int stat_tracking_info(struct branch *branch, int *num_ours, int *num_theirs,
+		       const char **upstream_name)
 {
 	unsigned char sha1[20];
 	struct commit *ours, *theirs;
 	char symmetric[84];
 	struct rev_info revs;
 	const char *rev_argv[10], *base;
 	int rev_argc;
 
 	/* Cannot stat unless we are marked to build on top of somebody else. */
-	if (!branch ||
-	    !branch->merge || !branch->merge[0] || !branch->merge[0]->dst)
-		return 0;
+	base = branch_get_upstream(branch, NULL);
+	if (upstream_name)
+		*upstream_name = base;
+	if (!base)
+		return -1;
 
 	/* Cannot stat if what we used to build on no longer exists */
-	base = branch->merge[0]->dst;
 	if (read_ref(base, sha1))
 		return -1;
 	theirs = lookup_commit_reference(sha1);
 	if (!theirs)
 		return -1;
 
@@ -1910,13 +2060,13 @@
 	if (!ours)
 		return -1;
 
 	/* are we the same? */
 	if (theirs == ours) {
 		*num_theirs = *num_ours = 0;
-		return 1;
+		return 0;
 	}
 
 	/* Run "rev-list --left-right ours...theirs" internally... */
 	rev_argc = 0;
 	rev_argv[rev_argc++] = NULL;
 	rev_argv[rev_argc++] = "--left-right";
@@ -1946,38 +2096,32 @@
 			(*num_theirs)++;
 	}
 
 	/* clear object flags smudged by the above traversal */
 	clear_commit_marks(ours, ALL_REV_FLAGS);
 	clear_commit_marks(theirs, ALL_REV_FLAGS);
-	return 1;
+	return 0;
 }
 
 /*
  * Return true when there is anything to report, otherwise false.
  */
 int format_tracking_info(struct branch *branch, struct strbuf *sb)
 {
 	int ours, theirs;
+	const char *full_base;
 	char *base;
 	int upstream_is_gone = 0;
 
-	switch (stat_tracking_info(branch, &ours, &theirs)) {
-	case 0:
-		/* no base */
-		return 0;
-	case -1:
-		/* with "gone" base */
+	if (stat_tracking_info(branch, &ours, &theirs, &full_base) < 0) {
+		if (!full_base)
+			return 0;
 		upstream_is_gone = 1;
-		break;
-	default:
-		/* with base */
-		break;
 	}
 
-	base = shorten_unambiguous_ref(branch->merge[0]->dst, 0);
+	base = shorten_unambiguous_ref(full_base, 0);
 	if (upstream_is_gone) {
 		strbuf_addf(sb,
 			_("Your branch is based on '%s', but the upstream is gone.\n"),
 			base);
 		if (advice_status_hints)
 			strbuf_addf(sb,
@@ -2021,25 +2165,26 @@
 				_("  (use \"git pull\" to merge the remote branch into yours)\n"));
 	}
 	free(base);
 	return 1;
 }
 
-static int one_local_ref(const char *refname, const unsigned char *sha1, int flag, void *cb_data)
+static int one_local_ref(const char *refname, const struct object_id *oid,
+			 int flag, void *cb_data)
 {
 	struct ref ***local_tail = cb_data;
 	struct ref *ref;
 	int len;
 
 	/* we already know it starts with refs/ to get here */
 	if (check_refname_format(refname + 5, 0))
 		return 0;
 
 	len = strlen(refname) + 1;
 	ref = xcalloc(1, sizeof(*ref) + len);
-	hashcpy(ref->new_sha1, sha1);
+	hashcpy(ref->new_sha1, oid->hash);
 	memcpy(ref->name, refname, len);
 	**local_tail = ref;
 	*local_tail = &ref->next;
 	return 0;
 }
 
@@ -2095,14 +2241,14 @@
 	struct string_list *ref_names;
 	struct ref **stale_refs_tail;
 	struct refspec *refs;
 	int ref_count;
 };
 
-static int get_stale_heads_cb(const char *refname,
-	const unsigned char *sha1, int flags, void *cb_data)
+static int get_stale_heads_cb(const char *refname, const struct object_id *oid,
+			      int flags, void *cb_data)
 {
 	struct stale_heads_info *info = cb_data;
 	struct string_list matches = STRING_LIST_INIT_DUP;
 	struct refspec query;
 	int i, stale = 1;
 	memset(&query, 0, sizeof(struct refspec));
@@ -2125,13 +2271,13 @@
 	for (i = 0; stale && i < matches.nr; i++)
 		if (string_list_has_string(info->ref_names, matches.items[i].string))
 			stale = 0;
 
 	if (stale) {
 		struct ref *ref = make_linked_ref(refname, &info->stale_refs_tail);
-		hashcpy(ref->new_sha1, sha1);
+		hashcpy(ref->new_sha1, oid->hash);
 	}
 
 clean_exit:
 	string_list_clear(&matches, 0);
 	return 0;
 }
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/remote.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/remote.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/remote.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/remote.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/remote.h	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/remote.h	2015-07-28 04:34:56.000000000 +0800
@@ -200,36 +200,60 @@
 
 struct branch {
 	const char *name;
 	const char *refname;
 
 	const char *remote_name;
-	struct remote *remote;
+	const char *pushremote_name;
 
 	const char **merge_name;
 	struct refspec **merge;
 	int merge_nr;
 	int merge_alloc;
+
+	const char *push_tracking_ref;
 };
 
 struct branch *branch_get(const char *name);
+const char *remote_for_branch(struct branch *branch, int *explicit);
+const char *pushremote_for_branch(struct branch *branch, int *explicit);
 
 int branch_has_merge_config(struct branch *branch);
 int branch_merge_matches(struct branch *, int n, const char *);
 
+/**
+ * Return the fully-qualified refname of the tracking branch for `branch`.
+ * I.e., what "branch@{upstream}" would give you. Returns NULL if no
+ * upstream is defined.
+ *
+ * If `err` is not NULL and no upstream is defined, a more specific error
+ * message is recorded there (if the function does not return NULL, then
+ * `err` is not touched).
+ */
+const char *branch_get_upstream(struct branch *branch, struct strbuf *err);
+
+/**
+ * Return the tracking branch that corresponds to the ref we would push to
+ * given a bare `git push` while `branch` is checked out.
+ *
+ * The return value and `err` conventions match those of `branch_get_upstream`.
+ */
+const char *branch_get_push(struct branch *branch, struct strbuf *err);
+
 /* Flags to match_refs. */
 enum match_refs_flags {
 	MATCH_REFS_NONE		= 0,
 	MATCH_REFS_ALL 		= (1 << 0),
 	MATCH_REFS_MIRROR	= (1 << 1),
 	MATCH_REFS_PRUNE	= (1 << 2),
 	MATCH_REFS_FOLLOW_TAGS	= (1 << 3)
 };
 
 /* Reporting of tracking info */
-int stat_tracking_info(struct branch *branch, int *num_ours, int *num_theirs);
+int stat_tracking_info(struct branch *branch, int *num_ours, int *num_theirs,
+		       const char **upstream_name);
 int format_tracking_info(struct branch *branch, struct strbuf *sb);
 
 struct ref *get_local_heads(void);
 /*
  * Find refs from a list which are likely to be pointed to by the given HEAD
  * ref. If 'all' is false, returns the most likely ref; otherwise, returns a
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/remote.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/remote.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/remote-testsvn.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/remote-testsvn.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/remote-testsvn.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/remote-testsvn.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/replace_object.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/replace_object.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/replace_object.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/replace_object.c	2015-07-28 04:34:56.000000000 +0800
@@ -50,13 +50,13 @@
 			sizeof(*replace_object));
 	replace_object[pos] = replace;
 	return 0;
 }
 
 static int register_replace_ref(const char *refname,
-				const unsigned char *sha1,
+				const struct object_id *oid,
 				int flag, void *cb_data)
 {
 	/* Get sha1 from refname */
 	const char *slash = strrchr(refname, '/');
 	const char *hash = slash ? slash + 1 : refname;
 	struct replace_object *repl_obj = xmalloc(sizeof(*repl_obj));
@@ -65,13 +65,13 @@
 		free(repl_obj);
 		warning("bad replace ref name: %s", refname);
 		return 0;
 	}
 
 	/* Copy sha1 from the read ref */
-	hashcpy(repl_obj->replacement, sha1);
+	hashcpy(repl_obj->replacement, oid->hash);
 
 	/* Register new object */
 	if (register_replace_object(repl_obj, 1))
 		die("duplicate replace ref: %s", refname);
 
 	return 0;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/replace_object.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/replace_object.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/replace_object.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/replace_object.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/rerere.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/rerere.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/rerere.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/rerere.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/resolve-undo.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/resolve-undo.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/resolve-undo.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/resolve-undo.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/revision.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/revision.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/revision.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/revision.c	2015-07-28 04:34:56.000000000 +0800
@@ -18,19 +18,75 @@
 #include "commit-slab.h"
 #include "dir.h"
 #include "cache-tree.h"
 
 volatile show_early_output_fn_t show_early_output;
 
-void show_object_with_name(FILE *out, struct object *obj, const char *name)
+char *path_name(const struct name_path *path, const char *name)
 {
-	const char *p;
+	const struct name_path *p;
+	char *n, *m;
+	int nlen = strlen(name);
+	int len = nlen + 1;
+
+	for (p = path; p; p = p->up) {
+		if (p->elem_len)
+			len += p->elem_len + 1;
+	}
+	n = xmalloc(len);
+	m = n + len - (nlen + 1);
+	strcpy(m, name);
+	for (p = path; p; p = p->up) {
+		if (p->elem_len) {
+			m -= p->elem_len + 1;
+			memcpy(m, p->elem, p->elem_len);
+			m[p->elem_len] = '/';
+		}
+	}
+	return n;
+}
+
+static int show_path_component_truncated(FILE *out, const char *name, int len)
+{
+	int cnt;
+	for (cnt = 0; cnt < len; cnt++) {
+		int ch = name[cnt];
+		if (!ch || ch == '\n')
+			return -1;
+		fputc(ch, out);
+	}
+	return len;
+}
+
+static int show_path_truncated(FILE *out, const struct name_path *path)
+{
+	int emitted, ours;
+
+	if (!path)
+		return 0;
+	emitted = show_path_truncated(out, path->up);
+	if (emitted < 0)
+		return emitted;
+	if (emitted)
+		fputc('/', out);
+	ours = show_path_component_truncated(out, path->elem, path->elem_len);
+	if (ours < 0)
+		return ours;
+	return ours || emitted;
+}
+
+void show_object_with_name(FILE *out, struct object *obj,
+			   const struct name_path *path, const char *component)
+{
+	struct name_path leaf;
+	leaf.up = (struct name_path *)path;
+	leaf.elem = component;
+	leaf.elem_len = strlen(component);
 
 	fprintf(out, "%s ", sha1_to_hex(obj->sha1));
-	for (p = name; *p && *p != '\n'; p++)
-		fputc(*p, out);
+	show_path_truncated(out, &leaf);
 	fputc('\n', out);
 }
 
 static void mark_blob_uninteresting(struct blob *blob)
 {
 	if (!blob)
@@ -302,14 +358,14 @@
 
 	while (list) {
 		struct commit *commit = list->item;
 		list = list->next;
 		if (commit->object.flags & UNINTERESTING)
 			continue;
-		if (interesting_cache)
-			*interesting_cache = commit;
+
+		*interesting_cache = commit;
 		return 0;
 	}
 	return 1;
 }
 
 /*
@@ -1159,23 +1215,24 @@
 		if (!wildmatch(item->string, path, 0, NULL))
 			return 1;
 	}
 	return 0;
 }
 
-static int handle_one_ref(const char *path, const unsigned char *sha1, int flag, void *cb_data)
+static int handle_one_ref(const char *path, const struct object_id *oid,
+			  int flag, void *cb_data)
 {
 	struct all_refs_cb *cb = cb_data;
 	struct object *object;
 
 	if (ref_excluded(cb->all_revs->ref_excludes, path))
 	    return 0;
 
-	object = get_reference(cb->all_revs, path, sha1, cb->all_flags);
+	object = get_reference(cb->all_revs, path, oid->hash, cb->all_flags);
 	add_rev_cmdline(cb->all_revs, object, path, REV_CMD_REF, cb->all_flags);
-	add_pending_sha1(cb->all_revs, path, sha1, cb->all_flags);
+	add_pending_sha1(cb->all_revs, path, oid->hash, cb->all_flags);
 	return 0;
 }
 
 static void init_all_refs_cb(struct all_refs_cb *cb, struct rev_info *revs,
 	unsigned flags)
 {
@@ -1233,13 +1290,14 @@
 {
 	handle_one_reflog_commit(osha1, cb_data);
 	handle_one_reflog_commit(nsha1, cb_data);
 	return 0;
 }
 
-static int handle_one_reflog(const char *path, const unsigned char *sha1, int flag, void *cb_data)
+static int handle_one_reflog(const char *path, const struct object_id *oid,
+			     int flag, void *cb_data)
 {
 	struct all_refs_cb *cb = cb_data;
 	cb->warned_bad_reflog = 0;
 	cb->name_for_errormsg = path;
 	for_each_reflog_ent(path, handle_one_reflog_ent, cb_data);
 	return 0;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/revision.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/revision.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/revision.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/revision.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/revision.h	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/revision.h	2015-07-28 04:34:56.000000000 +0800
@@ -253,15 +253,22 @@
 extern void put_revision_mark(const struct rev_info *revs,
 			      const struct commit *commit);
 
 extern void mark_parents_uninteresting(struct commit *commit);
 extern void mark_tree_uninteresting(struct tree *tree);
 
-char *path_name(struct strbuf *path, const char *name);
+struct name_path {
+	struct name_path *up;
+	int elem_len;
+	const char *elem;
+};
 
-extern void show_object_with_name(FILE *, struct object *, const char *);
+char *path_name(const struct name_path *path, const char *name);
+
+extern void show_object_with_name(FILE *, struct object *,
+				  const struct name_path *, const char *);
 
 extern void add_pending_object(struct rev_info *revs,
 			       struct object *obj, const char *name);
 extern void add_pending_sha1(struct rev_info *revs,
 			     const char *name, const unsigned char *sha1,
 			     unsigned int flags);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/revision.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/revision.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/run-command.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/run-command.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/run-command.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/run-command.c	2015-07-28 04:34:56.000000000 +0800
@@ -792,15 +792,15 @@
 	if (pthread_join(async->tid, &ret))
 		error("pthread_join failed");
 	return (int)(intptr_t)ret;
 #endif
 }
 
-char *find_hook(const char *name)
+const char *find_hook(const char *name)
 {
-	char *path = git_path("hooks/%s", name);
+	const char *path = git_path("hooks/%s", name);
 	if (access(path, X_OK) < 0)
 		path = NULL;
 
 	return path;
 }
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/run-command.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/run-command.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/run-command.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/run-command.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/run-command.h	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/run-command.h	2015-07-28 04:34:56.000000000 +0800
@@ -49,13 +49,13 @@
 void child_process_init(struct child_process *);
 
 int start_command(struct child_process *);
 int finish_command(struct child_process *);
 int run_command(struct child_process *);
 
-extern char *find_hook(const char *name);
+extern const char *find_hook(const char *name);
 LAST_ARG_MUST_BE_NULL
 extern int run_hook_le(const char *const *env, const char *name, ...);
 extern int run_hook_ve(const char *const *env, const char *name, va_list args);
 
 #define RUN_COMMAND_NO_STDIN 1
 #define RUN_GIT_CMD	     2	/*If this is to be git sub-command */
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/run-command.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/run-command.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/send-pack.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/send-pack.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/send-pack.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/send-pack.c	2015-07-28 04:34:56.000000000 +0800
@@ -179,13 +179,13 @@
 }
 
 static int advertise_shallow_grafts_cb(const struct commit_graft *graft, void *cb)
 {
 	struct strbuf *sb = cb;
 	if (graft->nr_parent == -1)
-		packet_buf_write(sb, "shallow %s\n", sha1_to_hex(graft->sha1));
+		packet_buf_write(sb, "shallow %s\n", oid_to_hex(&graft->oid));
 	return 0;
 }
 
 static void advertise_shallow_grafts_buf(struct strbuf *sb)
 {
 	if (!is_repository_shallow())
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/send-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/send-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/send-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/send-pack.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sequencer.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sequencer.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sequencer.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sequencer.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/server-info.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/server-info.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/server-info.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/server-info.c	2015-07-28 04:34:56.000000000 +0800
@@ -44,20 +44,21 @@
 		unlink(tmp);
 	}
 	free(tmp);
 	return ret;
 }
 
-static int add_info_ref(const char *path, const unsigned char *sha1, int flag, void *cb_data)
+static int add_info_ref(const char *path, const struct object_id *oid,
+			int flag, void *cb_data)
 {
 	FILE *fp = cb_data;
-	struct object *o = parse_object(sha1);
+	struct object *o = parse_object(oid->hash);
 	if (!o)
 		return -1;
 
-	if (fprintf(fp, "%s	%s\n", sha1_to_hex(sha1), path) < 0)
+	if (fprintf(fp, "%s	%s\n", oid_to_hex(oid), path) < 0)
 		return -1;
 
 	if (o->type == OBJ_TAG) {
 		o = deref_tag(o, path, 0);
 		if (o)
 			if (fprintf(fp, "%s	%s^{}\n",
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/server-info.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/server-info.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/server-info.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/server-info.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/setup.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/setup.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/setup.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/setup.c	2015-07-28 04:34:56.000000000 +0800
@@ -138,13 +138,15 @@
 	struct stat st;
 
 	if (starts_with(arg, ":/")) {
 		if (arg[2] == '\0') /* ":/" is root dir, always exists */
 			return 1;
 		name = arg + 2;
-	} else if (prefix)
+	} else if (!no_wildcard(arg))
+		return 1;
+	else if (prefix)
 		name = prefix_filename(prefix, strlen(prefix), arg);
 	else
 		name = arg;
 	if (!lstat(name, &st))
 		return 1; /* file exists */
 	if (errno == ENOENT || errno == ENOTDIR)
@@ -222,12 +224,42 @@
 		return;
 	die("ambiguous argument '%s': both revision and filename\n"
 	    "Use '--' to separate paths from revisions, like this:\n"
 	    "'git <command> [<revision>...] -- [<file>...]'", arg);
 }
 
+int get_common_dir(struct strbuf *sb, const char *gitdir)
+{
+	struct strbuf data = STRBUF_INIT;
+	struct strbuf path = STRBUF_INIT;
+	const char *git_common_dir = getenv(GIT_COMMON_DIR_ENVIRONMENT);
+	int ret = 0;
+	if (git_common_dir) {
+		strbuf_addstr(sb, git_common_dir);
+		return 1;
+	}
+	strbuf_addf(&path, "%s/commondir", gitdir);
+	if (file_exists(path.buf)) {
+		if (strbuf_read_file(&data, path.buf, 0) <= 0)
+			die_errno(_("failed to read %s"), path.buf);
+		while (data.len && (data.buf[data.len - 1] == '\n' ||
+				    data.buf[data.len - 1] == '\r'))
+			data.len--;
+		data.buf[data.len] = '\0';
+		strbuf_reset(&path);
+		if (!is_absolute_path(data.buf))
+			strbuf_addf(&path, "%s/", gitdir);
+		strbuf_addbuf(&path, &data);
+		strbuf_addstr(sb, real_path(path.buf));
+		ret = 1;
+	} else
+		strbuf_addstr(sb, gitdir);
+	strbuf_release(&data);
+	strbuf_release(&path);
+	return ret;
+}
 
 /*
  * Test if it looks like we're at a git directory.
  * We want to see:
  *
  *  - either an objects/ directory _or_ the proper
@@ -236,37 +268,46 @@
  *  - either a HEAD symlink or a HEAD file that is formatted as
  *    a proper "ref:", or a regular file HEAD that has a properly
  *    formatted sha1 object name.
  */
 int is_git_directory(const char *suspect)
 {
-	char path[PATH_MAX];
-	size_t len = strlen(suspect);
+	struct strbuf path = STRBUF_INIT;
+	int ret = 0;
+	size_t len;
+
+	/* Check worktree-related signatures */
+	strbuf_addf(&path, "%s/HEAD", suspect);
+	if (validate_headref(path.buf))
+		goto done;
+
+	strbuf_reset(&path);
+	get_common_dir(&path, suspect);
+	len = path.len;
 
-	if (PATH_MAX <= len + strlen("/objects"))
-		die("Too long path: %.*s", 60, suspect);
-	strcpy(path, suspect);
+	/* Check non-worktree-related signatures */
 	if (getenv(DB_ENVIRONMENT)) {
 		if (access(getenv(DB_ENVIRONMENT), X_OK))
-			return 0;
+			goto done;
 	}
 	else {
-		strcpy(path + len, "/objects");
-		if (access(path, X_OK))
-			return 0;
+		strbuf_setlen(&path, len);
+		strbuf_addstr(&path, "/objects");
+		if (access(path.buf, X_OK))
+			goto done;
 	}
 
-	strcpy(path + len, "/refs");
-	if (access(path, X_OK))
-		return 0;
-
-	strcpy(path + len, "/HEAD");
-	if (validate_headref(path))
-		return 0;
-
-	return 1;
+	strbuf_setlen(&path, len);
+	strbuf_addstr(&path, "/refs");
+	if (access(path.buf, X_OK))
+		goto done;
+
+	ret = 1;
+done:
+	strbuf_release(&path);
+	return ret;
 }
 
 int is_inside_git_dir(void)
 {
 	if (inside_git_dir < 0)
 		inside_git_dir = is_inside_dir(get_git_dir());
@@ -306,38 +347,68 @@
 		setenv(GIT_WORK_TREE_ENVIRONMENT, ".", 1);
 
 	set_git_dir(remove_leading_path(git_dir, work_tree));
 	initialized = 1;
 }
 
+static int check_repo_format(const char *var, const char *value, void *cb)
+{
+	if (strcmp(var, "core.repositoryformatversion") == 0)
+		repository_format_version = git_config_int(var, value);
+	else if (strcmp(var, "core.sharedrepository") == 0)
+		shared_repository = git_config_perm(var, value);
+	return 0;
+}
+
 static int check_repository_format_gently(const char *gitdir, int *nongit_ok)
 {
-	char repo_config[PATH_MAX+1];
+	struct strbuf sb = STRBUF_INIT;
+	const char *repo_config;
+	config_fn_t fn;
+	int ret = 0;
+
+	if (get_common_dir(&sb, gitdir))
+		fn = check_repo_format;
+	else
+		fn = check_repository_format_version;
+	strbuf_addstr(&sb, "/config");
+	repo_config = sb.buf;
 
 	/*
 	 * git_config() can't be used here because it calls git_pathdup()
 	 * to get $GIT_CONFIG/config. That call will make setup_git_env()
 	 * set git_dir to ".git".
 	 *
 	 * We are in gitdir setup, no git dir has been found useable yet.
 	 * Use a gentler version of git_config() to check if this repo
 	 * is a good one.
 	 */
-	snprintf(repo_config, PATH_MAX, "%s/config", gitdir);
-	git_config_early(check_repository_format_version, NULL, repo_config);
+	git_config_early(fn, NULL, repo_config);
 	if (GIT_REPO_VERSION < repository_format_version) {
 		if (!nongit_ok)
 			die ("Expected git repo version <= %d, found %d",
 			     GIT_REPO_VERSION, repository_format_version);
 		warning("Expected git repo version <= %d, found %d",
 			GIT_REPO_VERSION, repository_format_version);
 		warning("Please upgrade Git");
 		*nongit_ok = -1;
-		return -1;
+		ret = -1;
 	}
-	return 0;
+	strbuf_release(&sb);
+	return ret;
+}
+
+static void update_linked_gitdir(const char *gitfile, const char *gitdir)
+{
+	struct strbuf path = STRBUF_INIT;
+	struct stat st;
+
+	strbuf_addf(&path, "%s/gitfile", gitdir);
+	if (stat(path.buf, &st) || st.st_mtime + 24 * 3600 < time(NULL))
+		write_file(path.buf, 0, "%s\n", gitfile);
+	strbuf_release(&path);
 }
 
 /*
  * Try to read the location of the git directory from the .git file,
  * return path to git directory if found.
  */
@@ -382,12 +453,14 @@
 		free(buf);
 		buf = dir;
 	}
 
 	if (!is_git_directory(dir))
 		die("Not a git repository: %s", dir);
+
+	update_linked_gitdir(path, dir);
 	path = real_path(dir);
 
 	free(buf);
 	return path;
 }
 
@@ -804,17 +877,16 @@
 	 */
 	return -(i & 0666);
 }
 
 int check_repository_format_version(const char *var, const char *value, void *cb)
 {
-	if (strcmp(var, "core.repositoryformatversion") == 0)
-		repository_format_version = git_config_int(var, value);
-	else if (strcmp(var, "core.sharedrepository") == 0)
-		shared_repository = git_config_perm(var, value);
-	else if (strcmp(var, "core.bare") == 0) {
+	int ret = check_repo_format(var, value, cb);
+	if (ret)
+		return ret;
+	if (strcmp(var, "core.bare") == 0) {
 		is_bare_repository_cfg = git_config_bool(var, value);
 		if (is_bare_repository_cfg == 1)
 			inside_work_tree = -1;
 	} else if (strcmp(var, "core.worktree") == 0) {
 		if (!value)
 			return config_error_nonbool(var);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/setup.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/setup.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/setup.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/setup.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1-array.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1-array.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1-array.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1-array.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1_file.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1_file.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1_file.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1_file.c	2015-07-28 04:34:56.000000000 +0800
@@ -374,18 +374,21 @@
 
 void read_info_alternates(const char * relative_base, int depth)
 {
 	char *map;
 	size_t mapsz;
 	struct stat st;
-	char *path;
+	const char alt_file_name[] = "info/alternates";
+	/* Given that relative_base is no longer than PATH_MAX,
+	   ensure that "path" has enough space to append "/", the
+	   file name, "info/alternates", and a trailing NUL.  */
+	char path[PATH_MAX + 1 + sizeof alt_file_name];
 	int fd;
 
-	path = xstrfmt("%s/info/alternates", relative_base);
+	sprintf(path, "%s/%s", relative_base, alt_file_name);
 	fd = git_open_noatime(path);
-	free(path);
 	if (fd < 0)
 		return;
 	if (fstat(fd, &st) || (st.st_size == 0)) {
 		close(fd);
 		return;
 	}
@@ -399,13 +402,13 @@
 }
 
 void add_to_alternates_file(const char *reference)
 {
 	struct lock_file *lock = xcalloc(1, sizeof(struct lock_file));
 	int fd = hold_lock_file_for_append(lock, git_path("objects/info/alternates"), LOCK_DIE_ON_ERROR);
-	char *alt = mkpath("%s\n", reference);
+	const char *alt = mkpath("%s\n", reference);
 	write_or_die(fd, alt, strlen(alt));
 	if (commit_lock_file(lock))
 		die("could not close alternates file");
 	if (alt_odb_tail)
 		link_alt_odb_entries(alt, strlen(alt), '\n', NULL, 0);
 }
@@ -1573,12 +1576,46 @@
 	stream->avail_out = bufsiz;
 
 	git_inflate_init(stream);
 	return git_inflate(stream, 0);
 }
 
+static int unpack_sha1_header_to_strbuf(git_zstream *stream, unsigned char *map,
+					unsigned long mapsize, void *buffer,
+					unsigned long bufsiz, struct strbuf *header)
+{
+	int status;
+
+	status = unpack_sha1_header(stream, map, mapsize, buffer, bufsiz);
+
+	/*
+	 * Check if entire header is unpacked in the first iteration.
+	 */
+	if (memchr(buffer, '\0', stream->next_out - (unsigned char *)buffer))
+		return 0;
+
+	/*
+	 * buffer[0..bufsiz] was not large enough.  Copy the partial
+	 * result out to header, and then append the result of further
+	 * reading the stream.
+	 */
+	strbuf_add(header, buffer, stream->next_out - (unsigned char *)buffer);
+	stream->next_out = buffer;
+	stream->avail_out = bufsiz;
+
+	do {
+		status = git_inflate(stream, 0);
+		strbuf_add(header, buffer, stream->next_out - (unsigned char *)buffer);
+		if (memchr(buffer, '\0', stream->next_out - (unsigned char *)buffer))
+			return 0;
+		stream->next_out = buffer;
+		stream->avail_out = bufsiz;
+	} while (status != Z_STREAM_END);
+	return -1;
+}
+
 static void *unpack_sha1_rest(git_zstream *stream, void *buffer, unsigned long size, const unsigned char *sha1)
 {
 	int bytes = strlen(buffer) + 1;
 	unsigned char *buf = xmallocz(size);
 	unsigned long n;
 	int status = Z_OK;
@@ -1623,33 +1660,44 @@
 
 /*
  * We used to just use "sscanf()", but that's actually way
  * too permissive for what we want to check. So do an anal
  * object header parse by hand.
  */
-int parse_sha1_header(const char *hdr, unsigned long *sizep)
+static int parse_sha1_header_extended(const char *hdr, struct object_info *oi,
+			       unsigned int flags)
 {
-	char type[10];
-	int i;
+	const char *type_buf = hdr;
 	unsigned long size;
+	int type, type_len = 0;
 
 	/*
-	 * The type can be at most ten bytes (including the
-	 * terminating '\0' that we add), and is followed by
+	 * The type can be of any size but is followed by
 	 * a space.
 	 */
-	i = 0;
 	for (;;) {
 		char c = *hdr++;
 		if (c == ' ')
 			break;
-		type[i++] = c;
-		if (i >= sizeof(type))
-			return -1;
+		type_len++;
 	}
-	type[i] = 0;
+
+	type = type_from_string_gently(type_buf, type_len, 1);
+	if (oi->typename)
+		strbuf_add(oi->typename, type_buf, type_len);
+	/*
+	 * Set type to 0 if its an unknown object and
+	 * we're obtaining the type using '--allow-unkown-type'
+	 * option.
+	 */
+	if ((flags & LOOKUP_UNKNOWN_OBJECT) && (type < 0))
+		type = 0;
+	else if (type < 0)
+		die("invalid object type");
+	if (oi->typep)
+		*oi->typep = type;
 
 	/*
 	 * The length must follow immediately, and be in canonical
 	 * decimal format (ie "010" is not valid).
 	 */
 	size = *hdr++ - '0';
@@ -1661,18 +1709,30 @@
 			if (c > 9)
 				break;
 			hdr++;
 			size = size * 10 + c;
 		}
 	}
-	*sizep = size;
+
+	if (oi->sizep)
+		*oi->sizep = size;
 
 	/*
 	 * The length must be followed by a zero byte
 	 */
-	return *hdr ? -1 : type_from_string(type);
+	return *hdr ? -1 : type;
+}
+
+int parse_sha1_header(const char *hdr, unsigned long *sizep)
+{
+	struct object_info oi;
+
+	oi.sizep = sizep;
+	oi.typename = NULL;
+	oi.typep = NULL;
+	return parse_sha1_header_extended(hdr, &oi, LOOKUP_REPLACE_OBJECT);
 }
 
 static void *unpack_sha1_file(void *map, unsigned long mapsize, enum object_type *type, unsigned long *size, const unsigned char *sha1)
 {
 	int ret;
 	git_zstream stream;
@@ -2531,32 +2591,34 @@
 	}
 	return NULL;
 
 }
 
 static int sha1_loose_object_info(const unsigned char *sha1,
-				  struct object_info *oi)
+				  struct object_info *oi,
+				  int flags)
 {
-	int status;
-	unsigned long mapsize, size;
+	int status = 0;
+	unsigned long mapsize;
 	void *map;
 	git_zstream stream;
 	char hdr[32];
+	struct strbuf hdrbuf = STRBUF_INIT;
 
 	if (oi->delta_base_sha1)
 		hashclr(oi->delta_base_sha1);
 
 	/*
 	 * If we don't care about type or size, then we don't
 	 * need to look inside the object at all. Note that we
 	 * do not optimize out the stat call, even if the
 	 * caller doesn't care about the disk-size, since our
 	 * return value implicitly indicates whether the
 	 * object even exists.
 	 */
-	if (!oi->typep && !oi->sizep) {
+	if (!oi->typep && !oi->typename && !oi->sizep) {
 		struct stat st;
 		if (stat_sha1_file(sha1, &st) < 0)
 			return -1;
 		if (oi->disk_sizep)
 			*oi->disk_sizep = st.st_size;
 		return 0;
@@ -2564,73 +2626,98 @@
 
 	map = map_sha1_file(sha1, &mapsize);
 	if (!map)
 		return -1;
 	if (oi->disk_sizep)
 		*oi->disk_sizep = mapsize;
-	if (unpack_sha1_header(&stream, map, mapsize, hdr, sizeof(hdr)) < 0)
+	if ((flags & LOOKUP_UNKNOWN_OBJECT)) {
+		if (unpack_sha1_header_to_strbuf(&stream, map, mapsize, hdr, sizeof(hdr), &hdrbuf) < 0)
+			status = error("unable to unpack %s header with --allow-unknown-type",
+				       sha1_to_hex(sha1));
+	} else if (unpack_sha1_header(&stream, map, mapsize, hdr, sizeof(hdr)) < 0)
 		status = error("unable to unpack %s header",
 			       sha1_to_hex(sha1));
-	else if ((status = parse_sha1_header(hdr, &size)) < 0)
+	if (status < 0)
+		; /* Do nothing */
+	else if (hdrbuf.len) {
+		if ((status = parse_sha1_header_extended(hdrbuf.buf, oi, flags)) < 0)
+			status = error("unable to parse %s header with --allow-unknown-type",
+				       sha1_to_hex(sha1));
+	} else if ((status = parse_sha1_header_extended(hdr, oi, flags)) < 0)
 		status = error("unable to parse %s header", sha1_to_hex(sha1));
-	else if (oi->sizep)
-		*oi->sizep = size;
 	git_inflate_end(&stream);
 	munmap(map, mapsize);
-	if (oi->typep)
+	if (status && oi->typep)
 		*oi->typep = status;
+	strbuf_release(&hdrbuf);
 	return 0;
 }
 
 int sha1_object_info_extended(const unsigned char *sha1, struct object_info *oi, unsigned flags)
 {
 	struct cached_object *co;
 	struct pack_entry e;
 	int rtype;
+	enum object_type real_type;
 	const unsigned char *real = lookup_replace_object_extended(sha1, flags);
 
 	co = find_cached_object(real);
 	if (co) {
 		if (oi->typep)
 			*(oi->typep) = co->type;
 		if (oi->sizep)
 			*(oi->sizep) = co->size;
 		if (oi->disk_sizep)
 			*(oi->disk_sizep) = 0;
 		if (oi->delta_base_sha1)
 			hashclr(oi->delta_base_sha1);
+		if (oi->typename)
+			strbuf_addstr(oi->typename, typename(co->type));
 		oi->whence = OI_CACHED;
 		return 0;
 	}
 
 	if (!find_pack_entry(real, &e)) {
 		/* Most likely it's a loose object. */
-		if (!sha1_loose_object_info(real, oi)) {
+		if (!sha1_loose_object_info(real, oi, flags)) {
 			oi->whence = OI_LOOSE;
 			return 0;
 		}
 
 		/* Not a loose object; someone else may have just packed it. */
 		reprepare_packed_git();
 		if (!find_pack_entry(real, &e))
 			return -1;
 	}
 
+	/*
+	 * packed_object_info() does not follow the delta chain to
+	 * find out the real type, unless it is given oi->typep.
+	 */
+	if (oi->typename && !oi->typep)
+		oi->typep = &real_type;
+
 	rtype = packed_object_info(e.p, e.offset, oi);
 	if (rtype < 0) {
 		mark_bad_packed_object(e.p, real);
+		if (oi->typep == &real_type)
+			oi->typep = NULL;
 		return sha1_object_info_extended(real, oi, 0);
 	} else if (in_delta_base_cache(e.p, e.offset)) {
 		oi->whence = OI_DBCACHED;
 	} else {
 		oi->whence = OI_PACKED;
 		oi->u.packed.offset = e.offset;
 		oi->u.packed.pack = e.p;
 		oi->u.packed.is_delta = (rtype == OBJ_REF_DELTA ||
 					 rtype == OBJ_OFS_DELTA);
 	}
+	if (oi->typename)
+		strbuf_addstr(oi->typename, typename(*oi->typep));
+	if (oi->typep == &real_type)
+		oi->typep = NULL;
 
 	return 0;
 }
 
 /* returns enum object_type or negative */
 int sha1_object_info(const unsigned char *sha1, unsigned long *sizep)
@@ -3493,17 +3580,22 @@
 }
 
 int for_each_packed_object(each_packed_object_fn cb, void *data, unsigned flags)
 {
 	struct packed_git *p;
 	int r = 0;
+	int pack_errors = 0;
 
 	prepare_packed_git();
 	for (p = packed_git; p; p = p->next) {
 		if ((flags & FOR_EACH_OBJECT_LOCAL_ONLY) && !p->pack_local)
 			continue;
+		if (open_pack_index(p)) {
+			pack_errors = 1;
+			continue;
+		}
 		r = for_each_object_in_pack(p, cb, data);
 		if (r)
 			break;
 	}
-	return r;
+	return r ? r : pack_errors;
 }
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1_file.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1_file.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1_file.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1_file.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1-lookup.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1-lookup.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1-lookup.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1-lookup.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1_name.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1_name.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1_name.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1_name.c	2015-07-28 04:34:56.000000000 +0800
@@ -413,26 +413,38 @@
 		}
 		break;
 	}
 	return slash;
 }
 
-static inline int upstream_mark(const char *string, int len)
+static inline int at_mark(const char *string, int len,
+			  const char **suffix, int nr)
 {
-	const char *suffix[] = { "@{upstream}", "@{u}" };
 	int i;
 
-	for (i = 0; i < ARRAY_SIZE(suffix); i++) {
+	for (i = 0; i < nr; i++) {
 		int suffix_len = strlen(suffix[i]);
 		if (suffix_len <= len
 		    && !memcmp(string, suffix[i], suffix_len))
 			return suffix_len;
 	}
 	return 0;
 }
 
+static inline int upstream_mark(const char *string, int len)
+{
+	const char *suffix[] = { "@{upstream}", "@{u}" };
+	return at_mark(string, len, suffix, ARRAY_SIZE(suffix));
+}
+
+static inline int push_mark(const char *string, int len)
+{
+	const char *suffix[] = { "@{push}" };
+	return at_mark(string, len, suffix, ARRAY_SIZE(suffix));
+}
+
 static int get_sha1_1(const char *name, int len, unsigned char *sha1, unsigned lookup_flags);
 static int interpret_nth_prior_checkout(const char *name, int namelen, struct strbuf *buf);
 
 static int get_sha1_basic(const char *str, int len, unsigned char *sha1,
 			  unsigned int flags)
 {
@@ -474,13 +486,14 @@
 					if (at != 0)
 						/* @{-N} not at start */
 						return -1;
 					nth_prior = 1;
 					continue;
 				}
-				if (!upstream_mark(str + at, len - at)) {
+				if (!upstream_mark(str + at, len - at) &&
+				    !push_mark(str + at, len - at)) {
 					reflog_len = (len-1) - (at+2);
 					len = at;
 				}
 				break;
 			}
 		}
@@ -829,17 +842,17 @@
  * beginning with a '!', you have to repeat the exclamation mark.
  */
 
 /* Remember to update object flag allocation in object.h */
 #define ONELINE_SEEN (1u<<20)
 
-static int handle_one_ref(const char *path,
-		const unsigned char *sha1, int flag, void *cb_data)
+static int handle_one_ref(const char *path, const struct object_id *oid,
+			  int flag, void *cb_data)
 {
 	struct commit_list **list = cb_data;
-	struct object *object = parse_object(sha1);
+	struct object *object = parse_object(oid->hash);
 	if (!object)
 		return 0;
 	if (object->type == OBJ_TAG) {
 		object = deref_tag(object, path, strlen(path));
 		if (!object)
 			return 0;
@@ -1053,52 +1066,42 @@
 	char *s = shorten_unambiguous_ref(ref, 0);
 	strbuf_reset(buf);
 	strbuf_addstr(buf, s);
 	free(s);
 }
 
-static const char *get_upstream_branch(const char *branch_buf, int len)
-{
-	char *branch = xstrndup(branch_buf, len);
-	struct branch *upstream = branch_get(*branch ? branch : NULL);
-
-	/*
-	 * Upstream can be NULL only if branch refers to HEAD and HEAD
-	 * points to something different than a branch.
-	 */
-	if (!upstream)
-		die(_("HEAD does not point to a branch"));
-	if (!upstream->merge || !upstream->merge[0]->dst) {
-		if (!ref_exists(upstream->refname))
-			die(_("No such branch: '%s'"), branch);
-		if (!upstream->merge) {
-			die(_("No upstream configured for branch '%s'"),
-				upstream->name);
-		}
-		die(
-			_("Upstream branch '%s' not stored as a remote-tracking branch"),
-			upstream->merge[0]->src);
-	}
-	free(branch);
-
-	return upstream->merge[0]->dst;
-}
-
-static int interpret_upstream_mark(const char *name, int namelen,
-				   int at, struct strbuf *buf)
+static int interpret_branch_mark(const char *name, int namelen,
+				 int at, struct strbuf *buf,
+				 int (*get_mark)(const char *, int),
+				 const char *(*get_data)(struct branch *,
+							 struct strbuf *))
 {
 	int len;
+	struct branch *branch;
+	struct strbuf err = STRBUF_INIT;
+	const char *value;
 
-	len = upstream_mark(name + at, namelen - at);
+	len = get_mark(name + at, namelen - at);
 	if (!len)
 		return -1;
 
 	if (memchr(name, ':', at))
 		return -1;
 
-	set_shortened_ref(buf, get_upstream_branch(name, at));
+	if (at) {
+		char *name_str = xmemdupz(name, at);
+		branch = branch_get(name_str);
+		free(name_str);
+	} else
+		branch = branch_get(NULL);
+
+	value = get_data(branch, &err);
+	if (!value)
+		die("%s", err.buf);
+
+	set_shortened_ref(buf, value);
 	return len + at;
 }
 
 /*
  * This reads short-hand syntax that not only evaluates to a commit
  * object name, but also can act as if the end user spelled the name
@@ -1143,13 +1146,19 @@
 	     start = at + 1) {
 
 		len = interpret_empty_at(name, namelen, at - name, buf);
 		if (len > 0)
 			return reinterpret(name, namelen, len, buf);
 
-		len = interpret_upstream_mark(name, namelen, at - name, buf);
+		len = interpret_branch_mark(name, namelen, at - name, buf,
+					    upstream_mark, branch_get_upstream);
+		if (len > 0)
+			return len;
+
+		len = interpret_branch_mark(name, namelen, at - name, buf,
+					    push_mark, branch_get_push);
 		if (len > 0)
 			return len;
 	}
 
 	return -1;
 }
@@ -1430,17 +1440,25 @@
 			const char *filename = cp+1;
 			char *new_filename = NULL;
 
 			new_filename = resolve_relative_path(filename);
 			if (new_filename)
 				filename = new_filename;
-			ret = get_tree_entry(tree_sha1, filename, sha1, &oc->mode);
-			if (ret && only_to_die) {
-				diagnose_invalid_sha1_path(prefix, filename,
-							   tree_sha1,
-							   name, len);
+			if (flags & GET_SHA1_FOLLOW_SYMLINKS) {
+				ret = get_tree_entry_follow_symlinks(tree_sha1,
+					filename, sha1, &oc->symlink_path,
+					&oc->mode);
+			} else {
+				ret = get_tree_entry(tree_sha1, filename,
+						     sha1, &oc->mode);
+				if (ret && only_to_die) {
+					diagnose_invalid_sha1_path(prefix,
+								   filename,
+								   tree_sha1,
+								   name, len);
+				}
 			}
 			hashcpy(oc->tree, tree_sha1);
 			strlcpy(oc->path, filename, sizeof(oc->path));
 
 			free(new_filename);
 			return ret;
@@ -1465,8 +1483,10 @@
 	unsigned char sha1[20];
 	get_sha1_with_context_1(name, GET_SHA1_ONLY_TO_DIE, prefix, sha1, &oc);
 }
 
 int get_sha1_with_context(const char *str, unsigned flags, unsigned char *sha1, struct object_context *orc)
 {
+	if (flags & GET_SHA1_FOLLOW_SYMLINKS && flags & GET_SHA1_ONLY_TO_DIE)
+		die("BUG: incompatible flags for get_sha1_with_context");
 	return get_sha1_with_context_1(str, flags, NULL, sha1, orc);
 }
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1_name.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1_name.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sha1_name.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sha1_name.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/shallow.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/shallow.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/shallow.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/shallow.c	2015-07-28 04:34:56.000000000 +0800
@@ -28,13 +28,13 @@
 int register_shallow(const unsigned char *sha1)
 {
 	struct commit_graft *graft =
 		xmalloc(sizeof(struct commit_graft));
 	struct commit *commit = lookup_commit(sha1);
 
-	hashcpy(graft->sha1, sha1);
+	hashcpy(graft->oid.hash, sha1);
 	graft->nr_parent = -1;
 	if (commit && commit->object.parsed)
 		commit->parents = NULL;
 	return register_commit_graft(graft, 0);
 }
 
@@ -156,17 +156,17 @@
 	unsigned flags;
 };
 
 static int write_one_shallow(const struct commit_graft *graft, void *cb_data)
 {
 	struct write_shallow_data *data = cb_data;
-	const char *hex = sha1_to_hex(graft->sha1);
+	const char *hex = oid_to_hex(&graft->oid);
 	if (graft->nr_parent != -1)
 		return 0;
 	if (data->flags & SEEN_ONLY) {
-		struct commit *c = lookup_commit(graft->sha1);
+		struct commit *c = lookup_commit(graft->oid.hash);
 		if (!c || !(c->object.flags & SEEN)) {
 			if (data->flags & VERBOSE)
 				printf("Removing %s from .git/shallow\n",
 				       sha1_to_hex(c->object.sha1));
 			return 0;
 		}
@@ -279,13 +279,13 @@
 }
 
 static int advertise_shallow_grafts_cb(const struct commit_graft *graft, void *cb)
 {
 	int fd = *(int *)cb;
 	if (graft->nr_parent == -1)
-		packet_write(fd, "shallow %s\n", sha1_to_hex(graft->sha1));
+		packet_write(fd, "shallow %s\n", oid_to_hex(&graft->oid));
 	return 0;
 }
 
 void advertise_shallow_grafts(int fd)
 {
 	if (!is_repository_shallow())
@@ -472,17 +472,16 @@
 			o->flags &= ~SEEN;
 	}
 
 	free(tmp);
 }
 
-static int mark_uninteresting(const char *refname,
-			      const unsigned char *sha1,
+static int mark_uninteresting(const char *refname, const struct object_id *oid,
 			      int flags, void *cb_data)
 {
-	struct commit *commit = lookup_commit_reference_gently(sha1, 1);
+	struct commit *commit = lookup_commit_reference_gently(oid->hash, 1);
 	if (!commit)
 		return 0;
 	commit->object.flags |= UNINTERESTING;
 	mark_parents_uninteresting(commit);
 	return 0;
 }
@@ -581,18 +580,18 @@
 
 struct commit_array {
 	struct commit **commits;
 	int nr, alloc;
 };
 
-static int add_ref(const char *refname,
-		   const unsigned char *sha1, int flags, void *cb_data)
+static int add_ref(const char *refname, const struct object_id *oid,
+		   int flags, void *cb_data)
 {
 	struct commit_array *ca = cb_data;
 	ALLOC_GROW(ca->commits, ca->nr + 1, ca->alloc);
-	ca->commits[ca->nr] = lookup_commit_reference_gently(sha1, 1);
+	ca->commits[ca->nr] = lookup_commit_reference_gently(oid->hash, 1);
 	if (ca->commits[ca->nr])
 		ca->nr++;
 	return 0;
 }
 
 static void update_refstatus(int *ref_status, int nr, uint32_t *bitmap)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/shallow.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/shallow.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/shallow.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/shallow.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/shell.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/shell.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/shell.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/shell.c	2015-07-28 04:34:56.000000000 +0800
@@ -10,13 +10,13 @@
 
 static int do_generic_cmd(const char *me, char *arg)
 {
 	const char *my_argv[4];
 
 	setup_path();
-	if (!arg || !(arg = sq_dequote(arg)) || *arg == '-')
+	if (!arg || !(arg = sq_dequote(arg)))
 		die("bad argument");
 	if (!starts_with(me, "git-"))
 		die("bad command");
 
 	my_argv[0] = me + 4;
 	my_argv[1] = arg;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/shell.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/shell.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/shell.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/shell.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sh-i18n--envsubst.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sh-i18n--envsubst.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sh-i18n--envsubst.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sh-i18n--envsubst.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/show-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/show-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/show-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/show-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sideband.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sideband.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sideband.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sideband.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sigchain.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sigchain.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/sigchain.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/sigchain.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/split-index.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/split-index.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/split-index.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/split-index.c	2015-07-28 04:34:56.000000000 +0800
@@ -38,28 +38,21 @@
 		return error("corrupt replace bitmap in link extension");
 	if (ret != sz)
 		return error("garbage at the end of link extension");
 	return 0;
 }
 
-static int write_strbuf(void *user_data, const void *data, size_t len)
-{
-	struct strbuf *sb = user_data;
-	strbuf_add(sb, data, len);
-	return len;
-}
-
 int write_link_extension(struct strbuf *sb,
 			 struct index_state *istate)
 {
 	struct split_index *si = istate->split_index;
 	strbuf_add(sb, si->base_sha1, 20);
 	if (!si->delete_bitmap && !si->replace_bitmap)
 		return 0;
-	ewah_serialize_to(si->delete_bitmap, write_strbuf, sb);
-	ewah_serialize_to(si->replace_bitmap, write_strbuf, sb);
+	ewah_serialize_strbuf(si->delete_bitmap, sb);
+	ewah_serialize_strbuf(si->replace_bitmap, sb);
 	return 0;
 }
 
 static void mark_base_index_entries(struct index_state *base)
 {
 	int i;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/split-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/split-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/split-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/split-index.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/strbuf.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/strbuf.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/strbuf.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/strbuf.c	2015-07-28 04:34:56.000000000 +0800
@@ -432,32 +432,77 @@
 		strbuf_release(sb);
 	else
 		strbuf_reset(sb);
 	return -1;
 }
 
+#ifdef HAVE_GETDELIM
+int strbuf_getwholeline(struct strbuf *sb, FILE *fp, int term)
+{
+	ssize_t r;
+
+	if (feof(fp))
+		return EOF;
+
+	strbuf_reset(sb);
+
+	/* Translate slopbuf to NULL, as we cannot call realloc on it */
+	if (!sb->alloc)
+		sb->buf = NULL;
+	r = getdelim(&sb->buf, &sb->alloc, term, fp);
+
+	if (r > 0) {
+		sb->len = r;
+		return 0;
+	}
+	assert(r == -1);
+
+	/*
+	 * Normally we would have called xrealloc, which will try to free
+	 * memory and recover. But we have no way to tell getdelim() to do so.
+	 * Worse, we cannot try to recover ENOMEM ourselves, because we have
+	 * no idea how many bytes were read by getdelim.
+	 *
+	 * Dying here is reasonable. It mirrors what xrealloc would do on
+	 * catastrophic memory failure. We skip the opportunity to free pack
+	 * memory and retry, but that's unlikely to help for a malloc small
+	 * enough to hold a single line of input, anyway.
+	 */
+	if (errno == ENOMEM)
+		die("Out of memory, getdelim failed");
+
+	/* Restore slopbuf that we moved out of the way before */
+	if (!sb->buf)
+		strbuf_init(sb, 0);
+	return EOF;
+}
+#else
 int strbuf_getwholeline(struct strbuf *sb, FILE *fp, int term)
 {
 	int ch;
 
 	if (feof(fp))
 		return EOF;
 
 	strbuf_reset(sb);
-	while ((ch = fgetc(fp)) != EOF) {
-		strbuf_grow(sb, 1);
+	flockfile(fp);
+	while ((ch = getc_unlocked(fp)) != EOF) {
+		if (!strbuf_avail(sb))
+			strbuf_grow(sb, 1);
 		sb->buf[sb->len++] = ch;
 		if (ch == term)
 			break;
 	}
+	funlockfile(fp);
 	if (ch == EOF && sb->len == 0)
 		return EOF;
 
 	sb->buf[sb->len] = '\0';
 	return 0;
 }
+#endif
 
 int strbuf_getline(struct strbuf *sb, FILE *fp, int term)
 {
 	if (strbuf_getwholeline(sb, fp, term))
 		return EOF;
 	if (sb->buf[sb->len-1] == term)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/strbuf.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/strbuf.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/strbuf.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/strbuf.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/strbuf.h	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/strbuf.h	2015-07-28 04:34:56.000000000 +0800
@@ -202,13 +202,14 @@
 
 /**
  * Add a single character to the buffer.
  */
 static inline void strbuf_addch(struct strbuf *sb, int c)
 {
-	strbuf_grow(sb, 1);
+	if (!strbuf_avail(sb))
+		strbuf_grow(sb, 1);
 	sb->buf[sb->len++] = c;
 	sb->buf[sb->len] = '\0';
 }
 
 /**
  * Add a character the specified number of times to the buffer.
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/strbuf.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/strbuf.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/streaming.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/streaming.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/streaming.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/streaming.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/string-list.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/string-list.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/string-list.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/string-list.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/submodule.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/submodule.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/submodule.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/submodule.c	2015-07-28 04:34:56.000000000 +0800
@@ -419,13 +419,14 @@
 
 void set_config_fetch_recurse_submodules(int value)
 {
 	config_fetch_recurse_submodules = value;
 }
 
-static int has_remote(const char *refname, const unsigned char *sha1, int flags, void *cb_data)
+static int has_remote(const char *refname, const struct object_id *oid,
+		      int flags, void *cb_data)
 {
 	return 1;
 }
 
 static int submodule_needs_pushing(const char *path, const unsigned char sha1[20])
 {
@@ -613,16 +614,16 @@
 			 * that so they can be checked out from there. */
 			continue;
 		}
 	}
 }
 
-static int add_sha1_to_array(const char *ref, const unsigned char *sha1,
+static int add_sha1_to_array(const char *ref, const struct object_id *oid,
 			     int flags, void *data)
 {
-	sha1_array_append(data, sha1);
+	sha1_array_append(data, oid->hash);
 	return 0;
 }
 
 void check_for_new_submodule_commits(unsigned char new_sha1[20])
 {
 	if (!initialized_fetch_ref_tips) {
@@ -1096,22 +1097,17 @@
 /* Update gitfile and core.worktree setting to connect work tree and git dir */
 void connect_work_tree_and_git_dir(const char *work_tree, const char *git_dir)
 {
 	struct strbuf file_name = STRBUF_INIT;
 	struct strbuf rel_path = STRBUF_INIT;
 	const char *real_work_tree = xstrdup(real_path(work_tree));
-	FILE *fp;
 
 	/* Update gitfile */
 	strbuf_addf(&file_name, "%s/.git", work_tree);
-	fp = fopen(file_name.buf, "w");
-	if (!fp)
-		die(_("Could not create git link %s"), file_name.buf);
-	fprintf(fp, "gitdir: %s\n", relative_path(git_dir, real_work_tree,
-						  &rel_path));
-	fclose(fp);
+	write_file(file_name.buf, 1, "gitdir: %s\n",
+		   relative_path(git_dir, real_work_tree, &rel_path));
 
 	/* Update core.worktree setting */
 	strbuf_reset(&file_name);
 	strbuf_addf(&file_name, "%s/config", git_dir);
 	if (git_config_set_in_file(file_name.buf, "core.worktree",
 				   relative_path(real_work_tree, git_dir,
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/submodule.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/submodule.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/submodule.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/submodule.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/symlinks.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/symlinks.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/symlinks.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/symlinks.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/lib-git-p4.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/lib-git-p4.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/lib-git-p4.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/lib-git-p4.sh	2015-07-28 04:34:56.000000000 +0800
@@ -66,13 +66,13 @@
 start_p4d() {
 	mkdir -p "$db" "$cli" "$git" &&
 	rm -f "$pidfile" &&
 	(
 		cd "$db" &&
 		{
-			p4d -q -p $P4DPORT &
+			p4d -q -p $P4DPORT "$@" &
 			echo $! >"$pidfile"
 		}
 	) &&
 
 	# This gives p4d a long time to start up, as it can be
 	# quite slow depending on the machine.  Set this environment
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/lib-httpd/apache.conf /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/lib-httpd/apache.conf
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/lib-httpd/apache.conf	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/lib-httpd/apache.conf	2015-07-28 04:34:56.000000000 +0800
@@ -116,16 +116,12 @@
 
 RewriteEngine on
 RewriteRule ^/smart-redir-perm/(.*)$ /smart/$1 [R=301]
 RewriteRule ^/smart-redir-temp/(.*)$ /smart/$1 [R=302]
 RewriteRule ^/smart-redir-auth/(.*)$ /auth/smart/$1 [R=301]
 RewriteRule ^/smart-redir-limited/(.*)/info/refs$ /smart/$1/info/refs [R=301]
-RewriteRule ^/ftp-redir/(.*)$ ftp://localhost:1000/$1 [R=302]
-
-RewriteRule ^/loop-redir/x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-(.*) /$1 [R=302]
-RewriteRule ^/loop-redir/(.*)$ /loop-redir/x-$1 [R=302]
 
 <IfDefine SSL>
 LoadModule ssl_module modules/mod_ssl.so
 
 SSLCertificateFile httpd.pem
 SSLCertificateKeyFile httpd.pem
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t: lib-proto-disable.sh
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/perf/p5310-pack-bitmaps.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/perf/p5310-pack-bitmaps.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/perf/p5310-pack-bitmaps.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/perf/p5310-pack-bitmaps.sh	2015-07-28 04:34:56.000000000 +0800
@@ -36,20 +36,20 @@
 	# pick a commit to represent the repo tip in the past
 	cutoff=$(git rev-list HEAD~100 -1) &&
 	orig_tip=$(git rev-parse HEAD) &&
 
 	# now kill off all of the refs and pretend we had
 	# just the one tip
-	rm -rf .git/logs .git/refs/* .git/packed-refs
-	git update-ref HEAD $cutoff
+	rm -rf .git/logs .git/refs/* .git/packed-refs &&
+	git update-ref HEAD $cutoff &&
 
 	# and then repack, which will leave us with a nice
 	# big bitmap pack of the "old" history, and all of
 	# the new history will be loose, as if it had been pushed
 	# up incrementally and exploded via unpack-objects
-	git repack -Ad
+	git repack -Ad &&
 
 	# and now restore our original tip, as if the pushes
 	# had happened
 	git update-ref HEAD $orig_tip
 '
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t0021-conversion.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t0021-conversion.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t0021-conversion.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t0021-conversion.sh	2015-07-28 04:34:56.000000000 +0800
@@ -201,12 +201,22 @@
 	git config filter.devnull.required true &&
 	for i in $(test_seq 1 30); do printf "%1048576d" 1; done >30MB &&
 	echo "30MB filter=devnull" >.gitattributes &&
 	GIT_MMAP_LIMIT=1m GIT_ALLOC_LIMIT=1m git add 30MB
 '
 
+test_expect_success 'filter that does not read is fine' '
+	test-genrandom foo $((128 * 1024 + 1)) >big &&
+	echo "big filter=epipe" >.gitattributes &&
+	git config filter.epipe.clean "echo xyzzy" &&
+	git add big &&
+	git cat-file blob :big >actual &&
+	echo xyzzy >expect &&
+	test_cmp expect actual
+'
+
 test_expect_success EXPENSIVE 'filter large file' '
 	git config filter.largefile.smudge cat &&
 	git config filter.largefile.clean cat &&
 	for i in $(test_seq 1 2048); do printf "%1048576d" 1; done >2GB &&
 	echo "2GB filter=largefile" >.gitattributes &&
 	git add 2GB 2>err &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t0027-auto-crlf.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t0027-auto-crlf.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t0027-auto-crlf.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t0027-auto-crlf.sh	2015-07-28 04:34:56.000000000 +0800
@@ -54,34 +54,41 @@
 		;;
 	esac
 }
 
 check_warning () {
 	case "$1" in
-	LF_CRLF) grep "LF will be replaced by CRLF" $2;;
-	CRLF_LF) grep "CRLF will be replaced by LF" $2;;
-	'')
-		>expect
-		grep "will be replaced by" $2 >actual
-		test_cmp expect actual
-		;;
-	*) false ;;
+	LF_CRLF) echo "warning: LF will be replaced by CRLF" >"$2".expect ;;
+	CRLF_LF) echo "warning: CRLF will be replaced by LF" >"$2".expect ;;
+	'')	                                                 >"$2".expect ;;
+	*) echo >&2 "Illegal 1": "$1" ; return false ;;
 	esac
+	grep "will be replaced by" "$2" | sed -e "s/\(.*\) in [^ ]*$/\1/" >"$2".actual
+	test_cmp "$2".expect "$2".actual
 }
 
-create_file_in_repo () {
+commit_check_warn () {
 	crlf=$1
 	attr=$2
 	lfname=$3
 	crlfname=$4
-	lfmixcrlf=$5
-	lfmixcr=$6
-	crlfnul=$7
-	create_gitattributes "$attr" &&
+	repoMIX=$5
+	lfmixcrlf=$6
+	lfmixcr=$7
+	crlfnul=$8
 	pfx=crlf_${crlf}_attr_${attr}
-	for f in LF CRLF LF_mix_CR CRLF_mix_LF CRLF_nul
+	# Special handling for repoMIX: It should already be in the repo
+	# with CRLF
+	f=repoMIX
+	fname=${pfx}_$f.txt
+	echo >.gitattributes &&
+	cp $f $fname &&
+	git -c core.autocrlf=false add $fname 2>"${pfx}_$f.err" &&
+	git commit -m "repoMIX" &&
+	create_gitattributes "$attr" &&
+	for f in LF CRLF repoMIX LF_mix_CR CRLF_mix_LF LF_nul CRLF_nul
 	do
 		fname=${pfx}_$f.txt &&
 		cp $f $fname &&
 		git -c core.autocrlf=$crlf add $fname 2>"${pfx}_$f.err"
 	done &&
 	git commit -m "core.autocrlf $crlf" &&
@@ -106,26 +113,26 @@
 	compare_files $lfmixcrlf ${pfx}CRLF_mix_LF.txt &&
 	compare_files $lfmixcr ${pfx}LF_mix_CR.txt &&
 	compare_files $crlfnul ${pfx}CRLF_nul.txt
 }
 
 
-check_files_in_ws () {
+checkout_files () {
 	eol=$1
 	crlf=$2
 	attr=$3
 	lfname=$4
 	crlfname=$5
 	lfmixcrlf=$6
 	lfmixcr=$7
 	crlfnul=$8
 	create_gitattributes $attr &&
 	git config core.autocrlf $crlf &&
 	pfx=eol_${eol}_crlf_${crlf}_attr_${attr}_ &&
 	src=crlf_false_attr__ &&
-	for f in LF CRLF LF_mix_CR CRLF_mix_LF CRLF_nul
+	for f in LF CRLF LF_mix_CR CRLF_mix_LF LF_nul
 	do
 		rm $src$f.txt &&
 		if test -z "$eol"; then
 			git checkout $src$f.txt
 		else
 			git -c core.eol=$eol checkout $src$f.txt
@@ -141,71 +148,87 @@
 	test_expect_success "checkout core.eol=$eol core.autocrlf=$crlf gitattributes=$attr file=CRLF_mix_LF" "
 		compare_ws_file $pfx $lfmixcrlf ${src}CRLF_mix_LF.txt
 	"
 	test_expect_success "checkout core.eol=$eol core.autocrlf=$crlf gitattributes=$attr file=LF_mix_CR" "
 		compare_ws_file $pfx $lfmixcr   ${src}LF_mix_CR.txt
 	"
-	test_expect_success "checkout core.eol=$eol core.autocrlf=$crlf gitattributes=$attr file=CRLF_nul" "
-		compare_ws_file $pfx $crlfnul   ${src}CRLF_nul.txt
+	test_expect_success "checkout core.eol=$eol core.autocrlf=$crlf gitattributes=$attr file=LF_nul" "
+		compare_ws_file $pfx $crlfnul   ${src}LF_nul.txt
 	"
 }
 
 #######
 test_expect_success 'setup master' '
 	echo >.gitattributes &&
 	git checkout -b master &&
 	git add .gitattributes &&
 	git commit -m "add .gitattributes" "" &&
 	printf "line1\nline2\nline3"     >LF &&
 	printf "line1\r\nline2\r\nline3" >CRLF &&
+	printf "line1\r\nline2\nline3"   >repoMIX &&
 	printf "line1\r\nline2\nline3"   >CRLF_mix_LF &&
 	printf "line1\nline2\rline3"     >LF_mix_CR &&
 	printf "line1\r\nline2\rline3"   >CRLF_mix_CR &&
 	printf "line1Q\r\nline2\r\nline3" | q_to_nul >CRLF_nul &&
 	printf "line1Q\nline2\nline3" | q_to_nul >LF_nul
 '
 
 
 
 warn_LF_CRLF="LF will be replaced by CRLF"
 warn_CRLF_LF="CRLF will be replaced by LF"
 
-test_expect_success 'add files empty attr' '
-	create_file_in_repo false ""     ""        ""        ""        ""        "" &&
-	create_file_in_repo true  ""     "LF_CRLF" ""        "LF_CRLF" ""        "" &&
-	create_file_in_repo input ""     ""        "CRLF_LF" "CRLF_LF" ""        ""
+# WILC stands for "Warn if (this OS) converts LF into CRLF".
+# WICL: Warn if CRLF becomes LF
+# WAMIX: Mixed line endings: either CRLF->LF or LF->CRLF
+if test_have_prereq NATIVE_CRLF
+then
+	WILC=LF_CRLF
+	WICL=
+	WAMIX=LF_CRLF
+else
+	WILC=
+	WICL=CRLF_LF
+	WAMIX=CRLF_LF
+fi
+
+#                         attr   LF        CRLF      repoMIX   CRLFmixLF LFmixCR   CRLFNUL
+test_expect_success 'commit files empty attr' '
+	commit_check_warn false ""     ""        ""        ""        ""        ""        "" &&
+	commit_check_warn true  ""     "LF_CRLF" ""        "LF_CRLF" "LF_CRLF" ""        "" &&
+	commit_check_warn input ""     ""        "CRLF_LF" "CRLF_LF" "CRLF_LF" ""        ""
 '
 
-test_expect_success 'add files attr=auto' '
-	create_file_in_repo false "auto" ""        "CRLF_LF" "CRLF_LF" ""        "" &&
-	create_file_in_repo true  "auto" "LF_CRLF" ""        "LF_CRLF" ""        "" &&
-	create_file_in_repo input "auto" ""        "CRLF_LF" "CRLF_LF" ""        ""
+test_expect_success 'commit files attr=auto' '
+	commit_check_warn false "auto" "$WILC"   "$WICL"   "$WAMIX"  "$WAMIX"  ""        "" &&
+	commit_check_warn true  "auto" "LF_CRLF" ""        "LF_CRLF" "LF_CRLF" ""        "" &&
+	commit_check_warn input "auto" ""        "CRLF_LF" "CRLF_LF" "CRLF_LF" ""        ""
 '
 
-test_expect_success 'add files attr=text' '
-	create_file_in_repo false "text" ""        "CRLF_LF" "CRLF_LF" ""        "CRLF_LF" &&
-	create_file_in_repo true  "text" "LF_CRLF" ""        "LF_CRLF" "LF_CRLF" ""        &&
-	create_file_in_repo input "text" ""        "CRLF_LF" "CRLF_LF" ""        "CRLF_LF"
+test_expect_success 'commit files attr=text' '
+	commit_check_warn false "text" "$WILC"   "$WICL"   "$WAMIX"  "$WAMIX"  "$WILC"   "$WICL"   &&
+	commit_check_warn true  "text" "LF_CRLF" ""        "LF_CRLF" "LF_CRLF" "LF_CRLF" ""        &&
+	commit_check_warn input "text" ""        "CRLF_LF" "CRLF_LF" "CRLF_LF" ""        "CRLF_LF"
 '
 
-test_expect_success 'add files attr=-text' '
-	create_file_in_repo false "-text" ""       ""        ""        ""        "" &&
-	create_file_in_repo true  "-text" ""       ""        ""        ""        "" &&
-	create_file_in_repo input "-text" ""       ""        ""        ""        ""
+test_expect_success 'commit files attr=-text' '
+	commit_check_warn false "-text" ""       ""        ""        ""        ""        "" &&
+	commit_check_warn true  "-text" ""       ""        ""        ""        ""        "" &&
+	commit_check_warn input "-text" ""       ""        ""        ""        ""        ""
 '
 
-test_expect_success 'add files attr=lf' '
-	create_file_in_repo false "lf"    ""       "CRLF_LF" "CRLF_LF"  ""       "CRLF_LF" &&
-	create_file_in_repo true  "lf"    ""       "CRLF_LF" "CRLF_LF"  ""       "CRLF_LF" &&
-	create_file_in_repo input "lf"    ""       "CRLF_LF" "CRLF_LF"  ""       "CRLF_LF"
+test_expect_success 'commit files attr=lf' '
+	commit_check_warn false "lf"    ""       "CRLF_LF" "CRLF_LF" "CRLF_LF"  ""       "CRLF_LF" &&
+	commit_check_warn true  "lf"    ""       "CRLF_LF" "CRLF_LF" "CRLF_LF"  ""       "CRLF_LF" &&
+	commit_check_warn input "lf"    ""       "CRLF_LF" "CRLF_LF" "CRLF_LF"  ""       "CRLF_LF"
 '
 
-test_expect_success 'add files attr=crlf' '
-	create_file_in_repo false "crlf" "LF_CRLF" ""        "LF_CRLF" "LF_CRLF" "" &&
-	create_file_in_repo true  "crlf" "LF_CRLF" ""        "LF_CRLF" "LF_CRLF" "" &&
-	create_file_in_repo input "crlf" "LF_CRLF" ""        "LF_CRLF" "LF_CRLF" ""
+test_expect_success 'commit files attr=crlf' '
+	commit_check_warn false "crlf" "LF_CRLF" ""        "LF_CRLF" "LF_CRLF" "LF_CRLF" "" &&
+	commit_check_warn true  "crlf" "LF_CRLF" ""        "LF_CRLF" "LF_CRLF" "LF_CRLF" "" &&
+	commit_check_warn input "crlf" "LF_CRLF" ""        "LF_CRLF" "LF_CRLF" "LF_CRLF" ""
 '
 
 test_expect_success 'create files cleanup' '
 	rm -f *.txt &&
 	git reset --hard
 '
@@ -234,102 +257,104 @@
 	check_files_in_repo input "-text" LF CRLF CRLF_mix_LF LF_mix_CR CRLF_nul
 '
 
 ################################################################################
 # Check how files in the repo are changed when they are checked out
 # How to read the table below:
-# - check_files_in_ws will check multiple files with a combination of settings
+# - checkout_files will check multiple files with a combination of settings
 #   and attributes (core.autocrlf=input is forbidden with core.eol=crlf)
 # - parameter $1 : core.eol               lf | crlf
 # - parameter $2 : core.autocrlf          false | true | input
 # - parameter $3 : text in .gitattributs  "" (empty) | auto | text | -text
 # - parameter $4 : reference for a file with only LF in the repo
 # - parameter $5 : reference for a file with only CRLF in the repo
 # - parameter $6 : reference for a file with mixed LF and CRLF in the repo
 # - parameter $7 : reference for a file with LF and CR in the repo (does somebody uses this ?)
 # - parameter $8 : reference for a file with CRLF and a NUL (should be handled as binary when auto)
 
 #                                            What we have in the repo:
-#                														 ----------------- EOL in repo ----------------
-#                														 LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
+#                                            ----------------- EOL in repo ----------------
+#                                            LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
 #                   settings with checkout:
 #                   core.   core.   .gitattr
 #                    eol     acrlf
 #                                            ----------------------------------------------
 #                                            What we want to have in the working tree:
-if test_have_prereq MINGW
+if test_have_prereq NATIVE_CRLF
 then
 MIX_CRLF_LF=CRLF
 MIX_LF_CR=CRLF_mix_CR
 NL=CRLF
+LFNUL=CRLF_nul
 else
 MIX_CRLF_LF=CRLF_mix_LF
 MIX_LF_CR=LF_mix_CR
 NL=LF
+LFNUL=LF_nul
 fi
 export CRLF_MIX_LF_CR MIX NL
 
-check_files_in_ws    lf      false  ""       LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    lf      true   ""       CRLF  CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    lf      input  ""       LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    lf      false "auto"    LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    lf      true  "auto"    CRLF  CRLF  CRLF         LF_mix_CR    CRLF_nul
-check_files_in_ws    lf      input "auto"    LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    lf      false "text"    LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    lf      true  "text"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
-check_files_in_ws    lf      input "text"    LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    lf      false "-text"   LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    lf      true  "-text"   LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    lf      input "-text"   LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    lf      false "lf"      LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    lf      true  "lf"      LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    lf      input "lf"      LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    lf      false "crlf"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
-check_files_in_ws    lf      true  "crlf"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
-check_files_in_ws    lf      input "crlf"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
-
-check_files_in_ws    crlf    false  ""       LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    crlf    true   ""       CRLF  CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    crlf    false "auto"    CRLF  CRLF  CRLF         LF_mix_CR    CRLF_nul
-check_files_in_ws    crlf    true  "auto"    CRLF  CRLF  CRLF         LF_mix_CR    CRLF_nul
-check_files_in_ws    crlf    false "text"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
-check_files_in_ws    crlf    true  "text"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
-check_files_in_ws    crlf    false "-text"   LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    crlf    true  "-text"   LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    crlf    false "lf"      LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    crlf    true  "lf"      LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    crlf    false "crlf"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
-check_files_in_ws    crlf    true  "crlf"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
-
-check_files_in_ws    ""      false  ""       LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    ""      true   ""       CRLF  CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    ""      input  ""       LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    ""      false "auto"    $NL   CRLF  $MIX_CRLF_LF LF_mix_CR    CRLF_nul
-check_files_in_ws    ""      true  "auto"    CRLF  CRLF  CRLF         LF_mix_CR    CRLF_nul
-check_files_in_ws    ""      input "auto"    LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    ""      false "text"    $NL   CRLF  $MIX_CRLF_LF $MIX_LF_CR   CRLF_nul
-check_files_in_ws    ""      true  "text"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
-check_files_in_ws    ""      input "text"    LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    ""      false "-text"   LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    ""      true  "-text"   LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    ""      input "-text"   LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    ""      false "lf"      LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    ""      true  "lf"      LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    ""      input "lf"      LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    ""      false "crlf"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
-check_files_in_ws    ""      true  "crlf"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
-check_files_in_ws    ""      input "crlf"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
-
-check_files_in_ws    native  false  ""       LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    native  true   ""       CRLF  CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    native  false "auto"    $NL   CRLF  $MIX_CRLF_LF LF_mix_CR    CRLF_nul
-check_files_in_ws    native  true  "auto"    CRLF  CRLF  CRLF         LF_mix_CR    CRLF_nul
-check_files_in_ws    native  false "text"    $NL   CRLF  $MIX_CRLF_LF $MIX_LF_CR   CRLF_nul
-check_files_in_ws    native  true  "text"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
-check_files_in_ws    native  false "-text"   LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    native  true  "-text"   LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    native  false "lf"      LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    native  true  "lf"      LF    CRLF  CRLF_mix_LF  LF_mix_CR    CRLF_nul
-check_files_in_ws    native  false "crlf"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
-check_files_in_ws    native  true  "crlf"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
+checkout_files    lf      false  ""       LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    lf      true   ""       CRLF  CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    lf      input  ""       LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    lf      false "auto"    LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    lf      true  "auto"    CRLF  CRLF  CRLF         LF_mix_CR    LF_nul
+checkout_files    lf      input "auto"    LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    lf      false "text"    LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    lf      true  "text"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
+checkout_files    lf      input "text"    LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    lf      false "-text"   LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    lf      true  "-text"   LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    lf      input "-text"   LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    lf      false "lf"      LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    lf      true  "lf"      LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    lf      input "lf"      LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    lf      false "crlf"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
+checkout_files    lf      true  "crlf"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
+checkout_files    lf      input "crlf"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
+
+checkout_files    crlf    false  ""       LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    crlf    true   ""       CRLF  CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    crlf    false "auto"    CRLF  CRLF  CRLF         LF_mix_CR    LF_nul
+checkout_files    crlf    true  "auto"    CRLF  CRLF  CRLF         LF_mix_CR    LF_nul
+checkout_files    crlf    false "text"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
+checkout_files    crlf    true  "text"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
+checkout_files    crlf    false "-text"   LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    crlf    true  "-text"   LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    crlf    false "lf"      LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    crlf    true  "lf"      LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    crlf    false "crlf"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
+checkout_files    crlf    true  "crlf"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
+
+checkout_files    ""      false  ""       LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    ""      true   ""       CRLF  CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    ""      input  ""       LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    ""      false "auto"    $NL   CRLF  $MIX_CRLF_LF LF_mix_CR    LF_nul
+checkout_files    ""      true  "auto"    CRLF  CRLF  CRLF         LF_mix_CR    LF_nul
+checkout_files    ""      input "auto"    LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    ""      false "text"    $NL   CRLF  $MIX_CRLF_LF $MIX_LF_CR   $LFNUL
+checkout_files    ""      true  "text"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
+checkout_files    ""      input "text"    LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    ""      false "-text"   LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    ""      true  "-text"   LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    ""      input "-text"   LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    ""      false "lf"      LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    ""      true  "lf"      LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    ""      input "lf"      LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    ""      false "crlf"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
+checkout_files    ""      true  "crlf"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
+checkout_files    ""      input "crlf"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
+
+checkout_files    native  false  ""       LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    native  true   ""       CRLF  CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    native  false "auto"    $NL   CRLF  $MIX_CRLF_LF LF_mix_CR    LF_nul
+checkout_files    native  true  "auto"    CRLF  CRLF  CRLF         LF_mix_CR    LF_nul
+checkout_files    native  false "text"    $NL   CRLF  $MIX_CRLF_LF $MIX_LF_CR   $LFNUL
+checkout_files    native  true  "text"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
+checkout_files    native  false "-text"   LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    native  true  "-text"   LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    native  false "lf"      LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    native  true  "lf"      LF    CRLF  CRLF_mix_LF  LF_mix_CR    LF_nul
+checkout_files    native  false "crlf"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
+checkout_files    native  true  "crlf"    CRLF  CRLF  CRLF         CRLF_mix_CR  CRLF_nul
 
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t0060-path-utils.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t0060-path-utils.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t0060-path-utils.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t0060-path-utils.sh	2015-07-28 04:34:56.000000000 +0800
@@ -16,12 +16,20 @@
 relative_path() {
 	expected=$(test-path-utils print_path "$3")
 	test_expect_success $4 "relative path: $1 $2 => $3" \
 	"test \"\$(test-path-utils relative_path '$1' '$2')\" = '$expected'"
 }
 
+test_git_path() {
+	test_expect_success "git-path $1 $2 => $3" "
+		$1 git rev-parse --git-path $2 >actual &&
+		echo $3 >expect &&
+		test_cmp expect actual
+	"
+}
+
 # On Windows, we are using MSYS's bash, which mangles the paths.
 # Absolute paths are anchored at the MSYS installation directory,
 # which means that the path / accounts for this many characters:
 rootoff=$(test-path-utils normalize_path_copy / | wc -c)
 # Account for the trailing LF:
 if test $rootoff = 2; then
@@ -241,7 +249,35 @@
 relative_path "<empty>"		"<empty>"	./
 relative_path "<empty>"		"<null>"	./
 relative_path "<null>"		"<empty>"	./
 relative_path "<null>"		"<null>"	./
 relative_path "<null>"		/foo/a/b	./
 
+test_git_path A=B                info/grafts .git/info/grafts
+test_git_path GIT_GRAFT_FILE=foo info/grafts foo
+test_git_path GIT_GRAFT_FILE=foo info/////grafts foo
+test_git_path GIT_INDEX_FILE=foo index foo
+test_git_path GIT_INDEX_FILE=foo index/foo .git/index/foo
+test_git_path GIT_INDEX_FILE=foo index2 .git/index2
+test_expect_success 'setup fake objects directory foo' 'mkdir foo'
+test_git_path GIT_OBJECT_DIRECTORY=foo objects foo
+test_git_path GIT_OBJECT_DIRECTORY=foo objects/foo foo/foo
+test_git_path GIT_OBJECT_DIRECTORY=foo objects2 .git/objects2
+test_expect_success 'setup common repository' 'git --git-dir=bar init'
+test_git_path GIT_COMMON_DIR=bar index                    .git/index
+test_git_path GIT_COMMON_DIR=bar HEAD                     .git/HEAD
+test_git_path GIT_COMMON_DIR=bar logs/HEAD                .git/logs/HEAD
+test_git_path GIT_COMMON_DIR=bar objects                  bar/objects
+test_git_path GIT_COMMON_DIR=bar objects/bar              bar/objects/bar
+test_git_path GIT_COMMON_DIR=bar info/exclude             bar/info/exclude
+test_git_path GIT_COMMON_DIR=bar info/grafts              bar/info/grafts
+test_git_path GIT_COMMON_DIR=bar info/sparse-checkout     .git/info/sparse-checkout
+test_git_path GIT_COMMON_DIR=bar remotes/bar              bar/remotes/bar
+test_git_path GIT_COMMON_DIR=bar branches/bar             bar/branches/bar
+test_git_path GIT_COMMON_DIR=bar logs/refs/heads/master   bar/logs/refs/heads/master
+test_git_path GIT_COMMON_DIR=bar refs/heads/master        bar/refs/heads/master
+test_git_path GIT_COMMON_DIR=bar hooks/me                 bar/hooks/me
+test_git_path GIT_COMMON_DIR=bar config                   bar/config
+test_git_path GIT_COMMON_DIR=bar packed-refs              bar/packed-refs
+test_git_path GIT_COMMON_DIR=bar shallow                  bar/shallow
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t1006-cat-file.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t1006-cat-file.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t1006-cat-file.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t1006-cat-file.sh	2015-07-28 04:34:56.000000000 +0800
@@ -44,12 +44,24 @@
     test_expect_success "Size of $type is correct" '
 	echo $size >expect &&
 	git cat-file -s $sha1 >actual &&
 	test_cmp expect actual
     '
 
+    test_expect_success "Type of $type is correct using --allow-unknown-type" '
+	echo $type >expect &&
+	git cat-file -t --allow-unknown-type $sha1 >actual &&
+	test_cmp expect actual
+    '
+
+    test_expect_success "Size of $type is correct using --allow-unknown-type" '
+	echo $size >expect &&
+	git cat-file -s --allow-unknown-type $sha1 >actual &&
+	test_cmp expect actual
+    '
+
     test -z "$content" ||
     test_expect_success "Content of $type is correct" '
 	maybe_remove_timestamp "$content" $no_ts >expect &&
 	maybe_remove_timestamp "$(git cat-file $type $sha1)" $no_ts >actual &&
 	test_cmp expect actual
     '
@@ -186,12 +198,19 @@
 
     test_expect_success "Passing sha1 with --$batch fails" '
 	test_must_fail git cat-file --$batch $hello_sha1
     '
 done
 
+for opt in t s e p
+do
+    test_expect_success "Passing -$opt with --follow-symlinks fails" '
+	    test_must_fail git cat-file --follow-symlinks -$opt $hello_sha1
+	'
+done
+
 test_expect_success "--batch-check for a non-existent named object" '
     test "foobar42 missing
 foobar84 missing" = \
     "$( ( echo foobar42; echo_without_newline foobar84; ) | git cat-file --batch-check)"
 '
 
@@ -293,7 +312,239 @@
 	{
 		grep "$(git rev-parse HEAD:foo)" actual ||
 		grep "$(git rev-parse HEAD:foo-plus)" actual
 	}
 '
 
+bogus_type="bogus"
+bogus_content="bogus"
+bogus_size=$(strlen "$bogus_content")
+bogus_sha1=$(echo_without_newline "$bogus_content" | git hash-object -t $bogus_type --literally -w --stdin)
+
+test_expect_success "Type of broken object is correct" '
+	echo $bogus_type >expect &&
+	git cat-file -t --allow-unknown-type $bogus_sha1 >actual &&
+	test_cmp expect actual
+'
+
+test_expect_success "Size of broken object is correct" '
+	echo $bogus_size >expect &&
+	git cat-file -s --allow-unknown-type $bogus_sha1 >actual &&
+	test_cmp expect actual
+'
+bogus_type="abcdefghijklmnopqrstuvwxyz1234679"
+bogus_content="bogus"
+bogus_size=$(strlen "$bogus_content")
+bogus_sha1=$(echo_without_newline "$bogus_content" | git hash-object -t $bogus_type --literally -w --stdin)
+
+test_expect_success "Type of broken object is correct when type is large" '
+	echo $bogus_type >expect &&
+	git cat-file -t --allow-unknown-type $bogus_sha1 >actual &&
+	test_cmp expect actual
+'
+
+test_expect_success "Size of large broken object is correct when type is large" '
+	echo $bogus_size >expect &&
+	git cat-file -s --allow-unknown-type $bogus_sha1 >actual &&
+	test_cmp expect actual
+'
+
+# Tests for git cat-file --follow-symlinks
+test_expect_success 'prep for symlink tests' '
+	echo_without_newline "$hello_content" >morx &&
+	test_ln_s_add morx same-dir-link &&
+	test_ln_s_add dir link-to-dir &&
+	test_ln_s_add ../fleem out-of-repo-link &&
+	test_ln_s_add .. out-of-repo-link-dir &&
+	test_ln_s_add same-dir-link link-to-link &&
+	test_ln_s_add nope broken-same-dir-link &&
+	mkdir dir &&
+	test_ln_s_add ../morx dir/parent-dir-link &&
+	test_ln_s_add .. dir/link-dir &&
+	test_ln_s_add ../../escape dir/out-of-repo-link &&
+	test_ln_s_add ../.. dir/out-of-repo-link-dir &&
+	test_ln_s_add nope dir/broken-link-in-dir &&
+	mkdir dir/subdir &&
+	test_ln_s_add ../../morx dir/subdir/grandparent-dir-link &&
+	test_ln_s_add ../../../great-escape dir/subdir/out-of-repo-link &&
+	test_ln_s_add ../../.. dir/subdir/out-of-repo-link-dir &&
+	test_ln_s_add ../../../ dir/subdir/out-of-repo-link-dir-trailing &&
+	test_ln_s_add ../parent-dir-link dir/subdir/parent-dir-link-to-link &&
+	echo_without_newline "$hello_content" >dir/subdir/ind2 &&
+	echo_without_newline "$hello_content" >dir/ind1 &&
+	test_ln_s_add dir dirlink &&
+	test_ln_s_add dir/subdir subdirlink &&
+	test_ln_s_add subdir/ind2 dir/link-to-child &&
+	test_ln_s_add dir/link-to-child link-to-down-link &&
+	test_ln_s_add dir/.. up-down &&
+	test_ln_s_add dir/../ up-down-trailing &&
+	test_ln_s_add dir/../morx up-down-file &&
+	test_ln_s_add dir/../../morx up-up-down-file &&
+	test_ln_s_add subdirlink/../../morx up-two-down-file &&
+	test_ln_s_add loop1 loop2 &&
+	test_ln_s_add loop2 loop1 &&
+	git add morx dir/subdir/ind2 dir/ind1 &&
+	git commit -am "test" &&
+	echo $hello_sha1 blob $hello_size >found
+'
+
+test_expect_success 'git cat-file --batch-check --follow-symlinks works for non-links' '
+	echo HEAD:morx | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp found actual &&
+	echo HEAD:nope missing >expect &&
+	echo HEAD:nope | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp expect actual
+'
+
+test_expect_success 'git cat-file --batch-check --follow-symlinks works for in-repo, same-dir links' '
+	echo HEAD:same-dir-link | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp found actual
+'
+
+test_expect_success 'git cat-file --batch-check --follow-symlinks works for in-repo, links to dirs' '
+	echo HEAD:link-to-dir/ind1 | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp found actual
+'
+
+
+test_expect_success 'git cat-file --batch-check --follow-symlinks works for broken in-repo, same-dir links' '
+	echo dangling 25 >expect &&
+	echo HEAD:broken-same-dir-link >>expect &&
+	echo HEAD:broken-same-dir-link | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp expect actual
+'
+
+test_expect_success 'git cat-file --batch-check --follow-symlinks works for same-dir links-to-links' '
+	echo HEAD:link-to-link | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp found actual
+'
+
+test_expect_success 'git cat-file --batch-check --follow-symlinks works for parent-dir links' '
+	echo HEAD:dir/parent-dir-link | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp found actual &&
+	echo notdir 29 >expect &&
+	echo HEAD:dir/parent-dir-link/nope >>expect &&
+	echo HEAD:dir/parent-dir-link/nope | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp expect actual
+'
+
+test_expect_success 'git cat-file --batch-check --follow-symlinks works for .. links' '
+	echo dangling 22 >expect &&
+	echo HEAD:dir/link-dir/nope >>expect &&
+	echo HEAD:dir/link-dir/nope | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp expect actual &&
+	echo HEAD:dir/link-dir/morx | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp found actual &&
+	echo dangling 27 >expect &&
+	echo HEAD:dir/broken-link-in-dir >>expect &&
+	echo HEAD:dir/broken-link-in-dir | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp expect actual
+'
+
+test_expect_success 'git cat-file --batch-check --follow-symlinks works for ../.. links' '
+	echo notdir 41 >expect &&
+	echo HEAD:dir/subdir/grandparent-dir-link/nope >>expect &&
+	echo HEAD:dir/subdir/grandparent-dir-link/nope | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp expect actual &&
+	echo HEAD:dir/subdir/grandparent-dir-link | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp found actual &&
+	echo HEAD:dir/subdir/parent-dir-link-to-link | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp found actual
+'
+
+test_expect_success 'git cat-file --batch-check --follow-symlinks works for dir/ links' '
+	echo dangling 17 >expect &&
+	echo HEAD:dirlink/morx >>expect &&
+	echo HEAD:dirlink/morx | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp expect actual &&
+	echo $hello_sha1 blob $hello_size >expect &&
+	echo HEAD:dirlink/ind1 | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp expect actual
+'
+
+test_expect_success 'git cat-file --batch-check --follow-symlinks works for dir/subdir links' '
+	echo dangling 20 >expect &&
+	echo HEAD:subdirlink/morx >>expect &&
+	echo HEAD:subdirlink/morx | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp expect actual &&
+	echo HEAD:subdirlink/ind2 | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp found actual
+'
+
+test_expect_success 'git cat-file --batch-check --follow-symlinks works for dir ->subdir links' '
+	echo notdir 27 >expect &&
+	echo HEAD:dir/link-to-child/morx >>expect &&
+	echo HEAD:dir/link-to-child/morx | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp expect actual &&
+	echo HEAD:dir/link-to-child | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp found actual &&
+	echo HEAD:link-to-down-link | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp found actual
+'
+
+test_expect_success 'git cat-file --batch-check --follow-symlinks works for out-of-repo symlinks' '
+	echo symlink 8 >expect &&
+	echo ../fleem >>expect &&
+	echo HEAD:out-of-repo-link | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp expect actual &&
+	echo symlink 2 >expect &&
+	echo .. >>expect &&
+	echo HEAD:out-of-repo-link-dir | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp expect actual
+'
+
+test_expect_success 'git cat-file --batch-check --follow-symlinks works for out-of-repo symlinks in dirs' '
+	echo symlink 9 >expect &&
+	echo ../escape >>expect &&
+	echo HEAD:dir/out-of-repo-link | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp expect actual &&
+	echo symlink 2 >expect &&
+	echo .. >>expect &&
+	echo HEAD:dir/out-of-repo-link-dir | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp expect actual
+'
+
+test_expect_success 'git cat-file --batch-check --follow-symlinks works for out-of-repo symlinks in subdirs' '
+	echo symlink 15 >expect &&
+	echo ../great-escape >>expect &&
+	echo HEAD:dir/subdir/out-of-repo-link | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp expect actual &&
+	echo symlink 2 >expect &&
+	echo .. >>expect &&
+	echo HEAD:dir/subdir/out-of-repo-link-dir | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp expect actual &&
+	echo symlink 3 >expect &&
+	echo ../ >>expect &&
+	echo HEAD:dir/subdir/out-of-repo-link-dir-trailing | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp expect actual
+'
+
+test_expect_success 'git cat-file --batch-check --follow-symlinks works for symlinks with internal ..' '
+	echo HEAD: | git cat-file --batch-check >expect &&
+	echo HEAD:up-down | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp expect actual &&
+	echo HEAD:up-down-trailing | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp expect actual &&
+	echo HEAD:up-down-file | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp found actual &&
+	echo symlink 7 >expect &&
+	echo ../morx >>expect &&
+	echo HEAD:up-up-down-file | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp expect actual &&
+	echo HEAD:up-two-down-file | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp found actual
+'
+
+test_expect_success 'git cat-file --batch-check --follow-symlink breaks loops' '
+	echo loop 10 >expect &&
+	echo HEAD:loop1 >>expect &&
+	echo HEAD:loop1 | git cat-file --batch-check --follow-symlinks >actual &&
+	test_cmp expect actual
+'
+
+test_expect_success 'git cat-file --batch --follow-symlink returns correct sha and mode' '
+	echo HEAD:morx | git cat-file --batch >expect &&
+	echo HEAD:morx | git cat-file --batch --follow-symlinks >actual &&
+	test_cmp expect actual
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t1400-update-ref.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t1400-update-ref.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t1400-update-ref.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t1400-update-ref.sh	2015-07-28 04:34:56.000000000 +0800
@@ -516,13 +516,13 @@
 	git update-ref -d refs/blobs/pws
 '
 
 test_expect_success 'stdin update ref fails with wrong old value' '
 	echo "update $c $m $m~1" >stdin &&
 	test_must_fail git update-ref --stdin <stdin 2>err &&
-	grep "fatal: Cannot lock ref '"'"'$c'"'"'" err &&
+	grep "fatal: cannot lock ref '"'"'$c'"'"'" err &&
 	test_must_fail git rev-parse --verify -q $c
 '
 
 test_expect_success 'stdin update ref fails with bad old value' '
 	echo "update $c $m does-not-exist" >stdin &&
 	test_must_fail git update-ref --stdin <stdin 2>err &&
@@ -552,13 +552,13 @@
 	test_cmp expect actual
 '
 
 test_expect_success 'stdin delete ref fails with wrong old value' '
 	echo "delete $a $m~1" >stdin &&
 	test_must_fail git update-ref --stdin <stdin 2>err &&
-	grep "fatal: Cannot lock ref '"'"'$a'"'"'" err &&
+	grep "fatal: cannot lock ref '"'"'$a'"'"'" err &&
 	git rev-parse $m >expect &&
 	git rev-parse $a >actual &&
 	test_cmp expect actual
 '
 
 test_expect_success 'stdin delete ref fails with zero old value' '
@@ -685,13 +685,13 @@
 	cat >stdin <<-EOF &&
 	update $a $m $m
 	update $b $m $m
 	update $c  ''
 	EOF
 	test_must_fail git update-ref --stdin <stdin 2>err &&
-	grep "fatal: Cannot lock ref '"'"'$c'"'"'" err &&
+	grep "fatal: cannot lock ref '"'"'$c'"'"'" err &&
 	git rev-parse $m >expect &&
 	git rev-parse $a >actual &&
 	test_cmp expect actual &&
 	git rev-parse $b >actual &&
 	test_cmp expect actual &&
 	git rev-parse $c >actual &&
@@ -880,13 +880,13 @@
 	git update-ref -d refs/blobs/pws
 '
 
 test_expect_success 'stdin -z update ref fails with wrong old value' '
 	printf $F "update $c" "$m" "$m~1" >stdin &&
 	test_must_fail git update-ref -z --stdin <stdin 2>err &&
-	grep "fatal: Cannot lock ref '"'"'$c'"'"'" err &&
+	grep "fatal: cannot lock ref '"'"'$c'"'"'" err &&
 	test_must_fail git rev-parse --verify -q $c
 '
 
 test_expect_success 'stdin -z update ref fails with bad old value' '
 	printf $F "update $c" "$m" "does-not-exist" >stdin &&
 	test_must_fail git update-ref -z --stdin <stdin 2>err &&
@@ -896,13 +896,13 @@
 
 test_expect_success 'stdin -z create ref fails when ref exists' '
 	git update-ref $c $m &&
 	git rev-parse "$c" >expect &&
 	printf $F "create $c" "$m~1" >stdin &&
 	test_must_fail git update-ref -z --stdin <stdin 2>err &&
-	grep "fatal: Cannot lock ref '"'"'$c'"'"'" err &&
+	grep "fatal: cannot lock ref '"'"'$c'"'"'" err &&
 	git rev-parse "$c" >actual &&
 	test_cmp expect actual
 '
 
 test_expect_success 'stdin -z create ref fails with bad new value' '
 	git update-ref -d "$c" &&
@@ -927,13 +927,13 @@
 	test_cmp expect actual
 '
 
 test_expect_success 'stdin -z delete ref fails with wrong old value' '
 	printf $F "delete $a" "$m~1" >stdin &&
 	test_must_fail git update-ref -z --stdin <stdin 2>err &&
-	grep "fatal: Cannot lock ref '"'"'$a'"'"'" err &&
+	grep "fatal: cannot lock ref '"'"'$a'"'"'" err &&
 	git rev-parse $m >expect &&
 	git rev-parse $a >actual &&
 	test_cmp expect actual
 '
 
 test_expect_success 'stdin -z delete ref fails with zero old value' '
@@ -1042,13 +1042,13 @@
 '
 
 test_expect_success 'stdin -z update refs fails with wrong old value' '
 	git update-ref $c $m &&
 	printf $F "update $a" "$m" "$m" "update $b" "$m" "$m" "update $c" "$m" "$Z" >stdin &&
 	test_must_fail git update-ref -z --stdin <stdin 2>err &&
-	grep "fatal: Cannot lock ref '"'"'$c'"'"'" err &&
+	grep "fatal: cannot lock ref '"'"'$c'"'"'" err &&
 	git rev-parse $m >expect &&
 	git rev-parse $a >actual &&
 	test_cmp expect actual &&
 	git rev-parse $b >actual &&
 	test_cmp expect actual &&
 	git rev-parse $c >actual &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t1430-bad-ref-name.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t1430-bad-ref-name.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t1430-bad-ref-name.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t1430-bad-ref-name.sh	2015-07-28 04:34:56.000000000 +0800
@@ -65,12 +65,20 @@
 	echo precious >.git/my-private-file &&
 	echo precious >expect &&
 	test_must_fail git branch -D ../../my-private-file &&
 	test_cmp expect .git/my-private-file
 '
 
+test_expect_success 'branch -D cannot delete ref in .git dir' '
+	git rev-parse HEAD >.git/my-private-file &&
+	git rev-parse HEAD >expect &&
+	git branch foo/legit &&
+	test_must_fail git branch -D foo////./././../../../my-private-file &&
+	test_cmp expect .git/my-private-file
+'
+
 test_expect_success 'branch -D cannot delete absolute path' '
 	git branch -f extra &&
 	test_must_fail git branch -D "$(pwd)/.git/refs/heads/extra" &&
 	test_cmp_rev HEAD extra
 '
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t1501-worktree.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t1501-worktree.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t1501-worktree.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t1501-worktree.sh	2015-07-28 04:34:56.000000000 +0800
@@ -343,7 +343,84 @@
 	GIT_DIR=repo.git GIT_WORK_TREE=repo.git/work \
 	test-subprocess --setup-work-tree rev-parse --show-toplevel >actual &&
 	echo "$(pwd)/repo.git/work" >expected &&
 	test_cmp expected actual
 '
 
+test_expect_success 'Multi-worktree setup' '
+	mkdir work &&
+	mkdir -p repo.git/repos/foo &&
+	cp repo.git/HEAD repo.git/index repo.git/repos/foo &&
+	test_might_fail cp repo.git/sharedindex.* repo.git/repos/foo &&
+	sane_unset GIT_DIR GIT_CONFIG GIT_WORK_TREE
+'
+
+test_expect_success 'GIT_DIR set (1)' '
+	echo "gitdir: repo.git/repos/foo" >gitfile &&
+	echo ../.. >repo.git/repos/foo/commondir &&
+	(
+		cd work &&
+		GIT_DIR=../gitfile git rev-parse --git-common-dir >actual &&
+		test-path-utils real_path "$TRASH_DIRECTORY/repo.git" >expect &&
+		test_cmp expect actual
+	)
+'
+
+test_expect_success 'GIT_DIR set (2)' '
+	echo "gitdir: repo.git/repos/foo" >gitfile &&
+	echo "$(pwd)/repo.git" >repo.git/repos/foo/commondir &&
+	(
+		cd work &&
+		GIT_DIR=../gitfile git rev-parse --git-common-dir >actual &&
+		test-path-utils real_path "$TRASH_DIRECTORY/repo.git" >expect &&
+		test_cmp expect actual
+	)
+'
+
+test_expect_success 'Auto discovery' '
+	echo "gitdir: repo.git/repos/foo" >.git &&
+	echo ../.. >repo.git/repos/foo/commondir &&
+	(
+		cd work &&
+		git rev-parse --git-common-dir >actual &&
+		test-path-utils real_path "$TRASH_DIRECTORY/repo.git" >expect &&
+		test_cmp expect actual &&
+		echo haha >data1 &&
+		git add data1 &&
+		git ls-files --full-name :/ | grep data1 >actual &&
+		echo work/data1 >expect &&
+		test_cmp expect actual
+	)
+'
+
+test_expect_success '$GIT_DIR/common overrides core.worktree' '
+	mkdir elsewhere &&
+	git --git-dir=repo.git config core.worktree "$TRASH_DIRECTORY/elsewhere" &&
+	echo "gitdir: repo.git/repos/foo" >.git &&
+	echo ../.. >repo.git/repos/foo/commondir &&
+	(
+		cd work &&
+		git rev-parse --git-common-dir >actual &&
+		test-path-utils real_path "$TRASH_DIRECTORY/repo.git" >expect &&
+		test_cmp expect actual &&
+		echo haha >data2 &&
+		git add data2 &&
+		git ls-files --full-name :/ | grep data2 >actual &&
+		echo work/data2 >expect &&
+		test_cmp expect actual
+	)
+'
+
+test_expect_success '$GIT_WORK_TREE overrides $GIT_DIR/common' '
+	echo "gitdir: repo.git/repos/foo" >.git &&
+	echo ../.. >repo.git/repos/foo/commondir &&
+	(
+		cd work &&
+		echo haha >data3 &&
+		git --git-dir=../.git --work-tree=. add data3 &&
+		git ls-files --full-name -- :/ | grep data3 >actual &&
+		echo data3 >expect &&
+		test_cmp expect actual
+	)
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t1507-rev-parse-upstream.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t1507-rev-parse-upstream.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t1507-rev-parse-upstream.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t1507-rev-parse-upstream.sh	2015-07-28 04:34:56.000000000 +0800
@@ -147,29 +147,29 @@
 test_expect_success 'branch@{u} works when tracking a local branch' '
 	test refs/heads/master = "$(full_name local-master@{u})"
 '
 
 test_expect_success 'branch@{u} error message when no upstream' '
 	cat >expect <<-EOF &&
-	fatal: No upstream configured for branch ${sq}non-tracking${sq}
+	fatal: no upstream configured for branch ${sq}non-tracking${sq}
 	EOF
 	error_message non-tracking@{u} 2>actual &&
 	test_i18ncmp expect actual
 '
 
 test_expect_success '@{u} error message when no upstream' '
 	cat >expect <<-EOF &&
-	fatal: No upstream configured for branch ${sq}master${sq}
+	fatal: no upstream configured for branch ${sq}master${sq}
 	EOF
 	test_must_fail git rev-parse --verify @{u} 2>actual &&
 	test_i18ncmp expect actual
 '
 
 test_expect_success 'branch@{u} error message with misspelt branch' '
 	cat >expect <<-EOF &&
-	fatal: No such branch: ${sq}no-such-branch${sq}
+	fatal: no such branch: ${sq}no-such-branch${sq}
 	EOF
 	error_message no-such-branch@{u} 2>actual &&
 	test_i18ncmp expect actual
 '
 
 test_expect_success '@{u} error message when not on a branch' '
@@ -180,13 +180,13 @@
 	test_must_fail git rev-parse --verify @{u} 2>actual &&
 	test_i18ncmp expect actual
 '
 
 test_expect_success 'branch@{u} error message if upstream branch not fetched' '
 	cat >expect <<-EOF &&
-	fatal: Upstream branch ${sq}refs/heads/side${sq} not stored as a remote-tracking branch
+	fatal: upstream branch ${sq}refs/heads/side${sq} not stored as a remote-tracking branch
 	EOF
 	error_message bad-upstream@{u} 2>actual &&
 	test_i18ncmp expect actual
 '
 
 test_expect_success 'pull works when tracking a local branch' '
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t1510-repo-setup.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t1510-repo-setup.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t1510-repo-setup.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t1510-repo-setup.sh	2015-07-28 04:34:56.000000000 +0800
@@ -103,12 +103,13 @@
 	maybe_set GIT_WORK_TREE "$worktreeenv"
 }
 
 expect () {
 	cat >"$1/expected" <<-EOF
 	setup: git_dir: $2
+	setup: git_common_dir: $2
 	setup: worktree: $3
 	setup: cwd: $4
 	setup: prefix: $5
 	EOF
 }
 
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t: t1514-rev-parse-push.sh
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t2019-checkout-ambiguous-ref.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t2019-checkout-ambiguous-ref.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t2019-checkout-ambiguous-ref.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t2019-checkout-ambiguous-ref.sh	2015-07-28 04:34:56.000000000 +0800
@@ -53,7 +53,33 @@
 
 test_expect_success VAGUENESS_SUCCESS 'checkout reports switch to branch' '
 	test_i18ngrep "Switched to branch" stderr &&
 	test_i18ngrep ! "^HEAD is now at" stderr
 '
 
+test_expect_success 'wildcard ambiguation, paths win' '
+	git init ambi &&
+	(
+		cd ambi &&
+		echo a >a.c &&
+		git add a.c &&
+		echo b >a.c &&
+		git checkout "*.c" &&
+		echo a >expect &&
+		test_cmp expect a.c
+	)
+'
+
+test_expect_success 'wildcard ambiguation, refs lose' '
+	git init ambi2 &&
+	(
+		cd ambi2 &&
+		echo a >"*.c" &&
+		git add . &&
+		test_must_fail git show :"*.c" &&
+		git show :"*.c" -- >actual &&
+		echo a >expect &&
+		test_cmp expect actual
+	)
+'
+
 test_done
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t: t2025-worktree-add.sh
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t: t2026-prune-linked-checkouts.sh
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t: t3033-merge-toplevel.sh
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t3210-pack-refs.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t3210-pack-refs.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t3210-pack-refs.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t3210-pack-refs.sh	2015-07-28 04:34:56.000000000 +0800
@@ -184,7 +184,24 @@
 
 test_expect_success 'notice d/f conflict with existing ref' '
 	test_must_fail git branch foo/bar/baz/extra &&
 	test_must_fail git branch foo/bar/baz/lots/of/extra/components
 '
 
+test_expect_success 'timeout if packed-refs.lock exists' '
+	LOCK=.git/packed-refs.lock &&
+	>"$LOCK" &&
+	test_when_finished "rm -f $LOCK" &&
+	test_must_fail git pack-refs --all --prune
+'
+
+test_expect_success 'retry acquiring packed-refs.lock' '
+	LOCK=.git/packed-refs.lock &&
+	>"$LOCK" &&
+	test_when_finished "wait; rm -f $LOCK" &&
+	{
+		( sleep 1 ; rm -f $LOCK ) &
+	} &&
+	git -c core.packedrefstimeout=3000 pack-refs --all --prune
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t3402-rebase-merge.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t3402-rebase-merge.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t3402-rebase-merge.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t3402-rebase-merge.sh	2015-07-28 04:34:56.000000000 +0800
@@ -44,13 +44,13 @@
 	git branch test-reference-pick side &&
 	git branch test-conflicts side &&
 	git checkout -b test-merge side
 '
 
 test_expect_success 'reference merge' '
-	git merge -s recursive "reference merge" HEAD master
+	git merge -s recursive -m "reference merge" master
 '
 
 PRE_REBASE=$(git rev-parse test-rebase)
 test_expect_success rebase '
 	git checkout test-rebase &&
 	GIT_TRACE=1 git rebase --merge master
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t3701-add-interactive.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t3701-add-interactive.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t3701-add-interactive.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t3701-add-interactive.sh	2015-07-28 04:34:56.000000000 +0800
@@ -323,21 +323,40 @@
 	# and then n attempts to discard the edit. Repeat q enough
 	# times to get out.
 	#
 	# 2. Correct version applies the (not)edited version, and asks
 	#    about the next hunk, against which we say q and program
 	#    exits.
-	for a in s e     q n q q
-	do
-		echo $a
-	done |
+	printf "%s\n" s e     q n q q |
 	EDITOR=: git add -p &&
 	git diff >actual &&
 	! grep "^+15" actual
 '
 
+test_expect_failure 'split hunk "add -p (no, yes, edit)"' '
+	cat >test <<-\EOF &&
+	5
+	10
+	20
+	21
+	30
+	31
+	40
+	50
+	60
+	EOF
+	git reset &&
+	# test sequence is s(plit), n(o), y(es), e(dit)
+	# q n q q is there to make sure we exit at the end.
+	printf "%s\n" s n y e   q n q q |
+	EDITOR=: git add -p 2>error &&
+	test_must_be_empty error &&
+	git diff >actual &&
+	! grep "^+31" actual
+'
+
 test_expect_success 'patch mode ignores unmerged entries' '
 	git reset --hard &&
 	test_commit conflict &&
 	test_commit non-conflict &&
 	git checkout -b side &&
 	test_commit side conflict.t &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t3904-stash-patch.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t3904-stash-patch.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t3904-stash-patch.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t3904-stash-patch.sh	2015-07-28 04:34:56.000000000 +0800
@@ -1,12 +1,18 @@
 #!/bin/sh
 
-test_description='git checkout --patch'
+test_description='stash -p'
 . ./lib-patch-mode.sh
 
-test_expect_success PERL 'setup' '
+if ! test_have_prereq PERL
+then
+	skip_all='skipping stash -p tests, perl not available'
+	test_done
+fi
+
+test_expect_success 'setup' '
 	mkdir dir &&
 	echo parent > dir/foo &&
 	echo dummy > bar &&
 	echo committed > HEAD &&
 	git add bar dir/foo HEAD &&
 	git commit -m initial &&
@@ -17,34 +23,34 @@
 	set_and_save_state bar bar_work bar_index &&
 	save_head
 '
 
 # note: order of files with unstaged changes: HEAD bar dir/foo
 
-test_expect_success PERL 'saying "n" does nothing' '
+test_expect_success 'saying "n" does nothing' '
 	set_state HEAD HEADfile_work HEADfile_index &&
 	set_state dir/foo work index &&
 	(echo n; echo n; echo n) | test_must_fail git stash save -p &&
 	verify_state HEAD HEADfile_work HEADfile_index &&
 	verify_saved_state bar &&
 	verify_state dir/foo work index
 '
 
-test_expect_success PERL 'git stash -p' '
+test_expect_success 'git stash -p' '
 	(echo y; echo n; echo y) | git stash save -p &&
 	verify_state HEAD committed HEADfile_index &&
 	verify_saved_state bar &&
 	verify_state dir/foo head index &&
 	git reset --hard &&
 	git stash apply &&
 	verify_state HEAD HEADfile_work committed &&
 	verify_state bar dummy dummy &&
 	verify_state dir/foo work head
 '
 
-test_expect_success PERL 'git stash -p --no-keep-index' '
+test_expect_success 'git stash -p --no-keep-index' '
 	set_state HEAD HEADfile_work HEADfile_index &&
 	set_state bar bar_work bar_index &&
 	set_state dir/foo work index &&
 	(echo y; echo n; echo y) | git stash save -p --no-keep-index &&
 	verify_state HEAD committed committed &&
 	verify_state bar bar_work dummy &&
@@ -53,13 +59,13 @@
 	git stash apply --index &&
 	verify_state HEAD HEADfile_work HEADfile_index &&
 	verify_state bar dummy bar_index &&
 	verify_state dir/foo work index
 '
 
-test_expect_success PERL 'git stash --no-keep-index -p' '
+test_expect_success 'git stash --no-keep-index -p' '
 	set_state HEAD HEADfile_work HEADfile_index &&
 	set_state bar bar_work bar_index &&
 	set_state dir/foo work index &&
 	(echo y; echo n; echo y) | git stash save --no-keep-index -p &&
 	verify_state HEAD committed committed &&
 	verify_state dir/foo head head &&
@@ -68,11 +74,34 @@
 	git stash apply --index &&
 	verify_state HEAD HEADfile_work HEADfile_index &&
 	verify_state bar dummy bar_index &&
 	verify_state dir/foo work index
 '
 
-test_expect_success PERL 'none of this moved HEAD' '
+test_expect_success 'none of this moved HEAD' '
 	verify_saved_head
 '
 
+test_expect_failure 'stash -p with split hunk' '
+	git reset --hard &&
+	cat >test <<-\EOF &&
+	aaa
+	bbb
+	ccc
+	EOF
+	git add test &&
+	git commit -m "initial" &&
+	cat >test <<-\EOF &&
+	aaa
+	added line 1
+	bbb
+	added line 2
+	ccc
+	EOF
+	printf "%s\n" s n y q |
+	test_might_fail git stash -p 2>error &&
+	! test_must_be_empty error &&
+	grep "added line 1" test &&
+	! grep "added line 2" test
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t4015-diff-whitespace.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t4015-diff-whitespace.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t4015-diff-whitespace.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t4015-diff-whitespace.sh	2015-07-28 04:34:56.000000000 +0800
@@ -6,144 +6,150 @@
 test_description='Test special whitespace in diff engine.
 
 '
 . ./test-lib.sh
 . "$TEST_DIRECTORY"/diff-lib.sh
 
-# Ray Lehtiniemi's example
+test_expect_success "Ray Lehtiniemi's example" '
+	cat <<-\EOF >x &&
+	do {
+	   nothing;
+	} while (0);
+	EOF
+	git update-index --add x &&
 
-cat << EOF > x
-do {
-   nothing;
-} while (0);
-EOF
+	cat <<-\EOF >x &&
+	do
+	{
+	   nothing;
+	}
+	while (0);
+	EOF
 
-git update-index --add x
+	cat <<-\EOF >expect &&
+	diff --git a/x b/x
+	index adf3937..6edc172 100644
+	--- a/x
+	+++ b/x
+	@@ -1,3 +1,5 @@
+	-do {
+	+do
+	+{
+	    nothing;
+	-} while (0);
+	+}
+	+while (0);
+	EOF
 
-cat << EOF > x
-do
-{
-   nothing;
-}
-while (0);
-EOF
+	git diff >out &&
+	test_cmp expect out &&
 
-cat << EOF > expect
-diff --git a/x b/x
-index adf3937..6edc172 100644
---- a/x
-+++ b/x
-@@ -1,3 +1,5 @@
--do {
-+do
-+{
-    nothing;
--} while (0);
-+}
-+while (0);
-EOF
+	git diff -w >out &&
+	test_cmp expect out &&
 
-git diff > out
-test_expect_success "Ray's example without options" 'test_cmp expect out'
+	git diff -b >out &&
+	test_cmp expect out
+'
 
-git diff -w > out
-test_expect_success "Ray's example with -w" 'test_cmp expect out'
+test_expect_success 'another test, without options' '
+	tr Q "\015" <<-\EOF >x &&
+	whitespace at beginning
+	whitespace change
+	whitespace in the middle
+	whitespace at end
+	unchanged line
+	CR at endQ
+	EOF
 
-git diff -b > out
-test_expect_success "Ray's example with -b" 'test_cmp expect out'
+	git update-index x &&
 
-tr 'Q' '\015' << EOF > x
-whitespace at beginning
-whitespace change
-whitespace in the middle
-whitespace at end
-unchanged line
-CR at endQ
-EOF
+	tr "_" " " <<-\EOF >x &&
+	_	whitespace at beginning
+	whitespace 	 change
+	white space in the middle
+	whitespace at end__
+	unchanged line
+	CR at end
+	EOF
 
-git update-index x
+	tr "Q_" "\015 " <<-\EOF >expect &&
+	diff --git a/x b/x
+	index d99af23..22d9f73 100644
+	--- a/x
+	+++ b/x
+	@@ -1,6 +1,6 @@
+	-whitespace at beginning
+	-whitespace change
+	-whitespace in the middle
+	-whitespace at end
+	+ 	whitespace at beginning
+	+whitespace 	 change
+	+white space in the middle
+	+whitespace at end__
+	 unchanged line
+	-CR at endQ
+	+CR at end
+	EOF
 
-tr '_' ' ' << EOF > x
-	whitespace at beginning
-whitespace 	 change
-white space in the middle
-whitespace at end__
-unchanged line
-CR at end
-EOF
+	git diff >out &&
+	test_cmp expect out &&
 
-tr 'Q_' '\015 ' << EOF > expect
-diff --git a/x b/x
-index d99af23..8b32fb5 100644
---- a/x
-+++ b/x
-@@ -1,6 +1,6 @@
--whitespace at beginning
--whitespace change
--whitespace in the middle
--whitespace at end
-+	whitespace at beginning
-+whitespace 	 change
-+white space in the middle
-+whitespace at end__
- unchanged line
--CR at endQ
-+CR at end
-EOF
-git diff > out
-test_expect_success 'another test, without options' 'test_cmp expect out'
+	>expect &&
+	git diff -w >out &&
+	test_cmp expect out &&
+
+	git diff -w -b >out &&
+	test_cmp expect out &&
+
+	git diff -w --ignore-space-at-eol >out &&
+	test_cmp expect out &&
+
+	git diff -w -b --ignore-space-at-eol >out &&
+	test_cmp expect out &&
 
-cat << EOF > expect
-EOF
-git diff -w > out
-test_expect_success 'another test, with -w' 'test_cmp expect out'
-git diff -w -b > out
-test_expect_success 'another test, with -w -b' 'test_cmp expect out'
-git diff -w --ignore-space-at-eol > out
-test_expect_success 'another test, with -w --ignore-space-at-eol' 'test_cmp expect out'
-git diff -w -b --ignore-space-at-eol > out
-test_expect_success 'another test, with -w -b --ignore-space-at-eol' 'test_cmp expect out'
-
-tr 'Q_' '\015 ' << EOF > expect
-diff --git a/x b/x
-index d99af23..8b32fb5 100644
---- a/x
-+++ b/x
-@@ -1,6 +1,6 @@
--whitespace at beginning
-+	whitespace at beginning
- whitespace 	 change
--whitespace in the middle
-+white space in the middle
- whitespace at end__
- unchanged line
- CR at end
-EOF
-git diff -b > out
-test_expect_success 'another test, with -b' 'test_cmp expect out'
-git diff -b --ignore-space-at-eol > out
-test_expect_success 'another test, with -b --ignore-space-at-eol' 'test_cmp expect out'
-
-tr 'Q_' '\015 ' << EOF > expect
-diff --git a/x b/x
-index d99af23..8b32fb5 100644
---- a/x
-+++ b/x
-@@ -1,6 +1,6 @@
--whitespace at beginning
--whitespace change
--whitespace in the middle
-+	whitespace at beginning
-+whitespace 	 change
-+white space in the middle
- whitespace at end__
- unchanged line
- CR at end
-EOF
-git diff --ignore-space-at-eol > out
-test_expect_success 'another test, with --ignore-space-at-eol' 'test_cmp expect out'
+
+	tr "Q_" "\015 " <<-\EOF >expect &&
+	diff --git a/x b/x
+	index d99af23..22d9f73 100644
+	--- a/x
+	+++ b/x
+	@@ -1,6 +1,6 @@
+	-whitespace at beginning
+	+_	whitespace at beginning
+	 whitespace 	 change
+	-whitespace in the middle
+	+white space in the middle
+	 whitespace at end__
+	 unchanged line
+	 CR at end
+	EOF
+	git diff -b >out &&
+	test_cmp expect out &&
+
+	git diff -b --ignore-space-at-eol >out &&
+	test_cmp expect out &&
+
+	tr "Q_" "\015 " <<-\EOF >expect &&
+	diff --git a/x b/x
+	index d99af23..22d9f73 100644
+	--- a/x
+	+++ b/x
+	@@ -1,6 +1,6 @@
+	-whitespace at beginning
+	-whitespace change
+	-whitespace in the middle
+	+_	whitespace at beginning
+	+whitespace 	 change
+	+white space in the middle
+	 whitespace at end__
+	 unchanged line
+	 CR at end
+	EOF
+	git diff --ignore-space-at-eol >out &&
+	test_cmp expect out
+'
 
 test_expect_success 'ignore-blank-lines: only new lines' '
 	test_seq 5 >x &&
 	git update-index x &&
 	test_seq 5 | sed "/3/i\\
 " >x &&
@@ -486,297 +492,225 @@
 	+change
 	EOF
 	compare_diff_patch expected out.tmp
 '
 
 test_expect_success 'check mixed spaces and tabs in indent' '
-
 	# This is indented with SP HT SP.
-	echo " 	 foo();" > x &&
+	echo " 	 foo();" >x &&
 	git diff --check | grep "space before tab in indent"
-
 '
 
 test_expect_success 'check mixed tabs and spaces in indent' '
-
 	# This is indented with HT SP HT.
-	echo "	 	foo();" > x &&
+	echo "	 	foo();" >x &&
 	git diff --check | grep "space before tab in indent"
-
 '
 
 test_expect_success 'check with no whitespace errors' '
-
 	git commit -m "snapshot" &&
-	echo "foo();" > x &&
+	echo "foo();" >x &&
 	git diff --check
-
 '
 
 test_expect_success 'check with trailing whitespace' '
-
-	echo "foo(); " > x &&
+	echo "foo(); " >x &&
 	test_must_fail git diff --check
-
 '
 
 test_expect_success 'check with space before tab in indent' '
-
 	# indent has space followed by hard tab
-	echo " 	foo();" > x &&
+	echo " 	foo();" >x &&
 	test_must_fail git diff --check
-
 '
 
 test_expect_success '--check and --exit-code are not exclusive' '
-
 	git checkout x &&
 	git diff --check --exit-code
-
 '
 
 test_expect_success '--check and --quiet are not exclusive' '
-
 	git diff --check --quiet
-
 '
 
 test_expect_success 'check staged with no whitespace errors' '
-
-	echo "foo();" > x &&
+	echo "foo();" >x &&
 	git add x &&
 	git diff --cached --check
-
 '
 
 test_expect_success 'check staged with trailing whitespace' '
-
-	echo "foo(); " > x &&
+	echo "foo(); " >x &&
 	git add x &&
 	test_must_fail git diff --cached --check
-
 '
 
 test_expect_success 'check staged with space before tab in indent' '
-
 	# indent has space followed by hard tab
-	echo " 	foo();" > x &&
+	echo " 	foo();" >x &&
 	git add x &&
 	test_must_fail git diff --cached --check
-
 '
 
 test_expect_success 'check with no whitespace errors (diff-index)' '
-
-	echo "foo();" > x &&
+	echo "foo();" >x &&
 	git add x &&
 	git diff-index --check HEAD
-
 '
 
 test_expect_success 'check with trailing whitespace (diff-index)' '
-
-	echo "foo(); " > x &&
+	echo "foo(); " >x &&
 	git add x &&
 	test_must_fail git diff-index --check HEAD
-
 '
 
 test_expect_success 'check with space before tab in indent (diff-index)' '
-
 	# indent has space followed by hard tab
-	echo " 	foo();" > x &&
+	echo " 	foo();" >x &&
 	git add x &&
 	test_must_fail git diff-index --check HEAD
-
 '
 
 test_expect_success 'check staged with no whitespace errors (diff-index)' '
-
-	echo "foo();" > x &&
+	echo "foo();" >x &&
 	git add x &&
 	git diff-index --cached --check HEAD
-
 '
 
 test_expect_success 'check staged with trailing whitespace (diff-index)' '
-
-	echo "foo(); " > x &&
+	echo "foo(); " >x &&
 	git add x &&
 	test_must_fail git diff-index --cached --check HEAD
-
 '
 
 test_expect_success 'check staged with space before tab in indent (diff-index)' '
-
 	# indent has space followed by hard tab
-	echo " 	foo();" > x &&
+	echo " 	foo();" >x &&
 	git add x &&
 	test_must_fail git diff-index --cached --check HEAD
-
 '
 
 test_expect_success 'check with no whitespace errors (diff-tree)' '
-
-	echo "foo();" > x &&
+	echo "foo();" >x &&
 	git commit -m "new commit" x &&
 	git diff-tree --check HEAD^ HEAD
-
 '
 
 test_expect_success 'check with trailing whitespace (diff-tree)' '
-
-	echo "foo(); " > x &&
+	echo "foo(); " >x &&
 	git commit -m "another commit" x &&
 	test_must_fail git diff-tree --check HEAD^ HEAD
-
 '
 
 test_expect_success 'check with space before tab in indent (diff-tree)' '
-
 	# indent has space followed by hard tab
-	echo " 	foo();" > x &&
+	echo " 	foo();" >x &&
 	git commit -m "yet another" x &&
 	test_must_fail git diff-tree --check HEAD^ HEAD
-
 '
 
 test_expect_success 'check trailing whitespace (trailing-space: off)' '
-
 	git config core.whitespace "-trailing-space" &&
-	echo "foo ();   " > x &&
+	echo "foo ();   " >x &&
 	git diff --check
-
 '
 
 test_expect_success 'check trailing whitespace (trailing-space: on)' '
-
 	git config core.whitespace "trailing-space" &&
-	echo "foo ();   " > x &&
+	echo "foo ();   " >x &&
 	test_must_fail git diff --check
-
 '
 
 test_expect_success 'check space before tab in indent (space-before-tab: off)' '
-
 	# indent contains space followed by HT
 	git config core.whitespace "-space-before-tab" &&
-	echo " 	foo ();" > x &&
+	echo " 	foo ();" >x &&
 	git diff --check
-
 '
 
 test_expect_success 'check space before tab in indent (space-before-tab: on)' '
-
 	# indent contains space followed by HT
 	git config core.whitespace "space-before-tab" &&
-	echo " 	foo ();   " > x &&
+	echo " 	foo ();   " >x &&
 	test_must_fail git diff --check
-
 '
 
 test_expect_success 'check spaces as indentation (indent-with-non-tab: off)' '
-
 	git config core.whitespace "-indent-with-non-tab" &&
-	echo "        foo ();" > x &&
+	echo "        foo ();" >x &&
 	git diff --check
-
 '
 
 test_expect_success 'check spaces as indentation (indent-with-non-tab: on)' '
-
 	git config core.whitespace "indent-with-non-tab" &&
-	echo "        foo ();" > x &&
+	echo "        foo ();" >x &&
 	test_must_fail git diff --check
-
 '
 
 test_expect_success 'ditto, but tabwidth=9' '
-
 	git config core.whitespace "indent-with-non-tab,tabwidth=9" &&
 	git diff --check
-
 '
 
 test_expect_success 'check tabs and spaces as indentation (indent-with-non-tab: on)' '
-
 	git config core.whitespace "indent-with-non-tab" &&
-	echo "	                foo ();" > x &&
+	echo "	                foo ();" >x &&
 	test_must_fail git diff --check
-
 '
 
 test_expect_success 'ditto, but tabwidth=10' '
-
 	git config core.whitespace "indent-with-non-tab,tabwidth=10" &&
 	test_must_fail git diff --check
-
 '
 
 test_expect_success 'ditto, but tabwidth=20' '
-
 	git config core.whitespace "indent-with-non-tab,tabwidth=20" &&
 	git diff --check
-
 '
 
 test_expect_success 'check tabs as indentation (tab-in-indent: off)' '
-
 	git config core.whitespace "-tab-in-indent" &&
-	echo "	foo ();" > x &&
+	echo "	foo ();" >x &&
 	git diff --check
-
 '
 
 test_expect_success 'check tabs as indentation (tab-in-indent: on)' '
-
 	git config core.whitespace "tab-in-indent" &&
-	echo "	foo ();" > x &&
+	echo "	foo ();" >x &&
 	test_must_fail git diff --check
-
 '
 
 test_expect_success 'check tabs and spaces as indentation (tab-in-indent: on)' '
-
 	git config core.whitespace "tab-in-indent" &&
-	echo "	                foo ();" > x &&
+	echo "	                foo ();" >x &&
 	test_must_fail git diff --check
-
 '
 
 test_expect_success 'ditto, but tabwidth=1 (must be irrelevant)' '
-
 	git config core.whitespace "tab-in-indent,tabwidth=1" &&
 	test_must_fail git diff --check
-
 '
 
 test_expect_success 'check tab-in-indent and indent-with-non-tab conflict' '
-
 	git config core.whitespace "tab-in-indent,indent-with-non-tab" &&
-	echo "foo ();" > x &&
+	echo "foo ();" >x &&
 	test_must_fail git diff --check
-
 '
 
 test_expect_success 'check tab-in-indent excluded from wildcard whitespace attribute' '
-
 	git config --unset core.whitespace &&
-	echo "x whitespace" > .gitattributes &&
-	echo "	  foo ();" > x &&
+	echo "x whitespace" >.gitattributes &&
+	echo "	  foo ();" >x &&
 	git diff --check &&
 	rm -f .gitattributes
-
 '
 
 test_expect_success 'line numbers in --check output are correct' '
-
-	echo "" > x &&
-	echo "foo(); " >> x &&
+	echo "" >x &&
+	echo "foo(); " >>x &&
 	git diff --check | grep "x:2:"
-
 '
 
 test_expect_success 'checkdiff detects new trailing blank lines (1)' '
 	echo "foo();" >x &&
 	echo "" >>x &&
 	git diff --check | grep "new blank line"
@@ -873,33 +807,131 @@
 	git config color.diff.meta bold &&
 	git config color.diff.frag cyan &&
 	git config color.diff.func normal &&
 	git config color.diff.old red &&
 	git config color.diff.new green &&
 	git config color.diff.commit yellow &&
-	git config color.diff.whitespace "normal red" &&
+	git config color.diff.whitespace blue &&
 
 	git config core.autocrlf false
 '
-cat >expected <<\EOF
-<BOLD>diff --git a/x b/x<RESET>
-<BOLD>index 9daeafb..2874b91 100644<RESET>
-<BOLD>--- a/x<RESET>
-<BOLD>+++ b/x<RESET>
-<CYAN>@@ -1 +1,4 @@<RESET>
- test<RESET>
-<GREEN>+<RESET><GREEN>{<RESET>
-<GREEN>+<RESET><BRED>	<RESET>
-<GREEN>+<RESET><GREEN>}<RESET>
-EOF
 
 test_expect_success 'diff that introduces a line with only tabs' '
 	git config core.whitespace blank-at-eol &&
 	git reset --hard &&
-	echo "test" > x &&
+	echo "test" >x &&
 	git commit -m "initial" x &&
-	echo "{NTN}" | tr "NT" "\n\t" >> x &&
+	echo "{NTN}" | tr "NT" "\n\t" >>x &&
 	git -c color.diff=always diff | test_decode_color >current &&
+
+	cat >expected <<-\EOF &&
+	<BOLD>diff --git a/x b/x<RESET>
+	<BOLD>index 9daeafb..2874b91 100644<RESET>
+	<BOLD>--- a/x<RESET>
+	<BOLD>+++ b/x<RESET>
+	<CYAN>@@ -1 +1,4 @@<RESET>
+	 test<RESET>
+	<GREEN>+<RESET><GREEN>{<RESET>
+	<GREEN>+<RESET><BLUE>	<RESET>
+	<GREEN>+<RESET><GREEN>}<RESET>
+	EOF
+
+	test_cmp expected current
+'
+
+test_expect_success 'diff that introduces and removes ws breakages' '
+	git reset --hard &&
+	{
+		echo "0. blank-at-eol " &&
+		echo "1. blank-at-eol "
+	} >x &&
+	git commit -a --allow-empty -m preimage &&
+	{
+		echo "0. blank-at-eol " &&
+		echo "1. still-blank-at-eol " &&
+		echo "2. and a new line "
+	} >x &&
+
+	git -c color.diff=always diff |
+	test_decode_color >current &&
+
+	cat >expected <<-\EOF &&
+	<BOLD>diff --git a/x b/x<RESET>
+	<BOLD>index d0233a2..700886e 100644<RESET>
+	<BOLD>--- a/x<RESET>
+	<BOLD>+++ b/x<RESET>
+	<CYAN>@@ -1,2 +1,3 @@<RESET>
+	 0. blank-at-eol <RESET>
+	<RED>-1. blank-at-eol <RESET>
+	<GREEN>+<RESET><GREEN>1. still-blank-at-eol<RESET><BLUE> <RESET>
+	<GREEN>+<RESET><GREEN>2. and a new line<RESET><BLUE> <RESET>
+	EOF
+
+	test_cmp expected current
+'
+
+test_expect_success 'the same with --ws-error-highlight' '
+	git reset --hard &&
+	{
+		echo "0. blank-at-eol " &&
+		echo "1. blank-at-eol "
+	} >x &&
+	git commit -a --allow-empty -m preimage &&
+	{
+		echo "0. blank-at-eol " &&
+		echo "1. still-blank-at-eol " &&
+		echo "2. and a new line "
+	} >x &&
+
+	git -c color.diff=always diff --ws-error-highlight=default,old |
+	test_decode_color >current &&
+
+	cat >expected <<-\EOF &&
+	<BOLD>diff --git a/x b/x<RESET>
+	<BOLD>index d0233a2..700886e 100644<RESET>
+	<BOLD>--- a/x<RESET>
+	<BOLD>+++ b/x<RESET>
+	<CYAN>@@ -1,2 +1,3 @@<RESET>
+	 0. blank-at-eol <RESET>
+	<RED>-<RESET><RED>1. blank-at-eol<RESET><BLUE> <RESET>
+	<GREEN>+<RESET><GREEN>1. still-blank-at-eol<RESET><BLUE> <RESET>
+	<GREEN>+<RESET><GREEN>2. and a new line<RESET><BLUE> <RESET>
+	EOF
+
+	test_cmp expected current &&
+
+	git -c color.diff=always diff --ws-error-highlight=all |
+	test_decode_color >current &&
+
+	cat >expected <<-\EOF &&
+	<BOLD>diff --git a/x b/x<RESET>
+	<BOLD>index d0233a2..700886e 100644<RESET>
+	<BOLD>--- a/x<RESET>
+	<BOLD>+++ b/x<RESET>
+	<CYAN>@@ -1,2 +1,3 @@<RESET>
+	 <RESET>0. blank-at-eol<RESET><BLUE> <RESET>
+	<RED>-<RESET><RED>1. blank-at-eol<RESET><BLUE> <RESET>
+	<GREEN>+<RESET><GREEN>1. still-blank-at-eol<RESET><BLUE> <RESET>
+	<GREEN>+<RESET><GREEN>2. and a new line<RESET><BLUE> <RESET>
+	EOF
+
+	test_cmp expected current &&
+
+	git -c color.diff=always diff --ws-error-highlight=none |
+	test_decode_color >current &&
+
+	cat >expected <<-\EOF &&
+	<BOLD>diff --git a/x b/x<RESET>
+	<BOLD>index d0233a2..700886e 100644<RESET>
+	<BOLD>--- a/x<RESET>
+	<BOLD>+++ b/x<RESET>
+	<CYAN>@@ -1,2 +1,3 @@<RESET>
+	 0. blank-at-eol <RESET>
+	<RED>-1. blank-at-eol <RESET>
+	<GREEN>+1. still-blank-at-eol <RESET>
+	<GREEN>+2. and a new line <RESET>
+	EOF
+
 	test_cmp expected current
 '
 
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t4136-apply-check.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t4136-apply-check.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t4136-apply-check.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t4136-apply-check.sh	2015-07-28 04:34:56.000000000 +0800
@@ -13,7 +13,20 @@
 	I am not a patch
 	I look nothing like a patch
 	git apply must fail
 	EOF
 '
 
+test_expect_success 'apply exits non-zero with no-op patch' '
+	cat >input <<-\EOF &&
+	diff --get a/1 b/1
+	index 6696ea4..606eddd 100644
+	--- a/1
+	+++ b/1
+	@@ -1,1 +1,1 @@
+	 1
+	EOF
+	test_must_fail git apply --stat input &&
+	test_must_fail git apply --check input
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t4150-am.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t4150-am.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t4150-am.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t4150-am.sh	2015-07-28 04:34:56.000000000 +0800
@@ -271,35 +271,36 @@
 	git am --keep-non-patch patch4 &&
 	test_path_is_missing .git/rebase-apply &&
 	git cat-file commit HEAD >actual &&
 	grep "^\[foo\] third" actual
 '
 
-test_expect_success 'am -3 falls back to 3-way merge' '
+test_expect_success 'setup am -3' '
 	rm -fr .git/rebase-apply &&
 	git reset --hard &&
-	git checkout -b lorem2 master2 &&
+	git checkout -b base3way master2 &&
 	sed -n -e "3,\$p" msg >file &&
 	head -n 9 msg >>file &&
 	git add file &&
 	test_tick &&
-	git commit -m "copied stuff" &&
+	git commit -m "copied stuff"
+'
+
+test_expect_success 'am -3 falls back to 3-way merge' '
+	rm -fr .git/rebase-apply &&
+	git reset --hard &&
+	git checkout -b lorem2 base3way &&
 	git am -3 lorem-move.patch &&
 	test_path_is_missing .git/rebase-apply &&
 	git diff --exit-code lorem
 '
 
 test_expect_success 'am -3 -p0 can read --no-prefix patch' '
 	rm -fr .git/rebase-apply &&
 	git reset --hard &&
-	git checkout -b lorem3 master2 &&
-	sed -n -e "3,\$p" msg >file &&
-	head -n 9 msg >>file &&
-	git add file &&
-	test_tick &&
-	git commit -m "copied stuff" &&
+	git checkout -b lorem3 base3way &&
 	git am -3 -p0 lorem-zero.patch &&
 	test_path_is_missing .git/rebase-apply &&
 	git diff --exit-code lorem
 '
 
 test_expect_success 'am can rename a file' '
@@ -335,18 +336,13 @@
 	git diff --exit-code rename
 '
 
 test_expect_success 'am -3 -q is quiet' '
 	rm -fr .git/rebase-apply &&
 	git checkout -f lorem2 &&
-	git reset master2 --hard &&
-	sed -n -e "3,\$p" msg >file &&
-	head -n 9 msg >>file &&
-	git add file &&
-	test_tick &&
-	git commit -m "copied stuff" &&
+	git reset base3way --hard &&
 	git am -3 -q lorem-move.patch >output.out 2>&1 &&
 	! test -s output.out
 '
 
 test_expect_success 'am pauses on conflict' '
 	rm -fr .git/rebase-apply &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t5304-prune.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t5304-prune.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t5304-prune.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t5304-prune.sh	2015-07-28 04:34:56.000000000 +0800
@@ -215,12 +215,13 @@
 		verbose test 0 = $(git count-objects | sed "s/ .*//") &&
 		test_path_is_missing $BLOB_FILE
 	)
 '
 
 test_expect_success 'garbage report in count-objects -v' '
+	test_when_finished "rm -f .git/objects/pack/fake*" &&
 	: >.git/objects/pack/foo &&
 	: >.git/objects/pack/foo.bar &&
 	: >.git/objects/pack/foo.keep &&
 	: >.git/objects/pack/foo.pack &&
 	: >.git/objects/pack/fake.bar &&
 	: >.git/objects/pack/fake.keep &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t5516-fetch-push.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t5516-fetch-push.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t5516-fetch-push.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t5516-fetch-push.sh	2015-07-28 04:34:56.000000000 +0800
@@ -1117,12 +1117,67 @@
 			git rev-parse --verify refs/heads/extra
 		} >actual &&
 		test_cmp expect actual
 	)
 '
 
+for configallowtipsha1inwant in true false
+do
+	test_expect_success "shallow fetch reachable SHA1 (but not a ref), allowtipsha1inwant=$configallowtipsha1inwant" '
+		mk_empty testrepo &&
+		(
+			cd testrepo &&
+			git config uploadpack.allowtipsha1inwant $configallowtipsha1inwant &&
+			git commit --allow-empty -m foo &&
+			git commit --allow-empty -m bar
+		) &&
+		SHA1=$(git --git-dir=testrepo/.git rev-parse HEAD^) &&
+		mk_empty shallow &&
+		(
+			cd shallow &&
+			test_must_fail git fetch --depth=1 ../testrepo/.git $SHA1 &&
+			git --git-dir=../testrepo/.git config uploadpack.allowreachablesha1inwant true &&
+			git fetch --depth=1 ../testrepo/.git $SHA1 &&
+			git cat-file commit $SHA1
+		)
+	'
+
+	test_expect_success "deny fetch unreachable SHA1, allowtipsha1inwant=$configallowtipsha1inwant" '
+		mk_empty testrepo &&
+		(
+			cd testrepo &&
+			git config uploadpack.allowtipsha1inwant $configallowtipsha1inwant &&
+			git commit --allow-empty -m foo &&
+			git commit --allow-empty -m bar &&
+			git commit --allow-empty -m xyz
+		) &&
+		SHA1_1=$(git --git-dir=testrepo/.git rev-parse HEAD^^) &&
+		SHA1_2=$(git --git-dir=testrepo/.git rev-parse HEAD^) &&
+		SHA1_3=$(git --git-dir=testrepo/.git rev-parse HEAD) &&
+		(
+			cd testrepo &&
+			git reset --hard $SHA1_2 &&
+			git cat-file commit $SHA1_1 &&
+			git cat-file commit $SHA1_3
+		) &&
+		mk_empty shallow &&
+		(
+			cd shallow &&
+			test_must_fail git fetch ../testrepo/.git $SHA1_3 &&
+			test_must_fail git fetch ../testrepo/.git $SHA1_1 &&
+			git --git-dir=../testrepo/.git config uploadpack.allowreachablesha1inwant true &&
+			git fetch ../testrepo/.git $SHA1_1 &&
+			git cat-file commit $SHA1_1 &&
+			test_must_fail git cat-file commit $SHA1_2 &&
+			git fetch ../testrepo/.git $SHA1_2 &&
+			git cat-file commit $SHA1_2 &&
+			test_must_fail git fetch ../testrepo/.git $SHA1_3
+		)
+	'
+done
+
 test_expect_success 'fetch follows tags by default' '
 	mk_test testrepo heads/master &&
 	rm -fr src dst &&
 	git init src &&
 	(
 		cd src &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t5520-pull.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t5520-pull.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t5520-pull.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t5520-pull.sh	2015-07-28 04:34:56.000000000 +0800
@@ -6,42 +6,33 @@
 
 modify () {
 	sed -e "$1" <"$2" >"$2.x" &&
 	mv "$2.x" "$2"
 }
 
-D=`pwd`
-
 test_expect_success setup '
-
 	echo file >file &&
 	git add file &&
 	git commit -a -m original
-
 '
 
 test_expect_success 'pulling into void' '
-	mkdir cloned &&
-	cd cloned &&
-	git init &&
-	git pull ..
-'
-
-cd "$D"
-
-test_expect_success 'checking the results' '
+	git init cloned &&
+	(
+		cd cloned &&
+		git pull ..
+	) &&
 	test -f file &&
 	test -f cloned/file &&
 	test_cmp file cloned/file
 '
 
 test_expect_success 'pulling into void using master:master' '
-	mkdir cloned-uho &&
+	git init cloned-uho &&
 	(
 		cd cloned-uho &&
-		git init &&
 		git pull .. master:master
 	) &&
 	test -f file &&
 	test -f cloned-uho/file &&
 	test_cmp file cloned-uho/file
 '
@@ -83,72 +73,204 @@
 		test_cmp expect newfile &&
 		git cat-file blob :newfile >newfile.index &&
 		test_cmp expect newfile.index
 	)
 '
 
-test_expect_success 'test . as a remote' '
+test_expect_success 'pulling into void must not create an octopus' '
+	git init cloned-octopus &&
+	(
+		cd cloned-octopus &&
+		test_must_fail git pull .. master master &&
+		! test -f file
+	)
+'
 
+test_expect_success 'test . as a remote' '
 	git branch copy master &&
 	git config branch.copy.remote . &&
 	git config branch.copy.merge refs/heads/master &&
 	echo updated >file &&
 	git commit -a -m updated &&
 	git checkout copy &&
-	test `cat file` = file &&
+	test "$(cat file)" = file &&
 	git pull &&
-	test `cat file` = updated
+	test "$(cat file)" = updated &&
+	git reflog -1 >reflog.actual &&
+	sed "s/^[0-9a-f][0-9a-f]*/OBJID/" reflog.actual >reflog.fuzzy &&
+	echo "OBJID HEAD@{0}: pull: Fast-forward" >reflog.expected &&
+	test_cmp reflog.expected reflog.fuzzy
 '
 
 test_expect_success 'the default remote . should not break explicit pull' '
 	git checkout -b second master^ &&
 	echo modified >file &&
 	git commit -a -m modified &&
 	git checkout copy &&
 	git reset --hard HEAD^ &&
-	test `cat file` = file &&
+	test "$(cat file)" = file &&
 	git pull . second &&
-	test `cat file` = modified
+	test "$(cat file)" = modified &&
+	git reflog -1 >reflog.actual &&
+	sed "s/^[0-9a-f][0-9a-f]*/OBJID/" reflog.actual >reflog.fuzzy &&
+	echo "OBJID HEAD@{0}: pull . second: Fast-forward" >reflog.expected &&
+	test_cmp reflog.expected reflog.fuzzy
+'
+
+test_expect_success 'fail if wildcard spec does not match any refs' '
+	git checkout -b test copy^ &&
+	test_when_finished "git checkout -f copy && git branch -D test" &&
+	test "$(cat file)" = file &&
+	test_must_fail git pull . "refs/nonexisting1/*:refs/nonexisting2/*" 2>err &&
+	test_i18ngrep "no candidates for merging" err &&
+	test "$(cat file)" = file
+'
+
+test_expect_success 'fail if no branches specified with non-default remote' '
+	git remote add test_remote . &&
+	test_when_finished "git remote remove test_remote" &&
+	git checkout -b test copy^ &&
+	test_when_finished "git checkout -f copy && git branch -D test" &&
+	test "$(cat file)" = file &&
+	test_config branch.test.remote origin &&
+	test_must_fail git pull test_remote 2>err &&
+	test_i18ngrep "specify a branch on the command line" err &&
+	test "$(cat file)" = file
+'
+
+test_expect_success 'fail if not on a branch' '
+	git remote add origin . &&
+	test_when_finished "git remote remove origin" &&
+	git checkout HEAD^ &&
+	test_when_finished "git checkout -f copy" &&
+	test "$(cat file)" = file &&
+	test_must_fail git pull 2>err &&
+	test_i18ngrep "not currently on a branch" err &&
+	test "$(cat file)" = file
+'
+
+test_expect_success 'fail if no configuration for current branch' '
+	git remote add test_remote . &&
+	test_when_finished "git remote remove test_remote" &&
+	git checkout -b test copy^ &&
+	test_when_finished "git checkout -f copy && git branch -D test" &&
+	test_config branch.test.remote test_remote &&
+	test "$(cat file)" = file &&
+	test_must_fail git pull 2>err &&
+	test_i18ngrep "no tracking information" err &&
+	test "$(cat file)" = file
+'
+
+test_expect_success 'pull --all: fail if no configuration for current branch' '
+	git remote add test_remote . &&
+	test_when_finished "git remote remove test_remote" &&
+	git checkout -b test copy^ &&
+	test_when_finished "git checkout -f copy && git branch -D test" &&
+	test_config branch.test.remote test_remote &&
+	test "$(cat file)" = file &&
+	test_must_fail git pull --all 2>err &&
+	test_i18ngrep "There is no tracking information" err &&
+	test "$(cat file)" = file
+'
+
+test_expect_success 'fail if upstream branch does not exist' '
+	git checkout -b test copy^ &&
+	test_when_finished "git checkout -f copy && git branch -D test" &&
+	test_config branch.test.remote . &&
+	test_config branch.test.merge refs/heads/nonexisting &&
+	test "$(cat file)" = file &&
+	test_must_fail git pull 2>err &&
+	test_i18ngrep "no such ref was fetched" err &&
+	test "$(cat file)" = file
+'
+
+test_expect_success 'fail if the index has unresolved entries' '
+	git checkout -b third second^ &&
+	test_when_finished "git checkout -f copy && git branch -D third" &&
+	test "$(cat file)" = file &&
+	test_commit modified2 file &&
+	test -z "$(git ls-files -u)" &&
+	test_must_fail git pull . second &&
+	test -n "$(git ls-files -u)" &&
+	cp file expected &&
+	test_must_fail git pull . second 2>err &&
+	test_i18ngrep "Pull is not possible because you have unmerged files" err &&
+	test_cmp expected file &&
+	git add file &&
+	test -z "$(git ls-files -u)" &&
+	test_must_fail git pull . second 2>err &&
+	test_i18ngrep "You have not concluded your merge" err &&
+	test_cmp expected file
+'
+
+test_expect_success 'fast-forwards working tree if branch head is updated' '
+	git checkout -b third second^ &&
+	test_when_finished "git checkout -f copy && git branch -D third" &&
+	test "$(cat file)" = file &&
+	git pull . second:third 2>err &&
+	test_i18ngrep "fetch updated the current branch head" err &&
+	test "$(cat file)" = modified &&
+	test "$(git rev-parse third)" = "$(git rev-parse second)"
+'
+
+test_expect_success 'fast-forward fails with conflicting work tree' '
+	git checkout -b third second^ &&
+	test_when_finished "git checkout -f copy && git branch -D third" &&
+	test "$(cat file)" = file &&
+	echo conflict >file &&
+	test_must_fail git pull . second:third 2>err &&
+	test_i18ngrep "Cannot fast-forward your working tree" err &&
+	test "$(cat file)" = conflict &&
+	test "$(git rev-parse third)" = "$(git rev-parse second)"
 '
 
 test_expect_success '--rebase' '
 	git branch to-rebase &&
 	echo modified again > file &&
 	git commit -m file file &&
 	git checkout to-rebase &&
 	echo new > file2 &&
 	git add file2 &&
 	git commit -m "new file" &&
 	git tag before-rebase &&
 	git pull --rebase . copy &&
-	test $(git rev-parse HEAD^) = $(git rev-parse copy) &&
-	test new = $(git show HEAD:file2)
+	test "$(git rev-parse HEAD^)" = "$(git rev-parse copy)" &&
+	test new = "$(git show HEAD:file2)"
 '
+
+test_expect_success '--rebase fails with multiple branches' '
+	git reset --hard before-rebase &&
+	test_must_fail git pull --rebase . copy master 2>err &&
+	test "$(git rev-parse HEAD)" = "$(git rev-parse before-rebase)" &&
+	test_i18ngrep "Cannot rebase onto multiple branches" err &&
+	test modified = "$(git show HEAD:file)"
+'
+
 test_expect_success 'pull.rebase' '
 	git reset --hard before-rebase &&
 	test_config pull.rebase true &&
 	git pull . copy &&
-	test $(git rev-parse HEAD^) = $(git rev-parse copy) &&
-	test new = $(git show HEAD:file2)
+	test "$(git rev-parse HEAD^)" = "$(git rev-parse copy)" &&
+	test new = "$(git show HEAD:file2)"
 '
 
 test_expect_success 'branch.to-rebase.rebase' '
 	git reset --hard before-rebase &&
 	test_config branch.to-rebase.rebase true &&
 	git pull . copy &&
-	test $(git rev-parse HEAD^) = $(git rev-parse copy) &&
-	test new = $(git show HEAD:file2)
+	test "$(git rev-parse HEAD^)" = "$(git rev-parse copy)" &&
+	test new = "$(git show HEAD:file2)"
 '
 
 test_expect_success 'branch.to-rebase.rebase should override pull.rebase' '
 	git reset --hard before-rebase &&
 	test_config pull.rebase true &&
 	test_config branch.to-rebase.rebase false &&
 	git pull . copy &&
-	test $(git rev-parse HEAD^) != $(git rev-parse copy) &&
-	test new = $(git show HEAD:file2)
+	test "$(git rev-parse HEAD^)" != "$(git rev-parse copy)" &&
+	test new = "$(git show HEAD:file2)"
 '
 
 # add a feature branch, keep-merge, that is merged into master, so the
 # test can try preserving the merge commit (or not) with various
 # --rebase flags/pull.rebase settings.
 test_expect_success 'preserve merge setup' '
@@ -161,83 +283,83 @@
 '
 
 test_expect_success 'pull.rebase=false create a new merge commit' '
 	git reset --hard before-preserve-rebase &&
 	test_config pull.rebase false &&
 	git pull . copy &&
-	test $(git rev-parse HEAD^1) = $(git rev-parse before-preserve-rebase) &&
-	test $(git rev-parse HEAD^2) = $(git rev-parse copy) &&
-	test file3 = $(git show HEAD:file3.t)
+	test "$(git rev-parse HEAD^1)" = "$(git rev-parse before-preserve-rebase)" &&
+	test "$(git rev-parse HEAD^2)" = "$(git rev-parse copy)" &&
+	test file3 = "$(git show HEAD:file3.t)"
 '
 
 test_expect_success 'pull.rebase=true flattens keep-merge' '
 	git reset --hard before-preserve-rebase &&
 	test_config pull.rebase true &&
 	git pull . copy &&
-	test $(git rev-parse HEAD^^) = $(git rev-parse copy) &&
-	test file3 = $(git show HEAD:file3.t)
+	test "$(git rev-parse HEAD^^)" = "$(git rev-parse copy)" &&
+	test file3 = "$(git show HEAD:file3.t)"
 '
 
 test_expect_success 'pull.rebase=1 is treated as true and flattens keep-merge' '
 	git reset --hard before-preserve-rebase &&
 	test_config pull.rebase 1 &&
 	git pull . copy &&
-	test $(git rev-parse HEAD^^) = $(git rev-parse copy) &&
-	test file3 = $(git show HEAD:file3.t)
+	test "$(git rev-parse HEAD^^)" = "$(git rev-parse copy)" &&
+	test file3 = "$(git show HEAD:file3.t)"
 '
 
 test_expect_success 'pull.rebase=preserve rebases and merges keep-merge' '
 	git reset --hard before-preserve-rebase &&
 	test_config pull.rebase preserve &&
 	git pull . copy &&
-	test $(git rev-parse HEAD^^) = $(git rev-parse copy) &&
-	test $(git rev-parse HEAD^2) = $(git rev-parse keep-merge)
+	test "$(git rev-parse HEAD^^)" = "$(git rev-parse copy)" &&
+	test "$(git rev-parse HEAD^2)" = "$(git rev-parse keep-merge)"
 '
 
 test_expect_success 'pull.rebase=invalid fails' '
 	git reset --hard before-preserve-rebase &&
 	test_config pull.rebase invalid &&
 	! git pull . copy
 '
 
 test_expect_success '--rebase=false create a new merge commit' '
 	git reset --hard before-preserve-rebase &&
 	test_config pull.rebase true &&
 	git pull --rebase=false . copy &&
-	test $(git rev-parse HEAD^1) = $(git rev-parse before-preserve-rebase) &&
-	test $(git rev-parse HEAD^2) = $(git rev-parse copy) &&
-	test file3 = $(git show HEAD:file3.t)
+	test "$(git rev-parse HEAD^1)" = "$(git rev-parse before-preserve-rebase)" &&
+	test "$(git rev-parse HEAD^2)" = "$(git rev-parse copy)" &&
+	test file3 = "$(git show HEAD:file3.t)"
 '
 
 test_expect_success '--rebase=true rebases and flattens keep-merge' '
 	git reset --hard before-preserve-rebase &&
 	test_config pull.rebase preserve &&
 	git pull --rebase=true . copy &&
-	test $(git rev-parse HEAD^^) = $(git rev-parse copy) &&
-	test file3 = $(git show HEAD:file3.t)
+	test "$(git rev-parse HEAD^^)" = "$(git rev-parse copy)" &&
+	test file3 = "$(git show HEAD:file3.t)"
 '
 
 test_expect_success '--rebase=preserve rebases and merges keep-merge' '
 	git reset --hard before-preserve-rebase &&
 	test_config pull.rebase true &&
 	git pull --rebase=preserve . copy &&
-	test $(git rev-parse HEAD^^) = $(git rev-parse copy) &&
-	test $(git rev-parse HEAD^2) = $(git rev-parse keep-merge)
+	test "$(git rev-parse HEAD^^)" = "$(git rev-parse copy)" &&
+	test "$(git rev-parse HEAD^2)" = "$(git rev-parse keep-merge)"
 '
 
 test_expect_success '--rebase=invalid fails' '
 	git reset --hard before-preserve-rebase &&
 	! git pull --rebase=invalid . copy
 '
 
 test_expect_success '--rebase overrides pull.rebase=preserve and flattens keep-merge' '
 	git reset --hard before-preserve-rebase &&
 	test_config pull.rebase preserve &&
 	git pull --rebase . copy &&
-	test $(git rev-parse HEAD^^) = $(git rev-parse copy) &&
-	test file3 = $(git show HEAD:file3.t)
+	test "$(git rev-parse HEAD^^)" = "$(git rev-parse copy)" &&
+	test file3 = "$(git show HEAD:file3.t)"
 '
 
 test_expect_success '--rebase with rebased upstream' '
 
 	git remote add -f me . &&
 	git checkout copy &&
@@ -248,24 +370,32 @@
 	git checkout to-rebase &&
 	echo file > file2 &&
 	git commit -m to-rebase file2 &&
 	git tag to-rebase-orig &&
 	git pull --rebase me copy &&
 	test "conflicting modification" = "$(cat file)" &&
-	test file = $(cat file2)
+	test file = "$(cat file2)"
 
 '
 
+test_expect_success '--rebase -f with rebased upstream' '
+	test_when_finished "test_might_fail git rebase --abort" &&
+	git reset --hard to-rebase-orig &&
+	git pull --rebase -f me copy &&
+	test "conflicting modification" = "$(cat file)" &&
+	test file = "$(cat file2)"
+'
+
 test_expect_success '--rebase with rebased default upstream' '
 
 	git update-ref refs/remotes/me/copy copy-orig &&
 	git checkout --track -b to-rebase2 me/copy &&
 	git reset --hard to-rebase-orig &&
 	git pull --rebase &&
 	test "conflicting modification" = "$(cat file)" &&
-	test file = $(cat file2)
+	test file = "$(cat file2)"
 
 '
 
 test_expect_success 'rebased upstream + fetch + pull --rebase' '
 
 	git update-ref refs/remotes/me/copy copy-orig &&
@@ -280,24 +410,24 @@
 '
 
 test_expect_success 'pull --rebase dies early with dirty working directory' '
 
 	git checkout to-rebase &&
 	git update-ref refs/remotes/me/copy copy^ &&
-	COPY=$(git rev-parse --verify me/copy) &&
+	COPY="$(git rev-parse --verify me/copy)" &&
 	git rebase --onto $COPY copy &&
 	test_config branch.to-rebase.remote me &&
 	test_config branch.to-rebase.merge refs/heads/copy &&
 	test_config branch.to-rebase.rebase true &&
 	echo dirty >> file &&
 	git add file &&
 	test_must_fail git pull &&
-	test $COPY = $(git rev-parse --verify me/copy) &&
+	test "$COPY" = "$(git rev-parse --verify me/copy)" &&
 	git checkout HEAD -- file &&
 	git pull &&
-	test $COPY != $(git rev-parse --verify me/copy)
+	test "$COPY" != "$(git rev-parse --verify me/copy)"
 
 '
 
 test_expect_success 'pull --rebase works on branch yet to be born' '
 	git rev-parse master >expect &&
 	mkdir empty_repo &&
@@ -306,12 +436,27 @@
 	 git pull --rebase .. master &&
 	 git rev-parse HEAD >../actual
 	) &&
 	test_cmp expect actual
 '
 
+test_expect_success 'pull --rebase fails on unborn branch with staged changes' '
+	test_when_finished "rm -rf empty_repo2" &&
+	git init empty_repo2 &&
+	(
+		cd empty_repo2 &&
+		echo staged-file >staged-file &&
+		git add staged-file &&
+		test "$(git ls-files)" = staged-file &&
+		test_must_fail git pull --rebase .. master 2>err &&
+		test "$(git ls-files)" = staged-file &&
+		test "$(git show :staged-file)" = staged-file &&
+		test_i18ngrep "unborn branch with changes added to the index" err
+	)
+'
+
 test_expect_success 'setup for detecting upstreamed changes' '
 	mkdir src &&
 	(cd src &&
 	 git init &&
 	 printf "1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n" > stuff &&
 	 git add stuff &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t5521-pull-options.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t5521-pull-options.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t5521-pull-options.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t5521-pull-options.sh	2015-07-28 04:34:56.000000000 +0800
@@ -114,7 +114,34 @@
 		merge = refs/heads/master
 	EOF
 	git pull --all
 	)
 '
 
+test_expect_success 'git pull --dry-run' '
+	test_when_finished "rm -rf clonedry" &&
+	git init clonedry &&
+	(
+		cd clonedry &&
+		git pull --dry-run ../parent &&
+		test_path_is_missing .git/FETCH_HEAD &&
+		test_path_is_missing .git/refs/heads/master &&
+		test_path_is_missing .git/index &&
+		test_path_is_missing file
+	)
+'
+
+test_expect_success 'git pull --all --dry-run' '
+	test_when_finished "rm -rf cloneddry" &&
+	git init clonedry &&
+	(
+		cd clonedry &&
+		git remote add origin ../parent &&
+		git pull --all --dry-run &&
+		test_path_is_missing .git/FETCH_HEAD &&
+		test_path_is_missing .git/refs/remotes/origin/master &&
+		test_path_is_missing .git/index &&
+		test_path_is_missing file
+	)
+'
+
 test_done
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t: t5810-proto-disable-local.sh
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t: t5811-proto-disable-git.sh
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t: t5812-proto-disable-http.sh
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t: t5813-proto-disable-ssh.sh
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t: t5814-proto-disable-ext.sh
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t: t5815-submodule-protos.sh
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t6020-merge-df.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t6020-merge-df.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t6020-merge-df.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t6020-merge-df.sh	2015-07-28 04:34:56.000000000 +0800
@@ -21,13 +21,13 @@
 	echo file dir >dir &&
 	git add dir &&
 	git commit -m "File: dir"
 '
 
 test_expect_success 'Merge with d/f conflicts' '
-	test_expect_code 1 git merge "merge msg" B master
+	test_expect_code 1 git merge -m "merge msg" master
 '
 
 test_expect_success 'F/D conflict' '
 	git reset --hard &&
 	git checkout master &&
 	rm .git/index &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t6021-merge-criss-cross.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t6021-merge-criss-cross.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t6021-merge-criss-cross.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t6021-merge-criss-cross.sh	2015-07-28 04:34:56.000000000 +0800
@@ -45,38 +45,38 @@
 7
 8
 9
 " > file &&
 git commit -m "C3" file &&
 git branch C3 &&
-git merge "pre E3 merge" B A &&
+git merge -m "pre E3 merge" A &&
 echo "1
 2
 3 changed in E3, branch B. New file size
 4
 5
 6
 7
 8 changed in B8, branch A
 9
 " > file &&
 git commit -m "E3" file &&
 git checkout A &&
-git merge "pre D8 merge" A C3 &&
+git merge -m "pre D8 merge" C3 &&
 echo "1
 2
 3 changed in C3, branch B
 4
 5
 6
 7
 8 changed in D8, branch A. New file size 2
 9" > file &&
 git commit -m D8 file'
 
-test_expect_success 'Criss-cross merge' 'git merge "final merge" A B'
+test_expect_success 'Criss-cross merge' 'git merge -m "final merge" B'
 
 cat > file-expect <<EOF
 1
 2
 3 changed in E3, branch B. New file size
 4
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t6026-merge-attr.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t6026-merge-attr.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t6026-merge-attr.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t6026-merge-attr.sh	2015-07-28 04:34:56.000000000 +0800
@@ -82,17 +82,18 @@
 	grep "<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<" actual
 '
 
 cat >./custom-merge <<\EOF
 #!/bin/sh
 
-orig="$1" ours="$2" theirs="$3" exit="$4"
+orig="$1" ours="$2" theirs="$3" exit="$4" path=$5
 (
 	echo "orig is $orig"
 	echo "ours is $ours"
 	echo "theirs is $theirs"
+	echo "path is $path"
 	echo "=== orig ==="
 	cat "$orig"
 	echo "=== ours ==="
 	cat "$ours"
 	echo "=== theirs ==="
 	cat "$theirs"
@@ -107,34 +108,34 @@
 
 	echo "* merge=union" >.gitattributes &&
 	echo "text merge=custom" >>.gitattributes &&
 
 	git reset --hard anchor &&
 	git config --replace-all \
-	merge.custom.driver "./custom-merge %O %A %B 0" &&
+	merge.custom.driver "./custom-merge %O %A %B 0 %P" &&
 	git config --replace-all \
 	merge.custom.name "custom merge driver for testing" &&
 
 	git merge master &&
 
 	cmp binary union &&
 	sed -e 1,3d text >check-1 &&
 	o=$(git unpack-file master^:text) &&
 	a=$(git unpack-file side^:text) &&
 	b=$(git unpack-file master:text) &&
-	sh -c "./custom-merge $o $a $b 0" &&
+	sh -c "./custom-merge $o $a $b 0 'text'" &&
 	sed -e 1,3d $a >check-2 &&
 	cmp check-1 check-2 &&
 	rm -f $o $a $b
 '
 
 test_expect_success 'custom merge backend' '
 
 	git reset --hard anchor &&
 	git config --replace-all \
-	merge.custom.driver "./custom-merge %O %A %B 1" &&
+	merge.custom.driver "./custom-merge %O %A %B 1 %P" &&
 	git config --replace-all \
 	merge.custom.name "custom merge driver for testing" &&
 
 	if git merge master
 	then
 		echo "Eh? should have conflicted"
@@ -145,15 +146,18 @@
 
 	cmp binary union &&
 	sed -e 1,3d text >check-1 &&
 	o=$(git unpack-file master^:text) &&
 	a=$(git unpack-file anchor:text) &&
 	b=$(git unpack-file master:text) &&
-	sh -c "./custom-merge $o $a $b 0" &&
+	sh -c "./custom-merge $o $a $b 0 'text'" &&
 	sed -e 1,3d $a >check-2 &&
 	cmp check-1 check-2 &&
+	sed -e 1,3d -e 4q $a >check-3 &&
+	echo "path is text" >expect &&
+	cmp expect check-3 &&
 	rm -f $o $a $b
 '
 
 test_expect_success 'up-to-date merge without common ancestor' '
 	test_create_repo repo1 &&
 	test_create_repo repo2 &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t6300-for-each-ref.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t6300-for-each-ref.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t6300-for-each-ref.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t6300-for-each-ref.sh	2015-07-28 04:34:56.000000000 +0800
@@ -25,13 +25,16 @@
 	git commit -m "Initial" &&
 	setdate_and_increment &&
 	git tag -a -m "Tagging at $datestamp" testtag &&
 	git update-ref refs/remotes/origin/master master &&
 	git remote add origin nowhere &&
 	git config branch.master.remote origin &&
-	git config branch.master.merge refs/heads/master
+	git config branch.master.merge refs/heads/master &&
+	git remote add myfork elsewhere &&
+	git config remote.pushdefault myfork &&
+	git config push.default current
 '
 
 test_atom() {
 	case "$1" in
 		head) ref=refs/heads/master ;;
 		 tag) ref=refs/tags/testtag ;;
@@ -44,12 +47,13 @@
 		test_cmp expected actual.clean
 	"
 }
 
 test_atom head refname refs/heads/master
 test_atom head upstream refs/remotes/origin/master
+test_atom head push refs/remotes/myfork/master
 test_atom head objecttype commit
 test_atom head objectsize 171
 test_atom head objectname $(git rev-parse refs/heads/master)
 test_atom head tree $(git rev-parse refs/heads/master^{tree})
 test_atom head parent ''
 test_atom head numparent 0
@@ -80,12 +84,13 @@
 test_atom head contents 'Initial
 '
 test_atom head HEAD '*'
 
 test_atom tag refname refs/tags/testtag
 test_atom tag upstream ''
+test_atom tag push ''
 test_atom tag objecttype tag
 test_atom tag objectsize 154
 test_atom tag objectname $(git rev-parse refs/tags/testtag)
 test_atom tag tree ''
 test_atom tag parent ''
 test_atom tag numparent ''
@@ -344,12 +349,18 @@
 	git for-each-ref \
 		--format="%(upstream:track)$LF%(upstream:trackshort)" \
 		refs/heads >actual &&
 	test_cmp expected actual
 '
 
+test_expect_success '%(push) supports tracking specifiers, too' '
+	echo "[ahead 1]" >expected &&
+	git for-each-ref --format="%(push:track)" refs/heads >actual &&
+	test_cmp expected actual
+'
+
 cat >expected <<EOF
 $(git rev-parse --short HEAD)
 EOF
 
 test_expect_success 'Check short objectname format' '
 	git for-each-ref --format="%(objectname:short)" refs/heads >actual &&
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t: t7063-status-untracked-cache.sh
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t: t7410-submodule-checkout-to.sh
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t7502-commit.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t7502-commit.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t7502-commit.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t7502-commit.sh	2015-07-28 04:34:56.000000000 +0800
@@ -389,13 +389,13 @@
 write_script .git/FAKE_EDITOR <<EOF
 echo editor started > "$(pwd)/.git/result"
 exit 0
 EOF
 
 test_expect_success !AUTOIDENT 'do not fire editor when committer is bogus' '
-	>.git/result
+	>.git/result &&
 	>expect &&
 
 	echo >>negative &&
 	(
 		sane_unset GIT_COMMITTER_EMAIL &&
 		sane_unset GIT_COMMITTER_NAME &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t8002-blame.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t8002-blame.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t8002-blame.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t8002-blame.sh	2015-07-28 04:34:56.000000000 +0800
@@ -16,7 +16,69 @@
 		"<author@example.com>" 1 \
 		"<C@test.git>" 1 \
 		"<D@test.git>" 1 \
 		"<E at test dot git>" 1
 '
 
+test_expect_success 'setup showEmail tests' '
+	echo "bin: test number 1" >one &&
+	git add one &&
+	GIT_AUTHOR_NAME=name1 \
+	GIT_AUTHOR_EMAIL=email1@test.git \
+	git commit -m First --date="2010-01-01 01:00:00" &&
+	cat >expected_n <<-\EOF &&
+	(name1 2010-01-01 01:00:00 +0000 1) bin: test number 1
+	EOF
+	cat >expected_e <<-\EOF
+	(<email1@test.git> 2010-01-01 01:00:00 +0000 1) bin: test number 1
+	EOF
+'
+
+find_blame () {
+	sed -e 's/^[^(]*//'
+}
+
+test_expect_success 'blame with no options and no config' '
+	git blame one >blame &&
+	find_blame <blame >result &&
+	test_cmp expected_n result
+'
+
+test_expect_success 'blame with showemail options' '
+	git blame --show-email one >blame1 &&
+	find_blame <blame1 >result &&
+	test_cmp expected_e result &&
+	git blame -e one >blame2 &&
+	find_blame <blame2 >result &&
+	test_cmp expected_e result &&
+	git blame --no-show-email one >blame3 &&
+	find_blame <blame3 >result &&
+	test_cmp expected_n result
+'
+
+test_expect_success 'blame with showEmail config false' '
+	git config blame.showEmail false &&
+	git blame one >blame1 &&
+	find_blame <blame1 >result &&
+	test_cmp expected_n result &&
+	git blame --show-email one >blame2 &&
+	find_blame <blame2 >result &&
+	test_cmp expected_e result &&
+	git blame -e one >blame3 &&
+	find_blame <blame3 >result &&
+	test_cmp expected_e result &&
+	git blame --no-show-email one >blame4 &&
+	find_blame <blame4 >result &&
+	test_cmp expected_n result
+'
+
+test_expect_success 'blame with showEmail config true' '
+	git config blame.showEmail true &&
+	git blame one >blame1 &&
+	find_blame <blame1 >result &&
+	test_cmp expected_e result &&
+	git blame --no-show-email one >blame2 &&
+	find_blame <blame2 >result &&
+	test_cmp expected_n result
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t9001-send-email.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t9001-send-email.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t9001-send-email.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t9001-send-email.sh	2015-07-28 04:34:56.000000000 +0800
@@ -1534,24 +1534,96 @@
 		2>errors >out &&
 	grep "^!somebody@example\.org!$" commandline1
 '
 
 test_expect_success $PREREQ 'sendemail.aliasfile=~/.mailrc' '
 	clean_fake_sendmail &&
-	echo "alias sbd  someone@example.org" >~/.mailrc &&
+	echo "alias sbd  someone@example.org" >"$HOME/.mailrc" &&
 	git config --replace-all sendemail.aliasesfile "~/.mailrc" &&
 	git config sendemail.aliasfiletype mailrc &&
 	git send-email \
 		--from="Example <nobody@example.com>" \
 		--to=sbd \
 		--smtp-server="$(pwd)/fake.sendmail" \
 		outdir/0001-*.patch \
 		2>errors >out &&
 	grep "^!someone@example\.org!$" commandline1
 '
 
+test_sendmail_aliases () {
+	msg="$1" && shift &&
+	expect="$@" &&
+	cat >.tmp-email-aliases &&
+
+	test_expect_success $PREREQ "$msg" '
+		clean_fake_sendmail && rm -fr outdir &&
+		git format-patch -1 -o outdir &&
+		git config --replace-all sendemail.aliasesfile \
+			"$(pwd)/.tmp-email-aliases" &&
+		git config sendemail.aliasfiletype sendmail &&
+		git send-email \
+			--from="Example <nobody@example.com>" \
+			--to=alice --to=bcgrp \
+			--smtp-server="$(pwd)/fake.sendmail" \
+			outdir/0001-*.patch \
+			2>errors >out &&
+		for i in $expect
+		do
+			grep "^!$i!$" commandline1 || return 1
+		done
+	'
+}
+
+test_sendmail_aliases 'sendemail.aliasfiletype=sendmail' \
+	'awol@example\.com' \
+	'bob@example\.com' \
+	'chloe@example\.com' \
+	'o@example\.com' <<-\EOF
+	alice: Alice W Land <awol@example.com>
+	bob: Robert Bobbyton <bob@example.com>
+	# this is a comment
+	   # this is also a comment
+	chloe: chloe@example.com
+	abgroup: alice, bob
+	bcgrp: bob, chloe, Other <o@example.com>
+	EOF
+
+test_sendmail_aliases 'sendmail aliases line folding' \
+	alice1 \
+	bob1 bob2 \
+	chuck1 chuck2 \
+	darla1 darla2 darla3 \
+	elton1 elton2 elton3 \
+	fred1 fred2 \
+	greg1 <<-\EOF
+	alice: alice1
+	bob: bob1,\
+	bob2
+	chuck: chuck1,
+	    chuck2
+	darla: darla1,\
+	darla2,
+	    darla3
+	elton: elton1,
+	    elton2,\
+	elton3
+	fred: fred1,\
+	    fred2
+	greg: greg1
+	bcgrp: bob, chuck, darla, elton, fred, greg
+	EOF
+
+test_sendmail_aliases 'sendmail aliases tolerate bogus line folding' \
+	alice1 bob1 <<-\EOF
+	    alice: alice1
+	bcgrp: bob1\
+	EOF
+
+test_sendmail_aliases 'sendmail aliases empty' alice bcgrp <<-\EOF
+	EOF
+
 do_xmailer_test () {
 	expected=$1 params=$2 &&
 	git format-patch -1 &&
 	git send-email \
 		--from="Example <nobody@example.com>" \
 		--to=someone@example.com \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t9402-git-cvsserver-refs.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t9402-git-cvsserver-refs.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t9402-git-cvsserver-refs.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t9402-git-cvsserver-refs.sh	2015-07-28 04:34:56.000000000 +0800
@@ -493,13 +493,13 @@
 	test $(grep Index: cvsDiff.out | wc -l) = 3 &&
 	test_cmp cvsDiff.out cvswork3edit.diff &&
 	check_diff cvsDiff.out v1 v3 >check_diff.out 2>&1
 '
 
 test_expect_success 'merge early [cvswork3] b3 with b1' '
-	( cd gitwork3 && git merge "message" HEAD b1 ) &&
+	( cd gitwork3 && git merge -m "message" b1 ) &&
 	git fetch gitwork3 b3:b3 &&
 	git tag v3merged b3 &&
 	git push --tags gitcvs.git b3:b3
 '
 
 # This test would fail if cvsserver properly created a ".#afile"* file
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t9800-git-p4-basic.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t9800-git-p4-basic.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t9800-git-p4-basic.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t9800-git-p4-basic.sh	2015-07-28 04:34:56.000000000 +0800
@@ -128,12 +128,50 @@
 		test_line_count = 4 lines &&
 		echo sub2/f3 >expected &&
 		test_cmp expected f3
 	)
 '
 
+revision_ranges="2000/01/01,#head \
+		 1,2080/01/01 \
+		 2000/01/01,2080/01/01 \
+		 2000/01/01,1000 \
+		 1,1000"
+
+test_expect_success 'clone using non-numeric revision ranges' '
+	test_when_finished cleanup_git &&
+	for r in $revision_ranges
+	do
+		rm -fr "$git" &&
+		test ! -d "$git" &&
+		git p4 clone --dest="$git" //depot@$r &&
+		(
+			cd "$git" &&
+			git ls-files >lines &&
+			test_line_count = 6 lines
+		)
+	done
+'
+
+test_expect_success 'clone with date range, excluding some changes' '
+	test_when_finished cleanup_git &&
+	before=$(date +%Y/%m/%d:%H:%M:%S) &&
+	sleep 2 &&
+	(
+		cd "$cli" &&
+		:>date_range_test &&
+		p4 add date_range_test &&
+		p4 submit -d "Adding file"
+	) &&
+	git p4 clone --dest="$git" //depot@1,$before &&
+	(
+		cd "$git" &&
+		test_path_is_missing date_range_test
+	)
+'
+
 test_expect_success 'exit when p4 fails to produce marshaled output' '
 	mkdir badp4dir &&
 	test_when_finished "rm badp4dir/p4 && rmdir badp4dir" &&
 	cat >badp4dir/p4 <<-EOF &&
 	#!$SHELL_PATH
 	exit 1
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t9801-git-p4-branch.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t9801-git-p4-branch.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t9801-git-p4-branch.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t9801-git-p4-branch.sh	2015-07-28 04:34:56.000000000 +0800
@@ -501,11 +501,117 @@
 		test_path_is_file b1-file1 &&
 		test_path_is_file b3-file3_2 &&
 		test_path_is_missing b3-file3_1
 	)
 '
 
+test_expect_success 'restart p4d' '
+	kill_p4d &&
+	start_p4d
+'
+
+#
+# 1: //depot/branch1/base/file1
+#    //depot/branch1/base/file2
+#    //depot/branch1/base/dir/sub_file1
+# 2: integrate //depot/branch1/base/... -> //depot/branch2/base/...
+# 3: //depot/branch1/base/file3
+# 4: //depot/branch1/base/file2 (edit)
+# 5: integrate //depot/branch1/base/... -> //depot/branch3/base/...
+#
+# Note: the client view removes the "base" folder from the workspace
+#       and moves sub_file1 one level up.
+test_expect_success 'add simple p4 branches with common base folder on each branch' '
+	(
+		cd "$cli" &&
+		client_view "//depot/branch1/base/... //client/branch1/..." \
+			    "//depot/branch1/base/dir/sub_file1 //client/branch1/sub_file1" \
+			    "//depot/branch2/base/... //client/branch2/..." \
+			    "//depot/branch3/base/... //client/branch3/..." &&
+		mkdir -p branch1 &&
+		cd branch1 &&
+		echo file1 >file1 &&
+		echo file2 >file2 &&
+		mkdir dir &&
+		echo sub_file1 >sub_file1 &&
+		p4 add file1 file2 sub_file1 &&
+		p4 submit -d "Create branch1" &&
+		p4 integrate //depot/branch1/base/... //depot/branch2/base/... &&
+		p4 submit -d "Integrate branch2 from branch1" &&
+		echo file3 >file3 &&
+		p4 add file3 &&
+		p4 submit -d "add file3 in branch1" &&
+		p4 open file2 &&
+		echo update >>file2 &&
+		p4 submit -d "update file2 in branch1" &&
+		p4 integrate //depot/branch1/base/... //depot/branch3/base/... &&
+		p4 submit -d "Integrate branch3 from branch1"
+	)
+'
+
+# Configure branches through git-config and clone them.
+# All files are tested to make sure branches were cloned correctly.
+# Finally, make an update to branch1 on P4 side to check if it is imported
+# correctly by git p4.
+# git p4 is expected to use the client view to also not include the common
+# "base" folder in the imported directory structure.
+test_expect_success 'git p4 clone simple branches with base folder on server side' '
+	test_create_repo "$git" &&
+	(
+		cd "$git" &&
+		git config git-p4.branchList branch1:branch2 &&
+		git config --add git-p4.branchList branch1:branch3 &&
+		git p4 clone --dest=. --use-client-spec  --detect-branches //depot@all &&
+		git log --all --graph --decorate --stat &&
+		git reset --hard p4/depot/branch1 &&
+		test -f file1 &&
+		test -f file2 &&
+		test -f file3 &&
+		test -f sub_file1 &&
+		grep update file2 &&
+		git reset --hard p4/depot/branch2 &&
+		test -f file1 &&
+		test -f file2 &&
+		test ! -f file3 &&
+		test -f sub_file1 &&
+		! grep update file2 &&
+		git reset --hard p4/depot/branch3 &&
+		test -f file1 &&
+		test -f file2 &&
+		test -f file3 &&
+		test -f sub_file1 &&
+		grep update file2 &&
+		cd "$cli" &&
+		cd branch1 &&
+		p4 edit file2 &&
+		echo file2_ >>file2 &&
+		p4 submit -d "update file2 in branch1" &&
+		cd "$git" &&
+		git reset --hard p4/depot/branch1 &&
+		git p4 rebase &&
+		grep file2_ file2
+	)
+'
+
+# Now update a file in one of the branches in git and submit to P4
+test_expect_success 'Update a file in git side and submit to P4 using client view' '
+	test_when_finished cleanup_git &&
+	(
+		cd "$git" &&
+		git reset --hard p4/depot/branch1 &&
+		echo "client spec" >> file1 &&
+		git add -u . &&
+		git commit -m "update file1 in branch1" &&
+		git config git-p4.skipSubmitEdit true &&
+		git p4 submit --verbose &&
+		cd "$cli" &&
+		p4 sync ... &&
+		cd branch1 &&
+		grep "client spec" file1
+	)
+'
+
 test_expect_success 'kill p4d' '
 	kill_p4d
 '
 
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t9803-git-p4-shell-metachars.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t9803-git-p4-shell-metachars.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t9803-git-p4-shell-metachars.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t9803-git-p4-shell-metachars.sh	2015-07-28 04:34:56.000000000 +0800
@@ -25,13 +25,13 @@
 		git config git-p4.skipSubmitEditCheck true &&
 		echo f1 >foo\$bar &&
 		git add foo\$bar &&
 		echo f2 >"file with spaces" &&
 		git add "file with spaces" &&
 		git commit -m "add files" &&
-		P4EDITOR=touch git p4 submit
+		P4EDITOR="test-chmtime +5" git p4 submit
 	) &&
 	(
 		cd "$cli" &&
 		p4 sync ... &&
 		test -e "file with spaces" &&
 		test -e "foo\$bar"
@@ -44,13 +44,13 @@
 	(
 		cd "$git" &&
 		git config git-p4.skipSubmitEditCheck true &&
 		git rm foo\$bar &&
 		git rm file\ with\ spaces &&
 		git commit -m "remove files" &&
-		P4EDITOR=touch git p4 submit
+		P4EDITOR="test-chmtime +5" git p4 submit
 	) &&
 	(
 		cd "$cli" &&
 		p4 sync ... &&
 		test ! -e "file with spaces" &&
 		test ! -e foo\$bar
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t9805-git-p4-skip-submit-edit.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t9805-git-p4-skip-submit-edit.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t9805-git-p4-skip-submit-edit.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t9805-git-p4-skip-submit-edit.sh	2015-07-28 04:34:56.000000000 +0800
@@ -87,13 +87,13 @@
 	EOF
 	chmod 755 ed.sh &&
 	(
 		cd "$git" &&
 		echo line >>file1 &&
 		git commit -a -m "change 5" &&
-		P4EDITOR="$TRASH_DIRECTORY/ed.sh" &&
+		P4EDITOR="\"$TRASH_DIRECTORY/ed.sh\"" &&
 		export P4EDITOR &&
 		git p4 submit &&
 		p4 changes //depot/... >wc &&
 		test_line_count = 5 wc
 	)
 '
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t9813-git-p4-preserve-users.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t9813-git-p4-preserve-users.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t9813-git-p4-preserve-users.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t9813-git-p4-preserve-users.sh	2015-07-28 04:34:56.000000000 +0800
@@ -50,13 +50,15 @@
 		cd "$git" &&
 		echo "username: a change by alice" >>file1 &&
 		echo "username: a change by bob" >>file2 &&
 		git commit --author "Alice <alice@example.com>" -m "a change by alice" file1 &&
 		git commit --author "Bob <bob@example.com>" -m "a change by bob" file2 &&
 		git config git-p4.skipSubmitEditCheck true &&
-		P4EDITOR=touch P4USER=alice P4PASSWD=secret git p4 commit --preserve-user &&
+		P4EDITOR="test-chmtime +5" P4USER=alice P4PASSWD=secret &&
+		export P4EDITOR P4USER P4PASSWD &&
+		git p4 commit --preserve-user &&
 		p4_check_commit_author file1 alice &&
 		p4_check_commit_author file2 bob
 	)
 '
 
 # Test username support, submitting as bob, who lacks admin rights. Should
@@ -66,13 +68,13 @@
 	test_when_finished cleanup_git &&
 	(
 		cd "$git" &&
 		git config git-p4.skipSubmitEditCheck true &&
 		echo "username-noperms: a change by alice" >>file1 &&
 		git commit --author "Alice <alice@example.com>" -m "perms: a change by alice" file1 &&
-		P4EDITOR=touch P4USER=bob P4PASSWD=secret &&
+		P4EDITOR="test-chmtime +5" P4USER=bob P4PASSWD=secret &&
 		export P4EDITOR P4USER P4PASSWD &&
 		test_must_fail git p4 commit --preserve-user &&
 		! git diff --exit-code HEAD..p4/master
 	)
 '
 
@@ -84,13 +86,13 @@
 		cd "$git" &&
 		git config git-p4.skipSubmitEditCheck true &&
 		echo "username-bob: a change by bob" >>file1 &&
 		git commit --author "Bob <bob@example.com>" -m "preserve: a change by bob" file1 &&
 		echo "username-unknown: a change by charlie" >>file1 &&
 		git commit --author "Charlie <charlie@example.com>" -m "preserve: a change by charlie" file1 &&
-		P4EDITOR=touch P4USER=alice P4PASSWD=secret &&
+		P4EDITOR="test-chmtime +5" P4USER=alice P4PASSWD=secret &&
 		export P4EDITOR P4USER P4PASSWD &&
 		test_must_fail git p4 commit --preserve-user &&
 		! git diff --exit-code HEAD..p4/master &&
 
 		echo "$0: repeat with allowMissingP4Users enabled" &&
 		git config git-p4.allowMissingP4Users true &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t9814-git-p4-rename.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t9814-git-p4-rename.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t9814-git-p4-rename.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t9814-git-p4-rename.sh	2015-07-28 04:34:56.000000000 +0800
@@ -223,20 +223,15 @@
 		p4 filelog //depot/file13 | grep -q "branch from //depot/file2"
 	)
 '
 
 # See if configurables can be set, and in particular if the run.move.allow
 # variable exists, which allows admins to disable the "p4 move" command.
-test_expect_success 'p4 configure command and run.move.allow are available' '
-	p4 configure show run.move.allow >out ; retval=$? &&
-	test $retval = 0 &&
-	{
-		egrep ^run.move.allow: out &&
-		test_set_prereq P4D_HAVE_CONFIGURABLE_RUN_MOVE_ALLOW ||
-		true
-	} || true
+test_lazy_prereq P4D_HAVE_CONFIGURABLE_RUN_MOVE_ALLOW '
+	p4 configure show run.move.allow >out &&
+	egrep ^run.move.allow: out
 '
 
 # If move can be disabled, turn it off and test p4 move handling
 test_expect_success P4D_HAVE_CONFIGURABLE_RUN_MOVE_ALLOW \
 		    'do not use p4 move when administratively disabled' '
 	test_when_finished "p4 configure set run.move.allow=1" &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t9816-git-p4-locked.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t9816-git-p4-locked.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t9816-git-p4-locked.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t9816-git-p4-locked.sh	2015-07-28 04:34:56.000000000 +0800
@@ -32,19 +32,19 @@
 		git commit -m "line2 in file1" &&
 		git config git-p4.skipSubmitEdit true &&
 		git p4 submit
 	)
 '
 
-test_expect_failure 'add with lock not taken' '
+test_expect_success 'add with lock not taken' '
 	test_when_finished cleanup_git &&
 	git p4 clone --dest="$git" //depot &&
 	(
 		cd "$git" &&
 		echo line1 >>add-lock-not-taken &&
-		git add file2 &&
+		git add add-lock-not-taken &&
 		git commit -m "add add-lock-not-taken" &&
 		git config git-p4.skipSubmitEdit true &&
 		git p4 submit --verbose
 	)
 '
 
@@ -104,13 +104,13 @@
 		git commit -m "chmod +x file1" &&
 		git config git-p4.skipSubmitEdit true &&
 		git p4 submit --verbose
 	)
 '
 
-test_expect_failure 'copy with lock taken' '
+test_expect_success 'copy with lock taken' '
 	lock_in_another_client &&
 	test_when_finished cleanup_git &&
 	test_when_finished "cd \"$cli\" && p4 revert file2 && rm -f file2" &&
 	git p4 clone --dest="$git" //depot &&
 	(
 		cd "$git" &&
@@ -127,14 +127,14 @@
 	lock_in_another_client &&
 	test_when_finished cleanup_git &&
 	test_when_finished "cd \"$cli\" && p4 sync file1 && rm -f file2" &&
 	git p4 clone --dest="$git" //depot &&
 	(
 		cd "$git" &&
-		git mv file1 file2 &&
-		git commit -m "mv file1 to file2" &&
+		git mv file1 file3 &&
+		git commit -m "mv file1 to file3" &&
 		git config git-p4.skipSubmitEdit true &&
 		git config git-p4.detectRenames true &&
 		git p4 submit --verbose
 	)
 '
 
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t: t9818-git-p4-block.sh
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t: t9819-git-p4-case-folding.sh
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t: t9820-git-p4-editor-handling.sh
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t9902-completion.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t9902-completion.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/t9902-completion.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/t9902-completion.sh	2015-07-28 04:34:56.000000000 +0800
@@ -367,12 +367,46 @@
 	test_when_finished "git remote remove remote_in_config_2" &&
 	git remote add remote_in_config_2 git://remote_2 &&
 	__git_remotes >actual &&
 	test_cmp expect actual
 '
 
+test_expect_success '__git_get_config_variables' '
+	cat >expect <<-EOF &&
+	name-1
+	name-2
+	EOF
+	test_config interesting.name-1 good &&
+	test_config interesting.name-2 good &&
+	test_config subsection.interesting.name-3 bad &&
+	__git_get_config_variables interesting >actual &&
+	test_cmp expect actual
+'
+
+test_expect_success '__git_pretty_aliases' '
+	cat >expect <<-EOF &&
+	author
+	hash
+	EOF
+	test_config pretty.author "%an %ae" &&
+	test_config pretty.hash %H &&
+	__git_pretty_aliases >actual &&
+	test_cmp expect actual
+'
+
+test_expect_success '__git_aliases' '
+	cat >expect <<-EOF &&
+	ci
+	co
+	EOF
+	test_config alias.ci commit &&
+	test_config alias.co checkout &&
+	__git_aliases >actual &&
+	test_cmp expect actual
+'
+
 test_expect_success 'basic' '
 	run_completion "git " &&
 	# built-in
 	grep -q "^add \$" out &&
 	# script
 	grep -q "^filter-branch \$" out &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/test-lib-functions.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/test-lib-functions.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/test-lib-functions.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/test-lib-functions.sh	2015-07-28 04:34:56.000000000 +0800
@@ -345,17 +345,24 @@
 		return 0
 		;;
 	esac
 	return 1
 }
 
+test_verify_prereq () {
+	test -z "$test_prereq" ||
+	expr >/dev/null "$test_prereq" : '[A-Z0-9_,!]*$' ||
+	error "bug in the test script: '$test_prereq' does not look like a prereq"
+}
+
 test_expect_failure () {
 	test_start_
 	test "$#" = 3 && { test_prereq=$1; shift; } || test_prereq=
 	test "$#" = 2 ||
 	error "bug in the test script: not 2 or 3 parameters to test-expect-failure"
+	test_verify_prereq
 	export test_prereq
 	if ! test_skip "$@"
 	then
 		say >&3 "checking known breakage: $2"
 		if test_run_ "$2" expecting_failure
 		then
@@ -369,12 +376,13 @@
 
 test_expect_success () {
 	test_start_
 	test "$#" = 3 && { test_prereq=$1; shift; } || test_prereq=
 	test "$#" = 2 ||
 	error "bug in the test script: not 2 or 3 parameters to test-expect-success"
+	test_verify_prereq
 	export test_prereq
 	if ! test_skip "$@"
 	then
 		say >&3 "expecting success: $2"
 		if test_run_ "$2"
 		then
@@ -397,12 +405,13 @@
 test_external () {
 	test "$#" = 4 && { test_prereq=$1; shift; } || test_prereq=
 	test "$#" = 3 ||
 	error >&5 "bug in the test script: not 3 or 4 parameters to test_external"
 	descr="$1"
 	shift
+	test_verify_prereq
 	export test_prereq
 	if ! test_skip "$descr" "$@"
 	then
 		# Announce the script to reduce confusion about the
 		# test output that follows.
 		say_color "" "# run $test_count: $descr ($*)"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/test-lib.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/test-lib.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/t/test-lib.sh	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/t/test-lib.sh	2015-07-28 04:34:56.000000000 +0800
@@ -567,13 +567,13 @@
 }
 
 test_run_ () {
 	test_cleanup=:
 	expecting_failure=$2
 
-	if test "${GIT_TEST_CHAIN_LINT:-0}" != 0; then
+	if test "${GIT_TEST_CHAIN_LINT:-1}" != 0; then
 		# 117 is magic because it is unlikely to match the exit
 		# code of other programs
 		test_eval_ "(exit 117) && $1"
 		if test "$?" != 117; then
 			error "bug in the test script: broken &&-chain: $1"
 		fi
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tag.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tag.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tag.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tag.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt/hooks/applypatch-msg.sample /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt/hooks/applypatch-msg.sample
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt/hooks/applypatch-msg.sample	2017-10-10 13:18:57.866528222 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt/hooks/applypatch-msg.sample	2017-10-10 13:51:30.362456664 +0800
@@ -7,9 +7,9 @@
 # appropriate message if it wants to stop the commit.  The hook is
 # allowed to edit the commit message file.
 #
 # To enable this hook, rename this file to "applypatch-msg".
 
 . git-sh-setup
-test -x "$GIT_DIR/hooks/commit-msg" &&
-	exec "$GIT_DIR/hooks/commit-msg" ${1+"$@"}
+commitmsg="$(git rev-parse --git-path hooks/commit-msg)"
+test -x "$commitmsg" && exec "$commitmsg" ${1+"$@"}
 :
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt/hooks/pre-applypatch.sample /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt/hooks/pre-applypatch.sample
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/blt/hooks/pre-applypatch.sample	2017-10-10 13:18:57.878528222 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/blt/hooks/pre-applypatch.sample	2017-10-10 13:51:30.374456664 +0800
@@ -6,9 +6,9 @@
 # The hook should exit with non-zero status after issuing an
 # appropriate message if it wants to stop the commit.
 #
 # To enable this hook, rename this file to "pre-applypatch".
 
 . git-sh-setup
-test -x "$GIT_DIR/hooks/pre-commit" &&
-	exec "$GIT_DIR/hooks/pre-commit" ${1+"$@"}
+precommit="$(git rev-parse --git-path hooks/pre-commit)"
+test -x "$precommit" && exec "$precommit" ${1+"$@"}
 :
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/boilerplates.made /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/boilerplates.made
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/boilerplates.made	2017-10-10 13:18:57.910528220 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/boilerplates.made	2017-10-10 13:51:30.394456663 +0800
@@ -1 +1 @@
-Tue Oct 10 13:18:57 CST 2017
+Tue Oct 10 13:51:30 CST 2017
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/hooks--applypatch-msg.sample /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/hooks--applypatch-msg.sample
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/hooks--applypatch-msg.sample	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/hooks--applypatch-msg.sample	2015-07-28 04:34:56.000000000 +0800
@@ -7,9 +7,9 @@
 # appropriate message if it wants to stop the commit.  The hook is
 # allowed to edit the commit message file.
 #
 # To enable this hook, rename this file to "applypatch-msg".
 
 . git-sh-setup
-test -x "$GIT_DIR/hooks/commit-msg" &&
-	exec "$GIT_DIR/hooks/commit-msg" ${1+"$@"}
+commitmsg="$(git rev-parse --git-path hooks/commit-msg)"
+test -x "$commitmsg" && exec "$commitmsg" ${1+"$@"}
 :
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/hooks--pre-applypatch.sample /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/hooks--pre-applypatch.sample
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/templates/hooks--pre-applypatch.sample	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/templates/hooks--pre-applypatch.sample	2015-07-28 04:34:56.000000000 +0800
@@ -6,9 +6,9 @@
 # The hook should exit with non-zero status after issuing an
 # appropriate message if it wants to stop the commit.
 #
 # To enable this hook, rename this file to "pre-applypatch".
 
 . git-sh-setup
-test -x "$GIT_DIR/hooks/pre-commit" &&
-	exec "$GIT_DIR/hooks/pre-commit" ${1+"$@"}
+precommit="$(git rev-parse --git-path hooks/pre-commit)"
+test -x "$precommit" && exec "$precommit" ${1+"$@"}
 :
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-chmtime and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-chmtime differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-chmtime.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-chmtime.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-chmtime.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-chmtime.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-config and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-config differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-config.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-config.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-config.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-config.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-ctype and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-ctype differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-ctype.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-ctype.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-ctype.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-ctype.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-date and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-date differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-date.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-date.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-date.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-date.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-delta and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-delta differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-delta.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-delta.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-delta.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-delta.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-dump-cache-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-dump-cache-tree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-dump-cache-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-dump-cache-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-dump-cache-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-dump-cache-tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-dump-split-index and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-dump-split-index differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-dump-split-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-dump-split-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-dump-split-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-dump-split-index.o differ
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0: test-dump-untracked-cache
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0: test-dump-untracked-cache.c
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0: test-dump-untracked-cache.c.bc
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0: test-dump-untracked-cache.o
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-genrandom and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-genrandom differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-genrandom.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-genrandom.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-genrandom.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-genrandom.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-hashmap and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-hashmap differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-hashmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-hashmap.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-hashmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-hashmap.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-index-version and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-index-version differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-index-version.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-index-version.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-index-version.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-index-version.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-line-buffer and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-line-buffer differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-line-buffer.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-line-buffer.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-line-buffer.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-line-buffer.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-match-trees and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-match-trees differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-match-trees.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-match-trees.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-match-trees.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-match-trees.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-mergesort and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-mergesort differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-mergesort.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-mergesort.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-mergesort.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-mergesort.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-mktemp and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-mktemp differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-mktemp.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-mktemp.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-mktemp.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-mktemp.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-parse-options and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-parse-options differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-parse-options.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-parse-options.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-parse-options.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-parse-options.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-path-utils and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-path-utils differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-path-utils.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-path-utils.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-path-utils.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-path-utils.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-prio-queue and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-prio-queue differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-prio-queue.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-prio-queue.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-prio-queue.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-prio-queue.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-read-cache and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-read-cache differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-read-cache.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-read-cache.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-read-cache.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-read-cache.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-regex and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-regex differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-regex.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-regex.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-regex.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-regex.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-revision-walking and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-revision-walking differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-revision-walking.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-revision-walking.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-revision-walking.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-revision-walking.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-run-command and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-run-command differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-run-command.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-run-command.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-run-command.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-run-command.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-scrap-cache-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-scrap-cache-tree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-scrap-cache-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-scrap-cache-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-scrap-cache-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-scrap-cache-tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-sha1 and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-sha1 differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-sha1-array and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-sha1-array differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-sha1-array.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-sha1-array.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-sha1-array.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-sha1-array.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-sha1.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-sha1.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-sha1.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-sha1.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-sigchain and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-sigchain differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-sigchain.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-sigchain.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-sigchain.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-sigchain.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-string-list and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-string-list differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-string-list.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-string-list.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-string-list.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-string-list.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-subprocess and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-subprocess differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-subprocess.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-subprocess.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-subprocess.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-subprocess.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-svn-fe and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-svn-fe differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-svn-fe.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-svn-fe.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-svn-fe.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-svn-fe.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-urlmatch-normalization and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-urlmatch-normalization differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-urlmatch-normalization.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-urlmatch-normalization.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-urlmatch-normalization.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-urlmatch-normalization.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-wildmatch and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-wildmatch differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-wildmatch.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-wildmatch.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/test-wildmatch.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/test-wildmatch.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/thread-utils.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/thread-utils.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/thread-utils.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/thread-utils.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/trace.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/trace.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/trace.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/trace.c	2015-07-28 04:34:56.000000000 +0800
@@ -307,12 +307,13 @@
 		git_work_tree = "(null)";
 
 	if (!prefix)
 		prefix = "(null)";
 
 	trace_printf_key(&key, "setup: git_dir: %s\n", quote_crnl(get_git_dir()));
+	trace_printf_key(&key, "setup: git_common_dir: %s\n", quote_crnl(get_git_common_dir()));
 	trace_printf_key(&key, "setup: worktree: %s\n", quote_crnl(git_work_tree));
 	trace_printf_key(&key, "setup: cwd: %s\n", quote_crnl(cwd));
 	trace_printf_key(&key, "setup: prefix: %s\n", quote_crnl(prefix));
 
 	free(cwd);
 }
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/trace.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/trace.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/trace.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/trace.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/trailer.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/trailer.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/trailer.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/trailer.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/transport.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/transport.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/transport.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/transport.c	2015-07-28 04:34:56.000000000 +0800
@@ -275,47 +275,45 @@
 	argv_array_push(&rsync.args, get_object_directory());
 
 	/* NEEDSWORK: handle one level of alternates */
 	return run_command(&rsync);
 }
 
-static int write_one_ref(const char *name, const unsigned char *sha1,
-		int flags, void *data)
+static int write_one_ref(const char *name, const struct object_id *oid,
+			 int flags, void *data)
 {
 	struct strbuf *buf = data;
 	int len = buf->len;
-	FILE *f;
 
 	/* when called via for_each_ref(), flags is non-zero */
 	if (flags && !starts_with(name, "refs/heads/") &&
 			!starts_with(name, "refs/tags/"))
 		return 0;
 
 	strbuf_addstr(buf, name);
 	if (safe_create_leading_directories(buf->buf) ||
-			!(f = fopen(buf->buf, "w")) ||
-			fprintf(f, "%s\n", sha1_to_hex(sha1)) < 0 ||
-			fclose(f))
-		return error("problems writing temporary file %s", buf->buf);
+	    write_file(buf->buf, 0, "%s\n", oid_to_hex(oid)))
+		return error("problems writing temporary file %s: %s",
+			     buf->buf, strerror(errno));
 	strbuf_setlen(buf, len);
 	return 0;
 }
 
 static int write_refs_to_temp_dir(struct strbuf *temp_dir,
-		int refspec_nr, const char **refspec)
+				  int refspec_nr, const char **refspec)
 {
 	int i;
 
 	for (i = 0; i < refspec_nr; i++) {
-		unsigned char sha1[20];
+		struct object_id oid;
 		char *ref;
 
-		if (dwim_ref(refspec[i], strlen(refspec[i]), sha1, &ref) != 1)
+		if (dwim_ref(refspec[i], strlen(refspec[i]), oid.hash, &ref) != 1)
 			return error("Could not get ref %s", refspec[i]);
 
-		if (write_one_ref(ref, sha1, 0, temp_dir)) {
+		if (write_one_ref(ref, &oid, 0, temp_dir)) {
 			free(ref);
 			return -1;
 		}
 		free(ref);
 	}
 	return 0;
@@ -911,48 +909,12 @@
 
 static int external_specification_len(const char *url)
 {
 	return strchr(url, ':') - url;
 }
 
-static const struct string_list *protocol_whitelist(void)
-{
-	static int enabled = -1;
-	static struct string_list allowed = STRING_LIST_INIT_DUP;
-
-	if (enabled < 0) {
-		const char *v = getenv("GIT_ALLOW_PROTOCOL");
-		if (v) {
-			string_list_split(&allowed, v, ':', -1);
-			string_list_sort(&allowed);
-			enabled = 1;
-		} else {
-			enabled = 0;
-		}
-	}
-
-	return enabled ? &allowed : NULL;
-}
-
-int is_transport_allowed(const char *type)
-{
-	const struct string_list *allowed = protocol_whitelist();
-	return !allowed || string_list_has_string(allowed, type);
-}
-
-void transport_check_allowed(const char *type)
-{
-	if (!is_transport_allowed(type))
-		die("transport '%s' not allowed", type);
-}
-
-int transport_restrict_protocols(void)
-{
-	return !!protocol_whitelist();
-}
-
 struct transport *transport_get(struct remote *remote, const char *url)
 {
 	const char *helper;
 	struct transport *ret = xcalloc(1, sizeof(*ret));
 
 	ret->progress = isatty(2);
@@ -978,35 +940,30 @@
 			helper = xstrndup(url, p - url);
 	}
 
 	if (helper) {
 		transport_helper_init(ret, helper);
 	} else if (starts_with(url, "rsync:")) {
-		transport_check_allowed("rsync");
 		ret->get_refs_list = get_refs_via_rsync;
 		ret->fetch = fetch_objs_via_rsync;
 		ret->push = rsync_transport_push;
 		ret->smart_options = NULL;
 	} else if (url_is_local_not_ssh(url) && is_file(url) && is_bundle(url, 1)) {
 		struct bundle_transport_data *data = xcalloc(1, sizeof(*data));
-		transport_check_allowed("file");
 		ret->data = data;
 		ret->get_refs_list = get_refs_from_bundle;
 		ret->fetch = fetch_refs_from_bundle;
 		ret->disconnect = close_bundle;
 		ret->smart_options = NULL;
 	} else if (!is_url(url)
 		|| starts_with(url, "file://")
 		|| starts_with(url, "git://")
 		|| starts_with(url, "ssh://")
 		|| starts_with(url, "git+ssh://")
 		|| starts_with(url, "ssh+git://")) {
-		/*
-		 * These are builtin smart transports; "allowed" transports
-		 * will be checked individually in git_connect.
-		 */
+		/* These are builtin smart transports. */
 		struct git_transport_data *data = xcalloc(1, sizeof(*data));
 		ret->data = data;
 		ret->set_option = NULL;
 		ret->get_refs_list = get_refs_via_connect;
 		ret->fetch = fetch_refs_via_pack;
 		ret->push_refs = git_transport_push;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/transport.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/transport.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/transport.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/transport.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/transport.h	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/transport.h	2015-07-28 04:34:56.000000000 +0800
@@ -130,30 +130,12 @@
 #define TRANSPORT_SUMMARY_WIDTH (2 * DEFAULT_ABBREV + 3)
 #define TRANSPORT_SUMMARY(x) (int)(TRANSPORT_SUMMARY_WIDTH + strlen(x) - gettext_width(x)), (x)
 
 /* Returns a transport suitable for the url */
 struct transport *transport_get(struct remote *, const char *);
 
-/*
- * Check whether a transport is allowed by the environment. Type should
- * generally be the URL scheme, as described in Documentation/git.txt
- */
-int is_transport_allowed(const char *type);
-
-/*
- * Check whether a transport is allowed by the environment,
- * and die otherwise.
- */
-void transport_check_allowed(const char *type);
-
-/*
- * Returns true if the user has attempted to turn on protocol
- * restrictions at all.
- */
-int transport_restrict_protocols(void);
-
 /* Transport options which apply to git:// and scp-style URLs */
 
 /* The program to use on the remote side to send a pack */
 #define TRANS_OPT_UPLOADPACK "uploadpack"
 
 /* The program to use on the remote side to receive a pack */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/transport-helper.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/transport-helper.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/transport-helper.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/transport-helper.c	2015-07-28 04:34:56.000000000 +0800
@@ -1036,14 +1036,12 @@
 
 int transport_helper_init(struct transport *transport, const char *name)
 {
 	struct helper_data *data = xcalloc(1, sizeof(*data));
 	data->name = name;
 
-	transport_check_allowed(name);
-
 	if (getenv("GIT_TRANSPORT_HELPER_DEBUG"))
 		debug = 1;
 
 	transport->data = data;
 	transport->set_option = set_helper_option;
 	transport->get_refs_list = get_refs_list;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/transport-helper.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/transport-helper.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/transport-helper.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/transport-helper.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/transport.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/transport.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tree.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tree-diff.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tree-diff.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tree-diff.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tree-diff.c	2015-07-28 04:34:56.000000000 +0800
@@ -61,27 +61,27 @@
  * with p and it can be freed.
  */
 static int emit_diff_first_parent_only(struct diff_options *opt, struct combine_diff_path *p)
 {
 	struct combine_diff_parent *p0 = &p->parent[0];
 	if (p->mode && p0->mode) {
-		opt->change(opt, p0->mode, p->mode, p0->sha1, p->sha1,
+		opt->change(opt, p0->mode, p->mode, p0->oid.hash, p->oid.hash,
 			1, 1, p->path, 0, 0);
 	}
 	else {
 		const unsigned char *sha1;
 		unsigned int mode;
 		int addremove;
 
 		if (p->mode) {
 			addremove = '+';
-			sha1 = p->sha1;
+			sha1 = p->oid.hash;
 			mode = p->mode;
 		} else {
 			addremove = '-';
-			sha1 = p0->sha1;
+			sha1 = p0->oid.hash;
 			mode = p0->mode;
 		}
 
 		opt->add_remove(opt, addremove, mode, sha1, 1, p->path, 0);
 	}
 
@@ -121,14 +121,14 @@
  */
 static struct combine_diff_path *path_appendnew(struct combine_diff_path *last,
 	int nparent, const struct strbuf *base, const char *path, int pathlen,
 	unsigned mode, const unsigned char *sha1)
 {
 	struct combine_diff_path *p;
-	size_t len = st_add(base->len, pathlen);
-	size_t alloclen = combine_diff_path_size(nparent, len);
+	int len = base->len + pathlen;
+	int alloclen = combine_diff_path_size(nparent, len);
 
 	/* if last->next is !NULL - it is a pre-allocated memory, we can reuse */
 	p = last->next;
 	if (p && (alloclen > (intptr_t)p->next)) {
 		free(p);
 		p = NULL;
@@ -148,13 +148,13 @@
 
 	p->path = (char *)&(p->parent[nparent]);
 	memcpy(p->path, base->buf, base->len);
 	memcpy(p->path + base->len, path, pathlen);
 	p->path[len] = 0;
 	p->mode = mode;
-	hashcpy(p->sha1, sha1 ? sha1 : null_sha1);
+	hashcpy(p->oid.hash, sha1 ? sha1 : null_sha1);
 
 	return p;
 }
 
 /*
  * new path should be added to combine diff
@@ -235,13 +235,13 @@
 			else {
 				sha1_i = NULL;
 				mode_i = 0;
 			}
 
 			p->parent[i].mode = mode_i;
-			hashcpy(p->parent[i].sha1, sha1_i ? sha1_i : null_sha1);
+			hashcpy(p->parent[i].oid.hash, sha1_i ? sha1_i : null_sha1);
 		}
 
 		keep = 1;
 		if (opt->pathchange)
 			keep = opt->pathchange(opt, p);
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tree-diff.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tree-diff.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tree-diff.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tree-diff.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tree.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tree-walk.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tree-walk.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tree-walk.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tree-walk.c	2015-07-28 04:34:56.000000000 +0800
@@ -412,12 +412,18 @@
 		free_extended_entry(tx + i);
 	free(tx);
 	strbuf_release(&base);
 	return error;
 }
 
+struct dir_state {
+	void *tree;
+	unsigned long size;
+	unsigned char sha1[20];
+};
+
 static int find_tree_entry(struct tree_desc *t, const char *name, unsigned char *result, unsigned *mode)
 {
 	int namelen = strlen(name);
 	while (t->size) {
 		const char *entry;
 		const unsigned char *sha1;
@@ -475,12 +481,212 @@
 		retval = find_tree_entry(&t, name, sha1, mode);
 	}
 	free(tree);
 	return retval;
 }
 
+/*
+ * This is Linux's built-in max for the number of symlinks to follow.
+ * That limit, of course, does not affect git, but it's a reasonable
+ * choice.
+ */
+#define GET_TREE_ENTRY_FOLLOW_SYMLINKS_MAX_LINKS 40
+
+/**
+ * Find a tree entry by following symlinks in tree_sha (which is
+ * assumed to be the root of the repository).  In the event that a
+ * symlink points outside the repository (e.g. a link to /foo or a
+ * root-level link to ../foo), the portion of the link which is
+ * outside the repository will be returned in result_path, and *mode
+ * will be set to 0.  It is assumed that result_path is uninitialized.
+ * If there are no symlinks, or the end result of the symlink chain
+ * points to an object inside the repository, result will be filled in
+ * with the sha1 of the found object, and *mode will hold the mode of
+ * the object.
+ *
+ * See the code for enum follow_symlink_result for a description of
+ * the return values.
+ */
+enum follow_symlinks_result get_tree_entry_follow_symlinks(unsigned char *tree_sha1, const char *name, unsigned char *result, struct strbuf *result_path, unsigned *mode)
+{
+	int retval = MISSING_OBJECT;
+	struct dir_state *parents = NULL;
+	size_t parents_alloc = 0;
+	ssize_t parents_nr = 0;
+	unsigned char current_tree_sha1[20];
+	struct strbuf namebuf = STRBUF_INIT;
+	struct tree_desc t;
+	int follows_remaining = GET_TREE_ENTRY_FOLLOW_SYMLINKS_MAX_LINKS;
+	int i;
+
+	init_tree_desc(&t, NULL, 0UL);
+	strbuf_init(result_path, 0);
+	strbuf_addstr(&namebuf, name);
+	hashcpy(current_tree_sha1, tree_sha1);
+
+	while (1) {
+		int find_result;
+		char *first_slash;
+		char *remainder = NULL;
+
+		if (!t.buffer) {
+			void *tree;
+			unsigned char root[20];
+			unsigned long size;
+			tree = read_object_with_reference(current_tree_sha1,
+							  tree_type, &size,
+							  root);
+			if (!tree)
+				goto done;
+
+			ALLOC_GROW(parents, parents_nr + 1, parents_alloc);
+			parents[parents_nr].tree = tree;
+			parents[parents_nr].size = size;
+			hashcpy(parents[parents_nr].sha1, root);
+			parents_nr++;
+
+			if (namebuf.buf[0] == '\0') {
+				hashcpy(result, root);
+				retval = FOUND;
+				goto done;
+			}
+
+			if (!size)
+				goto done;
+
+			/* descend */
+			init_tree_desc(&t, tree, size);
+		}
+
+		/* Handle symlinks to e.g. a//b by removing leading slashes */
+		while (namebuf.buf[0] == '/') {
+			strbuf_remove(&namebuf, 0, 1);
+		}
+
+		/* Split namebuf into a first component and a remainder */
+		if ((first_slash = strchr(namebuf.buf, '/'))) {
+			*first_slash = 0;
+			remainder = first_slash + 1;
+		}
+
+		if (!strcmp(namebuf.buf, "..")) {
+			struct dir_state *parent;
+			/*
+			 * We could end up with .. in the namebuf if it
+			 * appears in a symlink.
+			 */
+
+			if (parents_nr == 1) {
+				if (remainder)
+					*first_slash = '/';
+				strbuf_add(result_path, namebuf.buf,
+					   namebuf.len);
+				*mode = 0;
+				retval = FOUND;
+				goto done;
+			}
+			parent = &parents[parents_nr - 1];
+			free(parent->tree);
+			parents_nr--;
+			parent = &parents[parents_nr - 1];
+			init_tree_desc(&t, parent->tree, parent->size);
+			strbuf_remove(&namebuf, 0, remainder ? 3 : 2);
+			continue;
+		}
+
+		/* We could end up here via a symlink to dir/.. */
+		if (namebuf.buf[0] == '\0') {
+			hashcpy(result, parents[parents_nr - 1].sha1);
+			retval = FOUND;
+			goto done;
+		}
+
+		/* Look up the first (or only) path component in the tree. */
+		find_result = find_tree_entry(&t, namebuf.buf,
+					      current_tree_sha1, mode);
+		if (find_result) {
+			goto done;
+		}
+
+		if (S_ISDIR(*mode)) {
+			if (!remainder) {
+				hashcpy(result, current_tree_sha1);
+				retval = FOUND;
+				goto done;
+			}
+			/* Descend the tree */
+			t.buffer = NULL;
+			strbuf_remove(&namebuf, 0,
+				      1 + first_slash - namebuf.buf);
+		} else if (S_ISREG(*mode)) {
+			if (!remainder) {
+				hashcpy(result, current_tree_sha1);
+				retval = FOUND;
+			} else {
+				retval = NOT_DIR;
+			}
+			goto done;
+		} else if (S_ISLNK(*mode)) {
+			/* Follow a symlink */
+			unsigned long link_len;
+			size_t len;
+			char *contents, *contents_start;
+			struct dir_state *parent;
+			enum object_type type;
+
+			if (follows_remaining-- == 0) {
+				/* Too many symlinks followed */
+				retval = SYMLINK_LOOP;
+				goto done;
+			}
+
+			/*
+			 * At this point, we have followed at a least
+			 * one symlink, so on error we need to report this.
+			 */
+			retval = DANGLING_SYMLINK;
+
+			contents = read_sha1_file(current_tree_sha1, &type,
+						  &link_len);
+
+			if (!contents)
+				goto done;
+
+			if (contents[0] == '/') {
+				strbuf_addstr(result_path, contents);
+				free(contents);
+				*mode = 0;
+				retval = FOUND;
+				goto done;
+			}
+
+			if (remainder)
+				len = first_slash - namebuf.buf;
+			else
+				len = namebuf.len;
+
+			contents_start = contents;
+
+			parent = &parents[parents_nr - 1];
+			init_tree_desc(&t, parent->tree, parent->size);
+			strbuf_splice(&namebuf, 0, len,
+				      contents_start, link_len);
+			if (remainder)
+				namebuf.buf[link_len] = '/';
+			free(contents);
+		}
+	}
+done:
+	for (i = 0; i < parents_nr; i++)
+		free(parents[i].tree);
+	free(parents);
+
+	strbuf_release(&namebuf);
+	return retval;
+}
+
 static int match_entry(const struct pathspec_item *item,
 		       const struct name_entry *entry, int pathlen,
 		       const char *match, int matchlen,
 		       enum interesting *never_interesting)
 {
 	int m = -1; /* signals that we haven't called strncmp() */
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tree-walk.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tree-walk.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tree-walk.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tree-walk.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tree-walk.h	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tree-walk.h	2015-07-28 04:34:56.000000000 +0800
@@ -37,12 +37,30 @@
 void *fill_tree_descriptor(struct tree_desc *desc, const unsigned char *sha1);
 
 struct traverse_info;
 typedef int (*traverse_callback_t)(int n, unsigned long mask, unsigned long dirmask, struct name_entry *entry, struct traverse_info *);
 int traverse_trees(int n, struct tree_desc *t, struct traverse_info *info);
 
+enum follow_symlinks_result {
+	FOUND = 0, /* This includes out-of-tree links */
+	MISSING_OBJECT = -1, /* The initial symlink is missing */
+	DANGLING_SYMLINK = -2, /*
+				* The initial symlink is there, but
+				* (transitively) points to a missing
+				* in-tree file
+				*/
+	SYMLINK_LOOP = -3,
+	NOT_DIR = -4, /*
+		       * Somewhere along the symlink chain, a path is
+		       * requested which contains a file as a
+		       * non-final element.
+		       */
+};
+
+enum follow_symlinks_result get_tree_entry_follow_symlinks(unsigned char *tree_sha1, const char *name, unsigned char *result, struct strbuf *result_path, unsigned *mode);
+
 struct traverse_info {
 	struct traverse_info *prev;
 	struct name_entry name;
 	int pathlen;
 	struct pathspec *pathspec;
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/tree-walk.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/tree-walk.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/unix-socket.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/unix-socket.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/unix-socket.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/unix-socket.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/unpack-trees.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/unpack-trees.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/unpack-trees.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/unpack-trees.c	2015-07-28 04:34:56.000000000 +0800
@@ -6,12 +6,13 @@
 #include "cache-tree.h"
 #include "unpack-trees.h"
 #include "progress.h"
 #include "refs.h"
 #include "attr.h"
 #include "split-index.h"
+#include "dir.h"
 
 /*
  * Error messages expected by scripts out of plumbing commands such as
  * read-tree.  Non-scripted Porcelain is not required to use these messages
  * and in fact are encouraged to reword them to better suit their particular
  * situation better.  See how "git checkout" and "git merge" replaces
@@ -1256,14 +1257,16 @@
 	return verify_uptodate_1(ce, o, ERROR_SPARSE_NOT_UPTODATE_FILE);
 }
 
 static void invalidate_ce_path(const struct cache_entry *ce,
 			       struct unpack_trees_options *o)
 {
-	if (ce)
-		cache_tree_invalidate_path(o->src_index, ce->name);
+	if (!ce)
+		return;
+	cache_tree_invalidate_path(o->src_index, ce->name);
+	untracked_cache_invalidate_path(o->src_index, ce->name);
 }
 
 /*
  * Check that checking out ce->sha1 in subdir ce->name is not
  * going to overwrite any working files.
  *
@@ -1431,24 +1434,21 @@
 		return 0;
 
 	len = check_leading_path(ce->name, ce_namelen(ce));
 	if (!len)
 		return 0;
 	else if (len > 0) {
-		char *path;
-		int ret;
-
-		path = xmemdupz(ce->name, len);
+		char path[PATH_MAX + 1];
+		memcpy(path, ce->name, len);
+		path[len] = 0;
 		if (lstat(path, &st))
-			ret = error("cannot stat '%s': %s", path,
+			return error("cannot stat '%s': %s", path,
 					strerror(errno));
-		else
-			ret = check_ok_to_remove(path, len, DT_UNKNOWN, NULL,
-						 &st, error_type, o);
-		free(path);
-		return ret;
+
+		return check_ok_to_remove(path, len, DT_UNKNOWN, NULL, &st,
+				error_type, o);
 	} else if (lstat(ce->name, &st)) {
 		if (errno != ENOENT)
 			return error("cannot stat '%s': %s", ce->name,
 				     strerror(errno));
 		return 0;
 	} else {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/unpack-trees.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/unpack-trees.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/unpack-trees.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/unpack-trees.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/upload-pack.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/upload-pack.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/upload-pack.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/upload-pack.c	2015-07-28 04:34:56.000000000 +0800
@@ -32,13 +32,17 @@
 static unsigned long oldest_have;
 
 static int multi_ack;
 static int no_done;
 static int use_thin_pack, use_ofs_delta, use_include_tag;
 static int no_progress, daemon_mode;
-static int allow_tip_sha1_in_want;
+/* Allow specifying sha1 if it is a ref tip. */
+#define ALLOW_TIP_SHA1	01
+/* Allow request of a sha1 if it is reachable from a ref (possibly hidden ref). */
+#define ALLOW_REACHABLE_SHA1	02
+static unsigned int allow_unadvertised_object_request;
 static int shallow_nr;
 static struct object_array have_obj;
 static struct object_array want_obj;
 static struct object_array extra_edge_obj;
 static unsigned int timeout;
 static int keepalive = 5;
@@ -71,13 +75,13 @@
 }
 
 static int write_one_shallow(const struct commit_graft *graft, void *cb_data)
 {
 	FILE *fp = cb_data;
 	if (graft->nr_parent == -1)
-		fprintf(fp, "--shallow %s\n", sha1_to_hex(graft->sha1));
+		fprintf(fp, "--shallow %s\n", oid_to_hex(&graft->oid));
 	return 0;
 }
 
 static void create_pack_file(void)
 {
 	struct child_process pack_objects = CHILD_PROCESS_INIT;
@@ -439,28 +443,33 @@
 		die("git upload-pack: expected SHA1 list, got '%s'", line);
 	}
 }
 
 static int is_our_ref(struct object *o)
 {
-	return o->flags &
-		((allow_tip_sha1_in_want ? HIDDEN_REF : 0) | OUR_REF);
+	int allow_hidden_ref = (allow_unadvertised_object_request &
+			(ALLOW_TIP_SHA1 | ALLOW_REACHABLE_SHA1));
+	return o->flags & ((allow_hidden_ref ? HIDDEN_REF : 0) | OUR_REF);
 }
 
 static void check_non_tip(void)
 {
 	static const char *argv[] = {
 		"rev-list", "--stdin", NULL,
 	};
 	static struct child_process cmd = CHILD_PROCESS_INIT;
 	struct object *o;
 	char namebuf[42]; /* ^ + SHA-1 + LF */
 	int i;
 
-	/* In the normal in-process case non-tip request can never happen */
-	if (!stateless_rpc)
+	/*
+	 * In the normal in-process case without
+	 * uploadpack.allowReachableSHA1InWant,
+	 * non-tip requests can never happen.
+	 */
+	if (!stateless_rpc && !(allow_unadvertised_object_request & ALLOW_REACHABLE_SHA1))
 		goto error;
 
 	cmd.argv = argv;
 	cmd.git_cmd = 1;
 	cmd.no_stderr = 1;
 	cmd.in = -1;
@@ -678,27 +687,28 @@
 
 	shallow_nr += shallows.nr;
 	free(shallows.objects);
 }
 
 /* return non-zero if the ref is hidden, otherwise 0 */
-static int mark_our_ref(const char *refname, const unsigned char *sha1)
+static int mark_our_ref(const char *refname, const struct object_id *oid)
 {
-	struct object *o = lookup_unknown_object(sha1);
+	struct object *o = lookup_unknown_object(oid->hash);
 
 	if (ref_is_hidden(refname)) {
 		o->flags |= HIDDEN_REF;
 		return 1;
 	}
 	o->flags |= OUR_REF;
 	return 0;
 }
 
-static int check_ref(const char *refname, const unsigned char *sha1, int flag, void *cb_data)
+static int check_ref(const char *refname, const struct object_id *oid,
+		     int flag, void *cb_data)
 {
-	mark_our_ref(refname, sha1);
+	mark_our_ref(refname, oid);
 	return 0;
 }
 
 static void format_symref_info(struct strbuf *buf, struct string_list *symref)
 {
 	struct string_list_item *item;
@@ -706,54 +716,58 @@
 	if (!symref->nr)
 		return;
 	for_each_string_list_item(item, symref)
 		strbuf_addf(buf, " symref=%s:%s", item->string, (char *)item->util);
 }
 
-static int send_ref(const char *refname, const unsigned char *sha1, int flag, void *cb_data)
+static int send_ref(const char *refname, const struct object_id *oid,
+		    int flag, void *cb_data)
 {
 	static const char *capabilities = "multi_ack thin-pack side-band"
 		" side-band-64k ofs-delta shallow no-progress"
 		" include-tag multi_ack_detailed";
 	const char *refname_nons = strip_namespace(refname);
-	unsigned char peeled[20];
+	struct object_id peeled;
 
-	if (mark_our_ref(refname, sha1))
+	if (mark_our_ref(refname, oid))
 		return 0;
 
 	if (capabilities) {
 		struct strbuf symref_info = STRBUF_INIT;
 
 		format_symref_info(&symref_info, cb_data);
-		packet_write(1, "%s %s%c%s%s%s%s agent=%s\n",
-			     sha1_to_hex(sha1), refname_nons,
+		packet_write(1, "%s %s%c%s%s%s%s%s agent=%s\n",
+			     oid_to_hex(oid), refname_nons,
 			     0, capabilities,
-			     allow_tip_sha1_in_want ? " allow-tip-sha1-in-want" : "",
+			     (allow_unadvertised_object_request & ALLOW_TIP_SHA1) ?
+				     " allow-tip-sha1-in-want" : "",
+			     (allow_unadvertised_object_request & ALLOW_REACHABLE_SHA1) ?
+				     " allow-reachable-sha1-in-want" : "",
 			     stateless_rpc ? " no-done" : "",
 			     symref_info.buf,
 			     git_user_agent_sanitized());
 		strbuf_release(&symref_info);
 	} else {
-		packet_write(1, "%s %s\n", sha1_to_hex(sha1), refname_nons);
+		packet_write(1, "%s %s\n", oid_to_hex(oid), refname_nons);
 	}
 	capabilities = NULL;
-	if (!peel_ref(refname, peeled))
-		packet_write(1, "%s %s^{}\n", sha1_to_hex(peeled), refname_nons);
+	if (!peel_ref(refname, peeled.hash))
+		packet_write(1, "%s %s^{}\n", oid_to_hex(&peeled), refname_nons);
 	return 0;
 }
 
-static int find_symref(const char *refname, const unsigned char *sha1, int flag,
-		       void *cb_data)
+static int find_symref(const char *refname, const struct object_id *oid,
+		       int flag, void *cb_data)
 {
 	const char *symref_target;
 	struct string_list_item *item;
-	unsigned char unused[20];
+	struct object_id unused;
 
 	if ((flag & REF_ISSYMREF) == 0)
 		return 0;
-	symref_target = resolve_ref_unsafe(refname, 0, unused, &flag);
+	symref_target = resolve_ref_unsafe(refname, 0, unused.hash, &flag);
 	if (!symref_target || (flag & REF_ISSYMREF) == 0)
 		die("'%s' is a symref but it is not?", refname);
 	item = string_list_append(cb_data, refname);
 	item->util = xstrdup(symref_target);
 	return 0;
 }
@@ -784,15 +798,23 @@
 		create_pack_file();
 	}
 }
 
 static int upload_pack_config(const char *var, const char *value, void *unused)
 {
-	if (!strcmp("uploadpack.allowtipsha1inwant", var))
-		allow_tip_sha1_in_want = git_config_bool(var, value);
-	else if (!strcmp("uploadpack.keepalive", var)) {
+	if (!strcmp("uploadpack.allowtipsha1inwant", var)) {
+		if (git_config_bool(var, value))
+			allow_unadvertised_object_request |= ALLOW_TIP_SHA1;
+		else
+			allow_unadvertised_object_request &= ~ALLOW_TIP_SHA1;
+	} else if (!strcmp("uploadpack.allowreachablesha1inwant", var)) {
+		if (git_config_bool(var, value))
+			allow_unadvertised_object_request |= ALLOW_REACHABLE_SHA1;
+		else
+			allow_unadvertised_object_request &= ~ALLOW_REACHABLE_SHA1;
+	} else if (!strcmp("uploadpack.keepalive", var)) {
 		keepalive = git_config_int(var, value);
 		if (!keepalive)
 			keepalive = -1;
 	}
 	return parse_hide_refs_config(var, value, "uploadpack");
 }
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/upload-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/upload-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/upload-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/upload-pack.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/url.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/url.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/urlmatch.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/urlmatch.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/urlmatch.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/urlmatch.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/url.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/url.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/usage.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/usage.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/usage.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/usage.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/userdiff.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/userdiff.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/userdiff.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/userdiff.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/utf8.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/utf8.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/utf8.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/utf8.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/varint.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/varint.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/varint.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/varint.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/fast_export.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/fast_export.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/fast_export.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/fast_export.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/lib.a and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/lib.a differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/line_buffer.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/line_buffer.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/line_buffer.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/line_buffer.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/repo_tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/repo_tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/repo_tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/repo_tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/sliding_window.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/sliding_window.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/sliding_window.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/sliding_window.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/svndiff.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/svndiff.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/svndiff.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/svndiff.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/svndump.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/svndump.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/vcs-svn/svndump.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/vcs-svn/svndump.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/version /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/version
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/version	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/version	2015-07-28 04:34:57.000000000 +0800
@@ -1 +1 @@
-2.4.12
+2.5.0
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/version.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/version.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/versioncmp.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/versioncmp.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/versioncmp.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/versioncmp.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/version.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/version.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/walker.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/walker.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/walker.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/walker.c	2015-07-28 04:34:56.000000000 +0800
@@ -197,15 +197,17 @@
 		}
 		free(ref);
 	}
 	return -1;
 }
 
-static int mark_complete(const char *path, const unsigned char *sha1, int flag, void *cb_data)
+static int mark_complete(const char *path, const struct object_id *oid,
+			 int flag, void *cb_data)
 {
-	struct commit *commit = lookup_commit_reference_gently(sha1, 1);
+	struct commit *commit = lookup_commit_reference_gently(oid->hash, 1);
+
 	if (commit) {
 		commit->object.flags |= COMPLETE;
 		commit_list_insert(commit, &complete);
 	}
 	return 0;
 }
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/walker.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/walker.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/walker.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/walker.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/wildmatch.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/wildmatch.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/wildmatch.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/wildmatch.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/wrapper.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/wrapper.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/wrapper.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/wrapper.c	2015-07-28 04:34:56.000000000 +0800
@@ -561,6 +561,42 @@
 {
 	struct strbuf sb = STRBUF_INIT;
 	if (strbuf_getcwd(&sb))
 		die_errno(_("unable to get current working directory"));
 	return strbuf_detach(&sb, NULL);
 }
+
+int write_file(const char *path, int fatal, const char *fmt, ...)
+{
+	struct strbuf sb = STRBUF_INIT;
+	va_list params;
+	int fd = open(path, O_RDWR | O_CREAT | O_TRUNC, 0666);
+	if (fd < 0) {
+		if (fatal)
+			die_errno(_("could not open %s for writing"), path);
+		return -1;
+	}
+	va_start(params, fmt);
+	strbuf_vaddf(&sb, fmt, params);
+	va_end(params);
+	if (write_in_full(fd, sb.buf, sb.len) != sb.len) {
+		int err = errno;
+		close(fd);
+		strbuf_release(&sb);
+		errno = err;
+		if (fatal)
+			die_errno(_("could not write to %s"), path);
+		return -1;
+	}
+	strbuf_release(&sb);
+	if (close(fd)) {
+		if (fatal)
+			die_errno(_("could not close %s"), path);
+		return -1;
+	}
+	return 0;
+}
+
+void sleep_millisec(int millisec)
+{
+	poll(NULL, 0, millisec);
+}
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/wrapper.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/wrapper.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/wrapper.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/wrapper.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/write_or_die.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/write_or_die.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/write_or_die.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/write_or_die.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ws.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ws.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/ws.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/ws.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/wt-status.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/wt-status.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/wt-status.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/wt-status.c	2015-07-28 04:34:56.000000000 +0800
@@ -582,12 +582,14 @@
 	memset(&dir, 0, sizeof(dir));
 	if (s->show_untracked_files != SHOW_ALL_UNTRACKED_FILES)
 		dir.flags |=
 			DIR_SHOW_OTHER_DIRECTORIES | DIR_HIDE_EMPTY_DIRECTORIES;
 	if (s->show_ignored_files)
 		dir.flags |= DIR_SHOW_IGNORED_TOO;
+	else
+		dir.untracked = the_index.untracked;
 	setup_standard_excludes(&dir);
 
 	fill_directory(&dir, &s->pathspec);
 
 	for (i = 0; i < dir.nr; i++) {
 		struct dir_entry *ent = dir.entries[i];
@@ -1530,27 +1532,21 @@
 	branch = branch_get(s->branch + 11);
 	if (s->is_initial)
 		color_fprintf(s->fp, header_color, _("Initial commit on "));
 
 	color_fprintf(s->fp, branch_color_local, "%s", branch_name);
 
-	switch (stat_tracking_info(branch, &num_ours, &num_theirs)) {
-	case 0:
-		/* no base */
-		fputc(s->null_termination ? '\0' : '\n', s->fp);
-		return;
-	case -1:
-		/* with "gone" base */
+	if (stat_tracking_info(branch, &num_ours, &num_theirs, &base) < 0) {
+		if (!base) {
+			fputc(s->null_termination ? '\0' : '\n', s->fp);
+			return;
+		}
+
 		upstream_is_gone = 1;
-		break;
-	default:
-		/* with base */
-		break;
 	}
 
-	base = branch->merge[0]->dst;
 	base = shorten_unambiguous_ref(base, 0);
 	color_fprintf(s->fp, header_color, "...");
 	color_fprintf(s->fp, branch_color_remote, "%s", base);
 	free((char *)base);
 
 	if (!upstream_is_gone && !num_ours && !num_theirs) {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/wt-status.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/wt-status.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/wt-status.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/wt-status.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/lib.a and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/lib.a differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xdiffi.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xdiffi.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xdiffi.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xdiffi.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xemit.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xemit.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xemit.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xemit.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xhistogram.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xhistogram.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xhistogram.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xhistogram.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xmerge.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xmerge.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xmerge.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xmerge.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xpatience.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xpatience.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xpatience.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xpatience.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xprepare.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xprepare.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xprepare.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xprepare.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xutils.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xutils.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff/xutils.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff/xutils.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff-interface.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff-interface.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff-interface.c	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff-interface.c	2015-07-28 04:34:56.000000000 +0800
@@ -128,15 +128,12 @@
 
 int xdi_diff(mmfile_t *mf1, mmfile_t *mf2, xpparam_t const *xpp, xdemitconf_t const *xecfg, xdemitcb_t *xecb)
 {
 	mmfile_t a = *mf1;
 	mmfile_t b = *mf2;
 
-	if (mf1->size > MAX_XDIFF_SIZE || mf2->size > MAX_XDIFF_SIZE)
-		return -1;
-
 	trim_common_tail(&a, &b, xecfg->ctxlen);
 
 	return xdl_diff(&a, &b, xpp, xecfg, xecb);
 }
 
 int xdi_diff_outf(mmfile_t *mf1, mmfile_t *mf2,
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff-interface.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff-interface.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff-interface.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff-interface.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff-interface.h	2017-05-09 14:38:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff-interface.h	2015-07-28 04:34:56.000000000 +0800
@@ -1,18 +1,11 @@
 #ifndef XDIFF_INTERFACE_H
 #define XDIFF_INTERFACE_H
 
 #include "xdiff/xdiff.h"
 
-/*
- * xdiff isn't equipped to handle content over a gigabyte;
- * we make the cutoff 1GB - 1MB to give some breathing
- * room for constant-sized additions (e.g., merge markers)
- */
-#define MAX_XDIFF_SIZE (1024UL * 1024 * 1023)
-
 typedef void (*xdiff_emit_consume_fn)(void *, char *, unsigned long);
 
 int xdi_diff(mmfile_t *mf1, mmfile_t *mf2, xpparam_t const *xpp, xdemitconf_t const *xecfg, xdemitcb_t *ecb);
 int xdi_diff_outf(mmfile_t *mf1, mmfile_t *mf2,
 		  xdiff_emit_consume_fn fn, void *consume_callback_data,
 		  xpparam_t const *xpp, xdemitconf_t const *xecfg);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/xdiff-interface.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/xdiff-interface.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/zlib.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/zlib.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.12/zlib.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.5.0/zlib.o differ

//2
strict graph {
	node [label="\N"];
	12	 [label="childNum:0
code:
type:CompoundStatement
location:6:0:83:248
functionId:2"];
	71	 [label="code:a = 1
isCFGNode:True
childNum:0
location:8:1:87:92
type:ExpressionStatement
functionId:2"];
	12 -- 71;
	67	 [label="code:b = 2
isCFGNode:True
childNum:1
location:9:1:96:101
type:ExpressionStatement
functionId:2"];
	12 -- 67;
	60	 [label="code:int c = 4 ;
isCFGNode:True
childNum:2
location:10:1:104:113
type:IdentifierDeclStatement
functionId:2"];
	12 -- 60;
	15	 [label="childNum:3
code:if ( a + b > 3 && a + b < 5 || c < abs ( a ) && ! a )
type:IfStatement
functionId:2"];
	12 -- 15;
	13	 [label="code:return 0 ;
isCFGNode:True
childNum:4
location:18:1:238:246
type:ReturnStatement
functionId:2"];
	12 -- 13;
	72	 [label="operator:=
childNum:0
code:a = 1
type:AssignmentExpr
functionId:2"];
	71 -- 72;
	68	 [label="operator:=
childNum:0
code:b = 2
type:AssignmentExpr
functionId:2"];
	67 -- 68;
	61	 [label="childNum:0
code:c = 4
type:IdentifierDecl
functionId:2"];
	60 -- 61;
	35	 [label="code:a + b > 3 && a + b < 5 || c < abs ( a ) && ! a
isCFGNode:True
childNum:0
location:11:4:119:161
type:Condition
functionId:2"];
	15 -- 35;
	16	 [label="childNum:1
code:
type:CompoundStatement
location:7:1:81:81
functionId:2"];
	15 -- 16;
	14	 [label="childNum:0
code:0
type:PrimaryExpression
functionId:2"];
	13 -- 14;
	11	 [label="childNum:1
code:int
type:ReturnType
functionId:2"];
	4	 [label="childNum:2
code:int a , int b
type:ParameterList
functionId:2"];
	8	 [label="code:int a
isCFGNode:True
childNum:0
location:5:9:69:73
type:Parameter
functionId:2"];
	4 -- 8;
	5	 [label="code:int b
isCFGNode:True
childNum:1
location:5:16:76:80
type:Parameter
functionId:2"];
	4 -- 5;
	10	 [label="childNum:0
code:int
type:ParameterType
functionId:2"];
	8 -- 10;
	9	 [label="childNum:1
code:a
type:Identifier
functionId:2"];
	8 -- 9;
	7	 [label="childNum:0
code:int
type:ParameterType
functionId:2"];
	5 -- 7;
	6	 [label="childNum:1
code:b
type:Identifier
functionId:2"];
	5 -- 6;
	74	 [label="childNum:0
code:a
type:Identifier
functionId:2"];
	72 -- 74;
	73	 [label="childNum:1
code:1
type:PrimaryExpression
functionId:2"];
	72 -- 73;
	70	 [label="childNum:0
code:b
type:Identifier
functionId:2"];
	68 -- 70;
	69	 [label="childNum:1
code:2
type:PrimaryExpression
functionId:2"];
	68 -- 69;
	66	 [label="childNum:0
code:int
type:IdentifierDeclType
functionId:2"];
	61 -- 66;
	65	 [label="childNum:0
code:c
type:Identifier
functionId:2"];
	61 -- 65;
	62	 [label="operator:=
childNum:2
code:c = 4
type:AssignmentExpr
functionId:2"];
	61 -- 62;
	36	 [label="operator:||
childNum:0
code:a + b > 3 && a + b < 5 || c < abs ( a ) && ! a
type:OrExpression
functionId:2"];
	35 -- 36;
	17	 [label="childNum:0
code:if ( a - b < 0 && c <= 5 )
type:IfStatement
functionId:2"];
	16 -- 17;
	64	 [label="childNum:0
code:c
type:Identifier
functionId:2"];
	62 -- 64;
	63	 [label="childNum:1
code:4
type:PrimaryExpression
functionId:2"];
	62 -- 63;
	49	 [label="operator:&&
childNum:0
code:a + b > 3 && a + b < 5
type:AndExpression
functionId:2"];
	36 -- 49;
	37	 [label="operator:&&
childNum:1
code:c < abs ( a ) && ! a
type:AndExpression
functionId:2"];
	36 -- 37;
	25	 [label="code:a - b < 0 && c <= 5
isCFGNode:True
childNum:0
location:13:5:172:189
type:Condition
functionId:2"];
	17 -- 25;
	18	 [label="childNum:1
code:
type:CompoundStatement
location:9:2:110:110
functionId:2"];
	17 -- 18;
	55	 [label="operator:>
childNum:0
code:a + b > 3
type:RelationalExpression
functionId:2"];
	49 -- 55;
	50	 [label="operator:<
childNum:1
code:a + b < 5
type:RelationalExpression
functionId:2"];
	49 -- 50;
	41	 [label="operator:<
childNum:0
code:c < abs ( a )
type:RelationalExpression
functionId:2"];
	37 -- 41;
	38	 [label="childNum:1
code:! a
type:UnaryOp
functionId:2"];
	37 -- 38;
	26	 [label="operator:&&
childNum:0
code:a - b < 0 && c <= 5
type:AndExpression
functionId:2"];
	25 -- 26;
	19	 [label="code:cout << \"hello world\" << endl
isCFGNode:True
childNum:0
location:15:3:199:228
type:ExpressionStatement
functionId:2"];
	18 -- 19;
	57	 [label="operator:+
childNum:0
code:a + b
type:AdditiveExpression
functionId:2"];
	55 -- 57;
	56	 [label="childNum:1
code:3
type:PrimaryExpression
functionId:2"];
	55 -- 56;
	52	 [label="operator:+
childNum:0
code:a + b
type:AdditiveExpression
functionId:2"];
	50 -- 52;
	51	 [label="childNum:1
code:5
type:PrimaryExpression
functionId:2"];
	50 -- 51;
	48	 [label="childNum:0
code:c
type:Identifier
functionId:2"];
	41 -- 48;
	42	 [label="childNum:1
code:abs ( a )
type:CallExpression
functionId:2"];
	41 -- 42;
	40	 [label="childNum:0
code:!
type:UnaryOperator
functionId:2"];
	38 -- 40;
	39	 [label="childNum:1
code:a
type:Identifier
functionId:2"];
	38 -- 39;
	30	 [label="operator:<
childNum:0
code:a - b < 0
type:RelationalExpression
functionId:2"];
	26 -- 30;
	27	 [label="operator:<=
childNum:1
code:c <= 5
type:RelationalExpression
functionId:2"];
	26 -- 27;
	20	 [label="operator:<<
childNum:0
code:cout << \"hello world\" << endl
type:ShiftExpression
functionId:2"];
	19 -- 20;
	59	 [label="childNum:0
code:a
type:Identifier
functionId:2"];
	57 -- 59;
	58	 [label="childNum:1
code:b
type:Identifier
functionId:2"];
	57 -- 58;
	54	 [label="childNum:0
code:a
type:Identifier
functionId:2"];
	52 -- 54;
	53	 [label="childNum:1
code:b
type:Identifier
functionId:2"];
	52 -- 53;
	46	 [label="childNum:0
code:abs
type:Callee
functionId:2"];
	42 -- 46;
	43	 [label="childNum:1
code:a
type:ArgumentList
functionId:2"];
	42 -- 43;
	32	 [label="operator:-
childNum:0
code:a - b
type:AdditiveExpression
functionId:2"];
	30 -- 32;
	31	 [label="childNum:1
code:0
type:PrimaryExpression
functionId:2"];
	30 -- 31;
	29	 [label="childNum:0
code:c
type:Identifier
functionId:2"];
	27 -- 29;
	28	 [label="childNum:1
code:5
type:PrimaryExpression
functionId:2"];
	27 -- 28;
	24	 [label="childNum:0
code:cout
type:Identifier
functionId:2"];
	20 -- 24;
	21	 [label="operator:<<
childNum:1
code:\"hello world\" << endl
type:ShiftExpression
functionId:2"];
	20 -- 21;
	47	 [label="childNum:0
code:abs
type:Identifier
functionId:2"];
	46 -- 47;
	44	 [label="childNum:0
code:a
type:Argument
functionId:2"];
	43 -- 44;
	34	 [label="childNum:0
code:a
type:Identifier
functionId:2"];
	32 -- 34;
	33	 [label="childNum:1
code:b
type:Identifier
functionId:2"];
	32 -- 33;
	23	 [label="childNum:0
code:\"hello world\"
type:PrimaryExpression
functionId:2"];
	21 -- 23;
	22	 [label="childNum:1
code:endl
type:Identifier
functionId:2"];
	21 -- 22;
	45	 [label="childNum:0
code:a
type:Identifier
functionId:2"];
	44 -- 45;
	3	 [label="childNum:0
code:main (int a , int b)
type:FunctionDef
functionId:2"];
	3 -- 12;
	3 -- 11;
	3 -- 4;
}

//###
